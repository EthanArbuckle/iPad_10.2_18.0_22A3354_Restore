void *sub_1BB4C36D0()
{
  return sub_1BB4CB6B0((void (*)(_QWORD))sub_1BA76BBF4);
}

void *sub_1BB4C36DC()
{
  return sub_1BA6A7710((void (*)(_QWORD))sub_1BA6B3D08);
}

void *sub_1BB4C36E8()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for FormatOption, (void (*)(_QWORD, double))sub_1BA791CF4, (void (*)(unint64_t, char *))sub_1BA900B30, (void (*)(char *, unint64_t))sub_1BA8569CC);
}

id sub_1BB4C370C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1BB4CEDFC(0, (unint64_t *)&qword_1ED39EA88, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C38BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB4CCD3C();
  v24 = v0;
  v5 = *v0;
  v6 = sub_1BB873F48();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BB4C3AE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BA968CEC();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain();
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C3C88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1BA8F63DC();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C3E30()
{
  return sub_1BB4CAB9C((uint64_t (*)(_QWORD))MEMORY[0x1E0DB48B0], (void (*)(_QWORD, double))sub_1BA8F5BFC);
}

void *sub_1BB4C3E44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  _OWORD v32[6];
  uint64_t v33;

  v1 = v0;
  sub_1BA7ABE08();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v31 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 104 * v15;
    sub_1BA4C2DD8(*(_QWORD *)(v2 + 56) + 104 * v15, (uint64_t)v32, (uint64_t (*)(_QWORD))sub_1BA785ECC);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    v22 = *(_QWORD *)(v4 + 56) + v20;
    v23 = v32[2];
    v24 = v32[1];
    *(_OWORD *)v22 = v32[0];
    v25 = v32[3];
    v26 = v32[4];
    v27 = v32[5];
    *(_QWORD *)(v22 + 96) = v33;
    *(_OWORD *)(v22 + 64) = v26;
    *(_OWORD *)(v22 + 80) = v27;
    *(_OWORD *)(v22 + 32) = v23;
    *(_OWORD *)(v22 + 48) = v25;
    *(_OWORD *)(v22 + 16) = v24;
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v31;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BB4C4058()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1BA80109C();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C41FC()
{
  return sub_1BB4CB6B0((void (*)(_QWORD))sub_1BA6C3EEC);
}

void *sub_1BB4C4208()
{
  return sub_1BB4CB6B0((void (*)(_QWORD))sub_1BA6C3CCC);
}

void *sub_1BB4C4214()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;

  v1 = v0;
  sub_1BB4CD498(0, (unint64_t *)&unk_1EF2C5208, &qword_1EF2C5200, (uint64_t)&type metadata for PuzzleStatsInfo.StatValue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v33 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v13)
      goto LABEL_26;
    v34 = *(_QWORD *)(v6 + 8 * v33);
    ++v9;
    if (!v34)
    {
      v9 = v33 + 1;
      if (v33 + 1 >= v13)
        goto LABEL_26;
      v34 = *(_QWORD *)(v6 + 8 * v9);
      if (!v34)
        break;
    }
LABEL_25:
    v12 = (v34 - 1) & v34;
    v15 = __clz(__rbit64(v34)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 112 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)(v21 + 96);
    v23 = *(_BYTE *)(v21 + 104);
    v24 = *(_BYTE *)(v21 + 105);
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v26 = *(_OWORD *)v21;
    v27 = *(_OWORD *)(v21 + 16);
    v28 = *(_OWORD *)(v21 + 32);
    v29 = *(_OWORD *)(v21 + 48);
    v30 = *(_OWORD *)(v21 + 64);
    v31 = *(_OWORD *)(v21 + 80);
    *v25 = v19;
    v25[1] = v18;
    v32 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v32 = v26;
    *(_OWORD *)(v32 + 16) = v27;
    *(_OWORD *)(v32 + 32) = v28;
    *(_OWORD *)(v32 + 48) = v29;
    *(_OWORD *)(v32 + 64) = v30;
    *(_OWORD *)(v32 + 80) = v31;
    *(_QWORD *)(v32 + 96) = v22;
    *(_BYTE *)(v32 + 104) = v23;
    *(_BYTE *)(v32 + 105) = v24;
    result = (void *)swift_bridgeObjectRetain();
  }
  v35 = v33 + 2;
  if (v35 >= v13)
    goto LABEL_26;
  v34 = *(_QWORD *)(v6 + 8 * v35);
  if (v34)
  {
    v9 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v34 = *(_QWORD *)(v6 + 8 * v9);
    ++v35;
    if (v34)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C4410()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_1BB4CEA30();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = 8 * v15;
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v17);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v17) = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C45B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1BA8F5B98();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C4754()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _QWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int16 v50;

  v1 = v0;
  sub_1BA8F6924(0, (unint64_t *)&unk_1EF2C5080, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v38 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v38 >= v13)
      goto LABEL_26;
    v39 = *(_QWORD *)(v6 + 8 * v38);
    ++v9;
    if (!v39)
    {
      v9 = v38 + 1;
      if (v38 + 1 >= v13)
        goto LABEL_26;
      v39 = *(_QWORD *)(v6 + 8 * v9);
      if (!v39)
        break;
    }
LABEL_25:
    v12 = (v39 - 1) & v39;
    v15 = __clz(__rbit64(v39)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 152 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_OWORD *)(v21 + 32);
    v23 = *(_OWORD *)(v21 + 48);
    v24 = *(_OWORD *)(v21 + 80);
    v45 = *(_OWORD *)(v21 + 64);
    v46 = v24;
    v44 = v23;
    v26 = *(_OWORD *)(v21 + 112);
    v25 = *(_OWORD *)(v21 + 128);
    v27 = *(_OWORD *)(v21 + 96);
    v50 = *(_WORD *)(v21 + 144);
    v48 = v26;
    v49 = v25;
    v47 = v27;
    v28 = *(_OWORD *)(v21 + 16);
    v41 = *(_OWORD *)v21;
    v42 = v28;
    v43 = v22;
    v29 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v29 = v19;
    v29[1] = v18;
    v30 = *(_QWORD *)(v4 + 56) + v20;
    v31 = v42;
    *(_OWORD *)v30 = v41;
    *(_OWORD *)(v30 + 16) = v31;
    v32 = v43;
    v33 = v44;
    v34 = v46;
    *(_OWORD *)(v30 + 64) = v45;
    *(_OWORD *)(v30 + 80) = v34;
    *(_OWORD *)(v30 + 32) = v32;
    *(_OWORD *)(v30 + 48) = v33;
    v35 = v47;
    v36 = v48;
    v37 = v49;
    *(_WORD *)(v30 + 144) = v50;
    *(_OWORD *)(v30 + 112) = v36;
    *(_OWORD *)(v30 + 128) = v37;
    *(_OWORD *)(v30 + 96) = v35;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BA9F06B0((uint64_t)&v41);
  }
  v40 = v38 + 2;
  if (v40 >= v13)
    goto LABEL_26;
  v39 = *(_QWORD *)(v6 + 8 * v40);
  if (v39)
  {
    v9 = v40;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v39 = *(_QWORD *)(v6 + 8 * v9);
    ++v40;
    if (v39)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C4994()
{
  return sub_1BB4CAB9C((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], (void (*)(_QWORD, double))sub_1BA8F57F8);
}

void *sub_1BB4C49A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_1BA8F56CC();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C4B30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_1BA8F5730();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C4CB8()
{
  return sub_1BB4C4CC4((void (*)(_QWORD))sub_1BB4CCDD0);
}

void *sub_1BB4C4CC4(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  _OWORD *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  __int128 v30;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v27 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v14)
      goto LABEL_26;
    v28 = *(_QWORD *)(v7 + 8 * v27);
    ++v10;
    if (!v28)
    {
      v10 = v27 + 1;
      if (v27 + 1 >= v14)
        goto LABEL_26;
      v28 = *(_QWORD *)(v7 + 8 * v10);
      if (!v28)
        break;
    }
LABEL_25:
    v13 = (v28 - 1) & v28;
    v16 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 48 * v16;
    v22 = (__int128 *)(*(_QWORD *)(v3 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    v24 = *v22;
    v30 = v22[1];
    v25 = v22[2];
    *v23 = v20;
    v23[1] = v19;
    v26 = (_OWORD *)(*(_QWORD *)(v5 + 56) + v21);
    *v26 = v24;
    v26[1] = v30;
    v26[2] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v14)
    goto LABEL_26;
  v28 = *(_QWORD *)(v7 + 8 * v29);
  if (v28)
  {
    v10 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v28 = *(_QWORD *)(v7 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C4EDC()
{
  return sub_1BB4C94EC((void (*)(_QWORD))sub_1BB4CDEA4);
}

void *sub_1BB4C4EE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  sub_1BB4CE628();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 32 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    v25 = v21[2];
    v24 = v21[3];
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v26 = v18;
    v26[1] = v19;
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v27 = v22;
    v27[1] = v23;
    v27[2] = v25;
    v27[3] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C50B8()
{
  return sub_1BB4C73DC((unint64_t *)&unk_1ED3AB368, (unint64_t *)&qword_1ED3AAF50, (uint64_t)&type metadata for SportsConfigResourceEmbed);
}

void *sub_1BB4C50D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  BOOL v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  void *__src;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1BB4CE5C4();
  v38 = v0;
  v1 = *v0;
  v2 = sub_1BB873F48();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    v37 = v3;
    result = (void *)swift_release();
    *v38 = v37;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 64);
  v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  v42 = v3;
  if (v6)
  {
    result = memmove(result, __src, 8 * v5);
    v3 = v42;
  }
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v40 = (unint64_t)(v8 + 63) >> 6;
  v41 = v1;
  while (1)
  {
    if (v10)
    {
      v43 = (v10 - 1) & v10;
      v44 = v7;
      v11 = __clz(__rbit64(v10)) | (v7 << 6);
      v12 = v41;
      v3 = v42;
      goto LABEL_12;
    }
    v33 = v7 + 1;
    v12 = v41;
    v3 = v42;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v40)
      goto LABEL_26;
    v34 = *((_QWORD *)__src + v33);
    v35 = v7 + 1;
    if (!v34)
    {
      v35 = v7 + 2;
      if (v7 + 2 >= v40)
        goto LABEL_26;
      v34 = *((_QWORD *)__src + v35);
      if (!v34)
        break;
    }
LABEL_25:
    v43 = (v34 - 1) & v34;
    v44 = v35;
    v11 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_12:
    v13 = 16 * v11;
    v14 = (uint64_t *)(*(_QWORD *)(v12 + 48) + 16 * v11);
    v16 = *v14;
    v15 = v14[1];
    v17 = 112 * v11;
    v18 = (uint64_t *)(*(_QWORD *)(v12 + 56) + v17);
    v19 = *v18;
    v20 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    v23 = v18[4];
    v24 = v18[5];
    v25 = v18[6];
    v26 = v18[7];
    v27 = v18[8];
    v28 = v18[9];
    v29 = v18[11];
    v46 = v18[10];
    v30 = v18[13];
    v45 = v18[12];
    v31 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v13);
    *v31 = v16;
    v31[1] = v15;
    v32 = (_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *v32 = v19;
    v32[1] = v20;
    v32[2] = v21;
    v32[3] = v22;
    v32[4] = v23;
    v32[5] = v24;
    v32[6] = v25;
    v32[7] = v26;
    v32[8] = v27;
    v32[9] = v28;
    v32[10] = v46;
    v32[11] = v29;
    v32[12] = v45;
    v32[13] = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAA3501C(v21, v22);
    swift_bridgeObjectRetain();
    result = (void *)sub_1BAA3510C(v26, v27, v28, v46);
    v10 = v43;
    v7 = v44;
  }
  v36 = v7 + 3;
  if (v7 + 3 >= v40)
    goto LABEL_26;
  v34 = *((_QWORD *)__src + v36);
  if (v34)
  {
    v35 = v7 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v35 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v35 >= v40)
      goto LABEL_26;
    v34 = *((_QWORD *)__src + v35);
    ++v36;
    if (v34)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C5354()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption, (void (*)(_QWORD, double))sub_1BB4CDBDC, (void (*)(unint64_t, char *))sub_1BAA73640, (void (*)(char *, unint64_t))sub_1BA8E5414);
}

void *sub_1BB4C5378()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;

  v1 = v0;
  sub_1BB4CDB78();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      v9 = v36 + 1;
      if (v36 + 1 >= v13)
        goto LABEL_26;
      v37 = *(_QWORD *)(v6 + 8 * v9);
      if (!v37)
        break;
    }
LABEL_25:
    v12 = (v37 - 1) & v37;
    v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v18;
    v19 = v18[1];
    v21 = v15 << 7;
    v22 = *(_OWORD *)(v17 + v21 + 112);
    v24 = *(_OWORD *)(v17 + v21 + 64);
    v23 = *(_OWORD *)(v17 + v21 + 80);
    v45 = *(_OWORD *)(v17 + v21 + 96);
    v46 = v22;
    v43 = v24;
    v44 = v23;
    v26 = *(_OWORD *)(v17 + v21);
    v25 = *(_OWORD *)(v17 + v21 + 16);
    v27 = *(_OWORD *)(v17 + v21 + 48);
    v41 = *(_OWORD *)(v17 + v21 + 32);
    v42 = v27;
    v39 = v26;
    v40 = v25;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v28 = v20;
    v28[1] = v19;
    v29 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v21);
    v30 = v39;
    v31 = v40;
    v32 = v42;
    v29[2] = v41;
    v29[3] = v32;
    *v29 = v30;
    v29[1] = v31;
    v33 = v43;
    v34 = v44;
    v35 = v46;
    v29[6] = v45;
    v29[7] = v35;
    v29[4] = v33;
    v29[5] = v34;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BAF020A4((uint64_t)&v39);
  }
  v38 = v36 + 2;
  if (v38 >= v13)
    goto LABEL_26;
  v37 = *(_QWORD *)(v6 + 8 * v38);
  if (v37)
  {
    v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v9);
    ++v38;
    if (v37)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C5570()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  unsigned __int8 v25;
  _OWORD *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  __int128 v30;

  v1 = v0;
  sub_1BA8F6924(0, &qword_1EF2C5198, (void (*)(void))sub_1BB4CD890);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 3 * v15;
    v17 = 8 * v16;
    v18 = *(_QWORD *)(v2 + 48) + 8 * v16;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v16 *= 16;
    v21 = (__int128 *)(*(_QWORD *)(v2 + 56) + v16);
    v22 = *(_QWORD *)(v4 + 48) + v17;
    v23 = *v21;
    v30 = v21[1];
    v24 = v21[2];
    v25 = *(_BYTE *)(v18 + 16);
    *(_QWORD *)v22 = *(_QWORD *)v18;
    *(_QWORD *)(v22 + 8) = v20;
    *(_BYTE *)(v22 + 16) = v25;
    v26 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v26 = v23;
    v26[1] = v30;
    v26[2] = v24;
    sub_1BA987528(v19, v20, v25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C57AC()
{
  return sub_1BB4CB6B0((void (*)(_QWORD))sub_1BB4CD9C8);
}

void *sub_1BB4C57B8()
{
  return sub_1BB4C73DC((unint64_t *)&qword_1ED39ED00, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968]);
}

void *sub_1BB4C57D4()
{
  return sub_1BA6E3744((void (*)(_QWORD))sub_1BB4CDCBC);
}

void *sub_1BB4C57E0()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult, (void (*)(_QWORD, double))sub_1BB4CDC40, (void (*)(unint64_t, char *))sub_1BB4CDCA4, (void (*)(char *, unint64_t))sub_1BB4CDCB0);
}

void *sub_1BB4C5804()
{
  return sub_1BB4C6DA4((void (*)(_QWORD))sub_1BB4CDAC0);
}

void *sub_1BB4C5810()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for WebEmbedDatastoreCacheKey();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8F5620();
  v5 = *v0;
  v6 = sub_1BB873F48();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_1BA4C2DD8(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_1BA5193C4((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BB4C5A44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _QWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v1 = v0;
  sub_1BA8F6924(0, &qword_1EF2C50C0, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v38 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v38 >= v13)
      goto LABEL_26;
    v39 = *(_QWORD *)(v6 + 8 * v38);
    ++v9;
    if (!v39)
    {
      v9 = v38 + 1;
      if (v38 + 1 >= v13)
        goto LABEL_26;
      v39 = *(_QWORD *)(v6 + 8 * v9);
      if (!v39)
        break;
    }
LABEL_25:
    v12 = (v39 - 1) & v39;
    v15 = __clz(__rbit64(v39)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 152 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_OWORD *)(v21 + 32);
    v23 = *(_OWORD *)(v21 + 48);
    v24 = *(_OWORD *)(v21 + 80);
    v45 = *(_OWORD *)(v21 + 64);
    v46 = v24;
    v44 = v23;
    v26 = *(_OWORD *)(v21 + 112);
    v25 = *(_OWORD *)(v21 + 128);
    v27 = *(_OWORD *)(v21 + 96);
    v50 = *(_QWORD *)(v21 + 144);
    v48 = v26;
    v49 = v25;
    v47 = v27;
    v28 = *(_OWORD *)(v21 + 16);
    v41 = *(_OWORD *)v21;
    v42 = v28;
    v43 = v22;
    v29 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v29 = v19;
    v29[1] = v18;
    v30 = *(_QWORD *)(v4 + 56) + v20;
    v31 = v42;
    *(_OWORD *)v30 = v41;
    *(_OWORD *)(v30 + 16) = v31;
    v32 = v43;
    v33 = v44;
    v34 = v46;
    *(_OWORD *)(v30 + 64) = v45;
    *(_OWORD *)(v30 + 80) = v34;
    *(_OWORD *)(v30 + 32) = v32;
    *(_OWORD *)(v30 + 48) = v33;
    v35 = v47;
    v36 = v48;
    v37 = v49;
    *(_QWORD *)(v30 + 144) = v50;
    *(_OWORD *)(v30 + 112) = v36;
    *(_OWORD *)(v30 + 128) = v37;
    *(_OWORD *)(v30 + 96) = v35;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BAADEEC0((uint64_t)&v41);
  }
  v40 = v38 + 2;
  if (v40 >= v13)
    goto LABEL_26;
  v39 = *(_QWORD *)(v6 + 8 * v40);
  if (v39)
  {
    v9 = v40;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v39 = *(_QWORD *)(v6 + 8 * v9);
    ++v40;
    if (v39)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C5C84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;

  sub_1BA8F6924(0, &qword_1EF2C50D0, (void (*)(void))sub_1BA834FF0);
  v31 = v0;
  v1 = *v0;
  v2 = sub_1BB873F48();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v31 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v28 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v12)
      goto LABEL_26;
    v29 = *(_QWORD *)(v5 + 8 * v28);
    ++v8;
    if (!v29)
    {
      v8 = v28 + 1;
      if (v28 + 1 >= v12)
        goto LABEL_26;
      v29 = *(_QWORD *)(v5 + 8 * v8);
      if (!v29)
        break;
    }
LABEL_25:
    v11 = (v29 - 1) & v29;
    v14 = __clz(__rbit64(v29)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v14);
    v17 = *v16;
    v18 = v16[1];
    v19 = 48 * v14;
    v20 = *(_QWORD *)(v1 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v20 + 24);
    v25 = *(_QWORD *)(v20 + 32);
    LOBYTE(v20) = *(_BYTE *)(v20 + 40);
    v26 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v15);
    *v26 = v17;
    v26[1] = v18;
    v27 = *(_QWORD *)(v3 + 56) + v19;
    *(_QWORD *)v27 = v21;
    *(_QWORD *)(v27 + 8) = v22;
    *(_QWORD *)(v27 + 16) = v23;
    *(_QWORD *)(v27 + 24) = v24;
    *(_QWORD *)(v27 + 32) = v25;
    *(_BYTE *)(v27 + 40) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA5E7FF4(v24);
    result = (void *)sub_1BA5E7FF4(v25);
  }
  v30 = v28 + 2;
  if (v30 >= v12)
    goto LABEL_26;
  v29 = *(_QWORD *)(v5 + 8 * v30);
  if (v29)
  {
    v8 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v29 = *(_QWORD *)(v5 + 8 * v8);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C5EA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  BOOL v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  _QWORD *v26;
  char v27;
  char v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_1BA8F6924(0, (unint64_t *)&unk_1EF2C5090, (void (*)(void))sub_1BA834FF0);
  v34 = v0;
  v1 = *v0;
  v2 = sub_1BB873F48();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    v33 = v3;
    result = (void *)swift_release();
    *v34 = v33;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  v37 = v3;
  if (v6)
  {
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    v3 = v37;
  }
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v35 = (unint64_t)(v8 + 63) >> 6;
  v36 = v1 + 64;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      v3 = v37;
      goto LABEL_12;
    }
    v30 = v7 + 1;
    v3 = v37;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v35)
      goto LABEL_26;
    v31 = *(_QWORD *)(v36 + 8 * v30);
    ++v7;
    if (!v31)
    {
      v7 = v30 + 1;
      if (v30 + 1 >= v35)
        goto LABEL_26;
      v31 = *(_QWORD *)(v36 + 8 * v7);
      if (!v31)
        break;
    }
LABEL_25:
    v10 = (v31 - 1) & v31;
    v12 = __clz(__rbit64(v31)) + (v7 << 6);
LABEL_12:
    v13 = 16 * v12;
    v14 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v12);
    v16 = *v14;
    v15 = v14[1];
    v17 = v12 << 6;
    v18 = *(_QWORD *)(v1 + 56) + v17;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = *(_QWORD *)(v18 + 40);
    v24 = *(_QWORD *)(v18 + 48);
    v25 = *(_WORD *)(v18 + 57);
    v26 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v13);
    v27 = *(_BYTE *)(v18 + 32);
    v28 = *(_BYTE *)(v18 + 56);
    *v26 = v16;
    v26[1] = v15;
    v29 = *(_QWORD *)(v3 + 56) + v17;
    *(_QWORD *)v29 = v19;
    *(_QWORD *)(v29 + 8) = v20;
    *(_QWORD *)(v29 + 16) = v21;
    *(_QWORD *)(v29 + 24) = v22;
    *(_BYTE *)(v29 + 32) = v27;
    *(_QWORD *)(v29 + 40) = v23;
    *(_QWORD *)(v29 + 48) = v24;
    *(_BYTE *)(v29 + 56) = v28;
    *(_WORD *)(v29 + 57) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v21, v22, v27);
    result = (void *)sub_1BA6E6C54(v23, v24, v28);
  }
  v32 = v30 + 2;
  if (v32 >= v35)
    goto LABEL_26;
  v31 = *(_QWORD *)(v36 + 8 * v32);
  if (v31)
  {
    v7 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v7 >= v35)
      goto LABEL_26;
    v31 = *(_QWORD *)(v36 + 8 * v7);
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C60FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  sub_1BA8F5D28();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 48 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v24 = *(_QWORD *)(v21 + 24);
    v23 = *(_QWORD *)(v21 + 32);
    v25 = *(_QWORD *)(v21 + 40);
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v27 = *(_OWORD *)(v21 + 8);
    *v26 = v19;
    v26[1] = v18;
    v28 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v28 = v22;
    *(_OWORD *)(v28 + 8) = v27;
    *(_QWORD *)(v28 + 24) = v24;
    *(_QWORD *)(v28 + 32) = v23;
    *(_QWORD *)(v28 + 40) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C6304()
{
  return sub_1BB4CB6B0((void (*)(_QWORD))sub_1BA8F5924);
}

void *sub_1BB4C6310()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_1BA8F5988();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1BAF1E538(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1BA747A10(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1BA76EAE0(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BB4C64F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1BB4CD2EC(0, &qword_1EF2C50F0, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerManager, (void (*)(void))sub_1BB4CD840);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BB4C66BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BA81BE84();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C6858()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BA81BEF8();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C69F4()
{
  return sub_1BA6E3744((void (*)(_QWORD))sub_1BB4CE1E8);
}

void *sub_1BB4C6A00()
{
  return sub_1BA6E3744((void (*)(_QWORD))sub_1BB4CEB28);
}

id sub_1BB4C6A0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_1BA8F6924(0, (unint64_t *)&unk_1ED3B9A70, (void (*)(void))sub_1BA822498);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 16 * v15;
    v17 = *(void **)v16;
    LOBYTE(v16) = *(_BYTE *)(v16 + 8);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v18 = *(_QWORD *)(v4 + 56) + 16 * v15;
    *(_QWORD *)v18 = v17;
    *(_BYTE *)(v18 + 8) = v16;
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BB4C6BD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BB4CD2EC(0, (unint64_t *)&qword_1ED3B9A48, (void (*)(uint64_t))type metadata accessor for FormatLayoutView, (void (*)(void))sub_1BA8262E8);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_bridgeObjectRetain();
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C6D98()
{
  return sub_1BB4C6DA4((void (*)(_QWORD))sub_1BB4CE68C);
}

void *sub_1BB4C6DA4(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C6F44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BB4CEC54();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BB4C70E0()
{
  return sub_1BB4CB870((void (*)(_QWORD))sub_1BA8F5F84);
}

void *sub_1BB4C70EC()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for SharedItem, (void (*)(_QWORD, double))sub_1BB4CE77C, (void (*)(unint64_t, char *))sub_1BAF52AB4, (void (*)(char *, unint64_t))sub_1BAF52BCC);
}

void *sub_1BB4C7110()
{
  return sub_1BB4CA7DC((void (*)(_QWORD))sub_1BA6D0184, (void (*)(_BYTE *, uint64_t))sub_1BA4CECCC);
}

void *sub_1BB4C7124()
{
  return sub_1BA6E3744((void (*)(_QWORD))sub_1BB4CDDA0);
}

id sub_1BB4C7130()
{
  return sub_1BB4CB870((void (*)(_QWORD))sub_1BB4CE478);
}

void *sub_1BB4C713C()
{
  return sub_1BA7F2324(type metadata accessor for FeedClusteringOptions, (void (*)(_QWORD, double))sub_1BA8F6634, (void (*)(unint64_t, char *))sub_1BB4CE854, (void (*)(char *, unint64_t))sub_1BAF1EA50);
}

id sub_1BB4C7160()
{
  return sub_1BB4CB870((void (*)(_QWORD))sub_1BB4CE7E0);
}

void *sub_1BB4C716C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  char v56;

  v1 = v0;
  sub_1BA8F6924(0, &qword_1EF2C5078, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v42 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v42 >= v13)
      goto LABEL_26;
    v43 = *(_QWORD *)(v6 + 8 * v42);
    ++v9;
    if (!v43)
    {
      v9 = v42 + 1;
      if (v42 + 1 >= v13)
        goto LABEL_26;
      v43 = *(_QWORD *)(v6 + 8 * v9);
      if (!v43)
        break;
    }
LABEL_25:
    v12 = (v43 - 1) & v43;
    v15 = __clz(__rbit64(v43)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 184 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_OWORD *)(v21 + 112);
    v24 = *(_OWORD *)(v21 + 64);
    v23 = *(_OWORD *)(v21 + 80);
    v51 = *(_OWORD *)(v21 + 96);
    v52 = v22;
    v49 = v24;
    v50 = v23;
    v26 = *(_OWORD *)(v21 + 144);
    v25 = *(_OWORD *)(v21 + 160);
    v27 = *(_OWORD *)(v21 + 128);
    v56 = *(_BYTE *)(v21 + 176);
    v54 = v26;
    v55 = v25;
    v53 = v27;
    v29 = *(_OWORD *)v21;
    v28 = *(_OWORD *)(v21 + 16);
    v30 = *(_OWORD *)(v21 + 48);
    v47 = *(_OWORD *)(v21 + 32);
    v48 = v30;
    v45 = v29;
    v46 = v28;
    v31 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v31 = v19;
    v31[1] = v18;
    v32 = *(_QWORD *)(v4 + 56) + v20;
    v33 = v45;
    v34 = v46;
    v35 = v48;
    *(_OWORD *)(v32 + 32) = v47;
    *(_OWORD *)(v32 + 48) = v35;
    *(_OWORD *)v32 = v33;
    *(_OWORD *)(v32 + 16) = v34;
    v36 = v49;
    v37 = v50;
    v38 = v52;
    *(_OWORD *)(v32 + 96) = v51;
    *(_OWORD *)(v32 + 112) = v38;
    *(_OWORD *)(v32 + 64) = v36;
    *(_OWORD *)(v32 + 80) = v37;
    v39 = v53;
    v40 = v54;
    v41 = v55;
    *(_BYTE *)(v32 + 176) = v56;
    *(_OWORD *)(v32 + 144) = v40;
    *(_OWORD *)(v32 + 160) = v41;
    *(_OWORD *)(v32 + 128) = v39;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BAC68298((uint64_t)&v45);
  }
  v44 = v42 + 2;
  if (v44 >= v13)
    goto LABEL_26;
  v43 = *(_QWORD *)(v6 + 8 * v44);
  if (v43)
  {
    v9 = v44;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v44 + 1;
    if (__OFADD__(v44, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v43 = *(_QWORD *)(v6 + 8 * v9);
    ++v44;
    if (v43)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C73C0()
{
  return sub_1BB4C73DC(&qword_1EF2C5240, &qword_1ED3ABC70, (uint64_t)&type metadata for SharedItemManager.ShareAttributionViewContext);
}

void *sub_1BB4C73DC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v4 = v3;
  sub_1BB4CD498(0, a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v5 = *v3;
  v6 = sub_1BB873F48();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v4 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v9 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v21 = v20[1];
    v22 = 8 * v18;
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
    v24 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v24 = *v20;
    v24[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
    goto LABEL_26;
  v26 = *(_QWORD *)(v9 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C75A0()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilingPackage, (void (*)(_QWORD, double))sub_1BA8F5A54, (void (*)(unint64_t, char *))sub_1BB4CD884, (void (*)(char *, unint64_t))sub_1BAF5785C);
}

void *sub_1BB4C75C4(unint64_t *a1, void (*a2)(void))
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  uint64_t v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;

  v3 = v2;
  sub_1BA8F6924(0, a1, a2);
  v4 = *v2;
  v5 = sub_1BB873F48();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v3 = v6;
    return result;
  }
  result = (void *)(v5 + 64);
  v8 = v4 + 64;
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v15)
      goto LABEL_26;
    v20 = *(_QWORD *)(v8 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v15)
        goto LABEL_26;
      v20 = *(_QWORD *)(v8 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v22 = __clz(__rbit64(v20));
    v14 = (v20 - 1) & v20;
    v17 = v22 + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v17);
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v17) = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v17) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v15)
    goto LABEL_26;
  v20 = *(_QWORD *)(v8 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v20 = *(_QWORD *)(v8 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C7760()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _QWORD *v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _OWORD v49[2];

  v1 = v0;
  sub_1BA8F6924(0, (unint64_t *)&unk_1EF2C5050, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v38 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v38 >= v13)
      goto LABEL_26;
    v39 = *(_QWORD *)(v6 + 8 * v38);
    ++v9;
    if (!v39)
    {
      v9 = v38 + 1;
      if (v38 + 1 >= v13)
        goto LABEL_26;
      v39 = *(_QWORD *)(v6 + 8 * v9);
      if (!v39)
        break;
    }
LABEL_25:
    v12 = (v39 - 1) & v39;
    v15 = __clz(__rbit64(v39)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v18;
    v19 = v18[1];
    v21 = 160 * v15;
    v22 = *(_OWORD *)(v17 + v21 + 32);
    v23 = *(_OWORD *)(v17 + v21 + 48);
    v24 = *(_OWORD *)(v17 + v21 + 80);
    v45 = *(_OWORD *)(v17 + v21 + 64);
    v46 = v24;
    v44 = v23;
    v26 = *(_OWORD *)(v17 + v21 + 112);
    v25 = *(_OWORD *)(v17 + v21 + 128);
    v27 = *(_OWORD *)(v17 + v21 + 96);
    *(_OWORD *)((char *)v49 + 9) = *(_OWORD *)(v17 + v21 + 137);
    v48 = v26;
    v49[0] = v25;
    v47 = v27;
    v28 = *(_OWORD *)(v17 + v21 + 16);
    v41 = *(_OWORD *)(v17 + v21);
    v42 = v28;
    v43 = v22;
    v29 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v29 = v20;
    v29[1] = v19;
    v30 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v21);
    v31 = v42;
    *v30 = v41;
    v30[1] = v31;
    v32 = v43;
    v33 = v44;
    v34 = v46;
    v30[4] = v45;
    v30[5] = v34;
    v30[2] = v32;
    v30[3] = v33;
    v35 = v47;
    v36 = v48;
    v37 = v49[0];
    *(_OWORD *)((char *)v30 + 137) = *(_OWORD *)((char *)v49 + 9);
    v30[7] = v36;
    v30[8] = v37;
    v30[6] = v35;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BAC68F14((uint64_t)&v41);
  }
  v40 = v38 + 2;
  if (v40 >= v13)
    goto LABEL_26;
  v39 = *(_QWORD *)(v6 + 8 * v40);
  if (v39)
  {
    v9 = v40;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v39 = *(_QWORD *)(v6 + 8 * v9);
    ++v40;
    if (v39)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C79A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v1 = v0;
  sub_1BA8F6924(0, &qword_1EF2C50B0, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v42 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v42 >= v13)
      goto LABEL_26;
    v43 = *(_QWORD *)(v6 + 8 * v42);
    ++v9;
    if (!v43)
    {
      v9 = v42 + 1;
      if (v42 + 1 >= v13)
        goto LABEL_26;
      v43 = *(_QWORD *)(v6 + 8 * v9);
      if (!v43)
        break;
    }
LABEL_25:
    v12 = (v43 - 1) & v43;
    v15 = __clz(__rbit64(v43)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v18;
    v19 = v18[1];
    v21 = 208 * v15;
    v23 = *(_OWORD *)(v17 + v21 + 16);
    v22 = *(_OWORD *)(v17 + v21 + 32);
    v24 = *(_OWORD *)(v17 + v21 + 64);
    v48 = *(_OWORD *)(v17 + v21 + 48);
    v49 = v24;
    v25 = *(_OWORD *)(v17 + v21 + 128);
    v27 = *(_OWORD *)(v17 + v21 + 80);
    v26 = *(_OWORD *)(v17 + v21 + 96);
    v52 = *(_OWORD *)(v17 + v21 + 112);
    v53 = v25;
    v50 = v27;
    v51 = v26;
    v28 = *(_OWORD *)(v17 + v21 + 192);
    v30 = *(_OWORD *)(v17 + v21 + 144);
    v29 = *(_OWORD *)(v17 + v21 + 160);
    v56 = *(_OWORD *)(v17 + v21 + 176);
    v57 = v28;
    v54 = v30;
    v55 = v29;
    v45 = *(_OWORD *)(v17 + v21);
    v46 = v23;
    v47 = v22;
    v31 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v31 = v20;
    v31[1] = v19;
    v32 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v21);
    *v32 = v45;
    v33 = v46;
    v34 = v47;
    v35 = v49;
    v32[3] = v48;
    v32[4] = v35;
    v32[1] = v33;
    v32[2] = v34;
    v36 = v50;
    v37 = v51;
    v38 = v53;
    v32[7] = v52;
    v32[8] = v38;
    v32[5] = v36;
    v32[6] = v37;
    v39 = v54;
    v40 = v55;
    v41 = v57;
    v32[11] = v56;
    v32[12] = v41;
    v32[9] = v39;
    v32[10] = v40;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BAC687E4((uint64_t)&v45);
  }
  v44 = v42 + 2;
  if (v44 >= v13)
    goto LABEL_26;
  v43 = *(_QWORD *)(v6 + 8 * v44);
  if (v43)
  {
    v9 = v44;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v44 + 1;
    if (__OFADD__(v44, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v43 = *(_QWORD *)(v6 + 8 * v9);
    ++v44;
    if (v43)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C7BF8()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile, (void (*)(_QWORD, double))sub_1BB4CD8D4, (void (*)(unint64_t, char *))sub_1BB1AEDB4, (void (*)(char *, unint64_t))sub_1BB4CD938);
}

void *sub_1BB4C7C1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v1 = type metadata accessor for FormatDerivedDataFile();
  v35 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v34 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB4CD2EC(0, &qword_1EF2C5108, v3, (void (*)(void))sub_1BB4CD890);
  v31 = v0;
  v4 = *v0;
  v5 = sub_1BB873F48();
  v6 = *(_QWORD *)(v4 + 16);
  v36 = v5;
  if (!v6)
  {
    result = (void *)swift_release();
    v30 = v36;
    v29 = v31;
LABEL_28:
    *v29 = v30;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v36;
  }
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v32 = v4 + 64;
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = (uint64_t)v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v26 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v33)
      goto LABEL_26;
    v27 = *(_QWORD *)(v32 + 8 * v26);
    ++v11;
    if (!v27)
    {
      v11 = v26 + 1;
      if (v26 + 1 >= v33)
        goto LABEL_26;
      v27 = *(_QWORD *)(v32 + 8 * v11);
      if (!v27)
        break;
    }
LABEL_25:
    v14 = (v27 - 1) & v27;
    v17 = __clz(__rbit64(v27)) + (v11 << 6);
LABEL_12:
    v18 = 24 * v17;
    v19 = *(_QWORD *)(v4 + 48) + 24 * v17;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v35 + 72) * v17;
    v23 = *(_BYTE *)(v19 + 16);
    sub_1BA4C2DD8(*(_QWORD *)(v4 + 56) + v22, v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    v24 = v36;
    v25 = *(_QWORD *)(v36 + 48) + v18;
    *(_QWORD *)v25 = v20;
    *(_QWORD *)(v25 + 8) = v21;
    *(_BYTE *)(v25 + 16) = v23;
    sub_1BA5193C4(v15, *(_QWORD *)(v24 + 56) + v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    result = (void *)sub_1BA987528(v20, v21, v23);
  }
  v28 = v26 + 2;
  if (v28 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v29 = v31;
    v30 = v36;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v32 + 8 * v28);
  if (v27)
  {
    v11 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v27 = *(_QWORD *)(v32 + 8 * v11);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BB4C7EAC()
{
  return sub_1BB4CB870((void (*)(_QWORD))sub_1BB4CE708);
}

void *sub_1BB4C7EB8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _BYTE __dst[536];

  v1 = v0;
  sub_1BA8F6924(0, &qword_1EF2C5040, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 528 * v15;
    memcpy(__dst, (const void *)(*(_QWORD *)(v2 + 56) + 528 * v15), 0x210uLL);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    memcpy((void *)(*(_QWORD *)(v4 + 56) + v20), __dst, 0x210uLL);
    swift_bridgeObjectRetain();
    result = (void *)sub_1BAC67FA0((uint64_t)__dst);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BB4C80CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v1 = v0;
  sub_1BA8F6924(0, &qword_1EF2C5038, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v42 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v42 >= v13)
      goto LABEL_26;
    v43 = *(_QWORD *)(v6 + 8 * v42);
    ++v9;
    if (!v43)
    {
      v9 = v42 + 1;
      if (v42 + 1 >= v13)
        goto LABEL_26;
      v43 = *(_QWORD *)(v6 + 8 * v9);
      if (!v43)
        break;
    }
LABEL_25:
    v12 = (v43 - 1) & v43;
    v15 = __clz(__rbit64(v43)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 200 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v23 = *(_OWORD *)(v21 + 16);
    v22 = *(_OWORD *)(v21 + 32);
    v24 = *(_OWORD *)(v21 + 64);
    v48 = *(_OWORD *)(v21 + 48);
    v49 = v24;
    v25 = *(_OWORD *)(v21 + 128);
    v27 = *(_OWORD *)(v21 + 80);
    v26 = *(_OWORD *)(v21 + 96);
    v52 = *(_OWORD *)(v21 + 112);
    v53 = v25;
    v50 = v27;
    v51 = v26;
    v29 = *(_OWORD *)(v21 + 160);
    v28 = *(_OWORD *)(v21 + 176);
    v30 = *(_OWORD *)(v21 + 144);
    v57 = *(_QWORD *)(v21 + 192);
    v55 = v29;
    v56 = v28;
    v54 = v30;
    v45 = *(_OWORD *)v21;
    v46 = v23;
    v47 = v22;
    v31 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v31 = v19;
    v31[1] = v18;
    v32 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v32 = v45;
    v33 = v46;
    v34 = v47;
    v35 = v49;
    *(_OWORD *)(v32 + 48) = v48;
    *(_OWORD *)(v32 + 64) = v35;
    *(_OWORD *)(v32 + 16) = v33;
    *(_OWORD *)(v32 + 32) = v34;
    v36 = v50;
    v37 = v51;
    v38 = v53;
    *(_OWORD *)(v32 + 112) = v52;
    *(_OWORD *)(v32 + 128) = v38;
    *(_OWORD *)(v32 + 80) = v36;
    *(_OWORD *)(v32 + 96) = v37;
    v39 = v54;
    v40 = v55;
    v41 = v56;
    *(_QWORD *)(v32 + 192) = v57;
    *(_OWORD *)(v32 + 160) = v40;
    *(_OWORD *)(v32 + 176) = v41;
    *(_OWORD *)(v32 + 144) = v39;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BAC68490((uint64_t)&v45);
  }
  v44 = v42 + 2;
  if (v44 >= v13)
    goto LABEL_26;
  v43 = *(_QWORD *)(v6 + 8 * v44);
  if (v43)
  {
    v9 = v44;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v44 + 1;
    if (__OFADD__(v44, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v43 = *(_QWORD *)(v6 + 8 * v9);
    ++v44;
    if (v43)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C8330()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB4CD2EC(0, (unint64_t *)&unk_1EF2C5060, v5, (void (*)(void))sub_1BA834FF0);
  v6 = *v0;
  v7 = sub_1BB873F48();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v27 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v28 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v29 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    v24 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v29)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v12;
    if (!v25)
    {
      v12 = v24 + 1;
      if (v24 + 1 >= v29)
        goto LABEL_26;
      v25 = *(_QWORD *)(v28 + 8 * v12);
      if (!v25)
        break;
    }
LABEL_25:
    v15 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v12 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_1BA4C2DD8(*(_QWORD *)(v6 + 56) + v22, (uint64_t)v4, type metadata accessor for FormatItemNodeStyle.Selector);
    v23 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v18);
    *v23 = v20;
    v23[1] = v21;
    sub_1BA5193C4((uint64_t)v4, *(_QWORD *)(v8 + 56) + v22, type metadata accessor for FormatItemNodeStyle.Selector);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v29)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v12 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v12 >= v29)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v12);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BB4C8590()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;

  v1 = v0;
  sub_1BA8F6924(0, &qword_1EF2C5070, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      v9 = v31 + 1;
      if (v31 + 1 >= v13)
        goto LABEL_26;
      v32 = *(_QWORD *)(v6 + 8 * v9);
      if (!v32)
        break;
    }
LABEL_25:
    v12 = (v32 - 1) & v32;
    v15 = __clz(__rbit64(v32)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_BYTE *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = *(unsigned __int8 *)(v21 + 34);
    v27 = *(unsigned __int16 *)(v21 + 32);
    v28 = v27 | (v26 << 16);
    LOBYTE(v21) = *(_BYTE *)(v21 + 35);
    v29 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v29 = v19;
    v29[1] = v18;
    v30 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v30 = v22;
    *(_QWORD *)(v30 + 8) = v23;
    *(_BYTE *)(v30 + 16) = v24;
    *(_QWORD *)(v30 + 24) = v25;
    *(_BYTE *)(v30 + 34) = v26;
    *(_WORD *)(v30 + 32) = v27;
    *(_BYTE *)(v30 + 35) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)sub_1BA771834(v25, v28);
  }
  v33 = v31 + 2;
  if (v33 >= v13)
    goto LABEL_26;
  v32 = *(_QWORD *)(v6 + 8 * v33);
  if (v32)
  {
    v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v9);
    ++v33;
    if (v32)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C87AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[26];

  v1 = v0;
  sub_1BA8F6924(0, &qword_1EF2C50A8, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      v9 = v36 + 1;
      if (v36 + 1 >= v13)
        goto LABEL_26;
      v37 = *(_QWORD *)(v6 + 8 * v9);
      if (!v37)
        break;
    }
LABEL_25:
    v12 = (v37 - 1) & v37;
    v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v18;
    v19 = v18[1];
    v21 = 144 * v15;
    v23 = *(_OWORD *)(v17 + v21 + 16);
    v22 = *(_OWORD *)(v17 + v21 + 32);
    v24 = *(_OWORD *)(v17 + v21 + 64);
    v42 = *(_OWORD *)(v17 + v21 + 48);
    v43 = v24;
    v26 = *(_OWORD *)(v17 + v21 + 96);
    v25 = *(_OWORD *)(v17 + v21 + 112);
    v27 = *(_OWORD *)(v17 + v21 + 80);
    *(_OWORD *)&v46[10] = *(_OWORD *)(v17 + v21 + 122);
    v45 = v26;
    *(_OWORD *)v46 = v25;
    v44 = v27;
    v39 = *(_OWORD *)(v17 + v21);
    v40 = v23;
    v41 = v22;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v28 = v20;
    v28[1] = v19;
    v29 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v21);
    *v29 = v39;
    v30 = v40;
    v31 = v41;
    v32 = v43;
    v29[3] = v42;
    v29[4] = v32;
    v29[1] = v30;
    v29[2] = v31;
    v33 = v44;
    v34 = v45;
    v35 = *(_OWORD *)v46;
    *(_OWORD *)((char *)v29 + 122) = *(_OWORD *)&v46[10];
    v29[6] = v34;
    v29[7] = v35;
    v29[5] = v33;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BAC690CC((uint64_t)&v39);
  }
  v38 = v36 + 2;
  if (v38 >= v13)
    goto LABEL_26;
  v37 = *(_QWORD *)(v6 + 8 * v38);
  if (v37)
  {
    v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v9);
    ++v38;
    if (v37)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C89E8()
{
  return sub_1BB4C8C24(&qword_1EF2C50B8);
}

void *sub_1BB4C89FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int v26;
  char v27;
  _QWORD *v28;
  __int128 v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;

  v1 = v0;
  sub_1BA8F6924(0, &qword_1EF2C5048, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      v9 = v31 + 1;
      if (v31 + 1 >= v13)
        goto LABEL_26;
      v32 = *(_QWORD *)(v6 + 8 * v9);
      if (!v32)
        break;
    }
LABEL_25:
    v12 = (v32 - 1) & v32;
    v15 = __clz(__rbit64(v32)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 56 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_BYTE *)(v21 + 32);
    v25 = *(_QWORD *)(v21 + 40);
    v26 = *(_DWORD *)(v21 + 48);
    v27 = *(_BYTE *)(v21 + 52);
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v29 = *(_OWORD *)(v21 + 16);
    *v28 = v18;
    v28[1] = v19;
    v30 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v30 = v22;
    *(_QWORD *)(v30 + 8) = v23;
    *(_OWORD *)(v30 + 16) = v29;
    *(_BYTE *)(v30 + 32) = v24;
    *(_QWORD *)(v30 + 40) = v25;
    *(_BYTE *)(v30 + 52) = v27;
    *(_DWORD *)(v30 + 48) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v33 = v31 + 2;
  if (v33 >= v13)
    goto LABEL_26;
  v32 = *(_QWORD *)(v6 + 8 * v33);
  if (v32)
  {
    v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v9);
    ++v33;
    if (v32)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C8C10()
{
  return sub_1BB4C8C24(&qword_1EF2C50C8);
}

void *sub_1BB4C8C24(unint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char v54;

  v2 = v1;
  sub_1BA8F6924(0, a1, (void (*)(void))sub_1BA834FF0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v41 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v41 >= v14)
      goto LABEL_26;
    v42 = *(_QWORD *)(v7 + 8 * v41);
    ++v10;
    if (!v42)
    {
      v10 = v41 + 1;
      if (v41 + 1 >= v14)
        goto LABEL_26;
      v42 = *(_QWORD *)(v7 + 8 * v10);
      if (!v42)
        break;
    }
LABEL_25:
    v13 = (v42 - 1) & v42;
    v16 = __clz(__rbit64(v42)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 168 * v16;
    v22 = *(_QWORD *)(v3 + 56) + v21;
    v23 = *(_OWORD *)(v22 + 96);
    v25 = *(_OWORD *)(v22 + 48);
    v24 = *(_OWORD *)(v22 + 64);
    v49 = *(_OWORD *)(v22 + 80);
    v50 = v23;
    v47 = v25;
    v48 = v24;
    v27 = *(_OWORD *)(v22 + 128);
    v26 = *(_OWORD *)(v22 + 144);
    v28 = *(_OWORD *)(v22 + 112);
    v54 = *(_BYTE *)(v22 + 160);
    v52 = v27;
    v53 = v26;
    v51 = v28;
    v30 = *(_OWORD *)(v22 + 16);
    v29 = *(_OWORD *)(v22 + 32);
    v44 = *(_OWORD *)v22;
    v45 = v30;
    v46 = v29;
    v31 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v31 = v20;
    v31[1] = v19;
    v32 = *(_QWORD *)(v5 + 56) + v21;
    v33 = v44;
    v34 = v46;
    *(_OWORD *)(v32 + 16) = v45;
    *(_OWORD *)(v32 + 32) = v34;
    *(_OWORD *)v32 = v33;
    v35 = v47;
    v36 = v48;
    v37 = v50;
    *(_OWORD *)(v32 + 80) = v49;
    *(_OWORD *)(v32 + 96) = v37;
    *(_OWORD *)(v32 + 48) = v35;
    *(_OWORD *)(v32 + 64) = v36;
    v38 = v51;
    v39 = v52;
    v40 = v53;
    *(_BYTE *)(v32 + 160) = v54;
    *(_OWORD *)(v32 + 128) = v39;
    *(_OWORD *)(v32 + 144) = v40;
    *(_OWORD *)(v32 + 112) = v38;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BAC6926C((uint64_t)&v44);
  }
  v43 = v41 + 2;
  if (v43 >= v14)
    goto LABEL_26;
  v42 = *(_QWORD *)(v7 + 8 * v43);
  if (v42)
  {
    v10 = v43;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v42 = *(_QWORD *)(v7 + 8 * v10);
    ++v43;
    if (v42)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C8E70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  char v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;

  sub_1BA8F6924(0, (unint64_t *)&unk_1EF2C50D8, (void (*)(void))sub_1BA834FF0);
  v32 = v0;
  v1 = *v0;
  v2 = sub_1BB873F48();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v32 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v29 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v12)
      goto LABEL_26;
    v30 = *(_QWORD *)(v5 + 8 * v29);
    ++v8;
    if (!v30)
    {
      v8 = v29 + 1;
      if (v29 + 1 >= v12)
        goto LABEL_26;
      v30 = *(_QWORD *)(v5 + 8 * v8);
      if (!v30)
        break;
    }
LABEL_25:
    v11 = (v30 - 1) & v30;
    v14 = __clz(__rbit64(v30)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v14);
    v18 = *v16;
    v17 = v16[1];
    v19 = 40 * v14;
    v20 = *(_QWORD *)(v1 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v20 + 24);
    v25 = *(_BYTE *)(v20 + 33);
    v26 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v15);
    v27 = *(_BYTE *)(v20 + 32);
    *v26 = v18;
    v26[1] = v17;
    v28 = *(_QWORD *)(v3 + 56) + v19;
    *(_QWORD *)v28 = v21;
    *(_QWORD *)(v28 + 8) = v22;
    *(_QWORD *)(v28 + 16) = v23;
    *(_QWORD *)(v28 + 24) = v24;
    *(_BYTE *)(v28 + 32) = v27;
    *(_BYTE *)(v28 + 33) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)sub_1BA6E6C54(v23, v24, v27);
  }
  v31 = v29 + 2;
  if (v31 >= v12)
    goto LABEL_26;
  v30 = *(_QWORD *)(v5 + 8 * v31);
  if (v30)
  {
    v8 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v30 = *(_QWORD *)(v5 + 8 * v8);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C908C()
{
  return sub_1BB4C9DD4((void (*)(_QWORD))sub_1BB4CD3D4);
}

void *sub_1BB4C9098()
{
  return sub_1BA6E3744((void (*)(_QWORD))sub_1BB4CD058);
}

void *sub_1BB4C90A4()
{
  return sub_1BA6E3744((void (*)(_QWORD))sub_1BB4CD0BC);
}

void *sub_1BB4C90B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB4CD2EC(0, &qword_1EF2C4FE0, v5, (void (*)(void))sub_1BB4CD014);
  v24 = v0;
  v6 = *v0;
  v7 = sub_1BB873F48();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v8;
    return result;
  }
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v25 = v6 + 64;
  v26 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v12);
      if (!v21)
        break;
    }
LABEL_25:
    v15 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_12:
    v18 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v17);
    v19 = *(_QWORD *)(v2 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v6 + 56) + v19, v1);
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v8 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v12 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C92E8()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for SportsRoster, (void (*)(_QWORD, double))sub_1BB4CD184, (void (*)(unint64_t, char *))sub_1BB4CD1E8, (void (*)(char *, unint64_t))sub_1BB42BF10);
}

void *sub_1BB4C930C()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseEmbed, (void (*)(_QWORD, double))sub_1BA8F5AB8, (void (*)(unint64_t, char *))sub_1BB42A5BC, (void (*)(char *, unint64_t))sub_1BB4CD268);
}

void *sub_1BB4C9330()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1BB4CD120();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C94E0()
{
  return sub_1BB4C94EC((void (*)(_QWORD))sub_1BB4CD1F4);
}

void *sub_1BB4C94EC(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BB4C96A0()
{
  return sub_1BB4C96AC(sub_1BA76E804);
}

id sub_1BB4C96AC(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_26;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v19 = 32 * v16;
    sub_1BA747A10(*(_QWORD *)(v3 + 56) + 32 * v16, (uint64_t)v23);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    sub_1BA76EAE0(v23, (_OWORD *)(*(_QWORD *)(v5 + 56) + v19));
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v14)
    goto LABEL_26;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C9870()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  sub_1BB4CE4EC();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = v21[3];
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v26 = v19;
    v26[1] = v18;
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v27 = v22;
    v27[1] = v23;
    v27[2] = v24;
    v27[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C9A40()
{
  return sub_1BB4C9A4C((void (*)(_QWORD))sub_1BB4CD7DC);
}

void *sub_1BB4C9A4C(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = *v17;
    v18 = v17[1];
    LOBYTE(v17) = *(_BYTE *)(*(_QWORD *)(v3 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    *v20 = v19;
    v20[1] = v18;
    *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16) = (_BYTE)v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C9BF4()
{
  return sub_1BB4CB6B0((void (*)(_QWORD))sub_1BB4CE324);
}

void *sub_1BB4C9C00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  __int128 v25;

  v1 = v0;
  sub_1BB4CCF74();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v25 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v25;
    swift_bridgeObjectRetain();
    v21 = (id)v25;
    result = (void *)swift_unknownObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C9DC8()
{
  return sub_1BB4C9DD4(sub_1BA7C2DD0);
}

void *sub_1BB4C9DD4(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C9F74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_1BA8F6924(0, (unint64_t *)&unk_1EF2C4FD0, (void (*)(void))sub_1BA9ED5CC);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 8);
    v19 = *(_QWORD *)(v2 + 56) + v16;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v4 + 48) + v16;
    v23 = *(_OWORD *)(v17 + 16);
    v24 = *(_OWORD *)(v19 + 16);
    *(_QWORD *)v22 = *(_QWORD *)v17;
    *(_QWORD *)(v22 + 8) = v18;
    *(_OWORD *)(v22 + 16) = v23;
    v25 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v25 = v20;
    *(_QWORD *)(v25 + 8) = v21;
    *(_OWORD *)(v25 + 16) = v24;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4CA158()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;

  v1 = v0;
  sub_1BB4CDE40();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      v9 = v36 + 1;
      if (v36 + 1 >= v13)
        goto LABEL_26;
      v37 = *(_QWORD *)(v6 + 8 * v9);
      if (!v37)
        break;
    }
LABEL_25:
    v12 = (v37 - 1) & v37;
    v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v18;
    v19 = v18[1];
    v21 = v15 << 7;
    v22 = *(_OWORD *)(v17 + v21 + 112);
    v24 = *(_OWORD *)(v17 + v21 + 64);
    v23 = *(_OWORD *)(v17 + v21 + 80);
    v45 = *(_OWORD *)(v17 + v21 + 96);
    v46 = v22;
    v43 = v24;
    v44 = v23;
    v26 = *(_OWORD *)(v17 + v21);
    v25 = *(_OWORD *)(v17 + v21 + 16);
    v27 = *(_OWORD *)(v17 + v21 + 48);
    v41 = *(_OWORD *)(v17 + v21 + 32);
    v42 = v27;
    v39 = v26;
    v40 = v25;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v28 = v20;
    v28[1] = v19;
    v29 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v21);
    v30 = v39;
    v31 = v40;
    v32 = v42;
    v29[2] = v41;
    v29[3] = v32;
    *v29 = v30;
    v29[1] = v31;
    v33 = v43;
    v34 = v44;
    v35 = v46;
    v29[6] = v45;
    v29[7] = v35;
    v29[4] = v33;
    v29[5] = v34;
    swift_bridgeObjectRetain();
    result = sub_1BB0F0E74(&v39);
  }
  v38 = v36 + 2;
  if (v38 >= v13)
    goto LABEL_26;
  v37 = *(_QWORD *)(v6 + 8 * v38);
  if (v37)
  {
    v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v9);
    ++v38;
    if (v37)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4CA350()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;

  v1 = type metadata accessor for DebugFormatCacheFile();
  v30 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB4CD2EC(0, &qword_1EF2C51D8, v4, (void (*)(void))sub_1BA9ED498);
  v27 = v0;
  v5 = *v0;
  v6 = sub_1BB873F48();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v27 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v28 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v29 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v29)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v29)
        goto LABEL_26;
      v25 = *(_QWORD *)(v28 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v17 = 24 * v16;
    v18 = *(_QWORD *)(v5 + 48) + 24 * v16;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v30 + 72) * v16;
    v22 = *(_BYTE *)(v18 + 16);
    sub_1BB1AEDB4(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v3);
    v23 = *(_QWORD *)(v7 + 48) + v17;
    *(_QWORD *)v23 = v19;
    *(_QWORD *)(v23 + 8) = v20;
    *(_BYTE *)(v23 + 16) = v22;
    sub_1BB4CD938((uint64_t)v3, *(_QWORD *)(v7 + 56) + v21);
    result = (void *)sub_1BA9ED468(v19, v20, v22);
  }
  v26 = v24 + 2;
  if (v26 >= v29)
    goto LABEL_26;
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v29)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4CA5A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _OWORD v27[2];

  v1 = v0;
  sub_1BA8F6924(0, &qword_1ED3AB2A8, (void (*)(void))sub_1BB4CD798);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v2 + 64), 8 * v6);
  v26 = v2 + 64;
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v22 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v12)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v8;
    if (!v23)
    {
      v8 = v22 + 1;
      if (v22 + 1 >= v12)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v8);
      if (!v23)
        break;
    }
LABEL_25:
    v11 = (v23 - 1) & v23;
    v14 = __clz(__rbit64(v23)) + (v8 << 6);
LABEL_12:
    v15 = 24 * v14;
    v16 = *(_QWORD *)(v2 + 48) + 24 * v14;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_BYTE *)(v16 + 16);
    v20 = 32 * v14;
    sub_1BA747A10(*(_QWORD *)(v2 + 56) + 32 * v14, (uint64_t)v27);
    v21 = *(_QWORD *)(v4 + 48) + v15;
    *(_QWORD *)v21 = v17;
    *(_QWORD *)(v21 + 8) = v18;
    *(_BYTE *)(v21 + 16) = v19;
    sub_1BA76EAE0(v27, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)sub_1BAF92B74();
  }
  v24 = v22 + 2;
  if (v24 >= v12)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v8 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v8);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BB4CA7C8()
{
  return sub_1BB4CA7DC((void (*)(_QWORD))sub_1BB4CE2B0, (void (*)(_BYTE *, uint64_t))sub_1BA4CECCC);
}

void *sub_1BB4CA7DC(void (*a1)(_QWORD), void (*a2)(_BYTE *, uint64_t))
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  uint64_t v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  _BYTE v29[40];

  v3 = v2;
  a1(0);
  v4 = *v2;
  v5 = sub_1BB873F48();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v3 = v6;
    return result;
  }
  v27 = v3;
  result = (void *)(v5 + 64);
  v8 = v4 + 64;
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v8 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v8 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = 40 * v17;
    sub_1BA4C010C(*(_QWORD *)(v4 + 56) + 40 * v17, (uint64_t)v29);
    v23 = (_QWORD *)(*(_QWORD *)(v6 + 48) + v18);
    *v23 = v20;
    v23[1] = v21;
    a2(v29, *(_QWORD *)(v6 + 56) + v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v3 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v8 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v8 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BB4CA9CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _BYTE v22[16];

  v1 = v0;
  sub_1BA81BFD8();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    sub_1BB4CD274(*(_QWORD *)(v2 + 56) + 16 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_1BA498758((uint64_t)v22, *(_QWORD *)(v4 + 56) + v18);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4CAB88()
{
  return sub_1BB4CAB9C((uint64_t (*)(_QWORD))MEMORY[0x1E0DDAA80], (void (*)(_QWORD, double))sub_1BB4CE110);
}

void *sub_1BB4CAB9C(uint64_t (*a1)(_QWORD), void (*a2)(_QWORD, double))
{
  uint64_t *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;

  v38 = a1(0);
  v4 = *(_QWORD *)(v38 - 8);
  v5 = MEMORY[0x1E0C80A78](v38);
  v7 = (char *)&v34 - v6;
  a2(0, v5);
  v35 = v2;
  v8 = *v2;
  v9 = sub_1BB873F48();
  v10 = *(_QWORD *)(v8 + 16);
  v39 = v9;
  if (!v10)
  {
    result = (void *)swift_release();
    v33 = v39;
    v32 = v35;
LABEL_28:
    *v32 = v33;
    return result;
  }
  v11 = v9;
  result = (void *)(v9 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    v11 = v39;
  }
  v36 = v8 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v16 = 1 << *(_BYTE *)(v8 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v8 + 64);
  v37 = (unint64_t)(v16 + 63) >> 6;
  v19 = v38;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v29 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v37)
      goto LABEL_26;
    v30 = *(_QWORD *)(v36 + 8 * v29);
    ++v15;
    if (!v30)
    {
      v15 = v29 + 1;
      if (v29 + 1 >= v37)
        goto LABEL_26;
      v30 = *(_QWORD *)(v36 + 8 * v15);
      if (!v30)
        break;
    }
LABEL_25:
    v18 = (v30 - 1) & v30;
    v21 = __clz(__rbit64(v30)) + (v15 << 6);
LABEL_12:
    v22 = 16 * v21;
    v23 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v25 = *v23;
    v24 = v23[1];
    v26 = *(_QWORD *)(v4 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v7, *(_QWORD *)(v8 + 56) + v26, v19);
    v27 = v39;
    v28 = (_QWORD *)(*(_QWORD *)(v39 + 48) + v22);
    *v28 = v25;
    v28[1] = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v27 + 56) + v26, v7, v19);
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v37)
  {
LABEL_26:
    result = (void *)swift_release();
    v32 = v35;
    v33 = v39;
    goto LABEL_28;
  }
  v30 = *(_QWORD *)(v36 + 8 * v31);
  if (v30)
  {
    v15 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v15 >= v37)
      goto LABEL_26;
    v30 = *(_QWORD *)(v36 + 8 * v15);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BB4CADF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_1BB4CDD3C();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BB4CAF80()
{
  return sub_1BB4CB870((void (*)(_QWORD))sub_1BB4CE174);
}

void *sub_1BB4CAF8C()
{
  return sub_1BB4CAF98((void (*)(_QWORD))sub_1BA8F604C);
}

void *sub_1BB4CAF98(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BB4CB140()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  sub_1BB4CE0AC();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = *((id *)&v24 + 1);
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BB4CB308()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  __int128 v24;
  uint64_t v25;
  id v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  __int128 v30;

  v1 = v0;
  sub_1BB4CE048();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(void **)(v21 + 16);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v30 = *(_OWORD *)v21;
    v24 = *(_OWORD *)v21;
    *v23 = v18;
    v23[1] = v19;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v25 = v24;
    *(_QWORD *)(v25 + 16) = v22;
    v26 = v22;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = *((id *)&v30 + 1);
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4CB4F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;

  v1 = v0;
  sub_1BB4CE550(0, &qword_1EF2C51B8, type metadata accessor for CGRect, (void (*)(void))sub_1BB4CDD20);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v25 = __clz(__rbit64(v23));
    v12 = (v23 - 1) & v23;
    v15 = v25 + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = 8 * v15;
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v18);
    v20 = (_OWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v21 = v17[1];
    *v20 = *v17;
    v20[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4CB6A4()
{
  return sub_1BB4CB6B0((void (*)(_QWORD))sub_1BB4CDF80);
}

void *sub_1BB4CB6B0(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BB4CB864()
{
  return sub_1BB4CB870((void (*)(_QWORD))sub_1BB4CDF0C);
}

id sub_1BB4CB870(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t (*sub_1BB4CBA20(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BB4CBC18(v6, a2, a3);
  return sub_1BAB42824;
}

uint64_t (*sub_1BB4CBA74(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BB4CBC84(v6, a2, a3);
  return sub_1BAB42824;
}

uint64_t (*sub_1BB4CBAC8(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BB4CBCF0(v6, a2, a3);
  return sub_1BAB42824;
}

uint64_t (*sub_1BB4CBB1C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BB4CBD5C(v6, a2, a3);
  return sub_1BAB42824;
}

uint64_t (*sub_1BB4CBB70(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BB4CCBE8(v6, a2, a3);
  return sub_1BAB42824;
}

uint64_t (*sub_1BB4CBBC4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BB4CCC54(v6, a2, a3);
  return sub_1BAB42824;
}

uint64_t (*sub_1BB4CBC18(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCE4630](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain();
LABEL_5:
    *v3 = v4;
    return destroy for FollowingNotificationContext;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1BB4CBC84(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCE4630](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return j__s8NewsFeed18PuzzleStatsServiceC13UpdatingStateOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1BB4CBCF0(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCE4630](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s8NewsFeed9FeedIssueV9OverridesV5ImageVwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1BB4CBD5C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCE4630](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain();
LABEL_5:
    *v3 = v4;
    return destroy for SportsStandingDataVisualizationMetadata;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB4CBDC8(uint64_t a1, uint64_t a2)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
}

uint64_t sub_1BB4CBDD4(uint64_t a1, uint64_t a2)
{
  return sub_1BA5193C4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
}

unint64_t sub_1BB4CBDE0()
{
  unint64_t result;

  result = qword_1ED3B8250;
  if (!qword_1ED3B8250)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentPoolPlaceholder, &type metadata for FormatContentPoolPlaceholder);
    atomic_store(result, (unint64_t *)&qword_1ED3B8250);
  }
  return result;
}

unint64_t sub_1BB4CBE24()
{
  unint64_t result;

  result = qword_1ED3CDC98;
  if (!qword_1ED3CDC98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentPoolSlotPlaceholder, &type metadata for FormatContentPoolSlotPlaceholder);
    atomic_store(result, (unint64_t *)&qword_1ED3CDC98);
  }
  return result;
}

uint64_t type metadata accessor for FormatContentPool()
{
  uint64_t result;

  result = qword_1ED3C0A78;
  if (!qword_1ED3C0A78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatContentPool(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    v8 = a2[6];
    a1[5] = a2[5];
    a1[6] = v8;
    v9 = a2[8];
    a1[7] = a2[7];
    a1[8] = v9;
    v10 = a2[10];
    a1[9] = a2[9];
    a1[10] = v10;
    v11 = a2[12];
    a1[11] = a2[11];
    a1[12] = v11;
    v12 = a2[14];
    a1[13] = a2[13];
    a1[14] = v12;
    v13 = a2[16];
    a1[15] = a2[15];
    a1[16] = v13;
    v14 = a2[19];
    v24 = a2[18];
    a1[17] = a2[17];
    a1[18] = v24;
    v15 = a2[20];
    v16 = *(int *)(a3 + 100);
    v25 = (char *)a1 + v16;
    v17 = (char *)a2 + v16;
    a1[19] = v14;
    a1[20] = v15;
    v18 = sub_1BB871E24();
    v22 = *(_QWORD *)(v18 - 8);
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    v19 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v17, 1, v19))
    {
      sub_1BA6D940C(0);
      memcpy(v25, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v17, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v19);
    }
  }
  return v5;
}

uint64_t destroy for FormatContentPool(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 100);
  v5 = sub_1BB871E24();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for FormatContentPool(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  v13 = a2[20];
  v21 = a2[19];
  a1[18] = a2[18];
  a1[19] = v21;
  v14 = *(int *)(a3 + 100);
  v22 = (char *)a1 + v14;
  v15 = (char *)a2 + v14;
  a1[20] = v13;
  v16 = sub_1BB871E24();
  v19 = *(_QWORD *)(v16 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20(v15, 1, v16))
  {
    sub_1BA6D940C(0);
    memcpy(v22, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v16);
  }
  return a1;
}

_QWORD *assignWithCopy for FormatContentPool(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 100);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB871E24();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA6D940C(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for FormatContentPool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  const void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  v9 = *(int *)(a3 + 100);
  v10 = (const void *)(a2 + v9);
  v11 = (void *)(a1 + v9);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v12 = sub_1BB871E24();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
  {
    sub_1BA6D940C(0);
    memcpy(v11, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v11, v10, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  }
  return a1;
}

_QWORD *assignWithTake for FormatContentPool(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 100);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB871E24();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA6D940C(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatContentPool()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB4CCA4C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA6D940C(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 100)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FormatContentPool()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB4CCAD4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1BA6D940C(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 100)], a2, a2, v7);
  }
  return result;
}

void sub_1BB4CCB48()
{
  unint64_t v0;

  sub_1BA6D940C(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void (*sub_1BB4CCBE8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCE4630](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for FeedIssue.Overrides.Image;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1BB4CCC54(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCE4630](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return destroy for PuzzleStatsService.UpdatingState;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB4CCCC0(double a1, double a2, double a3, double a4)
{
  CGRectStandardize(*(CGRect *)&a1);
  sub_1BB8745FC();
  sub_1BB8745FC();
  sub_1BB8745FC();
  return sub_1BB8745FC();
}

void sub_1BB4CCD3C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF2C4F50)
  {
    sub_1BB86C67C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    type metadata accessor for WebEmbedDataVisualizationDataServiceFailure();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v0, MEMORY[0x1E0CB0018]);
    v1 = sub_1BB873F78();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF2C4F50);
  }
}

void sub_1BB4CCDD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4F58)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4F58);
  }
}

uint64_t sub_1BB4CCE34(uint64_t a1, uint64_t a2)
{
  assignWithTake for PuzzleTypeStats(a2, a1);
  return a2;
}

uint64_t sub_1BB4CCE70()
{
  return sub_1BA4A2870(&qword_1EF2C4F80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D48], MEMORY[0x1E0D60D68]);
}

void sub_1BB4CCE8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4F88)
  {
    sub_1BA49A224(255, &qword_1EF2C4F90);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4F88);
  }
}

void sub_1BB4CCF00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4F98)
  {
    sub_1BA49A224(255, &qword_1EF2C4FA0);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4F98);
  }
}

void sub_1BB4CCF74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4FA8)
  {
    sub_1BB3FEDD8();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4FA8);
  }
}

uint64_t sub_1BB4CCFD8(uint64_t a1, uint64_t a2)
{
  assignWithTake for FeedItemAuxiliary(a2, a1);
  return a2;
}

unint64_t sub_1BB4CD014()
{
  unint64_t result;

  result = qword_1EF2C4FE8;
  if (!qword_1EF2C4FE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F4834, &type metadata for DebugFormatCacheDirectory);
    atomic_store(result, (unint64_t *)&qword_1EF2C4FE8);
  }
  return result;
}

void sub_1BB4CD058()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4FF0)
  {
    type metadata accessor for FormatPackageInventory();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4FF0);
  }
}

void sub_1BB4CD0BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4FF8)
  {
    type metadata accessor for DebugFormatPackageInventory();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4FF8);
  }
}

void sub_1BB4CD120()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB2F0)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB2F0);
  }
}

void sub_1BB4CD184()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB2E8)
  {
    type metadata accessor for SportsRoster();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB2E8);
  }
}

uint64_t sub_1BB4CD1E8(uint64_t a1, uint64_t a2)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
}

void sub_1BB4CD1F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB388)
  {
    sub_1BA4EFE00(255, (unint64_t *)&qword_1ED3AB1E0);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB388);
  }
}

uint64_t sub_1BB4CD268(uint64_t a1, uint64_t a2)
{
  return sub_1BA5193C4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseEmbed);
}

uint64_t sub_1BB4CD274(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PuzzleGameCenterListenerType(a2, a1);
  return a2;
}

uint64_t sub_1BB4CD2B0(uint64_t a1, uint64_t a2)
{
  assignWithTake for PuzzleGameCenterListenerType(a2, a1);
  return a2;
}

void sub_1BB4CD2EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BB873F78();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB4CD360()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5000)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B99A0);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5000);
  }
}

void sub_1BB4CD3D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5008)
  {
    sub_1BA4B07F0(255, &qword_1EF2C5010, type metadata accessor for DebugFormatTestCaseResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA82DC80();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5008);
  }
}

unint64_t sub_1BB4CD454()
{
  unint64_t result;

  result = qword_1EF2C5020;
  if (!qword_1EF2C5020)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB926FB4, &type metadata for DebugFormatTestCaseResultSeverity);
    atomic_store(result, (unint64_t *)&qword_1EF2C5020);
  }
  return result;
}

void sub_1BB4CD498(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA4AD288(255, a3, a4, a5);
    v6 = sub_1BB873F78();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB4CD500()
{
  return sub_1BA4A2870(&qword_1ED39EDC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6158], MEMORY[0x1E0DB6168]);
}

void sub_1BB4CD51C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D2BE8)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D2BE8);
  }
}

void sub_1BB4CD580()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF7F0)
  {
    type metadata accessor for FormatJson();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF7F0);
  }
}

uint64_t sub_1BB4CD5E4(uint64_t a1, uint64_t a2)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
}

void sub_1BB4CD5F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF7F8)
  {
    type metadata accessor for FormatScopedOption();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF7F8);
  }
}

uint64_t sub_1BB4CD654(uint64_t a1, uint64_t a2)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatScopedOption);
}

uint64_t sub_1BB4CD660(uint64_t a1, uint64_t a2)
{
  return sub_1BA5193C4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatScopedOption);
}

void sub_1BB4CD66C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFA88)
  {
    type metadata accessor for FormatStateViewNodeStateLayoutAttributes();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFA88);
  }
}

void sub_1BB4CD6D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFAF0)
  {
    type metadata accessor for CGRect(255);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFAF0);
  }
}

void sub_1BB4CD734()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFAA0)
  {
    type metadata accessor for FormatSlot();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFAA0);
  }
}

unint64_t sub_1BB4CD798()
{
  unint64_t result;

  result = qword_1ED3A71C0;
  if (!qword_1ED3A71C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91DDA4, &type metadata for FormatDisplayLinkObject.Key);
    atomic_store(result, (unint64_t *)&qword_1ED3A71C0);
  }
  return result;
}

void sub_1BB4CD7DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C50E8)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C50E8);
  }
}

unint64_t sub_1BB4CD840()
{
  unint64_t result;

  result = qword_1EF2C50F8;
  if (!qword_1EF2C50F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90BA10, &type metadata for FormatVideoPlayerReuseManagerCacheKey);
    atomic_store(result, (unint64_t *)&qword_1EF2C50F8);
  }
  return result;
}

uint64_t sub_1BB4CD884(uint64_t a1, uint64_t a2)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilingPackage);
}

unint64_t sub_1BB4CD890()
{
  unint64_t result;

  result = qword_1EF2C5110;
  if (!qword_1EF2C5110)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDerivedDataFileKey, &type metadata for FormatDerivedDataFileKey);
    atomic_store(result, (unint64_t *)&qword_1EF2C5110);
  }
  return result;
}

void sub_1BB4CD8D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5118)
  {
    type metadata accessor for DebugFormatCacheFile();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5118);
  }
}

uint64_t sub_1BB4CD938(uint64_t a1, uint64_t a2)
{
  return sub_1BA5193C4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
}

void sub_1BB4CD944()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5120)
  {
    sub_1BA4CDF6C(255, &qword_1EF2C5128, (uint64_t (*)(void))sub_1BA865124, (uint64_t)&type metadata for FormatDerivedDataOptionScope, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5120);
  }
}

void sub_1BB4CD9C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5138)
  {
    sub_1BA4B07F0(255, &qword_1ED3B94F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5138);
  }
}

void sub_1BB4CDA44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5148)
  {
    sub_1BA4B07F0(255, (unint64_t *)&unk_1EF2C5150, (uint64_t (*)(uint64_t))sub_1BAC8739C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5148);
  }
}

void sub_1BB4CDAC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5160)
  {
    sub_1BA4B07F0(255, &qword_1EF2C5168, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataBinderResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5160);
  }
}

uint64_t sub_1BB4CDB3C(uint64_t a1, uint64_t a2)
{
  assignWithTake for FormatDerivedDataResultBlock(a2, a1);
  return a2;
}

void sub_1BB4CDB78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5180)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5180);
  }
}

void sub_1BB4CDBDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5190)
  {
    type metadata accessor for FormatDerivedDataOption();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5190);
  }
}

void sub_1BB4CDC40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C51A0)
  {
    type metadata accessor for FormatDerivedDataBindingSlotResult();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C51A0);
  }
}

uint64_t sub_1BB4CDCA4(uint64_t a1, uint64_t a2)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
}

uint64_t sub_1BB4CDCB0(uint64_t a1, uint64_t a2)
{
  return sub_1BA5193C4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
}

void sub_1BB4CDCBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C51A8)
  {
    type metadata accessor for FormatDerivedDataBindingNode();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C51A8);
  }
}

uint64_t sub_1BB4CDD20()
{
  return sub_1BA4A2870(&qword_1EF2C51C0, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C8]);
}

void sub_1BB4CDD3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C51C8)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C51C8);
  }
}

void sub_1BB4CDDA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFAD0)
  {
    type metadata accessor for FormatFrameNodeLayoutAttributes();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFAD0);
  }
}

uint64_t sub_1BB4CDE04(uint64_t a1, uint64_t a2)
{
  assignWithTake for DebugFormatFileSource(a2, a1);
  return a2;
}

void sub_1BB4CDE40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C51F0)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C51F0);
  }
}

void sub_1BB4CDEA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C51F8)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C51F8);
  }
}

void sub_1BB4CDF0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C070)
  {
    sub_1BA49A224(255, &qword_1ED3B9770);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C070);
  }
}

void sub_1BB4CDF80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C060)
  {
    sub_1BB4CDFE4();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C060);
  }
}

void sub_1BB4CDFE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B03D8)
  {
    sub_1BA49A224(255, &qword_1ED3B9770);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B03D8);
  }
}

void sub_1BB4CE048()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB2D0)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB2D0);
  }
}

void sub_1BB4CE0AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB2D8)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB2D8);
  }
}

void sub_1BB4CE110()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB2C0)
  {
    sub_1BB86D0F0();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB2C0);
  }
}

void sub_1BB4CE174()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB378)
  {
    sub_1BA49A224(255, &qword_1ED39DA60);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB378);
  }
}

void sub_1BB4CE1E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB318)
  {
    type metadata accessor for FormatDisplayLinkAnimation();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB318);
  }
}

void sub_1BB4CE24C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0BA0)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&unk_1ED3B0B90);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0BA0);
  }
}

void sub_1BB4CE2B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9AB0)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&unk_1ED3B0B90);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9AB0);
  }
}

void sub_1BB4CE324()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB358)
  {
    sub_1BA4B07F0(255, &qword_1ED3AADF0, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupConfigSidecar, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB358);
  }
}

uint64_t sub_1BB4CE3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1BB4CE404(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA4CDF6C(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v6 = sub_1BB873F78();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB4CE478()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFAE8)
  {
    sub_1BA49A224(255, &qword_1ED3CFA00);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFAE8);
  }
}

void sub_1BB4CE4EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5218)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5218);
  }
}

void sub_1BB4CE550(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BB873F78();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB4CE5C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB320)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB320);
  }
}

void sub_1BB4CE628()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5228)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5228);
  }
}

void sub_1BB4CE68C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE560)
  {
    sub_1BA4B07F0(255, &qword_1ED3AE4B8, type metadata accessor for WebEmbedViewController, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE560);
  }
}

void sub_1BB4CE708()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9B40)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9760);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9B40);
  }
}

void sub_1BB4CE77C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5230)
  {
    type metadata accessor for SharedItem();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5230);
  }
}

void sub_1BB4CE7E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39DB20)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B99C0);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39DB20);
  }
}

uint64_t sub_1BB4CE854(uint64_t a1, uint64_t a2)
{
  return sub_1BA4C2DD8(a1, a2, type metadata accessor for FeedClusteringOptions);
}

void sub_1BB4CE860()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3058)
  {
    type metadata accessor for FormatNodeAuxiliaryBinder(255);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3058);
  }
}

uint64_t sub_1BB4CE8C4(uint64_t a1, uint64_t a2)
{
  assignWithTake for FormatStateMachineBinding(a2, a1);
  return a2;
}

uint64_t sub_1BB4CE900(uint64_t a1, uint64_t a2)
{
  assignWithTake for FormatBindResult(a2, a1);
  return a2;
}

void sub_1BB4CE93C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5248)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9860);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5248);
  }
}

uint64_t sub_1BB4CE9B0(uint64_t a1, uint64_t a2)
{
  assignWithTake for FormatAttributedStringStyle(a2, a1);
  return a2;
}

unint64_t sub_1BB4CE9EC()
{
  unint64_t result;

  result = qword_1ED3A2B50;
  if (!qword_1ED3A2B50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90AD74, &type metadata for FormatAttributedString.StyleKey);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B50);
  }
  return result;
}

void sub_1BB4CEA30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5250)
  {
    type metadata accessor for CGSize(255);
    sub_1BB4CEAC4();
    sub_1BA4A2870((unint64_t *)&unk_1EF2C5260, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x1E0C9B9F8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5250);
  }
}

void sub_1BB4CEAC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5258)
  {
    type metadata accessor for CGSize(255);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5258);
  }
}

void sub_1BB4CEB28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFAC0)
  {
    type metadata accessor for FormatAccessibilityRenderer();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFAC0);
  }
}

void sub_1BB4CEB8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A0950)
  {
    sub_1BB4CEBF0();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A0950);
  }
}

void sub_1BB4CEBF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39ECE8)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9950);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39ECE8);
  }
}

void sub_1BB4CEC54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE550)
  {
    sub_1BA4B07F0(255, &qword_1ED3AD1B8, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DB4960]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE550);
  }
}

void sub_1BB4CECD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB398)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9990);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB398);
  }
}

void sub_1BB4CED44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39EA98)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B99A0);
    sub_1BB4CEDFC(255, &qword_1ED39EA00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
    sub_1BA865AD4(&qword_1ED39EA70, (unint64_t *)&qword_1ED3B99A0);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39EA98);
  }
}

void sub_1BB4CEDFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v6 = sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9990);
    v7 = sub_1BA49A224(255, (unint64_t *)&qword_1ED3B99A0);
    v8 = sub_1BA865AD4((unint64_t *)&qword_1ED39EA68, (unint64_t *)&qword_1ED3B9990);
    v9 = a3(a1, v6, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BB4CEEB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9B50)
  {
    sub_1BA4EFE00(255, (unint64_t *)&qword_1ED3D4450);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9B50);
  }
}

void sub_1BB4CEF2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A0958)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3BA820);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A0958);
  }
}

void sub_1BB4CEFA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9B48)
  {
    sub_1BA4EFE00(255, (unint64_t *)&qword_1ED3B9800);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9B48);
  }
}

void sub_1BB4CF014()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A1710)
  {
    sub_1BA4EFE00(255, (unint64_t *)&qword_1ED3CF910);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A1710);
  }
}

void sub_1BB4CF088()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA0F8)
  {
    sub_1BA4EFE00(255, (unint64_t *)&qword_1ED3CF990);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA0F8);
  }
}

void sub_1BB4CF0FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3ABCC0)
  {
    type metadata accessor for SportsScoreDataVisualization();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3ABCC0);
  }
}

void sub_1BB4CF160()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3ABCC8)
  {
    type metadata accessor for SportsStandingDataVisualization();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3ABCC8);
  }
}

void sub_1BB4CF1C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5270)
  {
    type metadata accessor for SportsBracketGroupDataVisualization();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5270);
  }
}

void sub_1BB4CF228()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5278)
  {
    type metadata accessor for SportsBoxScoreDataVisualization();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5278);
  }
}

void sub_1BB4CF28C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5280)
  {
    type metadata accessor for SportsLineScoreDataVisualization();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5280);
  }
}

void sub_1BB4CF2F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5288)
  {
    type metadata accessor for SportsInjuryReportDataVisualization();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5288);
  }
}

void sub_1BB4CF354()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5290)
  {
    type metadata accessor for SportsKeyPlayerDataVisualization();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5290);
  }
}

void sub_1BB4CF3B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4410)
  {
    type metadata accessor for FormatService.ThemePackage(255);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4410);
  }
}

void sub_1BB4CF41C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5298)
  {
    type metadata accessor for FormatContentResource.Resolved();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5298);
  }
}

void sub_1BB4CF480()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C058)
  {
    type metadata accessor for FormatWebArchiveResource.Resolved();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C058);
  }
}

void sub_1BB4CF4E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C04E0)
  {
    sub_1BA4B07F0(255, &qword_1ED3BBA78, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C04E0);
  }
}

_QWORD *FormatSolidFill.init(foreground:background:)@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  *a3 = *result;
  a3[1] = v3;
  return result;
}

unint64_t sub_1BB4CF580(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4CF5A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4CF5A4()
{
  unint64_t result;

  result = qword_1EF2C52A0;
  if (!qword_1EF2C52A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSolidFill, &type metadata for FormatSolidFill);
    atomic_store(result, (unint64_t *)&qword_1EF2C52A0);
  }
  return result;
}

unint64_t sub_1BB4CF5E8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA62C37C();
  a1[2] = sub_1BA610A5C();
  result = sub_1BB4CF61C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4CF61C()
{
  unint64_t result;

  result = qword_1EF2C52A8;
  if (!qword_1EF2C52A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSolidFill, &type metadata for FormatSolidFill);
    atomic_store(result, (unint64_t *)&qword_1EF2C52A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSolidFill()
{
  return &type metadata for FormatSolidFill;
}

uint64_t FormatMicaNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB4CF6EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  _OWORD *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  unint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  __int128 *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t *v45;
  _OWORD *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _QWORD *v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  __int128 *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  unsigned __int8 v96;
  char v97;
  __int128 v98;
  char v99;
  char v100;
  unint64_t v101;
  uint64_t v102;
  _BOOL8 v103;
  uint64_t v104;
  char v105;
  unint64_t v106;
  char v107;
  uint64_t v108;
  char v109;
  char v110;
  unint64_t v111;
  uint64_t v112;
  _BOOL8 v113;
  uint64_t v114;
  char v115;
  unint64_t v116;
  char v117;
  _QWORD *v118;
  __int128 *v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  _QWORD *v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  uint64_t *v140;
  _OWORD *v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  _QWORD *v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  __int128 *v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  unint64_t v179;
  unint64_t v180;
  _OWORD *v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unsigned int v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unsigned __int8 v200;
  unsigned __int8 v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  uint64_t v205;
  uint64_t result;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char v215;
  char v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD *v241;
  uint64_t v242;
  char v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  int64_t v259;
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  _OWORD v264[7];
  _OWORD v265[2];
  _QWORD *v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  _BYTE v274[26];
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  _BYTE v282[26];
  unint64_t v283;

  swift_beginAccess();
  v4 = v1[2];
  v3 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  swift_beginAccess();
  v211 = v1;
  v7 = v1[6];
  swift_beginAccess();
  v212 = a1;
  v8 = *(_QWORD *)(a1 + 48);
  v283 = MEMORY[0x1E0DEE9E0];
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v8 + 16);
  if (__OFADD__(v9, v10))
    goto LABEL_94;
  v208 = v5;
  v210 = v4;
  sub_1BB4D24A0();
  v209 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = (_OWORD *)v7;
  sub_1BB8727C0();
  v262 = sub_1BA6E6D30(0, v9, 0, MEMORY[0x1E0DEE9D8]);
  v12 = *(_QWORD *)(v7 + 16);
  v207 = v6;
  v213 = v8;
  if (!v12)
    goto LABEL_20;
  v259 = v10;
  swift_bridgeObjectRetain();
  v13 = v11[8];
  v280 = v11[7];
  v281 = v13;
  *(_OWORD *)v282 = v11[9];
  *(_OWORD *)&v282[10] = *(_OWORD *)((char *)v11 + 154);
  v14 = v11[3];
  v15 = v11[5];
  v16 = v11[6];
  v277 = v11[4];
  v278 = v15;
  v279 = v16;
  v275 = v11[2];
  v276 = v14;
  v17 = *((_QWORD *)&v275 + 1);
  v18 = v12 - 1;
  for (i = 11; ; i += 9)
  {
    v20 = v275;
    sub_1BAC690CC((uint64_t)&v275);
    sub_1BAC690CC((uint64_t)&v275);
    swift_bridgeObjectRetain();
    v21 = v283;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v264[0] = v21;
    v24 = sub_1BA6E35A8(v20, v17);
    v25 = *(_QWORD *)(v21 + 16);
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v28 = v23;
    if (*(_QWORD *)(v21 + 24) >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_1BB4C87AC();
        if ((v28 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_1BB4B8D60(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_1BA6E35A8(v20, v17);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_95;
      v24 = v29;
      if ((v28 & 1) != 0)
      {
LABEL_11:
        v31 = *(_QWORD **)&v264[0];
        v32 = (__int128 *)(*(_QWORD *)(*(_QWORD *)&v264[0] + 56) + 144 * v24);
        v267 = *v32;
        v33 = v32[4];
        v35 = v32[1];
        v34 = v32[2];
        v270 = v32[3];
        v271 = v33;
        v268 = v35;
        v269 = v34;
        v37 = v32[6];
        v36 = v32[7];
        v38 = v32[5];
        *(_OWORD *)&v274[10] = *(__int128 *)((char *)v32 + 122);
        v273 = v37;
        *(_OWORD *)v274 = v36;
        v272 = v38;
        sub_1BAC6919C((uint64_t)&v267);
        *v32 = v275;
        v39 = v279;
        v41 = v276;
        v40 = v277;
        v32[3] = v278;
        v32[4] = v39;
        v32[1] = v41;
        v32[2] = v40;
        v43 = v281;
        v42 = *(_OWORD *)v282;
        v44 = v280;
        *(__int128 *)((char *)v32 + 122) = *(_OWORD *)&v282[10];
        v32[6] = v43;
        v32[7] = v42;
        v32[5] = v44;
        goto LABEL_15;
      }
    }
    v31 = *(_QWORD **)&v264[0];
    *(_QWORD *)(*(_QWORD *)&v264[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v45 = (uint64_t *)(v31[6] + 16 * v24);
    *v45 = v20;
    v45[1] = v17;
    v46 = (_OWORD *)(v31[7] + 144 * v24);
    v47 = *(_OWORD *)&v282[10];
    v49 = v281;
    v48 = *(_OWORD *)v282;
    v46[5] = v280;
    v46[6] = v49;
    v46[7] = v48;
    *(_OWORD *)((char *)v46 + 122) = v47;
    v51 = v278;
    v50 = v279;
    v52 = v277;
    v46[1] = v276;
    v46[2] = v52;
    v46[3] = v51;
    v46[4] = v50;
    *v46 = v275;
    v53 = v31[2];
    v54 = __OFADD__(v53, 1);
    v55 = v53 + 1;
    if (v54)
      goto LABEL_90;
    v31[2] = v55;
    swift_bridgeObjectRetain();
LABEL_15:
    v283 = (unint64_t)v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = v262[2];
    v57 = v262[3];
    swift_bridgeObjectRetain();
    if (v56 >= v57 >> 1)
      v262 = sub_1BA6E6D30((_QWORD *)(v57 > 1), v56 + 1, 1, v262);
    v262[2] = v56 + 1;
    v58 = &v262[2 * v56];
    v58[4] = v20;
    v58[5] = v17;
    sub_1BAC6919C((uint64_t)&v275);
    if (!v18)
      break;
    v275 = v11[i];
    v59 = v11[i + 1];
    v60 = v11[i + 2];
    v61 = v11[i + 4];
    v278 = v11[i + 3];
    v279 = v61;
    v276 = v59;
    v277 = v60;
    v62 = v11[i + 5];
    v63 = v11[i + 6];
    v64 = v11[i + 7];
    *(_OWORD *)&v282[10] = *(_OWORD *)((char *)&v11[i + 7] + 10);
    v281 = v63;
    *(_OWORD *)v282 = v64;
    v280 = v62;
    v17 = *((_QWORD *)&v275 + 1);
    --v18;
  }
  swift_bridgeObjectRelease();
  v8 = v213;
  v10 = v259;
LABEL_20:
  v65 = sub_1BA6E6D30(0, v10, 0, MEMORY[0x1E0DEE9D8]);
  v66 = *(_QWORD *)(v8 + 16);
  if (!v66)
    goto LABEL_64;
  swift_bridgeObjectRetain();
  v67 = *(_OWORD *)(v8 + 128);
  v280 = *(_OWORD *)(v8 + 112);
  v281 = v67;
  *(_OWORD *)v282 = *(_OWORD *)(v8 + 144);
  *(_OWORD *)&v282[10] = *(_OWORD *)(v8 + 154);
  v68 = *(_OWORD *)(v8 + 48);
  v69 = *(_OWORD *)(v8 + 80);
  v70 = *(_OWORD *)(v8 + 96);
  v277 = *(_OWORD *)(v8 + 64);
  v278 = v69;
  v279 = v70;
  v275 = *(_OWORD *)(v8 + 32);
  v276 = v68;
  v71 = v66 - 1;
  v72 = *((_QWORD *)&v275 + 1);
  v260 = 176;
  while (2)
  {
    v73 = v275;
    v74 = (_QWORD *)v283;
    v75 = *(_QWORD *)(v283 + 16);
    sub_1BAC690CC((uint64_t)&v275);
    if (v75)
    {
      swift_bridgeObjectRetain();
      v76 = sub_1BA6E35A8(v73, v72);
      if ((v77 & 1) != 0)
      {
        v78 = (__int128 *)(v74[7] + 144 * v76);
        v267 = *v78;
        v79 = v78[3];
        v80 = v78[4];
        v81 = v78[2];
        v268 = v78[1];
        v269 = v81;
        v270 = v79;
        v271 = v80;
        v82 = v78[5];
        v83 = v78[6];
        v84 = v78[7];
        *(_OWORD *)&v274[10] = *(__int128 *)((char *)v78 + 122);
        v273 = v83;
        *(_OWORD *)v274 = v84;
        v272 = v82;
        sub_1BAC690CC((uint64_t)&v267);
        swift_bridgeObjectRelease();
        v85 = v268;
        if (!(_QWORD)v268)
          v85 = swift_bridgeObjectRetain();
        v214 = v85;
        v86 = *((_QWORD *)&v268 + 1);
        if (!*((_QWORD *)&v268 + 1))
          v86 = swift_bridgeObjectRetain();
        v221 = v86;
        v241 = v65;
        v88 = *((_QWORD *)&v269 + 1);
        v87 = v269;
        v89 = v270;
        v236 = *((_QWORD *)&v269 + 1);
        v238 = v269;
        v90 = v270;
        if (v270 >= 0xFEu)
        {
          v88 = *((_QWORD *)&v277 + 1);
          v87 = v277;
          v90 = v278;
          sub_1BA6E6C54(v277, *((uint64_t *)&v277 + 1), v278);
        }
        v216 = v90;
        v217 = v88;
        v219 = v87;
        v91 = *((_QWORD *)&v270 + 1);
        v92 = v271;
        v93 = *((_QWORD *)&v273 + 1);
        v94 = *(_OWORD *)v274;
        v95 = *(_QWORD *)&v274[16];
        v232 = v271;
        v234 = *((_QWORD *)&v270 + 1);
        v228 = v272;
        v230 = *((_QWORD *)&v271 + 1);
        v256 = v272;
        v257 = *((_QWORD *)&v271 + 1);
        v224 = v273;
        v226 = *((_QWORD *)&v272 + 1);
        v253 = v273;
        v255 = *((_QWORD *)&v272 + 1);
        v249 = *(_QWORD *)v274;
        v251 = *((_QWORD *)&v273 + 1);
        v245 = *(_QWORD *)&v274[16];
        v247 = *(_QWORD *)&v274[8];
        v96 = v274[24];
        v243 = v274[24];
        if (v274[24] == 254)
        {
          v91 = *((_QWORD *)&v278 + 1);
          v92 = v279;
          v243 = v282[24];
          v245 = *(_QWORD *)&v282[16];
          v247 = *(_QWORD *)&v282[8];
          v256 = v280;
          v257 = *((_QWORD *)&v279 + 1);
          v253 = v281;
          v255 = *((_QWORD *)&v280 + 1);
          v249 = *(_QWORD *)v282;
          v251 = *((_QWORD *)&v281 + 1);
          sub_1BA6E8A48(*((uint64_t *)&v278 + 1), v279, *((uint64_t *)&v279 + 1), v280, *((uint64_t *)&v280 + 1), v281, *((uint64_t *)&v281 + 1), *(uint64_t *)v282, *(uint64_t *)&v282[8], *(uint64_t *)&v282[16], v282[24]);
        }
        v97 = v274[25];
        if (v274[25] == 2)
          v97 = v282[25];
        v215 = v97;
        v98 = v267;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v238, v236, v89);
        sub_1BA6E8A48(v234, v232, v230, v228, v226, v224, v93, v94, *((uint64_t *)&v94 + 1), v95, v96);
        v99 = swift_isUniquelyReferenced_nonNull_native();
        v266 = v74;
        v283 = 0x8000000000000000;
        v101 = sub_1BA6E35A8(v98, *((uint64_t *)&v98 + 1));
        v102 = v74[2];
        v103 = (v100 & 1) == 0;
        v104 = v102 + v103;
        if (__OFADD__(v102, v103))
          goto LABEL_92;
        v105 = v100;
        if (v74[3] >= v104)
        {
          v65 = v241;
          if ((v99 & 1) != 0)
          {
            v108 = v214;
            if ((v100 & 1) == 0)
              goto LABEL_59;
          }
          else
          {
            sub_1BB4C87AC();
            v108 = v214;
            if ((v105 & 1) == 0)
              goto LABEL_59;
          }
        }
        else
        {
          sub_1BB4B8D60(v104, v99);
          v106 = sub_1BA6E35A8(v98, *((uint64_t *)&v98 + 1));
          v65 = v241;
          if ((v105 & 1) != (v107 & 1))
            goto LABEL_95;
          v101 = v106;
          v108 = v214;
          if ((v105 & 1) == 0)
          {
LABEL_59:
            v132 = v266;
            v266[(v101 >> 6) + 8] |= 1 << v101;
            *(_OWORD *)(v132[6] + 16 * v101) = v98;
            v153 = v132[7] + 144 * v101;
            *(_OWORD *)v153 = v98;
            *(_QWORD *)(v153 + 16) = v108;
            *(_QWORD *)(v153 + 24) = v221;
            *(_QWORD *)(v153 + 32) = v219;
            *(_QWORD *)(v153 + 40) = v217;
            *(_BYTE *)(v153 + 48) = v216;
            *(_QWORD *)(v153 + 56) = v91;
            *(_QWORD *)(v153 + 64) = v92;
            *(_QWORD *)(v153 + 72) = v257;
            *(_QWORD *)(v153 + 80) = v256;
            *(_QWORD *)(v153 + 88) = v255;
            *(_QWORD *)(v153 + 96) = v253;
            *(_QWORD *)(v153 + 104) = v251;
            *(_QWORD *)(v153 + 112) = v249;
            *(_QWORD *)(v153 + 120) = v247;
            *(_QWORD *)(v153 + 128) = v245;
            *(_BYTE *)(v153 + 136) = v243;
            *(_BYTE *)(v153 + 137) = v215;
            v154 = v132[2];
            v54 = __OFADD__(v154, 1);
            v155 = v154 + 1;
            if (v54)
              goto LABEL_93;
            v132[2] = v155;
            swift_bridgeObjectRetain();
            goto LABEL_61;
          }
        }
        v132 = v266;
        v133 = v266[7] + 144 * v101;
        v264[0] = *(_OWORD *)v133;
        v134 = *(_OWORD *)(v133 + 64);
        v136 = *(_OWORD *)(v133 + 16);
        v135 = *(_OWORD *)(v133 + 32);
        v264[3] = *(_OWORD *)(v133 + 48);
        v264[4] = v134;
        v264[1] = v136;
        v264[2] = v135;
        v138 = *(_OWORD *)(v133 + 96);
        v137 = *(_OWORD *)(v133 + 112);
        v139 = *(_OWORD *)(v133 + 80);
        *(_OWORD *)((char *)v265 + 10) = *(_OWORD *)(v133 + 122);
        v264[6] = v138;
        v265[0] = v137;
        v264[5] = v139;
        sub_1BAC6919C((uint64_t)v264);
        *(_OWORD *)v133 = v98;
        *(_QWORD *)(v133 + 16) = v108;
        *(_QWORD *)(v133 + 24) = v221;
        *(_QWORD *)(v133 + 32) = v219;
        *(_QWORD *)(v133 + 40) = v217;
        *(_BYTE *)(v133 + 48) = v216;
        *(_QWORD *)(v133 + 56) = v91;
        *(_QWORD *)(v133 + 64) = v92;
        *(_QWORD *)(v133 + 72) = v257;
        *(_QWORD *)(v133 + 80) = v256;
        *(_QWORD *)(v133 + 88) = v255;
        *(_QWORD *)(v133 + 96) = v253;
        *(_QWORD *)(v133 + 104) = v251;
        *(_QWORD *)(v133 + 112) = v249;
        *(_QWORD *)(v133 + 120) = v247;
        *(_QWORD *)(v133 + 128) = v245;
        *(_BYTE *)(v133 + 136) = v243;
        *(_BYTE *)(v133 + 137) = v215;
LABEL_61:
        v283 = (unint64_t)v132;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC6919C((uint64_t)&v267);
        sub_1BAC6919C((uint64_t)&v275);
        v8 = v213;
        if (!v71)
          goto LABEL_63;
LABEL_62:
        v275 = *(_OWORD *)(v8 + v260);
        v156 = *(_OWORD *)(v8 + v260 + 16);
        v157 = *(_OWORD *)(v8 + v260 + 32);
        v158 = *(_OWORD *)(v8 + v260 + 64);
        v278 = *(_OWORD *)(v8 + v260 + 48);
        v279 = v158;
        v276 = v156;
        v277 = v157;
        v159 = *(_OWORD *)(v8 + v260 + 80);
        v160 = *(_OWORD *)(v8 + v260 + 96);
        v161 = *(_OWORD *)(v8 + v260 + 112);
        *(_OWORD *)&v282[10] = *(_OWORD *)(v8 + v260 + 122);
        v281 = v160;
        *(_OWORD *)v282 = v161;
        v280 = v159;
        v72 = *((_QWORD *)&v275 + 1);
        v260 += 144;
        --v71;
        continue;
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  sub_1BAC690CC((uint64_t)&v275);
  swift_bridgeObjectRetain();
  v109 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v264[0] = v74;
  v111 = sub_1BA6E35A8(v73, v72);
  v112 = v74[2];
  v113 = (v110 & 1) == 0;
  v114 = v112 + v113;
  if (__OFADD__(v112, v113))
    goto LABEL_89;
  v115 = v110;
  if (v74[3] >= v114)
  {
    if ((v109 & 1) != 0)
    {
      if ((v110 & 1) == 0)
        goto LABEL_52;
    }
    else
    {
      sub_1BB4C87AC();
      if ((v115 & 1) == 0)
        goto LABEL_52;
    }
    goto LABEL_47;
  }
  sub_1BB4B8D60(v114, v109);
  v116 = sub_1BA6E35A8(v73, v72);
  if ((v115 & 1) != (v117 & 1))
    goto LABEL_95;
  v111 = v116;
  if ((v115 & 1) != 0)
  {
LABEL_47:
    v118 = *(_QWORD **)&v264[0];
    v119 = (__int128 *)(*(_QWORD *)(*(_QWORD *)&v264[0] + 56) + 144 * v111);
    v267 = *v119;
    v120 = v119[4];
    v122 = v119[1];
    v121 = v119[2];
    v270 = v119[3];
    v271 = v120;
    v268 = v122;
    v269 = v121;
    v124 = v119[6];
    v123 = v119[7];
    v125 = v119[5];
    *(_OWORD *)&v274[10] = *(__int128 *)((char *)v119 + 122);
    v273 = v124;
    *(_OWORD *)v274 = v123;
    v272 = v125;
    sub_1BAC6919C((uint64_t)&v267);
    *v119 = v275;
    v126 = v279;
    v128 = v276;
    v127 = v277;
    v119[3] = v278;
    v119[4] = v126;
    v119[1] = v128;
    v119[2] = v127;
    v130 = v281;
    v129 = *(_OWORD *)v282;
    v131 = v280;
    *(__int128 *)((char *)v119 + 122) = *(_OWORD *)&v282[10];
    v119[6] = v130;
    v119[7] = v129;
    v119[5] = v131;
    goto LABEL_54;
  }
LABEL_52:
  v118 = *(_QWORD **)&v264[0];
  *(_QWORD *)(*(_QWORD *)&v264[0] + 8 * (v111 >> 6) + 64) |= 1 << v111;
  v140 = (uint64_t *)(v118[6] + 16 * v111);
  *v140 = v73;
  v140[1] = v72;
  v141 = (_OWORD *)(v118[7] + 144 * v111);
  v142 = *(_OWORD *)&v282[10];
  v144 = v281;
  v143 = *(_OWORD *)v282;
  v141[5] = v280;
  v141[6] = v144;
  v141[7] = v143;
  *(_OWORD *)((char *)v141 + 122) = v142;
  v146 = v278;
  v145 = v279;
  v147 = v277;
  v141[1] = v276;
  v141[2] = v147;
  v141[3] = v146;
  v141[4] = v145;
  *v141 = v275;
  v148 = v118[2];
  v54 = __OFADD__(v148, 1);
  v149 = v148 + 1;
  if (v54)
    goto LABEL_91;
  v118[2] = v149;
  swift_bridgeObjectRetain();
LABEL_54:
  v283 = (unint64_t)v118;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v150 = v65[2];
  v151 = v65[3];
  swift_bridgeObjectRetain();
  if (v150 >= v151 >> 1)
    v65 = sub_1BA6E6D30((_QWORD *)(v151 > 1), v150 + 1, 1, v65);
  v65[2] = v150 + 1;
  v152 = &v65[2 * v150];
  v152[4] = v73;
  v152[5] = v72;
  sub_1BAC6919C((uint64_t)&v275);
  if (v71)
    goto LABEL_62;
LABEL_63:
  swift_bridgeObjectRelease();
LABEL_64:
  *(_QWORD *)&v275 = v65;
  swift_bridgeObjectRetain();
  v162 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v162);
  v163 = v275;
  v164 = *(_QWORD *)(v275 + 16);
  if (v164)
  {
    swift_bridgeObjectRetain();
    v165 = (uint64_t *)(v163 + 40);
    v166 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v167 = v283;
      if (*(_QWORD *)(v283 + 16))
      {
        v169 = *(v165 - 1);
        v168 = *v165;
        swift_bridgeObjectRetain_n();
        v170 = sub_1BA6E35A8(v169, v168);
        if ((v171 & 1) != 0)
        {
          v172 = (__int128 *)(*(_QWORD *)(v167 + 56) + 144 * v170);
          v275 = *v172;
          v173 = v172[3];
          v174 = v172[4];
          v175 = v172[2];
          v276 = v172[1];
          v277 = v175;
          v278 = v173;
          v279 = v174;
          v176 = v172[5];
          v177 = v172[6];
          v178 = v172[7];
          *(_OWORD *)&v282[10] = *(__int128 *)((char *)v172 + 122);
          v281 = v177;
          *(_OWORD *)v282 = v178;
          v280 = v176;
          sub_1BAC690CC((uint64_t)&v275);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v166 = sub_1BB38D918(0, v166[2] + 1, 1, v166);
          v180 = v166[2];
          v179 = v166[3];
          if (v180 >= v179 >> 1)
            v166 = sub_1BB38D918((_QWORD *)(v179 > 1), v180 + 1, 1, v166);
          v166[2] = v180 + 1;
          v181 = &v166[18 * v180];
          v181[2] = v275;
          v182 = v276;
          v183 = v277;
          v184 = v279;
          v181[5] = v278;
          v181[6] = v184;
          v181[3] = v182;
          v181[4] = v183;
          v185 = v280;
          v186 = v281;
          v187 = *(_OWORD *)v282;
          *(_OWORD *)((char *)v181 + 154) = *(_OWORD *)&v282[10];
          v181[8] = v186;
          v181[9] = v187;
          v181[7] = v185;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v165 += 2;
      --v164;
    }
    while (v164);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v166 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v188 = v211[7];
  if (!v188)
  {
    v188 = *(_QWORD *)(v212 + 56);
    swift_bridgeObjectRetain();
  }
  v189 = v211[8];
  if (!v189)
    v189 = swift_bridgeObjectRetain();
  v246 = v189;
  v254 = v188;
  v190 = v211[9];
  v191 = v211[10];
  v250 = v191;
  v252 = v190;
  v192 = *((unsigned __int8 *)v211 + 88);
  v248 = *((_BYTE *)v211 + 88);
  if (v192 >= 0xFE)
  {
    v190 = *(_QWORD *)(v212 + 72);
    v191 = *(_QWORD *)(v212 + 80);
    LOBYTE(v192) = *(_BYTE *)(v212 + 88);
    sub_1BA6E6C54(v190, v191, v192);
  }
  v225 = v192;
  v227 = v191;
  v229 = v190;
  v193 = v211[12];
  v194 = v211[13];
  v195 = v211[17];
  v196 = v211[18];
  v197 = v211[19];
  v198 = v211[20];
  v199 = v211[21];
  v242 = v194;
  v244 = v193;
  v239 = v211[15];
  v240 = v211[14];
  v261 = v239;
  v263 = v240;
  v235 = v195;
  v237 = v211[16];
  v258 = v237;
  v231 = v197;
  v233 = v196;
  v222 = v199;
  v223 = v198;
  v201 = *((_BYTE *)v211 + 176);
  v200 = v201;
  if (v201 == 254)
  {
    v193 = *(_QWORD *)(v212 + 96);
    v194 = *(_QWORD *)(v212 + 104);
    v195 = *(_QWORD *)(v212 + 136);
    v196 = *(_QWORD *)(v212 + 144);
    v197 = *(_QWORD *)(v212 + 152);
    v198 = *(_QWORD *)(v212 + 160);
    v199 = *(_QWORD *)(v212 + 168);
    v201 = *(_BYTE *)(v212 + 176);
    v261 = *(_QWORD *)(v212 + 120);
    v263 = *(_QWORD *)(v212 + 112);
    v258 = *(_QWORD *)(v212 + 128);
    sub_1BA6E8A48(v193, v194, v263, v261, v258, v195, v196, v197, v198, v199, v201);
  }
  v218 = v196;
  v220 = v195;
  v202 = v194;
  v203 = v193;
  v204 = *((unsigned __int8 *)v211 + 177);
  if (v204 == 2)
    LOBYTE(v204) = *(_BYTE *)(v212 + 177);
  v205 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v205 + 16) = v210;
  *(_QWORD *)(v205 + 24) = v209;
  *(_QWORD *)(v205 + 32) = v208;
  *(_QWORD *)(v205 + 40) = v207;
  swift_beginAccess();
  *(_QWORD *)(v205 + 48) = v166;
  *(_QWORD *)(v205 + 56) = v254;
  *(_QWORD *)(v205 + 64) = v246;
  *(_QWORD *)(v205 + 72) = v229;
  *(_QWORD *)(v205 + 80) = v227;
  *(_BYTE *)(v205 + 88) = v225;
  *(_QWORD *)(v205 + 96) = v203;
  *(_QWORD *)(v205 + 104) = v202;
  *(_QWORD *)(v205 + 112) = v263;
  *(_QWORD *)(v205 + 120) = v261;
  *(_QWORD *)(v205 + 128) = v258;
  *(_QWORD *)(v205 + 136) = v220;
  *(_QWORD *)(v205 + 144) = v218;
  *(_QWORD *)(v205 + 152) = v197;
  *(_QWORD *)(v205 + 160) = v198;
  *(_QWORD *)(v205 + 168) = v199;
  *(_BYTE *)(v205 + 176) = v201;
  *(_BYTE *)(v205 + 177) = v204;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v252, v250, v248);
  sub_1BA6E8A48(v244, v242, v240, v239, v237, v235, v233, v231, v223, v222, v200);
  return v205;
}

uint64_t sub_1BB4D0630(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int64_t v4;
  _QWORD *v5;
  unint64_t v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _OWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t i;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _QWORD *v65;
  unint64_t v66;
  unint64_t v67;
  _OWORD *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t result;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int v123;
  int v124;
  uint64_t v125;
  _QWORD *v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  void *v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  _OWORD v148[2];
  uint64_t v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  _OWORD v157[2];
  uint64_t v158;

  v139 = a1;
  v140 = 0;
  v158 = *MEMORY[0x1E0C80C00];
  v117 = *v1;
  swift_beginAccess();
  v2 = v1;
  v3 = v1[6];
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v126 = sub_1BB38D918(0, v4, 0, MEMORY[0x1E0DEE9D8]);
  v130 = sub_1BB38D7F4(0, v4, 0, v5);
  v132 = *(_QWORD *)(v3 + 16);
  v133 = v3;
  if (!v132)
  {
LABEL_31:
    sub_1BB4D2500(0);
    v54 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v55 = *(_QWORD *)(v54 + 16);
    if (v55)
    {
      v56 = v55 - 1;
      for (i = 32; ; i += 152)
      {
        v58 = *(_OWORD *)(v54 + i + 16);
        v141 = *(_OWORD *)(v54 + i);
        v142 = v58;
        v59 = *(_OWORD *)(v54 + i + 32);
        v60 = *(_OWORD *)(v54 + i + 48);
        v61 = *(_OWORD *)(v54 + i + 64);
        v146 = *(_OWORD *)(v54 + i + 80);
        v144 = v60;
        v145 = v61;
        v143 = v59;
        v62 = *(_OWORD *)(v54 + i + 96);
        v63 = *(_OWORD *)(v54 + i + 112);
        v64 = *(_OWORD *)(v54 + i + 128);
        v149 = *(_QWORD *)(v54 + i + 144);
        v148[0] = v63;
        v148[1] = v64;
        v147 = v62;
        sub_1BAC690CC((uint64_t)&v141);
        v65 = v126;
        v67 = v126[2];
        v66 = v126[3];
        if (v67 >= v66 >> 1)
          v65 = sub_1BB38D918((_QWORD *)(v66 > 1), v67 + 1, 1, v126);
        v65[2] = v67 + 1;
        v126 = v65;
        v68 = &v65[18 * v67];
        v68[2] = v141;
        v69 = v142;
        v70 = v143;
        v71 = v145;
        v68[5] = v144;
        v68[6] = v71;
        v68[3] = v69;
        v68[4] = v70;
        v72 = v146;
        v73 = v147;
        v74 = v148[0];
        *(_OWORD *)((char *)v68 + 154) = *(_OWORD *)((char *)v148 + 10);
        v68[8] = v73;
        v68[9] = v74;
        v68[7] = v72;
        if (!v56)
          break;
        --v56;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v75 = v126;
    v76 = v126[2];
    if (v76)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v77 = v75 + 11;
      v78 = (uint64_t)v2;
      do
      {
        v80 = *(v77 - 5);
        v79 = *(v77 - 4);
        v81 = *(v77 - 3);
        v130 = (_QWORD *)*(v77 - 2);
        v131 = v81;
        v82 = *((unsigned __int8 *)v77 - 8);
        v83 = *v77;
        v84 = v77[1];
        v85 = v77[2];
        v133 = v77[3];
        v134 = v85;
        v132 = v77[4];
        v138 = (uint64_t *)v77[5];
        v139 = v83;
        v86 = v77[6];
        v136 = v84;
        v137 = v86;
        v140 = (void *)v77[7];
        v87 = v77[8];
        v128 = v77[9];
        v129 = v87;
        v127 = *((unsigned __int8 *)v77 + 80);
        v124 = *((unsigned __int8 *)v77 + 81);
        v88 = swift_allocObject();
        swift_beginAccess();
        v89 = *(_QWORD *)(v78 + 16);
        v90 = *(_QWORD *)(v78 + 24);
        swift_beginAccess();
        *(_QWORD *)(v88 + 16) = v89;
        *(_QWORD *)(v88 + 24) = v90;
        v91 = *(_QWORD *)(v78 + 40);
        *(_QWORD *)(v88 + 32) = *(_QWORD *)(v78 + 32);
        *(_QWORD *)(v88 + 40) = v91;
        v119 = v91;
        v120 = v90;
        swift_beginAccess();
        v92 = *(_QWORD *)(v78 + 48);
        swift_beginAccess();
        v118 = v92;
        *(_QWORD *)(v88 + 48) = v92;
        v93 = v80;
        v122 = v80;
        if (!v80)
          v93 = swift_bridgeObjectRetain();
        v125 = v76;
        *(_QWORD *)(v88 + 56) = v93;
        v94 = v79;
        if (!v79)
          v94 = swift_bridgeObjectRetain();
        v121 = v79;
        *(_QWORD *)(v88 + 64) = v94;
        v96 = v130;
        v95 = v131;
        v97 = v82;
        v123 = v82;
        if (v82 >= 0xFE)
        {
          v95 = *(_QWORD *)(v78 + 72);
          v96 = *(_QWORD **)(v78 + 80);
          v97 = *(_BYTE *)(v78 + 88);
          sub_1BA6E6C54(v95, (uint64_t)v96, v97);
        }
        v135 = (_QWORD *)v78;
        v98 = v136;
        v99 = v137;
        v101 = v133;
        v100 = v134;
        *(_QWORD *)(v88 + 72) = v95;
        *(_QWORD *)(v88 + 80) = v96;
        v102 = v132;
        *(_BYTE *)(v88 + 88) = v97;
        v104 = (uint64_t)v138;
        v103 = v139;
        v105 = (uint64_t)v140;
        v107 = v128;
        v106 = v129;
        v108 = v127;
        if (v127 == 254)
        {
          v109 = v135[12];
          v115 = v135[13];
          v116 = v109;
          v110 = v135[14];
          v113 = v135[15];
          v114 = v110;
          v102 = v135[16];
          v104 = v135[17];
          v99 = v135[18];
          v105 = v135[19];
          v106 = v135[20];
          v107 = v135[21];
          v108 = *((_BYTE *)v135 + 176);
          sub_1BA6E8A48(v109, v115, v110, v113, v102, v104, v99, v105, v106, v107, v108);
          v101 = v113;
          v100 = v114;
          v98 = v115;
          v103 = v116;
        }
        *(_QWORD *)(v88 + 96) = v103;
        *(_QWORD *)(v88 + 104) = v98;
        *(_QWORD *)(v88 + 112) = v100;
        *(_QWORD *)(v88 + 120) = v101;
        *(_QWORD *)(v88 + 128) = v102;
        *(_QWORD *)(v88 + 136) = v104;
        *(_QWORD *)(v88 + 144) = v99;
        *(_QWORD *)(v88 + 152) = v105;
        *(_QWORD *)(v88 + 160) = v106;
        *(_QWORD *)(v88 + 168) = v107;
        *(_BYTE *)(v88 + 176) = v108;
        v111 = v124;
        if (v124 == 2)
          v111 = *((_BYTE *)v135 + 177);
        v77 += 18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v131, (uint64_t)v130, v123);
        sub_1BA6E8A48(v139, v136, v134, v133, v132, (uint64_t)v138, v137, (uint64_t)v140, v129, v128, v127);
        swift_release();
        *(_BYTE *)(v88 + 177) = v111;
        v78 = v88;
        v76 = v125 - 1;
      }
      while (v125 != 1);
      swift_bridgeObjectRelease();
      v2 = (_QWORD *)v88;
    }
    else
    {
      swift_retain();
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  v131 = v3 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
  v135 = v2;
LABEL_3:
  v134 = v6;
  v7 = (__int128 *)(v131 + 144 * v6);
  v150 = *v7;
  v8 = v7[1];
  v9 = v7[2];
  v10 = v7[4];
  v153 = v7[3];
  v154 = v10;
  v151 = v8;
  v152 = v9;
  v11 = v7[5];
  v12 = v7[6];
  v13 = v7[7];
  *(_OWORD *)((char *)v157 + 10) = *(__int128 *)((char *)v7 + 122);
  v156 = v12;
  v157[0] = v13;
  v155 = v11;
  v14 = v150;
  sub_1BAC690CC((uint64_t)&v150);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v141 = v14;
  swift_bridgeObjectRetain();
  v15 = sub_1BA6E583C((uint64_t *)&v141);
  swift_bridgeObjectRelease();
  v137 = *(_QWORD *)(v15 + 16);
  if (!v137)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    sub_1BAC6919C((uint64_t)&v150);
    goto LABEL_27;
  }
  v16 = 0;
  v17 = (uint64_t *)(v15 + 64);
  v18 = v15;
  while (1)
  {
    if (v16 >= *(_QWORD *)(v18 + 16))
    {
      __break(1u);
      goto LABEL_54;
    }
    v136 = *(v17 - 2);
    v19 = *(v17 - 1);
    v20 = *v17;
    v21 = *(_BYTE *)(v19 + 32);
    v22 = v21 & 0x3F;
    v23 = (unint64_t)((1 << v21) + 63) >> 6;
    v24 = 8 * v23;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v22 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v26 = (char *)swift_slowAlloc();
    bzero(v26, v24);
    v30 = v23;
    v28 = v140;
    v29 = sub_1BA6EB5B4((uint64_t)v26, v30, v19, v139);
    swift_bridgeObjectRelease();
    if (v28)
      goto LABEL_56;
    v140 = 0;
    MEMORY[0x1BCCE5C38](v26, -1, -1);
LABEL_15:
    v31 = sub_1BA6EB330(v29, v19);
    swift_release();
    if ((v31 & 1) != 0 && (sub_1BA6EBD20(v139, v20) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v32 = v136;
      if (v136 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC690CC((uint64_t)&v150);
        v44 = v126;
        v46 = v126[2];
        v45 = v126[3];
        v2 = v135;
        if (v46 >= v45 >> 1)
          v44 = sub_1BB38D918((_QWORD *)(v45 > 1), v46 + 1, 1, v126);
        v44[2] = v46 + 1;
        v126 = v44;
        v47 = &v44[18 * v46];
        v47[2] = v150;
        v48 = v151;
        v49 = v152;
        v50 = v154;
        v47[5] = v153;
        v47[6] = v50;
        v47[3] = v48;
        v47[4] = v49;
        v51 = v155;
        v52 = v156;
        v53 = v157[0];
        *(_OWORD *)((char *)v47 + 154) = *(_OWORD *)((char *)v157 + 10);
        v47[8] = v52;
        v47[9] = v53;
        v47[7] = v51;
        goto LABEL_26;
      }
      sub_1BAC690CC((uint64_t)&v150);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 = v130;
      v35 = v130[2];
      v34 = v130[3];
      v36 = v135;
      if (v35 >= v34 >> 1)
        v33 = sub_1BB38D7F4((_QWORD *)(v34 > 1), v35 + 1, 1, v130);
      v144 = v153;
      v145 = v154;
      *(_OWORD *)((char *)v148 + 10) = *(_OWORD *)((char *)v157 + 10);
      v147 = v156;
      v148[0] = v157[0];
      v146 = v155;
      v142 = v151;
      v143 = v152;
      v141 = v150;
      v33[2] = v35 + 1;
      v130 = v33;
      v37 = &v33[19 * v35];
      *((_OWORD *)v37 + 2) = v141;
      v38 = v142;
      v39 = v143;
      v40 = v145;
      *((_OWORD *)v37 + 5) = v144;
      *((_OWORD *)v37 + 6) = v40;
      *((_OWORD *)v37 + 3) = v38;
      *((_OWORD *)v37 + 4) = v39;
      v41 = v146;
      v42 = v147;
      v43 = v148[1];
      *((_OWORD *)v37 + 9) = v148[0];
      *((_OWORD *)v37 + 10) = v43;
      *((_OWORD *)v37 + 7) = v41;
      *((_OWORD *)v37 + 8) = v42;
      v37[22] = v32;
      sub_1BAC6919C((uint64_t)&v150);
      v2 = v36;
LABEL_27:
      v6 = v134 + 1;
      if (v134 + 1 == v132)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v6 >= *(_QWORD *)(v133 + 16))
LABEL_54:
        __break(1u);
      goto LABEL_3;
    }
    ++v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 += 5;
    if (v137 == v16)
    {
      swift_bridgeObjectRelease();
      sub_1BAC6919C((uint64_t)&v150);
      v2 = v135;
      goto LABEL_27;
    }
  }
  v138 = &v113;
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v26 = (char *)&v113 - ((v24 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v26, v24);
  v27 = v23;
  v28 = v140;
  v29 = sub_1BA6EB5B4((uint64_t)v26, v27, v19, v139);
  swift_bridgeObjectRelease();
  if (!v28)
  {
    v140 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_56:

  result = MEMORY[0x1BCCE5C38](v26, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BB4D0F78()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  swift_beginAccess();
  v2 = v0[3];
  v29 = v0[2];
  v3 = v0[5];
  v27 = v0[4];
  swift_beginAccess();
  v4 = v0[6];
  v5 = v0[7];
  v6 = v0[8];
  v28 = v2;
  v26 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
    v7 = sub_1BAF49D98(v6);
  else
    v7 = 0;
  v8 = v1[9];
  v9 = v1[10];
  v10 = *((_BYTE *)v1 + 88);
  v11 = v1[13];
  v12 = v1[16];
  v13 = *((unsigned __int8 *)v1 + 176);
  v24 = v1[12];
  v25 = v7;
  v22 = v1[15];
  v23 = v1[14];
  v20 = v1[18];
  v21 = v1[17];
  v18 = v1[20];
  v19 = v1[19];
  v17 = v1[21];
  sub_1BA6E6C54(v8, v9, v10);
  if (v13 != 254)
  {
    sub_1BB525134();
    v12 = v30;
    v11 = v11;
  }
  v14 = *((_BYTE *)v1 + 177);
  v15 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v15 + 16) = v29;
  *(_QWORD *)(v15 + 24) = v28;
  *(_QWORD *)(v15 + 32) = v27;
  *(_QWORD *)(v15 + 40) = v26;
  swift_beginAccess();
  *(_QWORD *)(v15 + 48) = v4;
  *(_QWORD *)(v15 + 56) = v5;
  *(_QWORD *)(v15 + 64) = v25;
  *(_QWORD *)(v15 + 72) = v8;
  *(_QWORD *)(v15 + 80) = v9;
  *(_BYTE *)(v15 + 88) = v10;
  *(_QWORD *)(v15 + 96) = v24;
  *(_QWORD *)(v15 + 104) = v11;
  *(_QWORD *)(v15 + 112) = v23;
  *(_QWORD *)(v15 + 120) = v22;
  *(_QWORD *)(v15 + 128) = v12;
  *(_QWORD *)(v15 + 136) = v21;
  *(_QWORD *)(v15 + 144) = v20;
  *(_QWORD *)(v15 + 152) = v19;
  *(_QWORD *)(v15 + 160) = v18;
  *(_QWORD *)(v15 + 168) = v17;
  *(_BYTE *)(v15 + 176) = v13;
  *(_BYTE *)(v15 + 177) = v14;
  return v15;
}

uint64_t FormatMicaNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatMicaNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatMicaNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatMicaNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatMicaNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatMicaNodeStyle.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatMicaNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_QWORD *)(v1 + 104);
  v4 = *(_QWORD *)(v1 + 112);
  v5 = *(_QWORD *)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 128);
  v7 = *(_QWORD *)(v1 + 136);
  v8 = *(_QWORD *)(v1 + 144);
  v9 = *(_QWORD *)(v1 + 152);
  v10 = *(_QWORD *)(v1 + 160);
  v11 = *(_QWORD *)(v1 + 168);
  v12 = *(_BYTE *)(v1 + 176);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatMicaNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t FormatMicaNodeStyle.__allocating_init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, __int128 *a9, char a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v14 = swift_allocObject();
  v15 = *a6;
  v16 = *a8;
  v17 = a8[1];
  LOBYTE(a8) = *((_BYTE *)a8 + 16);
  v24 = a9[1];
  v25 = *a9;
  v22 = a9[3];
  v23 = a9[2];
  v18 = *((_QWORD *)a9 + 8);
  v19 = *((_QWORD *)a9 + 9);
  v20 = *((_BYTE *)a9 + 80);
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v14 + 48) = a5;
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = a7;
  *(_QWORD *)(v14 + 72) = v16;
  *(_QWORD *)(v14 + 80) = v17;
  *(_BYTE *)(v14 + 88) = (_BYTE)a8;
  *(_OWORD *)(v14 + 96) = v25;
  *(_OWORD *)(v14 + 112) = v24;
  *(_OWORD *)(v14 + 128) = v23;
  *(_OWORD *)(v14 + 144) = v22;
  *(_QWORD *)(v14 + 160) = v18;
  *(_QWORD *)(v14 + 168) = v19;
  *(_BYTE *)(v14 + 176) = v20;
  *(_BYTE *)(v14 + 177) = a10;
  return v14;
}

uint64_t FormatMicaNodeStyle.init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, __int128 *a9, char a10)
{
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;

  v15 = *a6;
  v17 = *a8;
  v16 = a8[1];
  v26 = *((_BYTE *)a8 + 16);
  v24 = a9[1];
  v25 = *a9;
  v22 = a9[3];
  v23 = a9[2];
  v18 = *((_QWORD *)a9 + 8);
  v21 = *((_QWORD *)a9 + 9);
  v19 = *((_BYTE *)a9 + 80);
  swift_beginAccess();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 56) = v15;
  *(_QWORD *)(v10 + 64) = a7;
  *(_QWORD *)(v10 + 72) = v17;
  *(_QWORD *)(v10 + 80) = v16;
  *(_BYTE *)(v10 + 88) = v26;
  *(_OWORD *)(v10 + 96) = v25;
  *(_OWORD *)(v10 + 112) = v24;
  *(_OWORD *)(v10 + 128) = v23;
  *(_OWORD *)(v10 + 144) = v22;
  *(_QWORD *)(v10 + 160) = v18;
  *(_QWORD *)(v10 + 168) = v21;
  *(_BYTE *)(v10 + 176) = v19;
  *(_BYTE *)(v10 + 177) = a10;
  return v10;
}

uint64_t FormatMicaNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  sub_1BA6E8A78(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_BYTE *)(v0 + 176));
  return v0;
}

uint64_t FormatMicaNodeStyle.__deallocating_deinit()
{
  FormatMicaNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB4D1600@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BAEA5E4C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB4D1628(_QWORD *a1)
{
  return FormatMicaNodeStyle.encode(to:)(a1);
}

uint64_t sub_1BB4D1648(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed19FormatMicaNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatMicaNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.Selector.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatMicaNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_QWORD *)(v1 + 96);
  v8 = *(_QWORD *)(v1 + 104);
  v9 = *(_QWORD *)(v1 + 112);
  v10 = *(_QWORD *)(v1 + 120);
  v11 = *(_QWORD *)(v1 + 128);
  v12 = *(_BYTE *)(v1 + 136);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatMicaNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t sub_1BB4D16E8@<X0>(__int128 *a1@<X0>, __int128 *a2@<X8>)
{
  return FormatMicaNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1BB4D16FC(_QWORD *a1)
{
  return FormatMicaNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatMicaNodeStyle.auxViewRequirements.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1BB4D1720@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 144);
  return result;
}

uint64_t _s8NewsFeed19FormatMicaNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v47 = *(_QWORD *)(a1 + 56);
  v48 = *(_QWORD *)(a1 + 64);
  v49 = *(_QWORD *)(a1 + 72);
  v50 = *(_QWORD *)(a1 + 80);
  v51 = *(_QWORD *)(a1 + 88);
  v52 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 112);
  v53 = *(_QWORD *)(a1 + 104);
  v45 = *(_QWORD *)(a1 + 128);
  v46 = *(_QWORD *)(a1 + 120);
  v54 = *(unsigned __int8 *)(a1 + 136);
  v33 = *(unsigned __int8 *)(a1 + 137);
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v55 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  v36 = *(_QWORD *)(a2 + 56);
  v37 = *(_QWORD *)(a2 + 64);
  v38 = *(_QWORD *)(a2 + 72);
  v39 = *(_QWORD *)(a2 + 80);
  v40 = *(_QWORD *)(a2 + 88);
  v41 = *(_QWORD *)(a2 + 96);
  v42 = *(_QWORD *)(a2 + 104);
  v43 = *(_QWORD *)(a2 + 112);
  v34 = *(_QWORD *)(a2 + 128);
  v35 = *(_QWORD *)(a2 + 120);
  v44 = *(unsigned __int8 *)(a2 + 136);
  v32 = *(unsigned __int8 *)(a2 + 137);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1BB874398(), result = 0, (v12 & 1) != 0))
  {
    if (v2)
    {
      if (!v9)
        return 0;
      v31 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1BA881EAC(v2, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
        return 0;
    }
    else
    {
      v31 = v7;
      if (v9)
        return 0;
    }
    if (v3)
    {
      if (!v8)
        return 0;
      swift_bridgeObjectRetain();
      v15 = swift_bridgeObjectRetain();
      v16 = sub_1BA882894(v15, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v16)
        return 0;
    }
    else if (v8)
    {
      return 0;
    }
    v17 = v6;
    if (v6 <= 0xFD)
    {
      v68 = v4;
      v69 = v5;
      LOBYTE(v70) = v6;
      if (v11 <= 0xFD)
      {
        v57 = v10;
        v58 = v55;
        LOBYTE(v59) = v11;
        sub_1BA6E6C54(v4, v5, v6);
        sub_1BA6F2B04(v4, v5, v6);
        v18 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v68, (uint64_t)&v57);
        sub_1BA6F2B88(v68, v69, v70);
        sub_1BA6E6CC4(v4, v5, v17);
        if ((v18 & 1) == 0)
          return 0;
        goto LABEL_21;
      }
      sub_1BA6F2B04(v4, v5, v6);
      sub_1BA6F2B04(v4, v5, v6);
      sub_1BA6F2B88(v4, v5, v6);
    }
    else if (v11 > 0xFD)
    {
LABEL_21:
      v19 = v54;
      if (v54 == 254)
      {
        v20 = v44;
        v21 = v31;
        v23 = v52;
        v22 = v53;
        v25 = v50;
        v24 = v51;
        v27 = v48;
        v26 = v49;
        v29 = v46;
        v28 = v47;
        v30 = v45;
        if (v44 == 254)
        {
LABEL_28:
          if (v33 == 2)
          {
            if (v32 != 2)
              return 0;
          }
          else if (v32 == 2 || ((((v33 & 1) == 0) ^ v32) & 1) == 0)
          {
            return 0;
          }
          return 1;
        }
        goto LABEL_26;
      }
      v28 = v47;
      v27 = v48;
      v68 = v47;
      v69 = v48;
      v26 = v49;
      v25 = v50;
      v70 = v49;
      v71 = v50;
      v24 = v51;
      v23 = v52;
      v72 = v51;
      v73 = v52;
      v22 = v53;
      v74 = v53;
      v75 = v31;
      v30 = v45;
      v29 = v46;
      v76 = v46;
      v77 = v45;
      v78 = v54;
      v20 = v44;
      if (v44 == 254)
      {
        swift_retain();
        v21 = v31;
        v19 = v54;
LABEL_26:
        v68 = v28;
        v69 = v27;
        v70 = v26;
        v71 = v25;
        v72 = v24;
        v73 = v23;
        v74 = v22;
        v75 = v21;
        v76 = v29;
        v77 = v30;
        v78 = v19;
        v79 = v36;
        v80 = v37;
        v81 = v38;
        v82 = v39;
        v83 = v40;
        v84 = v41;
        v85 = v42;
        v86 = v43;
        v87 = v35;
        v88 = v34;
        v89 = v20;
        sub_1BA6E8A48(v36, v37, v38, v39, v40, v41, v42, v43, v35, v34, v20);
        sub_1BA9F10E8((uint64_t)&v68);
        return 0;
      }
      v57 = v36;
      LODWORD(v58) = v37;
      v59 = v38;
      v60 = v39;
      v61 = v40;
      v62 = v41;
      v63 = v42;
      v64 = v43;
      v65 = v35;
      v66 = v34;
      v67 = v44;
      sub_1BA6E8A48(v47, v48, v49, v50, v51, v52, v53, v31, v46, v45, v54);
      swift_retain();
      v56 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v68, (uint64_t)&v57);
      swift_release();
      sub_1BA6E8A78(v47, v48, v49, v50, v51, v52, v53, v31, v46, v45, v54);
      if ((v56 & 1) != 0)
        goto LABEL_28;
      return 0;
    }
    sub_1BA6E6C54(v10, v55, v11);
    sub_1BA6E6CC4(v4, v5, v6);
    sub_1BA6E6CC4(v10, v55, v11);
    return 0;
  }
  return result;
}

uint64_t sub_1BB4D1BC0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB4D1CC4(&qword_1EF2C52B0, (uint64_t)&protocol conformance descriptor for FormatMicaNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatMicaNodeStyle()
{
  return objc_opt_self();
}

uint64_t sub_1BB4D1C14(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BB4D1CC4(&qword_1EF2B31C0, (uint64_t)&protocol conformance descriptor for FormatMicaNodeStyle);
  result = sub_1BB4D1CC4(&qword_1EF2B5C38, (uint64_t)&protocol conformance descriptor for FormatMicaNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BB4D1C60(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB4D1CC4(&qword_1EF2B31C0, (uint64_t)&protocol conformance descriptor for FormatMicaNodeStyle);
  a1[2] = sub_1BB4D1CC4(&qword_1EF2B5C38, (uint64_t)&protocol conformance descriptor for FormatMicaNodeStyle);
  result = sub_1BB4D1CC4(&qword_1EF2C52B8, (uint64_t)&protocol conformance descriptor for FormatMicaNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB4D1CC4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatMicaNodeStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB4D1D00(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4D1D24();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4D1D24()
{
  unint64_t result;

  result = qword_1EF2C52C0;
  if (!qword_1EF2C52C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaNodeStyle.Selector, &type metadata for FormatMicaNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2C52C0);
  }
  return result;
}

unint64_t sub_1BB4D1D68(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAEEF570();
  result = sub_1BAEEF508();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB4D1D94(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEEF570();
  a1[2] = sub_1BAEEF508();
  result = sub_1BB4D1DC8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4D1DC8()
{
  unint64_t result;

  result = qword_1EF2C52C8;
  if (!qword_1EF2C52C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaNodeStyle.Selector, &type metadata for FormatMicaNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2C52C8);
  }
  return result;
}

uint64_t sub_1BB4D1E0C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4D1E58@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatMicaNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatMicaNodeStyle.__allocating_init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t destroy for FormatMicaNodeStyle.Selector(uint64_t a1)
{
  uint64_t result;
  unsigned int v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 0xFD)
    result = sub_1BA6F2B88(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v3);
  if (*(unsigned __int8 *)(a1 + 136) != 254)
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for FormatMicaNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 <= 0xFD)
  {
    v7 = *(_QWORD *)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 40);
    sub_1BA6F2B04(v7, v8, v6);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  if (*(unsigned __int8 *)(a2 + 136) == 254)
  {
    v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    swift_retain();
  }
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  return a1;
}

uint64_t assignWithCopy for FormatMicaNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD *v16;
  _OWORD *v17;
  int v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      v11 = *(_QWORD *)(a2 + 32);
      v12 = *(_QWORD *)(a2 + 40);
      sub_1BA6F2B04(v11, v12, *(_BYTE *)(a2 + 48));
      v13 = *(_QWORD *)(a1 + 32);
      v14 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v11;
      *(_QWORD *)(a1 + 40) = v12;
      v15 = *(_BYTE *)(a1 + 48);
      *(_BYTE *)(a1 + 48) = v6;
      sub_1BA6F2B88(v13, v14, v15);
    }
    else
    {
      sub_1BA9F0244(a1 + 32);
      v8 = *(_BYTE *)(a2 + 48);
      *v4 = *v5;
      *(_BYTE *)(a1 + 48) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    sub_1BA6F2B04(v9, v10, *(_BYTE *)(a2 + 48));
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 48) = v6;
  }
  else
  {
    v7 = *v5;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *v4 = v7;
  }
  v16 = (_OWORD *)(a1 + 56);
  v17 = (_OWORD *)(a2 + 56);
  v18 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 254)
  {
    if (v18 == 254)
    {
      v19 = *(_OWORD *)(a2 + 72);
      *v16 = *v17;
      *(_OWORD *)(a1 + 72) = v19;
      v20 = *(_OWORD *)(a2 + 88);
      v21 = *(_OWORD *)(a2 + 104);
      v22 = *(_OWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_OWORD *)(a1 + 104) = v21;
      *(_OWORD *)(a1 + 120) = v22;
      *(_OWORD *)(a1 + 88) = v20;
    }
    else
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v27 = *(_OWORD *)(a2 + 96);
      v28 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *(_OWORD *)(a1 + 96) = v27;
      *(_OWORD *)(a1 + 112) = v28;
      swift_retain();
    }
  }
  else if (v18 == 254)
  {
    sub_1BA9F0278(a1 + 56);
    v23 = *(_OWORD *)(a2 + 72);
    *v16 = *v17;
    *(_OWORD *)(a1 + 72) = v23;
    v25 = *(_OWORD *)(a2 + 104);
    v24 = *(_OWORD *)(a2 + 120);
    v26 = *(_OWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v25;
    *(_OWORD *)(a1 + 120) = v24;
    *(_OWORD *)(a1 + 88) = v26;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_retain();
    swift_release();
    v29 = *(_OWORD *)(a2 + 96);
    v30 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    *(_OWORD *)(a1 + 96) = v29;
    *(_OWORD *)(a1 + 112) = v30;
  }
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  return a1;
}

__n128 __swift_memcpy138_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 122) = *(_OWORD *)(a2 + 122);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for FormatMicaNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(unsigned __int8 *)(a1 + 48);
  if (v6 > 0xFD)
    goto LABEL_4;
  v7 = *(unsigned __int8 *)(a2 + 48);
  if (v7 > 0xFD)
  {
    sub_1BA9F0244(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *v5;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v5;
  *(_BYTE *)(a1 + 48) = v7;
  sub_1BA6F2B88(v8, v9, v6);
LABEL_6:
  if (*(unsigned __int8 *)(a1 + 136) != 254)
  {
    if (*(unsigned __int8 *)(a2 + 136) != 254)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_release();
      v12 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v12;
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      goto LABEL_11;
    }
    sub_1BA9F0278(a1 + 56);
  }
  v10 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v10;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v11 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v11;
LABEL_11:
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMicaNodeStyle.Selector(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 138))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatMicaNodeStyle.Selector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 136) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 138) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 138) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMicaNodeStyle.Selector()
{
  return &type metadata for FormatMicaNodeStyle.Selector;
}

void sub_1BB4D24A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C53B0)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C53B0);
  }
}

void sub_1BB4D2500(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EF2C2368)
  {
    v2 = sub_1BB39C418();
    v4 = type metadata accessor for FormatNodeStyleSelectorOrder(a1, (uint64_t)&type metadata for FormatMicaNodeStyle.Selector, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF2C2368);
  }
}

_QWORD *sub_1BB4D2558(double *a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t (**v14)();
  uint64_t v15;
  char *v16;
  void (*v17)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  _OWORD v61[2];
  uint64_t v62;
  _OWORD v63[2];
  uint64_t v64;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v3);
  sub_1BA8C88C8(0);
  v6 = *(_QWORD *)(v5 - 8);
  v51 = *(_QWORD *)(v6 + 72);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  v9 = (_QWORD *)(v8 + v7);
  if (a2)
  {
    v10 = *(_QWORD *)(a2 + 40);
    v46 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    v53 = sub_1BB4D0F78();
    v54 = 0u;
    v55 = 0u;
    v56 = 0;
    v57 = xmmword_1BB91D4D0;
    v11 = swift_allocObject();
    sub_1BA9F1094((uint64_t)&v53, v11 + 16);
    v12 = sub_1BA9F10D0;
  }
  else
  {
    v11 = 0;
    v46 = 0;
    v10 = 0xE000000000000000;
    v12 = sub_1BB739F50;
  }
  v13 = type metadata accessor for FormatInspectionItem(0);
  v14 = (uint64_t (**)())((char *)v9 + *(int *)(v13 + 24));
  *v14 = v12;
  v14[1] = (uint64_t (*)())v11;
  v15 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  *(_QWORD *)(v8 + v7) = v46;
  v9[2] = 0;
  v9[3] = 0;
  v9[1] = v10;
  v16 = (char *)v9 + *(int *)(v13 + 28);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = -1;
  v17 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v17(v9, 0, 1, v13);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v8, v61);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v18 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(v18 + 48) = v62;
  v19 = v61[1];
  *(_OWORD *)(v18 + 16) = v61[0];
  *(_OWORD *)(v18 + 32) = v19;
  v20 = v51;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87FC80;
  v22 = v21 + v7;
  sub_1BAAF7494(1701869908, 0xE400000000000000, 1633904973, 0xE400000000000000, (_QWORD *)(v21 + v7));
  v17((_QWORD *)(v21 + v7), 0, 1, v13);
  if (a2)
  {
    v23 = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, v23, (_QWORD *)(v22 + v51));
    v20 = v51;
    v17((_QWORD *)(v22 + v51), 0, 1, v13);
    v24 = *(_BYTE *)(a2 + 177);
  }
  else
  {
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, 0, (_QWORD *)(v22 + v51));
    v17((_QWORD *)(v22 + v51), 0, 1, v13);
    v24 = 2;
  }
  sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, v24, (_QWORD *)(v22 + 2 * v20));
  v17((_QWORD *)(v22 + 2 * v20), 0, 1, v13);
  sub_1BAF89090(2003134806, 0xE400000000000000, 0, 0, v21, v63);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v25 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v25;
  *(_QWORD *)(v25 + 48) = v64;
  v26 = v63[1];
  *(_OWORD *)(v25 + 16) = v63[0];
  *(_OWORD *)(v25 + 32) = v26;
  if (a2)
  {
    v27 = *(_QWORD *)(a2 + 72);
    v28 = *(_QWORD *)(a2 + 80);
    v29 = *(_BYTE *)(a2 + 88);
    sub_1BA6E6C54(v27, v28, v29);
  }
  else
  {
    v27 = 0;
    v28 = 0;
    v29 = -2;
  }
  v53 = v27;
  *(_QWORD *)&v54 = v28;
  BYTE8(v54) = v29;
  v30 = sub_1BB4D88A0(a1, (uint64_t)&v53);
  sub_1BA6E6CC4(v27, v28, v29);
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 144) = &off_1E7335C38;
  v52 = (_QWORD *)inited;
  *(_QWORD *)(inited + 112) = v30;
  if (a2)
  {
    v31 = *(_QWORD *)(a2 + 120);
    v32 = *(_QWORD *)(a2 + 128);
    v33 = *(_QWORD *)(a2 + 136);
    v34 = *(_QWORD *)(a2 + 144);
    v35 = *(_QWORD *)(a2 + 152);
    v47 = *(_BYTE *)(a2 + 176);
    v49 = *(_QWORD *)(a2 + 168);
    v50 = *(_QWORD *)(a2 + 160);
    v36 = *(_QWORD *)(a2 + 96);
    v37 = *(_QWORD *)(a2 + 104);
    a2 = *(_QWORD *)(a2 + 112);
    v38 = v31;
    v39 = v32;
    v40 = v33;
    v41 = v34;
    v42 = v35;
    sub_1BA6E8A48(v36, v37, a2, v31, v32, v33, v34, v35, v50, v49, v47);
  }
  else
  {
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v49 = 0;
    v50 = 0;
    v47 = -2;
  }
  v53 = v36;
  *(_QWORD *)&v54 = v37;
  *((_QWORD *)&v54 + 1) = a2;
  *(_QWORD *)&v55 = v38;
  *((_QWORD *)&v55 + 1) = v39;
  v56 = v40;
  *(_QWORD *)&v57 = v41;
  *((_QWORD *)&v57 + 1) = v42;
  v58 = v50;
  v59 = v49;
  v60 = v47;
  v45 = sub_1BB05E83C((uint64_t)&v53);
  sub_1BA6E8A78(v36, v37, a2, v38, v39, v40, v41, v42, v50, v49, v47);
  v52[22] = &type metadata for FormatInspection;
  v52[23] = &off_1E7335C38;
  v52[19] = v45;
  v43 = sub_1BB6DF010((uint64_t)v52);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v43;
}

uint64_t sub_1BB4D2B2C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB4D2B60()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

_BYTE *FormatUnderline.init(style:color:)@<X0>(_BYTE *result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  *(_BYTE *)a3 = *result;
  *(_QWORD *)(a3 + 8) = v3;
  return result;
}

void FormatUnderline.style.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FormatUnderline.color.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

BOOL _s8NewsFeed15FormatUnderlineV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v12;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  if (v4 == 8)
  {
    if (v6 != 8)
      return 0;
  }
  else
  {
    if (v6 == 8)
      return 0;
    sub_1BB801B10(v4);
    if ((v8 & 1) == 0)
      return 0;
  }
  if ((~v5 & 0xF000000000000007) == 0)
  {
    if ((~v7 & 0xF000000000000007) == 0)
      return 1;
    goto LABEL_11;
  }
  v12 = v5;
  if ((~v7 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_11:
    sub_1BA5E7FF4(v7);
    sub_1BA5E800C(v5);
    sub_1BA5E800C(v7);
    return 0;
  }
  swift_retain_n();
  static FormatColor.== infix(_:_:)((uint64_t)&v12);
  v10 = v9;
  swift_release();
  sub_1BA5E800C(v5);
  return (v10 & 1) != 0;
}

unint64_t sub_1BB4D2CAC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4D2CD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4D2CD0()
{
  unint64_t result;

  result = qword_1EF2C53B8;
  if (!qword_1EF2C53B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnderline, &type metadata for FormatUnderline);
    atomic_store(result, (unint64_t *)&qword_1EF2C53B8);
  }
  return result;
}

unint64_t sub_1BB4D2D14(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA69C23C();
  a1[2] = sub_1BA6866D8();
  result = sub_1BB4D2D48();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4D2D48()
{
  unint64_t result;

  result = qword_1EF2C53C0;
  if (!qword_1EF2C53C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnderline, &type metadata for FormatUnderline);
    atomic_store(result, (unint64_t *)&qword_1EF2C53C0);
  }
  return result;
}

uint64_t destroy for FormatUnderline(uint64_t result)
{
  if ((~*(_QWORD *)(result + 8) & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t _s8NewsFeed15FormatUnderlineVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  if ((~v3 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(a1 + 8) = v3;
  return a1;
}

uint64_t assignWithCopy for FormatUnderline(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = v4 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
  {
    if (v5 != 0xF000000000000007)
    {
      *v3 = v4;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1BAA5FA24(a1 + 8);
    v4 = *(_QWORD *)(a2 + 8);
    goto LABEL_6;
  }
  if (v5 == 0xF000000000000007)
  {
LABEL_6:
    *v3 = v4;
    return a1;
  }
  *v3 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithTake for FormatUnderline(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if ((~*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
  {
    if ((~v4 & 0xF000000000000007) != 0)
    {
      *v3 = v4;
      swift_release();
      return a1;
    }
    sub_1BAA5FA24(a1 + 8);
  }
  *v3 = v4;
  return a1;
}

ValueMetadata *type metadata accessor for FormatUnderline()
{
  return &type metadata for FormatUnderline;
}

uint64_t static FormatCodingIdentifierStrategy.defaultValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BB86C8E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C8D4();
  v4 = sub_1BB86C8C8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

BOOL static FormatCodingIdentifierStrategy.shouldEncode(wrappedValue:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v6;

  sub_1BB4D303C();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C8BC();
  v3 = sub_1BB86C8E0();
  v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3) == 1;
  sub_1BB4D3090((uint64_t)v2);
  return v4;
}

void sub_1BB4D303C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39ED40)
  {
    sub_1BB86C8E0();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39ED40);
  }
}

uint64_t sub_1BB4D3090(uint64_t a1)
{
  uint64_t v2;

  sub_1BB4D303C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB4D30CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = sub_1BB86C8E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C8D4();
  v6 = sub_1BB86C8C8();
  v8 = v7;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  a1[1] = v8;
  return result;
}

BOOL sub_1BB4D315C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v6;

  sub_1BB4D303C();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C8BC();
  v3 = sub_1BB86C8E0();
  v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3) == 1;
  sub_1BB4D3090((uint64_t)v2);
  return v4;
}

ValueMetadata *type metadata accessor for FormatCodingIdentifierStrategy()
{
  return &type metadata for FormatCodingIdentifierStrategy;
}

uint64_t FormatButtonNodeDataLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatButtonNodeDataLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatButtonNodeDataLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatButtonNodeDataLayoutAttributes.stateMaskLayoutAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatButtonNodeDataLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatButtonNodeDataLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

unint64_t FormatButtonNodeDataLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatButtonNodeDataLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t FormatButtonNodeDataLayoutAttributes.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatButtonNodeDataLayoutAttributes.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatButtonNodeDataLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatButtonNodeDataLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 80);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 72);
  *(_BYTE *)(a1 + 8) = v2;
}

double FormatButtonNodeDataLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t FormatButtonNodeDataLayoutAttributes.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatButtonNodeDataLayoutAttributes.__allocating_init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  result = swift_allocObject();
  v18 = *a3;
  v19 = *a5;
  v20 = *a8;
  v21 = *((_BYTE *)a8 + 8);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = v18;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = v19;
  *(_BYTE *)(result + 56) = a6;
  *(_QWORD *)(result + 64) = a7;
  *(_QWORD *)(result + 72) = v20;
  *(_BYTE *)(result + 80) = v21;
  *(_QWORD *)(result + 88) = a9;
  *(_QWORD *)(result + 96) = a10;
  return result;
}

uint64_t FormatButtonNodeDataLayoutAttributes.init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v11 = *a3;
  v12 = *a5;
  v13 = *a8;
  v14 = *((_BYTE *)a8 + 8);
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = v12;
  *(_BYTE *)(v10 + 56) = a6;
  *(_QWORD *)(v10 + 64) = a7;
  *(_QWORD *)(v10 + 72) = v13;
  *(_BYTE *)(v10 + 80) = v14;
  *(_QWORD *)(v10 + 88) = a9;
  *(_QWORD *)(v10 + 96) = a10;
  return v10;
}

uint64_t FormatButtonNodeDataLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatButtonNodeDataLayoutAttributes.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatButtonNodeDataLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t method lookup function for FormatButtonNodeDataLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatButtonNodeDataLayoutAttributes.__allocating_init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

BOOL static WebEmbedDataSourceServiceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WebEmbedDataSourceServiceError.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t WebEmbedDataSourceServiceError.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t WebEmbedDataSourceServiceError.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000052;
  else
    return 0xD00000000000006ELL;
}

unint64_t sub_1BB4D3610()
{
  unint64_t result;

  result = qword_1EF2C5428;
  if (!qword_1EF2C5428)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for WebEmbedDataSourceServiceError, &type metadata for WebEmbedDataSourceServiceError);
    atomic_store(result, (unint64_t *)&qword_1EF2C5428);
  }
  return result;
}

unint64_t sub_1BB4D3654()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000052;
  else
    return 0xD00000000000006ELL;
}

uint64_t storeEnumTagSinglePayload for WebEmbedDataSourceServiceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB4D36E0 + 4 * byte_1BB91D985[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB4D3714 + 4 * byte_1BB91D980[v4]))();
}

uint64_t sub_1BB4D3714(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4D371C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4D3724);
  return result;
}

uint64_t sub_1BB4D3730(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4D3738);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB4D373C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4D3744(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDataSourceServiceError()
{
  return &type metadata for WebEmbedDataSourceServiceError;
}

uint64_t OpenChannelCommandContext.init(channel:destination:sourceArticle:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4;

  v4 = *a2;
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v4;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

uint64_t static ContextMenuItem.openChannel(channel:destination:feedDescriptor:sourceArticle:)(uint64_t a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD v19[2];
  char v20;
  uint64_t v21;

  v8 = sub_1BB870150();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  v12 = *a2;
  if (a3)
  {
    swift_unknownObjectRetain();
    if (objc_msgSend(a3, sel_feedType) != (id)11)
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  else
  {
    swift_unknownObjectRetain();
  }
  sub_1BB4D3BE0(v12);
  v19[0] = v14;
  if (qword_1ED3BC080 != -1)
    swift_once();
  v15 = qword_1ED3AFB18;
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = (void *)qword_1ED3AFB10;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB8530], v8);
  v19[1] = a1;
  v20 = v12;
  v21 = a4;
  swift_allocObject();
  v17 = v16;
  v13 = sub_1BB86FB20();
  swift_unknownObjectRelease();
  return v13;
}

uint64_t static SharingActivity.openChannel(tag:destination:sourceArticle:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v2 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v2);
  if (!a1 || !swift_dynamicCastObjCProtocolConditional())
    return 0;
  v3 = qword_1ED3BC080;
  swift_unknownObjectRetain();
  if (v3 != -1)
    swift_once();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB872970();
  sub_1BB4D3D84();
  if (qword_1ED3AFB18 != -1)
    swift_once();
  v4 = (id)qword_1ED3AFB10;
  sub_1BB8703D8();
  swift_allocObject();
  v5 = sub_1BB86FC94();
  swift_unknownObjectRelease();
  return v5;
}

uint64_t static UIActivityType.openChannel.getter()
{
  return sub_1BB872970();
}

BOOL static OpenChannelDestination.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t OpenChannelDestination.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t OpenChannelDestination.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t OpenChannelCommandContext.channel.getter()
{
  return swift_unknownObjectRetain();
}

void OpenChannelCommandContext.destination.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

uint64_t OpenChannelCommandContext.sourceArticle.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1BB4D3BE0(char a1)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  if ((a1 & 1) != 0)
  {
    v10 = sub_1BB86C340();

    return v10;
  }
  else
  {
    sub_1BB86C340();

    sub_1BA7AA598();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
    swift_getObjectType();
    v5 = FCTagProviding.localizedTagType.getter();
    v7 = v6;
    *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v7;
    v8 = sub_1BB8729D0();
    swift_bridgeObjectRelease();
    return v8;
  }
}

uint64_t sub_1BB4D3D84()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

unint64_t sub_1BB4D3E8C()
{
  unint64_t result;

  result = qword_1EF2C5438;
  if (!qword_1EF2C5438)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for OpenChannelDestination, &type metadata for OpenChannelDestination);
    atomic_store(result, (unint64_t *)&qword_1EF2C5438);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OpenChannelDestination(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB4D3F1C + 4 * byte_1BB91DA95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB4D3F50 + 4 * byte_1BB91DA90[v4]))();
}

uint64_t sub_1BB4D3F50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4D3F58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4D3F60);
  return result;
}

uint64_t sub_1BB4D3F6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4D3F74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB4D3F78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4D3F80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OpenChannelDestination()
{
  return &type metadata for OpenChannelDestination;
}

uint64_t destroy for OpenChannelCommandContext()
{
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t _s8NewsFeed25OpenChannelCommandContextVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OpenChannelCommandContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for OpenChannelCommandContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenChannelCommandContext(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenChannelCommandContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t FormatLineBreakStrategy.lineBreakStrategy.getter()
{
  char *v0;

  return qword_1BB91DCE8[*v0];
}

unint64_t FormatLineBreakStrategy.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x74754F68737570;
  if (*v0 != 1)
    v1 = 0x647261646E617473;
  if (*v0)
    return v1;
  else
    return 0xD000000000000012;
}

NewsFeed::FormatLineBreakStrategy_optional __swiftcall FormatLineBreakStrategy.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatLineBreakStrategy_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BB4D4238(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7FC1A4(*a1, *a2);
}

unint64_t sub_1BB4D4248()
{
  unint64_t result;

  result = qword_1EF2C5440;
  if (!qword_1EF2C5440)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLineBreakStrategy, &type metadata for FormatLineBreakStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2C5440);
  }
  return result;
}

uint64_t sub_1BB4D428C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB4D4330()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB4D43B0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatLineBreakStrategy_optional sub_1BB4D4450(Swift::String *a1)
{
  return FormatLineBreakStrategy.init(rawValue:)(*a1);
}

void sub_1BB4D445C(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;

  v2 = *v1;
  v3 = 0x80000001BB95DBC0;
  v4 = 0xE700000000000000;
  v5 = 0x74754F68737570;
  if (v2 != 1)
  {
    v5 = 0x647261646E617473;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0xD000000000000012;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1BB4D44C0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB4D44EC();
  result = sub_1BB4D4530();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB4D44EC()
{
  unint64_t result;

  result = qword_1EF2C5448;
  if (!qword_1EF2C5448)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLineBreakStrategy, &type metadata for FormatLineBreakStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2C5448);
  }
  return result;
}

unint64_t sub_1BB4D4530()
{
  unint64_t result;

  result = qword_1ED3C4268;
  if (!qword_1ED3C4268)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLineBreakStrategy, &type metadata for FormatLineBreakStrategy);
    atomic_store(result, (unint64_t *)&qword_1ED3C4268);
  }
  return result;
}

unint64_t sub_1BB4D4574(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4D4598();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4D4598()
{
  unint64_t result;

  result = qword_1EF2C5450;
  if (!qword_1EF2C5450)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLineBreakStrategy, &type metadata for FormatLineBreakStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2C5450);
  }
  return result;
}

unint64_t sub_1BB4D45DC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5D7E2C();
  a1[2] = sub_1BAEFB310();
  result = sub_1BB4D4248();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB4D4610()
{
  sub_1BB4D4530();
  return sub_1BB872D60();
}

uint64_t sub_1BB4D466C(_QWORD *a1)
{
  return FormatLineBreakStrategy.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatLineBreakStrategy()
{
  return &type metadata for FormatLineBreakStrategy;
}

uint64_t sub_1BB4D4690(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 61;
  if (v1 <= 3)
    return v1;
  else
    return (*a1 >> 3) + 4;
}

unint64_t *sub_1BB4D46AC(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 4)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 61;
  }
  else
  {
    v2 = 8 * (a2 - 4);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuGroupableData()
{
  return &type metadata for FormatMenuGroupableData;
}

void sub_1BB4D46E8()
{
  uint64_t v1;
  uint64_t v2;

  sub_1BB4D4CAC();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X11 }
}

uint64_t sub_1BB4D4788@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  void *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a1 + 56);
  if (v5)
  {
    v7 = *(_QWORD *)(a1 + 16);
    v6 = *(_QWORD *)(a1 + 24);
    v8 = *(unsigned __int8 *)(a1 + 32);
    v9 = *(void **)(a1 + 40);
    v10 = *(unsigned __int8 *)(a1 + 48);
    *(_QWORD *)(v4 - 112) = *(_QWORD *)(v5 + 40);
    sub_1BAB5EC7C(v7, v6, v8);
    sub_1BA92F754(v9, v10);
    swift_retain_n();
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 - 112))(v3, v2, v1) & 1) != 0)
    {
      *(_QWORD *)(v4 - 128) = v1;
      if ((v8 & 1) != 0)
      {
        swift_retain();
        v11 = sub_1BB248D64(v3, v2);
        *(_QWORD *)(v4 - 112) = v12;
        sub_1BAB5EC9C(v7, v6, 1);
        *(_QWORD *)(v4 - 120) = v11;
        if ((v10 & 1) == 0)
        {
LABEL_5:
          v13 = v9;
LABEL_11:
          *(_QWORD *)(v4 - 168) = sub_1BA49A224(0, (unint64_t *)&qword_1EF2BCFF0);
          *(_DWORD *)(v4 - 132) = v10;
          *(_DWORD *)(v4 - 144) = v8;
          *(_QWORD *)(v4 - 152) = v6;
          *(_QWORD *)(v4 - 160) = v13;
          swift_bridgeObjectRetain();
          sub_1BB872970();
          swift_bridgeObjectRelease();
          v16 = (_QWORD *)swift_allocObject();
          v16[2] = v5;
          v16[3] = v3;
          v17 = *(_QWORD *)(v4 - 128);
          v16[4] = v2;
          v16[5] = v17;
          v18 = *(_QWORD *)(v4 - 112);
          v16[6] = *(_QWORD *)(v4 - 120);
          v16[7] = v18;
          swift_retain();
          swift_unknownObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          v14 = sub_1BB8738F4();
          swift_release();

          sub_1BAB5EC9C(v7, *(_QWORD *)(v4 - 152), *(_DWORD *)(v4 - 144));
          sub_1BA92F770(v9, *(_DWORD *)(v4 - 132));
          swift_release();
          return v14;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        *(_QWORD *)(v4 - 112) = v6;
        *(_QWORD *)(v4 - 120) = v7;
        if ((v10 & 1) == 0)
          goto LABEL_5;
      }
      swift_retain();
      v13 = sub_1BB248A40(v3, v2);
      sub_1BA92F770(v9, 1);
      goto LABEL_11;
    }
    swift_release();
    sub_1BAB5EC9C(v7, v6, v8);
    sub_1BA92F770(v9, v10);
    swift_release();
  }
  return 0;
}

void sub_1BB4D4CAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A00C8)
  {
    type metadata accessor for FormatSharedItemData();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A00C8);
  }
}

uint64_t sub_1BB4D4D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB4D4CAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB4D4D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  void *v14;
  char v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t *);
  char v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t *);
  id v40;
  char v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;

  v5 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  v66 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v7 = a1 + 32;
    swift_bridgeObjectRetain();
    v8 = 0;
    v52 = v7;
    v53 = v5;
    do
    {
      v9 = v7 + 48 * v8;
      v10 = *(_QWORD *)(v9 + 40);
      if (v10)
      {
        v12 = *(_QWORD **)v9;
        v11 = *(_QWORD *)(v9 + 8);
        v13 = *(_BYTE *)(v9 + 16);
        v14 = *(void **)(v9 + 24);
        v15 = *(_BYTE *)(v9 + 32);
        v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
        sub_1BAB5EC7C(*(_QWORD *)v9, v11, v13);
        sub_1BA92F754(v14, v15);
        swift_retain_n();
        if ((v16(a2, a3, a4) & 1) != 0)
        {
          v17 = v14;
          v58 = v11;
          v51 = v8;
          v56 = v14;
          v55 = v15;
          v54 = (uint64_t)v12;
          if ((v13 & 1) != 0)
          {
            v18 = v12[3];
            v19 = *(_QWORD *)(v18 + 16);
            if (v19)
            {
              v45 = v13;
              v47 = v10;
              v59 = v12[2];
              sub_1BAB5EC7C((uint64_t)v12, v58, 1);
              swift_bridgeObjectRetain();
              v20 = (_QWORD *)(v18 + 64);
              while (1)
              {
                v21 = *(v20 - 4);
                v22 = *(v20 - 3);
                v23 = *((_BYTE *)v20 - 16);
                v24 = (_QWORD *)*(v20 - 1);
                v25 = *v20;
                v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v59 + 104);
                v63 = v21;
                v64 = v22;
                v65 = v23;
                sub_1BA73B1CC(v21, v22, v23);
                swift_bridgeObjectRetain();
                sub_1BA73B1CC(v21, v22, v23);
                v27 = v26(a2, a3, &v63);
                sub_1BA73B1B8(v21, v22, v23);
                if ((v27 & 1) != 0)
                  break;
                v20 += 5;
                sub_1BA73B1B8(v21, v22, v23);
                swift_bridgeObjectRelease();
                if (!--v19)
                {
                  swift_bridgeObjectRelease();
                  v10 = v47;
                  v28 = v56;
                  v15 = v55;
                  v12 = (_QWORD *)v54;
                  v29 = v58;
                  v13 = v45;
                  goto LABEL_15;
                }
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_1BA73B1B8(v21, v22, v23);
              swift_bridgeObjectRelease();
              sub_1BAB5EC9C(v54, v58, 1);
              v10 = v47;
              v28 = v56;
              v15 = v55;
              v13 = v45;
              v30 = v24;
            }
            else
            {
              swift_retain();
              v29 = v58;
              v28 = v14;
LABEL_15:
              v30 = (_QWORD *)v12[4];
              v25 = v12[5];
              swift_bridgeObjectRetain();
              sub_1BAB5EC9C((uint64_t)v12, v29, 1);
            }
          }
          else
          {
            v25 = v11;
            swift_bridgeObjectRetain();
            v30 = v12;
            v28 = v17;
          }
          v60 = v25;
          v50 = v30;
          if ((v15 & 1) != 0)
          {
            v31 = *(_QWORD *)(*((_QWORD *)v28 + 3) + 16);
            if (v31)
            {
              v46 = v13;
              v48 = v10;
              v32 = *((_QWORD *)v28 + 2);
              v33 = *((_QWORD *)v28 + 3);
              sub_1BA92F754(v28, 1);
              swift_bridgeObjectRetain();
              v34 = (void **)(v33 + 56);
              while (1)
              {
                v35 = (uint64_t)*(v34 - 3);
                v36 = (uint64_t)*(v34 - 2);
                v37 = *((_BYTE *)v34 - 8);
                v38 = *v34;
                v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v32 + 104);
                v63 = v35;
                v64 = v36;
                v65 = v37;
                sub_1BA73B1CC(v35, v36, v37);
                v40 = v38;
                sub_1BA73B1CC(v35, v36, v37);
                v41 = v39(a2, a3, &v63);
                sub_1BA73B1B8(v35, v36, v37);
                if ((v41 & 1) != 0)
                  break;
                sub_1BA73B1B8(v35, v36, v37);

                v34 += 4;
                if (!--v31)
                {
                  swift_bridgeObjectRelease();
                  v10 = v48;
                  v28 = v56;
                  v13 = v46;
                  goto LABEL_25;
                }
              }
              swift_bridgeObjectRelease();
              v42 = v40;
              sub_1BA73B1B8(v35, v36, v37);

              sub_1BA92F770(v56, 1);
              v10 = v48;
              v13 = v46;
            }
            else
            {
              swift_retain();
LABEL_25:
              v42 = *((id *)v28 + 4);
              sub_1BA92F770(v28, 1);
            }
          }
          else
          {
            v42 = v28;
          }
          sub_1BA49A224(0, (unint64_t *)&qword_1EF2BCFF0);
          v49 = v42;
          swift_bridgeObjectRetain();
          sub_1BB872970();
          swift_bridgeObjectRelease();
          v43 = (_QWORD *)swift_allocObject();
          v43[2] = v10;
          v43[3] = a2;
          v43[4] = a3;
          v43[5] = a4;
          v43[6] = v50;
          v43[7] = v60;
          swift_retain();
          swift_unknownObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1BB8738F4();
          swift_release();

          sub_1BAB5EC9C(v54, v58, v13);
          sub_1BA92F770(v56, v55);
          v44 = swift_release();
          MEMORY[0x1BCCE36AC](v44);
          if (*(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
          v8 = v51;
          v7 = v52;
          v5 = v53;
        }
        else
        {
          swift_release();
          sub_1BAB5EC9C((uint64_t)v12, v11, v13);
          sub_1BA92F770(v14, v15);
          swift_release();
          v7 = v52;
          v5 = v53;
        }
      }
      ++v8;
    }
    while (v8 != v5);
    swift_bridgeObjectRelease();
    return v66;
  }
  return result;
}

uint64_t sub_1BB4D52C0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB2E1ABC(a1, v1[2], v1[3], v1[4], v1[5]);
}

_QWORD *sub_1BB4D52D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *result;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1BB86DEE8();
  LOBYTE(a1) = sub_1BA761FE4(v6, v7, a1);
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    v8 = sub_1BB86DEE8();
    v10 = v9;
    sub_1BB4D5424();
    swift_allocError();
    *v11 = v8;
    v11[1] = v10;
  }
  else
  {
    result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 88))(&v14, a2, a3);
    if ((v14 & 0xFE) == 2)
      return result;
    sub_1BB4D5424();
    swift_allocError();
    *v13 = 0;
    v13[1] = 0;
  }
  return (_QWORD *)swift_willThrow();
}

uint64_t FeedGroupType.kindIdentifier.getter()
{
  return 0;
}

void sub_1BB4D53DC(_BYTE *a1@<X8>)
{
  FeedGroupType.repooling.getter(a1);
}

void FeedGroupType.repooling.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t dispatch thunk of FeedGroupType.kindIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeedGroupType.paidVisibility.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeedGroupType.repooling.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of FeedGroupType.scoringContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of FeedGroupType.tag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

unint64_t sub_1BB4D5424()
{
  unint64_t result;

  result = qword_1EF2C5458;
  if (!qword_1EF2C5458)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E75B8, &type metadata for FeedGroupFreezeError);
    atomic_store(result, (unint64_t *)&qword_1EF2C5458);
  }
  return result;
}

uint64_t sub_1BB4D5468(void *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  int v10;
  uint64_t v11;
  void *v12;
  char **v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  _OWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  __int128 v30;
  uint64_t v31;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed23FormatDisplayLinkObject_storage);
  swift_beginAccess();
  v4 = *v3;
  v24 = v4 + 64;
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v4 + 64);
  v25 = (unint64_t)(v5 + 63) >> 6;
  v23 = v25 - 1;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7)
    goto LABEL_10;
LABEL_8:
  v14 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v15 = v14 | (v9 << 6);
  while (2)
  {
    v16 = *(_QWORD *)(v4 + 56);
    v17 = *(_QWORD *)(v4 + 48) + 24 * v15;
    v18 = *(_QWORD *)(v17 + 8);
    v19 = *(_BYTE *)(v17 + 16);
    *(_QWORD *)&v26[0] = *(_QWORD *)v17;
    *((_QWORD *)&v26[0] + 1) = v18;
    LOBYTE(v26[1]) = v19;
    sub_1BA747A10(v16 + 32 * v15, (uint64_t)&v26[1] + 8);
    sub_1BAF92B74();
    while (1)
    {
      sub_1BB4D5BFC((uint64_t)v26, (uint64_t)&v28);
      if (!v31)
        return swift_release();
      v10 = v29;
      sub_1BA76EAE0(&v30, v26);
      __swift_project_boxed_opaque_existential_1(v26, *((uint64_t *)&v26[1] + 1));
      v11 = sub_1BB874380();
      v12 = (void *)sub_1BB872970();
      v13 = &selRef_setValue_forKeyPath_;
      if (!v10)
        v13 = &selRef_setValue_forKey_;
      objc_msgSend(a1, *v13, v11, v12, v23);
      swift_unknownObjectRelease();

      sub_1BAA49EA8();
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      if (v7)
        goto LABEL_8;
LABEL_10:
      v20 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      if (v20 < v25)
      {
        v21 = *(_QWORD *)(v24 + 8 * v20);
        if (v21)
          goto LABEL_13;
        v22 = v9 + 2;
        ++v9;
        if (v20 + 1 < v25)
        {
          v21 = *(_QWORD *)(v24 + 8 * v22);
          if (v21)
            goto LABEL_16;
          v9 = v20 + 1;
          if (v20 + 2 < v25)
          {
            v21 = *(_QWORD *)(v24 + 8 * (v20 + 2));
            if (v21)
            {
              v20 += 2;
              goto LABEL_13;
            }
            v22 = v20 + 3;
            v9 = v20 + 2;
            if (v20 + 3 < v25)
              break;
          }
        }
      }
LABEL_27:
      v7 = 0;
      v27 = 0;
      memset(v26, 0, sizeof(v26));
    }
    v21 = *(_QWORD *)(v24 + 8 * v22);
    if (v21)
    {
LABEL_16:
      v20 = v22;
LABEL_13:
      v7 = (v21 - 1) & v21;
      v15 = __clz(__rbit64(v21)) + (v20 << 6);
      v9 = v20;
      continue;
    }
    break;
  }
  while (1)
  {
    v20 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v20 >= v25)
    {
      v9 = v23;
      goto LABEL_27;
    }
    v21 = *(_QWORD *)(v24 + 8 * v20);
    ++v22;
    if (v21)
      goto LABEL_13;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1BB4D5730(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __int128 v8;
  uint64_t v9;
  _OWORD v10[2];

  sub_1BA4D78C8(a1, (uint64_t)&v8);
  if (v9)
  {
    sub_1BA76EAE0(&v8, v10);
    sub_1BA747A10((uint64_t)v10, (uint64_t)&v8);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BB4AA85C((uint64_t)&v8, a2, a3, a4);
    swift_endAccess();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_1BA6EDA74((uint64_t)&v8);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BAA49B48(a2, a3, a4, v10);
    swift_endAccess();
    swift_bridgeObjectRelease();
    return sub_1BA6EDA74((uint64_t)v10);
  }
}

uint64_t sub_1BB4D5840(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v16[2];

  if (a3)
  {
    v8 = a4;
    v9 = a1;
    swift_unknownObjectRetain();
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
    v10 = a4;
    v11 = a1;
  }
  v12 = sub_1BB8729A0();
  v14 = v13;

  sub_1BB4D5730((uint64_t)v16, v12, v14, a5);
  swift_bridgeObjectRelease();
  return sub_1BA6EDA74((uint64_t)v16);
}

uint64_t sub_1BB4D58FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v9 = (uint64_t *)(v4 + OBJC_IVAR____TtC8NewsFeed23FormatDisplayLinkObject_storage);
  swift_beginAccess();
  v10 = *v9;
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BB4AB848(a1, a2, a3);
    if ((v12 & 1) != 0)
    {
      sub_1BA747A10(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)a4);
    }
    else
    {
      *a4 = 0u;
      a4[1] = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *a4 = 0u;
    a4[1] = 0u;
  }
  return swift_endAccess();
}

id sub_1BB4D59C4(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  void *v16;
  __int128 v18;
  uint64_t v19;

  v6 = sub_1BB8729A0();
  v8 = v7;
  v9 = a1;
  sub_1BB4D58FC(v6, v8, a4, &v18);

  swift_bridgeObjectRelease();
  v10 = v19;
  if (!v19)
    return 0;
  v11 = __swift_project_boxed_opaque_existential_1(&v18, v19);
  v12 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v12 + 16))(v15, v13);
  v16 = (void *)sub_1BB874380();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  return v16;
}

uint64_t sub_1BB4D5AC4(uint64_t a1, uint64_t a2)
{
  return sub_1BB4D5BB8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t type metadata accessor for FormatDisplayLinkObject()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for FormatDisplayLinkObject.Key()
{
  return &type metadata for FormatDisplayLinkObject.Key;
}

unint64_t sub_1BB4D5B74()
{
  unint64_t result;

  result = qword_1ED3A71C8;
  if (!qword_1ED3A71C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91DD7C, &type metadata for FormatDisplayLinkObject.Key);
    atomic_store(result, (unint64_t *)&qword_1ED3A71C8);
  }
  return result;
}

uint64_t sub_1BB4D5BB8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) == 0)
      return 0;
  }
  else if ((a6 & 1) != 0)
  {
    return 0;
  }
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return sub_1BB874398();
}

uint64_t sub_1BB4D5BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB4D5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BB4D5C40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A71B0)
  {
    sub_1BB4D5C94();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A71B0);
  }
}

void sub_1BB4D5C94()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A71A8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A71A8);
  }
}

uint64_t UIImageRenderingMode.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x724F737961776C61;
  v2 = 0x6E776F6E6B6E75;
  if (a1 == 2)
    v2 = 0x6554737961776C61;
  if (a1 != 1)
    v1 = v2;
  if (a1)
    return v1;
  else
    return 0x6974616D6F747561;
}

uint64_t FormatMicaNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatMicaNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatMicaNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatMicaNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t FormatMicaNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatMicaNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 104);
  return swift_retain();
}

uint64_t FormatMicaNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

unint64_t FormatMicaNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatMicaNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t FormatMicaNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatMicaNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 152);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 144);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatMicaNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17)
{
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  result = swift_allocObject();
  v27 = *a8;
  v28 = *a14;
  v29 = *a17;
  v30 = *((_BYTE *)a17 + 8);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = a5;
  *(_QWORD *)(result + 56) = a6;
  *(double *)(result + 64) = a9;
  *(double *)(result + 72) = a10;
  *(double *)(result + 80) = a11;
  *(double *)(result + 88) = a12;
  *(_QWORD *)(result + 96) = a7;
  *(_QWORD *)(result + 104) = v27;
  *(_QWORD *)(result + 112) = a13;
  *(_QWORD *)(result + 120) = v28;
  *(_BYTE *)(result + 128) = a15;
  *(_QWORD *)(result + 136) = a16;
  *(_QWORD *)(result + 144) = v29;
  *(_BYTE *)(result + 152) = v30;
  *(_QWORD *)(result + 160) = MEMORY[0x1E0DEE9E8];
  return result;
}

uint64_t FormatMicaNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v18 = *a8;
  v19 = *a14;
  v20 = *a17;
  v21 = *((_BYTE *)a17 + 8);
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  *(_QWORD *)(v17 + 32) = a3;
  *(_QWORD *)(v17 + 40) = a4;
  *(_QWORD *)(v17 + 48) = a5;
  *(_QWORD *)(v17 + 56) = a6;
  *(double *)(v17 + 64) = a9;
  *(double *)(v17 + 72) = a10;
  *(double *)(v17 + 80) = a11;
  *(double *)(v17 + 88) = a12;
  *(_QWORD *)(v17 + 96) = a7;
  *(_QWORD *)(v17 + 104) = v18;
  *(_QWORD *)(v17 + 112) = a13;
  *(_QWORD *)(v17 + 120) = v19;
  *(_BYTE *)(v17 + 128) = a15;
  *(_QWORD *)(v17 + 136) = a16;
  *(_QWORD *)(v17 + 144) = v20;
  *(_BYTE *)(v17 + 152) = v21;
  *(_QWORD *)(v17 + 160) = MEMORY[0x1E0DEE9E8];
  return v17;
}

uint64_t sub_1BB4D5FC4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB4D5FFC + 4 * byte_1BB91DE20[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BB4D5FFC()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB4D6018()
{
  return 0x6E65644965646F6ELL;
}

uint64_t sub_1BB4D603C()
{
  return 0x656D617266;
}

uint64_t sub_1BB4D6050()
{
  return 0x656C797473;
}

uint64_t sub_1BB4D6064()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB4D607C()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB4D6090()
{
  return 0x696C696269736976;
}

unint64_t sub_1BB4D60A8()
{
  return 0xD000000000000018;
}

uint64_t sub_1BB4D6110()
{
  unsigned __int8 *v0;

  return sub_1BB4D5FC4(*v0);
}

uint64_t sub_1BB4D6118()
{
  sub_1BB4D65FC();
  return sub_1BB874710();
}

uint64_t sub_1BB4D6140()
{
  sub_1BB4D65FC();
  return sub_1BB87471C();
}

uint64_t FormatMicaNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 120));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatMicaNodeLayoutAttributes.__deallocating_deinit()
{
  FormatMicaNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatMicaNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  char v11;
  _OWORD v13[2];
  char v14;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C5468, (uint64_t (*)(void))sub_1BB4D65FC, (uint64_t)&type metadata for FormatMicaNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB4D65FC();
  sub_1BB8746C8();
  LOBYTE(v13[0]) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1BB87417C();
    LOBYTE(v13[0]) = 2;
    sub_1BB87417C();
    v10 = *(_OWORD *)(v3 + 80);
    v13[0] = *(_OWORD *)(v3 + 64);
    v13[1] = v10;
    v14 = 3;
    type metadata accessor for CGRect(0);
    sub_1BA50AD30(&qword_1EF2A9A18, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
    sub_1BB8741AC();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 96);
    v14 = 4;
    type metadata accessor for FormatMicaNodeStyle();
    sub_1BA50AD30(&qword_1EF2B5C38, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNodeStyle, (uint64_t)&protocol conformance descriptor for FormatMicaNodeStyle);
    sub_1BB87414C();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 104);
    v14 = 5;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v13[0]) = 6;
    sub_1BB8741A0();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 120);
    v14 = 7;
    sub_1BA84B088();
    sub_1BB8741AC();
    LOBYTE(v13[0]) = 8;
    sub_1BB874188();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 136);
    v14 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    v11 = *(_BYTE *)(v3 + 152);
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 144);
    BYTE8(v13[0]) = v11;
    v14 = 10;
    sub_1BA5FB410();
    sub_1BB87414C();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 160);
    v14 = 11;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA9952AC(&qword_1EF2AC0D8, (uint64_t (*)(void))sub_1BA994B84, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB4D65FC()
{
  unint64_t result;

  result = qword_1EF2C5470;
  if (!qword_1EF2C5470)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91E0D4, &type metadata for FormatMicaNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5470);
  }
  return result;
}

uint64_t FormatMicaNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatMicaNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatMicaNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  char v21;

  sub_1BA4CDF6C(0, &qword_1EF2C5478, (uint64_t (*)(void))sub_1BB4D65FC, (uint64_t)&type metadata for FormatMicaNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v17 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB4D65FC();
  v16 = v6;
  v7 = v18;
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
    v14 = (uint64_t)a1;
  }
  else
  {
    v18 = a1;
    LOBYTE(v19) = 0;
    *(_QWORD *)(v1 + 16) = sub_1BB874098();
    *(_QWORD *)(v1 + 24) = v8;
    LOBYTE(v19) = 1;
    *(_QWORD *)(v1 + 32) = sub_1BB874098();
    *(_QWORD *)(v1 + 40) = v9;
    LOBYTE(v19) = 2;
    *(_QWORD *)(v1 + 48) = sub_1BB874098();
    *(_QWORD *)(v1 + 56) = v10;
    type metadata accessor for CGRect(0);
    v21 = 3;
    sub_1BA50AD30((unint64_t *)&unk_1ED3B9910, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    v15 = 0;
    sub_1BB8740D4();
    v11 = v20;
    *(_OWORD *)(v1 + 64) = v19;
    *(_OWORD *)(v1 + 80) = v11;
    type metadata accessor for FormatMicaNodeStyle();
    v21 = 4;
    sub_1BA50AD30(&qword_1EF2B31C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNodeStyle, (uint64_t)&protocol conformance descriptor for FormatMicaNodeStyle);
    sub_1BB874068();
    *(_QWORD *)(v1 + 96) = v19;
    v21 = 5;
    sub_1BA995268();
    sub_1BB874068();
    *(_QWORD *)(v1 + 104) = v19;
    LOBYTE(v19) = 6;
    *(_QWORD *)(v1 + 112) = sub_1BB8740C8();
    v21 = 7;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 120) = v19;
    LOBYTE(v19) = 8;
    *(_BYTE *)(v1 + 128) = sub_1BB8740A4() & 1;
    type metadata accessor for FormatContextLayoutOptions();
    v21 = 9;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 136) = v19;
    v21 = 10;
    sub_1BA650BA0();
    sub_1BB874068();
    v13 = BYTE8(v19);
    *(_QWORD *)(v1 + 144) = v19;
    *(_BYTE *)(v1 + 152) = v13;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v21 = 11;
    sub_1BA9952AC(&qword_1EF2AC100, (uint64_t (*)(void))sub_1BA995330, MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v17);
    v14 = (uint64_t)v18;
    *(_QWORD *)(v1 + 160) = v19;
  }
  __swift_destroy_boxed_opaque_existential_1(v14);
  return v1;
}

uint64_t sub_1BB4D6C94(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C5480, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatMicaNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatMicaNodeLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t sub_1BB4D6CE0(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C30B0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatMicaNodeLayoutAttributes);
}

uint64_t sub_1BB4D6D0C(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C3108, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatMicaNodeLayoutAttributes);
}

uint64_t sub_1BB4D6D38(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C5488, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatMicaNodeLayoutAttributes);
}

uint64_t sub_1BB4D6D64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatMicaNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB4D6DB8(_QWORD *a1)
{
  return FormatMicaNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BB4D6DD8(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1EF2C3158, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatMicaNodeLayoutAttributes);
  return sub_1BB86D96C();
}

uint64_t method lookup function for FormatMicaNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatMicaNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FormatMicaNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t storeEnumTagSinglePayload for FormatMicaNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BB4D6EE8 + 4 * byte_1BB91DE31[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BB4D6F1C + 4 * byte_1BB91DE2C[v4]))();
}

uint64_t sub_1BB4D6F1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4D6F24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4D6F2CLL);
  return result;
}

uint64_t sub_1BB4D6F38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4D6F40);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BB4D6F44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4D6F4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatMicaNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatMicaNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB4D6F6C()
{
  unint64_t result;

  result = qword_1EF2C5590;
  if (!qword_1EF2C5590)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91E0AC, &type metadata for FormatMicaNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5590);
  }
  return result;
}

unint64_t sub_1BB4D6FB4()
{
  unint64_t result;

  result = qword_1EF2C5598;
  if (!qword_1EF2C5598)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91E01C, &type metadata for FormatMicaNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5598);
  }
  return result;
}

unint64_t sub_1BB4D6FFC()
{
  unint64_t result;

  result = qword_1EF2C55A0;
  if (!qword_1EF2C55A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91E044, &type metadata for FormatMicaNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C55A0);
  }
  return result;
}

id CoverViewActionButton.onTap.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap);
}

id CoverViewActionButton.onMenuPresentation.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onMenuPresentation);
}

uint64_t type metadata accessor for CoverViewActionButton()
{
  return objc_opt_self();
}

void sub_1BB4D70FC(char a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  char *v10;
  _QWORD v11[6];
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for CoverViewActionButton();
  objc_msgSendSuper2(&v12, sel_setHighlighted_, a1 & 1);
  v3 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState;
  v4 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState], sel_colorWithAlphaComponent_, 0.85);
  v5 = v4;
  if ((objc_msgSend(v1, sel_isHighlighted) & 1) == 0)
    v5 = *(void **)&v1[v3];
  v6 = (void *)objc_opt_self();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  *(_QWORD *)(v7 + 24) = v5;
  v11[4] = sub_1BB4D7500;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1BA4F1DD8;
  v11[3] = &block_descriptor_77;
  v8 = _Block_copy(v11);
  v9 = v5;
  v10 = v1;
  swift_release();
  objc_msgSend(v6, sel_animateWithDuration_animations_, v8, 0.2);
  _Block_release(v8);

}

char *sub_1BB4D724C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  objc_class *v10;
  objc_class *v11;
  id v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v21;
  char *v22;
  void *v23;
  char *v24;
  id v25;
  void *v26;
  char *v27;
  id v28;
  objc_super v30;

  v9 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap;
  sub_1BA563554();
  v11 = v10;
  v12 = objc_allocWithZone(v10);
  v13 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v12, sel_init);
  v14 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onMenuPresentation;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(v11), sel_init);
  v15 = &v13[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_touchInsets];
  __asm { FMOV            V0.2D, #-30.0 }
  *(_OWORD *)v15 = _Q0;
  *((_OWORD *)v15 + 1) = _Q0;
  v21 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState;
  *(_QWORD *)&v13[v21] = objc_msgSend((id)objc_opt_self(), sel_blackColor);

  v30.receiver = v13;
  v30.super_class = (Class)type metadata accessor for CoverViewActionButton();
  v22 = (char *)objc_msgSendSuper2(&v30, sel_initWithFrame_, a1, a2, a3, a4);
  v23 = *(void **)&v22[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap];
  v24 = v22;
  v25 = v23;
  sub_1BB871368();

  v26 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onMenuPresentation];
  v27 = v24;
  v28 = v26;
  sub_1BB871368();

  return v27;
}

id CoverViewActionButton.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1BB4D74D4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BB4D7500()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setTintColor_, *(_QWORD *)(v0 + 24));
}

id CoverViewActionButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoverViewActionButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void _s8NewsFeed21CoverViewActionButtonC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  uint64_t v1;
  objc_class *v2;
  objc_class *v3;
  uint64_t v4;
  char *v5;
  uint64_t v11;

  v1 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap;
  sub_1BA563554();
  v3 = v2;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v4 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onMenuPresentation;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  v5 = &v0[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_touchInsets];
  __asm { FMOV            V0.2D, #-30.0 }
  *(_OWORD *)v5 = _Q0;
  *((_OWORD *)v5 + 1) = _Q0;
  v11 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState;
  *(_QWORD *)&v0[v11] = objc_msgSend((id)objc_opt_self(), sel_blackColor);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t method lookup function for CoverViewActionButton()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB4D767C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;

  v16 = swift_allocObject();
  v17 = *(_QWORD *)v16;
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a1;
  *(_QWORD *)(v16 + 32) = a2;
  *(_QWORD *)(v16 + 40) = a6;
  *(_QWORD *)(v16 + 48) = a4;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v17 + 88) - 8) + 32))(v16 + *(_QWORD *)(v17 + 168), a5);
  *(_BYTE *)(v16 + 56) = a7;
  *(_QWORD *)(v16 + 64) = a8;
  return v16;
}

uint64_t *sub_1BB4D7720()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 168));
  return v0;
}

uint64_t sub_1BB4D7784()
{
  sub_1BB4D7720();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB4D77A8()
{
  return sub_1BA4E0C98();
}

uint64_t sub_1BB4D77C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;

  v10 = swift_allocObject();
  v11 = *(_QWORD *)v10;
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a1;
  *(_QWORD *)(v10 + 32) = a2;
  *(_QWORD *)(v10 + 40) = 0;
  *(_QWORD *)(v10 + 48) = a4;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v11 + 88) - 8) + 16))(v10 + *(_QWORD *)(v11 + 168), a5);
  *(_BYTE *)(v10 + 56) = 0;
  *(_QWORD *)(v10 + 64) = MEMORY[0x1E0DEE9E8];
  return v10;
}

uint64_t storeEnumTagSinglePayload for WebEmbedDatastoreError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB4D78A4 + 4 * byte_1BB91E225[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB4D78D8 + 4 * byte_1BB91E220[v4]))();
}

uint64_t sub_1BB4D78D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4D78E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4D78E8);
  return result;
}

uint64_t sub_1BB4D78F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4D78FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB4D7900(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4D7908(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDatastoreError()
{
  return &type metadata for WebEmbedDatastoreError;
}

unint64_t sub_1BB4D7928()
{
  unint64_t result;

  result = qword_1EF2C55C8;
  if (!qword_1EF2C55C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91E288, &type metadata for WebEmbedDatastoreError);
    atomic_store(result, (unint64_t *)&qword_1EF2C55C8);
  }
  return result;
}

uint64_t static FormatShareAttributionNodeBinding.== infix(_:_:)()
{
  return 1;
}

unint64_t sub_1BB4D7974(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4D7998();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4D7998()
{
  unint64_t result;

  result = qword_1EF2C55D0;
  if (!qword_1EF2C55D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShareAttributionNodeBinding, &type metadata for FormatShareAttributionNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C55D0);
  }
  return result;
}

unint64_t sub_1BB4D79DC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4DDF50();
  a1[2] = sub_1BAEF58B4();
  result = sub_1BB4D7A10();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4D7A10()
{
  unint64_t result;

  result = qword_1EF2C55D8;
  if (!qword_1EF2C55D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShareAttributionNodeBinding, &type metadata for FormatShareAttributionNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C55D8);
  }
  return result;
}

uint64_t sub_1BB4D7A54(_QWORD *a1)
{
  return FormatShareAttributionNodeBinding.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatShareAttributionNodeBinding()
{
  return &type metadata for FormatShareAttributionNodeBinding;
}

void *FormatCornerRadius.from(bounds:)@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v5;
  double v7;
  int v8;
  double v9;
  void *result;
  double Height;
  double Width;
  CGRect v17;

  v7 = *(double *)v5;
  v8 = *(char *)(v5 + 16);
  if (v8 < 0)
  {
    Height = CGRectGetHeight(*(CGRect *)&a2);
    v17.origin.x = a2;
    v17.origin.y = a3;
    v17.size.width = a4;
    v17.size.height = a5;
    Width = CGRectGetWidth(v17);
    if (Width >= Height)
      Width = Height;
    v9 = Width * 0.5;
    result = &unk_1E7250158;
    LOBYTE(v8) = LOBYTE(v7);
  }
  else
  {
    v9 = *(double *)v5;
    result = (void *)swift_bridgeObjectRetain();
  }
  *(double *)a1 = v9;
  *(_QWORD *)(a1 + 8) = result;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  return result;
}

double FormatCornerRadius.Value.radius.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t FormatCornerRadius.Value.uiRectCorner.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  result = 0;
  v4 = (char *)(v1 + 32);
  do
  {
    v5 = *v4++;
    v6 = qword_1BB91E868[v5];
    if ((v6 & ~result) == 0)
      v6 = 0;
    result |= v6;
    --v2;
  }
  while (v2);
  return result;
}

uint64_t FormatCorner.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB4D7BA0 + 4 * byte_1BB91E3E0[*v0]))(7105633, 0xE300000000000000);
}

uint64_t sub_1BB4D7BA0()
{
  return 0x7466654C706F74;
}

uint64_t sub_1BB4D7BB8()
{
  return 0x7468676952706F74;
}

uint64_t sub_1BB4D7BD0()
{
  return 0x654C6D6F74746F62;
}

uint64_t sub_1BB4D7BEC()
{
  return 0x69526D6F74746F62;
}

uint64_t FormatCornerRadius.Value.init(radius:corners:continuous:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)a3 = a4;
  *(_QWORD *)(a3 + 8) = result;
  *(_BYTE *)(a3 + 16) = a2;
  return result;
}

uint64_t FormatCornerRadius.Value.corners.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCornerRadius.Value.continuous.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

BOOL static FormatCornerRadius.RoundedValue.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatCornerRadius.description.getter()
{
  uint64_t v0;

  if (*(char *)(v0 + 16) < 0)
    return 0x6465646E756F72;
  else
    return FormatCornerRadius.Value.description.getter();
}

void FormatCornerRadius.Value.radius.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*FormatCornerRadius.Value.radius.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCornerRadius.Value.corners.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FormatCornerRadius.Value.corners.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCornerRadius.Value.continuous.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*FormatCornerRadius.Value.continuous.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCornerRadius.RoundedValue.continuous.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void static FormatCornerRadius.RoundedValue.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FormatCorner.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB4D7D58 + 4 * byte_1BB91E3E5[*v0]))(7105633, 0xE300000000000000);
}

uint64_t sub_1BB4D7D58()
{
  return 0x7466654C706F74;
}

uint64_t sub_1BB4D7D70()
{
  return 0x7468676952706F74;
}

uint64_t sub_1BB4D7D88()
{
  return 0x654C6D6F74746F62;
}

uint64_t sub_1BB4D7DA4()
{
  return 0x69526D6F74746F62;
}

void sub_1BB4D7DC4(char *a1)
{
  sub_1BB801D50(*a1);
}

void sub_1BB4D7DD0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB4D7E14()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB4D7EA8()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB4D7EDC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB4D7F5C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB4D7F9C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB4D8030()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB4D8058 + 4 * byte_1BB91E3F9[*v0]))();
}

void sub_1BB4D8058(_QWORD *a1@<X8>)
{
  *a1 = 0x7466654C706F74;
  a1[1] = 0xE700000000000000;
}

void sub_1BB4D8074(_QWORD *a1@<X8>)
{
  *a1 = 0x7468676952706F74;
  a1[1] = 0xE800000000000000;
}

void sub_1BB4D8090(_QWORD *a1@<X8>)
{
  *a1 = 0x654C6D6F74746F62;
  a1[1] = 0xEA00000000007466;
}

void sub_1BB4D80B0(_QWORD *a1@<X8>)
{
  *a1 = 0x69526D6F74746F62;
  a1[1] = 0xEB00000000746867;
}

uint64_t _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  char v9;

  v3 = *(uint64_t *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(char *)(a1 + 16);
  v5 = *(uint64_t *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(char *)(a2 + 16);
  if (v4 < 0)
  {
    if (v7 < 0)
    {
      sub_1BA6F2B88(*(_QWORD *)a1, v2, v4);
      sub_1BA6F2B88(v5, v6, v7);
      v9 = ((v3 & 1) == 0) ^ v5;
      return v9 & 1;
    }
    goto LABEL_11;
  }
  if (v7 < 0)
  {
    swift_bridgeObjectRetain();
LABEL_11:
    sub_1BA6F2B04(v5, v6, v7);
    sub_1BA6F2B88(v3, v2, v4);
    sub_1BA6F2B88(v5, v6, v7);
LABEL_12:
    v9 = 0;
    return v9 & 1;
  }
  if (*(double *)&v3 != *(double *)&v5)
  {
    sub_1BA6F2B04(*(_QWORD *)a1, v2, v4);
    goto LABEL_11;
  }
  sub_1BA6F2B04(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
  sub_1BA6F2B04(v3, v2, v4);
  sub_1BA6F2B04(v3, v2, v4);
  sub_1BA6F2B04(v5, v6, v7);
  v8 = sub_1BA620178(v2, v6);
  sub_1BA6F2B88(v3, v2, v4);
  sub_1BA6F2B88(v5, v6, v7);
  sub_1BA6F2B88(v5, v6, v7);
  sub_1BA6F2B88(v3, v2, v4);
  if ((v8 & 1) == 0 || ((((v4 & 1) == 0) ^ v7) & 1) == 0)
    goto LABEL_12;
  v9 = 1;
  return v9 & 1;
}

uint64_t _s8NewsFeed18FormatCornerRadiusO5ValueV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (*(double *)a1 != *(double *)a2)
    return 0;
  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA620178(v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return v2 ^ v3 ^ 1u;
  else
    return 0;
}

unint64_t sub_1BB4D82F0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4D8314();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4D8314()
{
  unint64_t result;

  result = qword_1EF2C55E0;
  if (!qword_1EF2C55E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius, &type metadata for FormatCornerRadius);
    atomic_store(result, (unint64_t *)&qword_1EF2C55E0);
  }
  return result;
}

uint64_t sub_1BB4D8358(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA69A4F4, (uint64_t (*)(void))sub_1BA64E10C, (uint64_t (*)(void))sub_1BB4D8374);
}

unint64_t sub_1BB4D8374()
{
  unint64_t result;

  result = qword_1EF2C55E8;
  if (!qword_1EF2C55E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius, &type metadata for FormatCornerRadius);
    atomic_store(result, (unint64_t *)&qword_1EF2C55E8);
  }
  return result;
}

unint64_t sub_1BB4D83B8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4D83DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4D83DC()
{
  unint64_t result;

  result = qword_1EF2C55F0;
  if (!qword_1EF2C55F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius.Value, &type metadata for FormatCornerRadius.Value);
    atomic_store(result, (unint64_t *)&qword_1EF2C55F0);
  }
  return result;
}

uint64_t sub_1BB4D8420(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA608E80, (uint64_t (*)(void))sub_1BA5E73C8, (uint64_t (*)(void))sub_1BB4D843C);
}

unint64_t sub_1BB4D843C()
{
  unint64_t result;

  result = qword_1EF2C55F8;
  if (!qword_1EF2C55F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius.Value, &type metadata for FormatCornerRadius.Value);
    atomic_store(result, (unint64_t *)&qword_1EF2C55F8);
  }
  return result;
}

unint64_t sub_1BB4D8480(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4D84A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4D84A4()
{
  unint64_t result;

  result = qword_1EF2C5600;
  if (!qword_1EF2C5600)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius.RoundedValue, &type metadata for FormatCornerRadius.RoundedValue);
    atomic_store(result, (unint64_t *)&qword_1EF2C5600);
  }
  return result;
}

uint64_t sub_1BB4D84E8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA608EC4, (uint64_t (*)(void))sub_1BA5E7578, (uint64_t (*)(void))sub_1BB4D8504);
}

unint64_t sub_1BB4D8504()
{
  unint64_t result;

  result = qword_1EF2C5608;
  if (!qword_1EF2C5608)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius.RoundedValue, &type metadata for FormatCornerRadius.RoundedValue);
    atomic_store(result, (unint64_t *)&qword_1EF2C5608);
  }
  return result;
}

unint64_t sub_1BB4D854C()
{
  unint64_t result;

  result = qword_1EF2C5610;
  if (!qword_1EF2C5610)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCorner, &type metadata for FormatCorner);
    atomic_store(result, (unint64_t *)&qword_1EF2C5610);
  }
  return result;
}

unint64_t sub_1BB4D8590(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB4D85BC();
  result = sub_1BA54DA68();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB4D85BC()
{
  unint64_t result;

  result = qword_1EF2C5618;
  if (!qword_1EF2C5618)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCorner, &type metadata for FormatCorner);
    atomic_store(result, (unint64_t *)&qword_1EF2C5618);
  }
  return result;
}

unint64_t sub_1BB4D8600(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4D8624();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4D8624()
{
  unint64_t result;

  result = qword_1EF2C5620;
  if (!qword_1EF2C5620)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCorner, &type metadata for FormatCorner);
    atomic_store(result, (unint64_t *)&qword_1EF2C5620);
  }
  return result;
}

uint64_t sub_1BB4D8668(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA8363F4, (uint64_t (*)(void))sub_1BA836438, (uint64_t (*)(void))sub_1BB4D854C);
}

double sub_1BB4D8684@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

double sub_1BB4D8690(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

uint64_t sub_1BB4D869C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4D86A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_1BB4D86E8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 16);
  return result;
}

_BYTE *sub_1BB4D86F4(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = *result;
  return result;
}

uint64_t assignWithCopy for FormatCornerRadius(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA6F2B04(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA6F2B88(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatCornerRadius(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA6F2B88(v4, v5, v6);
  return a1;
}

uint64_t sub_1BB4D8798(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_1BB4D87A4(uint64_t result)
{
  *(_BYTE *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_1BB4D87B4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for FormatCornerRadius()
{
  return &type metadata for FormatCornerRadius;
}

uint64_t assignWithCopy for FormatCornerRadius.Value(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FormatCornerRadius.Value(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatCornerRadius.Value()
{
  return &type metadata for FormatCornerRadius.Value;
}

ValueMetadata *type metadata accessor for FormatCornerRadius.RoundedValue()
{
  return &type metadata for FormatCornerRadius.RoundedValue;
}

ValueMetadata *type metadata accessor for FormatCorner()
{
  return &type metadata for FormatCorner;
}

_QWORD *sub_1BB4D88A0(double *a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v3;
  void *v4;
  char v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  double Height;
  double Width;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  __int128 v25;
  _QWORD *v26;
  _OWORD v28[2];
  uint64_t v29;
  CGRect v30;
  CGRect v31;

  v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 <= 0xFD)
  {
    v3 = *(_QWORD *)a2;
    v4 = *(void **)(a2 + 8);
    if ((v2 & 0x80) != 0)
    {
      v7 = a1[4];
      v6 = a1[5];
      v5 = v3 & 1;
      v9 = a1[2];
      v8 = a1[3];
      v30.origin.x = v9;
      v30.origin.y = v8;
      v30.size.width = v7;
      v30.size.height = v6;
      Height = CGRectGetHeight(v30);
      v31.origin.x = v9;
      v31.origin.y = v8;
      v31.size.width = v7;
      v31.size.height = v6;
      Width = CGRectGetWidth(v31);
      if (Width >= Height)
        Width = Height;
      *(double *)&v12 = Width * 0.5;
      sub_1BA6E6CC4(v3, (uint64_t)v4, v2);
      v3 = v12;
      v4 = &unk_1E7254E18;
    }
    else
    {
      v5 = v2 & 1;
      sub_1BA6F2B04(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v2);
    }
  }
  else
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
  }
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v13);
  sub_1BA8C88C8(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB87FC80;
  v20 = (_QWORD *)(v19 + v18);
  if (v4)
    v21 = v3;
  else
    v21 = 0;
  sub_1BAAF3A18(0x737569646152, 0xE600000000000000, v21, v4 == 0, v20);
  v22 = type metadata accessor for FormatInspectionItem(0);
  v23 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v20, 0, 1, v22);
  swift_bridgeObjectRetain();
  sub_1BAAF9DC4(0x7372656E726F43, 0xE700000000000000, (uint64_t)v4, (_QWORD *)((char *)v20 + v17));
  v23((_QWORD *)((char *)v20 + v17), 0, 1, v22);
  if (v4)
    swift_bridgeObjectRelease();
  else
    v5 = 2;
  sub_1BAAF6B38(0x6F756E69746E6F43, 0xEA00000000007375, v5, (_QWORD *)((char *)v20 + 2 * v17));
  v23((_QWORD *)((char *)v20 + 2 * v17), 0, 1, v22);
  sub_1BAF89090(0x522072656E726F43, 0xED00007375696461, 0, 0, v19, v28);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v24 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v24;
  *(_QWORD *)(v24 + 48) = v29;
  v25 = v28[1];
  *(_OWORD *)(v24 + 16) = v28[0];
  *(_OWORD *)(v24 + 32) = v25;
  v26 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v26;
}

uint64_t sub_1BB4D8BE8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void FormatDateTimeBinding.bind(binder:context:)()
{
  sub_1BB4D9134();
}

uint64_t sub_1BB4D8C38(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8[3];

  if (!*(_BYTE *)(v1 + 24))
  {
    v4 = *(_QWORD *)(v1 + 8);
    v3 = *(_QWORD *)(v1 + 16);
    v5 = *(_QWORD *)v1;
    v8[0] = v5;
    v8[1] = v4;
    v8[2] = v3;
    v7 = 1;
    sub_1BA690C00(v5, v4, v3, 0);
    result = sub_1BB6B84D4(v8, &v7);
    if (!v2)
    {
      v6 = result;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1BB4D8CF8(_QWORD *a1)
{
  FormatDateTimeBinding.encode(to:)(a1);
}

uint64_t sub_1BB4D8D10(uint64_t a1)
{
  return sub_1BB4D8C38(a1);
}

void sub_1BB4D8D24()
{
  sub_1BB4D9134();
}

void _s8NewsFeed21FormatDateTimeBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_1BB4D8D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  BOOL v14;
  char v15;

  if (v7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA690C00(v0, v3, v2, v7);
    sub_1BA5A7EF8(v1, v5, v4, v6);
    v8 = v0;
    v9 = v3;
    v10 = v2;
    v11 = v7;
LABEL_3:
    sub_1BA5A7EF8(v8, v9, v10, v11);
    return 0;
  }
  v14 = v1 == v0 && v5 == v3;
  if (!v14 && (sub_1BB874398() & 1) == 0)
  {
    sub_1BA690C00(v1, v5, v4, 0);
    sub_1BA690C00(v0, v3, v2, 0);
    sub_1BA5A7EF8(v1, v5, v4, 0);
    v8 = v0;
    v9 = v3;
    v10 = v2;
    v11 = 0;
    goto LABEL_3;
  }
  sub_1BA690C00(v0, v3, v2, 0);
  sub_1BA690C00(v1, v5, v4, 0);
  sub_1BA690C00(v1, v5, v4, 0);
  sub_1BA690C00(v0, v3, v2, 0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1BA8869D0(v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5A7EF8(v1, v5, v4, 0);
  sub_1BA5A7EF8(v0, v3, v2, 0);
  sub_1BA5A7EF8(v0, v3, v2, 0);
  sub_1BA5A7EF8(v1, v5, v4, 0);
  return (v15 & 1) != 0;
}

void sub_1BB4D9134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];
  char v12;

  v2 = v1;
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_BYTE *)(v0 + 24))
  {
    v7 = *(_QWORD *)(v0 + 8);
    v6 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)v0;
    v11[0] = *(_QWORD *)v0;
    v11[1] = v7;
    v11[2] = v6;
    v12 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1BB6B84D4(v11, &v12);
    if (!v2)
    {
      sub_1BB3757A0(v8, v7, v9, 1, (uint64_t)v5);
      sub_1BA98DC18((uint64_t)v5);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1BB4D9230(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4D9254();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4D9254()
{
  unint64_t result;

  result = qword_1EF2C5628;
  if (!qword_1EF2C5628)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateTimeBinding, &type metadata for FormatDateTimeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C5628);
  }
  return result;
}

unint64_t sub_1BB4D9298(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA547878();
  a1[2] = sub_1BAEEEC44();
  result = sub_1BB4D92CC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4D92CC()
{
  unint64_t result;

  result = qword_1EF2C5630;
  if (!qword_1EF2C5630)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateTimeBinding, &type metadata for FormatDateTimeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C5630);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDateTimeBinding()
{
  return &type metadata for FormatDateTimeBinding;
}

uint64_t sub_1BB4D9320(char a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  int64_t v33;
  char v34;
  _QWORD *v35;

  v34 = a1 & 1;
  v2 = (_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v32 = v3 + 64;
  v4 = 1 << *(_BYTE *)(v3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v3 + 64);
  v33 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v7 << 6);
    }
    else
    {
      v10 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_40;
      if (v10 >= v33)
        return swift_release();
      v11 = *(_QWORD *)(v32 + 8 * v10);
      ++v7;
      if (!v11)
      {
        v7 = v10 + 1;
        if (v10 + 1 >= v33)
          return swift_release();
        v11 = *(_QWORD *)(v32 + 8 * v7);
        if (!v11)
        {
          v7 = v10 + 2;
          if (v10 + 2 >= v33)
            return swift_release();
          v11 = *(_QWORD *)(v32 + 8 * v7);
          if (!v11)
          {
            v7 = v10 + 3;
            if (v10 + 3 >= v33)
              return swift_release();
            v11 = *(_QWORD *)(v32 + 8 * v7);
            if (!v11)
            {
              v7 = v10 + 4;
              if (v10 + 4 >= v33)
                return swift_release();
              v11 = *(_QWORD *)(v32 + 8 * v7);
              if (!v11)
              {
                v12 = v10 + 5;
                if (v12 >= v33)
                  return swift_release();
                v11 = *(_QWORD *)(v32 + 8 * v12);
                if (!v11)
                {
                  while (1)
                  {
                    v7 = v12 + 1;
                    if (__OFADD__(v12, 1))
                      goto LABEL_41;
                    if (v7 >= v33)
                      return swift_release();
                    v11 = *(_QWORD *)(v32 + 8 * v7);
                    ++v12;
                    if (v11)
                      goto LABEL_25;
                  }
                }
                v7 = v12;
              }
            }
          }
        }
      }
LABEL_25:
      v6 = (v11 - 1) & v11;
      v9 = __clz(__rbit64(v11)) + (v7 << 6);
    }
    v13 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v9);
    v15 = *v13;
    v14 = v13[1];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = (_QWORD *)*v2;
    v35 = (_QWORD *)*v2;
    *v2 = 0x8000000000000000;
    v19 = sub_1BA6E35A8(v15, v14);
    v20 = v17[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (v17[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v26 = v35;
        if ((v18 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BB4C9A40();
        v26 = v35;
        if ((v23 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1BB4BABFC(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_1BA6E35A8(v15, v14);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_42;
      v19 = v24;
      v26 = v35;
      if ((v23 & 1) != 0)
      {
LABEL_4:
        *(_BYTE *)(v26[7] + v19) = v34;
        goto LABEL_5;
      }
    }
    v26[(v19 >> 6) + 8] |= 1 << v19;
    v27 = (uint64_t *)(v26[6] + 16 * v19);
    *v27 = v15;
    v27[1] = v14;
    *(_BYTE *)(v26[7] + v19) = v34;
    v28 = v26[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_39;
    v26[2] = v30;
    swift_bridgeObjectRetain();
LABEL_5:
    *v2 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DebugJournalSectionStateManager()
{
  return objc_opt_self();
}

uint64_t sub_1BB4D9670@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD v30[4];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[2];
  unsigned __int8 v41;
  uint64_t v42;

  v5 = v4;
  v6 = result;
  v7 = a3;
  v8 = *(_QWORD *)(v3 + 8);
  v9 = *(_QWORD *)(v3 + 24);
  v10 = *(_QWORD *)(v3 + 32);
  v11 = *(_QWORD *)(v3 + 40);
  v12 = *(_QWORD *)(v3 + 48);
  v13 = (void *)*(char *)(v3 + 56);
  v42 = *(_QWORD *)(v3 + 64);
  if ((~v8 & 0xF000000000000007) == 0 && (v9 & 7) == 7)
  {
    v18 = 0;
    v19 = 0;
    v20 = -1;
  }
  else
  {
    v32 = v10;
    v33 = v11;
    v34 = v13;
    v35 = a3;
    v15 = *(_QWORD *)(v3 + 16);
    v36 = *(_QWORD *)v3;
    v37 = v8;
    v38 = v15;
    v39 = v9;
    v16 = result;
    v17 = a2;
    sub_1BA7CCBB4(v36, v8, v15, v9);
    sub_1BACCC060(v16, v17, v40);
    result = sub_1BAC68C70(v36, v8, v15, v9);
    if (v5)
      return result;
    v18 = v40[0];
    v19 = v40[1];
    v20 = v41;
    v13 = v34;
    v7 = v35;
    a2 = v17;
    v6 = v16;
    v10 = v32;
    v11 = v33;
  }
  v35 = v18;
  if ((~(v10 & v12) & 0x3000000000000007) != 0)
  {
    v32 = a2;
    if ((v12 & 0x2000000000000000) != 0)
    {
      v31 = v19;
      v36 = v10;
      sub_1BA7CCCA0(v10, v11, v12);
      v29 = sub_1BA76F060(v6);
      result = sub_1BAC68C54(v10, v11, v12);
      if (!v5)
      {
        v34 = v29;
        LODWORD(v33) = 0;
        v19 = v31;
        goto LABEL_10;
      }
      v23 = v35;
      v24 = v31;
    }
    else
    {
      swift_retain();
      sub_1BAC68CB0(v10, v11, v12);
      v34 = sub_1BB254E04(v6, v10, v11, v12, v6);
      result = sub_1BAC68C54(v10, v11, v12);
      if (!v5)
      {
        LODWORD(v33) = 1;
        goto LABEL_10;
      }
      v23 = v35;
      v24 = v19;
    }
    return sub_1BAC68A50(v23, v24, v20);
  }
  v34 = 0;
  LODWORD(v33) = 255;
LABEL_10:
  if ((_DWORD)v13 == 3)
  {
    v21 = 3;
    v22 = 0;
  }
  else
  {
    v21 = (int)v13;
    v22 = qword_1BB91EAB8[(_QWORD)v13];
  }
  MEMORY[0x1E0C80A78](result);
  v30[2] = v26;
  v30[3] = v25;
  v27 = v42;
  swift_bridgeObjectRetain();
  v28 = sub_1BB141794((void (*)(__int128 *__return_ptr, _QWORD *))sub_1BB4D9E4C, (uint64_t)v30, v27);
  result = swift_bridgeObjectRelease();
  if (v5)
  {
    sub_1BAC68A38(v34, v33);
    return sub_1BAC68A50(v35, v19, v20);
  }
  else
  {
    *(_QWORD *)v7 = v35;
    *(_QWORD *)(v7 + 8) = v19;
    *(_BYTE *)(v7 + 16) = v20;
    *(_QWORD *)(v7 + 24) = v34;
    *(_BYTE *)(v7 + 32) = v33;
    *(_QWORD *)(v7 + 40) = v22;
    *(_BYTE *)(v7 + 48) = v21 == 3;
    *(_QWORD *)(v7 + 56) = v28;
  }
  return result;
}

void sub_1BB4D9970(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1BB21C560(a1, a2, a3);
}

uint64_t sub_1BB4D99B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BADBD010(a1, a2);
}

uint64_t sub_1BB4D99C8(_QWORD *a1)
{
  return sub_1BADBD4CC(a1);
}

uint64_t sub_1BB4D99E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(unsigned __int8 *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v13 = *(_QWORD *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 32);
  v15 = *(_QWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a2 + 48);
  v18 = *(unsigned __int8 *)(a2 + 56);
  v19 = *(_QWORD *)(a2 + 64);
  if ((~v3 & 0xF000000000000007) != 0 || (v5 & 7) != 7)
  {
    v55 = v2;
    v56 = v3;
    v57 = v4;
    v58 = v5;
    if ((~v11 & 0xF000000000000007) == 0 && (v14 & 7) == 7)
    {
      sub_1BA7CCBB4(v2, v3, v4, v5);
      sub_1BA7CCBB4(v2, v3, v4, v5);
      sub_1BA7CCC14(v2, v3, v4, v5);
LABEL_9:
      sub_1BAC68C90(v12, v11, v13, v14);
      sub_1BAC68C70(v2, v3, v4, v5);
      sub_1BAC68C70(v12, v11, v13, v14);
      return 0;
    }
    v51 = v12;
    v52 = v11;
    v53 = v13;
    v54 = v14;
    v49 = v19;
    v50 = v10;
    v48 = v17;
    v47 = v18;
    v46 = v6;
    v20 = v9;
    v21 = v15;
    v22 = v16;
    sub_1BA7CCBB4(v2, v3, v4, v5);
    sub_1BA7CCBB4(v2, v3, v4, v5);
    v23 = static FormatMenuTitle.== infix(_:_:)(&v55, &v51);
    sub_1BA7CCC14(v55, v56, v57, v58);
    sub_1BAC68C70(v2, v3, v4, v5);
    v16 = v22;
    v15 = v21;
    v17 = v48;
    v19 = v49;
    v9 = v20;
    v6 = v46;
    v18 = v47;
    v10 = v50;
    if ((v23 & 1) == 0)
      return 0;
  }
  else if ((~v11 & 0xF000000000000007) != 0 || (v14 & 7) != 7)
  {
    goto LABEL_9;
  }
  if ((~(v7 & v8) & 0x3000000000000007) == 0)
  {
    if ((v16 & 0x3000000000000007 & v17) == 0x3000000000000007)
      goto LABEL_18;
LABEL_16:
    v28 = v17;
    v29 = v6;
    v30 = v15;
    v31 = v16;
    sub_1BAC68CB0(v16, v15, v17);
    sub_1BAC68C54(v7, v29, v8);
    sub_1BAC68C54(v31, v30, v28);
    return 0;
  }
  v55 = v7;
  v56 = v6;
  v57 = v8;
  if ((v16 & 0x3000000000000007 & v17) == 0x3000000000000007)
  {
    v24 = v17;
    v25 = v6;
    v26 = v15;
    v27 = v16;
    sub_1BA7CCCA0(v7, v6, v8);
    sub_1BA7CCCA0(v7, v25, v8);
    sub_1BA7CCC64(v7, v25, v8);
    v16 = v27;
    v15 = v26;
    v17 = v24;
    v6 = v25;
    goto LABEL_16;
  }
  v51 = v16;
  v52 = v15;
  v53 = v17;
  v32 = v10;
  v33 = v19;
  v34 = v18;
  v35 = v6;
  v36 = v9;
  sub_1BA7CCCA0(v7, v6, v8);
  sub_1BA7CCCA0(v7, v35, v8);
  v37 = static FormatMenuImage.== infix(_:_:)(&v55, &v51);
  sub_1BA7CCC64(v55, v56, v57);
  sub_1BAC68C54(v7, v35, v8);
  v9 = v36;
  v18 = v34;
  v19 = v33;
  v10 = v32;
  if ((v37 & 1) == 0)
    return 0;
LABEL_18:
  if (v9 == 3)
  {
    if (v18 != 3)
      return 0;
  }
  else
  {
    if (v18 == 3)
      return 0;
    v38 = 0x746C7561666564;
    v39 = v10;
    if (v9)
    {
      if (v9 == 1)
      {
        v40 = 0x7463757274736564;
        v41 = 0xEB00000000657669;
      }
      else
      {
        v41 = 0xE600000000000000;
        v40 = 0x656E696C6E69;
      }
    }
    else
    {
      v41 = 0xE700000000000000;
      v40 = 0x746C7561666564;
    }
    if (v18)
    {
      if (v18 == 1)
      {
        v38 = 0x7463757274736564;
        v42 = 0xEB00000000657669;
      }
      else
      {
        v42 = 0xE600000000000000;
        v38 = 0x656E696C6E69;
      }
    }
    else
    {
      v42 = 0xE700000000000000;
    }
    v43 = v19;
    if (v40 == v38 && v41 == v42)
    {
      swift_bridgeObjectRelease_n();
      return sub_1BA88FCC8(v39, v43);
    }
    v45 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v39;
    v19 = v43;
    if ((v45 & 1) == 0)
      return 0;
  }
  return sub_1BA88FCC8(v10, v19);
}

void sub_1BB4D9E4C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BB4D9970(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t destroy for FormatMenuGroup(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  if ((~v2 & 0xF000000000000007) != 0 || (a1[3] & 7) != 7)
    sub_1BA7CCC14(*a1, v2, a1[2], a1[3]);
  v4 = a1[4];
  v5 = a1[6];
  if ((~(v4 & v5) & 0x3000000000000007) != 0)
    sub_1BA7CCC64(v4, a1[5], v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatMenuGroup(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  v5 = a2[3];
  if ((~v4 & 0xF000000000000007) == 0 && (a2[3] & 7) == 7)
  {
    v9 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
  }
  else
  {
    v7 = *a2;
    v8 = a2[2];
    sub_1BA7CCBB4(*a2, a2[1], v8, v5);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v5;
  }
  v10 = a2[4];
  v11 = a2[6];
  if ((~(v10 & v11) & 0x3000000000000007) != 0)
  {
    v12 = a2[5];
    sub_1BA7CCCA0(a2[4], v12, a2[6]);
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v11;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_QWORD *)(a1 + 48) = a2[6];
  }
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatMenuGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  if ((~*(_QWORD *)(a1 + 8) & 0xF000000000000007) == 0 && (*(_QWORD *)(a1 + 24) & 7) == 7)
  {
    if (~v4 & 0xF000000000000007 | ~(_BYTE)v5 & 7)
    {
      v15 = *(_QWORD *)a2;
      v16 = *(_QWORD *)(a2 + 16);
      sub_1BA7CCBB4(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v16, v5);
      *(_QWORD *)a1 = v15;
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v16;
      *(_QWORD *)(a1 + 24) = v5;
    }
    else
    {
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
  }
  else if (~v4 & 0xF000000000000007 | ~(_BYTE)v5 & 7)
  {
    v9 = *(_QWORD *)a2;
    v10 = *(_QWORD *)(a2 + 16);
    sub_1BA7CCBB4(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v10, v5);
    v11 = *(_QWORD *)a1;
    v12 = *(_QWORD *)(a1 + 8);
    v13 = *(_QWORD *)(a1 + 16);
    v14 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v5;
    sub_1BA7CCC14(v11, v12, v13, v14);
  }
  else
  {
    sub_1BB4DA190((uint64_t *)a1);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  v17 = (_OWORD *)(a1 + 32);
  v19 = (_OWORD *)(a2 + 32);
  v18 = *(_QWORD *)(a2 + 32);
  v20 = *(_QWORD *)(a2 + 48);
  v21 = v18 & 0x3000000000000007 & v20;
  if ((~(*(_QWORD *)(a1 + 32) & *(_QWORD *)(a1 + 48)) & 0x3000000000000007) != 0)
  {
    if (v21 == 0x3000000000000007)
    {
      sub_1BB4DA1C4((uint64_t *)(a1 + 32));
      v23 = *(_QWORD *)(a2 + 48);
      *v17 = *v19;
      *(_QWORD *)(a1 + 48) = v23;
    }
    else
    {
      v25 = *(_QWORD *)(a2 + 40);
      sub_1BA7CCCA0(*(_QWORD *)(a2 + 32), v25, *(_QWORD *)(a2 + 48));
      v26 = *(_QWORD *)(a1 + 32);
      v27 = *(_QWORD *)(a1 + 40);
      v28 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 32) = v18;
      *(_QWORD *)(a1 + 40) = v25;
      *(_QWORD *)(a1 + 48) = v20;
      sub_1BA7CCC64(v26, v27, v28);
    }
  }
  else if (v21 == 0x3000000000000007)
  {
    v22 = *v19;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *v17 = v22;
  }
  else
  {
    v24 = *(_QWORD *)(a2 + 40);
    sub_1BA7CCCA0(*(_QWORD *)(a2 + 32), v24, *(_QWORD *)(a2 + 48));
    *(_QWORD *)(a1 + 32) = v18;
    *(_QWORD *)(a1 + 40) = v24;
    *(_QWORD *)(a1 + 48) = v20;
  }
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_1BB4DA190(uint64_t *a1)
{
  destroy for FormatMenuTitle(a1);
  return a1;
}

uint64_t *sub_1BB4DA1C4(uint64_t *a1)
{
  destroy for FormatMenuImage(a1);
  return a1;
}

uint64_t assignWithTake for FormatMenuGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 24);
  if ((~v4 & 0xF000000000000007) != 0 || (*(_QWORD *)(a1 + 24) & 7) != 7)
  {
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 24);
    if ((~v7 & 0xF000000000000007) != 0 || (*(_QWORD *)(a2 + 24) & 7) != 7)
    {
      v10 = *(_QWORD *)(a2 + 16);
      v11 = *(_QWORD *)a1;
      v12 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 24) = v8;
      sub_1BA7CCC14(v11, v4, v12, v5);
      goto LABEL_12;
    }
    sub_1BB4DA190((uint64_t *)a1);
  }
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
LABEL_12:
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a2 + 32);
  v16 = *(_QWORD *)(a1 + 48);
  if ((~(v14 & v16) & 0x3000000000000007) != 0)
  {
    v17 = *(_QWORD *)(a2 + 48);
    if ((v15 & 0x3000000000000007 & v17) != 0x3000000000000007)
    {
      v18 = *(_QWORD *)(a2 + 40);
      v19 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v15;
      *(_QWORD *)(a1 + 40) = v18;
      *(_QWORD *)(a1 + 48) = v17;
      sub_1BA7CCC64(v14, v19, v16);
      goto LABEL_17;
    }
    sub_1BB4DA1C4((uint64_t *)(a1 + 32));
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
LABEL_17:
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMenuGroup(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatMenuGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuGroup()
{
  return &type metadata for FormatMenuGroup;
}

unint64_t sub_1BB4DA3BC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEE4204();
  a1[2] = sub_1BAEE4864();
  result = sub_1BB4DA3F0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4DA3F0()
{
  unint64_t result;

  result = qword_1EF2C56D8;
  if (!qword_1EF2C56D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91EA04, &type metadata for FormatMenuGroup);
    atomic_store(result, (unint64_t *)&qword_1EF2C56D8);
  }
  return result;
}

unint64_t sub_1BB4DA434(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4DA458();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4DA458()
{
  unint64_t result;

  result = qword_1EF2C56E0;
  if (!qword_1EF2C56E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91EA2C, &type metadata for FormatMenuGroup);
    atomic_store(result, (unint64_t *)&qword_1EF2C56E0);
  }
  return result;
}

id sub_1BB4DA49C(void *a1, uint64_t a2)
{
  void *v4;

  swift_beginAccess();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;

  return a1;
}

uint64_t sub_1BB4DA4EC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1BB4DA5BC()
{
  sub_1BB4DA4EC();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB4DA5DC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB4DA600()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1BB4DA624(void *a1)
{
  uint64_t v1;

  return sub_1BB4DA49C(a1, v1);
}

uint64_t sub_1BB4DA62C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB4DA650()
{
  swift_release();
  return swift_deallocObject();
}

void static FormatCodingFillStrategy.defaultValue.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xB000000000000000;
}

BOOL static FormatCodingFillStrategy.shouldEncode(wrappedValue:)(_QWORD *a1)
{
  return *a1 != 0xB000000000000000 || ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) != 22;
}

unint64_t sub_1BB4DA6A4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4DA6C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4DA6C8()
{
  unint64_t result;

  result = qword_1EF2C56E8;
  if (!qword_1EF2C56E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingFillStrategy, &type metadata for FormatCodingFillStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2C56E8);
  }
  return result;
}

void sub_1BB4DA70C(_QWORD *a1@<X8>)
{
  *a1 = 0xB000000000000000;
}

BOOL sub_1BB4DA718(_QWORD *a1)
{
  return *a1 != 0xB000000000000000 || ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) != 22;
}

ValueMetadata *type metadata accessor for FormatCodingFillStrategy()
{
  return &type metadata for FormatCodingFillStrategy;
}

uint64_t FormatDecoration.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDecoration.init(identifier:name:description:content:columns:zIndex:options:selectors:pin:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  char v17;

  v14 = *a7;
  v15 = *a14;
  v16 = *((_WORD *)a14 + 4);
  v17 = *((_BYTE *)a14 + 10);
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = v14;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11 & 1;
  *(_QWORD *)(a9 + 80) = a12;
  *(_QWORD *)(a9 + 88) = a13;
  *(_QWORD *)(a9 + 96) = v15;
  *(_BYTE *)(a9 + 106) = v17;
  *(_WORD *)(a9 + 104) = v16;
  return result;
}

uint64_t FormatDecoration.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDecoration.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDecoration.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDecoration.columns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDecoration.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDecoration.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatDecoration.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatDecoration.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatDecoration.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatDecoration.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatDecoration.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatDecoration.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 48);
  return swift_retain();
}

uint64_t FormatDecoration.columns.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatDecoration.columns.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatDecoration.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t FormatDecoration.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatDecoration.options.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatDecoration.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatDecoration.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatDecoration.pin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(unsigned __int8 *)(v1 + 106);
  v4 = *(unsigned __int16 *)(v1 + 104);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 10) = v3;
  *(_WORD *)(a1 + 8) = v4;
  return sub_1BA771834(v2, v4 | (v3 << 16));
}

BOOL _s8NewsFeed16FormatDecorationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BOOL8 result;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  char v41;
  uint64_t v42;
  unsigned __int16 v43;
  char v44;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v38 = *(_QWORD *)(a1 + 56);
  v32 = *(_QWORD *)(a1 + 64);
  v36 = *(_BYTE *)(a1 + 72);
  v34 = *(_QWORD *)(a1 + 80);
  v24 = *(_QWORD *)(a1 + 96);
  v27 = *(unsigned __int16 *)(a1 + 104);
  v28 = *(unsigned __int8 *)(a1 + 106);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v37 = *(_QWORD *)(a2 + 56);
  v30 = *(_QWORD *)(a1 + 88);
  v31 = *(_QWORD *)(a2 + 64);
  v35 = *(unsigned __int8 *)(a2 + 72);
  v33 = *(_QWORD *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 88);
  v23 = *(_QWORD *)(a2 + 96);
  v25 = *(unsigned __int16 *)(a2 + 104);
  v26 = *(unsigned __int8 *)(a2 + 106);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1BB874398(), result = 0, (v12 & 1) != 0))
  {
    if (v3)
    {
      if (!v7)
        return 0;
      if (v2 != v8 || v3 != v7)
      {
        v14 = sub_1BB874398();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v6)
    {
      if (!v9)
        return 0;
      if (v4 != v10 || v6 != v9)
      {
        v15 = sub_1BB874398();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v9)
    {
      return 0;
    }
    v42 = v5;
    v39 = v11;
    static FormatDecorationContent.== infix(_:_:)((uint64_t)&v42);
    if ((v16 & 1) == 0 || (sub_1BA579D0C(v38, v37) & 1) == 0)
      return 0;
    if ((v36 & 1) != 0)
    {
      if (!v35)
        return 0;
    }
    else
    {
      v17 = v35;
      if (v32 != v31)
        v17 = 1;
      if ((v17 & 1) != 0)
        return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = sub_1BA883260(v34, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1BA6EB330(v30, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
      return 0;
    v20 = v27 | (v28 << 16);
    v21 = v25 | (v26 << 16);
    if (BYTE2(v20) == 255)
    {
      if (BYTE2(v21) == 255)
        return 1;
      goto LABEL_33;
    }
    v42 = v24;
    v43 = v27;
    v44 = (v27 | (v28 << 16)) >> 16;
    if (BYTE2(v21) == 255)
    {
      sub_1BA77A170(v24, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      sub_1BA77A170(v24, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      sub_1BA77A170(v24, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
LABEL_33:
      sub_1BA771834(v23, v21);
      sub_1BA771864(v24, v20);
      sub_1BA771864(v23, v21);
      return 0;
    }
    v39 = v23;
    v40 = v25;
    v41 = (v25 | (v26 << 16)) >> 16;
    sub_1BA771834(v24, v20);
    sub_1BA77A170(v24, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
    v22 = _s8NewsFeed31FormatSupplementaryNodePinTraitO2eeoiySbAC_ACtFZ_0((uint64_t)&v42, (uint64_t)&v39);
    sub_1BA77A170(v42, v43, v44, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    sub_1BA771864(v24, v20);
    return (v22 & 1) != 0;
  }
  return result;
}

unint64_t sub_1BB4DAD98(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA89682C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4DADBC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA832CB4();
  a1[2] = sub_1BA832CF8();
  result = sub_1BB4DADF0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4DADF0()
{
  unint64_t result;

  result = qword_1ED3D0500;
  if (!qword_1ED3D0500)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDecoration, &type metadata for FormatDecoration);
    atomic_store(result, (unint64_t *)&qword_1ED3D0500);
  }
  return result;
}

uint64_t sub_1BB4DAE34@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4DAE40(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_1BB4DAE80@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4DAE8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1BB4DAECC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4DAED8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1BB4DAF18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4DAF24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1BB4DAF64@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4DAF70(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 80) = v3;
  return result;
}

uint64_t sub_1BB4DAFB0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4DAFBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 88) = v3;
  return result;
}

uint64_t assignWithCopy for FormatDecoration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (uint64_t *)(a1 + 96);
  v6 = a2 + 96;
  v7 = *(unsigned __int16 *)(a2 + 104) | (*(unsigned __int8 *)(a2 + 106) << 16);
  if (*(unsigned __int8 *)(a1 + 106) == 255)
  {
    if (BYTE2(v7) == 255)
    {
      v8 = *(_QWORD *)v6;
      *(_DWORD *)(a1 + 103) = *(_DWORD *)(v6 + 7);
      *v5 = v8;
    }
    else
    {
      v10 = *(_QWORD *)v6;
      sub_1BA77A170(*(_QWORD *)v6, v7, SBYTE2(v7), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      *(_QWORD *)(a1 + 96) = v10;
      *(_WORD *)(a1 + 104) = v7;
      *(_BYTE *)(a1 + 106) = BYTE2(v7);
    }
  }
  else if (BYTE2(v7) == 255)
  {
    sub_1BB4DB1F0(a1 + 96);
    v9 = *(_DWORD *)(v6 + 7);
    *v5 = *(_QWORD *)v6;
    *(_DWORD *)(a1 + 103) = v9;
  }
  else
  {
    v11 = *(_QWORD *)v6;
    sub_1BA77A170(*(_QWORD *)v6, v7, SBYTE2(v7), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
    v12 = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 96) = v11;
    v13 = *(unsigned __int16 *)(a1 + 104);
    *(_WORD *)(a1 + 104) = v7;
    v14 = *(_BYTE *)(a1 + 106);
    *(_BYTE *)(a1 + 106) = BYTE2(v7);
    sub_1BA77A170(v12, v13, v14, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
  }
  return a1;
}

uint64_t sub_1BB4DB1F0(uint64_t a1)
{
  destroy for FormatSupplementaryNodePinTrait(a1);
  return a1;
}

uint64_t assignWithTake for FormatDecoration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 106) != 255)
  {
    v8 = *(unsigned __int16 *)(a2 + 104) | (*(unsigned __int8 *)(a2 + 106) << 16);
    if (HIWORD(v8) <= 0xFEu)
    {
      v9 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
      v10 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 96) = *v7;
      *(_WORD *)(a1 + 104) = v8;
      *(_BYTE *)(a1 + 106) = BYTE2(v8);
      sub_1BA77A170(v10, v9, SBYTE2(v9), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
      return a1;
    }
    sub_1BB4DB1F0(a1 + 96);
  }
  *(_QWORD *)(a1 + 96) = *v7;
  *(_DWORD *)(a1 + 103) = *(_DWORD *)(a2 + 103);
  return a1;
}

ValueMetadata *type metadata accessor for FormatDecoration()
{
  return &type metadata for FormatDecoration;
}

uint64_t FormatItemBindingsNode.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemBindingsNode.styles.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemBindingsNode.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemBindingsNode.bind(binder:context:)(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  _OWORD v78[2];
  _QWORD v79[5];
  _OWORD v80[6];
  _OWORD v81[3];
  uint64_t v82;

  v4 = v2;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatNodeBinderContext();
  v79[4] = &protocol witness table for FormatNodeBinderContext;
  v79[3] = v11;
  v79[0] = a2;
  swift_retain();
  sub_1BB4DC4FC(v79, v80);
  if (v3)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  v45 = v8;
  v46 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  v76 = v80[4];
  v77 = v80[5];
  v78[0] = v81[0];
  *(_OWORD *)((char *)v78 + 9) = *(_OWORD *)((char *)v81 + 9);
  v72 = v80[0];
  v73 = v80[1];
  v74 = v80[2];
  v75 = v80[3];
  swift_beginAccess();
  v13 = v2[2];
  v14 = v2[3];
  swift_bridgeObjectRetain();
  v15 = sub_1BA717D44(v13, v14);
  v82 = a1;
  v17 = v16;
  swift_bridgeObjectRelease();
  v65 = 0u;
  v64 = 0u;
  v69 = 0u;
  v70 = 0u;
  v71 = 0u;
  v59 = v76;
  v60 = v77;
  v61[0] = v78[0];
  *(_OWORD *)((char *)v61 + 9) = *(_OWORD *)((char *)v78 + 9);
  v55 = v72;
  v56 = v73;
  v57 = v74;
  v66 = 0;
  v67 = MEMORY[0x1E0DEE9D8];
  v68 = MEMORY[0x1E0DEE9E8];
  LOBYTE(v54) = 1;
  v58 = v75;
  v62 = v15;
  v63 = v17;
  sub_1BA8CED9C((uint64_t)&v72);
  v18 = v46;
  sub_1BA78C280(v82, a2);
  v19 = v18;
  if (v18)
  {
    sub_1BA78C17C(&v54);
    return sub_1BA8CEE60((uint64_t)&v72);
  }
  else
  {
    v47 = sub_1BB4DC7E0((uint64_t)&v54, (uint64_t)a2);
    swift_beginAccess();
    v20 = v4[7];
    v21 = *(_QWORD *)(v20 + 16);
    v42 = v4;
    if (v21)
    {
      v22 = v20 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
      v23 = *(_QWORD *)(v45 + 72);
      v46 = v20;
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1BA4C2DD8(v22, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        *(_QWORD *)&v48 = *((_QWORD *)v10 + 2);
        swift_retain();
        FormatOptionValue.bind(binder:context:)(v82, v47);
        swift_release();
        sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v22 += v23;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease_n();
      v19 = 0;
      v4 = v42;
    }
    swift_beginAccess();
    v24 = v4[8];
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v46 = v19;
      swift_bridgeObjectRetain_n();
      v41 = v24;
      v26 = (uint64_t *)(v24 + 48);
      while (1)
      {
        v43 = v25;
        v27 = *(v26 - 2);
        v28 = *(v26 - 1);
        v30 = *v26;
        v29 = v26[1];
        v31 = v26[2];
        v32 = v26[3];
        v33 = v26[4];
        v34 = v26[5];
        *(_QWORD *)&v48 = v27;
        *((_QWORD *)&v48 + 1) = v28;
        *(_QWORD *)&v49 = v30;
        *((_QWORD *)&v49 + 1) = v29;
        v50 = v31;
        v51 = v32;
        v52 = v33;
        v53 = v34;
        v44 = v34;
        v45 = v33;
        sub_1BA76B724(v27, v28, v30, v29, v31, v32, v33);
        v35 = v46;
        FormatNodeStyle.bind(binder:context:)();
        v46 = v35;
        if (v35)
          break;
        v26 += 8;
        sub_1BA76B698(v27, v28, v30, v29, v31, v32, v45);
        v25 = v43 - 1;
        if (v43 == 1)
        {
          swift_bridgeObjectRelease_n();
          v19 = v46;
          v4 = v42;
          goto LABEL_14;
        }
      }
      sub_1BA76B698(v27, v28, v30, v29, v31, v32, v45);
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_14:
      swift_beginAccess();
      v36 = v4[9];
      v37 = *(_QWORD *)(v36 + 16);
      if (v37)
      {
        swift_bridgeObjectRetain_n();
        v38 = (uint64_t *)(v36 + 64);
        while (1)
        {
          v39 = *v38;
          v40 = *((_OWORD *)v38 - 1);
          v48 = *((_OWORD *)v38 - 2);
          v49 = v40;
          v50 = v39;
          swift_bridgeObjectRetain();
          swift_retain();
          FormatSourceMapNode.bind(binder:context:)(v82, v47);
          if (v19)
            break;
          v38 += 5;
          swift_bridgeObjectRelease();
          swift_release();
          if (!--v37)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_21;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
LABEL_21:
    sub_1BA78C17C(&v54);
    sub_1BA8CEE60((uint64_t)&v72);
    return swift_release();
  }
}

uint64_t FormatItemBindingsNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemBindingsNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemBindingsNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemBindingsNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatItemBindingsNode.itemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemBindingsNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemBindingsNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatItemBindingsNode.options.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemBindingsNode.options.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatItemBindingsNode.styles.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemBindingsNode.styles.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatItemBindingsNode.children.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemBindingsNode.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *FormatItemBindingsNode.__allocating_init(identifier:itemIdentifier:selectors:options:styles:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v16;

  v16 = (_QWORD *)swift_allocObject();
  swift_beginAccess();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  swift_beginAccess();
  v16[6] = a5;
  swift_beginAccess();
  v16[7] = a6;
  swift_beginAccess();
  v16[8] = a7;
  swift_beginAccess();
  v16[9] = a8;
  return v16;
}

_QWORD *FormatItemBindingsNode.init(identifier:itemIdentifier:selectors:options:styles:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  swift_beginAccess();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_beginAccess();
  v8[6] = a5;
  swift_beginAccess();
  v8[7] = a6;
  swift_beginAccess();
  v8[8] = a7;
  swift_beginAccess();
  v8[9] = a8;
  return v8;
}

uint64_t FormatItemBindingsNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatItemBindingsNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t *sub_1BB4DBE94@<X0>(_QWORD *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v2;
  uint64_t *result;

  result = sub_1BAE9DAE0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB4DBEBC(_QWORD *a1)
{
  return FormatItemBindingsNode.encode(to:)(a1);
}

uint64_t sub_1BB4DBEDC(_QWORD **a1, _QWORD **a2)
{
  return _s8NewsFeed22FormatItemBindingsNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BB4DBEE8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD v73[2];
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[4];
  uint64_t v87;

  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[6];
  v12 = a1[7];
  v86[0] = v11;
  v86[1] = v12;
  sub_1BA682148(v11, v12);
  v13 = v83;
  v14 = sub_1BA6AE31C((uint64_t)v86, a3, a4);
  sub_1BA766C18(v11, v12);
  if (!v13)
  {
    v83 = v10;
    v77 = v14;
    v75 = v7;
    v73[1] = 0;
    v15 = a1[11];
    v16 = *(_QWORD *)(v15 + 16);
    v17 = MEMORY[0x1E0DEE9D8];
    v76 = v8;
    v74 = a1;
    if (v16)
    {
      v86[0] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BAC7A154(0, v16, 0);
      v17 = v86[0];
      v79 = v15;
      v18 = (uint64_t *)(v15 + 48);
      do
      {
        v81 = v16;
        v82 = v17;
        v19 = *(v18 - 2);
        v20 = *(v18 - 1);
        v21 = *v18;
        v22 = v18[1];
        v23 = v18[3];
        v80 = v18[2];
        v24 = v18[4];
        v25 = v18[5];
        v26 = swift_allocObject();
        *(_QWORD *)(v26 + 16) = v19;
        *(_QWORD *)(v26 + 24) = v20;
        *(_QWORD *)(v26 + 32) = v21;
        *(_QWORD *)(v26 + 40) = v22;
        v27 = v80;
        *(_QWORD *)(v26 + 48) = v80;
        *(_QWORD *)(v26 + 56) = v23;
        *(_QWORD *)(v26 + 64) = v24;
        *(_QWORD *)(v26 + 72) = v25;
        v28 = v19;
        v17 = v82;
        sub_1BA76B724(v28, v20, v21, v22, v27, v23, v24);
        v86[0] = v17;
        v30 = *(_QWORD *)(v17 + 16);
        v29 = *(_QWORD *)(v17 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_1BAC7A154(v29 > 1, v30 + 1, 1);
          v17 = v86[0];
        }
        v18 += 8;
        *(_QWORD *)(v17 + 16) = v30 + 1;
        *(_QWORD *)(v17 + 8 * v30 + 32) = v26 | 0x9000000000000004;
        v16 = v81 - 1;
      }
      while (v81 != 1);
      swift_bridgeObjectRelease();
      v31 = v76;
      a1 = v74;
    }
    else
    {
      v31 = v8;
    }
    v32 = v78;
    swift_beginAccess();
    v33 = *(_QWORD *)(v32 + 64);
    v34 = *(_QWORD *)(v33 + 16);
    v35 = MEMORY[0x1E0DEE9D8];
    if (v34)
    {
      v82 = v17;
      v85 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BAC7A154(0, v34, 0);
      v35 = v85;
      v73[0] = v33;
      v36 = (uint64_t *)(v33 + 48);
      do
      {
        v80 = v35;
        v81 = v34;
        v37 = *(v36 - 2);
        v38 = *(v36 - 1);
        v39 = *v36;
        v40 = v36[1];
        v41 = v36[2];
        v79 = v36[3];
        v42 = v36[4];
        v43 = v36[5];
        v44 = swift_allocObject();
        *(_QWORD *)(v44 + 16) = v37;
        *(_QWORD *)(v44 + 24) = v38;
        *(_QWORD *)(v44 + 32) = v39;
        *(_QWORD *)(v44 + 40) = v40;
        v45 = v79;
        *(_QWORD *)(v44 + 48) = v41;
        *(_QWORD *)(v44 + 56) = v45;
        *(_QWORD *)(v44 + 64) = v42;
        *(_QWORD *)(v44 + 72) = v43;
        v46 = v42;
        v35 = v80;
        sub_1BA76B724(v37, v38, v39, v40, v41, v45, v46);
        v85 = v35;
        v48 = *(_QWORD *)(v35 + 16);
        v47 = *(_QWORD *)(v35 + 24);
        if (v48 >= v47 >> 1)
        {
          sub_1BAC7A154(v47 > 1, v48 + 1, 1);
          v35 = v85;
        }
        v36 += 8;
        *(_QWORD *)(v35 + 16) = v48 + 1;
        *(_QWORD *)(v35 + 8 * v48 + 32) = v44 | 0x4000000000000004;
        v34 = v81 - 1;
      }
      while (v81 != 1);
      swift_bridgeObjectRelease();
      v31 = v76;
      v32 = v78;
      a1 = v74;
      v17 = v82;
    }
    v85 = v17;
    sub_1BA7BDC30(v35);
    sub_1BA7BD850(v85);
    swift_bridgeObjectRelease();
    v49 = a1[12];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v50 = swift_bridgeObjectRetain();
    v51 = sub_1BA6E4124(v50, v49);
    v81 = sub_1BA707E14(v51, 0);
    swift_release();
    swift_bridgeObjectRelease();
    v52 = a1[13];
    v53 = *(_QWORD *)(v52 + 16);
    v54 = MEMORY[0x1E0DEE9D8];
    v55 = (uint64_t)v83;
    if (v53)
    {
      v84 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BA76B828(0, v53, 0);
      v54 = v84;
      v56 = *(unsigned __int8 *)(v31 + 80);
      v82 = v52;
      v57 = v52 + ((v56 + 32) & ~v56);
      v58 = *(_QWORD *)(v31 + 72);
      do
      {
        sub_1BA4C2DD8(v57, v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v59 = swift_allocBox();
        sub_1BA5193C4(v55, v60, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v84 = v54;
        v62 = *(_QWORD *)(v54 + 16);
        v61 = *(_QWORD *)(v54 + 24);
        if (v62 >= v61 >> 1)
        {
          sub_1BA76B828(v61 > 1, v62 + 1, 1);
          v54 = v84;
        }
        *(_QWORD *)(v54 + 16) = v62 + 1;
        *(_QWORD *)(v54 + 8 * v62 + 32) = v59 | 0x9000000000000004;
        v57 += v58;
        --v53;
        v55 = (uint64_t)v83;
      }
      while (v53);
      swift_bridgeObjectRelease();
      v31 = v76;
      v32 = v78;
    }
    swift_beginAccess();
    v63 = *(_QWORD *)(v32 + 56);
    v64 = *(_QWORD *)(v63 + 16);
    v65 = MEMORY[0x1E0DEE9D8];
    if (v64)
    {
      v87 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BA76B828(0, v64, 0);
      v65 = v87;
      v66 = *(unsigned __int8 *)(v31 + 80);
      v80 = v63;
      v67 = v63 + ((v66 + 32) & ~v66);
      v82 = *(_QWORD *)(v31 + 72);
      do
      {
        sub_1BA4C2DD8(v67, v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v68 = swift_allocBox();
        sub_1BA5193C4(v55, v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v87 = v65;
        v71 = *(_QWORD *)(v65 + 16);
        v70 = *(_QWORD *)(v65 + 24);
        if (v71 >= v70 >> 1)
        {
          sub_1BA76B828(v70 > 1, v71 + 1, 1);
          v65 = v87;
        }
        *(_QWORD *)(v65 + 16) = v71 + 1;
        *(_QWORD *)(v65 + 8 * v71 + 32) = v68 | 0x4000000000000004;
        v55 = (uint64_t)v83;
        v67 += v82;
        --v64;
      }
      while (v64);
      swift_bridgeObjectRelease();
    }
    v87 = v54;
    sub_1BA7082C0(v65);
    v14 = sub_1BA70B0DC(v87);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v14;
}

double sub_1BB4DC4FC@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  double result;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _OWORD v36[2];

  v3 = v2;
  sub_1BA7BC1BC();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7F8204(0);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (__int128 *)((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items;
  swift_beginAccess();
  v17 = *(_QWORD *)(v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  if (*(_QWORD *)(v17 + 16))
  {
    v18 = *(_QWORD *)(v3 + 32);
    v19 = *(_QWORD *)(v3 + 40);
    swift_bridgeObjectRetain();
    v20 = sub_1BA6E35A8(v18, v19);
    if ((v21 & 1) != 0)
    {
      sub_1BA4C2DD8(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v11 + 72) * v20, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA7F8204);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA7BC1BC);
    type metadata accessor for FormatLayoutError();
    sub_1BA50AD30((unint64_t *)&qword_1ED3B4C10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v22 = v3;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_willThrow();
  }
  else
  {
    sub_1BA5193C4((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA7F8204);
    v24 = v13[5];
    v34 = v13[4];
    v35 = v24;
    v36[0] = v13[6];
    *(_OWORD *)((char *)v36 + 9) = *(__int128 *)((char *)v13 + 105);
    v25 = v13[1];
    v30 = *v13;
    v31 = v25;
    v26 = v13[3];
    v32 = v13[2];
    v33 = v26;
    sub_1BA8CED9C((uint64_t)&v30);
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA7F8204);
    v27 = v35;
    a2[4] = v34;
    a2[5] = v27;
    a2[6] = v36[0];
    *(_OWORD *)((char *)a2 + 105) = *(_OWORD *)((char *)v36 + 9);
    v28 = v31;
    *a2 = v30;
    a2[1] = v28;
    result = *(double *)&v32;
    v29 = v33;
    a2[2] = v32;
    a2[3] = v29;
  }
  return result;
}

uint64_t sub_1BB4DC7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[2];
  _OWORD v46[3];

  v3 = v2;
  v41 = a2;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1;
  v9 = *(_QWORD *)(a1 + 112);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  v42 = v2;
  v43 = v12;
  if (v10)
  {
    *(_QWORD *)&v46[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v10, 0);
    v11 = *(_QWORD *)&v46[0];
    v13 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v39 = v9;
    v14 = v9 + v13;
    v44 = v6;
    v15 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BA4C2DD8(v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v16 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v8, v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      *(_QWORD *)&v46[0] = v11;
      v19 = *(_QWORD *)(v11 + 16);
      v18 = *(_QWORD *)(v11 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BA76B828(v18 > 1, v19 + 1, 1);
        v11 = *(_QWORD *)&v46[0];
      }
      *(_QWORD *)(v11 + 16) = v19 + 1;
      *(_QWORD *)(v11 + 8 * v19 + 32) = v16 | 0x9000000000000004;
      v14 += v15;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v3 = v42;
    v6 = v44;
  }
  swift_beginAccess();
  v20 = *(_QWORD *)(v3 + 56);
  v21 = *(_QWORD *)(v20 + 16);
  v22 = MEMORY[0x1E0DEE9D8];
  if (v21)
  {
    *(_QWORD *)&v46[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v21, 0);
    v22 = *(_QWORD *)&v46[0];
    v23 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v39 = v20;
    v24 = v20 + v23;
    v44 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BA4C2DD8(v24, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v25 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v8, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      *(_QWORD *)&v46[0] = v22;
      v28 = *(_QWORD *)(v22 + 16);
      v27 = *(_QWORD *)(v22 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1BA76B828(v27 > 1, v28 + 1, 1);
        v22 = *(_QWORD *)&v46[0];
      }
      *(_QWORD *)(v22 + 16) = v28 + 1;
      *(_QWORD *)(v22 + 8 * v28 + 32) = v25 | 0x4000000000000004;
      v24 += v44;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v46[0] = v11;
  sub_1BA7082C0(v22);
  v29 = v40;
  v30 = swift_bridgeObjectRetain();
  sub_1BA7082C0(v30);
  v31 = *(_QWORD *)&v46[0];
  v32 = *(_QWORD *)(v29 + 104);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v33 = swift_bridgeObjectRetain();
  v34 = sub_1BA6E4124(v33, v32);
  v35 = swift_bridgeObjectRetain();
  v36 = sub_1BA6E4124(v35, v34);
  memset(v46, 0, sizeof(v46));
  memset(v45, 0, sizeof(v45));
  v37 = sub_1BA706104(0, 0, v31, v36, 0, 0, 0, MEMORY[0x1E0DEE9D8], (uint64_t *)v46, v29 + 152, (uint64_t *)v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_1BB4DCB70(uint64_t a1, _QWORD *a2)
{
  return FormatItemBindingsNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BB4DCB90(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 7;
  swift_beginAccess();
  v10 = swift_bridgeObjectRetain();
  sub_1BB3D81F8(v10);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    v12 = *v9;
    v13 = *(_QWORD *)(*v9 + 16);
    v42 = a1;
    v30 = a2;
    if (v13)
    {
      v14 = v12 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v15 = *(_QWORD *)(v6 + 72);
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1BA4C2DD8(v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v34 = *((_QWORD *)v8 + 2);
        swift_retain();
        sub_1BAC49F9C();
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v14 += v15;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease_n();
      a2 = v30;
    }
    swift_beginAccess();
    v16 = a2[8];
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v33 = 0;
      swift_bridgeObjectRetain_n();
      v29[1] = v16;
      v18 = (uint64_t *)(v16 + 48);
      while (1)
      {
        v31 = v17;
        v19 = *(v18 - 2);
        v20 = *(v18 - 1);
        v21 = *v18;
        v22 = v18[1];
        v24 = v18[2];
        v23 = v18[3];
        v26 = v18[4];
        v25 = v18[5];
        v34 = v19;
        v35 = v20;
        v36 = v21;
        v37 = v22;
        v38 = v24;
        v39 = v23;
        v40 = v26;
        v41 = v25;
        v32 = v25;
        sub_1BA76B724(v19, v20, v21, v22, v24, v23, v26);
        v27 = v33;
        sub_1BAC490F8();
        v33 = v27;
        if (v27)
          break;
        v18 += 8;
        sub_1BA76B698(v19, v20, v21, v22, v24, v23, v26);
        v17 = v31 - 1;
        if (v31 == 1)
        {
          swift_bridgeObjectRelease_n();
          a2 = v30;
          goto LABEL_11;
        }
      }
      sub_1BA76B698(v19, v20, v21, v22, v24, v23, v26);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      swift_beginAccess();
      v28 = a2[9];
      swift_bridgeObjectRetain();
      sub_1BABEBCF0(v42, v28);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BB4DCE70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[5];
  int v7;
  __int16 v8;

  v3 = *v1;
  v4 = *(_QWORD *)(v3 + 40);
  v6[0] = *(_QWORD *)(v3 + 32);
  v6[1] = v4;
  memset(&v6[2], 0, 24);
  v7 = 0;
  v8 = -24576;
  swift_retain();
  sub_1BB3D9E94((uint64_t)v6, a1, v3);
  return swift_release();
}

uint64_t sub_1BB4DCEDC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C5750, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemBindingsNode, (uint64_t)&protocol conformance descriptor for FormatItemBindingsNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatItemBindingsNode()
{
  return objc_opt_self();
}

uint64_t sub_1BB4DCF38(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3A6E00, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemBindingsNode, (uint64_t)&protocol conformance descriptor for FormatItemBindingsNode);
  a1[2] = sub_1BA50AD30(&qword_1ED3A6DF8, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemBindingsNode, (uint64_t)&protocol conformance descriptor for FormatItemBindingsNode);
  result = sub_1BA50AD30(&qword_1EF2C5758, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemBindingsNode, (uint64_t)&protocol conformance descriptor for FormatItemBindingsNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB4DCFB0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C5760, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemBindingsNode, (uint64_t)&protocol conformance descriptor for FormatItemBindingsNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB4DCFEC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4DD038@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4DD084@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4DD0D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4DD11C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatItemBindingsNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatItemBindingsNode.__allocating_init(identifier:itemIdentifier:selectors:options:styles:children:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1BB4DD17C()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t static Commands.copyIssue.getter()
{
  if (qword_1ED3BB558 != -1)
    swift_once();
  return swift_retain();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE9copyIssue5issueACSo7FCIssueC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  id v9;
  id v10;
  _QWORD v12[2];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3BB558 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  v8 = a1;
  v9 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v10 = objc_msgSend((id)objc_opt_self(), sel_ts_link);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v12[1] = v8;
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB20();
}

id AudioColorPalette.backgroundColor.getter()
{
  id *v0;

  return *v0;
}

id AudioColorPalette.secondaryBackgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id AudioColorPalette.primaryColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id AudioColorPalette.secondaryColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

id AudioColorPalette.accentColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

id AudioColorPalette.iconColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

id AudioColorPalette.thumbnailPlaceholderColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

id AudioColorPalette.headphoneImageColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 56);
}

id AudioColorPalette.ellipsisImageColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 64);
}

id AudioColorPalette.separatorColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 72);
}

uint64_t AudioColorPalette.theme.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioColorPalette() + 56);
  sub_1BB4DD494();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AudioColorPalette()
{
  uint64_t result;

  result = qword_1ED39CC78;
  if (!qword_1ED39CC78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB4DD494()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C3B0)
  {
    v0 = sub_1BB86F6A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C3B0);
  }
}

BOOL static AudioColorPalette.Theme.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AudioColorPalette.Theme.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t AudioColorPalette.Theme.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB4DD56C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t result;
  id v15;
  id v16;
  id v17;

  v0 = type metadata accessor for AudioColorPalette();
  __swift_allocate_value_buffer(v0, qword_1ED39CC60);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED39CC60);
  v2 = (void *)objc_opt_self();
  v17 = objc_msgSend(v2, sel_secondarySystemBackgroundColor);
  v3 = objc_msgSend(v2, sel_whiteColor);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.17254902, 0.17254902, 0.180392157, 1.0);
  v16 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v3, v4);

  v15 = objc_msgSend(v2, sel_whiteColor);
  v5 = objc_msgSend(v2, sel_secondaryLabelColor);
  v6 = objc_msgSend(v2, sel_systemPinkColor);
  v7 = objc_msgSend(v2, sel_quaternaryLabelColor);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.9, 1.0);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.1, 1.0);
  v10 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v8, v9);

  v11 = objc_msgSend(v2, sel_secondaryLabelColor);
  v12 = objc_msgSend(v2, sel_labelColor);
  v13 = objc_msgSend(v2, sel_separatorColor);
  *v1 = v17;
  v1[1] = v16;
  v1[2] = v15;
  v1[3] = v5;
  v1[4] = v6;
  v1[5] = v7;
  v1[6] = v10;
  result = sub_1BB86F688();
  v1[7] = v11;
  v1[8] = v12;
  v1[9] = v13;
  return result;
}

uint64_t AudioColorPalette.init(backgroundColor:secondaryBackgroundColor:primaryColor:secondaryColor:accentColor:iconColor:thumbnailPlaceholderColor:headphoneImageColor:ellipsisImageColor:separatorColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t result;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  type metadata accessor for AudioColorPalette();
  result = sub_1BB86F688();
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t static AudioColorPalette.default.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED39E0C0 != -1)
    swift_once();
  v2 = type metadata accessor for AudioColorPalette();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED39CC60);
  return sub_1BB4DD8C8(v3, a1);
}

uint64_t sub_1BB4DD8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioColorPalette();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BB4DD910()
{
  unint64_t result;

  result = qword_1EF2C5768;
  if (!qword_1EF2C5768)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AudioColorPalette.Theme, &type metadata for AudioColorPalette.Theme);
    atomic_store(result, (unint64_t *)&qword_1EF2C5768);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AudioColorPalette(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[1];
    v7 = a2[2];
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v7;
    v8 = a2[3];
    v9 = a2[4];
    *((_QWORD *)a1 + 3) = v8;
    *((_QWORD *)a1 + 4) = v9;
    v11 = a2[5];
    v10 = a2[6];
    *((_QWORD *)a1 + 5) = v11;
    *((_QWORD *)a1 + 6) = v10;
    v13 = a2[7];
    v12 = a2[8];
    *((_QWORD *)a1 + 7) = v13;
    *((_QWORD *)a1 + 8) = v12;
    v29 = a2[9];
    v30 = v12;
    v14 = *(int *)(a3 + 56);
    v31 = (uint64_t)a2 + v14;
    v32 = &a1[v14];
    *((_QWORD *)a1 + 9) = v29;
    sub_1BB4DD494();
    v16 = v15;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v17 = v4;
    v18 = v6;
    v19 = v7;
    v20 = v8;
    v21 = v9;
    v22 = v11;
    v23 = v10;
    v24 = v13;
    v25 = v30;
    v26 = v29;
    v28(v32, v31, v16);
  }
  return v5;
}

uint64_t destroy for AudioColorPalette(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 56);
  sub_1BB4DD494();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for AudioColorPalette(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  char *v30;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(void **)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  a1[2] = v6;
  a1[3] = v7;
  v8 = *(void **)(a2 + 32);
  v9 = *(void **)(a2 + 40);
  a1[4] = v8;
  a1[5] = v9;
  v10 = *(void **)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  a1[6] = v10;
  a1[7] = v11;
  v26 = *(void **)(a2 + 64);
  v12 = *(int *)(a3 + 56);
  v30 = (char *)a1 + v12;
  v28 = *(void **)(a2 + 72);
  v29 = a2 + v12;
  a1[8] = v26;
  a1[9] = v28;
  sub_1BB4DD494();
  v14 = v13;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15 = v4;
  v16 = v5;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  v21 = v10;
  v22 = v11;
  v23 = v26;
  v24 = v28;
  v27(v30, v29, v14);
  return a1;
}

uint64_t assignWithCopy for AudioColorPalette(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 16);
  v13 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 24);
  v16 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v15;
  v17 = v15;

  v18 = *(void **)(a2 + 32);
  v19 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v18;
  v20 = v18;

  v21 = *(void **)(a2 + 40);
  v22 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v21;
  v23 = v21;

  v24 = *(void **)(a2 + 48);
  v25 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v24;
  v26 = v24;

  v27 = *(void **)(a2 + 56);
  v28 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v27;
  v29 = v27;

  v30 = *(void **)(a2 + 64);
  v31 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v30;
  v32 = v30;

  v33 = *(void **)(a2 + 72);
  v34 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v33;
  v35 = v33;

  v36 = *(int *)(a3 + 56);
  v37 = a1 + v36;
  v38 = a2 + v36;
  sub_1BB4DD494();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

_OWORD *initializeWithTake for AudioColorPalette(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 56);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  sub_1BB4DD494();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for AudioColorPalette(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];

  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];

  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2[4];

  v11 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = a2[5];

  v12 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = a2[6];

  v13 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = a2[7];

  v14 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = a2[8];

  v15 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = a2[9];

  v16 = *(int *)(a3 + 56);
  v17 = a1 + v16;
  v18 = (char *)a2 + v16;
  sub_1BB4DD494();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioColorPalette()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB4DDE68(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BB4DD494();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 56)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AudioColorPalette()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB4DDEF0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1BB4DD494();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 56)], a2, a2, v7);
  }
  return result;
}

void sub_1BB4DDF64()
{
  unint64_t v0;

  sub_1BB4DD494();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for AudioColorPalette.Theme(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB4DE038 + 4 * byte_1BB91EE65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB4DE06C + 4 * byte_1BB91EE60[v4]))();
}

uint64_t sub_1BB4DE06C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4DE074(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4DE07CLL);
  return result;
}

uint64_t sub_1BB4DE088(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4DE090);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB4DE094(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4DE09C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioColorPalette.Theme()
{
  return &type metadata for AudioColorPalette.Theme;
}

uint64_t sub_1BB4DE0B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  unint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  unint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int64_t v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  int64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  unint64_t v141;
  unint64_t v142;
  _QWORD *v143;
  unint64_t v144;
  unint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  int64_t v164;
  uint64_t v165;
  _BYTE *v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  int64_t v173;
  uint64_t v174;
  _BYTE *v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  int64_t v182;
  uint64_t v183;
  _BYTE *v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  int64_t v191;
  uint64_t v192;
  _BYTE *v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t result;
  _QWORD *v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int64_t v208;
  int64_t v209;
  int64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD v218[55];
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  _QWORD *v222;
  _BYTE __src[440];
  _BYTE v224[400];
  uint64_t v225;
  _BYTE v226[440];
  _BYTE v227[272];
  uint64_t v228;
  _BYTE v229[440];
  _BYTE __dst[440];

  v2 = sub_1BB4E23D0(v1);
  v4 = v3;
  v5 = sub_1BB4E26D8(v1);
  v207 = v6;
  v211 = v5;
  v7 = MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C2450, (uint64_t (*)(uint64_t))sub_1BAA85C90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v202 = swift_allocObject();
  *(_OWORD *)(v202 + 16) = xmmword_1BB91EF30;
  sub_1BA4AD288(0, (unint64_t *)&qword_1EF2C2430, (uint64_t)&type metadata for DebugInspectionDataItem, (uint64_t (*)(_QWORD, uint64_t))v7);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB885330;
  *(_QWORD *)(v8 + 32) = 0x696669746E656449;
  *(_QWORD *)(v8 + 40) = 0xEA00000000007265;
  v9 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  v203 = (_QWORD *)v1;
  v10 = (uint64_t *)(v1 + v9[15]);
  v11 = *v10;
  v12 = v10[1];
  v13 = MEMORY[0x1E0DEA9D8];
  *(_QWORD *)(v8 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 80) = v13;
  *(_QWORD *)(v8 + 48) = v11;
  *(_QWORD *)(v8 + 56) = v12;
  *(_BYTE *)(v8 + 88) = 0;
  *(_QWORD *)(v8 + 96) = 0x656C746954;
  *(_QWORD *)(v8 + 104) = 0xE500000000000000;
  v14 = (_QWORD *)(v1 + v9[30]);
  v15 = v14[1];
  if (v15)
  {
    *(_QWORD *)(v8 + 112) = *v14;
    *(_QWORD *)(v8 + 120) = v15;
    v16 = MEMORY[0x1E0DEA9D8];
    v15 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v16 = 0;
    *(_QWORD *)(v8 + 112) = 0;
    *(_QWORD *)(v8 + 120) = 0;
    *(_QWORD *)(v8 + 128) = 0;
  }
  *(_QWORD *)(v8 + 136) = v15;
  *(_QWORD *)(v8 + 144) = v16;
  *(_BYTE *)(v8 + 152) = 0;
  v17 = (_QWORD *)(v8 + 176);
  *(_QWORD *)(v8 + 160) = 0x65726F6353;
  *(_QWORD *)(v8 + 168) = 0xE500000000000000;
  v201 = (_QWORD *)(v1 + *(int *)(type metadata accessor for DebugInspectionHeadline(0) + 20));
  sub_1BB04F360((uint64_t)(v201 + 7), (uint64_t)v226, (uint64_t)&qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  sub_1BB04F360((uint64_t)v226, (uint64_t)v227, (uint64_t)&qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  if (sub_1BB10CB48((uint64_t)v227) == 1)
  {
    v18 = 0;
    v19 = 0;
    *v17 = 0;
    *(_QWORD *)(v8 + 184) = 0;
    *(_QWORD *)(v8 + 192) = 0;
  }
  else
  {
    *v17 = v228;
    v19 = MEMORY[0x1E0DEB0E0];
    v18 = MEMORY[0x1E0DEB070];
  }
  *(_QWORD *)(v8 + 200) = v18;
  *(_QWORD *)(v8 + 208) = v19;
  *(_BYTE *)(v8 + 216) = 0;
  v20 = (_QWORD *)(v8 + 240);
  *(_QWORD *)(v8 + 224) = 0x20676E69726F6353;
  *(_QWORD *)(v8 + 232) = 0xEF6E6F6973726556;
  sub_1BB04F360((uint64_t)v226, (uint64_t)v224, (uint64_t)&qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  if (sub_1BB10CB48((uint64_t)v224) == 1)
  {
    v21 = 0;
    v22 = 0;
    *v20 = 0;
    *(_QWORD *)(v8 + 248) = 0;
    *(_QWORD *)(v8 + 256) = 0;
  }
  else
  {
    *v20 = v225;
    v22 = MEMORY[0x1E0DEE1D8];
    v21 = MEMORY[0x1E0DEE190];
  }
  *(_QWORD *)(v8 + 264) = v21;
  *(_QWORD *)(v8 + 272) = v22;
  *(_BYTE *)(v8 + 280) = 0;
  *(_QWORD *)(v8 + 288) = 0x656372756F53;
  *(_QWORD *)(v8 + 296) = 0xE600000000000000;
  v23 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 328) = MEMORY[0x1E0DEA968];
  v24 = MEMORY[0x1E0DEA9D8];
  *(_QWORD *)(v8 + 336) = MEMORY[0x1E0DEA9D8];
  *(_QWORD *)(v8 + 304) = v2;
  *(_QWORD *)(v8 + 312) = v4;
  *(_BYTE *)(v8 + 344) = 0;
  strcpy((char *)(v8 + 352), "Publisher Name");
  *(_BYTE *)(v8 + 367) = -18;
  v25 = (char *)v203 + v9[27];
  v26 = *((_QWORD *)v25 + 2);
  v27 = *((_QWORD *)v25 + 3);
  *(_QWORD *)(v8 + 392) = v23;
  *(_QWORD *)(v8 + 400) = v24;
  *(_QWORD *)(v8 + 368) = v26;
  *(_QWORD *)(v8 + 376) = v27;
  *(_BYTE *)(v8 + 408) = 0;
  *(_QWORD *)(v8 + 416) = 0x72657473756C43;
  *(_QWORD *)(v8 + 424) = 0xE700000000000000;
  v28 = v203[5];
  v29 = v203[6];
  *(_QWORD *)(v8 + 456) = v23;
  *(_QWORD *)(v8 + 464) = v24;
  *(_QWORD *)(v8 + 432) = v28;
  *(_QWORD *)(v8 + 440) = v29;
  *(_BYTE *)(v8 + 472) = 0;
  *(_QWORD *)(v8 + 480) = 0x6565726772657645;
  *(_QWORD *)(v8 + 488) = 0xE90000000000006ELL;
  LOBYTE(v28) = *((_BYTE *)v203 + v9[20]);
  v30 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v8 + 520) = MEMORY[0x1E0DEAFA0];
  v31 = MEMORY[0x1E0DEAFC8];
  *(_QWORD *)(v8 + 528) = MEMORY[0x1E0DEAFC8];
  *(_BYTE *)(v8 + 496) = v28;
  *(_BYTE *)(v8 + 536) = 0;
  *(_QWORD *)(v8 + 544) = 0x646165722D6F43;
  *(_QWORD *)(v8 + 552) = 0xE700000000000000;
  LOBYTE(v28) = *((_BYTE *)v203 + v9[21]);
  *(_QWORD *)(v8 + 584) = v30;
  *(_QWORD *)(v8 + 592) = v31;
  *(_BYTE *)(v8 + 560) = v28;
  *(_BYTE *)(v8 + 600) = 0;
  strcpy((char *)(v8 + 608), "Issue Article");
  *(_WORD *)(v8 + 622) = -4864;
  LOBYTE(v28) = *((_BYTE *)v203 + v9[24]);
  *(_QWORD *)(v8 + 648) = v30;
  *(_QWORD *)(v8 + 656) = v31;
  *(_BYTE *)(v8 + 624) = v28;
  *(_BYTE *)(v8 + 664) = 0;
  strcpy((char *)(v8 + 672), "Scoring Type");
  *(_BYTE *)(v8 + 685) = 0;
  *(_WORD *)(v8 + 686) = -5120;
  v32 = v201[62];
  v33 = v201[63];
  *(_QWORD *)(v8 + 712) = v23;
  *(_QWORD *)(v8 + 720) = v24;
  *(_QWORD *)(v8 + 688) = v32;
  *(_QWORD *)(v8 + 696) = v33;
  *(_BYTE *)(v8 + 728) = 0;
  *(_QWORD *)(v8 + 736) = 0x20676E69726F6353;
  *(_QWORD *)(v8 + 744) = 0xEF747865746E6F43;
  v34 = v201[64];
  v35 = v201[65];
  *(_QWORD *)(v8 + 776) = v23;
  *(_QWORD *)(v8 + 784) = v24;
  *(_QWORD *)(v8 + 752) = v34;
  *(_QWORD *)(v8 + 760) = v35;
  *(_BYTE *)(v8 + 792) = 0;
  *(_QWORD *)(v8 + 800) = 0x676E6970756F7247;
  *(_QWORD *)(v8 + 808) = 0xEF6E6F7361655220;
  v36 = v201[3];
  v37 = v201[4];
  *(_QWORD *)(v8 + 840) = v23;
  *(_QWORD *)(v8 + 848) = v24;
  *(_QWORD *)(v8 + 816) = v36;
  *(_QWORD *)(v8 + 824) = v37;
  *(_BYTE *)(v8 + 856) = 0;
  v38 = (_QWORD *)(v8 + 880);
  *(_QWORD *)(v8 + 864) = 0xD000000000000019;
  *(_QWORD *)(v8 + 872) = 0x80000001BB98EEA0;
  v39 = (char *)v203 + v9[25];
  if ((v39[8] & 1) != 0)
  {
    v40 = 0;
    v41 = 0;
    *v38 = 0;
    *(_QWORD *)(v8 + 888) = 0;
    *(_QWORD *)(v8 + 896) = 0;
  }
  else
  {
    *v38 = *(_QWORD *)v39;
    v41 = MEMORY[0x1E0DEDCB8];
    v40 = MEMORY[0x1E0DEDC60];
  }
  *(_QWORD *)(v8 + 904) = v40;
  *(_QWORD *)(v8 + 912) = v41;
  *(_BYTE *)(v8 + 920) = 0;
  *(_QWORD *)(v8 + 928) = 0x79654B20464E41;
  *(_QWORD *)(v8 + 936) = 0xE700000000000000;
  v42 = v203[1];
  if (v42)
  {
    *(_QWORD *)(v8 + 944) = *v203;
    *(_QWORD *)(v8 + 952) = v42;
    v43 = MEMORY[0x1E0DEA9D8];
    v44 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v44 = 0;
    v43 = 0;
    *(_QWORD *)(v8 + 944) = 0;
    *(_QWORD *)(v8 + 952) = 0;
    *(_QWORD *)(v8 + 960) = 0;
  }
  *(_QWORD *)(v8 + 968) = v44;
  *(_QWORD *)(v8 + 976) = v43;
  *(_BYTE *)(v8 + 984) = 0;
  *(_QWORD *)(v8 + 992) = 0x6144206863746546;
  *(_QWORD *)(v8 + 1000) = 0xEA00000000006574;
  *(_QWORD *)(v8 + 1032) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 1040) = MEMORY[0x1E0DEA9D8];
  *(_QWORD *)(v8 + 1008) = v211;
  *(_QWORD *)(v8 + 1016) = v207;
  *(_BYTE *)(v8 + 1048) = 0;
  *(_QWORD *)(v202 + 56) = &type metadata for DebugInspectionDataSection;
  *(_QWORD *)(v202 + 64) = &off_1E728C9C8;
  *(_QWORD *)(v202 + 32) = 0x656E696C64616548;
  *(_QWORD *)(v202 + 40) = 0xE800000000000000;
  v45 = (_OWORD *)(v202 + 72);
  *(_QWORD *)(v202 + 48) = v8;
  sub_1BB04F360((uint64_t)v226, (uint64_t)__src, (uint64_t)&qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  if (sub_1BB10CB48((uint64_t)__src) == 1)
  {
    *(_OWORD *)(v202 + 200) = 0u;
    *(_OWORD *)(v202 + 216) = 0u;
    *(_OWORD *)(v202 + 168) = 0u;
    *(_OWORD *)(v202 + 184) = 0u;
    *(_OWORD *)(v202 + 136) = 0u;
    *(_OWORD *)(v202 + 152) = 0u;
    *(_OWORD *)(v202 + 104) = 0u;
    *(_OWORD *)(v202 + 120) = 0u;
    *v45 = 0u;
    *(_OWORD *)(v202 + 88) = 0u;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(__dst, __src, sizeof(__dst));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA95376C((uint64_t)v45);
    sub_1BB04F360((uint64_t)v226, (uint64_t)v218, (uint64_t)&qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
    memcpy(v229, v218, sizeof(v229));
    sub_1BA953BBC(v202 + 112);
    sub_1BA953CD4((_QWORD *)(v202 + 152));
    sub_1BA953F20((_QWORD *)(v202 + 192));
  }
  v46 = *(_QWORD *)((char *)v203 + v9[32]);
  v47 = *(_QWORD *)(v46 + 16);
  v48 = MEMORY[0x1E0DEE9D8];
  if (v47)
  {
    v220 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AF24(0, v47, 0);
    v48 = v220;
    v49 = (uint64_t *)(v46 + 56);
    do
    {
      v51 = *(v49 - 3);
      v50 = *(v49 - 2);
      v52 = *v49;
      v218[0] = *(v49 - 1);
      v218[1] = v52;
      v218[5] = MEMORY[0x1E0DEA968];
      v218[6] = MEMORY[0x1E0DEA9D8];
      v218[2] = v51;
      v218[3] = v50;
      LOBYTE(v218[7]) = 0;
      v220 = v48;
      v53 = *(_QWORD *)(v48 + 16);
      v54 = *(_QWORD *)(v48 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53 >= v54 >> 1)
      {
        sub_1BAC7AF24(v54 > 1, v53 + 1, 1);
        v48 = v220;
      }
      v49 += 4;
      *(_QWORD *)(v48 + 16) = v53 + 1;
      sub_1BAFD3D30((uint64_t)v218, v48 + (v53 << 6) + 32);
      --v47;
    }
    while (v47);
    swift_bridgeObjectRelease();
  }
  v55 = v202;
  *(_QWORD *)(v202 + 264) = &off_1E728C9C8;
  *(_QWORD *)(v202 + 232) = 0x736369706F54;
  *(_QWORD *)(v202 + 240) = 0xE600000000000000;
  *(_QWORD *)(v202 + 248) = v48;
  *(_QWORD *)(v202 + 256) = &type metadata for DebugInspectionDataSection;
  v56 = v201[2];
  v57 = *(_QWORD *)(v56 + 16);
  v58 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v57)
  {
    v222 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AF24(0, v57, 0);
    v204 = v56 + 32;
    sub_1BB10CB60();
    v59 = 0;
    v208 = v57;
    do
    {
      v212 = v59;
      v60 = v204 + 96 * v59;
      v61 = *(_QWORD *)(v60 + 8);
      v62 = *(_QWORD *)(v60 + 16);
      v63 = *(_BYTE *)(v60 + 56);
      v218[0] = *(_QWORD *)v60;
      v218[1] = v61;
      v64 = (_QWORD *)swift_allocObject();
      v220 = 0;
      v221 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1BB872AFC(v65);
      sub_1BB872FF4();
      v66 = 0;
      v67 = 0;
      v68 = v221;
      v64[4] = v220;
      v64[5] = v68;
      if ((v63 & 1) == 0)
      {
        v220 = 0;
        v221 = 0xE000000000000000;
        sub_1BB872AFC(0);
        sub_1BB872FF4();
        v66 = (_QWORD *)v220;
        v67 = v221;
      }
      v64[6] = v66;
      v64[7] = v67;
      v220 = 0;
      v221 = 0xE000000000000000;
      sub_1BB872AFC(v66);
      sub_1BB872FF4();
      v69 = (_QWORD *)v220;
      v70 = v221;
      v64[8] = v220;
      v64[9] = v70;
      v220 = 0;
      v221 = 0xE000000000000000;
      sub_1BB872AFC(v69);
      sub_1BB872FF4();
      v71 = v221;
      v64[10] = v220;
      v64[11] = v71;
      if (v62)
      {
        v220 = 0x203A73676154;
        v221 = 0xE600000000000000;
        v219 = v62;
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA6A0BA4();
        sub_1BB872904();
        sub_1BB872AFC(v72);
        swift_bridgeObjectRelease();
        v73 = v220;
        v74 = v221;
      }
      else
      {
        v73 = 0;
        v74 = 0;
      }
      v75 = 0;
      v213 = v212 + 1;
      v64[12] = v73;
      v64[13] = v74;
      do
      {
        v77 = v64[v75 + 5];
        if (v77)
        {
          v78 = v64[v75 + 4];
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v58 = sub_1BA6EA0D0(0, v58[2] + 1, 1, v58);
          v80 = v58[2];
          v79 = v58[3];
          if (v80 >= v79 >> 1)
            v58 = sub_1BA6EA0D0((_QWORD *)(v79 > 1), v80 + 1, 1, v58);
          v58[2] = v80 + 1;
          v76 = &v58[2 * v80];
          v76[4] = v78;
          v76[5] = v77;
        }
        v75 += 2;
      }
      while (v75 != 10);
      swift_setDeallocating();
      v81 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v220 = (uint64_t)v58;
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v81, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA6A0BA4();
      v82 = sub_1BB872904();
      v84 = v83;
      swift_bridgeObjectRelease();
      v218[5] = v81;
      v218[6] = MEMORY[0x1E0DEA9D8];
      v218[2] = v82;
      v218[3] = v84;
      LOBYTE(v218[7]) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v85 = v222;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AF24(0, v85[2] + 1, 1);
        v85 = v222;
      }
      v58 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v87 = v85[2];
      v86 = v85[3];
      if (v87 >= v86 >> 1)
      {
        sub_1BAC7AF24(v86 > 1, v87 + 1, 1);
        v85 = v222;
      }
      v85[2] = v87 + 1;
      sub_1BAFD3D30((uint64_t)v218, (uint64_t)&v85[8 * v87 + 4]);
      v59 = v213;
    }
    while (v213 != v208);
    swift_bridgeObjectRelease();
    v55 = v202;
  }
  else
  {
    v85 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(v55 + 304) = &off_1E728C9C8;
  *(_QWORD *)(v55 + 272) = 0x7365727574616546;
  *(_QWORD *)(v55 + 280) = 0xE800000000000000;
  *(_QWORD *)(v55 + 288) = v85;
  *(_QWORD *)(v55 + 296) = &type metadata for DebugInspectionDataSection;
  v88 = v203[2];
  v89 = *(_QWORD *)(v88 + 16);
  if (v89)
  {
    v222 = v58;
    swift_bridgeObjectRetain();
    sub_1BAC7AF24(0, v89, 0);
    v205 = v88 + 32;
    sub_1BB10CB60();
    v90 = 0;
    v209 = v89;
    do
    {
      v214 = v90;
      v91 = v205 + 96 * v90;
      v92 = *(_QWORD *)(v91 + 8);
      v93 = *(_QWORD *)(v91 + 16);
      v94 = *(_BYTE *)(v91 + 56);
      v218[0] = *(_QWORD *)v91;
      v218[1] = v92;
      v95 = (_QWORD *)swift_allocObject();
      v220 = 0;
      v221 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1BB872AFC(v96);
      sub_1BB872FF4();
      v97 = 0;
      v98 = 0;
      v99 = v221;
      v95[4] = v220;
      v95[5] = v99;
      if ((v94 & 1) == 0)
      {
        v220 = 0;
        v221 = 0xE000000000000000;
        sub_1BB872AFC(0);
        sub_1BB872FF4();
        v97 = (_QWORD *)v220;
        v98 = v221;
      }
      v95[6] = v97;
      v95[7] = v98;
      v220 = 0;
      v221 = 0xE000000000000000;
      sub_1BB872AFC(v97);
      sub_1BB872FF4();
      v100 = (_QWORD *)v220;
      v101 = v221;
      v95[8] = v220;
      v95[9] = v101;
      v220 = 0;
      v221 = 0xE000000000000000;
      sub_1BB872AFC(v100);
      sub_1BB872FF4();
      v102 = v221;
      v95[10] = v220;
      v95[11] = v102;
      if (v93)
      {
        v220 = 0x203A73676154;
        v221 = 0xE600000000000000;
        v219 = v93;
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA6A0BA4();
        sub_1BB872904();
        sub_1BB872AFC(v103);
        swift_bridgeObjectRelease();
        v104 = v220;
        v105 = v221;
      }
      else
      {
        v104 = 0;
        v105 = 0;
      }
      v106 = 0;
      v215 = v214 + 1;
      v95[12] = v104;
      v95[13] = v105;
      do
      {
        v108 = v95[v106 + 5];
        if (v108)
        {
          v109 = v95[v106 + 4];
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v58 = sub_1BA6EA0D0(0, v58[2] + 1, 1, v58);
          v111 = v58[2];
          v110 = v58[3];
          if (v111 >= v110 >> 1)
            v58 = sub_1BA6EA0D0((_QWORD *)(v110 > 1), v111 + 1, 1, v58);
          v58[2] = v111 + 1;
          v107 = &v58[2 * v111];
          v107[4] = v109;
          v107[5] = v108;
        }
        v106 += 2;
      }
      while (v106 != 10);
      swift_setDeallocating();
      v112 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v220 = (uint64_t)v58;
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v112, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA6A0BA4();
      v113 = sub_1BB872904();
      v115 = v114;
      swift_bridgeObjectRelease();
      v218[5] = v112;
      v218[6] = MEMORY[0x1E0DEA9D8];
      v218[2] = v113;
      v218[3] = v115;
      LOBYTE(v218[7]) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v116 = v222;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AF24(0, v116[2] + 1, 1);
        v116 = v222;
      }
      v58 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v118 = v116[2];
      v117 = v116[3];
      if (v118 >= v117 >> 1)
      {
        sub_1BAC7AF24(v117 > 1, v118 + 1, 1);
        v116 = v222;
      }
      v116[2] = v118 + 1;
      sub_1BAFD3D30((uint64_t)v218, (uint64_t)&v116[8 * v118 + 4]);
      v90 = v215;
    }
    while (v215 != v209);
    swift_bridgeObjectRelease();
    v55 = v202;
  }
  else
  {
    v116 = v58;
  }
  v119 = MEMORY[0x1E0DEB070];
  v120 = MEMORY[0x1E0DEB0E0];
  *(_QWORD *)(v55 + 344) = &off_1E728C9C8;
  *(_QWORD *)(v55 + 312) = 0x20656C6369747241;
  *(_QWORD *)(v55 + 320) = 0xEF7374726F686F43;
  *(_QWORD *)(v55 + 328) = v116;
  *(_QWORD *)(v55 + 336) = &type metadata for DebugInspectionDataSection;
  v121 = v201[67];
  v122 = *(_QWORD *)(v121 + 16);
  v123 = MEMORY[0x1E0DEE9D8];
  if (v122)
  {
    v220 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AF24(0, v122, 0);
    v123 = v220;
    v124 = (_BYTE *)(v121 + 72);
    do
    {
      v125 = *((_QWORD *)v124 - 2);
      v126 = *((_QWORD *)v124 - 1);
      v127 = *v124;
      v218[0] = *((_QWORD *)v124 - 3);
      v218[1] = v125;
      if ((v127 & 1) != 0)
      {
        memset(&v218[2], 0, 40);
      }
      else
      {
        v218[5] = v119;
        v218[6] = v120;
        v218[2] = v126;
      }
      LOBYTE(v218[7]) = 0;
      v220 = v123;
      v128 = *(_QWORD *)(v123 + 16);
      v129 = *(_QWORD *)(v123 + 24);
      swift_bridgeObjectRetain();
      if (v128 >= v129 >> 1)
      {
        sub_1BAC7AF24(v129 > 1, v128 + 1, 1);
        v123 = v220;
      }
      *(_QWORD *)(v123 + 16) = v128 + 1;
      sub_1BAFD3D30((uint64_t)v218, v123 + (v128 << 6) + 32);
      v124 += 48;
      --v122;
    }
    while (v122);
    swift_bridgeObjectRelease();
    v55 = v202;
  }
  *(_QWORD *)(v55 + 384) = &off_1E728C9C8;
  strcpy((char *)(v55 + 352), "User Cohorts");
  *(_BYTE *)(v55 + 365) = 0;
  *(_WORD *)(v55 + 366) = -5120;
  *(_QWORD *)(v55 + 368) = v123;
  *(_QWORD *)(v55 + 376) = &type metadata for DebugInspectionDataSection;
  v130 = v203[7];
  v131 = *(_QWORD *)(v130 + 16);
  v132 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v131)
  {
    v222 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AF24(0, v131, 0);
    v206 = v130 + 32;
    sub_1BB10CB60();
    v133 = 0;
    v210 = v131;
    do
    {
      v216 = v133;
      v134 = v206 + 96 * v133;
      v135 = *(_QWORD *)(v134 + 8);
      v136 = *(_QWORD *)(v134 + 16);
      v137 = *(_BYTE *)(v134 + 56);
      v218[0] = *(_QWORD *)v134;
      v218[1] = v135;
      v138 = swift_allocObject();
      *(_OWORD *)(v138 + 16) = xmmword_1BB8827B0;
      v220 = 0;
      v221 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1BB872AFC(v139);
      sub_1BB872FF4();
      v140 = 0;
      v141 = 0;
      v142 = v221;
      *(_QWORD *)(v138 + 32) = v220;
      *(_QWORD *)(v138 + 40) = v142;
      if ((v137 & 1) == 0)
      {
        v220 = 0;
        v221 = 0xE000000000000000;
        sub_1BB872AFC(0);
        sub_1BB872FF4();
        v140 = (_QWORD *)v220;
        v141 = v221;
      }
      *(_QWORD *)(v138 + 48) = v140;
      *(_QWORD *)(v138 + 56) = v141;
      v220 = 0;
      v221 = 0xE000000000000000;
      sub_1BB872AFC(v140);
      sub_1BB872FF4();
      v143 = (_QWORD *)v220;
      v144 = v221;
      *(_QWORD *)(v138 + 64) = v220;
      *(_QWORD *)(v138 + 72) = v144;
      v220 = 0;
      v221 = 0xE000000000000000;
      sub_1BB872AFC(v143);
      sub_1BB872FF4();
      v145 = v221;
      *(_QWORD *)(v138 + 80) = v220;
      *(_QWORD *)(v138 + 88) = v145;
      if (v136)
      {
        v220 = 0x203A73676154;
        v221 = 0xE600000000000000;
        v219 = v136;
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA6A0BA4();
        sub_1BB872904();
        sub_1BB872AFC(v146);
        swift_bridgeObjectRelease();
        v147 = v220;
        v148 = v221;
      }
      else
      {
        v147 = 0;
        v148 = 0;
      }
      v149 = 0;
      v217 = v216 + 1;
      *(_QWORD *)(v138 + 96) = v147;
      *(_QWORD *)(v138 + 104) = v148;
      do
      {
        v151 = *(_QWORD *)(v138 + v149 + 40);
        if (v151)
        {
          v152 = *(_QWORD *)(v138 + v149 + 32);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v132 = sub_1BA6EA0D0(0, v132[2] + 1, 1, v132);
          v154 = v132[2];
          v153 = v132[3];
          if (v154 >= v153 >> 1)
            v132 = sub_1BA6EA0D0((_QWORD *)(v153 > 1), v154 + 1, 1, v132);
          v132[2] = v154 + 1;
          v150 = &v132[2 * v154];
          v150[4] = v152;
          v150[5] = v151;
        }
        v149 += 16;
      }
      while (v149 != 80);
      swift_setDeallocating();
      v155 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v220 = (uint64_t)v132;
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v155, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA6A0BA4();
      v156 = sub_1BB872904();
      v158 = v157;
      swift_bridgeObjectRelease();
      v218[5] = v155;
      v218[6] = MEMORY[0x1E0DEA9D8];
      v218[2] = v156;
      v218[3] = v158;
      LOBYTE(v218[7]) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v159 = v222;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v119 = MEMORY[0x1E0DEB070];
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BAC7AF24(0, v159[2] + 1, 1);
        v159 = v222;
      }
      v120 = MEMORY[0x1E0DEB0E0];
      v132 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v162 = v159[2];
      v161 = v159[3];
      if (v162 >= v161 >> 1)
      {
        sub_1BAC7AF24(v161 > 1, v162 + 1, 1);
        v159 = v222;
      }
      v159[2] = v162 + 1;
      sub_1BAFD3D30((uint64_t)v218, (uint64_t)&v159[8 * v162 + 4]);
      v133 = v217;
    }
    while (v217 != v210);
    swift_bridgeObjectRelease();
    v55 = v202;
  }
  else
  {
    v159 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(v55 + 424) = &off_1E728C9C8;
  *(_QWORD *)(v55 + 392) = 0xD000000000000012;
  *(_QWORD *)(v55 + 400) = 0x80000001BB98EEC0;
  *(_QWORD *)(v55 + 408) = v159;
  *(_QWORD *)(v55 + 416) = &type metadata for DebugInspectionDataSection;
  v163 = v201[5];
  v164 = *(_QWORD *)(v163 + 16);
  v165 = MEMORY[0x1E0DEE9D8];
  if (v164)
  {
    v220 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AF24(0, v164, 0);
    v165 = v220;
    v166 = (_BYTE *)(v163 + 72);
    do
    {
      v167 = *((_QWORD *)v166 - 2);
      v168 = *((_QWORD *)v166 - 1);
      v169 = *v166;
      v218[0] = *((_QWORD *)v166 - 3);
      v218[1] = v167;
      if ((v169 & 1) != 0)
      {
        memset(&v218[2], 0, 40);
      }
      else
      {
        v218[5] = v119;
        v218[6] = v120;
        v218[2] = v168;
      }
      LOBYTE(v218[7]) = 0;
      v220 = v165;
      v170 = *(_QWORD *)(v165 + 16);
      v171 = *(_QWORD *)(v165 + 24);
      swift_bridgeObjectRetain();
      if (v170 >= v171 >> 1)
      {
        sub_1BAC7AF24(v171 > 1, v170 + 1, 1);
        v165 = v220;
      }
      *(_QWORD *)(v165 + 16) = v170 + 1;
      sub_1BAFD3D30((uint64_t)v218, v165 + (v170 << 6) + 32);
      v166 += 48;
      --v164;
    }
    while (v164);
    swift_bridgeObjectRelease();
    v55 = v202;
  }
  *(_QWORD *)(v55 + 464) = &off_1E728C9C8;
  *(_QWORD *)(v55 + 432) = 0xD000000000000014;
  *(_QWORD *)(v55 + 440) = 0x80000001BB98EEE0;
  *(_QWORD *)(v55 + 448) = v165;
  *(_QWORD *)(v55 + 456) = &type metadata for DebugInspectionDataSection;
  v172 = v201[1];
  v173 = *(_QWORD *)(v172 + 16);
  v174 = MEMORY[0x1E0DEE9D8];
  if (v173)
  {
    v220 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AF24(0, v173, 0);
    v174 = v220;
    v175 = (_BYTE *)(v172 + 72);
    do
    {
      v176 = *((_QWORD *)v175 - 2);
      v177 = *((_QWORD *)v175 - 1);
      v178 = *v175;
      v218[0] = *((_QWORD *)v175 - 3);
      v218[1] = v176;
      if ((v178 & 1) != 0)
      {
        memset(&v218[2], 0, 40);
      }
      else
      {
        v218[5] = v119;
        v218[6] = v120;
        v218[2] = v177;
      }
      LOBYTE(v218[7]) = 0;
      v220 = v174;
      v179 = *(_QWORD *)(v174 + 16);
      v180 = *(_QWORD *)(v174 + 24);
      swift_bridgeObjectRetain();
      if (v179 >= v180 >> 1)
      {
        sub_1BAC7AF24(v180 > 1, v179 + 1, 1);
        v174 = v220;
      }
      *(_QWORD *)(v174 + 16) = v179 + 1;
      sub_1BAFD3D30((uint64_t)v218, v174 + (v179 << 6) + 32);
      v175 += 48;
      --v173;
    }
    while (v173);
    swift_bridgeObjectRelease();
    v55 = v202;
  }
  *(_QWORD *)(v55 + 504) = &off_1E728C9C8;
  *(_QWORD *)(v55 + 472) = 0xD000000000000016;
  *(_QWORD *)(v55 + 480) = 0x80000001BB98EF00;
  *(_QWORD *)(v55 + 488) = v174;
  *(_QWORD *)(v55 + 496) = &type metadata for DebugInspectionDataSection;
  v181 = v201[68];
  v182 = *(_QWORD *)(v181 + 16);
  v183 = MEMORY[0x1E0DEE9D8];
  if (v182)
  {
    v220 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AF24(0, v182, 0);
    v183 = v220;
    v184 = (_BYTE *)(v181 + 72);
    do
    {
      v185 = *((_QWORD *)v184 - 2);
      v186 = *((_QWORD *)v184 - 1);
      v187 = *v184;
      v218[0] = *((_QWORD *)v184 - 3);
      v218[1] = v185;
      if ((v187 & 1) != 0)
      {
        memset(&v218[2], 0, 40);
      }
      else
      {
        v218[5] = v119;
        v218[6] = v120;
        v218[2] = v186;
      }
      LOBYTE(v218[7]) = 0;
      v220 = v183;
      v188 = *(_QWORD *)(v183 + 16);
      v189 = *(_QWORD *)(v183 + 24);
      swift_bridgeObjectRetain();
      if (v188 >= v189 >> 1)
      {
        sub_1BAC7AF24(v189 > 1, v188 + 1, 1);
        v183 = v220;
      }
      *(_QWORD *)(v183 + 16) = v188 + 1;
      sub_1BAFD3D30((uint64_t)v218, v183 + (v188 << 6) + 32);
      v184 += 48;
      --v182;
    }
    while (v182);
    swift_bridgeObjectRelease();
    v55 = v202;
  }
  *(_QWORD *)(v55 + 536) = &type metadata for DebugInspectionDataSection;
  *(_QWORD *)(v55 + 544) = &off_1E728C9C8;
  *(_QWORD *)(v55 + 512) = 0x6769655720676154;
  *(_QWORD *)(v55 + 520) = 0xEB00000000737468;
  *(_QWORD *)(v55 + 528) = v183;
  v190 = v201[69];
  v191 = *(_QWORD *)(v190 + 16);
  v192 = MEMORY[0x1E0DEE9D8];
  if (v191)
  {
    v220 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AF24(0, v191, 0);
    v192 = v220;
    v193 = (_BYTE *)(v190 + 72);
    do
    {
      v194 = *((_QWORD *)v193 - 2);
      v195 = *((_QWORD *)v193 - 1);
      v196 = *v193;
      v218[0] = *((_QWORD *)v193 - 3);
      v218[1] = v194;
      if ((v196 & 1) != 0)
      {
        memset(&v218[2], 0, 40);
      }
      else
      {
        v218[5] = v119;
        v218[6] = v120;
        v218[2] = v195;
      }
      LOBYTE(v218[7]) = 0;
      v220 = v192;
      v197 = *(_QWORD *)(v192 + 16);
      v198 = *(_QWORD *)(v192 + 24);
      swift_bridgeObjectRetain();
      if (v197 >= v198 >> 1)
      {
        sub_1BAC7AF24(v198 > 1, v197 + 1, 1);
        v192 = v220;
      }
      *(_QWORD *)(v192 + 16) = v197 + 1;
      sub_1BAFD3D30((uint64_t)v218, v192 + (v197 << 6) + 32);
      v193 += 48;
      --v191;
    }
    while (v191);
    swift_bridgeObjectRelease();
    v55 = v202;
  }
  *(_QWORD *)(v55 + 576) = &type metadata for DebugInspectionDataSection;
  *(_QWORD *)(v55 + 584) = &off_1E728C9C8;
  *(_QWORD *)(v55 + 552) = 0x2065727574616546;
  *(_QWORD *)(v55 + 560) = 0xEF73746867696557;
  *(_QWORD *)(v55 + 568) = v192;
  result = sub_1BAA85898(v55);
  a1[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a1[4] = (uint64_t)&off_1E728CA90;
  *a1 = result;
  return result;
}

uint64_t sub_1BB4DFD98(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  _BYTE v15[576];
  char v16;
  char v17;

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C5978, (uint64_t (*)(void))sub_1BB4E6064, (uint64_t)&type metadata for DebugInspectionHeadline.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v15[-v7 - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB4E6064();
  sub_1BB8746C8();
  v17 = 0;
  type metadata accessor for DebugInspectionArticleData(0);
  sub_1BA4A2870(&qword_1EF2C5980, type metadata accessor for DebugInspectionArticleData, (uint64_t)&unk_1BB91F0E8);
  v9 = v14;
  sub_1BB8741AC();
  if (!v9)
  {
    v10 = type metadata accessor for DebugInspectionHeadline(0);
    memcpy(v15, (const void *)(v2 + *(int *)(v10 + 20)), sizeof(v15));
    v16 = 1;
    sub_1BB4E63A0();
    sub_1BB8741AC();
    v11 = (char *)(v2 + *(int *)(v10 + 24));
    v12 = *v11;
    LOBYTE(v11) = v11[1];
    v15[0] = v12;
    v15[1] = (_BYTE)v11;
    v16 = 2;
    sub_1BB4E63E4();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB4DFF84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  _BYTE *v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _BYTE v27[600];

  v20 = a2;
  v21 = type metadata accessor for DebugInspectionArticleData(0);
  MEMORY[0x1E0C80A78](v21);
  v22 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C5950, (uint64_t (*)(void))sub_1BB4E6064, (uint64_t)&type metadata for DebugInspectionHeadline.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v24 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - v6;
  v8 = type metadata accessor for DebugInspectionHeadline(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1BB4E6064();
  v23 = v7;
  v12 = v26;
  sub_1BB87468C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v13 = (uint64_t)v10;
  v27[0] = 0;
  sub_1BA4A2870(&qword_1EF2C5960, type metadata accessor for DebugInspectionArticleData, (uint64_t)&unk_1BB91F110);
  v14 = (uint64_t)v22;
  v15 = v23;
  v16 = v24;
  sub_1BB8740D4();
  sub_1BB4E60A8(v14, v13);
  v27[599] = 1;
  sub_1BB4E60EC();
  sub_1BB8740D4();
  memcpy((void *)(v13 + *(int *)(v8 + 20)), v27, 0x240uLL);
  v27[596] = 2;
  sub_1BB4E635C();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v16);
  v17 = v27[598];
  v18 = (_BYTE *)(v13 + *(int *)(v8 + 24));
  *v18 = v27[597];
  v18[1] = v17;
  sub_1BA4C2DD8(v13, v20, type metadata accessor for DebugInspectionHeadline);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_1BA4A2E80(v13, type metadata accessor for DebugInspectionHeadline);
}

uint64_t sub_1BB4E02A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB4E02E0 + 4 * byte_1BB91EF40[a1]))(0x6D75636F44666E61, 0xEE0079654B746E65);
}

uint64_t sub_1BB4E02E0()
{
  return 0x43656C6369747261;
}

uint64_t sub_1BB4E0304()
{
  return 0x4C656C6369747261;
}

uint64_t sub_1BB4E0328()
{
  return 0x4972657473756C63;
}

unint64_t sub_1BB4E0344()
{
  return 0xD000000000000011;
}

uint64_t sub_1BB4E0390()
{
  return 0x6566694C666C6168;
}

unint64_t sub_1BB4E03A8()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB4E0588()
{
  return 0x646174654D676174;
}

uint64_t sub_1BB4E05A8()
{
  return 0x656C746974;
}

uint64_t sub_1BB4E05BC()
{
  return 0x626D45656C746974;
}

uint64_t sub_1BB4E05E0()
{
  return 0x736369706F74;
}

uint64_t sub_1BB4E05F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C5938, (uint64_t (*)(void))sub_1BB4E5CC8, (uint64_t)&type metadata for DebugInspectionArticleData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB4E5CC8();
  sub_1BB8746C8();
  LOBYTE(v16) = 0;
  sub_1BB87411C();
  if (!v2)
  {
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 16);
    v19 = 1;
    sub_1BA4AD288(0, &qword_1EF2BBA58, (uint64_t)&type metadata for DebugInspectionAggregate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB4E5EB8();
    sub_1BB8741AC();
    LOBYTE(v16) = 2;
    sub_1BB874164();
    LOBYTE(v16) = 3;
    sub_1BB87417C();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 56);
    v19 = 4;
    sub_1BB8741AC();
    v10 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    LOBYTE(v16) = 5;
    sub_1BB86C8B0();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B0510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1BB87414C();
    v16 = *(_OWORD *)(v3 + v10[10]);
    v19 = 6;
    sub_1BA92B43C();
    sub_1BB87414C();
    LOBYTE(v16) = 7;
    sub_1BB8741C4();
    LOBYTE(v16) = 8;
    sub_1BB874134();
    LOBYTE(v16) = 9;
    sub_1BB874188();
    LOBYTE(v16) = 10;
    sub_1BB874188();
    LOBYTE(v16) = 11;
    sub_1BB87417C();
    LOBYTE(v16) = 12;
    sub_1BB874188();
    LOBYTE(v16) = 13;
    sub_1BB874188();
    LOBYTE(v16) = 14;
    sub_1BB874188();
    LOBYTE(v16) = 15;
    sub_1BB874188();
    LOBYTE(v16) = 16;
    sub_1BB874188();
    LOBYTE(v16) = 17;
    sub_1BB874188();
    LOBYTE(v16) = 18;
    sub_1BB874188();
    LOBYTE(v16) = 19;
    sub_1BB874188();
    LOBYTE(v16) = 20;
    sub_1BB874188();
    LOBYTE(v16) = 21;
    sub_1BB874164();
    LOBYTE(v16) = 22;
    sub_1BB874134();
    v11 = (__int128 *)(v3 + v10[27]);
    v12 = *v11;
    v14 = *((_QWORD *)v11 + 2);
    v13 = *((_QWORD *)v11 + 3);
    v16 = v12;
    v17 = v14;
    v18 = v13;
    v19 = 23;
    sub_1BB10E5DC();
    sub_1BB8741AC();
    LOBYTE(v16) = 24;
    sub_1BB87411C();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + v10[29]);
    v19 = 25;
    sub_1BA4AD288(0, &qword_1EF2C5920, (uint64_t)&type metadata for DebugInspectionTagMetadata, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB4E5F30();
    sub_1BB8741AC();
    LOBYTE(v16) = 26;
    sub_1BB87411C();
    v16 = *(_OWORD *)(v3 + v10[31]);
    v19 = 27;
    sub_1BB87414C();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + v10[32]);
    v19 = 28;
    sub_1BA4AD288(0, &qword_1EF2BBA40, (uint64_t)&type metadata for DebugInspectionTag, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB4E5FEC();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB4E0D38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  uint64_t *v18;
  int *v19;
  uint64_t result;
  int v21;
  int v22;
  int v23;
  _BOOL4 v24;
  int v25;
  uint64_t *v26;
  uint64_t v27;
  int *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t *v88;
  int *v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  char v93;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v82 - v6;
  sub_1BA4CDF6C(0, &qword_1EF2C5910, (uint64_t (*)(void))sub_1BB4E5CC8, (uint64_t)&type metadata for DebugInspectionArticleData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v85 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v82 - v10;
  v89 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  MEMORY[0x1E0C80A78](v89);
  v88 = (uint64_t *)((char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = a1[3];
  v86 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1BB4E5CC8();
  v84 = v11;
  sub_1BB87468C();
  if (v2)
  {
    v87 = v2;
    v16 = 0;
    v17 = 0;
  }
  else
  {
    v83 = a2;
    v14 = v9;
    LOBYTE(v90) = 0;
    v15 = sub_1BB87402C();
    v26 = v88;
    *v88 = v15;
    v26[1] = v27;
    sub_1BA4AD288(0, &qword_1EF2BBA58, (uint64_t)&type metadata for DebugInspectionAggregate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v93 = 1;
    sub_1BB4E5D0C();
    sub_1BB8740D4();
    v28 = v89;
    v26[2] = v90;
    LOBYTE(v90) = 2;
    v26[3] = sub_1BB874080();
    *((_BYTE *)v26 + 32) = v29 & 1;
    LOBYTE(v90) = 3;
    v26[5] = sub_1BB874098();
    v26[6] = v30;
    v93 = 4;
    sub_1BB8740D4();
    v26[7] = v90;
    sub_1BB86C8B0();
    LOBYTE(v90) = 5;
    sub_1BA4A2870(&qword_1ED3B0528, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1BB874068();
    sub_1BB04F360((uint64_t)v7, (uint64_t)v26 + v28[9], (uint64_t)&qword_1ED3B0540, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v93 = 6;
    sub_1BA92B850();
    sub_1BB874068();
    *(_OWORD *)((char *)v26 + v28[10]) = v90;
    LOBYTE(v90) = 7;
    *(uint64_t *)((char *)v26 + v28[11]) = sub_1BB8740E0();
    LOBYTE(v90) = 8;
    v31 = sub_1BB874044();
    v32 = (char *)v26 + v28[12];
    *(_QWORD *)v32 = v31;
    v32[8] = v33 & 1;
    LOBYTE(v90) = 9;
    v34 = sub_1BB8740A4();
    v87 = 0;
    *((_BYTE *)v88 + v89[13]) = v34 & 1;
    LOBYTE(v90) = 10;
    v35 = v87;
    v36 = sub_1BB8740A4();
    v87 = v35;
    if (v35
      || (*((_BYTE *)v88 + v89[14]) = v36 & 1, LOBYTE(v90) = 11, v37 = v87, v38 = sub_1BB874098(), (v87 = v37) != 0))
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
      v16 = 0;
      v17 = 123;
    }
    else
    {
      v40 = (uint64_t *)((char *)v88 + v89[15]);
      *v40 = v38;
      v40[1] = v39;
      LOBYTE(v90) = 12;
      v41 = v87;
      v42 = sub_1BB8740A4();
      v87 = v41;
      if (v41)
        goto LABEL_46;
      *((_BYTE *)v88 + v89[16]) = v42 & 1;
      LOBYTE(v90) = 13;
      v43 = v87;
      v44 = sub_1BB8740A4();
      v87 = v43;
      if (v43)
        goto LABEL_46;
      *((_BYTE *)v88 + v89[17]) = v44 & 1;
      LOBYTE(v90) = 14;
      v45 = v87;
      v46 = sub_1BB8740A4();
      v87 = v45;
      if (v45)
        goto LABEL_46;
      *((_BYTE *)v88 + v89[18]) = v46 & 1;
      LOBYTE(v90) = 15;
      v47 = v87;
      v48 = sub_1BB8740A4();
      v87 = v47;
      if (v47)
        goto LABEL_46;
      *((_BYTE *)v88 + v89[19]) = v48 & 1;
      LOBYTE(v90) = 16;
      v49 = v87;
      v50 = sub_1BB8740A4();
      v87 = v49;
      if (v49)
        goto LABEL_46;
      *((_BYTE *)v88 + v89[20]) = v50 & 1;
      LOBYTE(v90) = 17;
      v51 = v87;
      v52 = sub_1BB8740A4();
      v87 = v51;
      if (v51)
        goto LABEL_46;
      *((_BYTE *)v88 + v89[21]) = v52 & 1;
      LOBYTE(v90) = 18;
      v53 = v87;
      v54 = sub_1BB8740A4();
      v87 = v53;
      if (v53)
        goto LABEL_46;
      *((_BYTE *)v88 + v89[22]) = v54 & 1;
      LOBYTE(v90) = 19;
      v55 = v87;
      v56 = sub_1BB8740A4();
      v87 = v55;
      if (v55)
        goto LABEL_46;
      *((_BYTE *)v88 + v89[23]) = v56 & 1;
      LOBYTE(v90) = 20;
      v57 = v87;
      v58 = sub_1BB8740A4();
      v87 = v57;
      if (v57)
        goto LABEL_46;
      *((_BYTE *)v88 + v89[24]) = v58 & 1;
      LOBYTE(v90) = 21;
      v59 = v87;
      v60 = sub_1BB874080();
      v87 = v59;
      if (v59)
        goto LABEL_46;
      v62 = (char *)v88 + v89[25];
      *(_QWORD *)v62 = v60;
      v62[8] = v61 & 1;
      LOBYTE(v90) = 22;
      v63 = v87;
      v64 = sub_1BB874044();
      v87 = v63;
      if (v63)
        goto LABEL_46;
      v66 = (char *)v88 + v89[26];
      *(_QWORD *)v66 = v64;
      v66[8] = v65 & 1;
      v93 = 23;
      sub_1BB10E038();
      v67 = v87;
      sub_1BB8740D4();
      v87 = v67;
      if (v67)
      {
LABEL_46:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
        v16 = 0;
        v17 = 2171;
      }
      else
      {
        v68 = v91;
        v69 = v92;
        v70 = (char *)v88 + v89[27];
        *(_OWORD *)v70 = v90;
        *((_QWORD *)v70 + 2) = v68;
        *((_QWORD *)v70 + 3) = v69;
        LOBYTE(v90) = 24;
        v71 = v87;
        v72 = sub_1BB87402C();
        v87 = v71;
        if (!v71)
        {
          v74 = (uint64_t *)((char *)v88 + v89[28]);
          *v74 = v72;
          v74[1] = v73;
          sub_1BA4AD288(0, &qword_1EF2C5920, (uint64_t)&type metadata for DebugInspectionTagMetadata, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
          v93 = 25;
          sub_1BB4E5D84();
          v75 = v87;
          sub_1BB8740D4();
          v24 = v75 == 0;
          v87 = v75;
          if (v75)
          {
            (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
            v23 = 0;
            v22 = 0;
          }
          else
          {
            *(uint64_t *)((char *)v88 + v89[29]) = v90;
            LOBYTE(v90) = 26;
            v76 = sub_1BB87402C();
            v87 = 0;
            v78 = (uint64_t *)((char *)v88 + v89[30]);
            *v78 = v76;
            v78[1] = v77;
            v93 = 27;
            v79 = v87;
            sub_1BB874068();
            v87 = v79;
            if (v79)
            {
              (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
              v22 = 0;
              v23 = 1;
            }
            else
            {
              *(_OWORD *)((char *)v88 + v89[31]) = v90;
              sub_1BA4AD288(0, &qword_1EF2BBA40, (uint64_t)&type metadata for DebugInspectionTag, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
              v93 = 28;
              sub_1BB4E5E40();
              v80 = v87;
              sub_1BB8740D4();
              v87 = v80;
              if (!v80)
              {
                (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
                v81 = (uint64_t)v88;
                *(uint64_t *)((char *)v88 + v89[32]) = v90;
                sub_1BA4C2DD8(v81, v83, type metadata accessor for DebugInspectionArticleData);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
                return sub_1BA4A2E80(v81, type metadata accessor for DebugInspectionArticleData);
              }
              (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
              v23 = 1;
              v22 = 1;
            }
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
          v18 = v88;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v19 = v89;
          sub_1BA76D750((uint64_t)v18 + v89[9]);
          v25 = 1;
          v16 = 1;
          LOBYTE(v21) = 1;
LABEL_11:
          result = sub_1BA69D490(*(uint64_t *)((char *)v18 + v19[10]), *(uint64_t *)((char *)v18 + v19[10] + 8));
          if ((v21 & 1) != 0)
            goto LABEL_12;
          goto LABEL_24;
        }
        (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v85);
        v17 = 8390779;
        v16 = 1;
      }
    }
  }
  v18 = v88;
  v19 = v89;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  v21 = (v17 >> 11) & 1;
  if ((v17 & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    if ((v17 & 2) == 0)
    {
LABEL_6:
      if ((v17 & 8) == 0)
        goto LABEL_7;
      goto LABEL_20;
    }
  }
  else if ((v17 & 2) == 0)
  {
    goto LABEL_6;
  }
  result = swift_bridgeObjectRelease();
  if ((v17 & 8) == 0)
  {
LABEL_7:
    if ((v17 & 0x10) == 0)
      goto LABEL_8;
    goto LABEL_21;
  }
LABEL_20:
  result = swift_bridgeObjectRelease();
  if ((v17 & 0x10) == 0)
  {
LABEL_8:
    if ((v17 & 0x20) == 0)
      goto LABEL_9;
LABEL_22:
    result = sub_1BA76D750((uint64_t)v18 + v19[9]);
    if ((v17 & 0x40) != 0)
      goto LABEL_10;
    goto LABEL_23;
  }
LABEL_21:
  result = swift_bridgeObjectRelease();
  if ((v17 & 0x20) != 0)
    goto LABEL_22;
LABEL_9:
  if ((v17 & 0x40) != 0)
  {
LABEL_10:
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    goto LABEL_11;
  }
LABEL_23:
  v25 = 0;
  v24 = 0;
  v23 = 0;
  v22 = 0;
  if ((v17 & 0x800) != 0)
  {
LABEL_12:
    result = swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_13;
    goto LABEL_25;
  }
LABEL_24:
  if (!v16)
  {
LABEL_13:
    if (v25)
      goto LABEL_14;
    goto LABEL_26;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    if (!v24)
      goto LABEL_15;
    goto LABEL_27;
  }
LABEL_26:
  if (!v24)
  {
LABEL_15:
    if (v23)
      goto LABEL_16;
LABEL_28:
    if (!v22)
      return result;
    return sub_1BA69D490(*(uint64_t *)((char *)v18 + v19[31]), *(uint64_t *)((char *)v18 + v19[31] + 8));
  }
LABEL_27:
  result = swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
    goto LABEL_28;
LABEL_16:
  result = swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
    return result;
  return sub_1BA69D490(*(uint64_t *)((char *)v18 + v19[31]), *(uint64_t *)((char *)v18 + v19[31] + 8));
}

uint64_t sub_1BB4E187C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];
  char v10;
  char v11;

  sub_1BA4CDF6C(0, &qword_1EF2C5A18, (uint64_t (*)(void))sub_1BB4E9174, (uint64_t)&type metadata for DebugInspectionUserData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v9 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB4E9174();
  sub_1BB8746C8();
  v11 = 0;
  v7 = v9[1];
  sub_1BB874188();
  if (!v7)
  {
    v10 = 1;
    sub_1BB874188();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BB4E19B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB4E19F0 + 4 * byte_1BB91EF5D[a1]))(0x6269737365636361, 0xEA0000000000656CLL);
}

unint64_t sub_1BB4E19F0()
{
  return 0xD000000000000014;
}

uint64_t sub_1BB4E1A64()
{
  return 1684104562;
}

uint64_t sub_1BB4E1A74()
{
  return 0x6F725065726F6373;
}

uint64_t sub_1BB4E1A94()
{
  return 0x54676E69726F6373;
}

uint64_t sub_1BB4E1AB4()
{
  return 0x43676E69726F6373;
}

uint64_t sub_1BB4E1AD8()
{
  return 1852138867;
}

uint64_t sub_1BB4E1AE8()
{
  return 0x6F686F4372657375;
}

uint64_t sub_1BB4E1B08()
{
  return 0x6867696557676174;
}

uint64_t sub_1BB4E1B20()
{
  return 0x5765727574616566;
}

unint64_t sub_1BB4E1B44()
{
  return 0xD000000000000011;
}

uint64_t sub_1BB4E1B60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[55];
  _BYTE v17[448];
  char v18;

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C5A00, (uint64_t (*)(void))sub_1BB4E8E44, (uint64_t)&type metadata for DebugInspectionContextData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB4E8E44();
  sub_1BB8746C8();
  LOBYTE(v16[0]) = 0;
  v9 = v15;
  sub_1BB874188();
  if (v9)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = *(_QWORD *)(v2 + 8);
  v15 = v6;
  v16[0] = v10;
  v18 = 1;
  sub_1BA4AD288(0, &qword_1EF2C59D8, (uint64_t)&type metadata for DebugInspectionCohort, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB4E91B8();
  sub_1BB8741AC();
  v16[0] = *(_QWORD *)(v2 + 16);
  v18 = 2;
  sub_1BA4AD288(0, &qword_1EF2BBA58, (uint64_t)&type metadata for DebugInspectionAggregate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB4E5EB8();
  sub_1BB8741AC();
  LOBYTE(v16[0]) = 3;
  sub_1BB87417C();
  v16[0] = MEMORY[0x28];
  v18 = 4;
  sub_1BB8741AC();
  LOBYTE(v16[0]) = 5;
  sub_1BB874188();
  v14 = 0;
  sub_1BB04F360(56, (uint64_t)v17, (uint64_t)&qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  sub_1BB04F360((uint64_t)v17, (uint64_t)v16, (uint64_t)&qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  v18 = 6;
  sub_1BB10E51C();
  sub_1BB87414C();
  v12 = v14;
  LOBYTE(v16[0]) = 7;
  sub_1BB87417C();
  LOBYTE(v16[0]) = 8;
  sub_1BB87417C();
  LOBYTE(v16[0]) = 9;
  sub_1BB874188();
  v16[0] = *(_QWORD *)(v12 + 536);
  v18 = 10;
  sub_1BB8741AC();
  v16[0] = *(_QWORD *)(v14 + 544);
  v18 = 11;
  sub_1BB8741AC();
  v16[0] = *(_QWORD *)(v14 + 552);
  v18 = 12;
  sub_1BB8741AC();
  LOBYTE(v16[0]) = 13;
  sub_1BB87411C();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v8, v5);
}

uint64_t sub_1BB4E1FE4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x44747865746E6F63;
  if (*v0 != 1)
    v1 = 0x6174614472657375;
  if (*v0)
    return v1;
  else
    return 0x44656C6369747261;
}

uint64_t sub_1BB4E2044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB4E7F58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB4E2068()
{
  sub_1BB4E6064();
  return sub_1BB874710();
}

uint64_t sub_1BB4E2090()
{
  sub_1BB4E6064();
  return sub_1BB87471C();
}

uint64_t sub_1BB4E20B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB4DFF84(a1, a2);
}

uint64_t sub_1BB4E20CC(_QWORD *a1)
{
  return sub_1BB4DFD98(a1);
}

uint64_t sub_1BB4E20E0()
{
  unsigned __int8 *v0;

  return sub_1BB4E02A0(*v0);
}

uint64_t sub_1BB4E20E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB4E8204(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BB4E210C(_BYTE *a1@<X8>)
{
  *a1 = 29;
}

uint64_t sub_1BB4E2118()
{
  sub_1BB4E5CC8();
  return sub_1BB874710();
}

uint64_t sub_1BB4E2140()
{
  sub_1BB4E5CC8();
  return sub_1BB87471C();
}

uint64_t sub_1BB4E2168@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB4E0D38(a1, a2);
}

uint64_t sub_1BB4E217C(_QWORD *a1)
{
  return sub_1BB4E05F4(a1);
}

uint64_t sub_1BB4E2190()
{
  _BYTE *v0;

  if (*v0)
    return 0x7263736275537369;
  else
    return 0x61466F7475417369;
}

uint64_t sub_1BB4E21E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB4E80D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB4E2204()
{
  sub_1BB4E9174();
  return sub_1BB874710();
}

uint64_t sub_1BB4E222C()
{
  sub_1BB4E9174();
  return sub_1BB87471C();
}

uint64_t sub_1BB4E2254@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BB4E7310(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1BB4E2288(_QWORD *a1)
{
  return sub_1BB4E187C(a1);
}

uint64_t sub_1BB4E22B4()
{
  unsigned __int8 *v0;

  return sub_1BB4E19B8(*v0);
}

uint64_t sub_1BB4E22BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB4E95BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB4E22E0()
{
  sub_1BB4E8E44();
  return sub_1BB874710();
}

uint64_t sub_1BB4E2308()
{
  sub_1BB4E8E44();
  return sub_1BB87471C();
}

void *sub_1BB4E2330@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _BYTE v5[576];

  result = sub_1BB4E7484(a1, v5);
  if (!v2)
    return memcpy(a2, v5, 0x240uLL);
  return result;
}

uint64_t sub_1BB4E2380(_QWORD *a1)
{
  const void *v1;
  _BYTE v4[576];

  memcpy(v4, v1, sizeof(v4));
  return sub_1BB4E1B60(a1);
}

uint64_t sub_1BB4E23D0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _BYTE *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v2 = type metadata accessor for DebugInspectionArticleData(0);
  if (*(_BYTE *)(a1 + *(int *)(v2 + 84)) == 1)
  {
    v3 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v5 = v3[2];
    v4 = v3[3];
    if (v5 >= v4 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
    v3[2] = v5 + 1;
    v6 = &v3[2 * v5];
    v6[4] = 0xD000000000000010;
    v6[5] = 0x80000001BB98EF40;
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v7 = (_BYTE *)(a1 + *(int *)(type metadata accessor for DebugInspectionHeadline(0) + 24));
  if (v7[1] == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    v9 = v3[2];
    v8 = v3[3];
    if (v9 >= v8 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v8 > 1), v9 + 1, 1, v3);
    v3[2] = v9 + 1;
    v10 = &v3[2 * v9];
    v10[4] = 0x6C6F462064726148;
    v10[5] = 0xEB00000000776F6CLL;
  }
  if (*v7 == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    v12 = v3[2];
    v11 = v3[3];
    if (v12 >= v11 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v11 > 1), v12 + 1, 1, v3);
    v3[2] = v12 + 1;
    v13 = &v3[2 * v12];
    v13[4] = 0x6C6F46206F747541;
    v13[5] = 0xEB00000000776F6CLL;
  }
  if (*(_BYTE *)(a1 + *(int *)(v2 + 80)) == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    v15 = v3[2];
    v14 = v3[3];
    if (v15 >= v14 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v14 > 1), v15 + 1, 1, v3);
    v3[2] = v15 + 1;
    v16 = &v3[2 * v15];
    v16[4] = 5002053;
    v16[5] = 0xE300000000000000;
  }
  else if (!v3[2])
  {
    swift_bridgeObjectRelease();
    return 0x6E776F6E6B6E55;
  }
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v17 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1BB4E26D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - v3;
  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DebugInspectionArticleData(0);
  sub_1BA76D70C(a1 + *(int *)(v9 + 36), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BA76D750((uint64_t)v4);
    return 0x6E776F6E6B6E55;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if (qword_1EF2A7328 != -1)
      swift_once();
    v11 = (void *)qword_1EF2C5770;
    v12 = (void *)sub_1BB86C808();
    v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

    v10 = sub_1BB8729A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v10;
}

void sub_1BB4E2878()
{
  id v0;
  void *v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v1 = (void *)sub_1BB872970();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  qword_1EF2C5770 = (uint64_t)v0;
}

uint64_t type metadata accessor for DebugInspectionArticleData(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2C57D0);
}

uint64_t type metadata accessor for DebugInspectionHeadline(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2C58D0);
}

_QWORD *sub_1BB4E2914(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  void *__dst;
  uint64_t *__dsta;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    v10 = a3[9];
    __dst = (void *)(a1 + v10);
    v11 = (char *)a2 + v10;
    *(_QWORD *)(a1 + 56) = a2[7];
    v12 = sub_1BB86C8B0();
    v13 = *(_QWORD *)(v12 - 8);
    v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v58(v11, 1, v12))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v16 = a3[10];
    v17 = (char *)v4 + v16;
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    if (v19 >> 60 == 15)
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
    else
    {
      v20 = *v18;
      sub_1BA69D44C(*v18, v18[1]);
      *(_QWORD *)v17 = v20;
      *((_QWORD *)v17 + 1) = v19;
    }
    v21 = a3[12];
    *(_QWORD *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v22 = (char *)v4 + v21;
    v23 = (uint64_t)a2 + v21;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = *(_BYTE *)(v23 + 8);
    v24 = a3[14];
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *((_BYTE *)v4 + v24) = *((_BYTE *)a2 + v24);
    v25 = a3[15];
    v26 = a3[16];
    v27 = (_QWORD *)((char *)v4 + v25);
    v28 = (uint64_t *)((char *)a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    *((_BYTE *)v4 + v26) = *((_BYTE *)a2 + v26);
    v30 = a3[18];
    *((_BYTE *)v4 + a3[17]) = *((_BYTE *)a2 + a3[17]);
    *((_BYTE *)v4 + v30) = *((_BYTE *)a2 + v30);
    v31 = a3[20];
    *((_BYTE *)v4 + a3[19]) = *((_BYTE *)a2 + a3[19]);
    *((_BYTE *)v4 + v31) = *((_BYTE *)a2 + v31);
    v32 = a3[22];
    *((_BYTE *)v4 + a3[21]) = *((_BYTE *)a2 + a3[21]);
    *((_BYTE *)v4 + v32) = *((_BYTE *)a2 + v32);
    v33 = a3[24];
    *((_BYTE *)v4 + a3[23]) = *((_BYTE *)a2 + a3[23]);
    *((_BYTE *)v4 + v33) = *((_BYTE *)a2 + v33);
    v34 = a3[25];
    v35 = a3[26];
    v36 = (char *)v4 + v34;
    v37 = (uint64_t)a2 + v34;
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = *(_BYTE *)(v37 + 8);
    v38 = (char *)v4 + v35;
    v39 = (uint64_t)a2 + v35;
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v38[8] = *(_BYTE *)(v39 + 8);
    v40 = a3[27];
    v41 = a3[28];
    v42 = (_QWORD *)((char *)v4 + v40);
    v43 = (uint64_t *)((char *)a2 + v40);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = v43[3];
    v42[2] = v43[2];
    v42[3] = v45;
    v46 = (_QWORD *)((char *)v4 + v41);
    v47 = (uint64_t *)((char *)a2 + v41);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v49 = a3[30];
    *(_QWORD *)((char *)v4 + a3[29]) = *(uint64_t *)((char *)a2 + a3[29]);
    v50 = (_QWORD *)((char *)v4 + v49);
    v51 = (uint64_t *)((char *)a2 + v49);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = a3[31];
    __dsta = (_QWORD *)((char *)v4 + v53);
    v54 = (uint64_t *)((char *)a2 + v53);
    v55 = *(uint64_t *)((char *)a2 + v53 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v55 >> 60 == 15)
    {
      *(_OWORD *)__dsta = *(_OWORD *)v54;
    }
    else
    {
      v56 = *v54;
      sub_1BA69D44C(*v54, v55);
      *__dsta = v56;
      __dsta[1] = v55;
    }
    *(_QWORD *)((char *)v4 + a3[32]) = *(uint64_t *)((char *)a2 + a3[32]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BB4E2C64(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[9];
  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = (uint64_t *)(a1 + a2[10]);
  v8 = v7[1];
  if (v8 >> 60 != 15)
    sub_1BA69D314(*v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(a1 + a2[31]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_1BA69D314(*v9, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB4E2D90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  unsigned int (*v56)(const void *, uint64_t, uint64_t);
  void *__dst;
  uint64_t *__dsta;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  v9 = a3[9];
  __dst = (void *)(a1 + v9);
  v10 = (const void *)(a2 + v9);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v11 = sub_1BB86C8B0();
  v12 = *(_QWORD *)(v11 - 8);
  v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v56(v10, 1, v11))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v14 = a3[10];
  v15 = a1 + v14;
  v16 = (uint64_t *)(a2 + v14);
  v17 = v16[1];
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  else
  {
    v18 = *v16;
    sub_1BA69D44C(*v16, v16[1]);
    *(_QWORD *)v15 = v18;
    *(_QWORD *)(v15 + 8) = v17;
  }
  v19 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  v22 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[15];
  v24 = a3[16];
  v25 = (_QWORD *)(a1 + v23);
  v26 = (_QWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  v28 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v31 = a3[24];
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[25];
  v33 = a3[26];
  v34 = a1 + v32;
  v35 = a2 + v32;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  v36 = a1 + v33;
  v37 = a2 + v33;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  v38 = a3[27];
  v39 = a3[28];
  v40 = (_QWORD *)(a1 + v38);
  v41 = (_QWORD *)(a2 + v38);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = v41[3];
  v40[2] = v41[2];
  v40[3] = v43;
  v44 = (_QWORD *)(a1 + v39);
  v45 = (_QWORD *)(a2 + v39);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v47 = a3[30];
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = a3[31];
  __dsta = (uint64_t *)(a1 + v51);
  v52 = (uint64_t *)(a2 + v51);
  v53 = *(_QWORD *)(a2 + v51 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v53 >> 60 == 15)
  {
    *(_OWORD *)__dsta = *(_OWORD *)v52;
  }
  else
  {
    v54 = *v52;
    sub_1BA69D44C(*v52, v53);
    *__dsta = v54;
    __dsta[1] = v53;
  }
  *(_QWORD *)(a1 + a3[32]) = *(_QWORD *)(a2 + a3[32]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB4E30B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[9];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[10];
  v17 = (uint64_t *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v19 = *(_QWORD *)(a2 + v16 + 8);
  if (*(_QWORD *)(a1 + v16 + 8) >> 60 == 15)
  {
    if (v19 >> 60 != 15)
    {
      v20 = *v18;
      sub_1BA69D44C(v20, v19);
      *v17 = v20;
      v17[1] = v19;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v19 >> 60 == 15)
  {
    sub_1BA92BD1C((uint64_t)v17);
LABEL_12:
    *(_OWORD *)v17 = *(_OWORD *)v18;
    goto LABEL_14;
  }
  v21 = *v18;
  sub_1BA69D44C(v21, v19);
  v22 = *v17;
  v23 = v17[1];
  *v17 = v21;
  v17[1] = v19;
  sub_1BA69D314(v22, v23);
LABEL_14:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v24 = a3[12];
  v25 = a1 + v24;
  v26 = (uint64_t *)(a2 + v24);
  v27 = *v26;
  *(_BYTE *)(v25 + 8) = *((_BYTE *)v26 + 8);
  *(_QWORD *)v25 = v27;
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v28 = a3[15];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  v31 = a3[25];
  v32 = a1 + v31;
  v33 = (uint64_t *)(a2 + v31);
  v34 = *v33;
  *(_BYTE *)(v32 + 8) = *((_BYTE *)v33 + 8);
  *(_QWORD *)v32 = v34;
  v35 = a3[26];
  v36 = a1 + v35;
  v37 = (uint64_t *)(a2 + v35);
  v38 = *v37;
  *(_BYTE *)(v36 + 8) = *((_BYTE *)v37 + 8);
  *(_QWORD *)v36 = v38;
  v39 = a3[27];
  v40 = (_QWORD *)(a1 + v39);
  v41 = a2 + v39;
  *v40 = *(_QWORD *)(a2 + v39);
  v40[1] = *(_QWORD *)(a2 + v39 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40[2] = *(_QWORD *)(v41 + 16);
  v40[3] = *(_QWORD *)(v41 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[28];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = a3[30];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = a3[31];
  v49 = (uint64_t *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v51 = *(_QWORD *)(a2 + v48 + 8);
  if (*(_QWORD *)(a1 + v48 + 8) >> 60 != 15)
  {
    if (v51 >> 60 != 15)
    {
      v53 = *v50;
      sub_1BA69D44C(v53, v51);
      v54 = *v49;
      v55 = v49[1];
      *v49 = v53;
      v49[1] = v51;
      sub_1BA69D314(v54, v55);
      goto LABEL_21;
    }
    sub_1BA92BD1C((uint64_t)v49);
    goto LABEL_19;
  }
  if (v51 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)v49 = *(_OWORD *)v50;
    goto LABEL_21;
  }
  v52 = *v50;
  sub_1BA69D44C(v52, v51);
  *v49 = v52;
  v49[1] = v51;
LABEL_21:
  *(_QWORD *)(a1 + a3[32]) = *(_QWORD *)(a2 + a3[32]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB4E3544(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v8 = a3[9];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 40) = v7;
  v11 = sub_1BB86C8B0();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[12];
  v16 = a3[13];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v19 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  v20 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v22 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  v27 = a3[26];
  v28 = a3[27];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  v31 = (_OWORD *)(a1 + v28);
  v32 = (_OWORD *)(a2 + v28);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = a3[29];
  *(_OWORD *)(a1 + a3[28]) = *(_OWORD *)(a2 + a3[28]);
  *(_QWORD *)(a1 + v34) = *(_QWORD *)(a2 + v34);
  v35 = a3[31];
  *(_OWORD *)(a1 + a3[30]) = *(_OWORD *)(a2 + a3[30]);
  *(_OWORD *)(a1 + v35) = *(_OWORD *)(a2 + v35);
  *(_QWORD *)(a1 + a3[32]) = *(_QWORD *)(a2 + a3[32]);
  return a1;
}

uint64_t sub_1BB4E3764(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v8 = a3[9];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1BB86C8B0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[10];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a1 + v17 + 8);
  if (v20 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v18 = *(_OWORD *)v19;
    goto LABEL_12;
  }
  v21 = *(_QWORD *)(v19 + 8);
  if (v21 >> 60 == 15)
  {
    sub_1BA92BD1C(v18);
    goto LABEL_10;
  }
  v22 = *(_QWORD *)v18;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v21;
  sub_1BA69D314(v22, v20);
LABEL_12:
  v23 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  v26 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  v27 = a3[15];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v33 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v34 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  v35 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v35) = *(_BYTE *)(a2 + v35);
  v36 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  v39 = a3[26];
  v40 = a3[27];
  v41 = a1 + v39;
  v42 = a2 + v39;
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_BYTE *)(v41 + 8) = *(_BYTE *)(v42 + 8);
  v43 = (_QWORD *)(a1 + v40);
  v44 = a2 + v40;
  v45 = *(_QWORD *)(a2 + v40);
  v46 = *(_QWORD *)(a2 + v40 + 8);
  *v43 = v45;
  v43[1] = v46;
  swift_bridgeObjectRelease();
  v47 = *(_QWORD *)(v44 + 24);
  v43[2] = *(_QWORD *)(v44 + 16);
  v43[3] = v47;
  swift_bridgeObjectRelease();
  v48 = a3[28];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  swift_bridgeObjectRelease();
  v53 = a3[30];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (uint64_t *)(a2 + v53);
  v57 = *v55;
  v56 = v55[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  v58 = a3[31];
  v59 = (uint64_t *)(a1 + v58);
  v60 = (uint64_t *)(a2 + v58);
  v61 = *(_QWORD *)(a1 + v58 + 8);
  if (v61 >> 60 != 15)
  {
    v62 = v60[1];
    if (v62 >> 60 != 15)
    {
      v63 = *v59;
      *v59 = *v60;
      v59[1] = v62;
      sub_1BA69D314(v63, v61);
      goto LABEL_17;
    }
    sub_1BA92BD1C((uint64_t)v59);
  }
  *(_OWORD *)v59 = *(_OWORD *)v60;
LABEL_17:
  *(_QWORD *)(a1 + a3[32]) = *(_QWORD *)(a2 + a3[32]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB4E3AE4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB4E3AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1BB4E3B84()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB4E3B90(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_1BB4E3C1C()
{
  unint64_t v0;

  sub_1BA4B07F0(319, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_1BB4E3D2C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t *__dsta;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v8 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 56) = a2[7];
    v9 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    v10 = v9[9];
    __dst = (char *)v4 + v10;
    v11 = (char *)a2 + v10;
    v12 = sub_1BB86C8B0();
    v13 = *(_QWORD *)(v12 - 8);
    v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v71(v11, 1, v12))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v16 = v9[10];
    v17 = (char *)v4 + v16;
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    if (v19 >> 60 == 15)
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
    else
    {
      v20 = *v18;
      sub_1BA69D44C(*v18, v18[1]);
      *(_QWORD *)v17 = v20;
      *((_QWORD *)v17 + 1) = v19;
    }
    *(_QWORD *)((char *)v4 + v9[11]) = *(uint64_t *)((char *)a2 + v9[11]);
    v21 = v9[12];
    v22 = (char *)v4 + v21;
    v23 = (uint64_t)a2 + v21;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = *(_BYTE *)(v23 + 8);
    *((_BYTE *)v4 + v9[13]) = *((_BYTE *)a2 + v9[13]);
    *((_BYTE *)v4 + v9[14]) = *((_BYTE *)a2 + v9[14]);
    v24 = v9[15];
    v25 = (_QWORD *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *((_BYTE *)v4 + v9[16]) = *((_BYTE *)a2 + v9[16]);
    *((_BYTE *)v4 + v9[17]) = *((_BYTE *)a2 + v9[17]);
    *((_BYTE *)v4 + v9[18]) = *((_BYTE *)a2 + v9[18]);
    *((_BYTE *)v4 + v9[19]) = *((_BYTE *)a2 + v9[19]);
    *((_BYTE *)v4 + v9[20]) = *((_BYTE *)a2 + v9[20]);
    *((_BYTE *)v4 + v9[21]) = *((_BYTE *)a2 + v9[21]);
    *((_BYTE *)v4 + v9[22]) = *((_BYTE *)a2 + v9[22]);
    *((_BYTE *)v4 + v9[23]) = *((_BYTE *)a2 + v9[23]);
    *((_BYTE *)v4 + v9[24]) = *((_BYTE *)a2 + v9[24]);
    v28 = v9[25];
    v29 = (char *)v4 + v28;
    v30 = (uint64_t)a2 + v28;
    v29[8] = *(_BYTE *)(v30 + 8);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v31 = v9[26];
    v32 = (char *)v4 + v31;
    v33 = (uint64_t)a2 + v31;
    *(_QWORD *)v32 = *(_QWORD *)v33;
    v32[8] = *(_BYTE *)(v33 + 8);
    v34 = v9[27];
    v35 = (_QWORD *)((char *)v4 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v36[3];
    v35[2] = v36[2];
    v35[3] = v38;
    v39 = v9[28];
    v40 = (_QWORD *)((char *)v4 + v39);
    v41 = (uint64_t *)((char *)a2 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    *(_QWORD *)((char *)v4 + v9[29]) = *(uint64_t *)((char *)a2 + v9[29]);
    v43 = v9[30];
    v44 = (_QWORD *)((char *)v4 + v43);
    v45 = (uint64_t *)((char *)a2 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = v9[31];
    __dsta = (_QWORD *)((char *)v4 + v47);
    v48 = (uint64_t *)((char *)a2 + v47);
    v49 = *(uint64_t *)((char *)a2 + v47 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v49 >> 60 == 15)
    {
      *(_OWORD *)__dsta = *(_OWORD *)v48;
    }
    else
    {
      v50 = *v48;
      sub_1BA69D44C(*v48, v49);
      *__dsta = v50;
      __dsta[1] = v49;
    }
    *(_QWORD *)((char *)v4 + v9[32]) = *(uint64_t *)((char *)a2 + v9[32]);
    v51 = *(int *)(a3 + 20);
    v52 = (char *)v4 + v51;
    v53 = (uint64_t)a2 + v51;
    *v52 = *((_BYTE *)a2 + v51);
    v54 = *(uint64_t *)((char *)a2 + v51 + 16);
    *((_QWORD *)v52 + 1) = *(uint64_t *)((char *)a2 + v51 + 8);
    *((_QWORD *)v52 + 2) = v54;
    v55 = *(uint64_t *)((char *)a2 + v51 + 32);
    *((_QWORD *)v52 + 3) = *(uint64_t *)((char *)a2 + v51 + 24);
    *((_QWORD *)v52 + 4) = v55;
    *((_QWORD *)v52 + 5) = *(uint64_t *)((char *)a2 + v51 + 40);
    v52[48] = *((_BYTE *)a2 + v51 + 48);
    v56 = *(uint64_t *)((char *)a2 + v51 + 360);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v56)
    {
      *(_OWORD *)(v52 + 56) = *(_OWORD *)(v53 + 56);
      v57 = *(_OWORD *)(v53 + 88);
      *(_OWORD *)(v52 + 72) = *(_OWORD *)(v53 + 72);
      *(_OWORD *)(v52 + 88) = v57;
      v58 = *(_OWORD *)(v53 + 120);
      *(_OWORD *)(v52 + 104) = *(_OWORD *)(v53 + 104);
      *(_OWORD *)(v52 + 120) = v58;
      v59 = *(_OWORD *)(v53 + 152);
      *(_OWORD *)(v52 + 136) = *(_OWORD *)(v53 + 136);
      *(_OWORD *)(v52 + 152) = v59;
      v60 = *(_OWORD *)(v53 + 184);
      *(_OWORD *)(v52 + 168) = *(_OWORD *)(v53 + 168);
      *(_OWORD *)(v52 + 184) = v60;
      v61 = *(_OWORD *)(v53 + 216);
      *(_OWORD *)(v52 + 200) = *(_OWORD *)(v53 + 200);
      *(_OWORD *)(v52 + 216) = v61;
      v62 = *(_OWORD *)(v53 + 248);
      *(_OWORD *)(v52 + 232) = *(_OWORD *)(v53 + 232);
      *(_OWORD *)(v52 + 248) = v62;
      *((_QWORD *)v52 + 33) = *(_QWORD *)(v53 + 264);
      *((_OWORD *)v52 + 17) = *(_OWORD *)(v53 + 272);
      *((_OWORD *)v52 + 18) = *(_OWORD *)(v53 + 288);
      *((_OWORD *)v52 + 19) = *(_OWORD *)(v53 + 304);
      *((_OWORD *)v52 + 20) = *(_OWORD *)(v53 + 320);
      *((_OWORD *)v52 + 21) = *(_OWORD *)(v53 + 336);
      v63 = *(_QWORD *)(v53 + 360);
      *((_QWORD *)v52 + 44) = *(_QWORD *)(v53 + 352);
      *((_QWORD *)v52 + 45) = v63;
      *((_OWORD *)v52 + 23) = *(_OWORD *)(v53 + 368);
      *((_QWORD *)v52 + 48) = *(_QWORD *)(v53 + 384);
      v64 = *(_OWORD *)(v53 + 392);
      v65 = *(_OWORD *)(v53 + 408);
      v66 = *(_OWORD *)(v53 + 440);
      *(_OWORD *)(v52 + 424) = *(_OWORD *)(v53 + 424);
      *(_OWORD *)(v52 + 440) = v66;
      *(_OWORD *)(v52 + 392) = v64;
      *(_OWORD *)(v52 + 408) = v65;
      v67 = *(_QWORD *)(v53 + 464);
      *((_QWORD *)v52 + 57) = *(_QWORD *)(v53 + 456);
      *((_QWORD *)v52 + 58) = v67;
      *((_QWORD *)v52 + 59) = *(_QWORD *)(v53 + 472);
      *((_OWORD *)v52 + 30) = *(_OWORD *)(v53 + 480);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v52 + 56, (const void *)(v53 + 56), 0x1B8uLL);
    }
    v68 = *(_QWORD *)(v53 + 504);
    *((_QWORD *)v52 + 62) = *(_QWORD *)(v53 + 496);
    *((_QWORD *)v52 + 63) = v68;
    *((_QWORD *)v52 + 64) = *(_QWORD *)(v53 + 512);
    *((_QWORD *)v52 + 65) = *(_QWORD *)(v53 + 520);
    v52[528] = *(_BYTE *)(v53 + 528);
    *((_QWORD *)v52 + 67) = *(_QWORD *)(v53 + 536);
    *((_QWORD *)v52 + 68) = *(_QWORD *)(v53 + 544);
    *((_QWORD *)v52 + 69) = *(_QWORD *)(v53 + 552);
    *((_QWORD *)v52 + 70) = *(_QWORD *)(v53 + 560);
    *((_QWORD *)v52 + 71) = *(_QWORD *)(v53 + 568);
    *(_WORD *)((char *)v4 + *(int *)(a3 + 24)) = *(_WORD *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BB4E427C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  v5 = a1 + v4[9];
  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = (uint64_t *)(a1 + v4[10]);
  v9 = v8[1];
  if (v9 >> 60 != 15)
    sub_1BA69D314(*v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(a1 + v4[31]);
  v11 = v10[1];
  if (v11 >> 60 != 15)
    sub_1BA69D314(*v10, v11);
  swift_bridgeObjectRelease();
  v12 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v12 + 360))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB4E4420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v69)(const void *, uint64_t, uint64_t);
  void *__dst;
  uint64_t *__dsta;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v8 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  v9 = v8[9];
  __dst = (void *)(a1 + v9);
  v10 = (const void *)(a2 + v9);
  v11 = sub_1BB86C8B0();
  v12 = *(_QWORD *)(v11 - 8);
  v69 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v69(v10, 1, v11))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v14 = v8[10];
  v15 = a1 + v14;
  v16 = (uint64_t *)(a2 + v14);
  v17 = v16[1];
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  else
  {
    v18 = *v16;
    sub_1BA69D44C(*v16, v16[1]);
    *(_QWORD *)v15 = v18;
    *(_QWORD *)(v15 + 8) = v17;
  }
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v19 = v8[12];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  v22 = v8[15];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_BYTE *)(a1 + v8[16]) = *(_BYTE *)(a2 + v8[16]);
  *(_BYTE *)(a1 + v8[17]) = *(_BYTE *)(a2 + v8[17]);
  *(_BYTE *)(a1 + v8[18]) = *(_BYTE *)(a2 + v8[18]);
  *(_BYTE *)(a1 + v8[19]) = *(_BYTE *)(a2 + v8[19]);
  *(_BYTE *)(a1 + v8[20]) = *(_BYTE *)(a2 + v8[20]);
  *(_BYTE *)(a1 + v8[21]) = *(_BYTE *)(a2 + v8[21]);
  *(_BYTE *)(a1 + v8[22]) = *(_BYTE *)(a2 + v8[22]);
  *(_BYTE *)(a1 + v8[23]) = *(_BYTE *)(a2 + v8[23]);
  *(_BYTE *)(a1 + v8[24]) = *(_BYTE *)(a2 + v8[24]);
  v26 = v8[25];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = v8[26];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  v32 = v8[27];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = v34[3];
  v33[2] = v34[2];
  v33[3] = v36;
  v37 = v8[28];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  *(_QWORD *)(a1 + v8[29]) = *(_QWORD *)(a2 + v8[29]);
  v41 = v8[30];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  v45 = v8[31];
  __dsta = (uint64_t *)(a1 + v45);
  v46 = (uint64_t *)(a2 + v45);
  v47 = *(_QWORD *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47 >> 60 == 15)
  {
    *(_OWORD *)__dsta = *(_OWORD *)v46;
  }
  else
  {
    v48 = *v46;
    sub_1BA69D44C(*v46, v47);
    *__dsta = v48;
    __dsta[1] = v47;
  }
  *(_QWORD *)(a1 + v8[32]) = *(_QWORD *)(a2 + v8[32]);
  v49 = *(int *)(a3 + 20);
  v50 = a1 + v49;
  v51 = a2 + v49;
  *(_BYTE *)v50 = *(_BYTE *)(a2 + v49);
  v52 = *(_QWORD *)(a2 + v49 + 16);
  *(_QWORD *)(v50 + 8) = *(_QWORD *)(a2 + v49 + 8);
  *(_QWORD *)(v50 + 16) = v52;
  v53 = *(_QWORD *)(a2 + v49 + 32);
  *(_QWORD *)(v50 + 24) = *(_QWORD *)(a2 + v49 + 24);
  *(_QWORD *)(v50 + 32) = v53;
  *(_QWORD *)(v50 + 40) = *(_QWORD *)(a2 + v49 + 40);
  *(_BYTE *)(v50 + 48) = *(_BYTE *)(a2 + v49 + 48);
  v54 = *(_QWORD *)(a2 + v49 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v54)
  {
    *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
    v55 = *(_OWORD *)(v51 + 88);
    *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
    *(_OWORD *)(v50 + 88) = v55;
    v56 = *(_OWORD *)(v51 + 120);
    *(_OWORD *)(v50 + 104) = *(_OWORD *)(v51 + 104);
    *(_OWORD *)(v50 + 120) = v56;
    v57 = *(_OWORD *)(v51 + 152);
    *(_OWORD *)(v50 + 136) = *(_OWORD *)(v51 + 136);
    *(_OWORD *)(v50 + 152) = v57;
    v58 = *(_OWORD *)(v51 + 184);
    *(_OWORD *)(v50 + 168) = *(_OWORD *)(v51 + 168);
    *(_OWORD *)(v50 + 184) = v58;
    v59 = *(_OWORD *)(v51 + 216);
    *(_OWORD *)(v50 + 200) = *(_OWORD *)(v51 + 200);
    *(_OWORD *)(v50 + 216) = v59;
    v60 = *(_OWORD *)(v51 + 248);
    *(_OWORD *)(v50 + 232) = *(_OWORD *)(v51 + 232);
    *(_OWORD *)(v50 + 248) = v60;
    *(_QWORD *)(v50 + 264) = *(_QWORD *)(v51 + 264);
    *(_OWORD *)(v50 + 272) = *(_OWORD *)(v51 + 272);
    *(_OWORD *)(v50 + 288) = *(_OWORD *)(v51 + 288);
    *(_OWORD *)(v50 + 304) = *(_OWORD *)(v51 + 304);
    *(_OWORD *)(v50 + 320) = *(_OWORD *)(v51 + 320);
    *(_OWORD *)(v50 + 336) = *(_OWORD *)(v51 + 336);
    v61 = *(_QWORD *)(v51 + 360);
    *(_QWORD *)(v50 + 352) = *(_QWORD *)(v51 + 352);
    *(_QWORD *)(v50 + 360) = v61;
    *(_OWORD *)(v50 + 368) = *(_OWORD *)(v51 + 368);
    *(_QWORD *)(v50 + 384) = *(_QWORD *)(v51 + 384);
    v62 = *(_OWORD *)(v51 + 392);
    v63 = *(_OWORD *)(v51 + 408);
    v64 = *(_OWORD *)(v51 + 440);
    *(_OWORD *)(v50 + 424) = *(_OWORD *)(v51 + 424);
    *(_OWORD *)(v50 + 440) = v64;
    *(_OWORD *)(v50 + 392) = v62;
    *(_OWORD *)(v50 + 408) = v63;
    v65 = *(_QWORD *)(v51 + 464);
    *(_QWORD *)(v50 + 456) = *(_QWORD *)(v51 + 456);
    *(_QWORD *)(v50 + 464) = v65;
    *(_QWORD *)(v50 + 472) = *(_QWORD *)(v51 + 472);
    *(_OWORD *)(v50 + 480) = *(_OWORD *)(v51 + 480);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(v50 + 56), (const void *)(v51 + 56), 0x1B8uLL);
  }
  v66 = *(_QWORD *)(v51 + 504);
  *(_QWORD *)(v50 + 496) = *(_QWORD *)(v51 + 496);
  *(_QWORD *)(v50 + 504) = v66;
  *(_QWORD *)(v50 + 512) = *(_QWORD *)(v51 + 512);
  *(_QWORD *)(v50 + 520) = *(_QWORD *)(v51 + 520);
  *(_BYTE *)(v50 + 528) = *(_BYTE *)(v51 + 528);
  *(_QWORD *)(v50 + 536) = *(_QWORD *)(v51 + 536);
  *(_QWORD *)(v50 + 544) = *(_QWORD *)(v51 + 544);
  *(_QWORD *)(v50 + 552) = *(_QWORD *)(v51 + 552);
  *(_QWORD *)(v50 + 560) = *(_QWORD *)(v51 + 560);
  *(_QWORD *)(v50 + 568) = *(_QWORD *)(v51 + 568);
  *(_WORD *)(a1 + *(int *)(a3 + 24)) = *(_WORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB4E4944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  v8 = v7[9];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1BB86C8B0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  v17 = v7[10];
  v18 = (uint64_t *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v20 = *(_QWORD *)(a2 + v17 + 8);
  if (*(_QWORD *)(a1 + v17 + 8) >> 60 == 15)
  {
    if (v20 >> 60 != 15)
    {
      v21 = *v19;
      sub_1BA69D44C(v21, v20);
      *v18 = v21;
      v18[1] = v20;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v20 >> 60 == 15)
  {
    sub_1BA92BD1C((uint64_t)v18);
LABEL_12:
    *(_OWORD *)v18 = *(_OWORD *)v19;
    goto LABEL_14;
  }
  v22 = *v19;
  sub_1BA69D44C(v22, v20);
  v23 = *v18;
  v24 = v18[1];
  *v18 = v22;
  v18[1] = v20;
  sub_1BA69D314(v23, v24);
LABEL_14:
  *(_QWORD *)(a1 + v7[11]) = *(_QWORD *)(a2 + v7[11]);
  v25 = v7[12];
  v26 = a1 + v25;
  v27 = (uint64_t *)(a2 + v25);
  v28 = *v27;
  *(_BYTE *)(v26 + 8) = *((_BYTE *)v27 + 8);
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  v29 = v7[15];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(a2 + v7[16]);
  *(_BYTE *)(a1 + v7[17]) = *(_BYTE *)(a2 + v7[17]);
  *(_BYTE *)(a1 + v7[18]) = *(_BYTE *)(a2 + v7[18]);
  *(_BYTE *)(a1 + v7[19]) = *(_BYTE *)(a2 + v7[19]);
  *(_BYTE *)(a1 + v7[20]) = *(_BYTE *)(a2 + v7[20]);
  *(_BYTE *)(a1 + v7[21]) = *(_BYTE *)(a2 + v7[21]);
  *(_BYTE *)(a1 + v7[22]) = *(_BYTE *)(a2 + v7[22]);
  *(_BYTE *)(a1 + v7[23]) = *(_BYTE *)(a2 + v7[23]);
  *(_BYTE *)(a1 + v7[24]) = *(_BYTE *)(a2 + v7[24]);
  v32 = v7[25];
  v33 = a1 + v32;
  v34 = (uint64_t *)(a2 + v32);
  v35 = *v34;
  *(_BYTE *)(v33 + 8) = *((_BYTE *)v34 + 8);
  *(_QWORD *)v33 = v35;
  v36 = v7[26];
  v37 = a1 + v36;
  v38 = (uint64_t *)(a2 + v36);
  v39 = *v38;
  *(_BYTE *)(v37 + 8) = *((_BYTE *)v38 + 8);
  *(_QWORD *)v37 = v39;
  v40 = v7[27];
  v41 = (_QWORD *)(a1 + v40);
  v42 = a2 + v40;
  *v41 = *(_QWORD *)(a2 + v40);
  v41[1] = *(_QWORD *)(a2 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41[2] = *(_QWORD *)(v42 + 16);
  v41[3] = *(_QWORD *)(v42 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = v7[28];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(a2 + v43);
  *v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[29]) = *(_QWORD *)(a2 + v7[29]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = v7[30];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  *v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49 = v7[31];
  v50 = (uint64_t *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v52 = *(_QWORD *)(a2 + v49 + 8);
  if (*(_QWORD *)(a1 + v49 + 8) >> 60 == 15)
  {
    if (v52 >> 60 != 15)
    {
      v53 = *v51;
      sub_1BA69D44C(v53, v52);
      *v50 = v53;
      v50[1] = v52;
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  if (v52 >> 60 == 15)
  {
    sub_1BA92BD1C((uint64_t)v50);
LABEL_19:
    *(_OWORD *)v50 = *(_OWORD *)v51;
    goto LABEL_21;
  }
  v54 = *v51;
  sub_1BA69D44C(v54, v52);
  v55 = *v50;
  v56 = v50[1];
  *v50 = v54;
  v50[1] = v52;
  sub_1BA69D314(v55, v56);
LABEL_21:
  *(_QWORD *)(a1 + v7[32]) = *(_QWORD *)(a2 + v7[32]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57 = *(int *)(a3 + 20);
  v58 = a1 + v57;
  v59 = a2 + v57;
  *(_BYTE *)v58 = *(_BYTE *)(a2 + v57);
  *(_QWORD *)(v58 + 8) = *(_QWORD *)(a2 + v57 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v58 + 16) = *(_QWORD *)(v59 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v58 + 24) = *(_QWORD *)(v59 + 24);
  *(_QWORD *)(v58 + 32) = *(_QWORD *)(v59 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v58 + 40) = *(_QWORD *)(v59 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v58 + 48) = *(_BYTE *)(v59 + 48);
  v60 = *(_QWORD *)(v59 + 360);
  if (!*(_QWORD *)(v58 + 360))
  {
    if (v60)
    {
      *(_QWORD *)(v58 + 56) = *(_QWORD *)(v59 + 56);
      *(_QWORD *)(v58 + 64) = *(_QWORD *)(v59 + 64);
      *(_QWORD *)(v58 + 72) = *(_QWORD *)(v59 + 72);
      *(_QWORD *)(v58 + 80) = *(_QWORD *)(v59 + 80);
      *(_QWORD *)(v58 + 88) = *(_QWORD *)(v59 + 88);
      *(_QWORD *)(v58 + 96) = *(_QWORD *)(v59 + 96);
      *(_QWORD *)(v58 + 104) = *(_QWORD *)(v59 + 104);
      *(_QWORD *)(v58 + 112) = *(_QWORD *)(v59 + 112);
      *(_QWORD *)(v58 + 120) = *(_QWORD *)(v59 + 120);
      *(_QWORD *)(v58 + 128) = *(_QWORD *)(v59 + 128);
      *(_QWORD *)(v58 + 136) = *(_QWORD *)(v59 + 136);
      *(_QWORD *)(v58 + 144) = *(_QWORD *)(v59 + 144);
      *(_QWORD *)(v58 + 152) = *(_QWORD *)(v59 + 152);
      *(_QWORD *)(v58 + 160) = *(_QWORD *)(v59 + 160);
      *(_QWORD *)(v58 + 168) = *(_QWORD *)(v59 + 168);
      *(_QWORD *)(v58 + 176) = *(_QWORD *)(v59 + 176);
      *(_QWORD *)(v58 + 184) = *(_QWORD *)(v59 + 184);
      *(_QWORD *)(v58 + 192) = *(_QWORD *)(v59 + 192);
      *(_QWORD *)(v58 + 200) = *(_QWORD *)(v59 + 200);
      *(_QWORD *)(v58 + 208) = *(_QWORD *)(v59 + 208);
      *(_QWORD *)(v58 + 216) = *(_QWORD *)(v59 + 216);
      *(_QWORD *)(v58 + 224) = *(_QWORD *)(v59 + 224);
      *(_QWORD *)(v58 + 232) = *(_QWORD *)(v59 + 232);
      *(_QWORD *)(v58 + 240) = *(_QWORD *)(v59 + 240);
      *(_QWORD *)(v58 + 248) = *(_QWORD *)(v59 + 248);
      *(_QWORD *)(v58 + 256) = *(_QWORD *)(v59 + 256);
      *(_QWORD *)(v58 + 264) = *(_QWORD *)(v59 + 264);
      *(_QWORD *)(v58 + 272) = *(_QWORD *)(v59 + 272);
      *(_QWORD *)(v58 + 280) = *(_QWORD *)(v59 + 280);
      *(_QWORD *)(v58 + 288) = *(_QWORD *)(v59 + 288);
      *(_QWORD *)(v58 + 296) = *(_QWORD *)(v59 + 296);
      *(_QWORD *)(v58 + 304) = *(_QWORD *)(v59 + 304);
      *(_QWORD *)(v58 + 312) = *(_QWORD *)(v59 + 312);
      *(_QWORD *)(v58 + 320) = *(_QWORD *)(v59 + 320);
      *(_QWORD *)(v58 + 328) = *(_QWORD *)(v59 + 328);
      *(_QWORD *)(v58 + 336) = *(_QWORD *)(v59 + 336);
      *(_QWORD *)(v58 + 344) = *(_QWORD *)(v59 + 344);
      *(_QWORD *)(v58 + 352) = *(_QWORD *)(v59 + 352);
      *(_QWORD *)(v58 + 360) = *(_QWORD *)(v59 + 360);
      *(_QWORD *)(v58 + 368) = *(_QWORD *)(v59 + 368);
      *(_QWORD *)(v58 + 376) = *(_QWORD *)(v59 + 376);
      *(_QWORD *)(v58 + 384) = *(_QWORD *)(v59 + 384);
      v61 = *(_OWORD *)(v59 + 392);
      v62 = *(_OWORD *)(v59 + 408);
      v63 = *(_OWORD *)(v59 + 440);
      *(_OWORD *)(v58 + 424) = *(_OWORD *)(v59 + 424);
      *(_OWORD *)(v58 + 440) = v63;
      *(_OWORD *)(v58 + 392) = v61;
      *(_OWORD *)(v58 + 408) = v62;
      *(_QWORD *)(v58 + 456) = *(_QWORD *)(v59 + 456);
      *(_QWORD *)(v58 + 464) = *(_QWORD *)(v59 + 464);
      *(_QWORD *)(v58 + 472) = *(_QWORD *)(v59 + 472);
      *(_QWORD *)(v58 + 480) = *(_QWORD *)(v59 + 480);
      *(_QWORD *)(v58 + 488) = *(_QWORD *)(v59 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
LABEL_27:
    memcpy((void *)(v58 + 56), (const void *)(v59 + 56), 0x1B8uLL);
    goto LABEL_28;
  }
  if (!v60)
  {
    sub_1BAFD6454(v58 + 56);
    goto LABEL_27;
  }
  *(_QWORD *)(v58 + 56) = *(_QWORD *)(v59 + 56);
  *(_QWORD *)(v58 + 64) = *(_QWORD *)(v59 + 64);
  *(_QWORD *)(v58 + 72) = *(_QWORD *)(v59 + 72);
  *(_QWORD *)(v58 + 80) = *(_QWORD *)(v59 + 80);
  *(_QWORD *)(v58 + 88) = *(_QWORD *)(v59 + 88);
  *(_QWORD *)(v58 + 96) = *(_QWORD *)(v59 + 96);
  *(_QWORD *)(v58 + 104) = *(_QWORD *)(v59 + 104);
  *(_QWORD *)(v58 + 112) = *(_QWORD *)(v59 + 112);
  *(_QWORD *)(v58 + 120) = *(_QWORD *)(v59 + 120);
  *(_QWORD *)(v58 + 128) = *(_QWORD *)(v59 + 128);
  *(_QWORD *)(v58 + 136) = *(_QWORD *)(v59 + 136);
  *(_QWORD *)(v58 + 144) = *(_QWORD *)(v59 + 144);
  *(_QWORD *)(v58 + 152) = *(_QWORD *)(v59 + 152);
  *(_QWORD *)(v58 + 160) = *(_QWORD *)(v59 + 160);
  *(_QWORD *)(v58 + 168) = *(_QWORD *)(v59 + 168);
  *(_QWORD *)(v58 + 176) = *(_QWORD *)(v59 + 176);
  *(_QWORD *)(v58 + 184) = *(_QWORD *)(v59 + 184);
  *(_QWORD *)(v58 + 192) = *(_QWORD *)(v59 + 192);
  *(_QWORD *)(v58 + 200) = *(_QWORD *)(v59 + 200);
  *(_QWORD *)(v58 + 208) = *(_QWORD *)(v59 + 208);
  *(_QWORD *)(v58 + 216) = *(_QWORD *)(v59 + 216);
  *(_QWORD *)(v58 + 224) = *(_QWORD *)(v59 + 224);
  *(_QWORD *)(v58 + 232) = *(_QWORD *)(v59 + 232);
  *(_QWORD *)(v58 + 240) = *(_QWORD *)(v59 + 240);
  *(_QWORD *)(v58 + 248) = *(_QWORD *)(v59 + 248);
  *(_QWORD *)(v58 + 256) = *(_QWORD *)(v59 + 256);
  *(_QWORD *)(v58 + 264) = *(_QWORD *)(v59 + 264);
  *(_QWORD *)(v58 + 272) = *(_QWORD *)(v59 + 272);
  *(_QWORD *)(v58 + 280) = *(_QWORD *)(v59 + 280);
  *(_QWORD *)(v58 + 288) = *(_QWORD *)(v59 + 288);
  *(_QWORD *)(v58 + 296) = *(_QWORD *)(v59 + 296);
  *(_QWORD *)(v58 + 304) = *(_QWORD *)(v59 + 304);
  *(_QWORD *)(v58 + 312) = *(_QWORD *)(v59 + 312);
  *(_QWORD *)(v58 + 320) = *(_QWORD *)(v59 + 320);
  *(_QWORD *)(v58 + 328) = *(_QWORD *)(v59 + 328);
  *(_QWORD *)(v58 + 336) = *(_QWORD *)(v59 + 336);
  *(_QWORD *)(v58 + 344) = *(_QWORD *)(v59 + 344);
  *(_QWORD *)(v58 + 352) = *(_QWORD *)(v59 + 352);
  *(_QWORD *)(v58 + 360) = *(_QWORD *)(v59 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v58 + 368) = *(_QWORD *)(v59 + 368);
  *(_QWORD *)(v58 + 376) = *(_QWORD *)(v59 + 376);
  *(_QWORD *)(v58 + 384) = *(_QWORD *)(v59 + 384);
  *(_QWORD *)(v58 + 392) = *(_QWORD *)(v59 + 392);
  *(_QWORD *)(v58 + 400) = *(_QWORD *)(v59 + 400);
  *(_QWORD *)(v58 + 408) = *(_QWORD *)(v59 + 408);
  *(_QWORD *)(v58 + 416) = *(_QWORD *)(v59 + 416);
  *(_QWORD *)(v58 + 424) = *(_QWORD *)(v59 + 424);
  *(_QWORD *)(v58 + 432) = *(_QWORD *)(v59 + 432);
  *(_QWORD *)(v58 + 440) = *(_QWORD *)(v59 + 440);
  *(_QWORD *)(v58 + 448) = *(_QWORD *)(v59 + 448);
  *(_QWORD *)(v58 + 456) = *(_QWORD *)(v59 + 456);
  *(_QWORD *)(v58 + 464) = *(_QWORD *)(v59 + 464);
  *(_QWORD *)(v58 + 472) = *(_QWORD *)(v59 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v58 + 480) = *(_QWORD *)(v59 + 480);
  *(_QWORD *)(v58 + 488) = *(_QWORD *)(v59 + 488);
LABEL_28:
  *(_QWORD *)(v58 + 496) = *(_QWORD *)(v59 + 496);
  *(_QWORD *)(v58 + 504) = *(_QWORD *)(v59 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v58 + 512) = *(_QWORD *)(v59 + 512);
  *(_QWORD *)(v58 + 520) = *(_QWORD *)(v59 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v58 + 528) = *(_BYTE *)(v59 + 528);
  *(_QWORD *)(v58 + 536) = *(_QWORD *)(v59 + 536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v58 + 544) = *(_QWORD *)(v59 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v58 + 552) = *(_QWORD *)(v59 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v58 + 560) = *(_QWORD *)(v59 + 560);
  *(_QWORD *)(v58 + 568) = *(_QWORD *)(v59 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64 = *(int *)(a3 + 24);
  v65 = (_BYTE *)(a1 + v64);
  v66 = (_BYTE *)(a2 + v64);
  *v65 = *v66;
  v65[1] = v66[1];
  return a1;
}

uint64_t sub_1BB4E52E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v7 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  v8 = v7[9];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1BB86C8B0();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(_QWORD *)(a1 + v7[11]) = *(_QWORD *)(a2 + v7[11]);
  v14 = v7[12];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  *(_OWORD *)(a1 + v7[15]) = *(_OWORD *)(a2 + v7[15]);
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(a2 + v7[16]);
  *(_BYTE *)(a1 + v7[17]) = *(_BYTE *)(a2 + v7[17]);
  *(_BYTE *)(a1 + v7[18]) = *(_BYTE *)(a2 + v7[18]);
  *(_BYTE *)(a1 + v7[19]) = *(_BYTE *)(a2 + v7[19]);
  *(_BYTE *)(a1 + v7[20]) = *(_BYTE *)(a2 + v7[20]);
  *(_BYTE *)(a1 + v7[21]) = *(_BYTE *)(a2 + v7[21]);
  *(_BYTE *)(a1 + v7[22]) = *(_BYTE *)(a2 + v7[22]);
  *(_BYTE *)(a1 + v7[23]) = *(_BYTE *)(a2 + v7[23]);
  *(_BYTE *)(a1 + v7[24]) = *(_BYTE *)(a2 + v7[24]);
  v17 = v7[25];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v20 = v7[26];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = v7[27];
  v24 = (_OWORD *)(a1 + v23);
  v25 = (_OWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  *(_OWORD *)(a1 + v7[28]) = *(_OWORD *)(a2 + v7[28]);
  *(_QWORD *)(a1 + v7[29]) = *(_QWORD *)(a2 + v7[29]);
  *(_OWORD *)(a1 + v7[30]) = *(_OWORD *)(a2 + v7[30]);
  *(_OWORD *)(a1 + v7[31]) = *(_OWORD *)(a2 + v7[31]);
  *(_QWORD *)(a1 + v7[32]) = *(_QWORD *)(a2 + v7[32]);
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0x240uLL);
  *(_WORD *)(a1 + *(int *)(a3 + 24)) = *(_WORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1BB4E5558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  v9 = v8[9];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1BB86C8B0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  v18 = v8[10];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(a1 + v18 + 8);
  if (v21 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v19 = *(_OWORD *)v20;
    goto LABEL_12;
  }
  v22 = *(_QWORD *)(v20 + 8);
  if (v22 >> 60 == 15)
  {
    sub_1BA92BD1C(v19);
    goto LABEL_10;
  }
  v23 = *(_QWORD *)v19;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = v22;
  sub_1BA69D314(v23, v21);
LABEL_12:
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v24 = v8[12];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  v27 = v8[15];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v8[16]) = *(_BYTE *)(a2 + v8[16]);
  *(_BYTE *)(a1 + v8[17]) = *(_BYTE *)(a2 + v8[17]);
  *(_BYTE *)(a1 + v8[18]) = *(_BYTE *)(a2 + v8[18]);
  *(_BYTE *)(a1 + v8[19]) = *(_BYTE *)(a2 + v8[19]);
  *(_BYTE *)(a1 + v8[20]) = *(_BYTE *)(a2 + v8[20]);
  *(_BYTE *)(a1 + v8[21]) = *(_BYTE *)(a2 + v8[21]);
  *(_BYTE *)(a1 + v8[22]) = *(_BYTE *)(a2 + v8[22]);
  *(_BYTE *)(a1 + v8[23]) = *(_BYTE *)(a2 + v8[23]);
  *(_BYTE *)(a1 + v8[24]) = *(_BYTE *)(a2 + v8[24]);
  v32 = v8[25];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  v35 = v8[26];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  v38 = v8[27];
  v39 = (_QWORD *)(a1 + v38);
  v40 = a2 + v38;
  v41 = *(_QWORD *)(a2 + v38 + 8);
  *v39 = *(_QWORD *)(a2 + v38);
  v39[1] = v41;
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)(v40 + 24);
  v39[2] = *(_QWORD *)(v40 + 16);
  v39[3] = v42;
  swift_bridgeObjectRelease();
  v43 = v8[28];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (uint64_t *)(a2 + v43);
  v47 = *v45;
  v46 = v45[1];
  *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v8[29]) = *(_QWORD *)(a2 + v8[29]);
  swift_bridgeObjectRelease();
  v48 = v8[30];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  v53 = v8[31];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = *(_QWORD *)(a1 + v53 + 8);
  if (v56 >> 60 == 15)
  {
LABEL_15:
    *(_OWORD *)v54 = *(_OWORD *)v55;
    goto LABEL_17;
  }
  v57 = *(_QWORD *)(v55 + 8);
  if (v57 >> 60 == 15)
  {
    sub_1BA92BD1C(v54);
    goto LABEL_15;
  }
  v58 = *(_QWORD *)v54;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *(_QWORD *)(v54 + 8) = v57;
  sub_1BA69D314(v58, v56);
LABEL_17:
  *(_QWORD *)(a1 + v8[32]) = *(_QWORD *)(a2 + v8[32]);
  swift_bridgeObjectRelease();
  v59 = *(int *)(a3 + 20);
  v60 = a1 + v59;
  v61 = a2 + v59;
  *(_BYTE *)v60 = *(_BYTE *)(a2 + v59);
  *(_QWORD *)(v60 + 8) = *(_QWORD *)(a2 + v59 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v60 + 16) = *(_QWORD *)(v61 + 16);
  swift_bridgeObjectRelease();
  v62 = *(_QWORD *)(v61 + 32);
  *(_QWORD *)(v60 + 24) = *(_QWORD *)(v61 + 24);
  *(_QWORD *)(v60 + 32) = v62;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v60 + 40) = *(_QWORD *)(v61 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v60 + 48) = *(_BYTE *)(v61 + 48);
  if (!*(_QWORD *)(v60 + 360))
  {
LABEL_21:
    memcpy((void *)(v60 + 56), (const void *)(v61 + 56), 0x1B8uLL);
    goto LABEL_22;
  }
  if (!*(_QWORD *)(v61 + 360))
  {
    sub_1BAFD6454(v60 + 56);
    goto LABEL_21;
  }
  *(_OWORD *)(v60 + 56) = *(_OWORD *)(v61 + 56);
  v63 = *(_OWORD *)(v61 + 88);
  *(_OWORD *)(v60 + 72) = *(_OWORD *)(v61 + 72);
  *(_OWORD *)(v60 + 88) = v63;
  v64 = *(_OWORD *)(v61 + 120);
  *(_OWORD *)(v60 + 104) = *(_OWORD *)(v61 + 104);
  *(_OWORD *)(v60 + 120) = v64;
  v65 = *(_OWORD *)(v61 + 152);
  *(_OWORD *)(v60 + 136) = *(_OWORD *)(v61 + 136);
  *(_OWORD *)(v60 + 152) = v65;
  v66 = *(_OWORD *)(v61 + 184);
  *(_OWORD *)(v60 + 168) = *(_OWORD *)(v61 + 168);
  *(_OWORD *)(v60 + 184) = v66;
  v67 = *(_OWORD *)(v61 + 216);
  *(_OWORD *)(v60 + 200) = *(_OWORD *)(v61 + 200);
  *(_OWORD *)(v60 + 216) = v67;
  v68 = *(_OWORD *)(v61 + 248);
  *(_OWORD *)(v60 + 232) = *(_OWORD *)(v61 + 232);
  *(_OWORD *)(v60 + 248) = v68;
  *(_QWORD *)(v60 + 264) = *(_QWORD *)(v61 + 264);
  *(_OWORD *)(v60 + 272) = *(_OWORD *)(v61 + 272);
  *(_OWORD *)(v60 + 288) = *(_OWORD *)(v61 + 288);
  *(_OWORD *)(v60 + 304) = *(_OWORD *)(v61 + 304);
  *(_OWORD *)(v60 + 320) = *(_OWORD *)(v61 + 320);
  *(_OWORD *)(v60 + 336) = *(_OWORD *)(v61 + 336);
  v69 = *(_QWORD *)(v61 + 360);
  *(_QWORD *)(v60 + 352) = *(_QWORD *)(v61 + 352);
  *(_QWORD *)(v60 + 360) = v69;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v60 + 368) = *(_OWORD *)(v61 + 368);
  *(_OWORD *)(v60 + 384) = *(_OWORD *)(v61 + 384);
  *(_OWORD *)(v60 + 400) = *(_OWORD *)(v61 + 400);
  *(_OWORD *)(v60 + 416) = *(_OWORD *)(v61 + 416);
  *(_OWORD *)(v60 + 432) = *(_OWORD *)(v61 + 432);
  *(_QWORD *)(v60 + 448) = *(_QWORD *)(v61 + 448);
  *(_OWORD *)(v60 + 456) = *(_OWORD *)(v61 + 456);
  *(_QWORD *)(v60 + 472) = *(_QWORD *)(v61 + 472);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v60 + 480) = *(_OWORD *)(v61 + 480);
LABEL_22:
  v70 = *(_QWORD *)(v61 + 504);
  *(_QWORD *)(v60 + 496) = *(_QWORD *)(v61 + 496);
  *(_QWORD *)(v60 + 504) = v70;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v60 + 512) = *(_QWORD *)(v61 + 512);
  *(_QWORD *)(v60 + 520) = *(_QWORD *)(v61 + 520);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v60 + 528) = *(_BYTE *)(v61 + 528);
  *(_QWORD *)(v60 + 536) = *(_QWORD *)(v61 + 536);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v60 + 544) = *(_QWORD *)(v61 + 544);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v60 + 552) = *(_QWORD *)(v61 + 552);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v60 + 560) = *(_QWORD *)(v61 + 560);
  *(_QWORD *)(v60 + 568) = *(_QWORD *)(v61 + 568);
  swift_bridgeObjectRelease();
  v71 = *(int *)(a3 + 24);
  v72 = (_BYTE *)(a1 + v71);
  v73 = (_BYTE *)(a2 + v71);
  *v72 = *v73;
  v72[1] = v73[1];
  return a1;
}

uint64_t sub_1BB4E5B38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB4E5B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for DebugInspectionArticleData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BB4E5BC4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB4E5BD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for DebugInspectionArticleData(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1BB4E5C4C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DebugInspectionArticleData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1BB4E5CC8()
{
  unint64_t result;

  result = qword_1EF2C5918;
  if (!qword_1EF2C5918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F3EC, &type metadata for DebugInspectionArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5918);
  }
  return result;
}

unint64_t sub_1BB4E5D0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2BBA60;
  if (!qword_1EF2BBA60)
  {
    sub_1BA4AD288(255, &qword_1EF2BBA58, (uint64_t)&type metadata for DebugInspectionAggregate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BB10E07C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA60);
  }
  return result;
}

unint64_t sub_1BB4E5D84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2C5928;
  if (!qword_1EF2C5928)
  {
    sub_1BA4AD288(255, &qword_1EF2C5920, (uint64_t)&type metadata for DebugInspectionTagMetadata, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BB4E5DFC();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C5928);
  }
  return result;
}

unint64_t sub_1BB4E5DFC()
{
  unint64_t result;

  result = qword_1EF2C5930;
  if (!qword_1EF2C5930)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D37A4, &type metadata for DebugInspectionTagMetadata);
    atomic_store(result, (unint64_t *)&qword_1EF2C5930);
  }
  return result;
}

unint64_t sub_1BB4E5E40()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2BBA48;
  if (!qword_1EF2BBA48)
  {
    sub_1BA4AD288(255, &qword_1EF2BBA40, (uint64_t)&type metadata for DebugInspectionTag, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BB10E038();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA48);
  }
  return result;
}

unint64_t sub_1BB4E5EB8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2BBA90;
  if (!qword_1EF2BBA90)
  {
    sub_1BA4AD288(255, &qword_1EF2BBA58, (uint64_t)&type metadata for DebugInspectionAggregate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BB10E69C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA90);
  }
  return result;
}

unint64_t sub_1BB4E5F30()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2C5940;
  if (!qword_1EF2C5940)
  {
    sub_1BA4AD288(255, &qword_1EF2C5920, (uint64_t)&type metadata for DebugInspectionTagMetadata, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BB4E5FA8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C5940);
  }
  return result;
}

unint64_t sub_1BB4E5FA8()
{
  unint64_t result;

  result = qword_1EF2C5948;
  if (!qword_1EF2C5948)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D377C, &type metadata for DebugInspectionTagMetadata);
    atomic_store(result, (unint64_t *)&qword_1EF2C5948);
  }
  return result;
}

unint64_t sub_1BB4E5FEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2BBA80;
  if (!qword_1EF2BBA80)
  {
    sub_1BA4AD288(255, &qword_1EF2BBA40, (uint64_t)&type metadata for DebugInspectionTag, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BB10E5DC();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA80);
  }
  return result;
}

unint64_t sub_1BB4E6064()
{
  unint64_t result;

  result = qword_1EF2C5958;
  if (!qword_1EF2C5958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F39C, &type metadata for DebugInspectionHeadline.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5958);
  }
  return result;
}

uint64_t sub_1BB4E60A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugInspectionArticleData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BB4E60EC()
{
  unint64_t result;

  result = qword_1EF2C5968;
  if (!qword_1EF2C5968)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F374, &type metadata for DebugInspectionContextData);
    atomic_store(result, (unint64_t *)&qword_1EF2C5968);
  }
  return result;
}

uint64_t sub_1BB4E6130(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = *(_QWORD *)(a1 + 64);
  v26 = *(_QWORD *)(a1 + 56);
  v23 = *(_QWORD *)(a1 + 80);
  v24 = *(_QWORD *)(a1 + 72);
  v21 = *(_QWORD *)(a1 + 96);
  v22 = *(_QWORD *)(a1 + 88);
  v19 = *(_QWORD *)(a1 + 112);
  v20 = *(_QWORD *)(a1 + 104);
  v17 = *(_OWORD *)(a1 + 136);
  v18 = *(_OWORD *)(a1 + 120);
  v15 = *(_OWORD *)(a1 + 168);
  v16 = *(_OWORD *)(a1 + 152);
  v13 = *(_OWORD *)(a1 + 200);
  v14 = *(_OWORD *)(a1 + 184);
  v11 = *(_OWORD *)(a1 + 232);
  v12 = *(_OWORD *)(a1 + 216);
  v9 = *(_OWORD *)(a1 + 264);
  v10 = *(_OWORD *)(a1 + 248);
  v7 = *(_OWORD *)(a1 + 296);
  v8 = *(_OWORD *)(a1 + 280);
  v5 = *(_OWORD *)(a1 + 328);
  v6 = *(_OWORD *)(a1 + 312);
  v3 = *(_OWORD *)(a1 + 360);
  v4 = *(_OWORD *)(a1 + 344);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB10DED8(v26, v25, v24, v23, v22, v21, v20, v19, v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1BB4E635C()
{
  unint64_t result;

  result = qword_1EF2C5970;
  if (!qword_1EF2C5970)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F34C, &type metadata for DebugInspectionUserData);
    atomic_store(result, (unint64_t *)&qword_1EF2C5970);
  }
  return result;
}

unint64_t sub_1BB4E63A0()
{
  unint64_t result;

  result = qword_1EF2C5988;
  if (!qword_1EF2C5988)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F324, &type metadata for DebugInspectionContextData);
    atomic_store(result, (unint64_t *)&qword_1EF2C5988);
  }
  return result;
}

unint64_t sub_1BB4E63E4()
{
  unint64_t result;

  result = qword_1EF2C5990;
  if (!qword_1EF2C5990)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F2FC, &type metadata for DebugInspectionUserData);
    atomic_store(result, (unint64_t *)&qword_1EF2C5990);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugInspectionHeadline.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB4E6474 + 4 * byte_1BB91EF70[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB4E64A8 + 4 * byte_1BB91EF6B[v4]))();
}

uint64_t sub_1BB4E64A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4E64B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4E64B8);
  return result;
}

uint64_t sub_1BB4E64C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4E64CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB4E64D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4E64D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionHeadline.CodingKeys()
{
  return &type metadata for DebugInspectionHeadline.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DebugInspectionArticleData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 28 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 28) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE3)
    return ((uint64_t (*)(void))((char *)&loc_1BB4E6540 + 4 * byte_1BB91EF7A[v4]))();
  *a1 = a2 + 28;
  return ((uint64_t (*)(void))((char *)sub_1BB4E6574 + 4 * byte_1BB91EF75[v4]))();
}

uint64_t sub_1BB4E6574(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4E657C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4E6584);
  return result;
}

uint64_t sub_1BB4E6590(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4E6598);
  *(_BYTE *)result = a2 + 28;
  return result;
}

uint64_t sub_1BB4E659C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4E65A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionArticleData.CodingKeys()
{
  return &type metadata for DebugInspectionArticleData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DebugInspectionUserData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB4E660C + 4 * byte_1BB91EF84[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1BB4E6640 + 4 * byte_1BB91EF7F[v4]))();
}

uint64_t sub_1BB4E6640(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BB4E6648(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BB4E6650);
  return result;
}

uint64_t sub_1BB4E665C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BB4E6664);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB4E6668(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BB4E6670(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionUserData()
{
  return &type metadata for DebugInspectionUserData;
}

uint64_t destroy for DebugInspectionContextData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 360))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugInspectionContextData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    v7 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v7;
    v8 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v8;
    v9 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v9;
    v10 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v10;
    v11 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v11;
    v12 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v12;
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    v13 = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 360) = v13;
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    v14 = *(_OWORD *)(a2 + 392);
    v15 = *(_OWORD *)(a2 + 408);
    v16 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v16;
    *(_OWORD *)(a1 + 392) = v14;
    *(_OWORD *)(a1 + 408) = v15;
    v17 = *(_QWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
    *(_QWORD *)(a1 + 464) = v17;
    *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 56), (const void *)(a2 + 56), 0x1B8uLL);
  }
  v18 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v18;
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectionContextData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 360);
  if (!*(_QWORD *)(a1 + 360))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      v5 = *(_OWORD *)(a2 + 392);
      v6 = *(_OWORD *)(a2 + 408);
      v7 = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
      *(_OWORD *)(a1 + 440) = v7;
      *(_OWORD *)(a1 + 392) = v5;
      *(_OWORD *)(a1 + 408) = v6;
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
      *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
      *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy((void *)(a1 + 56), (const void *)(a2 + 56), 0x1B8uLL);
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_1BAFD6454(a1 + 56);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
LABEL_8:
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy576_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x240uLL);
}

uint64_t assignWithTake for DebugInspectionContextData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 360))
    goto LABEL_5;
  if (!*(_QWORD *)(a2 + 360))
  {
    sub_1BAFD6454(a1 + 56);
LABEL_5:
    memcpy((void *)(a1 + 56), (const void *)(a2 + 56), 0x1B8uLL);
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v5;
  v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v6;
  v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v7;
  v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v8;
  v9 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v9;
  v10 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v10;
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  v11 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
LABEL_6:
  v12 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionContextData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 576))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectionContextData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 568) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 576) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 576) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionContextData()
{
  return &type metadata for DebugInspectionContextData;
}

unint64_t sub_1BB4E7164()
{
  unint64_t result;

  result = qword_1EF2C5998;
  if (!qword_1EF2C5998)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F21C, &type metadata for DebugInspectionArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5998);
  }
  return result;
}

unint64_t sub_1BB4E71AC()
{
  unint64_t result;

  result = qword_1EF2C59A0;
  if (!qword_1EF2C59A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F2D4, &type metadata for DebugInspectionHeadline.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C59A0);
  }
  return result;
}

unint64_t sub_1BB4E71F4()
{
  unint64_t result;

  result = qword_1EF2C59A8;
  if (!qword_1EF2C59A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F244, &type metadata for DebugInspectionHeadline.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C59A8);
  }
  return result;
}

unint64_t sub_1BB4E723C()
{
  unint64_t result;

  result = qword_1EF2C59B0;
  if (!qword_1EF2C59B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F26C, &type metadata for DebugInspectionHeadline.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C59B0);
  }
  return result;
}

unint64_t sub_1BB4E7284()
{
  unint64_t result;

  result = qword_1EF2C59B8;
  if (!qword_1EF2C59B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F18C, &type metadata for DebugInspectionArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C59B8);
  }
  return result;
}

unint64_t sub_1BB4E72CC()
{
  unint64_t result;

  result = qword_1EF2C59C0;
  if (!qword_1EF2C59C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F1B4, &type metadata for DebugInspectionArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C59C0);
  }
  return result;
}

uint64_t sub_1BB4E7310(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char v10;
  int v11;
  uint64_t v12;
  char v13;
  char v14;

  sub_1BA4CDF6C(0, &qword_1EF2C59F0, (uint64_t (*)(void))sub_1BB4E9174, (uint64_t)&type metadata for DebugInspectionUserData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB4E9174();
  sub_1BB87468C();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = 0;
  v8 = sub_1BB8740A4();
  v13 = 1;
  v10 = sub_1BB8740A4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  if ((v10 & 1) != 0)
    v11 = 256;
  else
    v11 = 0;
  return v11 & 0xFFFFFFFE | v8 & 1;
}

void *sub_1BB4E7484@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD v45[72];
  _QWORD v46[72];
  _BYTE v47[440];
  uint64_t v48;
  _QWORD v49[73];
  int v50;
  char v51;
  char v52;

  sub_1BA4CDF6C(0, &qword_1EF2C59C8, (uint64_t (*)(void))sub_1BB4E8E44, (uint64_t)&type metadata for DebugInspectionContextData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v43 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - v7;
  v9 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BB4E8E44();
  sub_1BB87468C();
  if (v2)
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v10 = v6;
  v42 = a2;
  LOBYTE(v46[0]) = 0;
  v11 = sub_1BB8740A4();
  v12 = v11 & 1;
  LOBYTE(v49[0]) = v11 & 1;
  sub_1BA4AD288(0, &qword_1EF2C59D8, (uint64_t)&type metadata for DebugInspectionCohort, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v45[0]) = 1;
  v13 = sub_1BB4E8E88();
  sub_1BB8740D4();
  v40 = v13;
  v41 = v6;
  v50 = v12;
  v14 = v46[0];
  v49[1] = v46[0];
  sub_1BA4AD288(0, &qword_1EF2BBA58, (uint64_t)&type metadata for DebugInspectionAggregate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v45[0]) = 2;
  sub_1BB4E5D0C();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v39 = v14;
  v15 = v46[0];
  v49[2] = v46[0];
  LOBYTE(v46[0]) = 3;
  swift_bridgeObjectRetain();
  v16 = sub_1BB874098();
  v49[3] = v16;
  v49[4] = v17;
  LOBYTE(v45[0]) = 4;
  v38 = v17;
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v37 = v15;
  v18 = v46[0];
  v49[5] = v46[0];
  LOBYTE(v46[0]) = 5;
  swift_bridgeObjectRetain();
  v19 = sub_1BB8740A4();
  v36 = v18;
  LODWORD(v18) = v19 & 1;
  LOBYTE(v49[6]) = v19 & 1;
  v52 = 6;
  sub_1BB10DF10();
  sub_1BB874068();
  v35 = v18;
  sub_1BB04F360((uint64_t)&v48, (uint64_t)v47, (uint64_t)&qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  sub_1BB04F360((uint64_t)v47, (uint64_t)&v49[7], (uint64_t)&qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  LOBYTE(v46[0]) = 7;
  sub_1BB10DF54((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB10E000);
  v33 = sub_1BB874098();
  v34 = v20;
  v49[62] = v33;
  v49[63] = v20;
  LOBYTE(v46[0]) = 8;
  swift_bridgeObjectRetain();
  v21 = sub_1BB874098();
  v22 = v34;
  v41 = v16;
  v32 = v21;
  v49[64] = v21;
  v49[65] = v23;
  LOBYTE(v46[0]) = 9;
  v24 = v23;
  swift_bridgeObjectRetain();
  v25 = sub_1BB8740A4() & 1;
  LOBYTE(v49[66]) = v25;
  LOBYTE(v45[0]) = 10;
  sub_1BB8740D4();
  v49[67] = v46[0];
  LOBYTE(v45[0]) = 11;
  v31 = v46[0];
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v49[68] = v46[0];
  LOBYTE(v45[0]) = 12;
  v30 = v46[0];
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v49[69] = v46[0];
  v51 = 13;
  v40 = v46[0];
  swift_bridgeObjectRetain();
  v26 = sub_1BB87402C();
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v43);
  v49[70] = v26;
  v49[71] = v28;
  LOBYTE(v45[0]) = v50;
  v45[1] = v39;
  v45[2] = v37;
  v45[3] = v41;
  v45[4] = v38;
  v45[5] = v36;
  LOBYTE(v45[6]) = v35;
  sub_1BB04F360((uint64_t)v47, (uint64_t)&v45[7], (uint64_t)&qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  v45[62] = v33;
  v45[63] = v22;
  v45[64] = v32;
  v45[65] = v24;
  LOBYTE(v45[66]) = v25;
  v45[67] = v31;
  v45[68] = v30;
  v45[69] = v40;
  v45[70] = v26;
  v45[71] = v28;
  sub_1BB4E8F44((uint64_t)v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB10DF54((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB10DED8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  memcpy(v46, v49, sizeof(v46));
  sub_1BB4E6130((uint64_t)v46);
  return memcpy(v42, v45, 0x240uLL);
}

uint64_t sub_1BB4E7F58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44747865746E6F63 && a2 == 0xEB00000000617461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614472657375 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BB4E80D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61466F7475417369 && a2 == 0xEF64657469726F76;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BB4E8204(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D75636F44666E61 && a2 == 0xEE0079654B746E65;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x43656C6369747261 && a2 == 0xEE007374726F686FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C656C6369747261 && a2 == 0xED00006874676E65 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972657473756C63 && a2 == 0xE900000000000044 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB98EF60 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446863746566 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB98EF80 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6566694C666C6168 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB98EFA0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6F69647541736168 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6F65646956736168 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x656E654749417369 && a2 == 0xED00006465746172 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x726143614C416E69 && a2 == 0xEA00000000006574 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x656C646E75426E69 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x464E417369 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x7267726576457369 && a2 == 0xEB000000006E6565 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x646165726F437369 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x7275746165467369 && a2 == 0xEA00000000006465 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x646961507369 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x4165757373497369 && a2 == 0xEE00656C63697472 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BB98EFC0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x656873696C627570 && a2 == 0xE900000000000072 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB98EFE0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x646174654D676174 && a2 == 0xEB00000000617461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x626D45656C746974 && a2 == 0xEE00676E69646465 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x736369706F74 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 28;
    else
      return 29;
  }
}

unint64_t sub_1BB4E8E44()
{
  unint64_t result;

  result = qword_1EF2C59D0;
  if (!qword_1EF2C59D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F5FC, &type metadata for DebugInspectionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C59D0);
  }
  return result;
}

unint64_t sub_1BB4E8E88()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2C59E0;
  if (!qword_1EF2C59E0)
  {
    sub_1BA4AD288(255, &qword_1EF2C59D8, (uint64_t)&type metadata for DebugInspectionCohort, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BB4E8F00();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C59E0);
  }
  return result;
}

unint64_t sub_1BB4E8F00()
{
  unint64_t result;

  result = qword_1EF2C59E8;
  if (!qword_1EF2C59E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93FF90, &type metadata for DebugInspectionCohort);
    atomic_store(result, (unint64_t *)&qword_1EF2C59E8);
  }
  return result;
}

uint64_t sub_1BB4E8F44(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = *(_QWORD *)(a1 + 64);
  v26 = *(_QWORD *)(a1 + 56);
  v23 = *(_QWORD *)(a1 + 80);
  v24 = *(_QWORD *)(a1 + 72);
  v21 = *(_QWORD *)(a1 + 96);
  v22 = *(_QWORD *)(a1 + 88);
  v19 = *(_QWORD *)(a1 + 112);
  v20 = *(_QWORD *)(a1 + 104);
  v17 = *(_OWORD *)(a1 + 136);
  v18 = *(_OWORD *)(a1 + 120);
  v15 = *(_OWORD *)(a1 + 168);
  v16 = *(_OWORD *)(a1 + 152);
  v13 = *(_OWORD *)(a1 + 200);
  v14 = *(_OWORD *)(a1 + 184);
  v11 = *(_OWORD *)(a1 + 232);
  v12 = *(_OWORD *)(a1 + 216);
  v9 = *(_OWORD *)(a1 + 264);
  v10 = *(_OWORD *)(a1 + 248);
  v7 = *(_OWORD *)(a1 + 296);
  v8 = *(_OWORD *)(a1 + 280);
  v5 = *(_OWORD *)(a1 + 328);
  v6 = *(_OWORD *)(a1 + 312);
  v3 = *(_OWORD *)(a1 + 360);
  v4 = *(_OWORD *)(a1 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB10E000(v26, v25, v24, v23, v22, v21, v20, v19, v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1BB4E9174()
{
  unint64_t result;

  result = qword_1EF2C59F8;
  if (!qword_1EF2C59F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F5AC, &type metadata for DebugInspectionUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C59F8);
  }
  return result;
}

unint64_t sub_1BB4E91B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2C5A08;
  if (!qword_1EF2C5A08)
  {
    sub_1BA4AD288(255, &qword_1EF2C59D8, (uint64_t)&type metadata for DebugInspectionCohort, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BB4E9230();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C5A08);
  }
  return result;
}

unint64_t sub_1BB4E9230()
{
  unint64_t result;

  result = qword_1EF2C5A10;
  if (!qword_1EF2C5A10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93FF68, &type metadata for DebugInspectionCohort);
    atomic_store(result, (unint64_t *)&qword_1EF2C5A10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugInspectionUserData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB4E92C0 + 4 * byte_1BB91EF8E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB4E92F4 + 4 * byte_1BB91EF89[v4]))();
}

uint64_t sub_1BB4E92F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4E92FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4E9304);
  return result;
}

uint64_t sub_1BB4E9310(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4E9318);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB4E931C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4E9324(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionUserData.CodingKeys()
{
  return &type metadata for DebugInspectionUserData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DebugInspectionContextData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1BB4E938C + 4 * byte_1BB91EF98[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1BB4E93C0 + 4 * byte_1BB91EF93[v4]))();
}

uint64_t sub_1BB4E93C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4E93C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4E93D0);
  return result;
}

uint64_t sub_1BB4E93DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4E93E4);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1BB4E93E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4E93F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionContextData.CodingKeys()
{
  return &type metadata for DebugInspectionContextData.CodingKeys;
}

unint64_t sub_1BB4E9410()
{
  unint64_t result;

  result = qword_1EF2C5A20;
  if (!qword_1EF2C5A20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F4CC, &type metadata for DebugInspectionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5A20);
  }
  return result;
}

unint64_t sub_1BB4E9458()
{
  unint64_t result;

  result = qword_1EF2C5A28;
  if (!qword_1EF2C5A28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F584, &type metadata for DebugInspectionUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5A28);
  }
  return result;
}

unint64_t sub_1BB4E94A0()
{
  unint64_t result;

  result = qword_1EF2C5A30;
  if (!qword_1EF2C5A30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F4F4, &type metadata for DebugInspectionUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5A30);
  }
  return result;
}

unint64_t sub_1BB4E94E8()
{
  unint64_t result;

  result = qword_1EF2C5A38;
  if (!qword_1EF2C5A38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F51C, &type metadata for DebugInspectionUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5A38);
  }
  return result;
}

unint64_t sub_1BB4E9530()
{
  unint64_t result;

  result = qword_1EF2C5A40;
  if (!qword_1EF2C5A40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F43C, &type metadata for DebugInspectionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5A40);
  }
  return result;
}

unint64_t sub_1BB4E9578()
{
  unint64_t result;

  result = qword_1EF2C5A48;
  if (!qword_1EF2C5A48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91F464, &type metadata for DebugInspectionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5A48);
  }
  return result;
}

uint64_t sub_1BB4E95BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6269737365636361 && a2 == 0xEA0000000000656CLL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB98F000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E6970756F7267 && a2 == 0xEE006E6F73616552 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB98F020 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1684104562 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F725065726F6373 && a2 == 0xEC000000656C6966 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x54676E69726F6373 && a2 == 0xEB00000000657079 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x43676E69726F6373 && a2 == 0xEE00747865746E6FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1852138867 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6F686F4372657375 && a2 == 0xEB00000000737472 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6867696557676174 && a2 == 0xEA00000000007374 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x5765727574616566 && a2 == 0xEE00737468676965 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB98F040)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

id sub_1BB4E9BE4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, sel_contentSize);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1BB4E9C14(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContentSize_, *a1, a1[1]);
}

void sub_1BB4E9CE4()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  objc_super v22;

  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  v4 = objc_msgSend(v0, sel_navigationItem);
  v5 = (void *)sub_1BB872970();
  objc_msgSend(v4, sel_setTitle_, v5);

  v6 = objc_msgSend(v0, sel_navigationItem);
  sub_1BA65FBAC(0, (unint64_t *)&qword_1ED3BA020);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB8856E0;
  v8 = (void *)sub_1BB872970();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v8);

  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v10 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v11 = v0;
  v12 = objc_msgSend(v10, sel_initWithImage_style_target_action_, v9, 0, v11, sel_doDismiss);

  *(_QWORD *)(v7 + 32) = v12;
  sub_1BB872DCC();
  sub_1BAAC19FC();
  v13 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setRightBarButtonItems_, v13);

  v14 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_tableView];
  objc_msgSend(v14, sel_setDataSource_, v11);
  objc_msgSend(v14, sel_setDelegate_, v11);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v14, sel_setTableFooterView_, v15);

  type metadata accessor for DebugFormatContentSizeCategoryCell();
  sub_1BB873234();
  type metadata accessor for DebugFormatSwitchCell();
  sub_1BB873234();
  v16 = objc_msgSend(v11, sel_view);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, sel_addSubview_, v14);

    v21 = v14;
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    v18 = v14;
    v19 = sub_1BB86C4C0();
    swift_release();
    swift_release();

    v20 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_contentSizeObserver];
    *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_contentSizeObserver] = v19;

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1BB4EA0A8(void **a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;

  v3 = *a1;
  v4 = a3 + 16;
  swift_beginAccess();
  v5 = (void *)MEMORY[0x1BCCE5D40](v4);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v3, sel_contentSize);
    objc_msgSend(v6, sel_setPreferredContentSize_, 320.0);

    v7 = objc_msgSend(v6, sel_view);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_setNeedsLayout);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for DebugFormatAccessibilityViewController()
{
  return objc_opt_self();
}

unint64_t sub_1BB4EA36C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;
  uint64_t v3;
  int v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t (**v14)(uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  void *v18;
  void *v19;
  unsigned int v20;
  double v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unsigned __int8 v31;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_sections);
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (result >= *(_QWORD *)(v1 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v3 = *(_QWORD *)(v1 + 24 * result + 48);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (result >= *(_QWORD *)(v3 + 16))
  {
LABEL_22:
    __break(1u);
    return result;
  }
  v4 = *(unsigned __int8 *)(v3 + result + 32);
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (v4 == 1)
    {
      type metadata accessor for DebugFormatSwitchCell();
      v5 = (char *)sub_1BB87321C();
      objc_msgSend(v5, sel_setSelectionStyle_, 0);
      v6 = objc_msgSend(v5, sel_textLabel);
      if (v6)
      {
        v7 = v6;
        v8 = (void *)sub_1BB872970();
        objc_msgSend(v7, sel_setText_, v8);

      }
      v9 = objc_msgSend(v5, sel_textLabel);
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
        objc_msgSend(v10, sel_setFont_, v11);

      }
      v12 = *(id *)&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_switchControl];
      swift_retain();
      sub_1BB86D2B8();
      swift_release();
      objc_msgSend(v12, sel_setOn_, v30);

      v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v14 = (uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_onChangeBlock];
      v15 = *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_onChangeBlock];
      v16 = sub_1BB4EAAFC;
    }
    else
    {
      type metadata accessor for DebugFormatSwitchCell();
      v5 = (char *)sub_1BB87321C();
      objc_msgSend(v5, sel_setSelectionStyle_, 0);
      v22 = objc_msgSend(v5, sel_textLabel);
      if (v22)
      {
        v23 = v22;
        v24 = (void *)sub_1BB872970();
        objc_msgSend(v23, sel_setText_, v24);

      }
      v25 = objc_msgSend(v5, sel_textLabel);
      if (v25)
      {
        v26 = v25;
        v27 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
        objc_msgSend(v26, sel_setFont_, v27);

      }
      v28 = *(id *)&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_switchControl];
      swift_retain();
      sub_1BB86D2B8();
      swift_release();
      objc_msgSend(v28, sel_setOn_, v31);

      v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v14 = (uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_onChangeBlock];
      v15 = *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_onChangeBlock];
      v16 = sub_1BB4EAADC;
    }
  }
  else
  {
    type metadata accessor for DebugFormatContentSizeCategoryCell();
    v5 = (char *)sub_1BB87321C();
    objc_msgSend(v5, sel_setSelectionStyle_, 0);
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    v17 = OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_contentSizeCategory;
    v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_contentSizeCategory] = v29;
    v18 = *(void **)&v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_label];
    sub_1BA901D7C(v29);
    v19 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_setText_, v19);

    LOBYTE(v20) = v5[v17];
    *(float *)&v21 = (float)v20;
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_slider], sel_setValue_, v21);
    v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v14 = (uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_onChangeBlock];
    v15 = *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_onChangeBlock];
    v16 = sub_1BB4EAB1C;
  }
  *v14 = v16;
  v14[1] = (uint64_t (*)(uint64_t))v13;
  sub_1BA49EBE0(v15);
  return (unint64_t)v5;
}

uint64_t sub_1BB4EA858(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();

    swift_retain();
    sub_1BB86D2C4();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB4EA8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();

    swift_retain();
    sub_1BB86D2C4();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB4EAAB8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB4EAADC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB4EA8F4(a1, v1);
}

uint64_t sub_1BB4EAAFC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB4EA8F4(a1, v1);
}

uint64_t sub_1BB4EAB1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB4EA858(a1, v1);
}

id sub_1BB4EAB24@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, sel_contentSize);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1BB4EAB54(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContentSize_, *a1, a1[1]);
}

void sub_1BB4EAB68(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BB4EA0A8(a1, a2, v2);
}

id sub_1BB4EAB70(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  objc_super v10;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_tableView;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_editor] = a1;
  sub_1BA65FBAC(0, &qword_1EF2C5A98);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v8 + 32) = 0x7A69532074786554;
  *(_QWORD *)(v8 + 40) = 0xE900000000000065;
  *(_QWORD *)(v8 + 48) = &unk_1E7270868;
  *(_QWORD *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 64) = 0xE000000000000000;
  *(_QWORD *)(v8 + 72) = &unk_1E7270890;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatAccessibilityViewController_sections] = v8;
  swift_retain();

  v10.receiver = v7;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t FormatTextNodeStyle.style(text:context:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v9;
  uint64_t v10;
  _OWORD v12[8];

  v5 = v3;
  swift_retain();
  swift_retain();
  v9 = sub_1BA742048(v5, a3);
  if (v4)
  {
    swift_release();
    swift_release();
  }
  else
  {
    sub_1BA743168(v9, v5, (uint64_t)a3, 18, v12);
    type metadata accessor for FormatAttributedString();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1BA741FD8((uint64_t)v12);
    sub_1BA741BFC(a1, a2, (uint64_t)v12);
    sub_1BA741B54((uint64_t)v12);
    sub_1BA714CBC((uint64_t)a3);
    a2 = v10;
    swift_release();
    sub_1BA741B54((uint64_t)v12);
  }
  return a2;
}

uint64_t FormatTextNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB4EAE5C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[2];
  uint64_t v41[2];
  uint64_t v42;
  _QWORD v43[25];
  __int128 v44[2];
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char v49;
  __int128 v50[12];
  __int128 v51[8];
  uint64_t v52;
  _BYTE v53[128];
  _BYTE v54[128];
  __int128 v55[8];

  v1 = v0;
  swift_beginAccess();
  v2 = v0[3];
  v3 = v0[5];
  v37 = v0[4];
  v38 = v0[2];
  swift_beginAccess();
  v5 = v0[6];
  v4 = v0[7];
  if ((~v4 & 0xF000000000000007) != 0)
  {
    if (v4 < 0)
    {
      v6 = *(_QWORD *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v7 = *(_QWORD *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      v8 = *(_QWORD *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      v9 = *(_BYTE *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = v6;
      *(_QWORD *)(v10 + 24) = v7;
      *(_QWORD *)(v10 + 32) = v8;
      *(_BYTE *)(v10 + 40) = v9;
      v4 = v10 | 0x6000000000000000;
      sub_1BA745F88(v6, v7, v8, v9);
    }
    else
    {
      swift_retain();
    }
  }
  v52 = v4;
  sub_1BA744E38((uint64_t)(v1 + 8), (uint64_t)v54, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA744E38((uint64_t)v54, (uint64_t)v55, (unint64_t *)&qword_1ED3B30E8);
  if (sub_1BAB05F98((uint64_t)v55) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = v54;
  }
  else
  {
    sub_1BA7439D4(v55, (uint64_t)v43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB21AA00();
    sub_1BA7439D4(v50, (uint64_t)v51);
    sub_1BA7439D4(v51, (uint64_t)v43);
    nullsub_1();
    v11 = v43;
  }
  sub_1BA744E38((uint64_t)v11, (uint64_t)v53, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA744E38((uint64_t)v53, (uint64_t)v51, (unint64_t *)&qword_1ED3B30E8);
  v12 = v1[24];
  v36 = v5;
  if (v12)
    v13 = sub_1BAF49D98(v12);
  else
    v13 = 0;
  v14 = v1[25];
  v15 = v1[26];
  v16 = *(_OWORD *)(v1 + 27);
  v17 = v1[29];
  v18 = *((_OWORD *)v1 + 15);
  v19 = *((_OWORD *)v1 + 16);
  v20 = v1[34];
  v21 = *((unsigned __int8 *)v1 + 280);
  if (v21 != 254)
  {
    v43[0] = v1[29];
    v34 = v18;
    v35 = v16;
    v33 = v19;
    sub_1BB525134();
    v19 = v33;
    v18 = v34;
    v16 = v35;
    v17 = *(_QWORD *)&v50[0];
    v15 = v15;
  }
  *(_QWORD *)&v44[0] = v14;
  *((_QWORD *)&v44[0] + 1) = v15;
  v44[1] = v16;
  v46 = v18;
  v47 = v19;
  v45 = v17;
  v48 = v20;
  v49 = v21;
  v22 = v1[36];
  sub_1BA744E38((uint64_t)(v1 + 37), (uint64_t)v50, (unint64_t *)&qword_1ED3B6270);
  sub_1BA744E38((uint64_t)v50, (uint64_t)v43, (unint64_t *)&qword_1ED3B6270);
  v23 = v1[62];
  v24 = *((_BYTE *)v1 + 504);
  v42 = v1[64];
  v25 = v1[65];
  v26 = v1[66];
  if (v25 == 9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    if ((~v26 & 0xF000000000000007) != 0)
    {
      v40[0] = v1[66];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB525134();
      v26 = v41[0];
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA6E8A90(v25, v26);
    }
    v25 = v25;
  }
  v41[0] = v25;
  v41[1] = v26;
  v27 = v1[67];
  v28 = v1[68];
  v29 = v27;
  if (v27 != 9)
  {
    if ((~v28 & 0xF000000000000007) != 0)
    {
      v39 = v1[68];
      sub_1BB525134();
      v28 = v40[0];
    }
    else
    {
      sub_1BA6E8A90(v27, v1[68]);
    }
    v27 = v29;
  }
  v40[0] = v27;
  v40[1] = v28;
  v30 = *((_BYTE *)v1 + 552);
  v39 = v1[70];
  v31 = swift_allocObject();
  FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(v38, v2, v37, v3, v36, &v52, (uint64_t)v51, v13, v44, v22, (uint64_t)v43, v23, v24, &v42, v41, v40, v30, &v39);
  swift_bridgeObjectRetain();
  return v31;
}

uint64_t FormatTextNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTextNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatTextNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTextNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatTextNodeStyle.font.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

_QWORD *FormatTextNodeStyle.fill.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[16];

  sub_1BA744E38(v1 + 64, (uint64_t)v4, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA744E38((uint64_t)v4, a1, (unint64_t *)&qword_1ED3B30E8);
  return sub_1BA6A0C50(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
}

uint64_t FormatTextNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 200);
  v3 = *(_QWORD *)(v1 + 208);
  v4 = *(_QWORD *)(v1 + 216);
  v5 = *(_QWORD *)(v1 + 224);
  v6 = *(_QWORD *)(v1 + 232);
  v7 = *(_QWORD *)(v1 + 240);
  v8 = *(_QWORD *)(v1 + 248);
  v9 = *(_QWORD *)(v1 + 256);
  v10 = *(_QWORD *)(v1 + 264);
  v11 = *(_QWORD *)(v1 + 272);
  v12 = *(_BYTE *)(v1 + 280);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatTextNodeStyle.transforms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.paragraphStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[200];

  sub_1BA744E38(v1 + 296, (uint64_t)v4, (unint64_t *)&qword_1ED3B6270);
  return sub_1BA744E38((uint64_t)v4, a1, (unint64_t *)&qword_1ED3B6270);
}

uint64_t FormatTextNodeStyle.tracking.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 496);
}

uint64_t FormatTextNodeStyle.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 512);
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.strikethrough.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 520);
  v3 = *(_QWORD *)(v1 + 528);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA6E8A60(v2, v3);
}

uint64_t FormatTextNodeStyle.underline.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 536);
  v3 = *(_QWORD *)(v1 + 544);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA6E8A60(v2, v3);
}

uint64_t FormatTextNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 552);
}

uint64_t FormatTextNodeStyle.baselineOffset.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 560);
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.__allocating_init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, __int128 *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t *a14, uint64_t *a15, uint64_t *a16, char a17, uint64_t *a18)
{
  uint64_t v21;

  v21 = swift_allocObject();
  FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1, a14, a15, a16, a17, a18);
  return v21;
}

uint64_t FormatTextNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.Selector.font.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

_QWORD *FormatTextNodeStyle.Selector.fill.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[16];

  sub_1BA744E38(v1 + 24, (uint64_t)v4, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA744E38((uint64_t)v4, a1, (unint64_t *)&qword_1ED3B30E8);
  return sub_1BA6A0C50(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
}

uint64_t FormatTextNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 160);
  v3 = *(_QWORD *)(v1 + 168);
  v4 = *(_QWORD *)(v1 + 176);
  v5 = *(_QWORD *)(v1 + 184);
  v6 = *(_QWORD *)(v1 + 192);
  v7 = *(_QWORD *)(v1 + 200);
  v8 = *(_QWORD *)(v1 + 208);
  v9 = *(_QWORD *)(v1 + 216);
  v10 = *(_QWORD *)(v1 + 224);
  v11 = *(_QWORD *)(v1 + 232);
  v12 = *(_BYTE *)(v1 + 240);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatTextNodeStyle.Selector.transforms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.Selector.paragraphStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[200];

  sub_1BA744E38(v1 + 256, (uint64_t)v4, (unint64_t *)&qword_1ED3B6270);
  return sub_1BA744E38((uint64_t)v4, a1, (unint64_t *)&qword_1ED3B6270);
}

uint64_t FormatTextNodeStyle.Selector.tracking.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 456);
}

uint64_t FormatTextNodeStyle.Selector.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 472);
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.Selector.strikethrough.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 480);
  v3 = *(_QWORD *)(v1 + 488);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA6E8A60(v2, v3);
}

uint64_t FormatTextNodeStyle.Selector.underline.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 496);
  v3 = *(_QWORD *)(v1 + 504);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA6E8A60(v2, v3);
}

uint64_t FormatTextNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 512);
}

uint64_t FormatTextNodeStyle.Selector.baselineOffset.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 520);
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeStyle.formattedStyle(text:context:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v9;
  uint64_t v10;
  _OWORD v12[8];

  v5 = v3;
  swift_retain();
  swift_retain();
  v9 = sub_1BA742048(v5, a3);
  if (v4)
  {
    swift_release();
    swift_release();
  }
  else
  {
    sub_1BA743168(v9, v5, (uint64_t)a3, 18, v12);
    type metadata accessor for FormatAttributedString();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1BA741FD8((uint64_t)v12);
    sub_1BB342B80(a1, a2, v12);
    sub_1BA714CBC((uint64_t)a3);
    a2 = v10;
    swift_release();
    sub_1BA741B54((uint64_t)v12);
  }
  return a2;
}

void sub_1BB4EB8D0(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  _QWORD aBlock[3];
  void *v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  double v24;

  v24 = -99999.0;
  v13 = *MEMORY[0x1E0DC1138];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = &v24;
  *(_QWORD *)(v14 + 24) = a6;
  *(double *)(v14 + 32) = a4;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1BB4EEBEC;
  *(_QWORD *)(v15 + 24) = v14;
  v22 = sub_1BB4EEC08;
  v23 = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA5D1C30;
  v21 = &block_descriptor_33_2;
  v16 = _Block_copy(aBlock);
  v17 = a6;
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_enumerateAttribute_inRange_options_usingBlock_, v13, a2, a3, 0x100000, v16);
  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v13 & 1) != 0)
  {
    __break(1u);
  }
  else if (v24 <= -99999.0)
  {
    swift_release();
  }
  else
  {
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
    sub_1BA4D78C8(a1, (uint64_t)aBlock);
    if (v21)
    {
      sub_1BA49A224(0, &qword_1EF2C5AC0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        objc_msgSend(v18, sel_setParagraphStyle_, v19);

      }
    }
    else
    {
      sub_1BA6EDA74((uint64_t)aBlock);
    }
    objc_msgSend(v18, sel_setLineSpacing_, v24);
    objc_msgSend(a7, sel_addAttribute_value_range_, *MEMORY[0x1E0DC1178], v18, a2, a3);
    swift_release();

  }
}

void sub_1BB4EBB50(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, double *a6, void *a7)
{
  double v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  _BYTE v19[24];
  uint64_t v20;

  sub_1BA4D78C8(a1, (uint64_t)v19);
  if (v20)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v12 = *a6;
      v13 = objc_msgSend(a7, sel_attributedSubstringFromRange_, a2, a3);
      v14 = objc_msgSend(v13, sel_string);

      if (!v14)
      {
        sub_1BB8729A0();
        v14 = (id)sub_1BB872970();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v18, sel_ts_tightenedLineSpacingForString_minimumLineSpacingMultiple_, v14, a4);
      v16 = v15;

      if (v12 > v16)
        v17 = v12;
      else
        v17 = v16;
      *a6 = v17;
    }
  }
  else
  {
    sub_1BA6EDA74((uint64_t)v19);
  }
}

uint64_t sub_1BB4EBC8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[16];
  __int128 v7[8];

  v1 = *v0;
  sub_1BA67D7C8(0, (unint64_t *)&qword_1ED3B9F90, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA744E38(v1 + 64, (uint64_t)v6, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA744E38((uint64_t)v6, (uint64_t)v7, (unint64_t *)&qword_1ED3B30E8);
  if (sub_1BAB05F98((uint64_t)v7) == 1)
  {
    *(_QWORD *)(inited + 64) = 0;
    *(_OWORD *)(inited + 32) = 0u;
    *(_OWORD *)(inited + 48) = 0u;
  }
  else
  {
    *(_QWORD *)(inited + 56) = &type metadata for FormatFill;
    *(_QWORD *)(inited + 64) = &protocol witness table for FormatFill;
    v3 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v3;
    sub_1BA7439D4(v7, v3 + 16);
  }
  sub_1BA6A0C50(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
  v4 = sub_1BA67DB8C(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  swift_arrayDestroy();
  return v4;
}

uint64_t sub_1BB4EBDE8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 528);
  return result;
}

uint64_t _s8NewsFeed19FormatTextNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(double *a1, double *a2)
{
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  double v12;
  int v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  BOOL v33;
  BOOL v34;
  char v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  __int128 v74[8];
  __int128 v75[12];
  __int16 v76;
  _OWORD v77[12];
  __int16 v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[5];
  char v108;
  _BYTE v109[128];
  _QWORD v110[16];
  _BYTE v111[200];
  _QWORD v112[16];
  _BYTE v113[216];

  v4 = *((_QWORD *)a1 + 1);
  v72 = *((_QWORD *)a1 + 2);
  v73 = *a1;
  sub_1BA744E38((uint64_t)(a1 + 3), (uint64_t)v110, (unint64_t *)&qword_1ED3B30E8);
  v71 = *((_QWORD *)a1 + 19);
  v65 = *((_QWORD *)a1 + 20);
  v66 = *((_QWORD *)a1 + 21);
  v67 = *((_QWORD *)a1 + 22);
  v68 = *((_QWORD *)a1 + 23);
  v69 = *((_QWORD *)a1 + 25);
  v61 = *((_QWORD *)a1 + 24);
  v62 = *((_QWORD *)a1 + 26);
  v63 = *((_QWORD *)a1 + 27);
  v64 = *((_QWORD *)a1 + 28);
  v60 = *((_QWORD *)a1 + 29);
  v70 = *((unsigned __int8 *)a1 + 240);
  v50 = *((_QWORD *)a1 + 31);
  sub_1BA744E38((uint64_t)(a1 + 32), (uint64_t)v111, (unint64_t *)&qword_1ED3B6270);
  v5 = a1[57];
  v48 = *((_BYTE *)a1 + 464);
  v46 = *((_QWORD *)a1 + 59);
  v43 = *((_QWORD *)a1 + 61);
  v44 = *((_QWORD *)a1 + 60);
  v42 = *((_QWORD *)a1 + 62);
  v39 = *((_QWORD *)a1 + 63);
  v37 = *((unsigned __int8 *)a1 + 512);
  v36 = *((_QWORD *)a1 + 65);
  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  sub_1BA744E38((uint64_t)(a2 + 3), (uint64_t)v112, (unint64_t *)&qword_1ED3B30E8);
  v10 = *((_QWORD *)a2 + 19);
  v9 = *((_QWORD *)a2 + 20);
  v53 = *((_QWORD *)a2 + 21);
  v54 = *((_QWORD *)a2 + 22);
  v55 = *((_QWORD *)a2 + 23);
  v56 = *((_QWORD *)a2 + 24);
  v57 = *((_QWORD *)a2 + 25);
  v58 = *((_QWORD *)a2 + 26);
  v59 = *((_QWORD *)a2 + 27);
  v51 = *((_QWORD *)a2 + 29);
  v52 = *((_QWORD *)a2 + 28);
  v11 = *((unsigned __int8 *)a2 + 240);
  v49 = *((_QWORD *)a2 + 31);
  sub_1BA744E38((uint64_t)(a2 + 32), (uint64_t)v113, (unint64_t *)&qword_1ED3B6270);
  v12 = a2[57];
  v13 = *((unsigned __int8 *)a2 + 464);
  v45 = *((_QWORD *)a2 + 59);
  v47 = *((_QWORD *)a2 + 60);
  v40 = *((_QWORD *)a2 + 62);
  v41 = *((_QWORD *)a2 + 61);
  v38 = *((_QWORD *)a2 + 63);
  v14 = *((unsigned __int8 *)a2 + 512);
  v15 = *((_QWORD *)a2 + 65);
  if (*(_QWORD *)&v73 == *(_QWORD *)&v6 && v4 == v7 || (v16 = sub_1BB874398(), result = 0, (v16 & 1) != 0))
  {
    if ((~v72 & 0xF000000000000007) != 0)
    {
      v91 = v72;
      if ((~v8 & 0xF000000000000007) != 0)
      {
        *(_QWORD *)&v81 = v8;
        swift_retain_n();
        static FormatFont.== infix(_:_:)((uint64_t)&v91);
        v19 = v18;
        swift_release();
        sub_1BA6E6CD8(v72);
        if ((v19 & 1) == 0)
          return 0;
LABEL_11:
        sub_1BA744E38((uint64_t)v110, (uint64_t)v109, (unint64_t *)&qword_1ED3B30E8);
        if (sub_1BAB05F98((uint64_t)v109) == 1)
        {
          sub_1BA744E38((uint64_t)v112, (uint64_t)&v91, (unint64_t *)&qword_1ED3B30E8);
          if (sub_1BAB05F98((uint64_t)&v91) == 1)
            goto LABEL_20;
        }
        else
        {
          sub_1BA744E38((uint64_t)v110, (uint64_t)&v81, (unint64_t *)&qword_1ED3B30E8);
          sub_1BA744E38((uint64_t)v112, (uint64_t)&v91, (unint64_t *)&qword_1ED3B30E8);
          if (sub_1BAB05F98((uint64_t)&v91) != 1)
          {
            sub_1BA744E38((uint64_t)v112, (uint64_t)v75, (unint64_t *)&qword_1ED3B30E8);
            sub_1BA7439D4(v75, (uint64_t)v74);
            sub_1BA744E38((uint64_t)v110, (uint64_t)v77, (unint64_t *)&qword_1ED3B30E8);
            sub_1BA6A0C50(v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
            sub_1BA6A0C50(v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
            _s8NewsFeed10FormatFillO2eeoiySbAC_ACtFZ_0(&v81, v74);
            v21 = v20;
            sub_1BA7439D4(&v81, (uint64_t)&v79);
            sub_1BA6A0C50(&v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
            sub_1BA6A0C50(v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
            if ((v21 & 1) == 0)
              return 0;
LABEL_20:
            if (v71)
            {
              if (!v10)
                return 0;
              swift_bridgeObjectRetain();
              v22 = swift_bridgeObjectRetain();
              v23 = sub_1BA882894(v22, v10);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!v23)
                return 0;
            }
            else if (v10)
            {
              return 0;
            }
            v24 = v70;
            if (v70 == 254)
            {
              v26 = v62;
              v25 = v63;
              v27 = v69;
              if (v11 == 254)
                goto LABEL_32;
            }
            else
            {
              v91 = v65;
              v92 = v66;
              v93 = v67;
              v94 = v68;
              v26 = v62;
              v95 = v61;
              v96 = v69;
              v97 = v62;
              v25 = v63;
              v98 = v63;
              v99 = v64;
              v100 = v60;
              v101 = v70;
              if (v11 != 254)
              {
                *(_QWORD *)&v81 = v9;
                DWORD2(v81) = v53;
                v82 = v54;
                v83 = v55;
                v84 = v56;
                v85 = v57;
                v86 = v58;
                v87 = v59;
                v88 = v52;
                v89 = v51;
                v90 = v11;
                sub_1BA6E8A48(v65, v66, v67, v68, v61, v69, v62, v63, v64, v60, v70);
                swift_retain();
                v28 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v91, (uint64_t)&v81);
                swift_release();
                sub_1BA6E8A78(v65, v66, v67, v68, v61, v69, v62, v63, v64, v60, v70);
                if ((v28 & 1) == 0)
                  return 0;
LABEL_32:
                if (v50)
                {
                  if (!v49 || !sub_1BA882868(v50, v49))
                    return 0;
                }
                else if (v49)
                {
                  return 0;
                }
                sub_1BA744E38((uint64_t)v111, (uint64_t)&v91, (unint64_t *)&qword_1ED3B6270);
                if (sub_1BA92287C((uint64_t)&v91) == 1)
                {
                  sub_1BA744E38((uint64_t)v113, (uint64_t)&v81, (unint64_t *)&qword_1ED3B6270);
                  if (sub_1BA92287C((uint64_t)&v81) != 1)
                    return 0;
                }
                else
                {
                  sub_1BA744E38((uint64_t)v111, (uint64_t)&v79, (unint64_t *)&qword_1ED3B6270);
                  sub_1BA744E38((uint64_t)v113, (uint64_t)&v81, (unint64_t *)&qword_1ED3B6270);
                  if (sub_1BA92287C((uint64_t)&v81) == 1)
                    return 0;
                  sub_1BA744E38((uint64_t)v113, (uint64_t)v77, (unint64_t *)&qword_1ED3B6270);
                  v75[10] = v77[10];
                  v75[11] = v77[11];
                  v76 = v78;
                  v75[6] = v77[6];
                  v75[7] = v77[7];
                  v75[8] = v77[8];
                  v75[9] = v77[9];
                  v75[2] = v77[2];
                  v75[3] = v77[3];
                  v75[4] = v77[4];
                  v75[5] = v77[5];
                  v75[0] = v77[0];
                  v75[1] = v77[1];
                  if ((_s8NewsFeed20FormatParagraphStyleV2eeoiySbAC_ACtFZ_0((double *)&v79, (double *)v75) & 1) == 0)
                    return 0;
                }
                if ((v48 & 1) != 0)
                {
                  if (!v13)
                    return 0;
                }
                else
                {
                  if (v5 == v12)
                    v29 = v13;
                  else
                    v29 = 1;
                  if ((v29 & 1) != 0)
                    return 0;
                }
                if (v46)
                {
                  v30 = v47;
                  if (!v45)
                    return 0;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v31 = sub_1BA881EAC(v46, v45);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v31 & 1) == 0)
                    return 0;
                }
                else
                {
                  v30 = v47;
                  if (v45)
                    return 0;
                }
                if (v44 == 9)
                {
                  v32 = v43;
                  if (v30 == 9)
                    goto LABEL_61;
                }
                else
                {
                  *(_QWORD *)&v81 = v44;
                  v32 = v43;
                  *((_QWORD *)&v81 + 1) = v43;
                  if (v30 != 9)
                  {
                    LOBYTE(v79) = v30;
                    v80 = v41;
                    sub_1BA6E8A60(v44, v43);
                    sub_1BA5E7FF4(v43);
                    v33 = _s8NewsFeed15FormatUnderlineV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v81, (unsigned __int8 *)&v79);
                    sub_1BA5E800C(*((uint64_t *)&v81 + 1));
                    sub_1BA6E8A90(v44, v43);
                    if (!v33)
                      return 0;
LABEL_61:
                    if (v42 == 9)
                    {
                      if (v40 == 9)
                      {
LABEL_68:
                        if (v37 == 2)
                        {
                          if (v14 == 2)
                            goto LABEL_73;
                        }
                        else if (v14 != 2 && ((((v37 & 1) == 0) ^ v14) & 1) != 0)
                        {
LABEL_73:
                          if (v36)
                          {
                            if (v15)
                            {
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              v35 = sub_1BA881EAC(v36, v15);
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              if ((v35 & 1) != 0)
                                return 1;
                            }
                          }
                          else if (!v15)
                          {
                            return 1;
                          }
                        }
                        return 0;
                      }
                    }
                    else
                    {
                      *(_QWORD *)&v81 = v42;
                      *((_QWORD *)&v81 + 1) = v39;
                      if (v40 != 9)
                      {
                        LOBYTE(v79) = v40;
                        v80 = v38;
                        sub_1BA6E8A60(v42, v39);
                        sub_1BA5E7FF4(v39);
                        v34 = _s8NewsFeed15FormatUnderlineV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v81, (unsigned __int8 *)&v79);
                        sub_1BA5E800C(*((uint64_t *)&v81 + 1));
                        sub_1BA6E8A90(v42, v39);
                        if (!v34)
                          return 0;
                        goto LABEL_68;
                      }
                      sub_1BA5E7FF4(v39);
                      sub_1BA5E7FF4(v39);
                      sub_1BA5E800C(v39);
                    }
                    sub_1BA6E8A60(v40, v38);
                    sub_1BA6E8A90(v42, v39);
                    sub_1BA6E8A90(v40, v38);
                    return 0;
                  }
                  sub_1BA5E7FF4(v43);
                  sub_1BA5E7FF4(v43);
                  sub_1BA5E800C(v43);
                }
                sub_1BA6E8A60(v30, v41);
                sub_1BA6E8A90(v44, v32);
                sub_1BA6E8A90(v30, v41);
                return 0;
              }
              swift_retain();
              v24 = v70;
              v27 = v69;
            }
            v91 = v65;
            v92 = v66;
            v93 = v67;
            v94 = v68;
            v95 = v61;
            v96 = v27;
            v97 = v26;
            v98 = v25;
            v99 = v64;
            v100 = v60;
            v101 = v24;
            v102 = v9;
            v103 = v53;
            v104 = v54;
            v105 = v55;
            v106 = v56;
            v107[0] = v57;
            v107[1] = v58;
            v107[2] = v59;
            v107[3] = v52;
            v107[4] = v51;
            v108 = v11;
            sub_1BA6E8A48(v9, v53, v54, v55, v56, v57, v58, v59, v52, v51, v11);
            sub_1BA9F10E8((uint64_t)&v91);
            return 0;
          }
          sub_1BA7439D4(&v81, (uint64_t)v77);
          sub_1BA744E38((uint64_t)v110, (uint64_t)&v79, (unint64_t *)&qword_1ED3B30E8);
          sub_1BA6A0C50(&v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
          sub_1BA6A0C50(&v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
          sub_1BA6A0C50(v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
        }
        sub_1BA744E38((uint64_t)v110, (uint64_t)&v91, (unint64_t *)&qword_1ED3B30E8);
        sub_1BA744E38((uint64_t)v112, (uint64_t)v107, (unint64_t *)&qword_1ED3B30E8);
        sub_1BA6A0C50(v112, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
        sub_1BAEFAA88((uint64_t)&v91);
        return 0;
      }
      swift_retain();
    }
    else if ((~v8 & 0xF000000000000007) == 0)
    {
      goto LABEL_11;
    }
    sub_1BA6E6C68(v8);
    sub_1BA6E6CD8(v72);
    sub_1BA6E6CD8(v8);
    return 0;
  }
  return result;
}

uint64_t sub_1BB4EC884(uint64_t a1, const void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  _BYTE *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[200];
  _BYTE v55[200];
  _QWORD v56[25];
  _BYTE v57[128];
  _BYTE v58[128];
  _QWORD __dst[67];

  memcpy(__dst, a2, 0x210uLL);
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)(v2 + 24) = v5;
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 40) = v6;
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = v7;
  v8 = __dst[19];
  if (!__dst[19])
    v8 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 192) = v8;
  v9 = __dst[2];
  v10 = __dst[2];
  if ((~__dst[2] & 0xF000000000000007) == 0)
  {
    v10 = *(_QWORD *)(a1 + 56);
    sub_1BA6E6C68(v10);
  }
  *(_QWORD *)(v2 + 56) = v10;
  v11 = __dst[31];
  if (!__dst[31])
    v11 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 288) = v11;
  sub_1BA744E38((uint64_t)&__dst[3], (uint64_t)v58, (unint64_t *)&qword_1ED3B30E8);
  v53 = v9;
  if (sub_1BAB05F98((uint64_t)v58) == 1)
  {
    sub_1BA744E38(a1 + 64, (uint64_t)v56, (unint64_t *)&qword_1ED3B30E8);
    sub_1BA6A0C50(v56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
    v12 = v56;
  }
  else
  {
    v12 = &__dst[3];
  }
  sub_1BA744E38((uint64_t)v12, (uint64_t)v57, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA744E38((uint64_t)v57, v2 + 64, (unint64_t *)&qword_1ED3B30E8);
  v13 = __dst[21];
  v14 = __dst[22];
  v15 = __dst[23];
  v16 = __dst[24];
  v17 = __dst[25];
  v18 = __dst[26];
  v19 = __dst[27];
  v20 = __dst[28];
  v21 = __dst[29];
  v51 = __dst[21];
  v52 = __dst[20];
  v22 = __dst[20];
  v49 = __dst[23];
  v50 = __dst[22];
  v47 = __dst[25];
  v48 = __dst[24];
  v45 = __dst[27];
  v46 = __dst[26];
  v43 = __dst[29];
  v44 = __dst[28];
  v23 = __dst[30];
  v42 = __dst[30];
  if (LOBYTE(__dst[30]) == 254)
  {
    v40 = *(_QWORD *)(a1 + 208);
    v41 = *(_QWORD *)(a1 + 200);
    v15 = *(_QWORD *)(a1 + 224);
    v39 = *(_QWORD *)(a1 + 216);
    v16 = *(_QWORD *)(a1 + 232);
    v17 = *(_QWORD *)(a1 + 240);
    v18 = *(_QWORD *)(a1 + 248);
    v19 = *(_QWORD *)(a1 + 256);
    v20 = *(_QWORD *)(a1 + 264);
    v21 = *(_QWORD *)(a1 + 272);
    v23 = *(_BYTE *)(a1 + 280);
    sub_1BA6E8A48(v41, v40, v39, v15, v16, v17, v18, v19, v20, v21, v23);
    v14 = v39;
    v13 = v40;
    v22 = v41;
  }
  *(_QWORD *)(v2 + 200) = v22;
  *(_QWORD *)(v2 + 208) = v13;
  *(_QWORD *)(v2 + 216) = v14;
  *(_QWORD *)(v2 + 224) = v15;
  *(_QWORD *)(v2 + 232) = v16;
  *(_QWORD *)(v2 + 240) = v17;
  *(_QWORD *)(v2 + 248) = v18;
  *(_QWORD *)(v2 + 256) = v19;
  *(_QWORD *)(v2 + 264) = v20;
  *(_QWORD *)(v2 + 272) = v21;
  *(_BYTE *)(v2 + 280) = v23;
  sub_1BA744E38((uint64_t)&__dst[32], (uint64_t)v56, (unint64_t *)&qword_1ED3B6270);
  if (sub_1BA92287C((uint64_t)v56) == 1)
  {
    sub_1BA744E38(a1 + 296, (uint64_t)v54, (unint64_t *)&qword_1ED3B6270);
    v24 = v54;
  }
  else
  {
    v24 = &__dst[32];
  }
  sub_1BA744E38((uint64_t)v24, (uint64_t)v55, (unint64_t *)&qword_1ED3B6270);
  sub_1BA744E38((uint64_t)v55, v2 + 296, (unint64_t *)&qword_1ED3B6270);
  if ((__dst[58] & 1) != 0)
  {
    v25 = *(_QWORD *)(a1 + 496);
    v26 = *(_BYTE *)(a1 + 504);
  }
  else
  {
    v26 = 0;
    v25 = __dst[57];
  }
  *(_QWORD *)(v2 + 496) = v25;
  *(_BYTE *)(v2 + 504) = v26;
  v27 = __dst[59];
  if (!__dst[59])
    v27 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 512) = v27;
  v28 = __dst[60];
  v29 = __dst[61];
  v30 = __dst[60];
  v31 = __dst[61];
  if (LOBYTE(__dst[60]) == 9)
  {
    v30 = *(_QWORD *)(a1 + 520);
    v31 = *(_QWORD *)(a1 + 528);
    sub_1BA6E8A60(v30, v31);
  }
  *(_QWORD *)(v2 + 520) = v30;
  *(_QWORD *)(v2 + 528) = v31;
  v32 = __dst[62];
  v33 = __dst[63];
  v34 = __dst[62];
  v35 = __dst[63];
  if (LOBYTE(__dst[62]) == 9)
  {
    v34 = *(_QWORD *)(a1 + 536);
    v35 = *(_QWORD *)(a1 + 544);
    sub_1BA6E8A60(v34, v35);
  }
  *(_QWORD *)(v2 + 536) = v34;
  *(_QWORD *)(v2 + 544) = v35;
  v36 = __dst[64];
  if (LOBYTE(__dst[64]) == 2)
    v36 = *(_BYTE *)(a1 + 552);
  *(_BYTE *)(v2 + 552) = v36;
  v37 = __dst[65];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v53);
  swift_bridgeObjectRetain();
  sub_1BA6A0C50(&__dst[3], (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
  sub_1BA6E8A48(v52, v51, v50, v49, v48, v47, v46, v45, v44, v43, v42);
  swift_bridgeObjectRetain();
  sub_1BA6E8A60(v28, v29);
  sub_1BA6E8A60(v32, v33);
  swift_bridgeObjectRetain();
  sub_1BAC68120((uint64_t)__dst);
  if (!v37)
  {
    v37 = *(_QWORD *)(a1 + 560);
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v2 + 560) = v37;
  return v2;
}

uint64_t sub_1BB4ECD28()
{
  uint64_t v0;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  _BYTE v6[200];
  __int128 v7[5];
  char v8;
  _BYTE v9[128];
  uint64_t v10;
  _BYTE v11[128];
  _BYTE v12[200];

  v10 = 0xF000000000000007;
  sub_1BB15F374((uint64_t)v11);
  sub_1BA744E38((uint64_t)v11, (uint64_t)v9, (unint64_t *)&qword_1ED3B30E8);
  memset(v7, 0, sizeof(v7));
  v8 = -2;
  sub_1BB4EDC04((uint64_t)v12);
  sub_1BA744E38((uint64_t)v12, (uint64_t)v6, (unint64_t *)&qword_1ED3B6270);
  v5 = 0;
  v3 = xmmword_1BB8D2DE0;
  v4 = xmmword_1BB8D2DE0;
  v2 = 0;
  type metadata accessor for FormatTextNodeStyle();
  v0 = swift_allocObject();
  FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(0x6E776F6E6B6E752ELL, 0xE800000000000000, 0x6E776F6E6B6E752ELL, 0xE800000000000000, MEMORY[0x1E0DEE9D8], &v10, (uint64_t)v9, 0, v7, 0, (uint64_t)v6, 0, 1, &v5, (uint64_t *)&v4, (uint64_t *)&v3, 2, &v2);
  return v0;
}

uint64_t sub_1BB4ECE60()
{
  uint64_t *v0;

  sub_1BA6E8CCC(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11], v0[12], v0[13], v0[14], v0[15]);
  return swift_deallocObject();
}

uint64_t sub_1BB4ECEB0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB4ECF94(&qword_1EF2C5AA0, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB4ECEE4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BB4ECF94(&qword_1ED3C8748, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
  result = sub_1BB4ECF94(&qword_1ED3A66F0, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BB4ECF30(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB4ECF94(&qword_1ED3C8748, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
  a1[2] = sub_1BB4ECF94(&qword_1ED3A66F0, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
  result = sub_1BB4ECF94(&qword_1EF2C5AA8, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB4ECF94(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatTextNodeStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB4ECFD0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4ECFF4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4ECFF4()
{
  unint64_t result;

  result = qword_1EF2C5AB0;
  if (!qword_1EF2C5AB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeStyle.Selector, &type metadata for FormatTextNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2C5AB0);
  }
  return result;
}

unint64_t sub_1BB4ED038(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82E00C();
  a1[2] = sub_1BA82E050();
  result = sub_1BB4ED06C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4ED06C()
{
  unint64_t result;

  result = qword_1EF2C5AB8;
  if (!qword_1EF2C5AB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeStyle.Selector, &type metadata for FormatTextNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2C5AB8);
  }
  return result;
}

uint64_t sub_1BB4ED0B0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4ED0FC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatTextNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatTextNodeStyle.__allocating_init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 200))(a1, a2, a3, a4);
}

uint64_t assignWithCopy for FormatTextNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  __int128 *v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD *v48;
  _OWORD *v49;
  int v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = v5 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1BB4ED80C(a1 + 16);
    v5 = *(_QWORD *)(a2 + 16);
LABEL_6:
    *v4 = v5;
    goto LABEL_8;
  }
  *v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  v7 = (_OWORD *)(a1 + 24);
  v8 = (__int128 *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 128);
  v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
  if (*(_QWORD *)(a1 + 128) >> 1 == 0xFFFFFFFFLL)
  {
    if (v10 == 0x1FFFFFFFELL)
    {
      v11 = *v8;
      v12 = *(_OWORD *)(a2 + 40);
      v13 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v13;
      *v7 = v11;
      *(_OWORD *)(a1 + 40) = v12;
      v14 = *(_OWORD *)(a2 + 88);
      v15 = *(_OWORD *)(a2 + 104);
      v16 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v16;
      *(_OWORD *)(a1 + 88) = v14;
      *(_OWORD *)(a1 + 104) = v15;
    }
    else
    {
      v24 = *(_QWORD *)(a2 + 24);
      v23 = *(_QWORD *)(a2 + 32);
      v25 = *(_QWORD *)(a2 + 40);
      v26 = *(_QWORD *)(a2 + 48);
      v27 = *(_QWORD *)(a2 + 56);
      v28 = *(_QWORD *)(a2 + 64);
      v29 = *(_QWORD *)(a2 + 72);
      v84 = *(_QWORD *)(a2 + 80);
      v86 = *(_QWORD *)(a2 + 88);
      v88 = *(_QWORD *)(a2 + 96);
      v90 = *(_QWORD *)(a2 + 104);
      v92 = *(_QWORD *)(a2 + 112);
      v94 = *(_QWORD *)(a2 + 120);
      v96 = *(_QWORD *)(a2 + 136);
      v98 = *(_QWORD *)(a2 + 144);
      sub_1BA6E8AE0(v24, v23, v25, v26, v27, v28, v29, v84, v86, v88, v90, v92, v94, v9);
      *(_QWORD *)(a1 + 24) = v24;
      *(_QWORD *)(a1 + 32) = v23;
      *(_QWORD *)(a1 + 40) = v25;
      *(_QWORD *)(a1 + 48) = v26;
      *(_QWORD *)(a1 + 56) = v27;
      *(_QWORD *)(a1 + 64) = v28;
      *(_QWORD *)(a1 + 72) = v29;
      *(_QWORD *)(a1 + 80) = v84;
      *(_QWORD *)(a1 + 88) = v86;
      *(_QWORD *)(a1 + 96) = v88;
      *(_QWORD *)(a1 + 104) = v90;
      *(_QWORD *)(a1 + 112) = v92;
      *(_QWORD *)(a1 + 120) = v94;
      *(_QWORD *)(a1 + 128) = v9;
      *(_QWORD *)(a1 + 136) = v96;
      *(_QWORD *)(a1 + 144) = v98;
    }
  }
  else if (v10 == 0x1FFFFFFFELL)
  {
    sub_1BB4ED840((uint64_t *)(a1 + 24));
    v17 = *(_OWORD *)(a2 + 72);
    v19 = *v8;
    v18 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v17;
    *v7 = v19;
    *(_OWORD *)(a1 + 40) = v18;
    v20 = *(_OWORD *)(a2 + 136);
    v22 = *(_OWORD *)(a2 + 88);
    v21 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v20;
    *(_OWORD *)(a1 + 88) = v22;
    *(_OWORD *)(a1 + 104) = v21;
  }
  else
  {
    v31 = *(_QWORD *)(a2 + 24);
    v30 = *(_QWORD *)(a2 + 32);
    v32 = *(_QWORD *)(a2 + 40);
    v33 = *(_QWORD *)(a2 + 48);
    v34 = *(_QWORD *)(a2 + 56);
    v35 = *(_QWORD *)(a2 + 64);
    v36 = *(_QWORD *)(a2 + 72);
    v85 = *(_QWORD *)(a2 + 80);
    v87 = *(_QWORD *)(a2 + 88);
    v89 = *(_QWORD *)(a2 + 96);
    v91 = *(_QWORD *)(a2 + 104);
    v93 = *(_QWORD *)(a2 + 112);
    v95 = *(_QWORD *)(a2 + 120);
    v97 = *(_QWORD *)(a2 + 136);
    v99 = *(_QWORD *)(a2 + 144);
    sub_1BA6E8AE0(v31, v30, v32, v33, v34, v35, v36, v85, v87, v89, v91, v93, v95, v9);
    v37 = *(_QWORD *)(a1 + 24);
    v38 = *(_QWORD *)(a1 + 32);
    v39 = *(_QWORD *)(a1 + 40);
    v40 = *(_QWORD *)(a1 + 48);
    v41 = *(_QWORD *)(a1 + 56);
    v42 = *(_QWORD *)(a1 + 64);
    v43 = *(_QWORD *)(a1 + 72);
    v44 = *(_QWORD *)(a1 + 80);
    v45 = *(_OWORD *)(a1 + 88);
    v46 = *(_OWORD *)(a1 + 104);
    v47 = *(_OWORD *)(a1 + 120);
    *(_QWORD *)(a1 + 24) = v31;
    *(_QWORD *)(a1 + 32) = v30;
    *(_QWORD *)(a1 + 40) = v32;
    *(_QWORD *)(a1 + 48) = v33;
    *(_QWORD *)(a1 + 56) = v34;
    *(_QWORD *)(a1 + 64) = v35;
    *(_QWORD *)(a1 + 72) = v36;
    *(_QWORD *)(a1 + 80) = v85;
    *(_QWORD *)(a1 + 88) = v87;
    *(_QWORD *)(a1 + 96) = v89;
    *(_QWORD *)(a1 + 104) = v91;
    *(_QWORD *)(a1 + 112) = v93;
    *(_QWORD *)(a1 + 120) = v95;
    *(_QWORD *)(a1 + 128) = v9;
    *(_QWORD *)(a1 + 136) = v97;
    *(_QWORD *)(a1 + 144) = v99;
    sub_1BA6E8CCC(v37, v38, v39, v40, v41, v42, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((uint64_t *)&v47 + 1));
  }
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = (_OWORD *)(a1 + 160);
  v49 = (_OWORD *)(a2 + 160);
  v50 = *(unsigned __int8 *)(a2 + 240);
  if (*(unsigned __int8 *)(a1 + 240) == 254)
  {
    if (v50 == 254)
    {
      v51 = *(_OWORD *)(a2 + 176);
      *v48 = *v49;
      *(_OWORD *)(a1 + 176) = v51;
      v52 = *(_OWORD *)(a2 + 192);
      v53 = *(_OWORD *)(a2 + 208);
      v54 = *(_OWORD *)(a2 + 224);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_OWORD *)(a1 + 208) = v53;
      *(_OWORD *)(a1 + 224) = v54;
      *(_OWORD *)(a1 + 192) = v52;
    }
    else
    {
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      v59 = *(_OWORD *)(a2 + 200);
      v60 = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 225) = *(_OWORD *)(a2 + 225);
      *(_OWORD *)(a1 + 216) = v60;
      *(_OWORD *)(a1 + 200) = v59;
      swift_retain();
    }
  }
  else if (v50 == 254)
  {
    sub_1BA9F0278(a1 + 160);
    v55 = *(_OWORD *)(a2 + 176);
    *v48 = *v49;
    *(_OWORD *)(a1 + 176) = v55;
    v57 = *(_OWORD *)(a2 + 208);
    v56 = *(_OWORD *)(a2 + 224);
    v58 = *(_OWORD *)(a2 + 192);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_OWORD *)(a1 + 208) = v57;
    *(_OWORD *)(a1 + 224) = v56;
    *(_OWORD *)(a1 + 192) = v58;
  }
  else
  {
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    swift_retain();
    swift_release();
    v61 = *(_OWORD *)(a2 + 200);
    v62 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 225) = *(_OWORD *)(a2 + 225);
    *(_OWORD *)(a1 + 216) = v62;
    *(_OWORD *)(a1 + 200) = v61;
  }
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  v63 = *(_OWORD *)(a2 + 272);
  v64 = *(_OWORD *)(a2 + 288);
  v65 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v65;
  *(_OWORD *)(a1 + 272) = v63;
  *(_OWORD *)(a1 + 288) = v64;
  v66 = *(_OWORD *)(a2 + 336);
  v67 = *(_OWORD *)(a2 + 352);
  v68 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v68;
  *(_OWORD *)(a1 + 336) = v66;
  *(_OWORD *)(a1 + 352) = v67;
  v69 = *(_OWORD *)(a2 + 400);
  v70 = *(_OWORD *)(a2 + 416);
  v71 = *(_OWORD *)(a2 + 432);
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  *(_OWORD *)(a1 + 416) = v70;
  *(_OWORD *)(a1 + 432) = v71;
  *(_OWORD *)(a1 + 400) = v69;
  v72 = *(_QWORD *)(a2 + 456);
  *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = v72;
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v73 = *(unsigned __int8 *)(a2 + 480);
  if (*(_BYTE *)(a1 + 480) == 9)
  {
    if (v73 != 9)
    {
      *(_BYTE *)(a1 + 480) = v73;
      v74 = *(_QWORD *)(a2 + 488);
      *(_QWORD *)(a1 + 488) = v74;
      if ((~v74 & 0xF000000000000007) == 0)
        goto LABEL_37;
LABEL_32:
      swift_retain();
      goto LABEL_37;
    }
LABEL_28:
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    goto LABEL_37;
  }
  if (v73 == 9)
  {
    sub_1BB4ED874(a1 + 480);
    goto LABEL_28;
  }
  *(_BYTE *)(a1 + 480) = v73;
  v75 = (_QWORD *)(a1 + 488);
  v76 = *(_QWORD *)(a2 + 488);
  v77 = v76 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 488) & 0xF000000000000007) != 0)
  {
    if (v77 == 0xF000000000000007)
    {
      sub_1BAA5FA24(a1 + 488);
      *v75 = *(_QWORD *)(a2 + 488);
    }
    else
    {
      *v75 = v76;
      swift_retain();
      swift_release();
    }
  }
  else
  {
    *v75 = v76;
    if (v77 != 0xF000000000000007)
      goto LABEL_32;
  }
LABEL_37:
  v78 = *(unsigned __int8 *)(a2 + 496);
  if (*(_BYTE *)(a1 + 496) == 9)
  {
    if (v78 != 9)
    {
      *(_BYTE *)(a1 + 496) = v78;
      v79 = *(_QWORD *)(a2 + 504);
      *(_QWORD *)(a1 + 504) = v79;
      if ((~v79 & 0xF000000000000007) == 0)
        goto LABEL_52;
      goto LABEL_47;
    }
    goto LABEL_43;
  }
  if (v78 == 9)
  {
    sub_1BB4ED874(a1 + 496);
LABEL_43:
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
    goto LABEL_52;
  }
  *(_BYTE *)(a1 + 496) = v78;
  v80 = (_QWORD *)(a1 + 504);
  v81 = *(_QWORD *)(a2 + 504);
  v82 = v81 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 504) & 0xF000000000000007) == 0)
  {
    *v80 = v81;
    if (v82 == 0xF000000000000007)
      goto LABEL_52;
LABEL_47:
    swift_retain();
    goto LABEL_52;
  }
  if (v82 == 0xF000000000000007)
  {
    sub_1BAA5FA24(a1 + 504);
    *v80 = *(_QWORD *)(a2 + 504);
  }
  else
  {
    *v80 = v81;
    swift_retain();
    swift_release();
  }
LABEL_52:
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB4ED80C(uint64_t a1)
{
  destroy for FormatColorNotExpression();
  return a1;
}

uint64_t *sub_1BB4ED840(uint64_t *a1)
{
  destroy for FormatFill(a1);
  return a1;
}

uint64_t sub_1BB4ED874(uint64_t a1)
{
  destroy for FormatUnderline(a1);
  return a1;
}

uint64_t assignWithTake for FormatTextNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1BB4ED80C(a1 + 16);
LABEL_4:
    *v5 = v6;
    goto LABEL_6;
  }
  *v5 = v6;
  swift_release();
LABEL_6:
  v7 = *(_QWORD *)(a1 + 128);
  if (v7 >> 1 == 0xFFFFFFFF)
  {
LABEL_9:
    v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    v10 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v10;
    v11 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v11;
    v12 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v12;
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(a2 + 128);
  if (v8 >> 1 == 0xFFFFFFFF)
  {
    sub_1BB4ED840((uint64_t *)(a1 + 24));
    goto LABEL_9;
  }
  v13 = *(_QWORD *)(a2 + 120);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v21 = *(_QWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 88);
  v23 = *(_OWORD *)(a1 + 104);
  v24 = *(_QWORD *)(a1 + 120);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = v13;
  *(_QWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  sub_1BA6E8CCC(v14, v15, v16, v17, v18, v19, v20, v21, v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, v7);
LABEL_11:
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 240) == 254)
  {
LABEL_14:
    v25 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v25;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    v26 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v26;
    goto LABEL_16;
  }
  if (*(unsigned __int8 *)(a2 + 240) == 254)
  {
    sub_1BA9F0278(a1 + 160);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_release();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 225) = *(_OWORD *)(a2 + 225);
LABEL_16:
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRelease();
  v27 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v27;
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  v28 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v28;
  v29 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v29;
  v30 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v30;
  v31 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v31;
  v32 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v32;
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(a1 + 480) == 9)
  {
LABEL_19:
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    goto LABEL_25;
  }
  v33 = *(unsigned __int8 *)(a2 + 480);
  if (v33 == 9)
  {
    sub_1BB4ED874(a1 + 480);
    goto LABEL_19;
  }
  *(_BYTE *)(a1 + 480) = v33;
  v34 = (_QWORD *)(a1 + 488);
  v35 = *(_QWORD *)(a2 + 488);
  if ((~*(_QWORD *)(a1 + 488) & 0xF000000000000007) == 0)
    goto LABEL_23;
  if ((~v35 & 0xF000000000000007) == 0)
  {
    sub_1BAA5FA24(a1 + 488);
LABEL_23:
    *v34 = v35;
    goto LABEL_25;
  }
  *v34 = v35;
  swift_release();
LABEL_25:
  if (*(_BYTE *)(a1 + 496) == 9)
  {
LABEL_28:
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
    goto LABEL_34;
  }
  v36 = *(unsigned __int8 *)(a2 + 496);
  if (v36 == 9)
  {
    sub_1BB4ED874(a1 + 496);
    goto LABEL_28;
  }
  *(_BYTE *)(a1 + 496) = v36;
  v37 = (_QWORD *)(a1 + 504);
  v38 = *(_QWORD *)(a2 + 504);
  if ((~*(_QWORD *)(a1 + 504) & 0xF000000000000007) != 0)
  {
    if ((~v38 & 0xF000000000000007) != 0)
    {
      *v37 = v38;
      swift_release();
      goto LABEL_34;
    }
    sub_1BAA5FA24(a1 + 504);
  }
  *v37 = v38;
LABEL_34:
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeStyle.Selector()
{
  return &type metadata for FormatTextNodeStyle.Selector;
}

double sub_1BB4EDC04(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_WORD *)(a1 + 192) = 768;
  return result;
}

_QWORD *sub_1BB4EDC2C(void (*a1)(uint64_t, _QWORD, uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t v17;
  uint64_t (**v18)();
  uint64_t v19;
  void (*v20)(uint64_t (**)(), _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  void (*v23)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _QWORD *v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  __int128 v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v102;
  _QWORD *v103;
  void (*v104)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned __int8 v111;
  void (*v112)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  _QWORD *v117;
  unsigned __int8 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  void (*v133)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  __int128 v150;
  _BYTE v151[128];
  _OWORD v152[2];
  uint64_t v153;
  _OWORD v154[2];
  uint64_t v155;
  _OWORD v156[2];
  uint64_t v157;
  _OWORD v158[2];
  uint64_t v159;
  _OWORD v160[2];
  uint64_t v161;
  _BYTE v162[136];

  v133 = a1;
  sub_1BA8C88C8(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v129 = (uint64_t *)((char *)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA67D7C8(0, (unint64_t *)&qword_1EF2A9CF0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  v128 = swift_allocObject();
  *(_OWORD *)(v128 + 16) = xmmword_1BB887E50;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 32) & ~v7;
  v134 = *(_QWORD *)(v5 + 72);
  v126 = v7 | 7;
  v127 = v9;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
  v136 = v8;
  v11 = (_QWORD *)(v10 + v8);
  v124 = a2;
  if (a2)
  {
    v13 = *(_QWORD *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    v14 = sub_1BB4EAE5C();
    v147 = 0u;
    v148 = 0u;
    v146 = v14;
    v149 = 0;
    v150 = xmmword_1BB91F6C0;
    v15 = swift_allocObject();
    sub_1BA9F1094((uint64_t)&v146, v15 + 16);
    v16 = sub_1BA9F10D0;
  }
  else
  {
    v15 = 0;
    v13 = 0;
    v12 = 0xE000000000000000;
    v16 = sub_1BB739F50;
  }
  v17 = type metadata accessor for FormatInspectionItem(0);
  v18 = (uint64_t (**)())((char *)v11 + *(int *)(v17 + 24));
  *v18 = v16;
  v18[1] = (uint64_t (*)())v15;
  v19 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  v20 = *(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v132 = v19;
  *(_QWORD *)&v131 = v20;
  v20(v18, 0, 1, v19);
  v21 = v136;
  *(_QWORD *)(v10 + v136) = v13;
  v11[2] = 0;
  v11[3] = 0;
  v11[1] = v12;
  v22 = (char *)v11 + *(int *)(v17 + 28);
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = -1;
  v23 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v23((uint64_t)v11, 0, 1, v17);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v10, v152);
  swift_setDeallocating();
  v125 = v4;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v24 = v128;
  *(_QWORD *)(v128 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v24 + 64) = &off_1E72D2F60;
  v25 = swift_allocObject();
  *(_QWORD *)(v24 + 32) = v25;
  v26 = v152[1];
  *(_OWORD *)(v25 + 16) = v152[0];
  *(_OWORD *)(v25 + 32) = v26;
  *(_QWORD *)(v25 + 48) = v153;
  v27 = v134;
  v28 = swift_allocObject();
  v130 = xmmword_1BB87FC80;
  *(_OWORD *)(v28 + 16) = xmmword_1BB87FC80;
  v29 = v28 + v21;
  sub_1BAAF7494(1701869908, 0xE400000000000000, 1954047316, 0xE400000000000000, (_QWORD *)(v28 + v21));
  v23(v28 + v21, 0, 1, v17);
  v30 = v124;
  if (v124)
  {
    v31 = *(_QWORD *)(v124 + 512);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, v31, (_QWORD *)(v29 + v27));
    v23(v29 + v27, 0, 1, v17);
    v32 = *(_BYTE *)(v30 + 552);
  }
  else
  {
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, 0, (_QWORD *)(v29 + v27));
    v23(v29 + v27, 0, 1, v17);
    v32 = 2;
  }
  v123 = 2 * v27;
  sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, v32, (_QWORD *)(v29 + 2 * v27));
  v135 = v17;
  v23(v29 + 2 * v27, 0, 1, v17);
  sub_1BAF89090(2003134806, 0xE400000000000000, 0, 0, v28, v154);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v33 = (_QWORD *)v128;
  *(_QWORD *)(v128 + 96) = &type metadata for FormatInspectionGroup;
  v33[13] = &off_1E72D2F60;
  v34 = swift_allocObject();
  v33[9] = v34;
  v35 = v154[1];
  *(_OWORD *)(v34 + 16) = v154[0];
  *(_OWORD *)(v34 + 32) = v35;
  *(_QWORD *)(v34 + 48) = v155;
  if (v30)
  {
    v36 = *(_QWORD *)(v30 + 56);
    sub_1BA6E6C68(v36);
  }
  else
  {
    v36 = 0xF000000000000007;
  }
  v146 = v36;
  v37 = sub_1BA9634B8((uint64_t)v133, &v146);
  sub_1BA6E6CD8(v36);
  v33[17] = &type metadata for FormatInspection;
  v33[18] = &off_1E7335C38;
  v33[14] = v37;
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v130;
  v39 = v135;
  v40 = (_QWORD *)(v38 + v136);
  if (v30)
  {
    sub_1BA744E38(v30 + 64, (uint64_t)&v146, (unint64_t *)&qword_1ED3B30E8);
    sub_1BA6A0C50(&v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
  }
  else
  {
    sub_1BB15F374((uint64_t)&v146);
  }
  sub_1BA744E38((uint64_t)&v146, (uint64_t)v151, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA744E38((uint64_t)v151, (uint64_t)v162, (unint64_t *)&qword_1ED3B30E8);
  sub_1BAAFF200(1819044166, 0xE400000000000000, (uint64_t)v162, v40);
  v23((uint64_t)v40, 0, 1, v39);
  if (v30)
  {
    sub_1BAAF3A18(0x676E696B63617254, 0xE800000000000000, *(_QWORD *)(v30 + 496), *(_BYTE *)(v30 + 504), (_QWORD *)((char *)v40 + v27));
    v23((uint64_t)v40 + v27, 0, 1, v39);
    v41 = *(_QWORD *)(v30 + 560);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BAAF3A18(0x676E696B63617254, 0xE800000000000000, 0, 1, (_QWORD *)((char *)v40 + v27));
    v23((uint64_t)v40 + v27, 0, 1, v39);
    v41 = 0;
  }
  v42 = (char *)v40 + v123;
  sub_1BAAF3E48(0x656E696C65736142, 0xEF74657366664F20, v41, (_QWORD *)((char *)v40 + v123));
  v23((uint64_t)v42, 0, 1, v39);
  sub_1BAF89090(1954047316, 0xE400000000000000, 0, 0, v38, v156);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v33[22] = &type metadata for FormatInspectionGroup;
  v33[23] = &off_1E72D2F60;
  v43 = swift_allocObject();
  v33[19] = v43;
  v44 = v156[1];
  *(_OWORD *)(v43 + 16) = v156[0];
  *(_OWORD *)(v43 + 32) = v44;
  *(_QWORD *)(v43 + 48) = v157;
  if (v30 && (v45 = *(_QWORD *)(v30 + 288)) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRelease();
    v45 = MEMORY[0x1E0DEE9D8];
  }
  v46 = v129;
  v47 = *(_QWORD *)(v45 + 16);
  v133 = v23;
  if (v47)
  {
    v146 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v47, 0);
    v48 = 0;
    v49 = v146;
    v129 = v46 + 2;
    *(_QWORD *)&v130 = v45;
    v50 = v135;
    v51 = v132;
    do
    {
      v52 = v47;
      v53 = 8 * *(char *)(v45 + v48 + 32);
      v54 = *(_QWORD *)&aUppercaslowerc[v53];
      v55 = *(_QWORD *)&aUppercaslowerc[v53 + 24];
      v56 = (_QWORD *)((char *)v46 + *(int *)(v50 + 24));
      *v56 = 0;
      v56[1] = 0xE000000000000000;
      swift_storeEnumTagMultiPayload();
      ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v131)(v56, 0, 1, v51);
      *v46 = v54;
      v46[1] = v55;
      v57 = v129;
      *v129 = 0;
      v57[1] = 0;
      v58 = (char *)v46 + *(int *)(v50 + 28);
      *(_QWORD *)v58 = 0;
      *((_QWORD *)v58 + 1) = 0;
      v58[16] = -1;
      v133((uint64_t)v46, 0, 1, v50);
      v146 = v49;
      v60 = *(_QWORD *)(v49 + 16);
      v59 = *(_QWORD *)(v49 + 24);
      if (v60 >= v59 >> 1)
      {
        sub_1BAC79E1C(v59 > 1, v60 + 1, 1);
        v49 = v146;
      }
      ++v48;
      *(_QWORD *)(v49 + 16) = v60 + 1;
      sub_1BA89EB4C((uint64_t)v46, v49 + v136 + v60 * v134);
      v47 = v52;
      v45 = v130;
    }
    while (v52 != v48);
    swift_bridgeObjectRelease();
    v61 = (_QWORD *)v128;
    v30 = v124;
  }
  else
  {
    swift_bridgeObjectRelease();
    v49 = MEMORY[0x1E0DEE9D8];
    v61 = (_QWORD *)v128;
  }
  sub_1BAF89090(0x726F66736E617254, 0xEA0000000000736DLL, 0, 0, v49, v158);
  swift_bridgeObjectRelease();
  v61[27] = &type metadata for FormatInspectionGroup;
  v61[28] = &off_1E72D2F60;
  v62 = swift_allocObject();
  v61[24] = v62;
  v63 = v158[1];
  *(_OWORD *)(v62 + 16) = v158[0];
  *(_OWORD *)(v62 + 32) = v63;
  *(_QWORD *)(v62 + 48) = v159;
  if (v30)
    sub_1BA744E38(v30 + 296, (uint64_t)&v137, (unint64_t *)&qword_1ED3B6270);
  else
    sub_1BB4EDC04((uint64_t)&v137);
  sub_1BA744E38((uint64_t)&v137, (uint64_t)&v146, (unint64_t *)&qword_1ED3B6270);
  sub_1BA744E38((uint64_t)&v146, (uint64_t)&v137, (unint64_t *)&qword_1ED3B6270);
  v64 = sub_1BA921F7C((uint64_t)&v137);
  v61[32] = &type metadata for FormatInspection;
  v61[33] = &off_1E7335C38;
  v65 = v61;
  v61[29] = v64;
  if (v30)
  {
    v66 = *(_QWORD *)(v30 + 200);
    v67 = *(_QWORD *)(v30 + 208);
    v68 = *(_QWORD *)(v30 + 216);
    v69 = *(_QWORD *)(v30 + 224);
    v70 = *(_QWORD *)(v30 + 232);
    v71 = *(_QWORD *)(v30 + 240);
    v72 = *(_QWORD *)(v30 + 248);
    v73 = *(_QWORD *)(v30 + 256);
    v74 = *(_QWORD *)(v30 + 264);
    v75 = *(_QWORD *)(v30 + 272);
    LODWORD(v129) = *(unsigned __int8 *)(v30 + 280);
    *(_QWORD *)&v130 = v75;
    *(_QWORD *)&v131 = v74;
    v76 = v66;
    v77 = v67;
    v78 = v68;
    v79 = v69;
    v80 = v70;
    v81 = v71;
    v82 = v72;
    v30 = v73;
    sub_1BA6E8A48(v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v129);
  }
  else
  {
    v76 = 0;
    v77 = 0;
    v78 = 0;
    v79 = 0;
    v80 = 0;
    v81 = 0;
    v82 = 0;
    *(_QWORD *)&v131 = 0;
    *(_QWORD *)&v130 = 0;
    LODWORD(v129) = 254;
  }
  v132 = (uint64_t)(v65 + 4);
  *(_QWORD *)&v137 = v76;
  *((_QWORD *)&v137 + 1) = v77;
  v121 = v79;
  v122 = v77;
  *(_QWORD *)&v138 = v78;
  *((_QWORD *)&v138 + 1) = v79;
  v139 = v80;
  v140 = v81;
  v141 = v82;
  v142 = v30;
  v83 = v131;
  v84 = v130;
  v143 = v131;
  v144 = v130;
  v85 = v129;
  v145 = (char)v129;
  v86 = sub_1BB05E83C((uint64_t)&v137);
  v87 = v76;
  v88 = v86;
  v119 = v85;
  v89 = (_QWORD *)v128;
  sub_1BA6E8A78(v87, v122, v78, v121, v80, v81, v82, v30, v83, v84, v119);
  v89[37] = &type metadata for FormatInspection;
  v89[38] = &off_1E7335C38;
  v90 = v136;
  v91 = v136 + v123;
  v89[34] = v88;
  *(_QWORD *)&v130 = v91;
  v92 = swift_allocObject();
  v93 = v92;
  v131 = xmmword_1BB87A390;
  *(_OWORD *)(v92 + 16) = xmmword_1BB87A390;
  v94 = v92 + v90;
  v95 = v124;
  if (v124)
  {
    v96 = *(_QWORD *)(v124 + 520);
    if (v96 == 9)
      v97 = 8;
    else
      v97 = v96;
    sub_1BAAFF584(0x656C797453, 0xE500000000000000, v97, (_QWORD *)(v92 + v90));
    v133(v94, 0, 1, v135);
    v98 = v134;
    if (*(_BYTE *)(v95 + 520) == 9)
    {
      v99 = 0xF000000000000007;
    }
    else
    {
      v99 = *(_QWORD *)(v95 + 528);
      sub_1BA5E7FF4(v99);
    }
    v100 = v135;
    v101 = v133;
  }
  else
  {
    sub_1BAAFF584(0x656C797453, 0xE500000000000000, 8u, (_QWORD *)(v92 + v90));
    v100 = v135;
    v101 = v133;
    v133(v94, 0, 1, v135);
    v99 = 0xF000000000000007;
    v98 = v134;
  }
  v102 = (_QWORD *)(v94 + v98);
  sub_1BAAF7724(0x726F6C6F43, 0xE500000000000000, v99, v102);
  v103 = v102;
  v104 = v101;
  v101((uint64_t)v103, 0, 1, v100);
  sub_1BAF89090(0x6874656B69727453, 0xED00006867756F72, 0, 0, v93, v160);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v89[42] = &type metadata for FormatInspectionGroup;
  v89[43] = &off_1E72D2F60;
  v105 = swift_allocObject();
  v89[39] = v105;
  v106 = v160[1];
  *(_OWORD *)(v105 + 16) = v160[0];
  *(_OWORD *)(v105 + 32) = v106;
  *(_QWORD *)(v105 + 48) = v161;
  v107 = swift_allocObject();
  v108 = v107;
  *(_OWORD *)(v107 + 16) = v131;
  v109 = v107 + v136;
  if (v95)
  {
    v110 = *(_QWORD *)(v95 + 536);
    if (v110 == 9)
      v111 = 8;
    else
      v111 = v110;
    sub_1BAAFF584(0x656C797453, 0xE500000000000000, v111, (_QWORD *)(v107 + v136));
    v104(v109, 0, 1, v100);
    v112 = v104;
    if (*(_BYTE *)(v95 + 536) == 9)
    {
      v113 = 0xF000000000000007;
    }
    else
    {
      v113 = *(_QWORD *)(v95 + 544);
      sub_1BA5E7FF4(v113);
    }
    v100 = v135;
  }
  else
  {
    sub_1BAAFF584(0x656C797453, 0xE500000000000000, 8u, (_QWORD *)(v107 + v136));
    v104(v109, 0, 1, v100);
    v113 = 0xF000000000000007;
    v112 = v104;
  }
  v114 = v109 + v134;
  sub_1BAAF7724(0x726F6C6F43, 0xE500000000000000, v113, (_QWORD *)(v109 + v134));
  v112(v114, 0, 1, v100);
  sub_1BAF89090(0x6E696C7265646E55, 0xE900000000000065, 0, 0, v108, &v137);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v89[47] = &type metadata for FormatInspectionGroup;
  v89[48] = &off_1E72D2F60;
  v115 = swift_allocObject();
  v89[44] = v115;
  v116 = v138;
  *(_OWORD *)(v115 + 16) = v137;
  *(_OWORD *)(v115 + 32) = v116;
  *(_QWORD *)(v115 + 48) = v139;
  v117 = sub_1BB6DF010((uint64_t)v89);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v117;
}

uint64_t sub_1BB4EEAEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB4EEB20()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1BB4EEB50()
{
  uint64_t v0;

  sub_1BA6F3F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1BB4EEB7C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BB4EEBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BB4EB8D0(a1, a2, a3, *(double *)(v4 + 24), a4, *(void **)(v4 + 16), *(void **)(v4 + 32));
}

uint64_t sub_1BB4EEBB8()
{
  return swift_deallocObject();
}

uint64_t sub_1BB4EEBC8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BB4EEBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BB4EBB50(a1, a2, a3, *(double *)(v4 + 32), a4, *(double **)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_1BB4EEBF8()
{
  return swift_deallocObject();
}

BOOL static FormatPuzzleBinding.Command.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatPuzzleBinding.Command.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPuzzleBinding.Command.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB4EEC98()
{
  unint64_t result;

  result = qword_1EF2C5AC8;
  if (!qword_1EF2C5AC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Command, &type metadata for FormatPuzzleBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2C5AC8);
  }
  return result;
}

unint64_t sub_1BB4EECDC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4EED00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4EED00()
{
  unint64_t result;

  result = qword_1EF2C5AD0;
  if (!qword_1EF2C5AD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Command, &type metadata for FormatPuzzleBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2C5AD0);
  }
  return result;
}

unint64_t sub_1BB4EED44(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8A01C();
  a1[2] = sub_1BAEF4854();
  result = sub_1BB4EEC98();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB4EED78@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatPuzzleBinding.Command.init(from:)(a1, a2);
}

void sub_1BB4EED8C(_QWORD *a1)
{
  FormatPuzzleBinding.Command.encode(to:)(a1);
}

uint64_t _s7CommandOwst_4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB4EEDEC + 4 * byte_1BB91FA15[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB4EEE20 + 4 * byte_1BB91FA10[v4]))();
}

uint64_t sub_1BB4EEE20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4EEE28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4EEE30);
  return result;
}

uint64_t sub_1BB4EEE3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4EEE44);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB4EEE48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4EEE50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Command()
{
  return &type metadata for FormatPuzzleBinding.Command;
}

uint64_t dispatch thunk of FormatAnalyticsDataProviderType.pushGroupData(into:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1BB4EEE74(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  char v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE v13[16];
  uint64_t v14;

  v4 = BYTE2(a3);
  sub_1BB4EF470(0, &qword_1EF2C5AD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = &v13[-v10];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB4EF038();
  sub_1BB8746C8();
  v14 = a2;
  v13[15] = 0;
  sub_1BAB12C98();
  sub_1BB2CE918((unint64_t *)&qword_1EF2B0290, (uint64_t (*)(void))sub_1BAB12D4C, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  if (!v3)
  {
    v13[14] = 1;
    sub_1BB874188();
    v13[13] = 2;
    sub_1BB874188();
    v13[12] = v4 & 1;
    v13[11] = 3;
    sub_1BB4EF07C();
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_1BB4EF038()
{
  unint64_t result;

  result = qword_1ED3AC5A0;
  if (!qword_1ED3AC5A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91FCB0, &type metadata for SportsTaxonomyGraphResourceSectionNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AC5A0);
  }
  return result;
}

unint64_t sub_1BB4EF07C()
{
  unint64_t result;

  result = qword_1EF2C5AE0;
  if (!qword_1EF2C5AE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D61D4, &type metadata for SportsTaxonomyGraphResourceHeader);
    atomic_store(result, (unint64_t *)&qword_1EF2C5AE0);
  }
  return result;
}

uint64_t sub_1BB4EF0C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB4EF0F0 + 4 * byte_1BB91FB60[*v0]))(0x6E6572646C696863, 0xE800000000000000);
}

uint64_t sub_1BB4EF0F0()
{
  return 0x6E65646469487369;
}

unint64_t sub_1BB4EF104()
{
  return 0xD000000000000016;
}

uint64_t sub_1BB4EF120()
{
  return 0x726564616568;
}

uint64_t sub_1BB4EF134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB4EF838(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB4EF158()
{
  sub_1BB4EF038();
  return sub_1BB874710();
}

uint64_t sub_1BB4EF180()
{
  sub_1BB4EF038();
  return sub_1BB87471C();
}

uint64_t sub_1BB4EF1A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  int v5;

  result = sub_1BB4EF228(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5 & 1;
    *(_BYTE *)(a2 + 9) = BYTE1(v5) & 1;
    *(_BYTE *)(a2 + 10) = BYTE2(v5) & 1;
  }
  return result;
}

uint64_t sub_1BB4EF1E8(_QWORD *a1)
{
  uint64_t v1;
  int v2;

  if (*(_BYTE *)(v1 + 9))
    v2 = 256;
  else
    v2 = 0;
  return sub_1BB4EEE74(a1, *(_QWORD *)v1, v2 | (*(unsigned __int8 *)(v1 + 10) << 16) | *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_1BB4EF228(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;

  sub_1BB4EF470(0, &qword_1ED3AC5D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v10[-v6];
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1BB4EF038();
  sub_1BB87468C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1BAB12C98();
    v10[15] = 0;
    sub_1BB2CE918(&qword_1ED3AB048, (uint64_t (*)(void))sub_1BB2CE97C, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    v8 = v11;
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_1BB874038();
    v10[13] = 2;
    sub_1BB874038();
    v10[11] = 3;
    sub_1BB4EF4CC();
    sub_1BB874068();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

void sub_1BB4EF470(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB4EF038();
    v7 = a3(a1, &type metadata for SportsTaxonomyGraphResourceSectionNode.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB4EF4CC()
{
  unint64_t result;

  result = qword_1ED3AC598;
  if (!qword_1ED3AC598)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D61AC, &type metadata for SportsTaxonomyGraphResourceHeader);
    atomic_store(result, (unint64_t *)&qword_1ED3AC598);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsTaxonomyGraphResourceSectionNode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB4EF55C + 4 * byte_1BB91FB69[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB4EF590 + 4 * byte_1BB91FB64[v4]))();
}

uint64_t sub_1BB4EF590(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4EF598(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4EF5A0);
  return result;
}

uint64_t sub_1BB4EF5AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4EF5B4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB4EF5B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4EF5C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceSectionNode.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceSectionNode.CodingKeys;
}

uint64_t sub_1BB4EF5E0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsTaxonomyGraphResourceSectionNode(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  return a1;
}

uint64_t assignWithTake for SportsTaxonomyGraphResourceSectionNode(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsTaxonomyGraphResourceSectionNode(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 11))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsTaxonomyGraphResourceSectionNode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 11) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 11) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceSectionNode()
{
  return &type metadata for SportsTaxonomyGraphResourceSectionNode;
}

unint64_t sub_1BB4EF764()
{
  unint64_t result;

  result = qword_1EF2C5AE8;
  if (!qword_1EF2C5AE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91FC88, &type metadata for SportsTaxonomyGraphResourceSectionNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C5AE8);
  }
  return result;
}

unint64_t sub_1BB4EF7AC()
{
  unint64_t result;

  result = qword_1ED3AC5B0;
  if (!qword_1ED3AC5B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91FBF8, &type metadata for SportsTaxonomyGraphResourceSectionNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AC5B0);
  }
  return result;
}

unint64_t sub_1BB4EF7F4()
{
  unint64_t result;

  result = qword_1ED3AC5A8;
  if (!qword_1ED3AC5A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91FC20, &type metadata for SportsTaxonomyGraphResourceSectionNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AC5A8);
  }
  return result;
}

uint64_t sub_1BB4EF838(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65646469487369 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB971E20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726564616568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t FeedCursorKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB4EFA0C + 4 * byte_1BB91FD00[*v0]))(0x657669746361, 0xE600000000000000);
}

uint64_t sub_1BB4EFA0C()
{
  return 1852138867;
}

uint64_t sub_1BB4EFA1C()
{
  return 0x6E657A6F7266;
}

uint64_t sub_1BB4EFA2C()
{
  return 0x656546664F646E65;
}

uint64_t sub_1BB4EFA48()
{
  return 0x646568636163;
}

uint64_t sub_1BB4EFA58()
{
  return 0x64656C6F6F706572;
}

uint64_t sub_1BB4EFA70()
{
  return 0x6465646E61707865;
}

uint64_t FeedCursorKind.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB4EFAB4 + 4 * byte_1BB91FD07[*v0]))(0x657669746341, 0xE600000000000000);
}

uint64_t sub_1BB4EFAB4()
{
  return 1852138835;
}

uint64_t sub_1BB4EFAC4()
{
  return 0x6E657A6F7246;
}

uint64_t sub_1BB4EFAD4()
{
  return 0x4620666F20646E45;
}

uint64_t sub_1BB4EFAF4()
{
  return 0x646568636143;
}

uint64_t sub_1BB4EFB04()
{
  return 0x64656C6F6F706552;
}

uint64_t sub_1BB4EFB1C()
{
  return 0x6465646E61707845;
}

void sub_1BB4EFB34(char *a1)
{
  sub_1BB8062DC(*a1);
}

unint64_t sub_1BB4EFB44()
{
  unint64_t result;

  result = qword_1ED39C450;
  if (!qword_1ED39C450)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedCursorKind, &type metadata for FeedCursorKind);
    atomic_store(result, (unint64_t *)&qword_1ED39C450);
  }
  return result;
}

void sub_1BB4EFB88()
{
  char *v0;

  sub_1BAB0B8AC(0, *v0);
}

void sub_1BB4EFB94()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB4EFBCC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB4EFC58(uint64_t a1)
{
  char *v1;

  sub_1BAB0B8AC(a1, *v1);
}

NewsFeed::FeedCursorKind_optional sub_1BB4EFC60(Swift::String *a1)
{
  return FeedCursorKind.init(rawValue:)(*a1);
}

uint64_t sub_1BB4EFC6C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB4EFC98 + 4 * byte_1BB91FD15[*v0]))();
}

void sub_1BB4EFC98(_QWORD *a1@<X8>)
{
  *a1 = 1852138867;
  a1[1] = 0xE400000000000000;
}

void sub_1BB4EFCAC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6E657A6F7266;
  a1[1] = v1;
}

void sub_1BB4EFCC0(_QWORD *a1@<X8>)
{
  *a1 = 0x656546664F646E65;
  a1[1] = 0xE900000000000064;
}

void sub_1BB4EFCE0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x646568636163;
  a1[1] = v1;
}

void sub_1BB4EFCF4(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C6F6F706572;
  a1[1] = 0xE800000000000000;
}

uint64_t storeEnumTagSinglePayload for FeedCursorKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB4EFD70 + 4 * byte_1BB91FD28[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB4EFDA4 + 4 * byte_1BB91FD23[v4]))();
}

uint64_t sub_1BB4EFDA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4EFDAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4EFDB4);
  return result;
}

uint64_t sub_1BB4EFDC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4EFDC8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB4EFDCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4EFDD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedCursorKind()
{
  return &type metadata for FeedCursorKind;
}

uint64_t static CoverChannelViewLayout.makeCatalogLayout(context:factories:options:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = sub_1BB86DA38();
  v2 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86DA20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = a1[23];
  v10 = a1[24];
  __swift_project_boxed_opaque_existential_1(a1 + 20, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
  v11 = a1[23];
  v12 = a1[24];
  __swift_project_boxed_opaque_existential_1(a1 + 20, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 56))(v11, v12);
  FeedTag.coverImageAspectRatio.getter();
  if ((v13 & 1) != 0)
  {
    v16 = (unsigned int *)MEMORY[0x1E0DB61C0];
    goto LABEL_5;
  }
  result = FeedTag.coverImageAspectRatio.getter();
  if ((v15 & 1) == 0)
  {
    *v8 = result;
    v16 = (unsigned int *)MEMORY[0x1E0DB61D0];
LABEL_5:
    v17 = v22;
    v18 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *v16, v5);
    v19 = MEMORY[0x1E0C80A78](v18);
    *(&v21 - 4) = (uint64_t)v8;
    *((double *)&v21 - 3) = v19;
    *(&v21 - 2) = (uint64_t)a1;
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DB6208], v17);
    sub_1BAA8C384(0, (unint64_t *)&qword_1EF2AECF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
    swift_allocObject();
    v20 = sub_1BB86DB34();
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
    return v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB4EFFFC(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t (*v14)(void);
  _BYTE v16[16];
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BAA8C4D4(0, &qword_1EF2AED08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = &v16[-v12];
  v20 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v10 + 104))(&v16[-v12], *MEMORY[0x1E0DB6410], v9, v11);
  v17 = a2;
  v18 = a4;
  v19 = a3;
  v14 = MEMORY[0x1E0DB5DD0];
  sub_1BAA8C384(0, &qword_1EF2AED10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAA8C400(&qword_1EF2AED18, &qword_1EF2AED10, (uint64_t (*)(uint64_t, _QWORD *))v14, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1BB4F013C(uint64_t a1, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD);
  uint64_t (*v15)(uint64_t, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t *, _QWORD, uint64_t);
  void (*v37)(uint64_t *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD);
  void (*v50)(uint64_t *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unsigned int v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;

  v54 = a3;
  sub_1BAA8C4D4(0, &qword_1EF2AED08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v46 - v10);
  v59 = a1;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4024000000000000;
  *v11 = v12;
  v14 = *(void (**)(_QWORD))(v9 + 104);
  v55 = *MEMORY[0x1E0DB63F0];
  v13 = v55;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v14)(v11, v55, v8);
  v15 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA8C384(0, &qword_1EF2AED20, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  v18 = sub_1BAA8C400(&qword_1EF2AED28, &qword_1EF2AED20, v15, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v19 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v19(v11, v8);
  v59 = a1;
  v20 = *MEMORY[0x1E0DB6410];
  v49 = v14;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v14)(v11, v20, v8);
  v58 = a2;
  v48 = v18;
  v51 = v17;
  sub_1BB86D4BC();
  v19(v11, v8);
  v50 = v19;
  v53 = a1;
  v59 = a1;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = 0x4024000000000000;
  *v11 = v21;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v14)(v11, v13, v8);
  sub_1BB86D4EC();
  v19(v11, v8);
  v59 = a1;
  sub_1BA71C838();
  v23 = v22;
  v52 = v22;
  v47 = swift_allocBox();
  v25 = v24;
  v46 = (uint64_t *)((char *)v24 + *(int *)(v23 + 48));
  v26 = sub_1BB86D894();
  v27 = swift_allocBox();
  v29 = v28;
  v30 = swift_allocObject();
  *(double *)(v30 + 16) = a4 + 12.0;
  *v29 = v30;
  v31 = *(void (**)(void))(*(_QWORD *)(v26 - 8) + 104);
  ((void (*)(uint64_t *, _QWORD, uint64_t))v31)(v29, *MEMORY[0x1E0DB5FA0], v26);
  *v25 = v27;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v31)(v25, *MEMORY[0x1E0DB5FA8], v26);
  v32 = swift_allocObject();
  v33 = v54;
  v34 = v54[23];
  v35 = v54[24];
  __swift_project_boxed_opaque_existential_1(v54 + 20, v34);
  *(double *)(v32 + 16) = (*(double (**)(uint64_t, uint64_t))(v35 + 32))(v34, v35);
  *v46 = v32;
  v31();
  *v11 = v47;
  LODWORD(v47) = *MEMORY[0x1E0DB63D0];
  v36 = (void (*)(uint64_t *, _QWORD, uint64_t))v49;
  v49(v11);
  v57 = v33;
  sub_1BB86D498();
  v37 = v50;
  v50(v11, v8);
  v38 = v53;
  v59 = v53;
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = 0x401C000000000000;
  *v11 = v39;
  v36(v11, v55, v8);
  sub_1BB86D4EC();
  v37(v11, v8);
  v59 = v38;
  v40 = v52;
  v41 = swift_allocBox();
  v43 = v42 + *(int *)(v40 + 48);
  ((void (*)(uint64_t, _QWORD, uint64_t))v31)(v42, *MEMORY[0x1E0DB5F98], v26);
  ((void (*)(uint64_t, _QWORD, uint64_t))v31)(v43, *MEMORY[0x1E0DB5FB8], v26);
  *v11 = v41;
  v36(v11, v47, v8);
  v56 = v54;
  sub_1BB86D498();
  v37(v11, v8);
  v59 = v53;
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = 0x4038000000000000;
  *v11 = v44;
  v36(v11, v55, v8);
  sub_1BB86D4EC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v37)(v11, v8);
}

uint64_t sub_1BB4F0674(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB4F013C(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 32), *(double *)(v1 + 24));
}

uint64_t sub_1BB4F0684()
{
  return swift_deallocObject();
}

uint64_t sub_1BB4F0694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, _QWORD *);
  _QWORD v16[2];

  sub_1BAA8C4D4(0, &qword_1EF2AED08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v16 - v7);
  v16[1] = a1;
  swift_getKeyPath();
  v9 = sub_1BB86DA2C();
  v10 = swift_allocBox();
  v12 = v11;
  v13 = sub_1BB86DA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, a2, v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v12, *MEMORY[0x1E0DB61E8], v9);
  *v8 = v10;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63E0], v5);
  v14 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA8C384(0, &qword_1EF2AED20, MEMORY[0x1E0DB5A10]);
  sub_1BAA8C400(&qword_1EF2AED28, &qword_1EF2AED20, v14, MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB4F0848(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB4F0694(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB4F0850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, _QWORD *);
  id v27;
  _QWORD v28[2];

  sub_1BAA8C4D4(0, &qword_1EF2AED08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v28 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + 200);
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6398], v5);
    sub_1BAA8C470();
    sub_1BAA8C4D4(0, &qword_1EF2AED38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BB87CE70;
    v23 = v22 + v21;
    v24 = *MEMORY[0x1E0DB5C48];
    sub_1BAA8C4D4(0, &qword_1EF2AED40, MEMORY[0x1E0DB5C60]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E0DB5C68], v19);
    v26 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA8C384(0, &qword_1EF2AED20, MEMORY[0x1E0DB5A10]);
    sub_1BAA8C400(&qword_1EF2AED28, &qword_1EF2AED20, v26, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v27 = v17;
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB4F0B44(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB4F0850(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB4F0B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  void (*v27)(uint64_t, _QWORD, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t (*v30)(uint64_t, _QWORD *);
  uint64_t *v31;
  uint64_t v32;
  void (*v33)(uint64_t *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, _QWORD, uint64_t);
  id v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t KeyPath;
  void (*v52)(uint64_t *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v53 = a1;
  sub_1BAA8C4D4(0, &qword_1EF2AED08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  v50 = v6;
  v7 = v6;
  MEMORY[0x1E0C80A78](v4);
  v9 = (uint64_t *)((char *)&v40 - v8);
  v10 = (void *)sub_1BAA8C224(a2);
  v44 = v10;
  v55 = a1;
  KeyPath = swift_getKeyPath();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  v46 = v9;
  *v9 = v11;
  v12 = *MEMORY[0x1E0DB6340];
  v52 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 104);
  v52(v9, v12, v5);
  sub_1BAA8C470();
  v48 = v13;
  sub_1BAA8C4D4(0, &qword_1EF2AED38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v54 = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v17 = *(unsigned __int8 *)(v15 + 80);
  v41 = *(_QWORD *)(v15 + 72);
  v16 = v41;
  v18 = (v17 + 32) & ~v17;
  v45 = v18;
  v47 = v17 | 7;
  v19 = swift_allocObject();
  v42 = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1BB87A390;
  v20 = v19 + v18;
  *(_QWORD *)(v19 + v18) = 0x4034000000000000;
  v21 = *MEMORY[0x1E0DB6030];
  v22 = sub_1BB86D8F4();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104);
  v23(v20, v21, v22);
  v24 = *MEMORY[0x1E0DB6120];
  v25 = sub_1BB86D9B4();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104);
  v26(v20, v24, v25);
  v27 = *(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104);
  v28 = v54;
  v27(v20, *MEMORY[0x1E0DB5B98], v54);
  v43 = v27;
  v29 = (_QWORD *)(v20 + v16);
  *v29 = 0x4008000000000000;
  v23((uint64_t)v29, v21, v22);
  v26((uint64_t)v29, v24, v25);
  v27((uint64_t)v29, *MEMORY[0x1E0DB5BA8], v28);
  v30 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA8C384(0, &qword_1EF2AED20, MEMORY[0x1E0DB5A10]);
  sub_1BAA8C400(&qword_1EF2AED28, &qword_1EF2AED20, v30, MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  v44 = v44;
  v31 = v46;
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  v32 = v49;
  v33 = *(void (**)(uint64_t *, uint64_t))(v50 + 8);
  v33(v31, v49);
  v55 = v53;
  swift_getKeyPath();
  v52(v31, *MEMORY[0x1E0DB63D8], v32);
  v34 = v45;
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
  v36 = v35 + v34;
  v37 = *MEMORY[0x1E0DB5C58];
  sub_1BAA8C4D4(0, &qword_1EF2AED40, MEMORY[0x1E0DB5C60]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
  v43(v36, *MEMORY[0x1E0DB5C68], v54);
  sub_1BB86D4E0();

  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v33)(v31, v32);
}

uint64_t sub_1BB4F0F68(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB4F0B4C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB4F0F70()
{
  uint64_t v0;

  return swift_deallocObject();
}

char *sub_1BB4F0F94(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  Class v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  objc_super v24;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_onTap;
  sub_1BA563554();
  v13 = objc_allocWithZone(v12);
  v14 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v13, sel_init);
  v15 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_titleLabel;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton;
  *(_QWORD *)&v14[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_init);

  v24.receiver = v14;
  v24.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v24, sel_initWithFrame_, a1, a2, a3, a4);
  v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_titleLabel];
  v19 = v17;
  objc_msgSend(v19, sel_addSubview_, v18);
  v20 = *(void **)&v19[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton];
  objc_msgSend(v19, sel_addSubview_, v20);
  v21 = *(id *)&v19[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_onTap];
  v22 = v20;
  sub_1BB871368();

  return v19;
}

void *sub_1BB4F1154(uint64_t a1, double a2, double a3)
{
  char *v3;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  objc_super v12;

  v12.receiver = v3;
  v12.super_class = (Class)swift_getObjectType();
  v7 = (char *)objc_msgSendSuper2(&v12, sel_hitTest_withEvent_, a1, a2, a3);
  v8 = v7;
  if (v7)
  {
    if (v7 == v3)
    {

    }
    else
    {
      v9 = *(void **)&v3[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton];

      if (v8 != v9)
        return 0;
    }
    v8 = *(void **)&v3[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton];
    v10 = v8;
  }
  return v8;
}

uint64_t type metadata accessor for HiddenContentPlacardView()
{
  return objc_opt_self();
}

id sub_1BB4F12D4()
{
  id *v0;

  return objc_msgSend(*v0, sel_removeFromSuperview);
}

void sub_1BB4F12E4()
{
  sub_1BB4F1340((unint64_t *)&unk_1EF2C5B10, (uint64_t)&unk_1BB91FF04);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t sub_1BB4F131C()
{
  return sub_1BB4F1340(&qword_1EF2C5B08, (uint64_t)&unk_1BB91FECC);
}

uint64_t sub_1BB4F1340(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for HiddenContentPlacardView();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB4F137C()
{
  char *v0;
  uint64_t v1;
  Class v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_onTap;
  sub_1BA563554();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v3 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_titleLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_init);

  sub_1BB873EAC();
  __break(1u);
}

ValueMetadata *type metadata accessor for DebugFormatAccessibilitySection()
{
  return &type metadata for DebugFormatAccessibilitySection;
}

unint64_t sub_1BB4F1468()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000044;
  else
    return 0xD000000000000037;
}

_QWORD *NativeAdService.__allocating_init(contextBuilder:headlineService:adManager:adRequestManager:adRequestStore:)(__int128 *a1, __int128 *a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[19] = MEMORY[0x1E0DEE9E0];
  sub_1BA4CECCC(a1, (uint64_t)(v10 + 2));
  sub_1BA4CECCC(a2, (uint64_t)(v10 + 7));
  sub_1BA4CECCC(a3, (uint64_t)(v10 + 12));
  v10[17] = a4;
  v10[18] = a5;
  return v10;
}

_QWORD *NativeAdService.init(contextBuilder:headlineService:adManager:adRequestManager:adRequestStore:)(__int128 *a1, __int128 *a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[19] = MEMORY[0x1E0DEE9E0];
  sub_1BA4CECCC(a1, (uint64_t)(v5 + 2));
  sub_1BA4CECCC(a2, (uint64_t)(v5 + 7));
  sub_1BA4CECCC(a3, (uint64_t)(v5 + 12));
  v5[17] = a4;
  v5[18] = a5;
  return v5;
}

uint64_t NativeAdService.fetchNativeAd(placementIdentifier:build:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v5 = v4;
  v53 = a3;
  v54 = a4;
  v56 = *v4;
  v50 = sub_1BB871C08();
  v8 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB871D94();
  v51 = *(_QWORD *)(v11 - 8);
  v52 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB4F4564(0, &qword_1ED3BC270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  v55 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v55 + 64);
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v16);
  v57 = (uint64_t)&v46 - v17;
  sub_1BB86D1C8();
  v18 = sub_1BB86D258();
  swift_release();
  if ((v18 & 1) != 0)
    return sub_1BB4F1B48(a1, a2);
  v49 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3BA7F0 != -1)
    swift_once();
  v20 = (void *)qword_1ED476858;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v21 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v21 + 32) = a1;
  *(_QWORD *)(v21 + 40) = a2;
  v22 = v20;
  swift_bridgeObjectRetain();
  v23 = sub_1BB87330C();
  sub_1BB86EF44("Attempting to fetch native ad info, placement=%{public}@", 56, 2, &dword_1BA493000, v22, v23, v21);

  swift_bridgeObjectRelease();
  v48 = v5;
  sub_1BB4F4318();
  sub_1BB8719C8();
  v47 = a1;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0D52980], v50);
  swift_bridgeObjectRetain();
  v24 = sub_1BB871D88();
  MEMORY[0x1E0C80A78](v24);
  v25 = v54;
  *(&v46 - 2) = v53;
  *(&v46 - 1) = v25;
  v26 = v57;
  sub_1BB871CF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v13, v52);
  v54 = sub_1BA657D64();
  v27 = (void *)sub_1BB87345C();
  v28 = swift_allocObject();
  swift_weakInit();
  v29 = v26;
  v30 = v49;
  sub_1BB4F441C(v26, v49);
  v31 = *(unsigned __int8 *)(v55 + 80);
  v32 = (v31 + 24) & ~v31;
  v55 = v31 | 7;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v28;
  sub_1BB4F46A0(v30, v33 + v32);
  v34 = (uint64_t *)(v33 + ((v15 + 7 + v32) & 0xFFFFFFFFFFFFFFF8));
  v35 = v47;
  *v34 = v47;
  v34[1] = a2;
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1ED3B0B90);
  swift_bridgeObjectRetain();
  sub_1BB86EBFC();

  swift_release();
  sub_1BB4F441C(v29, v30);
  v36 = (v31 + 16) & ~v31;
  v37 = swift_allocObject();
  sub_1BB4F46A0(v30, v37 + v36);
  v38 = (uint64_t *)(v37 + ((v15 + 7 + v36) & 0xFFFFFFFFFFFFFFF8));
  *v38 = v35;
  v38[1] = a2;
  swift_bridgeObjectRetain();
  v39 = (void *)sub_1BB86E854();
  sub_1BB871B24();
  sub_1BB86E968();
  swift_release();
  swift_release();

  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v35;
  *(_QWORD *)(v40 + 24) = a2;
  swift_bridgeObjectRetain();
  v41 = (void *)sub_1BB86E854();
  sub_1BB872208();
  sub_1BB86E980();
  swift_release();
  swift_release();

  v42 = (void *)sub_1BB87345C();
  v43 = swift_allocObject();
  swift_weakInit();
  v44 = (_QWORD *)swift_allocObject();
  v44[2] = v43;
  v44[3] = v35;
  v44[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  v45 = sub_1BB86E9EC();
  swift_release();

  swift_release();
  sub_1BB4F4908(v57);
  swift_release();
  return v45;
}

uint64_t sub_1BB4F1B48(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE v21[6];
  unint64_t v22;

  if (qword_1ED3BA7F0 != -1)
    swift_once();
  v4 = (void *)qword_1ED476858;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1BA6A2D8C();
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  v8 = v4;
  swift_bridgeObjectRetain();
  v9 = sub_1BB87330C();
  sub_1BB86EF44("Fetching overridden native ad, placement=%{public}@", 51, 2, &dword_1BA493000, v8, v9, v5);

  swift_bridgeObjectRelease();
  sub_1BB86D1C8();
  sub_1BB86D1BC();
  swift_release();
  sub_1BA50AD30(&qword_1EF2C5B20, v10, (uint64_t (*)(uint64_t))type metadata accessor for NativeAdService, (uint64_t)&protocol conformance descriptor for NativeAdService);
  sub_1BB86D210();
  v11 = swift_release();
  v12 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v12 = *(_QWORD *)v21 & 0xFFFFFFFFFFFFLL;
  if (v12)
  {
    MEMORY[0x1E0C80A78](v11);
    sub_1BA768D08();
    sub_1BB86EC14();
    swift_bridgeObjectRelease();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a1;
    *(_QWORD *)(v13 + 24) = a2;
    swift_bridgeObjectRetain();
    v14 = (void *)sub_1BB86E854();
    sub_1BB872208();
    v15 = sub_1BB86E98C();
    swift_release();
    swift_release();

  }
  else
  {
    swift_bridgeObjectRelease();
    v16 = (id)qword_1ED476858;
    v17 = sub_1BB8732F4();
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v18 + 56) = v6;
    *(_QWORD *)(v18 + 64) = v7;
    *(_QWORD *)(v18 + 32) = a1;
    *(_QWORD *)(v18 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_1BB86EF44("Fetching native ad headline failed, overridden ad has empty article identifier, placementID=%{public}@", 102, 2, &dword_1BA493000, v16, v17, v18);

    swift_bridgeObjectRelease();
    sub_1BB4F4A1C();
    swift_allocError();
    *v19 = 0;
    sub_1BA4B07F0(0, &qword_1ED3B0838, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53828], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9C8();
  }
  return v15;
}

uint64_t sub_1BB4F1E8C(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB4F4318();
  sub_1BB8719C8();
  sub_1BB871CB0();
  sub_1BB871D40();
  sub_1BB871D94();
  sub_1BA50AD30(&qword_1ED3D2ED8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52C40], MEMORY[0x1E0D52C38]);
  sub_1BB871ED8();
  return swift_release();
}

uint64_t sub_1BB4F1F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a4;
  v33 = a3;
  v6 = MEMORY[0x1E0D53870];
  sub_1BB4F4A60(0, (unint64_t *)&unk_1ED3B0C30, &qword_1ED3B0C28, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v30 - v8;
  sub_1BB4F4564(0, &qword_1ED3B0C28, (uint64_t (*)(uint64_t, _QWORD *))v6);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v30 - v13;
  sub_1BB4F4564(0, &qword_1ED3BC270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v30 - v16;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v19 = (_QWORD *)Strong;
    sub_1BB4F441C(a2, (uint64_t)v17);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v9, 1, 1, v11);
      sub_1BB872100();
      sub_1BA604728((uint64_t)v9, (uint64_t)&unk_1ED3B0C30, (uint64_t)&qword_1ED3B0C28, (uint64_t)MEMORY[0x1E0D53870], (uint64_t (*)(_QWORD))sub_1BB4F4A60);
      sub_1BA5B089C(0, &qword_1ED3B0828, (unint64_t *)&unk_1ED3B0B90, MEMORY[0x1E0D530D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v20 = sub_1BB86E9C8();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1BB4F4610();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
      v23 = v19[15];
      v30[1] = v19[16];
      v31 = __swift_project_boxed_opaque_existential_1(v19 + 12, v23);
      sub_1BB4F4318();
      sub_1BB8719C8();
      sub_1BB871CB0();
      v24 = sub_1BB871D40();
      v32 = v11;
      v25 = v24;
      sub_1BB871D94();
      sub_1BA50AD30(&qword_1ED3D2ED8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52C40], MEMORY[0x1E0D52C38]);
      v20 = (uint64_t)v31;
      sub_1BB871B30();
      if (!v4)
      {
        swift_release();
        v26 = v34[0];
        v27 = MEMORY[0x1E0D52D08];
        v35 = v25;
        v36 = MEMORY[0x1E0D52D08];
        swift_beginAccess();
        v28 = v37;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1BB4AA964((uint64_t)v34, v33, v28);
        swift_endAccess();
        v35 = v25;
        v36 = v27;
        v34[0] = v26;
        sub_1BA5B089C(0, &qword_1ED3B0828, (unint64_t *)&unk_1ED3B0B90, MEMORY[0x1E0D530D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        swift_retain();
        v20 = sub_1BB86E9E0();
      }
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v32);
    }
  }
  else
  {
    v21 = sub_1BB86DF00();
    sub_1BA50AD30((unint64_t *)&unk_1EF2C5B30, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB35A0], MEMORY[0x1E0DB35A8]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v22, *MEMORY[0x1E0DB3590], v21);
    sub_1BA5B089C(0, &qword_1ED3B0828, (unint64_t *)&unk_1ED3B0B90, MEMORY[0x1E0D530D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9C8();
  }
  return v20;
}

uint64_t sub_1BB4F245C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BB4F4564(0, &qword_1ED3B0C28, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  sub_1BB4F4564(0, &qword_1ED3BC270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - v10;
  sub_1BB4F441C(a2, (uint64_t)&v14 - v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    sub_1BA4B07F0(0, &qword_1EF2C5B28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9C8();
  }
  else
  {
    sub_1BB4F4610();
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_1BB872124();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v12 = sub_1BB871F14();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v12;
}

uint64_t sub_1BB4F262C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  _BYTE *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v57 = a4;
  v56 = a3;
  v58 = a2;
  v5 = sub_1BB871AC4();
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  MEMORY[0x1E0C80A78](v5);
  v47 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB872208();
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB4F4A60(0, (unint64_t *)&unk_1ED3B0B20, &qword_1ED3B0B18, MEMORY[0x1E0D52868]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - v10;
  sub_1BB4F4A60(0, (unint64_t *)&unk_1ED3B0C30, &qword_1ED3B0C28, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
  MEMORY[0x1E0C80A78](v12);
  v50 = (char *)&v47 - v13;
  v14 = sub_1BB871AB8();
  v54 = *(_QWORD *)(v14 - 8);
  v55 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB871B18();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BB871B24();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v22 + 16))(v25, a1, v21, v23);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v25, v21);
  if (v26 == *MEMORY[0x1E0D52710])
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v25, v17);
    v27 = sub_1BB871AA0();
    a1 = sub_1BB4F2C10(v56, v57, (uint64_t)v20, v27);
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else if (v26 == *MEMORY[0x1E0D526B0])
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v16, v25, v55);
    v49 = sub_1BB871AA0();
    v28 = sub_1BB872154();
    sub_1BA50AD30(&qword_1ED3AFC18, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53728], MEMORY[0x1E0D53730]);
    v29 = (void *)swift_allocError();
    v31 = v30;
    sub_1BB871AAC();
    *v31 = sub_1BB86EDDC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v31, *MEMORY[0x1E0D53720], v28);
    v32 = *MEMORY[0x1E0D52860];
    v33 = MEMORY[0x1E0D52868];
    sub_1BB4F4564(0, &qword_1ED3B0B18, MEMORY[0x1E0D52868]);
    v35 = v34;
    v36 = *(_QWORD *)(v34 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 104))(v11, v32, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v11, 0, 1, v35);
    v37 = (uint64_t)v50;
    sub_1BB871B9C();
    sub_1BA604728((uint64_t)v11, (uint64_t)&unk_1ED3B0B20, (uint64_t)&qword_1ED3B0B18, v33, (uint64_t (*)(_QWORD))sub_1BB4F4A60);
    sub_1BB872100();
    swift_release();
    sub_1BA604728(v37, (uint64_t)&unk_1ED3B0C30, (uint64_t)&qword_1ED3B0C28, (uint64_t)MEMORY[0x1E0D53870], (uint64_t (*)(_QWORD))sub_1BB4F4A60);

    v38 = v53;
    v39 = v54;
    v40 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v53, v16, v55);
    (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v38, *MEMORY[0x1E0D53818], v52);
    sub_1BA4B07F0(0, &qword_1ED3B0838, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53828], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    a1 = sub_1BB86E9E0();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v40);
  }
  else if (v26 == *MEMORY[0x1E0D52708])
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
    v42 = v47;
    v41 = v48;
    v43 = v49;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v47, v25, v49);
    v44 = v53;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v53, v42, v43);
    (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v44, *MEMORY[0x1E0D53820], v52);
    sub_1BA4B07F0(0, &qword_1ED3B0838, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53828], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    a1 = sub_1BB86E9E0();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  }
  else
  {
    sub_1BB4F4A1C();
    swift_allocError();
    *v46 = 1;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  }
  return a1;
}

uint64_t sub_1BB4F2C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v8 = *v4;
  v43 = a4;
  v44 = v8;
  v9 = sub_1BB871B18();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v46 = v11;
  v42 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3BA7F0 != -1)
    swift_once();
  v12 = (void *)qword_1ED476858;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87A390;
  v14 = v12;
  v15 = sub_1BB871B0C();
  v17 = v16;
  v18 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v19 = sub_1BA6A2D8C();
  *(_QWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 40) = v17;
  *(_QWORD *)(v13 + 96) = v18;
  *(_QWORD *)(v13 + 104) = v19;
  *(_QWORD *)(v13 + 64) = v19;
  *(_QWORD *)(v13 + 72) = a1;
  *(_QWORD *)(v13 + 80) = a2;
  swift_bridgeObjectRetain();
  v20 = sub_1BB87330C();
  sub_1BB86EF44("Attempting to fetch native ad headline, articleID=%{public}@, placementID=%{public}@", 84, 2, &dword_1BA493000, v14, v20, v13);

  v21 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v21);
  v41 = a3;
  *(&v35 - 4) = a3;
  *(&v35 - 3) = a1;
  v22 = v45;
  *(&v35 - 2) = a2;
  *(&v35 - 1) = v22;
  sub_1BA768D08();
  v37 = sub_1BB86EC14();
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v23 = v42;
  v40(v42, a3, v9);
  v24 = v9;
  v25 = *(unsigned __int8 *)(v10 + 80);
  v26 = (v25 + 32) & ~v25;
  v39 = v25 | 7;
  v27 = (v46 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a1;
  *(_QWORD *)(v28 + 24) = a2;
  v38 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v38(v28 + v26, v23, v24);
  v36 = a1;
  v29 = v43;
  *(_QWORD *)(v28 + v27) = v43;
  swift_bridgeObjectRetain();
  swift_retain();
  v30 = (void *)sub_1BB86E854();
  sub_1BB872208();
  sub_1BB86E980();
  swift_release();
  swift_release();

  v40(v23, v41, v24);
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v36;
  v31[3] = a2;
  v31[4] = v29;
  v38((uint64_t)v31 + ((v25 + 40) & ~v25), v23, v24);
  swift_bridgeObjectRetain();
  swift_retain();
  v32 = (void *)sub_1BB86E854();
  v33 = sub_1BB86E9B0();
  swift_release();
  swift_release();

  return v33;
}

uint64_t sub_1BB4F2F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  _OWORD v6[2];
  uint64_t v7;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BB4AA964((uint64_t)v6, a2, a3);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB4F3018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;

  v7 = sub_1BB871B0C();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a4 + 56), *(_QWORD *)(a4 + 80));
    sub_1BB871B0C();
    v11 = HeadlineServiceType.headline(for:purpose:)();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v13 = (id)qword_1ED476858;
    v14 = sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v15 + 32) = a2;
    *(_QWORD *)(v15 + 40) = a3;
    swift_bridgeObjectRetain();
    sub_1BB86EF44("Fetching native ad headline failed, native ad info has empty article identifier, placementID=%{public}@", 103, 2, &dword_1BA493000, v13, v14, v15);

    swift_bridgeObjectRelease();
    sub_1BB4F4A1C();
    swift_allocError();
    *v16 = 0;
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B08E0, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9C8();
  }
}

id sub_1BB4F320C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id result;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _BYTE *v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;

  v7 = v6;
  v90 = a6;
  v93 = a5;
  v84 = a2;
  v11 = sub_1BB871B18();
  v85 = *(_QWORD *)(v11 - 8);
  v86 = v11;
  MEMORY[0x1E0C80A78](v11);
  v87 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB872208();
  v88 = *(_QWORD *)(v13 - 8);
  v89 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3C2280, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v16);
  v82 = (char *)&v76 - v17;
  sub_1BB4F4A60(0, (unint64_t *)&unk_1ED3B0B20, &qword_1ED3B0B18, MEMORY[0x1E0D52868]);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v76 - v19;
  v21 = MEMORY[0x1E0D53870];
  sub_1BB4F4A60(0, (unint64_t *)&unk_1ED3B0C30, &qword_1ED3B0C28, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
  MEMORY[0x1E0C80A78](v22);
  v91 = (char *)&v76 - v23;
  sub_1BB4F4564(0, &qword_1ED3B0C28, (uint64_t (*)(uint64_t, _QWORD *))v21);
  v25 = v24;
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v76 - v27;
  v29 = *a1;
  objc_opt_self();
  v30 = (void *)swift_dynamicCastObjCClass();
  v31 = qword_1ED3BA7F0;
  v94 = v30;
  if (v30)
  {
    v77 = v28;
    v79 = v26;
    v80 = v15;
    v83 = v25;
    v92 = a4;
    swift_unknownObjectRetain();
    if (v31 != -1)
      swift_once();
    v81 = v7;
    v32 = (void *)qword_1ED476858;
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87A390;
    v34 = v32;
    v35 = v94;
    result = objc_msgSend(v94, sel_articleID);
    if (result)
    {
      v37 = result;
      v78 = v29;
      v38 = sub_1BB8729A0();
      v40 = v39;

      v41 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
      v42 = sub_1BA6A2D8C();
      *(_QWORD *)(v33 + 32) = v38;
      *(_QWORD *)(v33 + 40) = v40;
      *(_QWORD *)(v33 + 96) = v41;
      *(_QWORD *)(v33 + 104) = v42;
      *(_QWORD *)(v33 + 64) = v42;
      *(_QWORD *)(v33 + 72) = a3;
      *(_QWORD *)(v33 + 80) = v92;
      swift_bridgeObjectRetain();
      v43 = sub_1BB87330C();
      sub_1BB86EF44("Fetched native ad headline, articleID=%{public}@, placementID=%{public}@", 72, 2, &dword_1BA493000, v34, v43, v33);

      swift_bridgeObjectRelease();
      objc_msgSend(v35, sel_setDisplayAsNativeAd_, 1);
      objc_msgSend(v35, sel_setSponsored_, 1);
      sub_1BB871AF4();
      if (v44)
      {
        v45 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
      }
      else
      {
        v45 = 0;
      }
      v84 = a3;
      objc_msgSend(v35, sel_setSponsoredBy_, v45);

      sub_1BB871AE8();
      v52 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v35, sel_setNativeAdCampaignData_, v52);

      v53 = sub_1BB871ADC();
      v55 = (uint64_t)v91;
      if (v54)
      {
        v56 = HIBYTE(v54) & 0xF;
        if ((v54 & 0x2000000000000000) == 0)
          v56 = v53 & 0xFFFFFFFFFFFFLL;
        if (v56)
        {
          v57 = (void *)sub_1BB872970();
          swift_bridgeObjectRelease();
          objc_msgSend(v35, sel_setTitle_, v57);

        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v58 = *MEMORY[0x1E0D52860];
      v59 = MEMORY[0x1E0D52868];
      sub_1BB4F4564(0, &qword_1ED3B0B18, MEMORY[0x1E0D52868]);
      v61 = v60;
      v62 = *(_QWORD *)(v60 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 104))(v20, v58, v60);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v20, 0, 1, v61);
      sub_1BB871B9C();
      sub_1BA604728((uint64_t)v20, (uint64_t)&unk_1ED3B0B20, (uint64_t)&qword_1ED3B0B18, v59, (uint64_t (*)(_QWORD))sub_1BB4F4A60);
      v63 = v79;
      v64 = v83;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v55, 1, v83) == 1)
      {
        sub_1BA604728(v55, (uint64_t)&unk_1ED3B0C30, (uint64_t)&qword_1ED3B0C28, (uint64_t)MEMORY[0x1E0D53870], (uint64_t (*)(_QWORD))sub_1BB4F4A60);
        v65 = v89;
        v67 = v87;
        v66 = v88;
        v68 = v93;
      }
      else
      {
        v69 = v77;
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v77, v55, v64);
        v68 = v93;
        sub_1BB871AD0();
        v70 = sub_1BB87216C();
        v71 = (uint64_t)v82;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v82, 1, 1, v70);
        sub_1BB872118();
        swift_bridgeObjectRelease();
        sub_1BA604728(v71, (uint64_t)&qword_1ED3C2280, (uint64_t)MEMORY[0x1E0D53750], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v69, v83);
        v66 = v88;
        v65 = v89;
        v67 = v87;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v67, v68, v86);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v72 = v80;
      sub_1BB871D1C();
      v73 = *MEMORY[0x1E0D537F0];
      v74 = sub_1BB8721FC();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 104))(v72, v73, v74);
      (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v72, *MEMORY[0x1E0D53810], v65);
      sub_1BA4B07F0(0, &qword_1ED3B0838, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53828], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v75 = sub_1BB86E9E0();
      swift_unknownObjectRelease();
      return (id)v75;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v46 = (id)qword_1ED476858;
    v47 = sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1BB87A390;
    v49 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v48 + 56) = MEMORY[0x1E0DEA968];
    v50 = sub_1BA6A2D8C();
    *(_QWORD *)(v48 + 32) = 0xD000000000000037;
    *(_QWORD *)(v48 + 40) = 0x80000001BB98F380;
    *(_QWORD *)(v48 + 96) = v49;
    *(_QWORD *)(v48 + 104) = v50;
    *(_QWORD *)(v48 + 64) = v50;
    *(_QWORD *)(v48 + 72) = a3;
    *(_QWORD *)(v48 + 80) = a4;
    swift_bridgeObjectRetain();
    sub_1BB86EF44("Fetching native ad headline failed, error=%{public}, placementID=%{public}@@", 76, 2, &dword_1BA493000, v46, v47, v48);

    swift_bridgeObjectRelease();
    sub_1BB4F4A1C();
    swift_allocError();
    *v51 = 0;
    sub_1BA4B07F0(0, &qword_1ED3B0838, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53828], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return (id)sub_1BB86E9C8();
  }
  return result;
}

uint64_t sub_1BB4F3A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v27 = a5;
  v28 = a6;
  v25[1] = a2;
  v26 = a3;
  sub_1BB4F4A60(0, (unint64_t *)&unk_1ED3B0B20, &qword_1ED3B0B18, MEMORY[0x1E0D52868]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - v9;
  sub_1BB4F4A60(0, (unint64_t *)&unk_1ED3B0C30, &qword_1ED3B0C28, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v25 - v12;
  if (qword_1ED3BA7F0 != -1)
    swift_once();
  v14 = (id)qword_1ED476858;
  v15 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BB87A390;
  v30 = 0;
  v31 = 0xE000000000000000;
  v29 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  v18 = v30;
  v17 = v31;
  v19 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
  v20 = sub_1BA6A2D8C();
  *(_QWORD *)(v16 + 32) = v18;
  *(_QWORD *)(v16 + 40) = v17;
  *(_QWORD *)(v16 + 96) = v19;
  *(_QWORD *)(v16 + 104) = v20;
  v21 = v26;
  *(_QWORD *)(v16 + 64) = v20;
  *(_QWORD *)(v16 + 72) = v21;
  *(_QWORD *)(v16 + 80) = a4;
  swift_bridgeObjectRetain();
  sub_1BB86EF44("Fetching native ad headline failed, error=%{public}@, placementID=%{public}@", 76, 2, &dword_1BA493000, v14, v15, v16);

  swift_bridgeObjectRelease();
  v22 = MEMORY[0x1E0D52868];
  sub_1BB4F4564(0, &qword_1ED3B0B18, MEMORY[0x1E0D52868]);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 1, 1, v23);
  sub_1BB871B9C();
  sub_1BA604728((uint64_t)v10, (uint64_t)&unk_1ED3B0B20, (uint64_t)&qword_1ED3B0B18, v22, (uint64_t (*)(_QWORD))sub_1BB4F4A60);
  sub_1BB872100();
  sub_1BA604728((uint64_t)v13, (uint64_t)&unk_1ED3B0C30, (uint64_t)&qword_1ED3B0C28, (uint64_t)MEMORY[0x1E0D53870], (uint64_t (*)(_QWORD))sub_1BB4F4A60);
  return sub_1BB871B00();
}

id sub_1BB4F3D28@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id result;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;

  v5 = v4;
  v50 = a1;
  v9 = sub_1BB86D198();
  v47 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v12 = swift_dynamicCastObjCClass();
  v13 = qword_1ED3BA7F0;
  if (v12)
  {
    v14 = (void *)v12;
    v44 = a4;
    v45 = v5;
    v46 = a3;
    swift_unknownObjectRetain();
    if (v13 != -1)
      swift_once();
    v43 = v9;
    v15 = a2;
    v16 = (void *)qword_1ED476858;
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BB87A390;
    v18 = v16;
    result = objc_msgSend(v14, sel_articleID);
    if (result)
    {
      v20 = result;
      v21 = sub_1BB8729A0();
      v23 = v22;

      v24 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
      v25 = sub_1BA6A2D8C();
      *(_QWORD *)(v17 + 32) = v21;
      *(_QWORD *)(v17 + 40) = v23;
      *(_QWORD *)(v17 + 96) = v24;
      *(_QWORD *)(v17 + 104) = v25;
      *(_QWORD *)(v17 + 64) = v25;
      *(_QWORD *)(v17 + 72) = v15;
      v42 = v15;
      *(_QWORD *)(v17 + 80) = v46;
      swift_bridgeObjectRetain();
      v26 = sub_1BB87330C();
      sub_1BB86EF44("Fetched native ad headline, articleID=%{public}@, placementID=%{public}@", 72, 2, &dword_1BA493000, v18, v26, v17);

      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setDisplayAsNativeAd_, 1);
      objc_msgSend(v14, sel_setSponsored_, 1);
      sub_1BB86D1C8();
      sub_1BB86D180();
      swift_release();
      type metadata accessor for NativeAdService();
      sub_1BA50AD30(&qword_1EF2C5B20, v27, (uint64_t (*)(uint64_t))type metadata accessor for NativeAdService, (uint64_t)&protocol conformance descriptor for NativeAdService);
      sub_1BB86D210();
      swift_release();
      v28 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setSponsoredBy_, v28);

      sub_1BB86D1C8();
      sub_1BB86D1B0();
      swift_release();
      sub_1BB86D210();
      swift_release();
      v29 = HIBYTE(v49) & 0xF;
      if ((v49 & 0x2000000000000000) == 0)
        v29 = v48 & 0xFFFFFFFFFFFFLL;
      if (v29)
      {
        v30 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setTitle_, v30);

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB86D1C8();
      sub_1BB86D1A4();
      swift_release();
      sub_1BB86D210();
      swift_release();
      sub_1BB86D18C();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v43);
      v37 = v44;
      sub_1BB871F2C();
      swift_unknownObjectRelease();
      v38 = *MEMORY[0x1E0D537E0];
      v39 = sub_1BB8721FC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
      v40 = *MEMORY[0x1E0D53810];
      v41 = sub_1BB872208();
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v37, v40, v41);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v31 = (id)qword_1ED476858;
    v32 = sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87A390;
    v34 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
    v35 = sub_1BA6A2D8C();
    *(_QWORD *)(v33 + 32) = 0xD000000000000037;
    *(_QWORD *)(v33 + 40) = 0x80000001BB98F380;
    *(_QWORD *)(v33 + 96) = v34;
    *(_QWORD *)(v33 + 104) = v35;
    *(_QWORD *)(v33 + 64) = v35;
    *(_QWORD *)(v33 + 72) = a2;
    *(_QWORD *)(v33 + 80) = a3;
    swift_bridgeObjectRetain();
    sub_1BB86EF44("Fetching native ad headline failed, error=%{public}, placementID=%{public}@@", 76, 2, &dword_1BA493000, v31, v32, v33);

    swift_bridgeObjectRelease();
    sub_1BB4F4A1C();
    swift_allocError();
    *v36 = 0;
    return (id)swift_willThrow();
  }
  return result;
}

uint64_t NativeAdService.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NativeAdService.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB4F42F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return NativeAdService.fetchNativeAd(placementIdentifier:build:)(a1, a2, a3, a4);
}

void sub_1BB4F4318()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3B0BE8)
  {
    sub_1BB871CB0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D52C40];
    sub_1BB871D40();
    sub_1BB871D94();
    sub_1BA50AD30(&qword_1ED3D2ED8, 255, v0, MEMORY[0x1E0D52C38]);
    v1 = sub_1BB8720AC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3B0BE8);
  }
}

uint64_t sub_1BB4F43E0(_QWORD *a1)
{
  return sub_1BB4F1E8C(a1);
}

uint64_t sub_1BB4F43F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB4F441C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB4F4564(0, &qword_1ED3BC270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB4F4470()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_1BB4F4564(0, &qword_1ED3BC270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    sub_1BB4F4564(0, &qword_1ED3B0C28, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
    sub_1BB4F4610();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB4F4564(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  unint64_t v8;
  uint64_t v9;
  _QWORD v10[4];

  if (!*a2)
  {
    v6 = sub_1BB871CB0();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D52C40];
    v10[0] = v6;
    v10[1] = sub_1BB871D94();
    v10[2] = sub_1BA50AD30(&qword_1ED3D2ED8, 255, v7, MEMORY[0x1E0D52C38]);
    v10[3] = MEMORY[0x1E0D52DB0];
    v8 = a3(a1, v10);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BB4F4610()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B0C20)
  {
    sub_1BB4F4564(255, &qword_1ED3B0C28, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
    sub_1BB4F4564(255, (unint64_t *)&qword_1ED3B0C00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D536E8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B0C20);
  }
}

uint64_t sub_1BB4F46A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB4F4564(0, &qword_1ED3BC270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB4F46F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;

  sub_1BB4F4564(0, &qword_1ED3BC270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (uint64_t *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1BB4F1F94(*(_QWORD *)(v0 + 16), v0 + v3, *v4, v4[1]);
}

uint64_t sub_1BB4F4760()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_1BB4F4564(0, &qword_1ED3BC270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    sub_1BB4F4564(0, &qword_1ED3B0C28, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
    sub_1BB4F4610();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB4F4848(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BB4F4564(0, &qword_1ED3BC270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1BB4F245C(a1, v1 + ((v4 + 16) & ~v4));
}

uint64_t sub_1BB4F48B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB4F262C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BB4F48D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB4F48FC()
{
  uint64_t *v0;

  return sub_1BB4F2F70(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BB4F4908(uint64_t a1)
{
  uint64_t v2;

  sub_1BB4F4564(0, &qword_1ED3BC270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of NativeAdServiceType.fetchNativeAd(placementIdentifier:build:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t method lookup function for NativeAdService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NativeAdService.__allocating_init(contextBuilder:headlineService:adManager:adRequestManager:adRequestStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1BB4F4970()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + 56), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 80));
  return HeadlineServiceType.headline(for:purpose:)();
}

uint64_t sub_1BB4F49E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1BB4F4A04@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB4F3D28(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_1BB4F4A1C()
{
  unint64_t result;

  result = qword_1ED39E560;
  if (!qword_1ED39E560)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9200C0, &type metadata for NativeAdService.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED39E560);
  }
  return result;
}

void sub_1BB4F4A60(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BB4F4564(255, a3, a4);
    v5 = sub_1BB873A2C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BB4F4AB4()
{
  uint64_t *v0;

  return sub_1BB4F3018(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1BB4F4AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BB871B18();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

id sub_1BB4F4B60(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1BB871B18() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1BB4F320C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BB4F4BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BB871B18();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BB4F4C4C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB871B18() - 8) + 80);
  return sub_1BB4F3A54(a1, a2, v2[2], v2[3], v2[4], (uint64_t)v2 + ((v5 + 40) & ~v5));
}

uint64_t storeEnumTagSinglePayload for NativeAdService.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB4F4CEC + 4 * byte_1BB91FF65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB4F4D20 + 4 * asc_1BB91FF60[v4]))();
}

uint64_t sub_1BB4F4D20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4F4D28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4F4D30);
  return result;
}

uint64_t sub_1BB4F4D3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4F4D44);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB4F4D48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4F4D50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NativeAdService.Errors()
{
  return &type metadata for NativeAdService.Errors;
}

unint64_t sub_1BB4F4D70()
{
  unint64_t result;

  result = qword_1EF2C5B40;
  if (!qword_1EF2C5B40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB920098, &type metadata for NativeAdService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2C5B40);
  }
  return result;
}

uint64_t FormatTextNodeTransform.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7361637265776F6CLL;
  if (*v0 != 1)
    v1 = 0x696C617469706163;
  if (*v0)
    return v1;
  else
    return 0x7361637265707075;
}

BOOL static FormatTextNodeTransform.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatTextNodeTransform.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatTextNodeTransform.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB4F4E9C()
{
  unint64_t result;

  result = qword_1EF2C5B50;
  if (!qword_1EF2C5B50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeTransform, &type metadata for FormatTextNodeTransform);
    atomic_store(result, (unint64_t *)&qword_1EF2C5B50);
  }
  return result;
}

unint64_t sub_1BB4F4EE0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4F4F04();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4F4F04()
{
  unint64_t result;

  result = qword_1EF2C5B58;
  if (!qword_1EF2C5B58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeTransform, &type metadata for FormatTextNodeTransform);
    atomic_store(result, (unint64_t *)&qword_1EF2C5B58);
  }
  return result;
}

unint64_t sub_1BB4F4F48(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA828A1C();
  a1[2] = sub_1BA828A60();
  result = sub_1BB4F4E9C();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB4F4F7C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7361637265776F6CLL;
  if (*v0 != 1)
    v1 = 0x696C617469706163;
  if (*v0)
    return v1;
  else
    return 0x7361637265707075;
}

ValueMetadata *type metadata accessor for FormatTextNodeTransform()
{
  return &type metadata for FormatTextNodeTransform;
}

void sub_1BB4F4FEC()
{
  __asm { BR              X11 }
}

unint64_t sub_1BB4F5024()
{
  _QWORD *v0;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  type metadata accessor for UIUserInterfaceIdiom(0);
  sub_1BA89D820();
  sub_1BB87303C();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

void GroupLayoutRequirement.description.getter()
{
  __asm { BR              X10 }
}

unint64_t sub_1BB4F5334()
{
  _QWORD *v0;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  type metadata accessor for UIUserInterfaceIdiom(0);
  sub_1BA89D820();
  sub_1BB87303C();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

uint64_t GroupLayoutDimensionSizeSpec.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v1 = 0x754D6E6D756C6F63;
  }
  else
  {
    v1 = 0x2865756C6176;
  }
  v5 = v1;
  sub_1BB872FDC();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return v5;
}

uint64_t initializeBufferWithCopyOfBuffer for GroupLayoutRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA8C88B0(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for GroupLayoutRequirement(uint64_t a1)
{
  return sub_1BA8C88BC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for GroupLayoutRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA8C88B0(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA8C88BC(v5, v6);
  return a1;
}

uint64_t assignWithTake for GroupLayoutRequirement(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BA8C88BC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupLayoutRequirement(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x79 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 121);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0xF))) ^ 0x7F;
  if (v3 >= 0x78)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for GroupLayoutRequirement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x78)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 121;
    if (a3 >= 0x79)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x79)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1BB4F57E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 5;
}

uint64_t sub_1BB4F57F4(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x1Fu;
  return result;
}

uint64_t sub_1BB4F5804(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | (32 * a2);
  return result;
}

ValueMetadata *type metadata accessor for GroupLayoutRequirement()
{
  return &type metadata for GroupLayoutRequirement;
}

ValueMetadata *type metadata accessor for GroupLayoutDimensionSizeSpec()
{
  return &type metadata for GroupLayoutDimensionSizeSpec;
}

uint64_t FormatDecorationItem.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDecorationItem.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(unsigned __int16 *)(v0 + 120) | (*(unsigned __int8 *)(v0 + 122) << 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA771864(v1, v2);
  swift_release();
  swift_release();
  return v0;
}

uint64_t method lookup function for FormatDecorationItem()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB4F5928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  double v74;
  void *v75;
  double v76;
  void *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  double v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  void (*v129)(char *, uint64_t);
  void (*v130)(id *, _QWORD);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t (*v146)(char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  int v149;
  int v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v155;
  uint64_t v156;
  double v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(id *, _QWORD);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char **v166;
  void (*v167)(id *, _QWORD);
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(id *, _QWORD);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  void (*v182)(id *, _QWORD);
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _OWORD *v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  id v193;
  id v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void (*v201)(id *, _QWORD);
  uint64_t v202;
  uint64_t v203;
  id v204;
  void (*v205)(id *, _QWORD);
  uint64_t v206;
  void (*v207)(id *, _QWORD);
  uint64_t v208;
  uint64_t v209;
  void (*v210)(id *, _QWORD);
  char *v211;
  uint64_t v212;
  char *v213;
  char *v214;
  char *v215;
  uint64_t v216;
  char v217;
  void (*v218)(char *, uint64_t);
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  char *v224;
  char *v225;
  char *v226;
  void (*v227)(char *, uint64_t, uint64_t);
  char *v228;
  char *v229;
  char *v230;
  void (*v231)(char *, char *, uint64_t);
  void (*v232)(char *, uint64_t);
  char *v233;
  char *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  _QWORD v239[2];
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  _QWORD *v244;
  unint64_t v245;
  unint64_t v246;
  id v247;
  unint64_t v248;
  id v249;
  void (*v250)(uint64_t, char *, uint64_t);
  char *v251;
  char *v252;
  char *v253;
  uint64_t v254;
  int v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  void (*v261)(char *, uint64_t, uint64_t);
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  void (*v266)(char *, uint64_t);
  char *v267;
  char *v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  char *v274;
  char *v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  char *v292;
  uint64_t v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  __int128 v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  unint64_t v302;
  id v303;
  uint64_t v304;
  _OWORD v305[7];

  v244 = a3;
  v285 = a2;
  v282 = a1;
  v271 = a4;
  sub_1BB4F7F0C();
  v254 = v6;
  MEMORY[0x1E0C80A78](v6);
  v253 = (char *)v239 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v252 = (char *)v239 - v9;
  v256 = sub_1BB86C1D8();
  MEMORY[0x1E0C80A78](v256);
  v243 = (char *)v239 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = sub_1BB86C424();
  v241 = *(_QWORD *)(v242 - 8);
  MEMORY[0x1E0C80A78](v242);
  v258 = (char *)v239 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v284 = sub_1BB86C3B8();
  v257 = *(_QWORD *)(v284 - 8);
  MEMORY[0x1E0C80A78](v284);
  v278 = (char *)v239 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v279 = sub_1BB86C3A0();
  v283 = *(_QWORD *)(v279 - 8);
  MEMORY[0x1E0C80A78](v279);
  v277 = (char *)v239 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1EF2C5B68, (void (*)(uint64_t))MEMORY[0x1E0CAF540]);
  MEMORY[0x1E0C80A78](v14);
  v287 = (uint64_t)v239 - v15;
  v298 = sub_1BB86C3C4();
  v299 = *(_QWORD *)(v298 - 8);
  MEMORY[0x1E0C80A78](v298);
  v270 = (char *)v239 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA716CEC();
  v263 = v17;
  MEMORY[0x1E0C80A78](v17);
  v251 = (char *)v239 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v240 = (uint64_t)v239 - v20;
  MEMORY[0x1E0C80A78](v21);
  v259 = (uint64_t)v239 - v22;
  MEMORY[0x1E0C80A78](v23);
  v296 = (uint64_t)v239 - v24;
  sub_1BA4A3FB4(0, &qword_1EF2C5B70, (void (*)(uint64_t))MEMORY[0x1E0CDDD30]);
  MEMORY[0x1E0C80A78](v25);
  v291 = (char *)v239 - v26;
  *(_QWORD *)&v297 = sub_1BB86C37C();
  v295 = *(_QWORD *)(v297 - 8);
  MEMORY[0x1E0C80A78](v297);
  v294 = (char *)v239 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v267 = (char *)v239 - v29;
  sub_1BB4F7F70();
  v264 = v30;
  MEMORY[0x1E0C80A78](v30);
  v286 = (uint64_t)v239 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v293 = sub_1BB86C2E0();
  v290 = *(_QWORD *)(v293 - 8);
  MEMORY[0x1E0C80A78](v293);
  v300 = (char *)v239 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v292 = (char *)v239 - v34;
  sub_1BB4F7FEC();
  v289 = v35;
  v280 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v275 = (char *)v239 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v272 = sub_1BB86C2BC();
  v269 = *(_QWORD *)(v272 - 8);
  MEMORY[0x1E0C80A78](v272);
  v268 = (char *)v239 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5AA2AC(0, &qword_1EF2C5B90, (uint64_t (*)(uint64_t))sub_1BB4F7FEC, sub_1BB4F8088, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DECCE0]);
  MEMORY[0x1E0C80A78](v38);
  v274 = (char *)v239 - v39;
  sub_1BB4F80A4(0);
  v276 = v40;
  MEMORY[0x1E0C80A78](v40);
  v273 = (char *)v239 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v288 = (uint64_t)v239 - v43;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)v239 - v45;
  v47 = sub_1BB86C238();
  v48 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v50 = (char *)v239 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1BB86C244();
  v52 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v54 = (char *)v239 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1BB86C25C();
  MEMORY[0x1E0C80A78](v55);
  v265 = sub_1BB86C304();
  v281 = *(_QWORD *)(v265 - 8);
  MEMORY[0x1E0C80A78](v265);
  v57 = (char *)v239 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = MEMORY[0x1E0C80A78](v58);
  v60 = v51;
  v62 = (char *)v239 - v61;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v52 + 104))(v54, *MEMORY[0x1E0CAF048], v60, v59);
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v50, *MEMORY[0x1E0CAF028], v47);
  sub_1BB86C250();
  v63 = sub_1BB86C67C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v46, 1, 1, v63);
  v64 = *((_QWORD *)&v297 + 1);
  sub_1BB86C2EC();
  if (v64)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v244);
  v239[1] = 0;
  v262 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v281 + 32))(v271, v62, v265);
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  v239[-2] = v67;
  swift_getKeyPath();
  v249 = (id)objc_opt_self();
  v303 = objc_msgSend(v249, sel_systemFontOfSize_, a5);
  v248 = sub_1BA745B28();
  sub_1BB86C1E4();
  v68 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v68);
  v239[-2] = v69;
  swift_getKeyPath();
  v247 = (id)objc_opt_self();
  v303 = objc_msgSend(v247, sel_secondaryLabelColor);
  v246 = sub_1BA745BF4();
  sub_1BB86C1E4();
  v70 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v70);
  v239[-2] = v71;
  swift_getKeyPath();
  v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v72, sel_setParagraphSpacing_, 10.0);
  objc_msgSend(v72, sel_setMinimumLineHeight_, 20.0);
  v303 = v72;
  v245 = sub_1BA745D04();
  sub_1BB86C1E4();
  v73 = 0;
  v74 = *MEMORY[0x1E0DC1440];
  v75 = &unk_1BB920508;
  v76 = *MEMORY[0x1E0DC1420];
  v77 = &unk_1BB920538;
  v78 = v292;
  v79 = v267;
  do
  {
    v92 = *(void **)((char *)&unk_1E726F958 + v73 + 32);
    sub_1BB86C370();
    v93 = v75;
    v94 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v94);
    v239[-2] = v95;
    v96 = v77;
    swift_getKeyPath();
    v303 = v92;
    LOBYTE(v304) = 0;
    *((_QWORD *)&v297 + 1) = sub_1BB4F8160();
    sub_1BB86C34C();
    switch((unint64_t)v92)
    {
      case 1uLL:
        v80 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v80);
        v239[-2] = v81;
        swift_getKeyPath();
        v82 = objc_msgSend(v249, sel_italicSystemFontOfSize_, a5);
        goto LABEL_5;
      case 2uLL:
        v97 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v97);
        v239[-2] = v98;
        swift_getKeyPath();
        v82 = objc_msgSend(v249, sel_systemFontOfSize_weight_, a5, v76);
LABEL_5:
        v303 = v82;
        goto LABEL_6;
      case 4uLL:
        v99 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v99);
        v239[-2] = v100;
        swift_getKeyPath();
        v303 = objc_msgSend(v249, sel_monospacedSystemFontOfSize_weight_, a5, v74);
        sub_1BB86C34C();
        v101 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v101);
        v239[-2] = v102;
        swift_getKeyPath();
        v303 = objc_msgSend(v247, sel_labelColor);
        goto LABEL_6;
      case 0x20uLL:
        v103 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v103);
        v239[-2] = v104;
        swift_getKeyPath();
        v105 = v291;
        sub_1BB8724D8();
        v106 = sub_1BB8724E4();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v105, 0, 1, v106);
        sub_1BB4F8500();
LABEL_6:
        sub_1BB86C34C();
        break;
      default:
        break;
    }
    v83 = v79;
    v84 = v294;
    sub_1BB86C370();
    v85 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v85);
    v239[-2] = v86;
    swift_getKeyPath();
    v303 = v92;
    LOBYTE(v304) = 0;
    sub_1BB86C34C();
    v87 = v271;
    sub_1BB86C214();
    v88 = *(void (**)(char *, uint64_t))(v295 + 8);
    v89 = v84;
    v79 = v83;
    v90 = v297;
    v88(v89, v297);
    v91 = v90;
    v77 = v96;
    v88(v79, v91);
    v75 = v93;
    v73 += 8;
  }
  while (v73 != 32);
  v107 = v281;
  v108 = v262;
  v109 = v265;
  v261 = *(void (**)(char *, uint64_t, uint64_t))(v281 + 16);
  v261(v262, v87, v265);
  v110 = v268;
  sub_1BB86C2D4();
  v266 = *(void (**)(char *, uint64_t))(v107 + 8);
  v266(v108, v109);
  sub_1BB4F8044();
  v111 = v275;
  sub_1BB86C2C8();
  (*(void (**)(char *, uint64_t))(v269 + 8))(v110, v272);
  v112 = v280;
  v113 = v274;
  v114 = v111;
  v115 = v289;
  (*(void (**)(char *, char *, uint64_t))(v280 + 32))(v274, v114, v289);
  v116 = (uint64_t)v273;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v273, v113, v115);
  v285 = sub_1BA4A2870(&qword_1EF2C5BB0, (uint64_t (*)(uint64_t))sub_1BB4F7FEC, MEMORY[0x1E0CAF110]);
  sub_1BB873114();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v115);
  v117 = v276;
  v118 = v116 + *(int *)(v276 + 36);
  v119 = v290;
  v250 = *(void (**)(uint64_t, char *, uint64_t))(v290 + 32);
  v250(v118, v78, v293);
  v120 = v288;
  sub_1BA5193C4(v116, v288, (uint64_t (*)(_QWORD))sub_1BB4F80A4);
  v267 = 0;
  v121 = v120 + *(int *)(v117 + 36);
  v295 = *(_QWORD *)(v119 + 16);
  LODWORD(v280) = *MEMORY[0x1E0CAF520];
  LODWORD(v276) = *MEMORY[0x1E0CAF528];
  LODWORD(v274) = *MEMORY[0x1E0CAF530];
  LODWORD(v272) = *MEMORY[0x1E0CAF510];
  LODWORD(v269) = *MEMORY[0x1E0CAF518];
  v255 = *MEMORY[0x1E0CAF508];
  v122 = *MEMORY[0x1E0DC1428];
  v123 = v264;
  v260 = v121;
LABEL_14:
  while (2)
  {
    v124 = v78;
    v125 = v78;
    v126 = v293;
    ((void (*)(char *, uint64_t, uint64_t))v295)(v124, v121, v293);
    v127 = v288;
    sub_1BB8730D8();
    v291 = (char *)sub_1BA4A2870(&qword_1EF2C5BB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF1B0], MEMORY[0x1E0CAF1C8]);
    v128 = sub_1BB872958();
    v129 = *(void (**)(char *, uint64_t))(v290 + 8);
    v129(v300, v126);
    v294 = (char *)v129;
    v129(v125, v126);
    if ((v128 & 1) == 0)
    {
      sub_1BB4F8088();
      sub_1BB8728D4();
      v130 = (void (*)(id *, _QWORD))sub_1BB873198();
      v131 = v286;
      sub_1BA4C2DD8(v132, v286, (uint64_t (*)(_QWORD))sub_1BB4F7F70);
      v130(&v303, 0);
      v133 = v296;
      sub_1BA5193C4(v131 + *(int *)(v123 + 48), v296, (uint64_t (*)(_QWORD))sub_1BA716CEC);
      v134 = v287;
      sub_1BB4F8280(v131, v287);
      v135 = v299;
      v136 = v298;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v299 + 48))(v134, 1, v298) == 1)
      {
        sub_1BA4A2E80(v133, (uint64_t (*)(_QWORD))sub_1BA716CEC);
        sub_1BB4F82D4(v134);
        v78 = v292;
        continue;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v135 + 32))(v270, v134, v136);
      v137 = sub_1BB86C3AC();
      v138 = *(_QWORD *)(v137 + 16);
      if (!v138)
      {
        swift_bridgeObjectRelease();
        v267 = 0;
        v169 = v265;
        v170 = v262;
        v160 = v271;
        goto LABEL_53;
      }
      v297 = 0uLL;
      v273 = 0;
      v275 = 0;
      v139 = (*(unsigned __int8 *)(v283 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v283 + 80);
      v268 = (char *)v137;
      v140 = v137 + v139;
      v282 = *(_QWORD *)(v283 + 72);
      v281 = *(_QWORD *)(v283 + 16);
      v141 = -1;
      v142 = v279;
      v143 = v257;
      v144 = v278;
      v145 = v277;
      ((void (*)(char *, unint64_t, uint64_t))v281)(v277, v137 + v139, v279);
      while (1)
      {
        sub_1BB86C388();
        v146 = *(uint64_t (**)(char *, uint64_t))(v143 + 88);
        v147 = v143;
        v148 = v284;
        v149 = v146(v144, v284);
        if (v149 == (_DWORD)v280)
          break;
        v150 = v149;
        if (v149 == (_DWORD)v276)
        {
          v145 = v277;
          v142 = v279;
          (*(void (**)(char *, uint64_t))(v283 + 8))(v277, v279);
          sub_1BB4F8320(*((uint64_t *)&v297 + 1), v297, v141);
          v143 = v147;
          v144 = v278;
          (*(void (**)(char *, uint64_t))(v147 + 96))(v278, v284);
          *(_QWORD *)&v297 = 0;
          v141 = 1;
          *((_QWORD *)&v297 + 1) = *(_QWORD *)v144;
          v275 = (char *)*((_QWORD *)&v297 + 1);
          goto LABEL_19;
        }
        v143 = v147;
        v144 = v278;
        v145 = v277;
        v136 = v298;
        v135 = v299;
        if (v149 == (_DWORD)v274)
        {
          v142 = v279;
          (*(void (**)(char *, uint64_t))(v283 + 8))(v277, v279);
          sub_1BB4F8320(*((uint64_t *)&v297 + 1), v297, v141);
          (*(void (**)(char *, uint64_t))(v143 + 96))(v144, v284);
          *((_QWORD *)&v297 + 1) = *(_QWORD *)v144;
          *(_QWORD *)&v297 = *((_QWORD *)v144 + 1);
          v141 = 2;
        }
        else if (v149 == (_DWORD)v272)
        {
          sub_1BB4F8320(*((uint64_t *)&v297 + 1), v297, v141);
          v273 = (char *)sub_1BB86C394();
          v142 = v279;
          (*(void (**)(char *, uint64_t))(v283 + 8))(v145, v279);
          *(_QWORD *)&v297 = 0;
          v141 = 1;
          *((_QWORD *)&v297 + 1) = v275;
        }
        else if (v149 == (_DWORD)v269)
        {
          sub_1BB4F8320(*((uint64_t *)&v297 + 1), v297, v141);
          v273 = (char *)sub_1BB86C394();
          v142 = v279;
          (*(void (**)(char *, uint64_t))(v283 + 8))(v145, v279);
          v297 = 0uLL;
          v141 = 3;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v283 + 8))(v277, v279);
          if (v150 == v255)
          {
            sub_1BB4F8320(*((uint64_t *)&v297 + 1), v297, v141);
            *(_QWORD *)&v297 = 0;
            v141 = 3;
            *((_QWORD *)&v297 + 1) = 1;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v143 + 8))(v144, v284);
          }
          v142 = v279;
        }
LABEL_20:
        v140 += v282;
        if (!--v138)
        {
          swift_bridgeObjectRelease();
          v151 = v258;
          v133 = v296;
          switch(v141)
          {
            case 0:
              v152 = *((_QWORD *)&v297 + 1);
              if (*((uint64_t *)&v297 + 1) >= 5)
                v153 = 5;
              else
                v153 = *((_QWORD *)&v297 + 1);
              v154 = __OFSUB__(5, v153);
              v155 = 5 - v153;
              v156 = v259;
              if (v154)
                goto LABEL_59;
              v157 = (double)(v155 & ~(v155 >> 63));
              sub_1BA4C2DD8(v296, v259, (uint64_t (*)(_QWORD))sub_1BA716CEC);
              v158 = swift_getKeyPath();
              MEMORY[0x1E0C80A78](v158);
              v239[-2] = v159;
              swift_getKeyPath();
              v301 = (uint64_t)objc_msgSend(v249, sel_systemFontOfSize_weight_, v157 + v157 + a5 + v157, v122);
              sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
              v160 = v271;
              v161 = v136;
              v162 = (void (*)(id *, _QWORD))sub_1BB86C31C();
              sub_1BB86C400();
              v162(&v303, 0);
              v136 = v161;
              v135 = v299;
              sub_1BA4A2E80(v156, (uint64_t (*)(_QWORD))sub_1BA716CEC);
              v163 = v240;
              sub_1BA4C2DD8(v296, v240, (uint64_t (*)(_QWORD))sub_1BA716CEC);
              v164 = swift_getKeyPath();
              MEMORY[0x1E0C80A78](v164);
              v239[-2] = v165;
              *(_QWORD *)&v297 = swift_getKeyPath();
              v166 = &selRef_secondaryLabelColor;
              if (v152 != 6)
                v166 = &selRef_labelColor;
              v301 = (uint64_t)objc_msgSend(v247, *v166);
              v167 = (void (*)(id *, _QWORD))sub_1BB86C31C();
              sub_1BB86C400();
              v167(&v303, 0);
              v133 = v296;
              v168 = v163;
              goto LABEL_49;
            case 1:
              v301 = *((_QWORD *)&v297 + 1);
              v303 = (id)sub_1BB87420C();
              v304 = v171;
              sub_1BB872AFC(v172);
              v173 = (uint64_t)v303;
              v174 = v304;
              v175 = v271;
              v176 = v135;
              v177 = (void (*)(id *, _QWORD))sub_1BB86C1B4();
              sub_1BB4F7CA0(v173, v174, v296);
              v177(&v303, 0);
              v135 = v176;
              v178 = v259;
              sub_1BA4C2DD8(v296, v259, (uint64_t (*)(_QWORD))sub_1BA716CEC);
              v179 = swift_getKeyPath();
              MEMORY[0x1E0C80A78](v179);
              v239[-2] = v180;
              swift_getKeyPath();
              v181 = v273;
              v301 = (uint64_t)sub_1BB4F834C(v273 != v267);
              sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
              v182 = (void (*)(id *, _QWORD))sub_1BB86C31C();
              sub_1BB86C400();
              v182(&v303, 0);
              v183 = v178;
              v133 = v296;
              goto LABEL_51;
            case 2:
              sub_1BB4F8320(*((uint64_t *)&v297 + 1), v297, 2);
              sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
              v184 = v271;
              sub_1BB86C328();
              sub_1BB86C3F4();
              v185 = v151;
              v160 = v184;
              (*(void (**)(char *, uint64_t))(v241 + 8))(v185, v242);
              sub_1BA4A2870(&qword_1EF2B1828, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF28]);
              v186 = sub_1BB872B80();
              v188 = v187;
              v189 = __swift_project_boxed_opaque_existential_1(v244, v244[3]);
              v190 = v189[5];
              v305[4] = v189[4];
              v305[5] = v190;
              v305[6] = v189[6];
              v191 = v189[1];
              v305[0] = *v189;
              v305[1] = v191;
              v192 = v189[3];
              v305[2] = v189[2];
              v305[3] = v192;
              v193 = sub_1BB0F03B8(v186, v188, (uint64_t)v305, 1);
              swift_bridgeObjectRelease();
              v194 = v193;
              v195 = v262;
              sub_1BB86C334();
              sub_1BA4A2870(&qword_1EF2C1860, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], MEMORY[0x1E0CAF230]);
              v133 = v296;
              v169 = v265;
              sub_1BB86C208();

              v170 = v195;
              v266(v195, v169);
              v267 = v273;
              break;
            case 3:
              v196 = v259;
              if (v297 == 0)
              {
                v175 = v271;
                v206 = v259;
                v207 = (void (*)(id *, _QWORD))sub_1BB86C1B4();
                sub_1BB4F7CA0(547520738, 0xA400000000000000, v296);
                v207(&v303, 0);
                sub_1BA4C2DD8(v296, v196, (uint64_t (*)(_QWORD))sub_1BA716CEC);
                v208 = swift_getKeyPath();
                MEMORY[0x1E0C80A78](v208);
                v239[-2] = v209;
                swift_getKeyPath();
                v181 = v273;
                v301 = (uint64_t)sub_1BB4F834C(v273 != v267);
                sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
                v210 = (void (*)(id *, _QWORD))sub_1BB86C31C();
                v133 = v296;
                sub_1BB86C400();
                v210(&v303, 0);
                v183 = v206;
LABEL_51:
                v160 = v175;
                sub_1BA4A2E80(v183, (uint64_t (*)(_QWORD))sub_1BA716CEC);
                v267 = v181;
              }
              else
              {
                sub_1BA4C2DD8(v296, v259, (uint64_t (*)(_QWORD))sub_1BA716CEC);
                v197 = swift_getKeyPath();
                MEMORY[0x1E0C80A78](v197);
                v239[-2] = v198;
                *((_QWORD *)&v297 + 1) = swift_getKeyPath();
                v301 = (uint64_t)objc_msgSend(v247, sel_tertiaryLabelColor);
                sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
                v199 = v271;
                v200 = v135;
                v201 = (void (*)(id *, _QWORD))sub_1BB86C31C();
                sub_1BB86C400();
                v201(&v303, 0);
                v135 = v200;
                sub_1BA4A2E80(v196, (uint64_t (*)(_QWORD))sub_1BA716CEC);
                sub_1BA4C2DD8(v296, v196, (uint64_t (*)(_QWORD))sub_1BA716CEC);
                v202 = swift_getKeyPath();
                MEMORY[0x1E0C80A78](v202);
                v239[-2] = v203;
                swift_getKeyPath();
                v204 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
                objc_msgSend(v204, sel_setParagraphSpacing_, 10.0);
                objc_msgSend(v204, sel_setMinimumLineHeight_, 20.0);
                v301 = (uint64_t)v204;
                v205 = (void (*)(id *, _QWORD))sub_1BB86C31C();
                sub_1BB86C400();
                v205(&v303, 0);
                v133 = v296;
                v168 = v196;
                v160 = v199;
LABEL_49:
                sub_1BA4A2E80(v168, (uint64_t (*)(_QWORD))sub_1BA716CEC);
                v267 = v273;
              }
LABEL_52:
              v169 = v265;
              v170 = v262;
              break;
            default:
              v267 = v273;
              v160 = v271;
              goto LABEL_52;
          }
LABEL_53:
          v211 = v292;
          v212 = v293;
          ((void (*)(char *, uint64_t, uint64_t))v295)(v292, v133, v293);
          v261(v170, v160, v169);
          v213 = v170;
          v214 = v300;
          sub_1BB86C1CC();
          v266(v213, v169);
          v215 = v214;
          v216 = v133;
          v217 = sub_1BB872958();
          v218 = (void (*)(char *, uint64_t))v294;
          ((void (*)(char *, uint64_t))v294)(v215, v212);
          v218(v211, v212);
          if ((v217 & 1) == 0)
          {
            v219 = sub_1BB86C1B4();
            v221 = v220;
            v301 = 10;
            v302 = 0xE100000000000000;
            sub_1BB34417C();
            v222 = sub_1BB872934();
            v223 = v254;
            v224 = v253;
            v225 = v252;
            if ((v222 & 1) == 0)
            {
              __break(1u);
LABEL_59:
              __break(1u);
              JUMPOUT(0x1BB4F7C10);
            }
            v226 = &v252[*(int *)(v254 + 48)];
            *((_QWORD *)&v297 + 1) = v219;
            v227 = (void (*)(char *, uint64_t, uint64_t))v295;
            ((void (*)(char *, uint64_t, uint64_t))v295)(v252, v216, v212);
            v291 = v226;
            v227(v226, v216, v212);
            v228 = v225;
            v229 = &v224[*(int *)(v223 + 48)];
            v227(v224, (uint64_t)v228, v212);
            v227(v229, (uint64_t)v226, v212);
            v230 = v251;
            *(_QWORD *)&v297 = v221;
            v231 = (void (*)(char *, char *, uint64_t))v250;
            v250((uint64_t)v251, v224, v212);
            v232 = (void (*)(char *, uint64_t))v294;
            ((void (*)(char *, uint64_t))v294)(v229, v212);
            v233 = &v224[*(int *)(v223 + 48)];
            v234 = v228;
            v136 = v298;
            v235 = v299;
            v231(v224, v234, v212);
            v231(v233, v291, v212);
            v231(&v230[*(int *)(v263 + 36)], v233, v212);
            v236 = v224;
            v135 = v235;
            v232(v236, v212);
            v237 = (uint64_t)v230;
            v238 = v259;
            sub_1BA5193C4(v237, v259, (uint64_t (*)(_QWORD))sub_1BA716CEC);
            sub_1BA4A2870(&qword_1EF2C5BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF38]);
            sub_1BB002AB0();
            sub_1BB8731A4();
            sub_1BA4A2E80(v238, (uint64_t (*)(_QWORD))sub_1BA716CEC);
            (*((void (**)(id *, _QWORD))&v297 + 1))(&v303, 0);
          }
          (*(void (**)(char *, uint64_t))(v135 + 8))(v270, v136);
          sub_1BA4A2E80(v216, (uint64_t (*)(_QWORD))sub_1BA716CEC);
          v123 = v264;
          v78 = v292;
          v121 = v260;
          goto LABEL_14;
        }
        ((void (*)(char *, unint64_t, uint64_t))v281)(v145, v140, v142);
      }
      (*(void (**)(char *, uint64_t))(v283 + 8))(v145, v142);
      sub_1BB4F8320(*((uint64_t *)&v297 + 1), v297, v141);
      (*(void (**)(char *, uint64_t))(v147 + 96))(v144, v148);
      *(_QWORD *)&v297 = 0;
      v141 = 0;
      *((_QWORD *)&v297 + 1) = *(_QWORD *)v144;
      v143 = v147;
LABEL_19:
      v136 = v298;
      v135 = v299;
      goto LABEL_20;
    }
    break;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v244);
  return sub_1BA4A2E80(v127, (uint64_t (*)(_QWORD))sub_1BB4F80A4);
}

uint64_t sub_1BB4F7CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  _QWORD *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t);
  char *v30;
  _QWORD v31[4];

  v4 = v3;
  sub_1BB4F7F0C();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v31 - v13;
  sub_1BA716CEC();
  v16 = v15;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v31 - v20;
  v31[2] = a1;
  v31[3] = a2;
  v22 = sub_1BB86C2E0();
  sub_1BB34417C();
  result = sub_1BB872934();
  if ((result & 1) != 0)
  {
    v24 = &v14[*(int *)(v9 + 48)];
    v31[0] = v16;
    v31[1] = v4;
    v25 = *(_QWORD **)(v22 - 8);
    v26 = (void (*)(char *, uint64_t, uint64_t))v25[2];
    v26(v14, a3, v22);
    v26(v24, a3, v22);
    v27 = &v11[*(int *)(v9 + 48)];
    v26(v11, (uint64_t)v14, v22);
    v26(v27, (uint64_t)v24, v22);
    v28 = (void (*)(char *, char *, uint64_t))v25[4];
    v28(v18, v11, v22);
    v29 = (void (*)(char *, uint64_t))v25[1];
    v29(v27, v22);
    v30 = &v11[*(int *)(v9 + 48)];
    v28(v11, v14, v22);
    v28(v30, v24, v22);
    v28(&v18[*(int *)(v31[0] + 36)], v30, v22);
    v29(v11, v22);
    sub_1BA5193C4((uint64_t)v18, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA716CEC);
    sub_1BB86C1D8();
    sub_1BA4A2870(&qword_1EF2C5BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF38]);
    sub_1BB002AB0();
    sub_1BB8731A4();
    return sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA716CEC);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BB4F7F0C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C5B60)
  {
    sub_1BB86C2E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C5B60);
  }
}

void sub_1BB4F7F70()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C5B78)
  {
    sub_1BA4A3FB4(255, &qword_1EF2C5B68, (void (*)(uint64_t))MEMORY[0x1E0CAF540]);
    sub_1BA716CEC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C5B78);
  }
}

void sub_1BB4F7FEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5B80)
  {
    sub_1BB4F8044();
    v0 = sub_1BB86C268();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5B80);
  }
}

unint64_t sub_1BB4F8044()
{
  unint64_t result;

  result = qword_1EF2C5B88;
  if (!qword_1EF2C5B88)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CAED70], MEMORY[0x1E0CAED78]);
    atomic_store(result, (unint64_t *)&qword_1EF2C5B88);
  }
  return result;
}

uint64_t sub_1BB4F8088()
{
  return sub_1BA4A2870(&qword_1EF2C5B98, (uint64_t (*)(uint64_t))sub_1BB4F7FEC, MEMORY[0x1E0CAF100]);
}

void sub_1BB4F80A4(uint64_t a1)
{
  sub_1BA5AA2AC(a1, &qword_1EF2C5BA0, (uint64_t (*)(uint64_t))sub_1BB4F7FEC, sub_1BB4F8088, MEMORY[0x1E0DECCD0]);
}

uint64_t sub_1BB4F80D0()
{
  return 8;
}

uint64_t sub_1BB4F80DC()
{
  return swift_release();
}

uint64_t sub_1BB4F80E4(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BB4F80F8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BB4F8110()
{
  return 8;
}

uint64_t sub_1BB4F8130()
{
  return 8;
}

void sub_1BB4F8144()
{
  sub_1BB86C0F4();
  __break(1u);
}

unint64_t sub_1BB4F8160()
{
  unint64_t result;

  result = qword_1EF2C5BA8;
  if (!qword_1EF2C5BA8)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CAED80], MEMORY[0x1E0CAED90]);
    atomic_store(result, (unint64_t *)&qword_1EF2C5BA8);
  }
  return result;
}

void sub_1BB4F81A4()
{
  sub_1BB4F8160();
  sub_1BB86C448();
  __break(1u);
}

uint64_t sub_1BB4F81C8()
{
  return 8;
}

uint64_t sub_1BB4F81D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB4F8220(a1, a2, a3, qword_1EF2C5BE0, MEMORY[0x1E0CAEE20]) & 1;
}

uint64_t sub_1BB4F8204(uint64_t a1, uint64_t a2)
{
  return keypath_hash_39Tm(a1, a2, qword_1EF2C5BE0, MEMORY[0x1E0CAEE20]);
}

uint64_t sub_1BB4F8220(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_1BB4F8648(0, a4, a5);
  return sub_1BB872958() & 1;
}

uint64_t sub_1BB4F8280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1EF2C5B68, (void (*)(uint64_t))MEMORY[0x1E0CAF540]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB4F82D4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, &qword_1EF2C5B68, (void (*)(uint64_t))MEMORY[0x1E0CAF540]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB4F8320(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1BB4F8334(a1, a2, a3);
  return a1;
}

uint64_t sub_1BB4F8334(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 2)
    return swift_bridgeObjectRelease();
  return result;
}

id sub_1BB4F834C(char a1)
{
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  sub_1BA65E330();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8856E0;
  sub_1BA8F3CD4(MEMORY[0x1E0DEE9D8]);
  v4 = objc_allocWithZone(MEMORY[0x1E0DC1328]);
  type metadata accessor for OptionKey(0);
  sub_1BA4A2870(&qword_1EF2A8A30, (uint64_t (*)(uint64_t))type metadata accessor for OptionKey, (uint64_t)&unk_1BB87C6C0);
  v5 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithTextAlignment_location_options_, 0, v5, 20.0);

  *(_QWORD *)(v3 + 32) = v6;
  sub_1BB872DCC();
  sub_1BB4F860C();
  v7 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setTabStops_, v7);

  objc_msgSend(v2, sel_setHeadIndent_, 20.0);
  objc_msgSend(v2, sel_setMinimumLineHeight_, 20.0);
  if ((a1 & 1) != 0)
    objc_msgSend(v2, sel_setParagraphSpacing_, 20.0);
  return v2;
}

void sub_1BB4F84E4()
{
  sub_1BB86C19C();
  __break(1u);
}

unint64_t sub_1BB4F8500()
{
  unint64_t result;

  result = qword_1EF2C5BC8;
  if (!qword_1EF2C5BC8)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CD8150], MEMORY[0x1E0CD8160]);
    atomic_store(result, (unint64_t *)&qword_1EF2C5BC8);
  }
  return result;
}

void sub_1BB4F8544()
{
  sub_1BB4F8500();
  sub_1BB86C460();
  __break(1u);
}

uint64_t sub_1BB4F8568()
{
  return 8;
}

uint64_t sub_1BB4F8574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB4F8220(a1, a2, a3, &qword_1EF2C5BD0, MEMORY[0x1E0CD81E0]) & 1;
}

uint64_t sub_1BB4F85A4(uint64_t a1, uint64_t a2)
{
  return keypath_hash_39Tm(a1, a2, &qword_1EF2C5BD0, MEMORY[0x1E0CD81E0]);
}

uint64_t keypath_hash_39Tm(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BB4F8648(0, a3, a4);
  return sub_1BB872874();
}

unint64_t sub_1BB4F860C()
{
  unint64_t result;

  result = qword_1EF2C5BD8;
  if (!qword_1EF2C5BD8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2C5BD8);
  }
  return result;
}

void sub_1BB4F8648(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BB8746D4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BB4F86D4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Asset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Asset);
}

uint64_t sub_1BB4F8724()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1BA9F1950(2573, 0xE200000000000000);
  qword_1EF3D0908 = result;
  unk_1EF3D0910 = v1;
  return result;
}

double sub_1BB4F874C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  v5 = sub_1BA4A42A0(a1);
  if ((v6 & 1) != 0)
  {
    v7 = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v2;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BB4CA9CC();
      v9 = v11;
    }
    sub_1BA498758(*(_QWORD *)(v9 + 56) + 16 * v7, (uint64_t)a2);
    sub_1BAF0F478(v7, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = xmmword_1BB87FC90;
  }
  return result;
}

void PuzzleGameCenterServiceType.leaderboard(for:scope:range:)(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  *(_BYTE *)(v8 + 32) = *a4;
  *(_BYTE *)(v8 + 33) = 0;
  v10 = **(int **)(a8 + 72) + *(_QWORD *)(a8 + 72);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v9;
  *v9 = v8;
  v9[1] = sub_1BB4F88BC;
  __asm { BR              X8 }
}

uint64_t sub_1BB4F88BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 24) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BB4F8928()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleLeaderboardResult.localPlayerEntry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1, a1, (uint64_t (*)(_QWORD))sub_1BAA28D68);
}

uint64_t PuzzleLeaderboardResult.entries.getter()
{
  type metadata accessor for PuzzleLeaderboardResult();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PuzzleLeaderboardResult()
{
  uint64_t result;

  result = qword_1EF2C5CE8;
  if (!qword_1EF2C5CE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PuzzleLeaderboardResult.totalPlayerCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PuzzleLeaderboardResult() + 24));
}

Swift::Bool __swiftcall PuzzleGameCenterServiceListener.shouldReenableAuthenticationHandler()()
{
  return 0;
}

uint64_t PuzzleGameCenterServiceType.presentLeaderboard(entryPoint:presenter:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t (*)(), _QWORD, uint64_t, uint64_t);

  *(_OWORD *)(v4 + 16) = *a1;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t (*)(), _QWORD, uint64_t, uint64_t))(**(int **)(a4 + 80) + *(_QWORD *)(a4 + 80));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v8;
  *v8 = v4;
  v8[1] = sub_1BB4F8A78;
  return v10(v4 + 16, a2, nullsub_1, 0, a3, a4);
}

uint64_t sub_1BB4F8A78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BB4F8AE4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  sub_1BB872AFC("ntroller\"8@\"NSError\"16");
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB87420C();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 0;
}

uint64_t sub_1BB4F8BD8()
{
  return sub_1BB4F8AE4();
}

BOOL static PuzzleGameCenterSubmitScoreError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PuzzleGameCenterSubmitScoreError.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t PuzzleGameCenterSubmitScoreError.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB4F8C68()
{
  unint64_t result;

  result = qword_1EF2C5C88;
  if (!qword_1EF2C5C88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleGameCenterSubmitScoreError, &type metadata for PuzzleGameCenterSubmitScoreError);
    atomic_store(result, (unint64_t *)&qword_1EF2C5C88);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleLeaderboardResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      sub_1BAA28D68(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_1BB86C8B0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = v7[5];
      v13 = (uint64_t *)((char *)a1 + v12);
      v14 = (uint64_t *)((char *)a2 + v12);
      v15 = v14[1];
      *v13 = *v14;
      v13[1] = v15;
      v16 = v7[6];
      v17 = (char *)a1 + v16;
      v18 = (uint64_t *)((char *)a2 + v16);
      v19 = v18[1];
      *(_QWORD *)v17 = *v18;
      *((_QWORD *)v17 + 1) = v19;
      v20 = v18 + 2;
      v21 = v18[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v21 >> 60 == 15)
      {
        *((_OWORD *)v17 + 1) = *(_OWORD *)v20;
      }
      else
      {
        v22 = *v20;
        sub_1BA69D44C(*v20, v21);
        *((_QWORD *)v17 + 2) = v22;
        *((_QWORD *)v17 + 3) = v21;
      }
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    v23 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v23) = *(uint64_t *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PuzzleLeaderboardResult(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = type metadata accessor for PuzzleLeaderboardEntry();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    v3 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(v2 + 24);
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v4 + 24);
    if (v5 >> 60 != 15)
      sub_1BA69D314(*(_QWORD *)(v4 + 16), v5);
  }
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for PuzzleLeaderboardResult(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    sub_1BAA28D68(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = v6[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = v6[6];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = (uint64_t *)(v16 + 16);
    v19 = *((_QWORD *)v16 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19 >> 60 == 15)
    {
      *((_OWORD *)v15 + 1) = *(_OWORD *)v18;
    }
    else
    {
      v20 = *v18;
      sub_1BA69D44C(*v18, v19);
      *((_QWORD *)v15 + 2) = v20;
      *((_QWORD *)v15 + 3) = v19;
    }
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v21 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for PuzzleLeaderboardResult(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v6 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
      goto LABEL_7;
    }
    v21 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
    v22 = v6[5];
    v23 = &a1[v22];
    v24 = &a2[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = v6[6];
    v26 = &a1[v25];
    v27 = &a2[v25];
    *(_QWORD *)v26 = *(_QWORD *)&a2[v25];
    *((_QWORD *)v26 + 1) = *(_QWORD *)&a2[v25 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v28 = (uint64_t *)(v27 + 16);
    v29 = *((_QWORD *)v27 + 3);
    if (*((_QWORD *)v26 + 3) >> 60 == 15)
    {
      if (v29 >> 60 != 15)
      {
        v30 = *v28;
        sub_1BA69D44C(*v28, *((_QWORD *)v27 + 3));
        *((_QWORD *)v26 + 2) = v30;
        *((_QWORD *)v26 + 3) = v29;
LABEL_17:
        *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
        *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
        goto LABEL_18;
      }
    }
    else
    {
      if (v29 >> 60 != 15)
      {
        v32 = *v28;
        sub_1BA69D44C(*v28, *((_QWORD *)v27 + 3));
        v33 = *((_QWORD *)v26 + 2);
        v34 = *((_QWORD *)v26 + 3);
        *((_QWORD *)v26 + 2) = v32;
        *((_QWORD *)v26 + 3) = v29;
        sub_1BA69D314(v33, v34);
        goto LABEL_17;
      }
      sub_1BA92BD1C((uint64_t)(v26 + 16));
    }
    *((_OWORD *)v26 + 1) = *(_OWORD *)v28;
    goto LABEL_17;
  }
  if (v10)
  {
LABEL_7:
    sub_1BAA28D68(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_18;
  }
  v11 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = v6[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  v15 = v6[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  v18 = (uint64_t *)(v17 + 16);
  v19 = *((_QWORD *)v17 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19 >> 60 == 15)
  {
    *((_OWORD *)v16 + 1) = *(_OWORD *)v18;
  }
  else
  {
    v31 = *v18;
    sub_1BA69D44C(*v18, v19);
    *((_QWORD *)v16 + 2) = v31;
    *((_QWORD *)v16 + 3) = v19;
  }
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for PuzzleLeaderboardResult(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;

  v6 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    sub_1BAA28D68(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
    v10 = v6[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  return a1;
}

char *assignWithTake for PuzzleLeaderboardResult(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v6 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
      goto LABEL_6;
    }
    v18 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(a1, a2, v18);
    v19 = v6[5];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v23 = *(_QWORD *)v21;
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = v23;
    *((_QWORD *)v20 + 1) = v22;
    swift_bridgeObjectRelease();
    v24 = v6[6];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = *(_QWORD *)&a2[v24 + 8];
    *(_QWORD *)v25 = *(_QWORD *)&a2[v24];
    *((_QWORD *)v25 + 1) = v27;
    swift_bridgeObjectRelease();
    v28 = v26 + 16;
    v29 = *((_QWORD *)v25 + 3);
    if (v29 >> 60 != 15)
    {
      v30 = *((_QWORD *)v26 + 3);
      if (v30 >> 60 != 15)
      {
        v31 = *((_QWORD *)v25 + 2);
        *((_QWORD *)v25 + 2) = *v28;
        *((_QWORD *)v25 + 3) = v30;
        sub_1BA69D314(v31, v29);
        goto LABEL_13;
      }
      sub_1BA92BD1C((uint64_t)(v25 + 16));
    }
    *((_OWORD *)v25 + 1) = *(_OWORD *)v28;
LABEL_13:
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    goto LABEL_7;
  }
  if (v10)
  {
LABEL_6:
    sub_1BAA28D68(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v11 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
  v12 = v6[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleLeaderboardResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB4F9620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1BAA28D68(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleLeaderboardResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BB4F96A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1BAA28D68(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
}

void sub_1BB4F9720()
{
  unint64_t v0;

  sub_1BAA28D68(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for PuzzleGameCenterServiceEvent()
{
  return &type metadata for PuzzleGameCenterServiceEvent;
}

uint64_t dispatch thunk of PuzzleGameCenterServiceListener.shouldReenableAuthenticationHandler()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleGameCenterServiceListener.puzzleGameCenterService(_:triggered:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.isUserAuthenticated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.lastAuthenticationResult.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BB4F9838;
  return v7(a1, a2);
}

uint64_t sub_1BB4F9838(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = a2 & 1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.isGameCenterEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BAA2A710;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.authenticate()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 40) + *(_QWORD *)(a2 + 40));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BA8195A4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.invalidate()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BA8195A4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.submitScore(puzzleID:score:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 56) + *(_QWORD *)(a5 + 56));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1BA8195A4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.submitTestScore(puzzleTypeID:score:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 64) + *(_QWORD *)(a5 + 64));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1BA8195A4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.leaderboard(for:scope:timeScope:range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a9 + 72) + *(_QWORD *)(a9 + 72));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v17;
  *v17 = v9;
  v17[1] = sub_1BA4B0D38;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.presentLeaderboard(entryPoint:presenter:onDashboardFinished:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 80)
                                                                                     + *(_QWORD *)(a6 + 80));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1BA8195A4;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.openSettings()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.removeListener(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 104) + *(_QWORD *)(a4 + 104));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1BA8195A4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.isPresentingGameCenter.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.isPresentingDashboard.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 120) + *(_QWORD *)(a2 + 120));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BAA2A710;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PuzzleGameCenterServiceType.isNewsSettingsGameCenterEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t storeEnumTagSinglePayload for PuzzleGameCenterSubmitScoreError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB4F9DA0 + 4 * byte_1BB920625[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB4F9DD4 + 4 * byte_1BB920620[v4]))();
}

uint64_t sub_1BB4F9DD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4F9DDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4F9DE4);
  return result;
}

uint64_t sub_1BB4F9DF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4F9DF8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB4F9DFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4F9E04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleGameCenterSubmitScoreError()
{
  return &type metadata for PuzzleGameCenterSubmitScoreError;
}

uint64_t sub_1BB4F9E20()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[2] = v0;
  v1[3] = swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  v1[4] = v2;
  *v2 = v1;
  v2[1] = sub_1BB4F9E74;
  return sub_1BA4A7798();
}

uint64_t sub_1BB4F9E74(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)

  else
    *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_1BB4F9EF0()
{
  uint64_t v0;
  id v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  objc_msgSend(v1, sel_puzzleLeaderboardsEnabled);

  sub_1BB86D294();
  sub_1BB86D27C();
  if (qword_1ED3C0960 != -1)
    swift_once();
  v2 = sub_1BB86D288();
  swift_release();
  if ((v2 & 1) != 0)
  {
    if (qword_1ED3AD178 != -1)
      swift_once();
    sub_1BA50AD30(&qword_1ED3AD788, v3, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleGameCenterService, (uint64_t)&unk_1BB920960);
    sub_1BB86D210();
    v4 = *(unsigned __int8 *)(v0 + 48);
  }
  else
  {
    v4 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1BB4FA030()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BB86D294();
  sub_1BB86D27C();
  if (qword_1ED3C0960 != -1)
    swift_once();
  v1 = sub_1BB86D288();
  swift_release();
  v3 = 0;
  if ((v1 & 1) != 0)
  {
    if (qword_1ED3AD178 != -1)
      swift_once();
    sub_1BA50AD30(&qword_1ED3AD788, v2, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleGameCenterService, (uint64_t)&unk_1BB920960);
    sub_1BB86D210();
    v3 = *(unsigned __int8 *)(v0 + 48);
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_1BB4FA12C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FA178(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v3 = *a1;
  v2[2] = v1;
  v2[3] = v3;
  v2[4] = sub_1BB872F7C();
  v2[5] = sub_1BB872F70();
  return swift_task_switch();
}

uint64_t sub_1BB4FA1D0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_1BB4FBE60();
  sub_1BB872F28();
  return swift_task_switch();
}

uint64_t sub_1BB4FA238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t);
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 48);
    v5 = sub_1BA50AD30((unint64_t *)&unk_1ED3C4280, v2, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleGameCenterService, (uint64_t)&unk_1BB9209E0);
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(v4 + 40);
    do
    {
      v7 = *(_QWORD *)(v0 + 16);
      v8 = *(_QWORD *)(v0 + 24);
      v9 = *v6;
      ObjectType = swift_getObjectType();
      v13 = v8;
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v9 + 16);
      swift_unknownObjectRetain();
      v11(v7, v5, &v13, ObjectType, v9);
      swift_unknownObjectRelease();
      v6 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FA324()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 104) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 112) = v2;
  *v2 = v1;
  v2[1] = sub_1BB4FA36C;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB4FA36C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FA3C8(double a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  if (*(_BYTE *)(v1 + 120) == 1)
  {
    gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(a1);
    v2 = (void *)objc_opt_self();
    v3 = objc_msgSend(v2, sel_localPlayer);
    v4 = objc_msgSend(v3, sel_authenticateHandler);

    if (v4)
    {
      _Block_release(v4);
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v5 = sub_1BB86EFEC();
      __swift_project_value_buffer(v5, (uint64_t)qword_1ED476918);
      v6 = sub_1BB86EFC8();
      v7 = sub_1BB87330C();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        v9 = "PuzzleGameCenterService: authenticateHandler already set. Skipping authentication.";
LABEL_11:
        _os_log_impl(&dword_1BA493000, v6, v7, v9, v8, 2u);
        MEMORY[0x1BCCE5C38](v8, -1, -1);
      }
    }
    else if (objc_msgSend(*(id *)(*(_QWORD *)(v1 + 104) + 240), sel_isNetworkReachable))
    {
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v12 = sub_1BB86EFEC();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED476918);
      v13 = sub_1BB86EFC8();
      v14 = sub_1BB87330C();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_1BA493000, v13, v14, "PuzzleGameCenterService: authenticating user...", v15, 2u);
        MEMORY[0x1BCCE5C38](v15, -1, -1);
      }
      v16 = *(_QWORD *)(v1 + 104);

      v6 = objc_msgSend(v2, sel_localPlayer);
      sub_1BA4C010C(v16 + 120, v1 + 64);
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v16;
      sub_1BA4CECCC((__int128 *)(v1 + 64), v17 + 24);
      *(_QWORD *)(v1 + 48) = sub_1BB504714;
      *(_QWORD *)(v1 + 56) = v17;
      *(_QWORD *)(v1 + 16) = MEMORY[0x1E0C809B0];
      *(_QWORD *)(v1 + 24) = 1107296256;
      *(_QWORD *)(v1 + 32) = sub_1BB4FA7AC;
      *(_QWORD *)(v1 + 40) = &block_descriptor_118;
      v18 = _Block_copy((const void *)(v1 + 16));
      swift_retain();
      swift_release();
      -[NSObject setAuthenticateHandler:](v6, sel_setAuthenticateHandler_, v18);
      _Block_release(v18);
    }
    else
    {
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v19 = sub_1BB86EFEC();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED476918);
      v6 = sub_1BB86EFC8();
      v7 = sub_1BB87330C();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        v9 = "PuzzleGameCenterService: Network is not reachable. Skipping authentication.";
        goto LABEL_11;
      }
    }
  }
  else
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v10 = sub_1BB86EFEC();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED476918);
    v6 = sub_1BB86EFC8();
    v7 = sub_1BB87330C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      v9 = "PuzzleGameCenterService: Game Center disabled. Skipping authentication.";
      goto LABEL_11;
    }
  }

  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_1BB4FA7AC(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1BB4FA820()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1BB4FA868;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB4FA868(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FA8C4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  double v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;

  if (*(_BYTE *)(v0 + 32) == 1)
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v1 = sub_1BB86EFEC();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED476918);
    v2 = sub_1BB86EFC8();
    v3 = sub_1BB87330C();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1BA493000, v2, v3, "PuzzleGameCenterService: invalidating handler...", v4, 2u);
      MEMORY[0x1BCCE5C38](v4, -1, -1);
    }

    gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(v5);
    v6 = objc_msgSend((id)objc_opt_self(), sel_localPlayer);
    -[NSObject setAuthenticateHandler:](v6, sel_setAuthenticateHandler_, 0);
  }
  else
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v7 = sub_1BB86EFEC();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED476918);
    v6 = sub_1BB86EFC8();
    v8 = sub_1BB87330C();
    if (os_log_type_enabled(v6, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BA493000, v6, v8, "PuzzleGameCenterService: Game Center disabled. Skipping invalidation.", v9, 2u);
      MEMORY[0x1BCCE5C38](v9, -1, -1);
    }
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FAA88(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  __int128 v45[2];
  uint64_t v46;

  sub_1BA81D6FC(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = sub_1BB872F94();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_1BA4C010C(a4, (uint64_t)v45);
    sub_1BB872F7C();
    v13 = a1;
    v14 = sub_1BB872F70();
    v15 = (_QWORD *)swift_allocObject();
    v16 = MEMORY[0x1E0DF06E8];
    v15[2] = v14;
    v15[3] = v16;
    sub_1BA4CECCC(v45, (uint64_t)(v15 + 4));
    v15[9] = v13;
    v17 = &unk_1EF2C5E88;
    v18 = (uint64_t)v11;
    v19 = (uint64_t)v15;
  }
  else
  {
    if (a2)
    {
      v20 = a2;
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v21 = sub_1BB86EFEC();
      __swift_project_value_buffer(v21, (uint64_t)qword_1ED476918);
      v22 = a2;
      v23 = a2;
      v24 = sub_1BB86EFC8();
      v25 = sub_1BB8732F4();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        v27 = swift_slowAlloc();
        *(_QWORD *)&v45[0] = v27;
        *(_DWORD *)v26 = 136315138;
        swift_getErrorValue();
        v28 = sub_1BB87456C();
        v46 = sub_1BA5D2E14(v28, v29, (uint64_t *)v45);
        sub_1BB873A8C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BA493000, v24, v25, "PuzzleGameCenterService: failed authenticating user [%s]", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v27, -1, -1);
        MEMORY[0x1BCCE5C38](v26, -1, -1);
      }
      else
      {

      }
      v38 = sub_1BB872F94();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v11, 1, 1, v38);
      v37 = (_QWORD *)swift_allocObject();
      v37[2] = 0;
      v37[3] = 0;
      v37[4] = a3;
      v37[5] = a2;
      swift_retain();
      v17 = &unk_1EF2C5E78;
    }
    else
    {
      gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(v9);
      v30 = objc_msgSend((id)objc_opt_self(), sel_localPlayer);
      v31 = objc_msgSend(v30, sel_isAuthenticated);

      if ((v31 & 1) != 0)
      {
        if (qword_1ED3C0B50 != -1)
          swift_once();
        v32 = sub_1BB86EFEC();
        __swift_project_value_buffer(v32, (uint64_t)qword_1ED476918);
        v33 = sub_1BB86EFC8();
        v34 = sub_1BB87330C();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v35 = 0;
          _os_log_impl(&dword_1BA493000, v33, v34, "PuzzleGameCenterService: user authenticated", v35, 2u);
          MEMORY[0x1BCCE5C38](v35, -1, -1);
        }

        v36 = sub_1BB872F94();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v11, 1, 1, v36);
        v37 = (_QWORD *)swift_allocObject();
        v37[2] = 0;
        v37[3] = 0;
        v37[4] = a3;
        swift_retain();
        v17 = &unk_1EF2C5E68;
      }
      else
      {
        if (qword_1ED3C0B50 != -1)
          swift_once();
        v39 = sub_1BB86EFEC();
        __swift_project_value_buffer(v39, (uint64_t)qword_1ED476918);
        v40 = sub_1BB86EFC8();
        v41 = sub_1BB87330C();
        if (os_log_type_enabled(v40, v41))
        {
          v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v42 = 0;
          _os_log_impl(&dword_1BA493000, v40, v41, "PuzzleGameCenterService: Unknown error [no error reported from GC]", v42, 2u);
          MEMORY[0x1BCCE5C38](v42, -1, -1);
        }

        v43 = sub_1BB872F94();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v11, 1, 1, v43);
        v37 = (_QWORD *)swift_allocObject();
        v37[2] = 0;
        v37[3] = 0;
        v37[4] = a3;
        swift_retain();
        v17 = &unk_1EF2C5E58;
      }
    }
    v18 = (uint64_t)v11;
    v19 = (uint64_t)v37;
  }
  sub_1BB1B6AEC(v18, (uint64_t)v17, v19);
  return swift_release();
}

uint64_t sub_1BB4FAFCC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_1BB4FAFE4(double a1)
{
  uint64_t v1;
  id v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(a1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_localPlayer);
  v3 = objc_msgSend(v2, sel_isAuthenticated);

  if (!v3)
    return (*(uint64_t (**)(void))(v1 + 8))();
  v4 = *(_QWORD *)(v1 + 80) + 272;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v4 + 16))
    return (*(uint64_t (**)(void))(v1 + 8))();
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v5 = sub_1BB86EFEC();
  *(_QWORD *)(v1 + 88) = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476918);
  v6 = sub_1BB86EFC8();
  v7 = sub_1BB87330C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1BA493000, v6, v7, "PuzzleGameCenterService: Submitting pending scores...", v8, 2u);
    MEMORY[0x1BCCE5C38](v8, -1, -1);
  }

  v9 = *(_QWORD **)v4;
  *(_QWORD *)(v1 + 96) = *(_QWORD *)v4;
  v10 = v9[2];
  *(_QWORD *)(v1 + 104) = v10;
  if (!v10)
  {
    *(_QWORD *)(*(_QWORD *)(v1 + 80) + 272) = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v11 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = v11;
  v12 = v9[4];
  *(_QWORD *)(v1 + 128) = v12;
  v13 = v9[5];
  *(_QWORD *)(v1 + 136) = v13;
  v14 = v9[6];
  *(_QWORD *)(v1 + 144) = v14;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v15 = sub_1BB86EFC8();
  v16 = sub_1BB87330C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v28 = v27;
    *(_DWORD *)v17 = 136315138;
    *(_QWORD *)(v1 + 56) = 0;
    *(_QWORD *)(v1 + 64) = 0xE000000000000000;
    sub_1BB873CB4();
    v18 = *(_QWORD *)(v1 + 64);
    *(_QWORD *)(v1 + 40) = *(_QWORD *)(v1 + 56);
    *(_QWORD *)(v1 + 48) = v18;
    sub_1BB872AFC("ntroller\"8@\"NSError\"16");
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v19);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v20);
    *(_QWORD *)(v1 + 72) = v14;
    sub_1BB87420C();
    sub_1BB872AFC(v21);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v22);
    *(_QWORD *)(v17 + 4) = sub_1BA5D2E14(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), &v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BA493000, v15, v16, "PuzzleGameCenterService: Submitting pending %s...", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v27, -1, -1);
    MEMORY[0x1BCCE5C38](v17, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain();
  v24 = swift_task_alloc();
  *(_QWORD *)(v1 + 152) = v24;
  *(_QWORD *)v24 = v1;
  *(_QWORD *)(v24 + 8) = sub_1BB4FB3D0;
  v25 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v24 + 272) = v14;
  *(_QWORD *)(v24 + 280) = v25;
  *(_BYTE *)(v24 + 408) = 1;
  *(_QWORD *)(v24 + 256) = v12;
  *(_QWORD *)(v24 + 264) = v13;
  *(_QWORD *)(v24 + 248) = v1 + 160;
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v24 + 288) = v26;
  *v26 = v24;
  v26[1] = sub_1BB5000E8;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB4FB3D0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BB4FB434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if ((*(_BYTE *)(v0 + 161) & 1) != 0)
    __asm { BR              X10 }
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112) + 1;
  if (v2 == *(_QWORD *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(*(_QWORD *)(v0 + 80) + 272) = v1;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 112) = v2;
    *(_QWORD *)(v0 + 120) = v1;
    v4 = (_QWORD *)(*(_QWORD *)(v0 + 96) + 24 * v2);
    v5 = v4[4];
    *(_QWORD *)(v0 + 128) = v5;
    v6 = v4[5];
    *(_QWORD *)(v0 + 136) = v6;
    v7 = v4[6];
    *(_QWORD *)(v0 + 144) = v7;
    swift_bridgeObjectRetain_n();
    v8 = sub_1BB86EFC8();
    v9 = sub_1BB87330C();
    if (os_log_type_enabled(v8, v9))
    {
      v21 = v5;
      v10 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v22 = v20;
      *(_DWORD *)v10 = 136315138;
      *(_QWORD *)(v0 + 56) = 0;
      *(_QWORD *)(v0 + 64) = 0xE000000000000000;
      sub_1BB873CB4();
      v11 = *(_QWORD *)(v0 + 64);
      *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 56);
      *(_QWORD *)(v0 + 48) = v11;
      sub_1BB872AFC("ntroller\"8@\"NSError\"16");
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v12);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v13);
      *(_QWORD *)(v0 + 72) = v7;
      sub_1BB87420C();
      sub_1BB872AFC(v14);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v15);
      *(_QWORD *)(v10 + 4) = sub_1BA5D2E14(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), &v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v8, v9, "PuzzleGameCenterService: Submitting pending %s...", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v20, -1, -1);
      v16 = v10;
      v5 = v21;
      MEMORY[0x1BCCE5C38](v16, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_bridgeObjectRetain();
    v17 = swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v17;
    *(_QWORD *)v17 = v0;
    *(_QWORD *)(v17 + 8) = sub_1BB4FB3D0;
    v18 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v17 + 272) = v7;
    *(_QWORD *)(v17 + 280) = v18;
    *(_BYTE *)(v17 + 408) = 1;
    *(_QWORD *)(v17 + 256) = v5;
    *(_QWORD *)(v17 + 264) = v6;
    *(_QWORD *)(v17 + 248) = v0 + 160;
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v17 + 288) = v19;
    *v19 = v17;
    v19[1] = sub_1BB5000E8;
    return sub_1BB4F9E20();
  }
}

uint64_t sub_1BB4FB7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  sub_1BB872F7C();
  v5[4] = sub_1BB872F70();
  sub_1BB872F28();
  return swift_task_switch();
}

void sub_1BB4FB82C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  id v4;
  unint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v1 = *(_QWORD **)(v0 + 16);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v2 = (void *)sub_1BB86FFB8();
  if (!v2)
    goto LABEL_11;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_windows);

  sub_1BA49A224(0, &qword_1EF2C5E90);
  v5 = sub_1BB872DB4();

  if (!(v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_10;
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1BCCE4630](0, v5);
LABEL_7:
    v7 = v6;
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v7, sel_rootViewController);

    if (v8)
    {
      v9 = *(_QWORD *)(v0 + 24);
      v10 = (void *)sub_1BB8733CC();

      objc_msgSend(v10, sel_presentViewController_animated_completion_, v9, 1, 0);
    }
    goto LABEL_11;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v5 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1BB4FB9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = a5;
  return swift_task_switch();
}

uint64_t sub_1BB4FB9CC()
{
  uint64_t v0;
  id v1;
  void *v2;

  v1 = *(id *)(v0 + 32);
  v2 = (void *)sub_1BB86C478();
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = objc_msgSend(v2, sel_code);
  return swift_task_switch();
}

uint64_t sub_1BB4FBA28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[6];
  v2 = v0[3];
  *(_QWORD *)(v2 + 248) = v1;
  *(_BYTE *)(v2 + 256) = 0;
  v0[2] = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_1BB4FBA8C;
  return sub_1BB4FA178(v0 + 2);
}

uint64_t sub_1BB4FBA8C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FBAE0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FBB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_1BB4FBB30()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[3];
  *(_QWORD *)(v1 + 248) = 0;
  *(_BYTE *)(v1 + 256) = 0;
  v0[2] = 0;
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1BB4FBB90;
  return sub_1BB4FA178(v0 + 2);
}

uint64_t sub_1BB4FBB90()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 40) = v2;
  *v2 = v4;
  v2[1] = sub_1BB4FBC08;
  v2[10] = *(_QWORD *)(v1 + 24);
  return swift_task_switch();
}

uint64_t sub_1BB4FBC08()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BB4FBC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_1BB4FBC68()
{
  _QWORD *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;

  sub_1BA76E994(MEMORY[0x1E0DEE9D8]);
  v1 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v2 = (void *)sub_1BB872970();
  v3 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_initWithDomain_code_userInfo_, v2, -1, v3);
  v0[4] = v4;

  v5 = v4;
  v6 = (void *)sub_1BB86C478();
  v0[5] = v6;
  v0[6] = objc_msgSend(v6, sel_code);
  return swift_task_switch();
}

uint64_t sub_1BB4FBD70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[6];
  v2 = v0[3];
  *(_QWORD *)(v2 + 248) = v1;
  *(_BYTE *)(v2 + 256) = 0;
  v0[2] = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_1BB4FBDD4;
  return sub_1BB4FA178(v0 + 2);
}

uint64_t sub_1BB4FBDD4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FBE28()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FBE60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34[8];
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  _QWORD v39[2];

  v1 = (uint64_t *)(v0 + 264);
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 264);
  v31 = v2 + 64;
  v3 = 1 << *(_BYTE *)(v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v5)
    goto LABEL_6;
LABEL_4:
  v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v10 = v9 | (v8 << 6);
LABEL_5:
  v11 = *(_QWORD *)(v2 + 56);
  v36 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10);
  sub_1BB4CD274(v11 + 16 * v10, (uint64_t)v37);
  while (1)
  {
    sub_1BA5193C4((uint64_t)&v36, (uint64_t)&v38, (uint64_t (*)(_QWORD))sub_1BB504014);
    if (v39[0])
      v15 = 0;
    else
      v15 = v39[1] == 1;
    if (v15)
    {
      swift_release();
      return (uint64_t)v30;
    }
    v16 = v38;
    sub_1BA498758((uint64_t)v39, (uint64_t)v34);
    v17 = MEMORY[0x1BCCE5D40](v34);
    if (v17)
    {
      v23 = v17;
      v29 = v35;
      swift_unknownObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v30 = sub_1BB393AD8(0, v30[2] + 1, 1, v30);
      v25 = v30[2];
      v24 = v30[3];
      v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        v28 = sub_1BB393AD8((_QWORD *)(v24 > 1), v25 + 1, 1, v30);
        v26 = v25 + 1;
        v30 = v28;
      }
      v30[2] = v26;
      v27 = &v30[2 * v25];
      v27[4] = v23;
      v27[5] = v29;
      swift_unknownObjectRelease();
    }
    else
    {
      swift_beginAccess();
      v18 = sub_1BA4A42A0(v16);
      if ((v19 & 1) != 0)
      {
        v20 = v18;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v22 = *v1;
        v32 = *v1;
        *v1 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BB4CA9CC();
          v22 = v32;
        }
        sub_1BA498758(*(_QWORD *)(v22 + 56) + 16 * v20, (uint64_t)&v33);
        sub_1BAF0F478(v20, v22);
        *v1 = v22;
        swift_bridgeObjectRelease();
      }
      else
      {
        v33 = xmmword_1BB87FC90;
      }
      swift_endAccess();
      sub_1BB503AC0((uint64_t)&v33);
    }
    result = sub_1BA8FD860((uint64_t)v34);
    if (v5)
      goto LABEL_4;
LABEL_6:
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v12 >= v6)
    {
      v14 = v8;
    }
    else
    {
      v13 = *(_QWORD *)(v31 + 8 * v12);
      if (v13)
        goto LABEL_9;
      v14 = v8 + 1;
      if (v8 + 2 < v6)
      {
        v13 = *(_QWORD *)(v31 + 8 * (v8 + 2));
        if (v13)
        {
          v12 = v8 + 2;
LABEL_9:
          v5 = (v13 - 1) & v13;
          v10 = __clz(__rbit64(v13)) + (v12 << 6);
          v8 = v12;
          goto LABEL_5;
        }
        v14 = v8 + 2;
        if (v8 + 3 < v6)
        {
          v13 = *(_QWORD *)(v31 + 8 * (v8 + 3));
          if (v13)
          {
            v12 = v8 + 3;
            goto LABEL_9;
          }
          v12 = v8 + 4;
          v14 = v8 + 3;
          if (v8 + 4 < v6)
          {
            v13 = *(_QWORD *)(v31 + 8 * v12);
            if (v13)
              goto LABEL_9;
            while (v6 - 5 != v8)
            {
              v13 = *(_QWORD *)(v2 + 104 + 8 * v8++);
              if (v13)
              {
                v12 = v8 + 4;
                goto LABEL_9;
              }
            }
            v14 = v6 - 1;
          }
        }
      }
    }
    v5 = 0;
    v36 = 0;
    v37[0] = 0;
    v8 = v14;
    v37[1] = 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB4FC1E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  sub_1BB872F7C();
  v1[3] = sub_1BB872F70();
  v1[4] = sub_1BB872F28();
  v1[5] = v2;
  return swift_task_switch();
}

uint64_t sub_1BB4FC24C(double a1)
{
  uint64_t v1;
  id v2;
  id v3;

  gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(a1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_localPlayer);
  v3 = objc_msgSend(v2, sel_authenticateHandler);

  if (!v3)
    return swift_task_switch();
  _Block_release(v3);
  swift_release();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1BB4FC2EC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_1BB4FBE60();
  return swift_task_switch();
}

uint64_t sub_1BB4FC328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  _QWORD *v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (uint64_t *)(v1 + 40);
    while (1)
    {
      v4 = *v3;
      ObjectType = swift_getObjectType();
      v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
      swift_unknownObjectRetain();
      LOBYTE(v4) = v6(ObjectType, v4);
      swift_unknownObjectRelease();
      if ((v4 & 1) != 0)
        break;
      v3 += 2;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v8;
    *v8 = v0;
    v8[1] = sub_1BB4FC450;
    v8[13] = *(_QWORD *)(v0 + 16);
    v9 = (_QWORD *)swift_task_alloc();
    v8[14] = v9;
    *v9 = v8;
    v9[1] = sub_1BB4FA36C;
    return sub_1BB4F9E20();
  }
  else
  {
LABEL_6:
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BB4FC450()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FC49C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FC4FC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

id sub_1BB4FC550(double a1)
{
  id v1;
  id v2;

  gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(a1);
  v1 = objc_msgSend((id)objc_opt_self(), sel_localPlayer);
  v2 = objc_msgSend(v1, sel_isAuthenticated);

  return v2;
}

uint64_t sub_1BB4FC5A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1BB4FC5BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 248), *(unsigned __int8 *)(*(_QWORD *)(v0 + 16) + 256));
}

uint64_t sub_1BB4FC5CC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BAA26D44;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB4FC610()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1BA8195A4;
  v2[13] = v0;
  v3 = (_QWORD *)swift_task_alloc();
  v2[14] = v3;
  *v3 = v2;
  v3[1] = sub_1BB4FA36C;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB4FC678()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1BA8195A4;
  v2[2] = v0;
  v3 = (_QWORD *)swift_task_alloc();
  v2[3] = v3;
  *v3 = v2;
  v3[1] = sub_1BB4FA868;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB4FC6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  *(_QWORD *)(v4 + 16) = v3;
  v8 = swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *(_QWORD *)v8 = v4;
  *(_QWORD *)(v8 + 8) = sub_1BB4FC778;
  *(_QWORD *)(v8 + 272) = a3;
  *(_QWORD *)(v8 + 280) = v3;
  *(_BYTE *)(v8 + 408) = 0;
  *(_QWORD *)(v8 + 256) = a1;
  *(_QWORD *)(v8 + 264) = a2;
  *(_QWORD *)(v8 + 248) = v4 + 32;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 288) = v9;
  *v9 = v8;
  v9[1] = sub_1BB5000E8;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB4FC778()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FC7CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FC7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  _QWORD *v9;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_1BA8195A4;
  v8[30] = a3;
  v8[31] = v3;
  v8[28] = a1;
  v8[29] = a2;
  v9 = (_QWORD *)swift_task_alloc();
  v8[32] = v9;
  *v9 = v8;
  v9[1] = sub_1BB4FC8A8;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB4FC85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v4[30] = a3;
  v4[31] = v3;
  v4[28] = a1;
  v4[29] = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v4[32] = v5;
  *v5 = v4;
  v5[1] = sub_1BB4FC8A8;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB4FC8A8(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 320) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FC904(double a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  unsigned int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  char v16;
  char *v17;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  if (*(_BYTE *)(v1 + 320) != 1)
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v12 = sub_1BB86EFEC();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED476918);
    v13 = sub_1BB86EFC8();
    v14 = sub_1BB87330C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1BA493000, v13, v14, "PuzzleGameCenterService: Game Center disabled. Skipping score submission...", v15, 2u);
      MEMORY[0x1BCCE5C38](v15, -1, -1);
    }

    v16 = 0;
    goto LABEL_13;
  }
  gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(a1);
  v2 = (void *)objc_opt_self();
  *(_QWORD *)(v1 + 264) = v2;
  v3 = objc_msgSend(v2, sel_localPlayer);
  v4 = objc_msgSend(v3, sel_isAuthenticated);

  if (!v4)
  {
    v16 = 1;
LABEL_13:
    sub_1BB504360();
    swift_allocError();
    *v17 = v16;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v5 = sub_1BB86EFEC();
  *(_QWORD *)(v1 + 272) = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476918);
  swift_bridgeObjectRetain_n();
  v6 = sub_1BB86EFC8();
  v7 = sub_1BB87330C();
  if (os_log_type_enabled(v6, v7))
  {
    v23 = *(_QWORD *)(v1 + 224);
    v8 = *(_QWORD *)(v1 + 232);
    v9 = *(_QWORD *)(v1 + 240);
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v24 = v11;
    *(_DWORD *)v10 = 134218242;
    *(_QWORD *)(v1 + 208) = v9;
    sub_1BB873A8C();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v1 + 216) = sub_1BA5D2E14(v23, v8, &v24);
    sub_1BB873A8C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BA493000, v6, v7, "PuzzleGameCenterService: submitting score %ld for puzzle type %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v11, -1, -1);
    MEMORY[0x1BCCE5C38](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 280) = v19;
  *v19 = v1;
  v19[1] = sub_1BB4FCC7C;
  v20 = *(_QWORD *)(v1 + 248);
  v21 = *(_QWORD *)(v1 + 224);
  v19[3] = *(_QWORD *)(v1 + 232);
  v19[4] = v20;
  v19[2] = v21;
  v22 = (_QWORD *)swift_task_alloc();
  v19[5] = v22;
  *v22 = v19;
  v22[1] = sub_1BB4FF048;
  return sub_1BA4A7798();
}

uint64_t sub_1BB4FCC7C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[18] = v2;
  v3[19] = a1;
  v3[20] = a2;
  v3[36] = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FCCDC(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  unint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;

  v2 = *(_QWORD *)(v1 + 288);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 152);
    v4 = *(void **)(v1 + 264);
    v5 = *(_QWORD *)(v1 + 240);
    gotLoadHelper_x8__OBJC_CLASS___GKLeaderboard(a1);
    v6 = (void *)objc_opt_self();
    v7 = objc_msgSend(v4, sel_localPlayer);
    *(_QWORD *)(v1 + 296) = v7;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v8 + 32) = v3;
    *(_QWORD *)(v8 + 40) = v2;
    v9 = sub_1BB872D9C();
    *(_QWORD *)(v1 + 304) = v9;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 16) = v1;
    *(_QWORD *)(v1 + 24) = sub_1BB4FCFAC;
    v10 = swift_continuation_init();
    *(_QWORD *)(v1 + 80) = MEMORY[0x1E0C809B0];
    v11 = (_QWORD *)(v1 + 80);
    v11[1] = 0x40000000;
    v11[2] = sub_1BB503024;
    v11[3] = &block_descriptor_105;
    v11[4] = v10;
    objc_msgSend(v6, sel_submitScore_context_player_leaderboardIDs_completionHandler_, v5, 0, v7, v9, v11);
    return swift_continuation_await();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v13 = sub_1BB86EFC8();
    v14 = sub_1BB8732F4();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(_QWORD *)(v1 + 232);
    if (v15)
    {
      v17 = *(_QWORD *)(v1 + 224);
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v1 + 192) = sub_1BA5D2E14(v17, v16, &v21);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v13, v14, "PuzzleGameCenterService: no leaderboard configured for %s. Skipping...", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v19, -1, -1);
      MEMORY[0x1BCCE5C38](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_1BB504360();
    swift_allocError();
    *v20 = 3;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1BB4FCFAC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 312) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BB4FD00C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 296);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FD044()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  _BYTE *v17;
  uint64_t v19;
  uint64_t v20[2];

  v2 = *(void **)(v0 + 304);
  v1 = *(void **)(v0 + 312);
  v3 = *(void **)(v0 + 296);
  swift_willThrow();

  swift_bridgeObjectRetain();
  v4 = v1;
  swift_bridgeObjectRetain();
  v5 = v1;
  v6 = sub_1BB86EFC8();
  v7 = sub_1BB8732F4();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(void **)(v0 + 312);
    v10 = *(_QWORD *)(v0 + 232);
    v9 = *(_QWORD *)(v0 + 240);
    v11 = *(_QWORD *)(v0 + 224);
    v12 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20[0] = v19;
    *(_DWORD *)v12 = 134218498;
    *(_QWORD *)(v0 + 168) = v9;
    sub_1BB873A8C();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 176) = sub_1BA5D2E14(v11, v10, v20);
    sub_1BB873A8C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2080;
    swift_getErrorValue();
    v13 = sub_1BB87456C();
    *(_QWORD *)(v0 + 200) = sub_1BA5D2E14(v13, v14, v20);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BA493000, v6, v7, "PuzzleGameCenterService: error submitting score %ld for %s: %s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v19, -1, -1);
    MEMORY[0x1BCCE5C38](v12, -1, -1);
  }
  else
  {
    v15 = *(void **)(v0 + 312);
    swift_bridgeObjectRelease_n();

  }
  v16 = *(void **)(v0 + 312);
  sub_1BB504360();
  swift_allocError();
  *v17 = 5;
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FD2C4(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, _BYTE *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_1BA4B0D38;
  return sub_1BB4FD360(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1BB4FD360(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, _BYTE *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  *(_QWORD *)(v8 + 320) = a7;
  *(_QWORD *)(v8 + 328) = v7;
  *(_QWORD *)(v8 + 304) = a3;
  *(_QWORD *)(v8 + 312) = a6;
  *(_QWORD *)(v8 + 288) = a1;
  *(_QWORD *)(v8 + 296) = a2;
  v11 = type metadata accessor for PuzzleLeaderboardEntry();
  *(_QWORD *)(v8 + 336) = v11;
  *(_QWORD *)(v8 + 344) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 352) = swift_task_alloc();
  *(_QWORD *)(v8 + 360) = swift_task_alloc();
  sub_1BAA28D68(0);
  *(_QWORD *)(v8 + 368) = v12;
  *(_QWORD *)(v8 + 376) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 384) = swift_task_alloc();
  *(_QWORD *)(v8 + 392) = swift_task_alloc();
  *(_QWORD *)(v8 + 400) = swift_task_alloc();
  *(_QWORD *)(v8 + 408) = swift_task_alloc();
  *(_BYTE *)(v8 + 520) = *a4;
  *(_BYTE *)(v8 + 521) = *a5;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 416) = v13;
  *v13 = v8;
  v13[1] = sub_1BB4FD458;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB4FD458(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 522) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FD4B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_BYTE *)(v0 + 522) == 1)
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 424) = v1;
    *v1 = v0;
    v1[1] = sub_1BB4FD674;
    v2 = *(_QWORD *)(v0 + 328);
    v3 = *(_QWORD *)(v0 + 296);
    v1[3] = *(_QWORD *)(v0 + 304);
    v1[4] = v2;
    v1[2] = v3;
    v4 = (_QWORD *)swift_task_alloc();
    v1[5] = v4;
    *v4 = v1;
    v4[1] = sub_1BB4FF048;
    return sub_1BA4A7798();
  }
  else
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v6 = sub_1BB86EFEC();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED476918);
    v7 = sub_1BB86EFC8();
    v8 = sub_1BB87330C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BA493000, v7, v8, "PuzzleGameCenterService: Game Center is disabled. Returning empty leaderboard.", v9, 2u);
      MEMORY[0x1BCCE5C38](v9, -1, -1);
    }
    v10 = *(_QWORD *)(v0 + 288);

    v11 = type metadata accessor for PuzzleLeaderboardResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BB4FD674(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[31] = v2;
  v3[32] = a1;
  v3[33] = a2;
  v3[54] = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FD6D4(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 432);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 256);
    gotLoadHelper_x8__OBJC_CLASS___GKLeaderboard(a1);
    v4 = (void *)objc_opt_self();
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v5 + 32) = v3;
    *(_QWORD *)(v5 + 40) = v2;
    v6 = sub_1BB872D9C();
    *(_QWORD *)(v1 + 440) = v6;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 56) = v1 + 272;
    *(_QWORD *)(v1 + 16) = v1;
    *(_QWORD *)(v1 + 24) = sub_1BB4FD87C;
    v7 = swift_continuation_init();
    *(_QWORD *)(v1 + 144) = MEMORY[0x1E0C809B0];
    v8 = (_QWORD *)(v1 + 144);
    v8[1] = 0x40000000;
    v8[2] = sub_1BB4FF2F8;
    v8[3] = &block_descriptor_84_0;
    v8[4] = v7;
    objc_msgSend(v4, sel_loadLeaderboardsWithIDs_completionHandler_, v6, v8);
    return swift_continuation_await();
  }
  else
  {
    v10 = *(_QWORD *)(v1 + 288);
    v11 = type metadata accessor for PuzzleLeaderboardResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1BB4FD87C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 448) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

void sub_1BB4FD8DC()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 272);
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_12:
    v12 = *(void **)(v0 + 440);
    swift_bridgeObjectRelease();

    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_12;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1BCCE4630](0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v2 = *(id *)(v1 + 32);
  }
  v3 = v2;
  *(_QWORD *)(v0 + 456) = v2;

  swift_bridgeObjectRelease();
  if (!v3)
  {
LABEL_13:
    v13 = *(_QWORD *)(v0 + 288);
    v14 = type metadata accessor for PuzzleLeaderboardResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v4 = *(unsigned __int8 *)(v0 + 520);
  v5 = v3;
  if (objc_msgSend(v5, sel_type) == (id)1)
    v6 = 2;
  else
    v6 = 2 - *(unsigned __int8 *)(v0 + 521);
  v8 = *(_QWORD *)(v0 + 312);
  v7 = *(_QWORD *)(v0 + 320);
  *(_QWORD *)(v0 + 120) = v0 + 224;
  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_1BB4FDAF0;
  v9 = swift_continuation_init();
  *(_QWORD *)(v0 + 184) = MEMORY[0x1E0C809B0];
  v10 = (_QWORD *)(v0 + 184);
  v10[1] = 0x40000000;
  v10[2] = sub_1BB4FF39C;
  v10[3] = &block_descriptor_86;
  v10[4] = v9;
  objc_msgSend(v5, sel_loadEntriesForPlayerScope_timeScope_range_completionHandler_, v4, v6, v8, v7, v10);
  swift_continuation_await();
}

uint64_t sub_1BB4FDAF0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 464) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_1BB4FDB50()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = (void *)v0[57];
  v3 = (void *)v0[28];
  v2 = v0[29];
  v0[59] = v3;
  v0[60] = v2;
  v0[61] = v0[30];

  if (v3)
  {
    swift_bridgeObjectRetain();
    v3;
    v4 = (_QWORD *)swift_task_alloc();
    v0[62] = v4;
    *v4 = v0;
    v4[1] = sub_1BB4FDCB0;
    return sub_1BB611C98(v0[51]);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[43] + 56))(v0[51], 1, 1, v0[42]);
    v6 = v0[60];
    swift_bridgeObjectRetain();
    v0[35] = MEMORY[0x1E0DEE9D8];
    sub_1BA50AD30(&qword_1EF2C5EF0, v7, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleGameCenterService, (uint64_t)&unk_1BB9209FC);
    v8 = swift_task_alloc();
    v0[63] = v8;
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v0 + 35;
    v9 = (_QWORD *)swift_task_alloc();
    v0[64] = v9;
    *v9 = v0;
    v9[1] = sub_1BB4FDDD8;
    return sub_1BB873D98();
  }
}

uint64_t sub_1BB4FDCB0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FDD08(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = v2[60];
  v2[35] = MEMORY[0x1E0DEE9D8];
  sub_1BA50AD30(&qword_1EF2C5EF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleGameCenterService, (uint64_t)&unk_1BB9209FC);
  v4 = swift_task_alloc();
  v2[63] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2 + 35;
  v5 = (_QWORD *)swift_task_alloc();
  v2[64] = v5;
  *v5 = v2;
  v5[1] = sub_1BB4FDDD8;
  return sub_1BB873D98();
}

uint64_t sub_1BB4FDDD8()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FDE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1BA4C2DD8(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 400), (uint64_t (*)(_QWORD))sub_1BAA28D68);
  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 376);
    v4 = *(_QWORD *)(v0 + 344);
    v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v6 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    v7 = MEMORY[0x1E0DEE9D8];
    do
    {
      v9 = *(_QWORD *)(v0 + 384);
      v8 = *(_QWORD *)(v0 + 392);
      v10 = *(_QWORD *)(v0 + 336);
      sub_1BA4C2DD8(v5, v8, (uint64_t (*)(_QWORD))sub_1BAA28D68);
      sub_1BA5193C4(v8, v9, (uint64_t (*)(_QWORD))sub_1BAA28D68);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v10);
      v12 = *(_QWORD *)(v0 + 384);
      if (v11 == 1)
      {
        sub_1BA4A2E80(v12, (uint64_t (*)(_QWORD))sub_1BAA28D68);
      }
      else
      {
        v14 = *(_QWORD *)(v0 + 352);
        v13 = *(_QWORD *)(v0 + 360);
        sub_1BA5193C4(v12, v13, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
        sub_1BA5193C4(v13, v14, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1BB38D324(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
        v16 = *(_QWORD *)(v7 + 16);
        v15 = *(_QWORD *)(v7 + 24);
        if (v16 >= v15 >> 1)
          v7 = sub_1BB38D324(v15 > 1, v16 + 1, 1, v7);
        v17 = *(_QWORD *)(v0 + 352);
        *(_QWORD *)(v7 + 16) = v16 + 1;
        sub_1BA5193C4(v17, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
      }
      v5 += v6;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  v18 = *(_QWORD *)(v0 + 488);
  v19 = *(void **)(v0 + 472);
  v20 = *(void **)(v0 + 456);
  v22 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 408);
  v23 = *(_QWORD *)(v0 + 288);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v21, (uint64_t (*)(_QWORD))sub_1BAA28D68);
  sub_1BA5193C4(v22, v23, (uint64_t (*)(_QWORD))sub_1BAA28D68);
  v24 = type metadata accessor for PuzzleLeaderboardResult();
  *(_QWORD *)(v23 + *(int *)(v24 + 20)) = v7;
  *(_QWORD *)(v23 + *(int *)(v24 + 24)) = v18;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FE0D0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 440);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FE158()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 456);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FE1E4(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1BA8195A4;
  return sub_1BB4FE258(a1, a2, a3, a4);
}

uint64_t sub_1BB4FE258(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  *(_QWORD *)(v5 + 136) = a4;
  *(_QWORD *)(v5 + 144) = v4;
  *(_QWORD *)(v5 + 120) = a2;
  *(_QWORD *)(v5 + 128) = a3;
  sub_1BA81D6FC(0);
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  *(_OWORD *)(v5 + 160) = *a1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 176) = v7;
  *v7 = v5;
  v7[1] = sub_1BB4FE2D0;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB4FE2D0(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 216) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FE330()
{
  uint64_t v0;
  double v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  __int128 v31;

  if (*(_BYTE *)(v0 + 216) != 1)
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v11 = sub_1BB86EFEC();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED476918);
    v12 = sub_1BB86EFC8();
    v13 = sub_1BB87330C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1BA493000, v12, v13, "PuzzleGameCenterService: Game Center disabled. Skipping leaderboard presentation", v14, 2u);
      MEMORY[0x1BCCE5C38](v14, -1, -1);
    }

LABEL_17:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (!objc_msgSend(*(id *)(*(_QWORD *)(v0 + 144) + 240), sel_isNetworkReachable))
  {
LABEL_5:
    v5 = *(_QWORD *)(v0 + 168);
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 192) = v6;
      *v6 = v0;
      v6[1] = sub_1BB4FE9D4;
      v7 = *(_QWORD *)(v0 + 160);
      v8 = *(_QWORD *)(v0 + 144);
      v6[3] = v5;
      v6[4] = v8;
      v6[2] = v7;
      v9 = (_QWORD *)swift_task_alloc();
      v6[5] = v9;
      *v9 = v6;
      v9[1] = sub_1BB4FF048;
      return sub_1BA4A7798();
    }
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v15 = sub_1BB86EFEC();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED476918);
    v16 = sub_1BB86EFC8();
    v17 = sub_1BB87330C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1BA493000, v16, v17, "PuzzleGameCenterService: Presenting leaderboard list...", v18, 2u);
      MEMORY[0x1BCCE5C38](v18, -1, -1);
    }
    v19 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 136);
    v31 = *(_OWORD *)(v0 + 120);

    v21 = sub_1BB872F94();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v19, 1, 1, v21);
    sub_1BB872F7C();
    v22 = (id)v31;
    swift_retain();
    v23 = sub_1BB872F70();
    v24 = swift_allocObject();
    v25 = MEMORY[0x1E0DF06E8];
    *(_QWORD *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 24) = v25;
    *(_OWORD *)(v24 + 32) = v31;
    *(_QWORD *)(v24 + 48) = v20;
    sub_1BB1B6AEC(v19, (uint64_t)&unk_1EF2C5E18, v24);
    swift_release();
    goto LABEL_17;
  }
  gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(v1);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_localPlayer);
  v4 = objc_msgSend(v3, sel_authenticateHandler);

  if (v4)
  {
    _Block_release(v4);
    goto LABEL_5;
  }
  v26 = *(_QWORD *)(v0 + 144);
  v27 = objc_msgSend(v2, sel_localPlayer);
  sub_1BA4C010C(v26 + 120, v0 + 64);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v26;
  sub_1BA4CECCC((__int128 *)(v0 + 64), v28 + 24);
  *(_QWORD *)(v0 + 48) = sub_1BB503DFC;
  *(_QWORD *)(v0 + 56) = v28;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_1BB4FA7AC;
  *(_QWORD *)(v0 + 40) = &block_descriptor_79;
  v29 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v27, sel_setAuthenticateHandler_, v29);
  _Block_release(v29);

  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v30;
  *v30 = v0;
  v30[1] = sub_1BB4FE77C;
  v30[10] = *(_QWORD *)(v0 + 144);
  return swift_task_switch();
}

uint64_t sub_1BB4FE77C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FE7D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v1 = *(_QWORD *)(v0 + 168);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v2;
    *v2 = v0;
    v2[1] = sub_1BB4FE9D4;
    v3 = *(_QWORD *)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 144);
    v2[3] = v1;
    v2[4] = v4;
    v2[2] = v3;
    v5 = (_QWORD *)swift_task_alloc();
    v2[5] = v5;
    *v5 = v2;
    v5[1] = sub_1BB4FF048;
    return sub_1BA4A7798();
  }
  else
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v7 = sub_1BB86EFEC();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED476918);
    v8 = sub_1BB86EFC8();
    v9 = sub_1BB87330C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1BA493000, v8, v9, "PuzzleGameCenterService: Presenting leaderboard list...", v10, 2u);
      MEMORY[0x1BCCE5C38](v10, -1, -1);
    }
    v11 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 136);
    v18 = *(_OWORD *)(v0 + 120);

    v13 = sub_1BB872F94();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
    sub_1BB872F7C();
    v14 = (id)v18;
    swift_retain();
    v15 = sub_1BB872F70();
    v16 = swift_allocObject();
    v17 = MEMORY[0x1E0DF06E8];
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = v17;
    *(_OWORD *)(v16 + 32) = v18;
    *(_QWORD *)(v16 + 48) = v12;
    sub_1BB1B6AEC(v11, (uint64_t)&unk_1EF2C5E18, v16);
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BB4FE9D4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 200) = a1;
  *(_QWORD *)(v3 + 208) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FEA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  unint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  unint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 208);
  if (v1)
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v2 = sub_1BB86EFEC();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED476918);
    swift_bridgeObjectRetain();
    v3 = sub_1BB86EFC8();
    v4 = sub_1BB87330C();
    v5 = os_log_type_enabled(v3, v4);
    v6 = *(_QWORD *)(v0 + 168);
    if (v5)
    {
      v7 = *(_QWORD *)(v0 + 160);
      v8 = (uint8_t *)swift_slowAlloc();
      v30 = v1;
      v31 = swift_slowAlloc();
      v9 = v31;
      *(_DWORD *)v8 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 112) = sub_1BA5D2E14(v7, v6, &v31);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v3, v4, "PuzzleGameCenterService: Presenting leaderboard for [%s]...", v8, 0xCu);
      swift_arrayDestroy();
      v10 = v9;
      v1 = v30;
      MEMORY[0x1BCCE5C38](v10, -1, -1);
      MEMORY[0x1BCCE5C38](v8, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v19 = *(_QWORD *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 128);
    v21 = *(_QWORD *)(v0 + 136);
    v23 = *(void **)(v0 + 120);
    v24 = sub_1BB872F94();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v20, 1, 1, v24);
    sub_1BB872F7C();
    v25 = v23;
    swift_retain();
    v26 = sub_1BB872F70();
    v27 = (_QWORD *)swift_allocObject();
    v28 = MEMORY[0x1E0DF06E8];
    v27[2] = v26;
    v27[3] = v28;
    v27[4] = v25;
    v27[5] = v19;
    v27[6] = v1;
    v27[7] = v22;
    v27[8] = v21;
    sub_1BB1B6AEC(v20, (uint64_t)&unk_1EF2C5E08, (uint64_t)v27);
    swift_release();
  }
  else
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v11 = sub_1BB86EFEC();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED476918);
    swift_bridgeObjectRetain();
    v12 = sub_1BB86EFC8();
    v13 = sub_1BB8732F4();
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(_QWORD *)(v0 + 168);
    if (v14)
    {
      v16 = *(_QWORD *)(v0 + 160);
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v31 = v18;
      *(_DWORD *)v17 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 104) = sub_1BA5D2E14(v16, v15, &v31);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v12, v13, "PuzzleGameCenterService: no leaderboard configured for %s. Skipping...", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v18, -1, -1);
      MEMORY[0x1BCCE5C38](v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB4FEE0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_1BB4FEE24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_beginAccess();
  sub_1BB4F874C(v1, (_OWORD *)(v0 + 40));
  swift_endAccess();
  sub_1BB503AC0(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1BB4FEE98()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_shared);
  v1 = objc_msgSend(v0, sel_isPresentingGameCenter);

  return v1;
}

uint64_t sub_1BB4FEEEC()
{
  return swift_task_switch();
}

uint64_t sub_1BB4FEF00()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel_shared);
  v2 = objc_msgSend(v1, sel_isPresentingGameCenter);

  return (*(uint64_t (**)(id))(v0 + 8))(v2);
}

uint64_t sub_1BB4FEF64()
{
  uint64_t v0;
  unsigned __int8 v2;

  swift_getObjectType();
  if (qword_1ED3AD178 != -1)
    swift_once();
  sub_1BA50AD30(&qword_1ED3AD788, v0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleGameCenterService, (uint64_t)&unk_1BB920960);
  sub_1BB86D210();
  return v2;
}

uint64_t sub_1BB4FEFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = (_QWORD *)swift_task_alloc();
  v3[5] = v4;
  *v4 = v3;
  v4[1] = sub_1BB4FF048;
  return sub_1BA4A7798();
}

uint64_t sub_1BB4FF048(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    return (*(uint64_t (**)(_QWORD, _QWORD))(v5 + 8))(0, 0);
  }
  else
  {
    *(_QWORD *)(v4 + 48) = a1;
    return swift_task_switch();
  }
}

void sub_1BB4FF0D4()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  id v8;
  id v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = objc_msgSend(*(id *)(v0 + 48), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_puzzleTypeLeaderboards);

  sub_1BA49A224(0, &qword_1EF2C5ED0);
  v3 = sub_1BB87276C();

  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_11;
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  v6 = sub_1BA6E35A8(v5, v4);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v8 = *(id *)(*(_QWORD *)(v3 + 56) + 8 * v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v8, sel_leaderboards);

  sub_1BA49A224(0, (unint64_t *)&unk_1EF2C5ED8);
  v10 = sub_1BB872DB4();

  if (!(v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_11:
    swift_bridgeObjectRelease();
    v14 = 0;
    v16 = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v17)
    goto LABEL_11;
LABEL_5:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x1BCCE4630](0, v10);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v10 + 32);
LABEL_8:
    v12 = v11;
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v12, sel_leaderboardID);

    v14 = sub_1BB8729A0();
    v16 = v15;

LABEL_12:
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v14, v16);
    return;
  }
  __break(1u);
}

uint64_t sub_1BB4FF2F8(uint64_t a1, double a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  _QWORD *v6;
  id v7;
  unint64_t *v9;

  v4 = *(_QWORD *)(a1 + 32);
  if (a4)
  {
    sub_1BA8EBDF8();
    swift_allocError();
    *v6 = a4;
    v7 = a4;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    gotLoadHelper_x2__OBJC_CLASS___GKLeaderboard(a2);
    sub_1BA49A224(0, v9);
    **(_QWORD **)(*(_QWORD *)(v4 + 64) + 40) = sub_1BB872DB4();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1BB4FF39C(uint64_t a1, void *a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  _QWORD *v8;
  id v9;
  unint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;

  v6 = *(_QWORD *)(a1 + 32);
  if (a6)
  {
    sub_1BA8EBDF8();
    swift_allocError();
    *v8 = a6;
    v9 = a6;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    gotLoadHelper_x2__OBJC_CLASS___GKLeaderboardEntry(a3);
    sub_1BA49A224(0, v13);
    v14 = sub_1BB872DB4();
    v15 = *(_QWORD **)(*(_QWORD *)(v6 + 64) + 40);
    *v15 = a2;
    v15[1] = v14;
    v15[2] = a5;
    v16 = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1BB4FF45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  sub_1BAA28D68(0);
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  sub_1BA81D6FC(0);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  sub_1BA4B07F0(0, &qword_1EF2C5F08, (uint64_t (*)(uint64_t))sub_1BAA28D68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4[17] = swift_task_alloc();
  sub_1BA4B07F0(0, &qword_1EF2C5F10, (uint64_t (*)(uint64_t))sub_1BAA28D68, MEMORY[0x1E0DF0650]);
  v4[18] = v6;
  v4[19] = *(_QWORD *)(v6 - 8);
  v4[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FF568()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 80);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1BB872F58();
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v22;
    *v22 = v0;
    v22[1] = sub_1BB4FF848;
    return sub_1BB872F64();
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v24 = v1 & 0xC000000000000001;
    v23 = *(_QWORD *)(v0 + 80) + 32;
    v25 = v2;
    while (1)
    {
      if (v24)
        v6 = (id)MEMORY[0x1BCCE4630](v4, *(_QWORD *)(v0 + 80));
      else
        v6 = *(id *)(v23 + 8 * v4);
      v7 = v6;
      v9 = *(_QWORD *)(v0 + 120);
      v8 = *(_QWORD *)(v0 + 128);
      v10 = sub_1BB872F94();
      v11 = *(_QWORD *)(v10 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
      v12 = (_QWORD *)swift_allocObject();
      v12[2] = 0;
      v13 = v12 + 2;
      v12[3] = 0;
      v12[4] = v7;
      sub_1BA4C2DD8(v8, v9, (uint64_t (*)(_QWORD))sub_1BA81D6FC);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
      v14 = v7;
      v15 = *(_QWORD *)(v0 + 120);
      if ((_DWORD)v8 == 1)
      {
        sub_1BA4A2E80(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))sub_1BA81D6FC);
        if (!*v13)
          goto LABEL_13;
      }
      else
      {
        sub_1BB872F88();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v10);
        if (!*v13)
        {
LABEL_13:
          v16 = 0;
          v18 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v16 = sub_1BB872F28();
      v18 = v17;
      swift_unknownObjectRelease();
LABEL_14:
      v19 = **(_QWORD **)(v0 + 72);
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = &unk_1EF2C5F28;
      *(_QWORD *)(v20 + 24) = v12;
      v21 = v18 | v16;
      if (v18 | v16)
      {
        v21 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v16;
        *(_QWORD *)(v0 + 40) = v18;
      }
      ++v4;
      v5 = *(_QWORD *)(v0 + 128);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v21;
      *(_QWORD *)(v0 + 64) = v19;
      swift_task_create();
      swift_release();
      sub_1BA4A2E80(v5, (uint64_t (*)(_QWORD))sub_1BA81D6FC);

      if (v25 == v4)
        goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB4FF848()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB4FF89C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t *v11;
  unint64_t *v12;

  v1 = *(_QWORD *)(v0 + 136);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 48))(v1, 1, *(_QWORD *)(v0 + 96)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(unint64_t **)(v0 + 88);
    sub_1BA5193C4(v1, *(_QWORD *)(v0 + 112), (uint64_t (*)(_QWORD))sub_1BAA28D68);
    v4 = *v3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v3 = v4;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = *(unint64_t **)(v0 + 88);
      v4 = sub_1BB393C14(0, *(_QWORD *)(v4 + 16) + 1, 1, v4);
      *v11 = v4;
    }
    v7 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
    if (v7 >= v6 >> 1)
    {
      v12 = *(unint64_t **)(v0 + 88);
      v4 = sub_1BB393C14(v6 > 1, v7 + 1, 1, v4);
      *v12 = v4;
    }
    v9 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v4 + 16) = v7 + 1;
    sub_1BA5193C4(v8, v4+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v7, (uint64_t (*)(_QWORD))sub_1BAA28D68);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v10;
    *v10 = v0;
    v10[1] = sub_1BB4FF848;
    return sub_1BB872F64();
  }
}

uint64_t sub_1BB4FFA40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BA8195A4;
  return sub_1BB611C98(a1);
}

uint64_t sub_1BB4FFA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  sub_1BB872F7C();
  v6[11] = sub_1BB872F70();
  sub_1BB872F28();
  return swift_task_switch();
}

id sub_1BB4FFB04()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = (void *)v0[8];
  swift_release();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_shared);
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v5 = result;
    v7 = v0[9];
    v6 = v0[10];
    v8 = objc_msgSend(result, sel_window);

    objc_msgSend(v3, sel_setParentWindow_, v8);
    v9 = objc_msgSend(v2, sel_shared);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v7;
    *(_QWORD *)(v10 + 24) = v6;
    v0[6] = sub_1BB504098;
    v0[7] = v10;
    v0[2] = MEMORY[0x1E0C809B0];
    v0[3] = 1107296256;
    v0[4] = sub_1BA4F1DD8;
    v0[5] = &block_descriptor_61_0;
    v11 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_triggerAccessPointWithState_handler_, 0, v11);
    _Block_release(v11);

    return (id)((uint64_t (*)(void))v0[1])();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB4FFC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  sub_1BB872F7C();
  v5[4] = sub_1BB872F70();
  sub_1BB872F28();
  return swift_task_switch();
}

uint64_t sub_1BB4FFCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[8] = a4;
  sub_1BB872F7C();
  v8[13] = sub_1BB872F70();
  sub_1BB872F28();
  return swift_task_switch();
}

id sub_1BB4FFD64()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;

  v1 = (void *)v0[8];
  swift_release();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_shared);
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v5 = result;
    v7 = v0[11];
    v6 = v0[12];
    v8 = objc_msgSend(result, sel_window);

    objc_msgSend(v3, sel_setParentWindow_, v8);
    v9 = objc_msgSend(v2, sel_shared);
    v10 = (void *)sub_1BB872970();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v7;
    *(_QWORD *)(v11 + 24) = v6;
    v0[6] = sub_1BB50413C;
    v0[7] = v11;
    v0[2] = MEMORY[0x1E0C809B0];
    v0[3] = 1107296256;
    v0[4] = sub_1BA4F1DD8;
    v0[5] = &block_descriptor_71;
    v12 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_triggerAccessPointWithLeaderboardID_playerScope_timeScope_handler_, v10, 1, 2, v12);
    _Block_release(v12);

    return (id)((uint64_t (*)(void))v0[1])();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB4FFF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;

  sub_1BA81D6FC(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB872F94();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_1BB872F7C();
  swift_retain();
  v11 = sub_1BB872F70();
  v12 = (_QWORD *)swift_allocObject();
  v13 = MEMORY[0x1E0DF06E8];
  v12[2] = v11;
  v12[3] = v13;
  v12[4] = a1;
  v12[5] = a2;
  sub_1BB1B6AEC((uint64_t)v9, a4, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1BB4FFFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  sub_1BB872F7C();
  v5[4] = sub_1BB872F70();
  sub_1BB872F28();
  return swift_task_switch();
}

uint64_t sub_1BB50005C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = swift_release();
  v1(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB500094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v6 + 272) = a4;
  *(_QWORD *)(v6 + 280) = v5;
  *(_BYTE *)(v6 + 408) = a5;
  *(_QWORD *)(v6 + 256) = a2;
  *(_QWORD *)(v6 + 264) = a3;
  *(_QWORD *)(v6 + 248) = a1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 288) = v7;
  *v7 = v6;
  v7[1] = sub_1BB5000E8;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB5000E8(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 409) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB500144(double a1)
{
  uint64_t v1;
  int v2;
  void *v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t (*v32)(_QWORD, _QWORD, uint64_t, uint64_t);

  if (*(_BYTE *)(v1 + 409) != 1)
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v21 = sub_1BB86EFEC();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED476918);
    v22 = sub_1BB86EFC8();
    v23 = sub_1BB87330C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1BA493000, v22, v23, "PuzzleGameCenterService: Game Center disabled. Skipping score submission...", v24, 2u);
      MEMORY[0x1BCCE5C38](v24, -1, -1);
    }

    v20 = 0;
    goto LABEL_18;
  }
  v2 = *(unsigned __int8 *)(v1 + 408);
  gotLoadHelper_x8__OBJC_CLASS___GKLocalPlayer(a1);
  v3 = (void *)objc_opt_self();
  *(_QWORD *)(v1 + 296) = v3;
  v4 = objc_msgSend(v3, sel_localPlayer);
  v5 = objc_msgSend(v4, sel_isAuthenticated);

  if ((v5 & 1) == 0 && !v2)
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v6 = sub_1BB86EFEC();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED476918);
    v7 = sub_1BB86EFC8();
    v8 = sub_1BB87330C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BA493000, v7, v8, "PuzzleGameCenterService: User is not authenticated to Game Center. Storing score for later submission...", v9, 2u);
      MEMORY[0x1BCCE5C38](v9, -1, -1);
    }
    v10 = *(_QWORD *)(v1 + 280);

    v11 = (_QWORD *)(v10 + 272);
    swift_beginAccess();
    v12 = *(_QWORD **)(v10 + 272);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v10 + 272) = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v12 = sub_1BB3939A0(0, v12[2] + 1, 1, v12);
      *v11 = v12;
    }
    v15 = v12[2];
    v14 = v12[3];
    v16 = v15 + 1;
    if (v15 >= v14 >> 1)
    {
      v31 = sub_1BB3939A0((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
      v16 = v15 + 1;
      v12 = v31;
      *v11 = v31;
    }
    v17 = *(_QWORD *)(v1 + 272);
    v18 = *(_OWORD *)(v1 + 256);
    v12[2] = v16;
    v19 = &v12[3 * v15];
    *((_OWORD *)v19 + 2) = v18;
    v19[6] = v17;
    swift_endAccess();
    v20 = 1;
LABEL_18:
    v25 = *(char **)(v1 + 248);
    *v25 = v20;
    v25[1] = 1;
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v27 = *(_QWORD **)(v1 + 280);
  v28 = v27[23];
  v29 = v27[24];
  __swift_project_boxed_opaque_existential_1(v27 + 20, v28);
  v32 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v29 + 32) + *(_QWORD *)(v29 + 32));
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 304) = v30;
  *v30 = v1;
  v30[1] = sub_1BB50047C;
  return v32(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 264), v28, v29);
}

uint64_t sub_1BB50047C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 312) = a1;
  *(_QWORD *)(v3 + 320) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB5004E8()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = objc_msgSend(objc_msgSend((id)swift_unknownObjectRetain(), sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  v2 = sub_1BB8729A0();
  v4 = v3;

  v0[41] = v2;
  v0[42] = v4;
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v5 = sub_1BB86EFEC();
  v0[43] = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476918);
  swift_bridgeObjectRetain_n();
  v6 = sub_1BB86EFC8();
  v7 = sub_1BB87330C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = v2;
    v10 = v0[33];
    v9 = v0[34];
    v18 = v0[32];
    v19 = v4;
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v20 = v12;
    *(_DWORD *)v11 = 134218242;
    v0[29] = v9;
    v2 = v8;
    sub_1BB873A8C();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[30] = sub_1BA5D2E14(v18, v10, &v20);
    sub_1BB873A8C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BA493000, v6, v7, "PuzzleGameCenterService: submitting score %ld for %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v12, -1, -1);
    v13 = v11;
    v4 = v19;
    MEMORY[0x1BCCE5C38](v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v14 = (_QWORD *)swift_task_alloc();
  v0[44] = v14;
  *v14 = v0;
  v14[1] = sub_1BB50076C;
  v15 = v0[35];
  v14[3] = v4;
  v14[4] = v15;
  v14[2] = v2;
  v16 = (_QWORD *)swift_task_alloc();
  v14[5] = v16;
  *v16 = v14;
  v16[1] = sub_1BB4FF048;
  return sub_1BA4A7798();
}

uint64_t sub_1BB50076C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 360) = a1;
  *(_QWORD *)(v3 + 368) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB5007CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 368);
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 376) = v2;
    *v2 = v0;
    v2[1] = sub_1BB5009BC;
    return sub_1BB501204(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 360), v1);
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRetain();
    v4 = sub_1BB86EFC8();
    v5 = sub_1BB8732F4();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_QWORD *)(v0 + 336);
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 328);
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v11 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 184) = sub_1BA5D2E14(v8, v7, &v11);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v4, v5, "PuzzleGameCenterService: no leaderboard configured for %s. Skipping...", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v10, -1, -1);
      MEMORY[0x1BCCE5C38](v9, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
    }

    **(_WORD **)(v0 + 248) = 259;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BB5009BC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 410) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BB500A28(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (*(_BYTE *)(v1 + 410) == 1)
  {
    v3 = *(_QWORD *)(v1 + 360);
    v2 = *(_QWORD *)(v1 + 368);
    v4 = *(void **)(v1 + 296);
    v5 = *(_QWORD *)(v1 + 272);
    gotLoadHelper_x8__OBJC_CLASS___GKLeaderboard(a1);
    v6 = (void *)objc_opt_self();
    v7 = objc_msgSend(v4, sel_localPlayer);
    *(_QWORD *)(v1 + 384) = v7;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v8 + 32) = v3;
    *(_QWORD *)(v8 + 40) = v2;
    v9 = sub_1BB872D9C();
    *(_QWORD *)(v1 + 392) = v9;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 16) = v1;
    *(_QWORD *)(v1 + 24) = sub_1BB500D14;
    v10 = swift_continuation_init();
    *(_QWORD *)(v1 + 80) = MEMORY[0x1E0C809B0];
    v11 = (_QWORD *)(v1 + 80);
    v11[1] = 0x40000000;
    v11[2] = sub_1BB503024;
    v11[3] = &block_descriptor_34_1;
    v11[4] = v10;
    objc_msgSend(v6, sel_submitScore_context_player_leaderboardIDs_completionHandler_, v5, 0, v7, v9, v11);
    return swift_continuation_await();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v13 = sub_1BB86EFC8();
    v14 = sub_1BB87330C();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(_QWORD *)(v1 + 336);
    if (v15)
    {
      v17 = *(_QWORD *)(v1 + 328);
      v18 = *(_QWORD *)(v1 + 272);
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v21 = v20;
      *(_DWORD *)v19 = 134218242;
      *(_QWORD *)(v1 + 176) = v18;
      sub_1BB873A8C();
      *(_WORD *)(v19 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v1 + 168) = sub_1BA5D2E14(v17, v16, &v21);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v13, v14, "PuzzleGameCenterService: score %ld for %s is not valid. Skipping submission...", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v20, -1, -1);
      MEMORY[0x1BCCE5C38](v19, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
    }

    **(_WORD **)(v1 + 248) = 260;
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1BB500D14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 400) = v1;
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BB500D84()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 384);
  v2 = *(void **)(v0 + 392);
  swift_unknownObjectRelease();

  **(_WORD **)(v0 + 248) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB500DC8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v11;

  if (qword_1ED3C0B50 != -1)
    swift_once();
  v1 = sub_1BB86EFEC();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED476918);
  swift_bridgeObjectRetain_n();
  v2 = sub_1BB86EFC8();
  v3 = sub_1BB8732F4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(void **)(v0 + 320);
  v6 = *(_QWORD *)(v0 + 264);
  if (v4)
  {
    v7 = *(_QWORD *)(v0 + 256);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v11 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 216) = sub_1BA5D2E14(v7, v6, &v11);
    sub_1BB873A8C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BA493000, v2, v3, "PuzzleGameCenterService: failed fetching puzzle details for %s. Skipping score submission...", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v9, -1, -1);
    MEMORY[0x1BCCE5C38](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  **(_WORD **)(v0 + 248) = 258;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB500F94()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v17;
  uint64_t v18[2];

  v2 = *(void **)(v0 + 392);
  v1 = *(void **)(v0 + 400);
  v3 = *(void **)(v0 + 384);
  swift_willThrow();

  v4 = v1;
  swift_bridgeObjectRetain();
  v5 = v1;
  v6 = sub_1BB86EFC8();
  v7 = sub_1BB8732F4();
  if (os_log_type_enabled(v6, v7))
  {
    v17 = *(void **)(v0 + 400);
    v8 = *(_QWORD *)(v0 + 328);
    v9 = *(_QWORD *)(v0 + 336);
    v10 = *(_QWORD *)(v0 + 272);
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v18[0] = v12;
    *(_DWORD *)v11 = 134218498;
    *(_QWORD *)(v0 + 192) = v10;
    sub_1BB873A8C();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 200) = sub_1BA5D2E14(v8, v9, v18);
    sub_1BB873A8C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 2080;
    swift_getErrorValue();
    v13 = sub_1BB87456C();
    *(_QWORD *)(v0 + 224) = sub_1BA5D2E14(v13, v14, v18);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BA493000, v6, v7, "PuzzleGameCenterService: error submitting score %ld for %s: %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v12, -1, -1);
    MEMORY[0x1BCCE5C38](v11, -1, -1);
    swift_unknownObjectRelease();

  }
  else
  {
    v15 = *(void **)(v0 + 400);
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease_n();
  }
  **(_WORD **)(v0 + 248) = 261;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB501204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[32] = a4;
  v5[33] = v4;
  v5[30] = a2;
  v5[31] = a3;
  v5[29] = a1;
  v6 = sub_1BB86C79C();
  v5[34] = v6;
  v5[35] = *(_QWORD *)(v6 - 8);
  v5[36] = swift_task_alloc();
  v7 = sub_1BB86C7B4();
  v5[37] = v7;
  v5[38] = *(_QWORD *)(v7 - 8);
  v5[39] = swift_task_alloc();
  v8 = sub_1BB86CAD8();
  v5[40] = v8;
  v5[41] = *(_QWORD *)(v8 - 8);
  v5[42] = swift_task_alloc();
  v9 = sub_1BB86BEC0();
  v5[43] = v9;
  v5[44] = *(_QWORD *)(v9 - 8);
  v5[45] = swift_task_alloc();
  v5[46] = swift_task_alloc();
  sub_1BA76D78C();
  v5[47] = swift_task_alloc();
  v5[48] = swift_task_alloc();
  v10 = sub_1BB86C8B0();
  v5[49] = v10;
  v5[50] = *(_QWORD *)(v10 - 8);
  v5[51] = swift_task_alloc();
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  v5[54] = swift_task_alloc();
  v5[55] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BB501380(double a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3 = v1[31];
  v2 = v1[32];
  gotLoadHelper_x8__OBJC_CLASS___GKLeaderboard(a1);
  v4 = (void *)objc_opt_self();
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BB872D9C();
  v1[56] = v6;
  swift_bridgeObjectRelease();
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_1BB5014A8;
  v7 = swift_continuation_init();
  v1[10] = MEMORY[0x1E0C809B0];
  v8 = v1 + 10;
  v8[1] = 0x40000000;
  v8[2] = sub_1BB4FF2F8;
  v8[3] = &block_descriptor_35_0;
  v8[4] = v7;
  objc_msgSend(v4, sel_loadLeaderboardsWithIDs_completionHandler_, v6, v8);
  return swift_continuation_await();
}

uint64_t sub_1BB5014A8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 456) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BB501508()
{
  _QWORD *v0;
  void *v1;
  NSObject *v2;
  unint64_t v3;
  uint64_t *v4;
  objc_class *v5;
  objc_class *v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  id v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  unsigned __int8 v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  os_log_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  _BOOL4 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  void (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  unint64_t v95;
  void (*v96)(uint64_t, uint64_t);
  void (*v97)(uint64_t, uint64_t);
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  _BOOL4 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint8_t *v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  _BOOL4 v113;
  uint64_t v114;
  NSObject *v115;
  uint64_t v116;
  uint64_t v117;
  uint8_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  void *v123;
  id v124;
  id v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  _BOOL4 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t);
  uint64_t v135;
  os_log_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  os_log_type_t v153;
  _BOOL4 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  os_log_type_t v161;
  _BOOL4 v162;
  unint64_t v163;
  uint64_t v164;
  uint8_t *v165;
  uint64_t v166;
  void (*isa)(uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  NSObject *v172;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v175;
  uint64_t v176;
  os_log_t loga;
  NSObject *logb;
  os_log_t logc;
  os_log_t log;
  os_log_t logd;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unsigned int v220;
  uint64_t v221;
  void *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  objc_class *v230;
  uint64_t v231;

  v3 = v0[15];
  if (!(v3 >> 62))
  {
    v4 = v0 + 17;
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_70:
    v159 = (void *)v0[56];
    swift_bridgeObjectRelease();

    if (qword_1ED3C0B50 != -1)
      swift_once();
    v160 = sub_1BB86EFEC();
    __swift_project_value_buffer(v160, (uint64_t)qword_1ED476918);
    swift_bridgeObjectRetain_n();
    v54 = sub_1BB86EFC8();
    v161 = sub_1BB87330C();
    v162 = os_log_type_enabled(v54, v161);
    v163 = v0[32];
    if (v162)
    {
      v164 = v0[31];
      v165 = (uint8_t *)swift_slowAlloc();
      v166 = swift_slowAlloc();
      v231 = v166;
      *(_DWORD *)v165 = 136315138;
      swift_bridgeObjectRetain();
      v0[16] = sub_1BA5D2E14(v164, v163, &v231);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v54, v161, "PuzzleGameCenterService: Failed to load leaderboard %s", v165, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v166, -1, -1);
      MEMORY[0x1BCCE5C38](v165, -1, -1);
      goto LABEL_75;
    }
LABEL_74:
    swift_bridgeObjectRelease_n();
    goto LABEL_75;
  }
  swift_bridgeObjectRetain();
  v158 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v4 = v0 + 17;
  if (!v158)
    goto LABEL_70;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (objc_class *)MEMORY[0x1BCCE4630](0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_80;
    }
    v5 = (objc_class *)*(id *)(v3 + 32);
  }
  v6 = v5;
  v7 = (void *)v0[30];

  swift_bridgeObjectRelease();
  swift_getObjectType();
  v8 = objc_msgSend(v7, sel_identifier);
  v9 = sub_1BB8729A0();
  v11 = v10;

  if (-[objc_class type](v6, sel_type) == (id)1)
  {
    v12 = v4;
    v216 = v9;
    v13 = objc_msgSend((id)v0[30], sel_publishDate);
    if (v13)
    {
      v14 = v13;
      v15 = v0[54];
      v226 = v11;
      v230 = v6;
      v17 = v0[49];
      v16 = (_QWORD *)v0[50];
      v18 = v0[48];
      sub_1BB86C874();

      v19 = (void (*)(uint64_t, uint64_t, uint64_t))v16[4];
      v19(v18, v15, v17);
      v20 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v16[7];
      v20(v18, 0, 1, v17);
      v21 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v16[6];
      v22 = v18;
      v23 = v17;
      v11 = v226;
      v6 = v230;
      if (v21(v22, 1, v23) != 1)
      {
        v19(v0[55], v0[48], v0[49]);
        v24 = -[objc_class startDate](v230, sel_startDate);
        if (v24)
        {
          v25 = v24;
          v26 = v0[54];
          v27 = v0[49];
          v28 = v0[47];
          sub_1BB86C874();

          v19(v28, v26, v27);
          v20(v28, 0, 1, v27);
          if (v21(v28, 1, v27) != 1)
          {
            v191 = v0 + 21;
            v29 = v0[54];
            v30 = v0[53];
            v32 = v0[49];
            v31 = v0[50];
            v33 = v0[42];
            v196 = v0[41];
            v203 = v0[40];
            v19(v30, v0[47], v32);
            v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
            v34(v29, v30, v32);
            -[objc_class duration](v230, sel_duration);
            sub_1BB86BE90();
            sub_1BB86CA90();
            sub_1BB86C778();
            (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v33, v203);
            if ((sub_1BB86BEA8() & 1) == 0)
            {
              swift_bridgeObjectRelease();
              if (qword_1ED3C0B50 != -1)
                swift_once();
              v70 = v0[55];
              v71 = v0[51];
              v72 = v0[49];
              v73 = v0[45];
              v228 = v0[46];
              v74 = v0[43];
              v75 = v0[44];
              v76 = sub_1BB86EFEC();
              __swift_project_value_buffer(v76, (uint64_t)qword_1ED476918);
              v34(v71, v70, v72);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v73, v228, v74);
              v77 = sub_1BB86EFC8();
              v78 = sub_1BB87330C();
              v79 = os_log_type_enabled(v77, v78);
              v80 = v0[55];
              v82 = v0[52];
              v81 = v0[53];
              v83 = v0[51];
              v212 = v0[50];
              v84 = v0[49];
              v85 = v0[46];
              v221 = v0[45];
              v218 = v0[44];
              v229 = v0[43];
              if (v79)
              {
                logb = v77;
                v86 = v0[39];
                v87 = v0[36];
                v171 = v0[37];
                v205 = v0[55];
                v88 = v0[35];
                v169 = v0[34];
                v170 = v0[38];
                v198 = v0[52];
                v89 = swift_slowAlloc();
                v176 = swift_slowAlloc();
                v231 = v176;
                *(_DWORD *)v89 = 136315394;
                sub_1BB86C7A8();
                sub_1BB86C790();
                v183 = v81;
                v90 = sub_1BB86C898();
                type = v78;
                v92 = v91;
                (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v169);
                (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v86, v171);
                v0[19] = sub_1BA5D2E14(v90, v92, &v231);
                sub_1BB873A8C();
                swift_bridgeObjectRelease();
                v93 = *(void (**)(uint64_t, uint64_t))(v212 + 8);
                v93(v83, v84);
                *(_WORD *)(v89 + 12) = 2080;
                sub_1BA50AD30(&qword_1EF2C5E40, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE608]);
                v94 = sub_1BB87420C();
                v0[20] = sub_1BA5D2E14(v94, v95, &v231);
                sub_1BB873A8C();
                swift_bridgeObjectRelease();
                v96 = *(void (**)(uint64_t, uint64_t))(v218 + 8);
                v96(v221, v229);
                _os_log_impl(&dword_1BA493000, logb, type, "PuzzleGameCenterService: Trying to send score for puzzle published %s, outside active leaderboard interval [%s]", (uint8_t *)v89, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x1BCCE5C38](v176, -1, -1);
                MEMORY[0x1BCCE5C38](v89, -1, -1);

                v93(v198, v84);
                v96(v85, v229);
                v93(v183, v84);
                v93(v205, v84);
              }
              else
              {

                v97 = *(void (**)(uint64_t, uint64_t))(v218 + 8);
                v97(v221, v229);
                v98 = *(void (**)(uint64_t, uint64_t))(v212 + 8);
                v98(v83, v84);
                v98(v82, v84);
                v97(v85, v229);
                v98(v81, v84);
                v98(v80, v84);
              }
              goto LABEL_76;
            }
            v209 = v0;
            v35 = (_QWORD *)v0[33];
            v36 = v35[28];
            v37 = v35[29];
            __swift_project_boxed_opaque_existential_1(v35 + 25, v36);
            v38 = (void *)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v37 + 8) + 48))(v216, v226, v36);
            if (!v38)
            {
              if (qword_1ED3C0B50 != -1)
                swift_once();
              v110 = sub_1BB86EFEC();
              __swift_project_value_buffer(v110, (uint64_t)qword_1ED476918);
              swift_bridgeObjectRetain();
              v111 = sub_1BB86EFC8();
              v112 = sub_1BB87330C();
              v113 = os_log_type_enabled(v111, v112);
              v114 = v0[55];
              v115 = v209[53];
              v214 = v209[52];
              v116 = v209[49];
              v117 = v209[46];
              v200 = v209[50];
              v207 = v209[44];
              v223 = v209[43];
              if (v113)
              {
                v188 = v209[46];
                v118 = (uint8_t *)swift_slowAlloc();
                logc = v115;
                v119 = swift_slowAlloc();
                v231 = v119;
                *(_DWORD *)v118 = 136315138;
                swift_bridgeObjectRetain();
                *v191 = sub_1BA5D2E14(v216, v226, &v231);
                sub_1BB873A8C();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_1BA493000, v111, v112, "PuzzleGameCenterService: Failed to load history item for %s", v118, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1BCCE5C38](v119, -1, -1);
                MEMORY[0x1BCCE5C38](v118, -1, -1);

                v109 = *(void (**)(uint64_t, uint64_t))(v200 + 8);
                v109(v214, v116);
                (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v188, v223);
                v109((uint64_t)logc, v116);
              }
              else
              {

                swift_bridgeObjectRelease_n();
                v109 = *(void (**)(uint64_t, uint64_t))(v200 + 8);
                v109(v214, v116);
                (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v117, v223);
                v109((uint64_t)v115, v116);
              }
              v120 = v114;
              v121 = v116;
              goto LABEL_58;
            }
            v1 = v38;
            v39 = objc_msgSend(v38, sel_usedReveal);
            if (v39)
            {
              v40 = v39;
              v41 = objc_msgSend(v39, sel_BOOLValue);

              if ((v41 & 1) != 0)
              {
                if (qword_1ED3C0B50 != -1)
                  swift_once();
                v42 = sub_1BB86EFEC();
                __swift_project_value_buffer(v42, (uint64_t)qword_1ED476918);
                swift_bridgeObjectRetain();
                v43 = sub_1BB86EFC8();
                v44 = sub_1BB87330C();
                v45 = os_log_type_enabled(v43, v44);
                v46 = v0[55];
                v211 = v0[53];
                v48 = v0[49];
                v47 = v0[50];
                v186 = v0[44];
                v192 = v0[52];
                v197 = v0[43];
                v204 = v0[46];
                if (v45)
                {
                  v175 = v0[50];
                  v49 = (uint8_t *)swift_slowAlloc();
                  loga = v46;
                  v50 = swift_slowAlloc();
                  v231 = v50;
                  *(_DWORD *)v49 = 136315138;
                  swift_bridgeObjectRetain();
                  v0[28] = sub_1BA5D2E14(v216, v226, &v231);
                  sub_1BB873A8C();
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_1BA493000, v43, v44, "PuzzleGameCenterService: Skipped sending score for puzzle %s where reveal was used", v49, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1BCCE5C38](v50, -1, -1);
                  MEMORY[0x1BCCE5C38](v49, -1, -1);

                  v51 = *(void (**)(uint64_t, uint64_t))(v175 + 8);
                  v51(v192, v48);
                  (*(void (**)(uint64_t, uint64_t))(v186 + 8))(v204, v197);
                  v51(v211, v48);
                  v52 = loga;
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                  v51 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
                  v51(v192, v48);
                  (*(void (**)(uint64_t, uint64_t))(v186 + 8))(v204, v197);
                  v51(v211, v48);
                  v52 = v46;
                }
                v51((uint64_t)v52, v48);
                goto LABEL_76;
              }
            }
            FCPuzzleProviding.puzzleKind.getter();
            if (v231 == 3)
            {
              v187 = v0 + 22;
              v222 = v1;
              if (qword_1ED3C0B50 != -1)
                swift_once();
              v99 = sub_1BB86EFEC();
              __swift_project_value_buffer(v99, (uint64_t)qword_1ED476918);
              swift_bridgeObjectRetain();
              v100 = sub_1BB86EFC8();
              v101 = sub_1BB87330C();
              v102 = os_log_type_enabled(v100, v101);
              v103 = v0[55];
              v104 = v209[53];
              v105 = v209[49];
              v193 = v209[50];
              v106 = v209[46];
              v199 = v209[44];
              v206 = v209[52];
              v213 = v209[43];
              if (v102)
              {
                v184 = v209[46];
                v107 = (uint8_t *)swift_slowAlloc();
                v108 = swift_slowAlloc();
                v231 = v108;
                *(_DWORD *)v107 = 136315138;
                swift_bridgeObjectRetain();
                *v187 = sub_1BA5D2E14(v216, v226, &v231);
                sub_1BB873A8C();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_1BA493000, v100, v101, "PuzzleGameCenterService: Failed to identify puzzle kind for %s", v107, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1BCCE5C38](v108, -1, -1);
                MEMORY[0x1BCCE5C38](v107, -1, -1);

                v109 = *(void (**)(uint64_t, uint64_t))(v193 + 8);
                v109(v206, v105);
                (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v184, v213);
                v109(v104, v105);
              }
              else
              {

                swift_bridgeObjectRelease_n();
                v109 = *(void (**)(uint64_t, uint64_t))(v193 + 8);
                v109(v206, v105);
                (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v106, v213);
                v109(v104, v105);
              }
              v120 = v103;
              v121 = v105;
LABEL_58:
              v109(v120, v121);
              v220 = 0;
              v0 = v209;
              goto LABEL_77;
            }
            if (v231 <= 1u)
            {
              v122 = objc_msgSend(v1, sel_firstPlayDuration);
              if (v122)
              {
                v123 = v122;
                v124 = (id)v0[29];
                v125 = objc_msgSend(v122, sel_integerValue);

                if (v125 != v124)
                {
                  if (qword_1ED3C0B50 != -1)
                    swift_once();
                  v126 = sub_1BB86EFEC();
                  __swift_project_value_buffer(v126, (uint64_t)qword_1ED476918);
                  swift_bridgeObjectRetain();
                  v127 = sub_1BB86EFC8();
                  v128 = sub_1BB87330C();
                  v129 = os_log_type_enabled(v127, v128);
                  v130 = v0[55];
                  v215 = v0[53];
                  v194 = v0[52];
                  log = (os_log_t)v0[50];
                  v224 = v0[49];
                  v189 = v0[44];
                  v201 = v0[43];
                  v208 = v0[46];
                  if (!v129)
                  {

                    swift_bridgeObjectRelease_n();
                    isa = (void (*)(uint64_t, uint64_t))log[1].isa;
                    isa(v194, v224);
                    (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v208, v201);
                    isa(v215, v224);
                    isa(v130, v224);
                    goto LABEL_76;
                  }
                  *(_QWORD *)typea = v0[55];
                  v131 = v0[29];
                  v172 = v127;
                  v132 = swift_slowAlloc();
                  v133 = swift_slowAlloc();
                  v231 = v133;
                  *(_DWORD *)v132 = 134218498;
                  v0[25] = v131;
                  sub_1BB873A8C();
                  *(_WORD *)(v132 + 12) = 2080;
                  swift_bridgeObjectRetain();
                  v0[26] = sub_1BA5D2E14(v216, v226, &v231);
                  sub_1BB873A8C();
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v132 + 22) = 2048;
                  v0[27] = v125;
                  sub_1BB873A8C();
                  _os_log_impl(&dword_1BA493000, v172, v128, "PuzzleGameCenterService: Trying to send score [%ld] for puzzle %s that is not the first playDuration [%ld] ", (uint8_t *)v132, 0x20u);
                  swift_arrayDestroy();
                  MEMORY[0x1BCCE5C38](v133, -1, -1);
                  MEMORY[0x1BCCE5C38](v132, -1, -1);

                  v134 = (void (*)(uint64_t, uint64_t))log[1].isa;
                  v135 = v224;
                  v134(v194, v224);
                  (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v208, v201);
                  v134(v215, v224);
                  v136 = *(os_log_t *)typea;
                  goto LABEL_81;
                }
              }
              v137 = v0[55];
              v147 = v0[52];
              v146 = v0[53];
              v140 = v0[49];
              v148 = v0[50];
              v149 = v0[46];
              v150 = v0[43];
              v151 = v0[44];

              swift_bridgeObjectRelease();
              v144 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
              v144(v147, v140);
              (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v149, v150);
              v145 = v146;
              goto LABEL_64;
            }
            if ((uint64_t)v0[29] > 0)
            {
              v137 = v0[55];
              v138 = v0[52];
              v225 = v0[53];
              v140 = v0[49];
              v139 = v0[50];
              v141 = v0[46];
              v143 = v0[43];
              v142 = v0[44];

              swift_bridgeObjectRelease();
              v144 = *(void (**)(uint64_t, uint64_t))(v139 + 8);
              v144(v138, v140);
              (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v141, v143);
              v145 = v225;
LABEL_64:
              v144(v145, v140);
              v144(v137, v140);
              goto LABEL_20;
            }
            if (qword_1ED3C0B50 != -1)
              swift_once();
            v152 = sub_1BB86EFEC();
            __swift_project_value_buffer(v152, (uint64_t)qword_1ED476918);
            swift_bridgeObjectRetain();
            v3 = sub_1BB86EFC8();
            v153 = sub_1BB87330C();
            v154 = os_log_type_enabled((os_log_t)v3, v153);
            v2 = v0[55];
            v210 = v0[53];
            v190 = v0[52];
            v182 = v0[50];
            v219 = v0[49];
            v185 = v0[44];
            v195 = v0[43];
            v202 = v0[46];
            if (v154)
            {
              v155 = v0[29];
              logd = (os_log_t)v0[55];
              v156 = swift_slowAlloc();
              v157 = swift_slowAlloc();
              v231 = v157;
              *(_DWORD *)v156 = 134218242;
              v0[23] = v155;
              sub_1BB873A8C();
              *(_WORD *)(v156 + 12) = 2080;
              swift_bridgeObjectRetain();
              v0[24] = sub_1BA5D2E14(v216, v226, &v231);
              sub_1BB873A8C();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1BA493000, (os_log_t)v3, v153, "PuzzleGameCenterService: Trying to send invalid score [%ld] for puzzle %s", (uint8_t *)v156, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1BCCE5C38](v157, -1, -1);
              MEMORY[0x1BCCE5C38](v156, -1, -1);

              v134 = *(void (**)(uint64_t, uint64_t))(v182 + 8);
              v135 = v219;
              v134(v190, v219);
              (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v202, v195);
              v134(v210, v219);
              v136 = logd;
LABEL_81:
              v134((uint64_t)v136, v135);
              goto LABEL_76;
            }
LABEL_80:

            swift_bridgeObjectRelease_n();
            v134 = *(void (**)(uint64_t, uint64_t))(v182 + 8);
            v135 = v219;
            v134(v190, v219);
            (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v202, v195);
            v134(v210, v219);
            v136 = v2;
            goto LABEL_81;
          }
        }
        else
        {
          v20(v0[47], 1, 1, v0[49]);
        }
        v58 = v0[47];
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v58, (uint64_t (*)(_QWORD))sub_1BA76D78C);
        if (qword_1ED3C0B50 != -1)
          swift_once();
        v59 = sub_1BB86EFEC();
        __swift_project_value_buffer(v59, (uint64_t)qword_1ED476918);
        swift_bridgeObjectRetain_n();
        v60 = sub_1BB86EFC8();
        v61 = sub_1BB87330C();
        v62 = os_log_type_enabled(v60, v61);
        v63 = v0[55];
        v64 = v0[49];
        v65 = v0[50];
        v66 = v0[32];
        if (v62)
        {
          v227 = v0[49];
          v67 = v0[31];
          v217 = v0[55];
          v68 = (uint8_t *)swift_slowAlloc();
          v69 = swift_slowAlloc();
          v231 = v69;
          *(_DWORD *)v68 = 136315138;
          swift_bridgeObjectRetain();
          v0[18] = sub_1BA5D2E14(v67, v66, &v231);
          sub_1BB873A8C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BA493000, v60, v61, "PuzzleGameCenterService: Failed to load the start date for recurring leaderboard %s", v68, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCE5C38](v69, -1, -1);
          MEMORY[0x1BCCE5C38](v68, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v217, v227);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
        }
        goto LABEL_76;
      }
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[50] + 56))(v0[48], 1, 1, v0[49]);
    }
    sub_1BA4A2E80(v0[48], (uint64_t (*)(_QWORD))sub_1BA76D78C);
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v53 = sub_1BB86EFEC();
    __swift_project_value_buffer(v53, (uint64_t)qword_1ED476918);
    swift_bridgeObjectRetain();
    v54 = sub_1BB86EFC8();
    v55 = sub_1BB87330C();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v231 = v57;
      *(_DWORD *)v56 = 136315138;
      swift_bridgeObjectRetain();
      *v12 = sub_1BA5D2E14(v216, v11, &v231);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v54, v55, "PuzzleGameCenterService: Failed to load the publish date for %s", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v57, -1, -1);
      MEMORY[0x1BCCE5C38](v56, -1, -1);

LABEL_75:
LABEL_76:
      v220 = 0;
      goto LABEL_77;
    }

    goto LABEL_74;
  }
  swift_bridgeObjectRelease();

LABEL_20:
  v220 = 1;
LABEL_77:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(_QWORD))v0[1])(v220);
}

uint64_t sub_1BB502DD8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 448);
  v2 = *(void **)(v0 + 456);
  swift_willThrow();

  if (qword_1ED3C0B50 != -1)
    swift_once();
  v3 = sub_1BB86EFEC();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED476918);
  swift_bridgeObjectRetain_n();
  v4 = sub_1BB86EFC8();
  v5 = sub_1BB87330C();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 256);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 248);
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 128) = sub_1BA5D2E14(v8, v7, &v12);
    sub_1BB873A8C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BA493000, v4, v5, "PuzzleGameCenterService: Failed to load leaderboard %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v10, -1, -1);
    MEMORY[0x1BCCE5C38](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1BB503024(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  sub_1BA8EBDF8();
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_1BB503094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_1BB5030E0;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB5030E0(char a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_task_dealloc();
  if ((a1 & 1) != 0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1BB50314C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 240);
  return swift_task_switch();
}

uint64_t sub_1BB50316C()
{
  uint64_t v0;
  _QWORD *v1;

  objc_msgSend(*(id *)(v0 + 32), sel_addObserver_, *(_QWORD *)(v0 + 16));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1BB5031C8;
  return sub_1BB4FC1E0();
}

uint64_t sub_1BB5031C8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  *v2 = v4;
  v2[1] = sub_1BB503240;
  v2[10] = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_1BB503240()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BB503288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = v0;
  sub_1BA81D6FC(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB872F94();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA81D6FC);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_1BB872F88();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_1BB872F28();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_1EF2C5F68;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1BB503458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_1BB5034A4;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB5034A4(char a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_task_dealloc();
  if ((a1 & 1) != 0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1BB503510()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 240);
  return swift_task_switch();
}

uint64_t sub_1BB503530()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  objc_msgSend(*(id *)(v0 + 32), sel_removeObserver_, *(_QWORD *)(v0 + 16));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1BB504708;
  v1[2] = *(_QWORD *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  v1[3] = v2;
  *v2 = v1;
  v2[1] = sub_1BB4FA868;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB5035B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_1BB503600;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB503600(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *v1;
  v4 = *v1;
  swift_task_dealloc();
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(void))(v4 + 8))();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_1BB503680;
  return sub_1BB4FC1E0();
}

uint64_t sub_1BB503680()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 40) = v2;
  *v2 = v4;
  v2[1] = sub_1BB4FBC08;
  v2[10] = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

_QWORD *assignWithCopy for FormatCustomNodeName(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for PuzzleGameCenterPendingScoreEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleGameCenterPendingScoreEntry()
{
  return &type metadata for PuzzleGameCenterPendingScoreEntry;
}

uint64_t initializeWithCopy for PuzzleGameCenterListenerType(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for PuzzleGameCenterListenerType(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for PuzzleGameCenterListenerType(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t storeEnumTagSinglePayload for PuzzleGameCenterListenerType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleGameCenterListenerType()
{
  return &type metadata for PuzzleGameCenterListenerType;
}

uint64_t sub_1BB503984(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1ED3AD788, a2, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleGameCenterService, (uint64_t)&unk_1BB920960);
}

id sub_1BB5039B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  objc_class *ObjectType;
  uint64_t v13;
  uint64_t v14;
  id v15;
  objc_super v17;

  v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_defaultActor_initialize();
  *(_QWORD *)(v6 + 248) = 0;
  v13 = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(v6 + 256) = 1;
  v14 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 264) = v13;
  *(_QWORD *)(v6 + 272) = v14;
  sub_1BA4C010C(a1, v6 + 120);
  *(_QWORD *)(v6 + 112) = a2;
  sub_1BA4C010C(a3, v6 + 160);
  sub_1BA4C010C(a4, v6 + 200);
  *(_QWORD *)(v6 + 240) = a5;
  v17.receiver = (id)v6;
  v17.super_class = ObjectType;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v15 = objc_msgSendSuper2(&v17, sel_init);
  objc_msgSend(a5, sel_addObserver_, v15, v17.receiver, v17.super_class);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v15;
}

uint64_t sub_1BB503AC0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4AD288(0, &qword_1ED3A2C80, (uint64_t)&type metadata for PuzzleGameCenterListenerType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1BB503B14()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id result;
  void *v8;
  void *v9;
  uint64_t v10;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BB86C67C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C634();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return (id)sub_1BA4A2E80((uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (result)
  {
    v8 = result;
    v9 = (void *)sub_1BB86C58C();
    objc_msgSend(v8, sel_openSensitiveURL_withOptions_, v9, 0);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB503C74()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB503CB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1BA8195A4;
  return sub_1BB4FFCF0(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1BB503D44()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB503D78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1BA8195A4;
  return sub_1BB4FFA94(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1BB503DFC(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1BB4FAA88(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24);
}

uint64_t sub_1BB503E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BA8195A4;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_1BB503E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BA8195A4;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_1BB503ED0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BB503F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1BA8195A4;
  *(_OWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1BB503F64()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocObject();
}

uint64_t sub_1BB503F98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[9];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BA8195A4;
  return sub_1BB4FB7C0(a1, v4, v5, v6, v7);
}

void sub_1BB504014(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AE418, (uint64_t (*)(uint64_t))sub_1BB504030, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB504030()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AE410)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AE410);
  }
}

uint64_t sub_1BB504098()
{
  uint64_t v0;

  return sub_1BB4FFF0C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_1E73184F0, (uint64_t)&unk_1EF2C5EB0);
}

uint64_t sub_1BB5040C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BA8195A4;
  return sub_1BB4FFC84(a1, v4, v5, v7, v6);
}

uint64_t sub_1BB50413C()
{
  uint64_t v0;

  return sub_1BB4FFF0C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_1E7318568, (uint64_t)&unk_1EF2C5EC0);
}

uint64_t sub_1BB504168(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BA8195A4;
  return sub_1BB4FFFF0(a1, v4, v5, v7, v6);
}

uint64_t sub_1BB5041E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1BA4B0D38;
  return sub_1BB4FF45C(a1, a2, v7, v6);
}

uint64_t sub_1BB50424C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BB504278(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BA8195A4;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_1BA8195A4;
  return sub_1BB611C98(a1);
}

uint64_t sub_1BB5042F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BA8195A4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF2C5F20 + dword_1EF2C5F20))(a1, v4);
}

unint64_t sub_1BB504360()
{
  unint64_t result;

  result = qword_1EF2C5F48;
  if (!qword_1EF2C5F48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleGameCenterSubmitScoreError, &type metadata for PuzzleGameCenterSubmitScoreError);
    atomic_store(result, &qword_1EF2C5F48);
  }
  return result;
}

uint64_t sub_1BB5043AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BA8195A4;
  v3[2] = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_1BB5034A4;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB504418()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB50443C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = v0;
  sub_1BA81D6FC(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB872F94();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA81D6FC);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_1BB872F88();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_1BB872F28();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_1EF2C5F80;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1BB504610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BA8195A4;
  v3[2] = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_1BB5030E0;
  return sub_1BB4F9E20();
}

uint64_t sub_1BB504680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BA8195A4;
  v3[2] = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_1BB503600;
  return sub_1BB4F9E20();
}

uint64_t FCSportsType.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x6574656C687461;
  switch(a1)
  {
    case 1:
      result = 0x74726F7073;
      break;
    case 2:
      result = 0x65756761656CLL;
      break;
    case 3:
      result = 1835099508;
      break;
    case 4:
      return result;
    case 5:
      result = 0x656D616E72756F74;
      break;
    case 6:
      result = 0x6E6F697369766964;
      break;
    case 7:
      result = 0x696C706963736964;
      break;
    case 8:
      result = 0x6E657265666E6F63;
      break;
    case 9:
      result = 0x756761656C627573;
      break;
    case 10:
      result = 1701011826;
      break;
    case 11:
      result = 0x74697465706D6F63;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_1BB504860()
{
  uint64_t *v0;

  return FCSportsType.description.getter(*v0);
}

uint64_t dispatch thunk of FeedTopicClusteringJournalStorageServiceType.store(clusteringJournal:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void sub_1BB504870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[216];

  v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA968270(v0, (uint64_t)v5);
  __asm { BR              X11 }
}

uint64_t sub_1BB50499C@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v1 + 840) = a1 & 0xF;
  sub_1BA968048(v1 + 792, v6 - 240);
  sub_1BA4A9E78(*(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), v5);
  if (!v2)
  {
    sub_1BA968048(v6 - 240, v1 + 544);
    swift_retain();
    FormatHeadlineBinding.Text.text(from:computedContext:selectors:)(v5, v4, (uint64_t)sub_1BB506980, v3);
    v3 = v7;
    swift_release();
    sub_1BA4A2E80(v5, type metadata accessor for FeedHeadline);
  }
  return v3;
}

void sub_1BB50514C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[9];
  _BYTE v11[216];
  uint64_t v12;

  v10[6] = a2;
  v12 = a1;
  v3 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FormatOptionsNodeStatementContext();
  v10[7] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v10[8] = (char *)v10 - v8;
  v9 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v9);
  sub_1BA968270(v2, (uint64_t)v11);
  __asm { BR              X11 }
}

uint64_t sub_1BB5052D4@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v1 + 888) = a1 & 0xF;
  sub_1BA968048(v1 + 840, v4 - 240);
  v5 = *(_QWORD *)(v4 - 72);
  v6 = *(_QWORD *)(v1 + 72);
  sub_1BA9AD408();
  if (!v6)
  {
    sub_1BA968048(v4 - 240, v1 + 592);
    v7 = *(_QWORD *)(v1 + 64);
    sub_1BA75D1C8(v5, v7);
    v8 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 56) + 80);
    v9 = (v8 + 16) & ~v8;
    v10 = swift_allocObject();
    sub_1BA75D20C(v7, v10 + v9);
    FormatHeadlineBinding.Text.text(from:computedContext:selectors:)(v2, *(_QWORD *)(v1 + 48), (uint64_t)sub_1BB506880, v10);
    v3 = v11;
    swift_release();
    sub_1BA4A2E80(v2, type metadata accessor for FeedHeadline);
  }
  return v3;
}

void sub_1BB505C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  __asm { BR              X10 }
}

uint64_t (*sub_1BB505CB4())(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  if (v3 > 0xFDu)
    v7 = 1;
  else
    v7 = v5;
  v13 = v7;
  if (v3 <= 0xFDu)
    v8 = v4;
  else
    v8 = 0;
  if (v3 <= 0xFDu)
    v9 = v3;
  else
    v9 = 0;
  v10 = v6 + *(int *)(type metadata accessor for FeedWeather(0) + 36);
  sub_1BA968194(v5, v4, v3);
  v11 = v1(v10, v2, v13, v8, v9);
  if (!v0)
    v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v11;
  sub_1BA968268(v13, v8, v9);
  return v1;
}

void sub_1BB505EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  __asm { BR              X10 }
}

void (*sub_1BB505F44())(char *, uint64_t)
{
  uint64_t v0;
  void (*v1)(char *, uint64_t);
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);

  if (v2 > 0xFDu)
    v6 = 1;
  else
    v6 = v4;
  if (v2 <= 0xFDu)
    v7 = v3;
  else
    v7 = 0;
  if (v2 <= 0xFDu)
    v8 = v2;
  else
    v8 = 0;
  v9 = v5 + *(int *)(type metadata accessor for FeedWeather(0) + 36);
  sub_1BA968194(v4, v3, v2);
  v10 = (void (*)(char *, uint64_t))sub_1BB01768C(v9, v1, v6, v7, v8);
  if (!v0)
    v1 = v10;
  sub_1BA968268(v6, v7, v8);
  return v1;
}

uint64_t sub_1BB506108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BA793D58();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 16) + 16))
  {
    v6 = *(_QWORD *)(v0 + 56);
    v2 = swift_bridgeObjectRetain();
    v3 = sub_1BA6E42A0(v2);
    sub_1BA6E3FB8(v3);
    swift_release();
    return v6;
  }
  else
  {
    v4 = sub_1BA6E3F38();
    swift_release();
  }
  return v4;
}

uint64_t sub_1BB5061A4()
{
  char v0;

  sub_1BA731518();
  return v0 & 1;
}

uint64_t _s8NewsFeed27FormatBindingTextExpressionV2eeoiySbAC_ACtFZ_0(__int128 *a1)
{
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  __int128 v6;
  char v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int16 v17;
  char v18;

  v1 = *((_WORD *)a1 + 24);
  v12 = *((_QWORD *)a1 + 8);
  v13 = *((_QWORD *)a1 + 7);
  v2 = *((_QWORD *)a1 + 11);
  v10 = *((_QWORD *)a1 + 10);
  v11 = *((_QWORD *)a1 + 9);
  v3 = *((_QWORD *)a1 + 12);
  v4 = *((unsigned __int8 *)a1 + 106);
  v5 = *((unsigned __int16 *)a1 + 52);
  v6 = a1[1];
  v14 = *a1;
  v15 = v6;
  v16 = a1[2];
  v17 = v1;
  _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v14);
  if ((v7 & 1) != 0)
  {
    *(_QWORD *)&v14 = v13;
    *((_QWORD *)&v14 + 1) = v12;
    *(_QWORD *)&v15 = v11;
    *((_QWORD *)&v15 + 1) = v10;
    *(_QWORD *)&v16 = v2;
    *((_QWORD *)&v16 + 1) = v3;
    v17 = v5;
    v18 = (v5 | (v4 << 16)) >> 16;
    _s8NewsFeed32FormatBindingTextExpressionLogicO2eeoiySbAC_ACtFZ_0((uint64_t)&v14);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

unint64_t sub_1BB5062F4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB506318();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB506318()
{
  unint64_t result;

  result = qword_1EF2C5FB0;
  if (!qword_1EF2C5FB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpression, &type metadata for FormatBindingTextExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C5FB0);
  }
  return result;
}

unint64_t sub_1BB50635C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA60ED30();
  a1[2] = sub_1BA5E9984();
  result = sub_1BB506390();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB506390()
{
  unint64_t result;

  result = qword_1EF2C5FB8;
  if (!qword_1EF2C5FB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpression, &type metadata for FormatBindingTextExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C5FB8);
  }
  return result;
}

uint64_t destroy for FormatBindingTextExpression(uint64_t a1)
{
  sub_1BA6EF090(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48), *(_BYTE *)(a1 + 49));
  return sub_1BA6EF404(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16));
}

uint64_t initializeWithCopy for FormatBindingTextExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 49);
  v11 = *(_BYTE *)(a2 + 48);
  sub_1BA713CDC(*(_QWORD *)a2, v5, v6, v7, v8, v9, v11, v10);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 49) = v10;
  v12 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a2 + 80);
  LODWORD(v9) = *(unsigned __int8 *)(a2 + 106);
  v16 = *(unsigned __int16 *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 96);
  sub_1BA714334(v12, v13, v14, v15, v18, v17, v16 | ((_DWORD)v9 << 16));
  *(_QWORD *)(a1 + 56) = v12;
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v18;
  *(_QWORD *)(a1 + 96) = v17;
  *(_BYTE *)(a1 + 106) = v9;
  *(_WORD *)(a1 + 104) = v16;
  return a1;
}

uint64_t assignWithCopy for FormatBindingTextExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 49);
  v11 = *(_BYTE *)(a2 + 48);
  sub_1BA713CDC(*(_QWORD *)a2, v5, v6, v7, v8, v9, v11, v10);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v18 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v11;
  v19 = *(_BYTE *)(a1 + 49);
  *(_BYTE *)(a1 + 49) = v10;
  sub_1BA6EF090(v12, v13, v14, v15, v16, v17, v18, v19);
  v20 = *(_QWORD *)(v2 + 56);
  v21 = *(_QWORD *)(v2 + 64);
  v22 = *(_QWORD *)(v2 + 72);
  v23 = *(_QWORD *)(v2 + 80);
  v24 = *(_QWORD *)(v2 + 88);
  v25 = *(_QWORD *)(v2 + 96);
  v26 = *(unsigned __int8 *)(v2 + 106);
  LODWORD(v2) = *(unsigned __int16 *)(v2 + 104);
  sub_1BA714334(v20, v21, v22, v23, v24, v25, v2 | (v26 << 16));
  v27 = *(_QWORD *)(a1 + 56);
  v28 = *(_QWORD *)(a1 + 64);
  v29 = *(_QWORD *)(a1 + 72);
  v30 = *(_QWORD *)(a1 + 80);
  v31 = *(_QWORD *)(a1 + 88);
  v32 = *(_QWORD *)(a1 + 96);
  v33 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
  *(_QWORD *)(a1 + 56) = v20;
  *(_QWORD *)(a1 + 64) = v21;
  *(_QWORD *)(a1 + 72) = v22;
  *(_QWORD *)(a1 + 80) = v23;
  *(_QWORD *)(a1 + 88) = v24;
  *(_QWORD *)(a1 + 96) = v25;
  *(_WORD *)(a1 + 104) = v2;
  *(_BYTE *)(a1 + 106) = v26;
  sub_1BA6EF404(v27, v28, v29, v30, v31, v32, v33);
  return a1;
}

uint64_t assignWithTake for FormatBindingTextExpression(uint64_t a1, uint64_t a2)
{
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  char v13;
  char v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;

  v4 = *(_WORD *)(a2 + 48);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a1 + 49);
  v13 = *(_BYTE *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v4;
  sub_1BA6EF090(v5, v6, v7, v8, v9, v10, v13, v12);
  v14 = *(_BYTE *)(a2 + 106);
  v15 = *(_WORD *)(a2 + 104);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a1 + 96);
  v22 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_WORD *)(a1 + 104) = v15;
  *(_BYTE *)(a1 + 106) = v14;
  sub_1BA6EF404(v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingTextExpression()
{
  return &type metadata for FormatBindingTextExpression;
}

uint64_t sub_1BB5066BC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy51_8(a2, a1);
  return a2;
}

uint64_t sub_1BB5066F8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16));
  return a1;
}

uint64_t sub_1BB50673C(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_8(a2, a1);
  return a2;
}

uint64_t sub_1BB506778(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_8(a2, a1);
  return a2;
}

_BYTE *sub_1BB5067B4(_BYTE *a1, _BYTE *a2)
{
  __swift_memcpy1_1(a2, a1);
  return a2;
}

uint64_t sub_1BB5067F0()
{
  swift_release();
  return swift_deallocObject();
}

_BYTE *sub_1BB506814(_BYTE *a1, _BYTE *a2)
{
  __swift_memcpy1_1(a2, a1);
  return a2;
}

uint64_t sub_1BB506850()
{
  return sub_1BA786F18();
}

uint64_t sub_1BB506888()
{
  type metadata accessor for FormatOptionsNodeStatementContext();
  return sub_1BB506108();
}

uint64_t objectdestroy_20Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatOptionsNodeStatementContext() - 8) + 80);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BA75BF9C();
    v4 = v0 + ((v1 + 16) & ~v1) + *(int *)(v3 + 48);
    sub_1BA75C00C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t static FormatColorAssignComponentProcessor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned __int8 v4;

  v2 = *(double *)(a1 + 8);
  v3 = *(double *)(a2 + 8);
  sub_1BB7ED8CC(*(_BYTE *)a1);
  return v4 & (v2 == v3);
}

unint64_t sub_1BB5069DC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB506A00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB506A00()
{
  unint64_t result;

  result = qword_1EF2C5FC0;
  if (!qword_1EF2C5FC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorAssignComponentProcessor, &type metadata for FormatColorAssignComponentProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2C5FC0);
  }
  return result;
}

unint64_t sub_1BB506A44(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA617378();
  a1[2] = sub_1BA5D94FC();
  result = sub_1BB506A78();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB506A78()
{
  unint64_t result;

  result = qword_1EF2C5FC8;
  if (!qword_1EF2C5FC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorAssignComponentProcessor, &type metadata for FormatColorAssignComponentProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2C5FC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatColorAssignComponentProcessor()
{
  return &type metadata for FormatColorAssignComponentProcessor;
}

double static UIEdgeInsets.clippingEdgeInsets.getter()
{
  return -8.0;
}

double static UIEdgeInsets.eightPointMargin.getter()
{
  return 8.0;
}

uint64_t dispatch thunk of GapOfflineViewStylerType.styled(title:description:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

id sub_1BB506AFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t inited;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;

  v1 = v0;
  v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v38, sel_setLineSpacing_, 2.0);
  objc_msgSend(v38, sel_setAlignment_, 1);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  v3 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BB872970();
  v5 = sub_1BA49A224(0, &qword_1ED3C04A0);
  v6 = (void *)sub_1BB8738DC();
  sub_1BA6DC310(0, (unint64_t *)&qword_1ED3D4470, (void (*)(uint64_t))sub_1BA81BA70);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v7 + 56) = v5;
  v8 = sub_1BB507004();
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 96) = v5;
  *(_QWORD *)(v7 + 104) = v8;
  *(_QWORD *)(v7 + 64) = v8;
  *(_QWORD *)(v7 + 72) = v4;
  v39 = v3;
  v36 = v4;
  v37 = (void *)sub_1BB8738E8();

  sub_1BB8729A0();
  v9 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v10 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v9, sel_initWithString_, v10);

  sub_1BA6DC310(0, (unint64_t *)&qword_1ED3BA010, (void (*)(uint64_t))sub_1BA81D1A4);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v12 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v13 = v1;
  v14 = *(void **)(v1 + 16);
  v15 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 64) = v15;
  *(_QWORD *)(inited + 40) = v14;
  v16 = v12;
  v17 = v14;
  sub_1BA76E82C(inited);
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v18 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_addAttributes_range_, v18, 0, objc_msgSend(v39, sel_length));

  v19 = swift_initStackObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v19 + 32) = v16;
  v20 = *(void **)(v13 + 24);
  *(_QWORD *)(v19 + 64) = v15;
  *(_QWORD *)(v19 + 40) = v20;
  v21 = v16;
  v22 = v20;
  sub_1BA76E82C(v19);
  v23 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_addAttributes_range_, v23, objc_msgSend(v39, sel_length), objc_msgSend(v36, sel_length));

  v24 = swift_initStackObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB87A390;
  v25 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(v24 + 32) = *MEMORY[0x1E0DC1140];
  v26 = *(void **)(v13 + 40);
  v27 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(v24 + 40) = v26;
  v28 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(v24 + 64) = v27;
  *(_QWORD *)(v24 + 72) = v28;
  *(_QWORD *)(v24 + 104) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(v24 + 80) = v38;
  v29 = v25;
  v30 = v26;
  v31 = v28;
  v32 = v38;
  sub_1BA76E82C(v24);
  v33 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_addAttributes_range_, v33, 0, objc_msgSend(v35, sel_length));

  return v35;
}

uint64_t sub_1BB506F80()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 16);

  v2 = *(void **)(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GapOfflineViewStyler()
{
  return objc_opt_self();
}

id sub_1BB506FE4()
{
  return sub_1BB506AFC();
}

unint64_t sub_1BB507004()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AC7F8;
  if (!qword_1ED3AC7F8)
  {
    v1 = sub_1BA49A224(255, &qword_1ED3C04A0);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AC7F8);
  }
  return result;
}

void sub_1BB50705C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2 + 64;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v7)
      goto LABEL_23;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v7)
        goto LABEL_23;
      v13 = *(_QWORD *)(v3 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v7)
          goto LABEL_23;
        v13 = *(_QWORD *)(v3 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v7)
            goto LABEL_23;
          v13 = *(_QWORD *)(v3 + 8 * v8);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    v11 = *(id *)(*(_QWORD *)(v2 + 56) + 8 * v10);
    FormatLayoutView.prepareForReuse()();

  }
  v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v7)
      goto LABEL_23;
    v13 = *(_QWORD *)(v3 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1BB5071D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  int64_t v49;
  id v50;
  _QWORD *v52;

  v48 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  v49 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    if (v4)
    {
      v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v9 = v8 | (v6 << 6);
      goto LABEL_26;
    }
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_54;
    if (v10 >= v49)
      return swift_release();
    v11 = *(_QWORD *)(v48 + 8 * v10);
    ++v6;
    if (!v11)
    {
      v6 = v10 + 1;
      if (v10 + 1 >= v49)
        return swift_release();
      v11 = *(_QWORD *)(v48 + 8 * v6);
      if (!v11)
      {
        v6 = v10 + 2;
        if (v10 + 2 >= v49)
          return swift_release();
        v11 = *(_QWORD *)(v48 + 8 * v6);
        if (!v11)
        {
          v6 = v10 + 3;
          if (v10 + 3 >= v49)
            return swift_release();
          v11 = *(_QWORD *)(v48 + 8 * v6);
          if (!v11)
          {
            v6 = v10 + 4;
            if (v10 + 4 >= v49)
              return swift_release();
            v11 = *(_QWORD *)(v48 + 8 * v6);
            if (!v11)
              break;
          }
        }
      }
    }
LABEL_25:
    v4 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v6 << 6);
LABEL_26:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v15 = *v13;
    v14 = v13[1];
    v16 = qword_1ED3CC1E0;
    swift_bridgeObjectRetain();
    if (v16 != -1)
      swift_once();
    v17 = *(_QWORD *)(qword_1ED476AA0 + 48);
    v18 = (unint64_t *)(v17 + 16);
    swift_beginAccess();
    v19 = *(_QWORD *)(v17 + 16);
    if (v19 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v27 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (!v27)
      {
LABEL_37:
        v28 = swift_endAccess();
        v29 = *(_QWORD *)(v17 + 64);
        v30 = __OFADD__(v29, 1);
        v31 = v29 + 1;
        if (v30)
          goto LABEL_55;
        *(_QWORD *)(v17 + 64) = v31;
        v26 = (void *)(*(uint64_t (**)(uint64_t))(v17 + 40))(v28);
        goto LABEL_39;
      }
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      if (!v20)
        goto LABEL_37;
    }
    v21 = *v18;
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *v18 = v21;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v21 & 0x8000000000000000) != 0
      || (v21 & 0x4000000000000000) != 0)
    {
      sub_1BAA67DA8(v21);
    }
    v23 = v21 & 0xFFFFFFFFFFFFFF8;
    v24 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v24)
      goto LABEL_52;
    v25 = v24 - 1;
    v26 = *(void **)((v21 & 0xFFFFFFFFFFFFFF8) + 8 * v25 + 0x20);
    *(_QWORD *)(v23 + 16) = v25;
    sub_1BB872DCC();
    swift_endAccess();
LABEL_39:
    swift_release();
    objc_msgSend(v26, sel_setUserInteractionEnabled_, 0);
    sub_1BB873708();
    objc_msgSend(v50, sel_addSubview_, v26);
    swift_beginAccess();
    v32 = v26;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = (_QWORD *)*v5;
    v52 = (_QWORD *)*v5;
    *v5 = 0x8000000000000000;
    v36 = sub_1BA6E35A8(v15, v14);
    v37 = v34[2];
    v38 = (v35 & 1) == 0;
    v39 = v37 + v38;
    if (__OFADD__(v37, v38))
    {
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    v40 = v35;
    if (v34[3] >= v39)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v43 = v52;
        if ((v35 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BB4C70E0();
        v43 = v52;
        if ((v40 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1BB4B5D24(v39, isUniquelyReferenced_nonNull_native);
      v41 = sub_1BA6E35A8(v15, v14);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_57;
      v36 = v41;
      v43 = v52;
      if ((v40 & 1) != 0)
      {
LABEL_4:
        v7 = v43[7];

        *(_QWORD *)(v7 + 8 * v36) = v32;
        goto LABEL_5;
      }
    }
    v43[(v36 >> 6) + 8] |= 1 << v36;
    v44 = (uint64_t *)(v43[6] + 16 * v36);
    *v44 = v15;
    v44[1] = v14;
    *(_QWORD *)(v43[7] + 8 * v36) = v32;
    v45 = v43[2];
    v30 = __OFADD__(v45, 1);
    v46 = v45 + 1;
    if (v30)
      goto LABEL_53;
    v43[2] = v46;
    swift_bridgeObjectRetain();
LABEL_5:
    *v5 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

  }
  v12 = v10 + 5;
  if (v12 >= v49)
    return swift_release();
  v11 = *(_QWORD *)(v48 + 8 * v12);
  if (v11)
  {
    v6 = v12;
    goto LABEL_25;
  }
  while (1)
  {
    v6 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v6 >= v49)
      return swift_release();
    v11 = *(_QWORD *)(v48 + 8 * v6);
    ++v12;
    if (v11)
      goto LABEL_25;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

void sub_1BB507664()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  char v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v25;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews];
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)v2 + 64;
  v5 = 1 << *(_BYTE *)(*(_QWORD *)v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*(_QWORD *)v2 + 64);
  v8 = &v1[OBJC_IVAR____TtC8NewsFeed15FormatStateView_state];
  v9 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  while (v7)
  {
    v13 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v14 = v13 | (v10 << 6);
LABEL_22:
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v14);
    swift_bridgeObjectRetain();
    v22 = v21;
    objc_msgSend(v1, sel_bounds);
    sub_1BB8736F0();
    v23 = *((_QWORD *)v8 + 1);
    if (v23)
    {
      if (*(_QWORD *)v8 != v20 || v23 != v19)
        sub_1BB874398();
    }
    sub_1BB873708();
    v25 = *((_QWORD *)v8 + 1);
    if (v25)
    {
      if (*(_QWORD *)v8 == v20 && v25 == v19)
        v11 = 1;
      else
        v11 = sub_1BB874398();
    }
    else
    {
      v11 = 0;
    }
    v12 = v22;
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setUserInteractionEnabled_, v11 & 1);

  }
  v15 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v15 >= v9)
    goto LABEL_35;
  v16 = *(_QWORD *)(v4 + 8 * v15);
  ++v10;
  if (v16)
    goto LABEL_21;
  v10 = v15 + 1;
  if (v15 + 1 >= v9)
    goto LABEL_35;
  v16 = *(_QWORD *)(v4 + 8 * v10);
  if (v16)
    goto LABEL_21;
  v10 = v15 + 2;
  if (v15 + 2 >= v9)
    goto LABEL_35;
  v16 = *(_QWORD *)(v4 + 8 * v10);
  if (v16)
  {
LABEL_21:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
    goto LABEL_22;
  }
  v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_35:
    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v9)
      goto LABEL_35;
    v16 = *(_QWORD *)(v4 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_21;
  }
LABEL_37:
  __break(1u);
}

void *sub_1BB5078B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  void *v8;
  id v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state + 8);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state);
  v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  swift_beginAccess();
  v4 = *v3;
  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BA6E35A8(v2, v1);
    if ((v7 & 1) != 0)
    {
      v8 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v6);
      v9 = v8;
    }
    else
    {
      v8 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BB507A4C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BB507A88()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  _QWORD *v6;
  __objc2_class_ro *v7;
  char **v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  char **v12;
  __objc2_class_ro *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t *v32;
  uint64_t v33;
  int64_t v34;
  void *v35;
  unint64_t v36;

  v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  swift_beginAccess();
  v32 = v1;
  v33 = *v1 + 64;
  v2 = 1 << *(_BYTE *)(*v1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(*v1 + 64);
  v34 = (unint64_t)(v2 + 63) >> 6;
  v36 = *v1;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = &unk_1ED476000;
  v7 = &StubThumbnailProcessor;
  v8 = &selRef_isSports;
  if (v4)
    goto LABEL_6;
LABEL_7:
  v22 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v22 < v34)
    {
      v23 = *(_QWORD *)(v33 + 8 * v22);
      ++v5;
      if (v23)
        goto LABEL_22;
      v5 = v22 + 1;
      if (v22 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v33 + 8 * v5);
      if (v23)
        goto LABEL_22;
      v5 = v22 + 2;
      if (v22 + 2 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v33 + 8 * v5);
      if (v23)
        goto LABEL_22;
      v5 = v22 + 3;
      if (v22 + 3 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v33 + 8 * v5);
      if (v23)
      {
LABEL_22:
        v4 = (v23 - 1) & v23;
        for (i = __clz(__rbit64(v23)) + (v5 << 6); ; i = v20 | (v5 << 6))
        {
          v25 = *(id *)(*(_QWORD *)(v36 + 56) + 8 * i);
          objc_msgSend(v25, sel_removeFromSuperview);
          if (qword_1ED3CC1E0 != -1)
            swift_once();
          v26 = v6[340];
          v27 = objc_msgSend(v25, (SEL)v7[51].base_props);
          objc_msgSend(v27, v8[202], 0);

          v28 = *(_QWORD **)(v26 + 48);
          swift_beginAccess();
          v29 = v28[2];
          if (v29 >> 62)
          {
            swift_bridgeObjectRetain();
            v30 = sub_1BB873F30();
            swift_bridgeObjectRelease();
          }
          else
          {
            v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v30 >= sub_1BAF6A380(v28[7]))
          {
            sub_1BA7AA598();
            v9 = swift_allocObject();
            *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
            v35 = v25;
            v10 = v4;
            v11 = v5;
            v12 = v8;
            v13 = v7;
            v14 = v6;
            v15 = v28[3];
            v16 = v28[4];
            *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
            v17 = sub_1BA6A2D8C();
            *(_QWORD *)(v9 + 32) = v15;
            *(_QWORD *)(v9 + 40) = v16;
            v6 = v14;
            v7 = v13;
            v8 = v12;
            v5 = v11;
            v4 = v10;
            *(_QWORD *)(v9 + 96) = MEMORY[0x1E0DEB418];
            *(_QWORD *)(v9 + 104) = MEMORY[0x1E0DEB490];
            *(_QWORD *)(v9 + 64) = v17;
            *(_QWORD *)(v9 + 72) = v30;
            sub_1BA517860();
            swift_bridgeObjectRetain();
            v18 = (void *)sub_1BB873A08();
            v19 = sub_1BB87330C();
            sub_1BB86EF44("Format layout view pool attempting to queue past queue size, [%{public}@], queue=%ld", 84, 2, &dword_1BA493000, v18, v19, v9);

            swift_bridgeObjectRelease();
            if (!v10)
              goto LABEL_7;
          }
          else
          {
            objc_msgSend(v25, sel_setUserInteractionEnabled_, 1);
            sub_1BB873708();
            sub_1BA79AFD4(0, 0);
            swift_beginAccess();
            v31 = v25;
            MEMORY[0x1BCCE36AC]();
            if (*(_QWORD *)((v28[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
            swift_endAccess();

            if (!v4)
              goto LABEL_7;
          }
LABEL_6:
          v20 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      v24 = v22 + 4;
      if (v24 < v34)
      {
        v23 = *(_QWORD *)(v33 + 8 * v24);
        if (v23)
        {
          v5 = v24;
          goto LABEL_22;
        }
        while (1)
        {
          v5 = v24 + 1;
          if (__OFADD__(v24, 1))
            goto LABEL_35;
          if (v5 >= v34)
            break;
          v23 = *(_QWORD *)(v33 + 8 * v5);
          ++v24;
          if (v23)
            goto LABEL_22;
        }
      }
    }
LABEL_33:
    swift_release();
    *v32 = sub_1BA8F38D8(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_1BB507ED8()
{
  sub_1BB50705C();
}

void sub_1BB507EF8()
{
  sub_1BB5083A8(&qword_1EF2C5FE8, (uint64_t)&unk_1BB920EA4);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t sub_1BB507F30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  char *v15;
  char *v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2 + 64;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (v6)
  {
    v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v11 = v10 | (v9 << 6);
LABEL_22:
    v15 = *(char **)(*(_QWORD *)(v2 + 56) + 8 * v11);
    v16 = &v15[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers];
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v16 + 16))
      goto LABEL_27;
    v17 = &v15[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations];
    result = swift_beginAccess();
    v18 = *(_QWORD *)v17;
    if (v18 >> 62)
    {
      v19 = v15;
      swift_bridgeObjectRetain();
      v20 = sub_1BB873F30();

      result = swift_bridgeObjectRelease();
      if (v20)
      {
LABEL_27:
        v21 = 1;
LABEL_29:
        swift_release();
        return v21;
      }
    }
    else if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_27;
    }
  }
  v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 >= v7)
    goto LABEL_28;
  v13 = *(_QWORD *)(v3 + 8 * v12);
  ++v9;
  if (v13)
    goto LABEL_21;
  v9 = v12 + 1;
  if (v12 + 1 >= v7)
    goto LABEL_28;
  v13 = *(_QWORD *)(v3 + 8 * v9);
  if (v13)
    goto LABEL_21;
  v9 = v12 + 2;
  if (v12 + 2 >= v7)
    goto LABEL_28;
  v13 = *(_QWORD *)(v3 + 8 * v9);
  if (v13)
    goto LABEL_21;
  v9 = v12 + 3;
  if (v12 + 3 >= v7)
    goto LABEL_28;
  v13 = *(_QWORD *)(v3 + 8 * v9);
  if (v13)
  {
LABEL_21:
    v6 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_22;
  }
  v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_28:
    v21 = 0;
    goto LABEL_29;
  }
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v7)
      goto LABEL_28;
    v13 = *(_QWORD *)(v3 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1BB50815C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews);
  swift_beginAccess();
  v2 = *v1;
  v3 = *v1 + 64;
  v4 = 1 << *(_BYTE *)(*v1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(*v1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v7)
      goto LABEL_23;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v7)
        goto LABEL_23;
      v13 = *(_QWORD *)(v3 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v7)
          goto LABEL_23;
        v13 = *(_QWORD *)(v3 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v7)
            goto LABEL_23;
          v13 = *(_QWORD *)(v3 + 8 * v8);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    v11 = *(id *)(*(_QWORD *)(v2 + 56) + 8 * v10);
    FormatLayoutView.blueprintViewportMonitor(_:viewportScrollDataDidChange:)();

  }
  v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v7)
      goto LABEL_23;
    v13 = *(_QWORD *)(v3 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1BB5082F8(uint64_t a1, uint64_t a2)
{
  sub_1BB508334(a1, a2, FormatLayoutView.viewDidLoad());
}

void sub_1BB508304(uint64_t a1, uint64_t a2)
{
  sub_1BB508334(a1, a2, FormatLayoutView.viewWillAppear());
}

void sub_1BB508310(uint64_t a1, uint64_t a2)
{
  sub_1BB508334(a1, a2, FormatLayoutView.viewDidAppear());
}

void sub_1BB50831C(uint64_t a1, uint64_t a2)
{
  sub_1BB508334(a1, a2, FormatLayoutView.viewWillDisappear());
}

void sub_1BB508328(uint64_t a1, uint64_t a2)
{
  sub_1BB508334(a1, a2, FormatLayoutView.viewDidDisappear());
}

void sub_1BB508334(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v4;
  id v5;

  v4 = sub_1BB5078B4();
  if (v4)
  {
    v5 = v4;
    a3();

  }
}

uint64_t sub_1BB508384()
{
  return sub_1BB5083A8(&qword_1ED39CBF0, (uint64_t)&unk_1BB920E6C);
}

uint64_t sub_1BB5083A8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatStateView();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB5083E4(uint64_t a1, unint64_t a2, char a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  objc_class *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  _QWORD v46[2];
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v5 = v4;
  v10 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  v60 = *(_QWORD *)(v58 - 8);
  v13 = *(_QWORD *)(v60 + 64);
  MEMORY[0x1E0C80A78](v58);
  v14 = (_QWORD *)((char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v46 - v16;
  v18 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v18);
  v59 = a2;
  v61 = a1;
  if ((a3 & 1) != 0)
  {
    LODWORD(v55) = a4;
    sub_1BA4AD288(0, &qword_1EF2C60A0, (uint64_t)&type metadata for DebugFormatUploadData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB3A68]);
    swift_allocObject();
    v46[0] = sub_1BB86E224();
    sub_1BB86DD38();
    sub_1BB86DD5C();
    swift_allocObject();
    v57 = sub_1BB86DD50();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = MEMORY[0x1E0DEE9D8];
    v58 = *(_QWORD *)(v5 + 16);
    v62 = 0xD000000000000019;
    v63 = 0x80000001BB98FA00;
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    sub_1BA4AD288(0, &qword_1ED3A39B0, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DB4150]);
    v21 = v20;
    v22 = objc_allocWithZone(v20);
    swift_retain();
    v23 = (void *)sub_1BB86E4F4();
    v24 = objc_allocWithZone(v21);
    v25 = (void *)sub_1BB86E4F4();
    v26 = swift_allocObject();
    swift_weakInit();
    v27 = swift_allocObject();
    v28 = v61;
    *(_QWORD *)(v27 + 16) = v26;
    *(_QWORD *)(v27 + 24) = v28;
    *(_QWORD *)(v27 + 32) = a2;
    *(_BYTE *)(v27 + 40) = 1;
    *(_QWORD *)(v27 + 48) = v46[0];
    *(_QWORD *)(v27 + 56) = v19;
    v29 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v56 = v19;
    v30 = v29;
    swift_retain();
    v31 = v61;
    sub_1BB86E0BC();

    if (*(_QWORD *)(v31 + 16))
    {
      v32 = *(unsigned __int8 *)(v60 + 80);
      v33 = v31 + ((v32 + 32) & ~v32);
      v60 = *(_QWORD *)(v60 + 72);
      v47 = (v32 + 16) & ~v32;
      v46[1] = v47 + v13;
      v52 = v32 | 7;
      v53 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploaderOperationQueue;
      v51 = (v32 + 24) & ~v32;
      v50 = v51 + v13;
      v49 = v51 + v13 + 1;
      v48 = v55 & 1;
      swift_bridgeObjectRetain();
      v54 = v30;
      v55 = v23;
      sub_1BA4C2DD8(v33, (uint64_t)v17, type metadata accessor for DebugFormatUploadPrivateEntry);
      __asm { BR              X9 }
    }
    v43 = *(void **)(v58 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploaderOperationQueue);
    objc_msgSend(v43, sel_addOperation_, v23);
    v44 = MEMORY[0x1BCCDEB28](objc_msgSend(v43, sel_addOperation_, v30));
    if (!v44)
    {
      __break(1u);
      JUMPOUT(0x1BB508C48);
    }
    v42 = v44;
    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    v34 = *(_QWORD *)(a1 + 16);
    v35 = MEMORY[0x1E0DEE9D8];
    if (v34)
    {
      v62 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BB873DD4();
      v36 = a1 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
      v37 = *(_QWORD *)(v60 + 72);
      v38 = v58;
      do
      {
        sub_1BA4C2DD8(v36, (uint64_t)v14, type metadata accessor for DebugFormatUploadPrivateEntry);
        v39 = *v14;
        sub_1BA4C2DD8((uint64_t)v14 + *(int *)(v38 + 20), (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
        type metadata accessor for DebugFormatUploadEntry();
        v40 = swift_allocObject();
        *(_QWORD *)(v40 + 16) = v39;
        sub_1BA5193C4((uint64_t)v12, v40 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
        v41 = v40 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_target;
        *(_QWORD *)v41 = 0;
        *(_QWORD *)(v41 + 8) = 0;
        *(_BYTE *)(v41 + 16) = 2;
        *(_QWORD *)(v40 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff) = 0;
        swift_retain();
        sub_1BA4A2E80((uint64_t)v14, type metadata accessor for DebugFormatUploadPrivateEntry);
        sub_1BB873DB0();
        sub_1BB873DE0();
        sub_1BB873DEC();
        sub_1BB873DBC();
        v36 += v37;
        --v34;
      }
      while (v34);
      v35 = v62;
      swift_bridgeObjectRelease();
      a2 = v59;
    }
    v62 = v35;
    v63 = a2;
    sub_1BA4AD288(0, &qword_1EF2C6098, (uint64_t)&type metadata for DebugFormatUploadData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    swift_bridgeObjectRetain();
    return sub_1BB86E9E0();
  }
  return v42;
}

void sub_1BB508C64(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB508CC8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  sub_1BB872AFC(a1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v3);
  result = swift_bridgeObjectRelease();
  *v1 = v5;
  v1[1] = v6;
  return result;
}

uint64_t sub_1BB508DB0(_QWORD *a1, uint64_t *a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;

  sub_1BB4D303C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA9B5BA0(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v39 - v18);
  v20 = *a4;
  v21 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  v22 = a3 + *(int *)(type metadata accessor for FormatCompilerOptions(0) + 24) + v21;
  sub_1BA4C2DD8(v22, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA9B5BA0);
  sub_1BA5193C4((uint64_t)v13, (uint64_t)v19, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v20)
  {
    if (v20 == 1)
    {
      if (v19[1] != 1)
      {
        v23 = v19 + 2;
        v24 = v19[3];
        goto LABEL_10;
      }
LABEL_8:
      sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatCompilerOptions.Newsroom);
LABEL_15:
      *a1 = 0;
      a1[1] = 0;
      sub_1BA4C2DD8(v22, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA9B5BA0);
      sub_1BA5193C4((uint64_t)v13, (uint64_t)v16, type metadata accessor for FormatCompilerOptions.Newsroom);
      v30 = *v16;
      v31 = v16[1];
      v32 = v16[2];
      v33 = v16[3];
      v34 = v16[4];
      v35 = v16[5];
      sub_1BA5931BC(*v16, v31);
      sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatCompilerOptions.Newsroom);
      *a2 = v30;
      a2[1] = v31;
      a2[2] = v32;
      a2[3] = v33;
      a2[4] = v34;
      a2[5] = v35;
      v36 = type metadata accessor for DebugFormatUploadHiddenReason();
      goto LABEL_16;
    }
    if (v19[1] == 1)
      goto LABEL_8;
    v23 = v19 + 4;
    v24 = v19[5];
  }
  else
  {
    v24 = v19[1];
    v23 = v19;
    if (v24 == 1)
      goto LABEL_8;
  }
LABEL_10:
  v25 = *v23;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (!v24)
    goto LABEL_15;
  swift_bridgeObjectRetain();
  sub_1BB86C8BC();
  v26 = sub_1BB86C8E0();
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v10, 1, v26);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BB4D303C);
  swift_bridgeObjectRelease();
  if (v27 != 1)
  {
    *a1 = v25;
    a1[1] = v24;
    v38 = type metadata accessor for DebugFormatUploadHiddenReason();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(a2, 1, 1, v38);
  }
  swift_bridgeObjectRelease();
  *a1 = 0;
  a1[1] = 0;
  if (v20)
  {
    if (v20 == 1)
    {
      v28 = 0xE700000000000000;
      v29 = 0x676E6967617453;
    }
    else
    {
      v28 = 0xEA00000000006E6FLL;
      v29 = 0x69746375646F7250;
    }
  }
  else
  {
    v28 = 0xE200000000000000;
    v29 = 16721;
  }
  *a2 = v29;
  a2[1] = v28;
  v36 = type metadata accessor for DebugFormatUploadHiddenReason();
LABEL_16:
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a2, 0, 1, v36);
}

uint64_t sub_1BB509124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v6 = sub_1BB872610();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB872664();
  v10 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA657D64();
  v13 = (void *)sub_1BB87345C();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_1BB50F23C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_80;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1BB872634();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, v7, MEMORY[0x1E0DEF510]);
  sub_1BA60B87C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
}

uint64_t sub_1BB509334(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _DWORD v5[4];

  if (a1 && a2)
  {
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    strcpy((char *)v5, "Processing... ");
    HIBYTE(v5[3]) = -18;
    sub_1BB87420C();
    sub_1BB872AFC(v2);
    swift_bridgeObjectRelease();
    sub_1BB872AFC((_QWORD *)0xEA0000000000676ELL);
    sub_1BB872AFC((_QWORD *)0xE100000000000000);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v3);
  }
  else
  {
    v5[0] = 0;
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
  }
  swift_retain();
  sub_1BB86E4A0();
  return swift_release();
}

uint64_t sub_1BB509508(uint64_t *a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v31 = a2;
  v32 = *v2;
  v4 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
  MEMORY[0x1E0C80A78](v34);
  v9 = (uint64_t *)&v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v10);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = (char *)a1 + *(int *)(v4 + 24);
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = v14[16];
  if (v17 >= 2)
  {
    v26 = *a1;
    sub_1BA4C2DD8((uint64_t)a1 + *(int *)(v4 + 20), (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    type metadata accessor for DebugFormatUploadEntry();
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v26;
    sub_1BA5193C4((uint64_t)v13, v27 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v28 = v27 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_target;
    *(_QWORD *)v28 = v16;
    *(_QWORD *)(v28 + 8) = v15;
    *(_BYTE *)(v28 + 16) = 2;
    *(_QWORD *)(v27 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff) = 0;
    *v9 = v27;
    swift_storeEnumTagMultiPayload();
    sub_1BA4B07F0(0, &qword_1EF2C60C0, type metadata accessor for DebugFormatUploadPrivateEntryResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    swift_retain();
    return sub_1BB86E9E0();
  }
  else
  {
    MEMORY[0x1E0C80A78](v11);
    *(_QWORD *)&v30[-32] = v33;
    *(_QWORD *)&v30[-24] = v16;
    *(_QWORD *)&v30[-16] = v15;
    sub_1BA5F1EC8(v16, v15, v17);
    sub_1BAA312C0(0);
    sub_1BB86EC14();
    sub_1BA5F1DE8(v16, v15, v17);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)&v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for DebugFormatUploadPrivateEntry);
    v18 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v19 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v7, v19 + v18, type metadata accessor for DebugFormatUploadPrivateEntry);
    v20 = (void *)sub_1BB86E854();
    sub_1BB50E6FC(0, &qword_1EF2C60D8, sub_1BB50DD9C, sub_1BAA312C0);
    sub_1BB86E980();
    swift_release();
    swift_release();

    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v7, type metadata accessor for DebugFormatUploadPrivateEntry);
    v21 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v7, v21 + v18, type metadata accessor for DebugFormatUploadPrivateEntry);
    *(_BYTE *)(v21 + v18 + v6) = v31 & 1;
    v22 = (void *)sub_1BB86E854();
    sub_1BB86E98C();
    swift_release();
    swift_release();

    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v7, type metadata accessor for DebugFormatUploadPrivateEntry);
    v23 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v7, v23 + v18, type metadata accessor for DebugFormatUploadPrivateEntry);
    v24 = (void *)sub_1BB86E854();
    v25 = sub_1BB86EA1C();
    swift_release();
    swift_release();

  }
  return v25;
}

uint64_t sub_1BB509924(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DebugFormatUploadHiddenEntry();
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  type metadata accessor for DebugFormatUploadHiddenReason();
  swift_storeEnumTagMultiPayload();
  *v7 = v8;
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenEntry);
  swift_storeEnumTagMultiPayload();
  sub_1BA4B07F0(0, &qword_1EF2C60C0, type metadata accessor for DebugFormatUploadPrivateEntryResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  swift_retain();
  v9 = sub_1BB86E9E0();
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenEntry);
  return v9;
}

uint64_t sub_1BB509A70(uint64_t *a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v31 = a2;
  v32 = *v2;
  v4 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
  MEMORY[0x1E0C80A78](v34);
  v9 = (uint64_t *)&v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v10);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = (char *)a1 + *(int *)(v4 + 24);
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = v14[16];
  if (v17 >= 2)
  {
    v26 = *a1;
    sub_1BA4C2DD8((uint64_t)a1 + *(int *)(v4 + 20), (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    type metadata accessor for DebugFormatUploadEntry();
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v26;
    sub_1BA5193C4((uint64_t)v13, v27 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v28 = v27 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_target;
    *(_QWORD *)v28 = v16;
    *(_QWORD *)(v28 + 8) = v15;
    *(_BYTE *)(v28 + 16) = 2;
    *(_QWORD *)(v27 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff) = 0;
    *v9 = v27;
    swift_storeEnumTagMultiPayload();
    sub_1BA4B07F0(0, &qword_1EF2C60C0, type metadata accessor for DebugFormatUploadPrivateEntryResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    swift_retain();
    return sub_1BB86E9E0();
  }
  else
  {
    MEMORY[0x1E0C80A78](v11);
    *(_QWORD *)&v30[-32] = v33;
    *(_QWORD *)&v30[-24] = v16;
    *(_QWORD *)&v30[-16] = v15;
    sub_1BA5F1EC8(v16, v15, v17);
    sub_1BAA30BA8(0);
    sub_1BB86EC14();
    sub_1BA5F1DE8(v16, v15, v17);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)&v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for DebugFormatUploadPrivateEntry);
    v18 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v19 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v7, v19 + v18, type metadata accessor for DebugFormatUploadPrivateEntry);
    v20 = (void *)sub_1BB86E854();
    sub_1BB50E6FC(0, &qword_1EF2C60B0, sub_1BB50DD9C, sub_1BAA30BA8);
    sub_1BB86E980();
    swift_release();
    swift_release();

    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v7, type metadata accessor for DebugFormatUploadPrivateEntry);
    v21 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v7, v21 + v18, type metadata accessor for DebugFormatUploadPrivateEntry);
    *(_BYTE *)(v21 + v18 + v6) = v31 & 1;
    v22 = (void *)sub_1BB86E854();
    sub_1BB86E98C();
    swift_release();
    swift_release();

    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v7, type metadata accessor for DebugFormatUploadPrivateEntry);
    v23 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v7, v23 + v18, type metadata accessor for DebugFormatUploadPrivateEntry);
    v24 = (void *)sub_1BB86E854();
    v25 = sub_1BB86EA1C();
    swift_release();
    swift_release();

  }
  return v25;
}

void sub_1BB509E8C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v10;
  int v11;
  uint64_t Strong;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = *(void **)a1;
  v11 = *(unsigned __int8 *)(a1 + 8);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (v11)
    {
      v13 = v10;
      sub_1BB86E200();
      swift_release();
      sub_1BB50F248(v10, 1);
    }
    else
    {
      v14 = (uint64_t *)(a7 + 16);
      v15 = *(_QWORD *)(a3 + 16);
      v16 = *(_QWORD *)(Strong + 16);
      swift_retain();
      sub_1BB509124(0, v15, v16);
      swift_release();
      swift_beginAccess();
      v17 = *v14;
      swift_bridgeObjectRetain();
      sub_1BB50FF54(a4, v17);
      swift_bridgeObjectRelease();
      sub_1BB86E218();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
}

uint64_t sub_1BB509FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t *v12;
  unint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  sub_1BB39C98C(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (unint64_t *)(a3 + 16);
  sub_1BB86DD20();
  sub_1BA4C2DD8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB39C98C);
  swift_beginAccess();
  v13 = *(_QWORD *)(a3 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 16) = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v13 = sub_1BB393C28(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
    *v12 = v13;
  }
  v16 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v13 + 24);
  if (v16 >= v15 >> 1)
  {
    v13 = sub_1BB393C28(v15 > 1, v16 + 1, 1, v13);
    *v12 = v13;
  }
  *(_QWORD *)(v13 + 16) = v16 + 1;
  sub_1BA5193C4((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v16, (uint64_t (*)(_QWORD))sub_1BB39C98C);
  swift_endAccess();
  sub_1BB86DD2C();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v18 = *(_QWORD *)(result + 16);
    v19 = objc_msgSend(*(id *)(v18 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploaderOperationQueue), sel_operationCount);
    v20 = *(_QWORD *)(a5 + 16);
    swift_retain();
    sub_1BB509124((uint64_t)v19, v20, v18);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1BB50A194(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v13 = a1;
  v16 = a2;
  v12 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v12);
  v11 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v11);
  v10[1] = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v3);
  sub_1BA841768(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1BB86E0A4();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1BB86EB84();
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v8);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v9 = (char *)sub_1BB50A3B0 + 4 * byte_1BB920F17[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB50A3B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BA5193C4(v2, v1, type metadata accessor for FormatVersioningModeRelease);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v3 - 104) + 16))(*(_QWORD *)(v3 - 88), v1 + *(int *)(v0 + 20), *(_QWORD *)(v3 - 96));
  return sub_1BA4A2E80(v1, type metadata accessor for FormatVersioningModeRelease);
}

uint64_t sub_1BB50A620(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t result;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;

  v4 = v3;
  v62 = a2;
  sub_1BAA30BA8(0);
  v54 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v55 = v8;
  v57 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB50E6FC(0, &qword_1EF2C60B0, sub_1BB50DD9C, v9);
  v11 = v10;
  MEMORY[0x1E0C80A78](v10);
  v56 = (uint64_t)&v52 - v12;
  sub_1BB50DD9C(0);
  MEMORY[0x1E0C80A78](v13);
  v52 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v15);
  v60 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB86EB84();
  v64 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v65 = (uint64_t)&v52 - v21;
  MEMORY[0x1E0C80A78](v22);
  v53 = (char *)&v52 - v23;
  v24 = a1[13];
  v61 = v11;
  if (v24)
  {
    v25 = swift_bridgeObjectRetain();
    v26 = (_QWORD *)sub_1BA931728(v25);
    swift_bridgeObjectRelease();
    v66 = v26;
    swift_bridgeObjectRetain();
    sub_1BA931EB4(&v66);
    if (v3)
    {
      result = swift_release();
      __break(1u);
      return result;
    }
    v4 = 0;
    swift_bridgeObjectRelease();
    v27 = v66;
  }
  else
  {
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v28 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  sub_1BB50A194(a3 + *(int *)(v28 + 20), v65);
  v29 = v27[2];
  if (v29)
  {
    v59 = a1;
    v63 = v4;
    v30 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    v31 = *(_QWORD *)(v64 + 72);
    v32 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    swift_bridgeObjectRetain();
    v58 = v27;
    v33 = (char *)v27 + v30 + v31 * (v29 - 1);
    v34 = -v31;
    v35 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8];
    v36 = MEMORY[0x1E0DB4DE0];
    while (1)
    {
      v32(v19, v33, v17);
      sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, v35, v36);
      if ((sub_1BB87291C() & 1) == 0)
        break;
      --v29;
      v37 = v64;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v19, v17);
      v33 += v34;
      if (!v29)
      {
        v38 = 1;
        v4 = v63;
        a1 = v59;
        v39 = (uint64_t)v60;
        goto LABEL_11;
      }
    }
    v37 = v64;
    v39 = (uint64_t)v60;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v60, v19, v17);
    v38 = 0;
    v4 = v63;
    a1 = v59;
  }
  else
  {
    swift_bridgeObjectRetain();
    v38 = 1;
    v39 = (uint64_t)v60;
    v37 = v64;
  }
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v39, v38, 1, v17);
  swift_bridgeObjectRelease();
  v40 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v40(v65, v17);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v17) == 1)
  {
    sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    sub_1BAA30BEC(0);
    v42 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v52, 1, 1, v41);
    v43 = v56 + *(int *)(v61 + 48);
    sub_1BA5193C4(v42, v56, (uint64_t (*)(_QWORD))sub_1BB50DD9C);
    sub_1BA4C2DD8((uint64_t)a1, v43, (uint64_t (*)(_QWORD))sub_1BAA30BA8);
    sub_1BB50EFA4(0, &qword_1EF2C60D0, &qword_1EF2C60B0, sub_1BAA30BA8);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
    v63 = v4;
    v46 = (uint64_t)v53;
    v45(v53, v39, v17);
    sub_1BAA2ED00(v46, a1);
    v47 = v57;
    sub_1BA4C2DD8((uint64_t)a1, v57, (uint64_t (*)(_QWORD))sub_1BAA30BA8);
    v48 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    v49 = swift_allocObject();
    sub_1BA5193C4(v47, v49 + v48, (uint64_t (*)(_QWORD))sub_1BAA30BA8);
    v50 = (void *)sub_1BB86E854();
    v44 = sub_1BB86E974();
    swift_release();
    swift_release();

    v40(v46, v17);
  }
  return v44;
}

uint64_t sub_1BB50AB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  return sub_1BB50C128(a1, a2, a3, a4, &qword_1EF2C60B0, sub_1BAA30BA8, 0, a5);
}

uint64_t sub_1BB50AB88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_OWORD *, _QWORD);
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, _QWORD);
  uint64_t v72;
  id *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(id *, uint64_t, uint64_t);
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  void (*v83)(uint64_t);
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  id *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166[24];
  _OWORD v167[2];
  uint64_t v168;

  v140 = a4;
  v154 = a2;
  v9 = type metadata accessor for DebugFormatUploadRemotePackage();
  MEMORY[0x1E0C80A78](v9);
  v146 = (uint64_t)&v136 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v161);
  v147 = (uint64_t)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v142 = (uint64_t)&v136 - v13;
  MEMORY[0x1E0C80A78](v14);
  v153 = (uint64_t)&v136 - v15;
  sub_1BB50DD9C(0);
  MEMORY[0x1E0C80A78](v16);
  v143 = (uint64_t *)((char *)&v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v149 = (id *)((char *)&v136 - v19);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEC990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20);
  v152 = (char *)&v136 - v21;
  v151 = sub_1BB873E58();
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x1E0C80A78](v151);
  v148 = (char *)&v136 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1E0C80A78](v156);
  v157 = (uint64_t)&v136 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BB86EB84();
  v25 = *(_QWORD *)(v24 - 8);
  v164 = v24;
  v165 = v25;
  MEMORY[0x1E0C80A78](v24);
  v158 = (unint64_t)&v136 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v138 = (uint64_t)&v136 - v28;
  MEMORY[0x1E0C80A78](v29);
  v141 = (uint64_t)&v136 - v30;
  MEMORY[0x1E0C80A78](v31);
  v155 = (uint64_t)&v136 - v32;
  MEMORY[0x1E0C80A78](v33);
  v168 = (uint64_t)&v136 - v34;
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v35);
  v144 = (char *)&v136 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v159 = (unint64_t)&v136 - v38;
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v136 - v40;
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v136 - v43;
  v45 = sub_1BB86BCE0();
  MEMORY[0x1E0C80A78](v45);
  v145 = a3;
  if ((sub_1BA931CE4() & 1) != 0)
  {
    v46 = *a1;
    type metadata accessor for DebugFormatUploadHiddenEntry();
    type metadata accessor for DebugFormatUploadHiddenReason();
    swift_storeEnumTagMultiPayload();
    *a5 = v46;
    type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
LABEL_3:
    swift_storeEnumTagMultiPayload();
    return swift_retain();
  }
  v137 = a5;
  v139 = v5;
  sub_1BB86BD4C();
  swift_allocObject();
  v163 = sub_1BB86BD40();
  v48 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0];
  sub_1BA4B07F0(0, &qword_1EF2AB3B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v162 = a1;
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1BB87FC80;
  sub_1BB86BCBC();
  sub_1BB86BCD4();
  sub_1BB86BCC8();
  *(_QWORD *)&v167[0] = v49;
  sub_1BA4A2870(&qword_1EF2AB3C0, v48, MEMORY[0x1E0CAE0F8]);
  sub_1BB50DDF0(0);
  sub_1BA4A2870((unint64_t *)&qword_1EF2AB3D0, (uint64_t (*)(uint64_t))sub_1BB50DDF0, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  sub_1BB86BCEC();
  sub_1BB50CFDC((uint64_t)v162, (uint64_t)v44);
  sub_1BA4C2DD8((uint64_t)v44, (uint64_t)v41, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  v51 = v164;
  v50 = v165;
  v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48);
  v53 = (uint64_t)v44;
  if (v52(v41, 1, v164) == 1)
  {
    v54 = v50;
    v55 = v159;
    if (qword_1ED3BB468 != -1)
      swift_once();
    v56 = __swift_project_value_buffer(v51, (uint64_t)qword_1ED3B8FC8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v168, v56, v51);
    sub_1BA4A2E80((uint64_t)v41, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    v57 = v139;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v168, v41, v51);
    v57 = v139;
    v54 = v50;
    v55 = v159;
  }
  sub_1BA4C2DD8(v53, v55, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  if (v52((char *)v55, 1, v51) == 1)
  {
    sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  }
  else
  {
    v58 = v155;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v155, v55, v51);
    v59 = v157;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v157, v58, v51);
    swift_storeEnumTagMultiPayload();
    v60 = v53;
    v61 = (void (*)(_OWORD *, _QWORD))sub_1BB86BD34();
    Dictionary<>.seedFormatCodingVersion(mode:)(v59);
    sub_1BA4A2E80(v59, type metadata accessor for FormatVersioningMode);
    v61(v167, 0);
    v53 = v60;
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v58, v51);
  }
  v62 = v162;
  v63 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  v64 = (uint64_t)v62 + *(int *)(v63 + 20);
  sub_1BA4A2870(&qword_1EF2AB3D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
  v65 = sub_1BB86BD28();
  if (v57)
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v168, v51);
    return sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  }
  v159 = v66;
  v160 = v65;
  v155 = v64;
  v156 = v63;
  v157 = v53;
  v67 = v152;
  sub_1BB873E4C();
  v68 = v150;
  v69 = v151;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v150 + 48))(v67, 1, v151);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v70 = (uint64_t)v148;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v148, v67, v69);
    memset(v167, 0, sizeof(v167));
    v71 = (void (*)(char *, _QWORD))sub_1BB86BD34();
    sub_1BB4A9CB8((uint64_t)v167, v70);
    v71(v166, 0);
    v72 = v154;
    v73 = v149;
    sub_1BA4C2DD8(v154, (uint64_t)v149, (uint64_t (*)(_QWORD))sub_1BB50DD9C);
    sub_1BAA30BEC(0);
    v75 = v74;
    v76 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 48);
    v77 = v76(v73, 1, v74);
    v78 = v153;
    if (v77 == 1)
      goto LABEL_18;
    if (swift_getEnumCaseMultiPayload() == 1)
    {

      v72 = v154;
LABEL_18:
      v80 = v164;
      v79 = v165;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v165 + 16))(v158, v168, v164);
      v81 = v143;
      sub_1BA4C2DD8(v72, (uint64_t)v143, (uint64_t (*)(_QWORD))sub_1BB50DD9C);
      v82 = v79;
      if (v76((id *)v81, 1, v75) == 1)
      {
        v83 = sub_1BB50DD9C;
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v84 = *v81;
LABEL_25:
          v88 = (uint64_t)v144;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v144, 1, 1, v80);
          v89 = v145;
          v90 = sub_1BA931A58();
          v91 = v162;
          v92 = *v162;
          v93 = v89;
          v94 = v146;
          sub_1BA4C2DD8(v93, v146, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadRemotePackage);
          type metadata accessor for DebugFormatUploadDiff();
          swift_allocObject();
          swift_retain();
          sub_1BA868A1C(v160, v159, v158, 0, 0xF000000000000000, v84, v88, (uint64_t)v90, v92, v94);
          v96 = v95;
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v168, v80);
          sub_1BA4A2E80(v157, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
          v97 = *v91;
          v98 = v147;
          sub_1BA4C2DD8(v155, v147, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
          v99 = (char *)v91 + *(int *)(v156 + 24);
          v100 = *(_QWORD *)v99;
          v101 = *((_QWORD *)v99 + 1);
          LOBYTE(v94) = v99[16];
          type metadata accessor for DebugFormatUploadEntry();
          v102 = swift_allocObject();
          *(_QWORD *)(v102 + 16) = v97;
          sub_1BA5193C4(v98, v102 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
          v103 = v102 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_target;
          *(_QWORD *)v103 = v100;
          *(_QWORD *)(v103 + 8) = v101;
          *(_BYTE *)(v103 + 16) = v94;
          *(_QWORD *)(v102 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff) = v96;
          *v137 = v102;
          type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
          swift_storeEnumTagMultiPayload();
          swift_retain();
          return sub_1BA5F1EC8(v100, v101, v94);
        }
        v83 = sub_1BAA30BEC;
      }
      sub_1BA4A2E80((uint64_t)v81, (uint64_t (*)(_QWORD))v83);
      v84 = 0;
      goto LABEL_25;
    }
    sub_1BA5193C4((uint64_t)v73, v78, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    sub_1BB50C330(v142, v141, v78, v168);
    v85 = sub_1BB86BD28();
    v87 = v164;
    v104 = v85;
    v105 = v86;
    v106 = v159;
    if ((v140 & 1) != 0)
    {
      sub_1BB50E1FC(v160, v159);
      if ((v107 & 1) != 0)
      {
        sub_1BA69D314(v104, v105);
        swift_release();
        sub_1BA69D314(v160, v106);
        sub_1BA4A2E80(v142, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
        sub_1BA4A2E80(v153, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
        v108 = v165;
        (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v168, v87);
        sub_1BA4A2E80(v157, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
        v109 = *v162;
        v110 = type metadata accessor for DebugFormatUploadHiddenEntry();
        v111 = v137;
        (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))((char *)v137 + *(int *)(v110 + 20), v141, v87);
        type metadata accessor for DebugFormatUploadHiddenReason();
        swift_storeEnumTagMultiPayload();
        *v111 = v109;
        type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
        goto LABEL_3;
      }
    }
    v154 = v104;
    v158 = v105;
    v112 = sub_1BB86BD28();
    v113 = v141;
    v114 = v112;
    v116 = v115;
    v117 = v165;
    v118 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16);
    v118(v138, v168, v87);
    v119 = (uint64_t)v144;
    v118((uint64_t)v144, v113, v87);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v117 + 56))(v119, 0, 1, v87);
    sub_1BA69D44C(v114, v116);
    v120 = v145;
    v161 = (uint64_t)sub_1BA931A58();
    v139 = 0;
    v121 = v117;
    v122 = v162;
    v123 = *v162;
    v124 = v120;
    v125 = v146;
    sub_1BA4C2DD8(v124, v146, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadRemotePackage);
    type metadata accessor for DebugFormatUploadDiff();
    swift_allocObject();
    swift_retain();
    sub_1BA868A1C(v160, v159, v138, v114, v116, 0, v119, v161, v123, v125);
    v127 = v126;
    sub_1BA69D314(v154, v158);
    swift_release();
    sub_1BA69D314(v114, v116);
    v128 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
    v128(v113, v87);
    sub_1BA4A2E80(v142, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    sub_1BA4A2E80(v153, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v128(v168, v87);
    sub_1BA4A2E80(v157, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    v129 = *v122;
    v130 = v147;
    sub_1BA4C2DD8(v155, v147, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v131 = (char *)v122 + *(int *)(v156 + 24);
    v132 = *(_QWORD *)v131;
    v133 = *((_QWORD *)v131 + 1);
    LOBYTE(v123) = v131[16];
    type metadata accessor for DebugFormatUploadEntry();
    v134 = swift_allocObject();
    *(_QWORD *)(v134 + 16) = v129;
    sub_1BA5193C4(v130, v134 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v135 = v134 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_target;
    *(_QWORD *)v135 = v132;
    *(_QWORD *)(v135 + 8) = v133;
    *(_BYTE *)(v135 + 16) = v123;
    *(_QWORD *)(v134 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff) = v127;
    *v137 = v134;
    type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    return sub_1BA5F1EC8(v132, v133, v123);
  }
  return result;
}

uint64_t sub_1BB50BB10(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t result;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;

  v4 = v3;
  v62 = a2;
  sub_1BAA312C0(0);
  v54 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v55 = v8;
  v57 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB50E6FC(0, &qword_1EF2C60D8, sub_1BB50DD9C, v9);
  v11 = v10;
  MEMORY[0x1E0C80A78](v10);
  v56 = (uint64_t)&v52 - v12;
  sub_1BB50DD9C(0);
  MEMORY[0x1E0C80A78](v13);
  v52 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v15);
  v60 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB86EB84();
  v64 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v65 = (uint64_t)&v52 - v21;
  MEMORY[0x1E0C80A78](v22);
  v53 = (char *)&v52 - v23;
  v24 = a1[12];
  v61 = v11;
  if (v24)
  {
    v25 = swift_bridgeObjectRetain();
    v26 = (_QWORD *)sub_1BA931728(v25);
    swift_bridgeObjectRelease();
    v66 = v26;
    swift_bridgeObjectRetain();
    sub_1BA931EB4(&v66);
    if (v3)
    {
      result = swift_release();
      __break(1u);
      return result;
    }
    v4 = 0;
    swift_bridgeObjectRelease();
    v27 = v66;
  }
  else
  {
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v28 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  sub_1BB50A194(a3 + *(int *)(v28 + 20), v65);
  v29 = v27[2];
  if (v29)
  {
    v59 = a1;
    v63 = v4;
    v30 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    v31 = *(_QWORD *)(v64 + 72);
    v32 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    swift_bridgeObjectRetain();
    v58 = v27;
    v33 = (char *)v27 + v30 + v31 * (v29 - 1);
    v34 = -v31;
    v35 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8];
    v36 = MEMORY[0x1E0DB4DE0];
    while (1)
    {
      v32(v19, v33, v17);
      sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, v35, v36);
      if ((sub_1BB87291C() & 1) == 0)
        break;
      --v29;
      v37 = v64;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v19, v17);
      v33 += v34;
      if (!v29)
      {
        v38 = 1;
        v4 = v63;
        a1 = v59;
        v39 = (uint64_t)v60;
        goto LABEL_11;
      }
    }
    v37 = v64;
    v39 = (uint64_t)v60;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v60, v19, v17);
    v38 = 0;
    v4 = v63;
    a1 = v59;
  }
  else
  {
    swift_bridgeObjectRetain();
    v38 = 1;
    v39 = (uint64_t)v60;
    v37 = v64;
  }
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v39, v38, 1, v17);
  swift_bridgeObjectRelease();
  v40 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v40(v65, v17);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v17) == 1)
  {
    sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    sub_1BAA30BEC(0);
    v42 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v52, 1, 1, v41);
    v43 = v56 + *(int *)(v61 + 48);
    sub_1BA5193C4(v42, v56, (uint64_t (*)(_QWORD))sub_1BB50DD9C);
    sub_1BA4C2DD8((uint64_t)a1, v43, (uint64_t (*)(_QWORD))sub_1BAA312C0);
    sub_1BB50EFA4(0, &qword_1EF2C60E0, &qword_1EF2C60D8, sub_1BAA312C0);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
    v63 = v4;
    v46 = (uint64_t)v53;
    v45(v53, v39, v17);
    sub_1BAA2F424(v46, a1);
    v47 = v57;
    sub_1BA4C2DD8((uint64_t)a1, v57, (uint64_t (*)(_QWORD))sub_1BAA312C0);
    v48 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    v49 = swift_allocObject();
    sub_1BA5193C4(v47, v49 + v48, (uint64_t (*)(_QWORD))sub_1BAA312C0);
    v50 = (void *)sub_1BB86E854();
    v44 = sub_1BB86E974();
    swift_release();
    swift_release();

    v40(v46, v17);
  }
  return v44;
}

uint64_t sub_1BB50C050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BB50E6FC(0, a3, sub_1BB50DD9C, a4);
  v10 = a5 + *(int *)(v9 + 48);
  sub_1BA4C2DD8(a1, a5, (uint64_t (*)(_QWORD))sub_1BAA30BEC);
  sub_1BAA30BEC(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a5, 0, 1, v11);
  return sub_1BA4C2DD8(a2, v10, (uint64_t (*)(_QWORD))a4);
}

uint64_t sub_1BB50C100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  return sub_1BB50C128(a1, a2, a3, a4, &qword_1EF2C60D8, sub_1BAA312C0, 1, a5);
}

uint64_t sub_1BB50C128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, int a4@<W3>, unint64_t *a5@<X4>, void (*a6)(uint64_t)@<X5>, int a7@<W6>, uint64_t *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD v22[2];
  uint64_t *v23;
  uint64_t v24;
  int v25;

  v22[1] = a7;
  v25 = a4;
  v23 = a3;
  v24 = a2;
  sub_1BB50E6FC(0, a5, sub_1BB50DD9C, a6);
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v22 - v13;
  v15 = type metadata accessor for DebugFormatUploadRemotePackage();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(int *)(v12 + 48);
  v19 = (uint64_t)&v14[v18];
  v20 = a1 + v18;
  sub_1BA4C2DD8(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BB50DD9C);
  sub_1BA4C2DD8(v20, v19, (uint64_t (*)(_QWORD))a6);
  sub_1BA5193C4(v19, (uint64_t)v17, (uint64_t (*)(_QWORD))a6);
  swift_storeEnumTagMultiPayload();
  sub_1BB50AB88(v23, a1, (uint64_t)v17, v25, a8);
  sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadRemotePackage);
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BB50DD9C);
}

id sub_1BB50C29C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;

  v5 = *a2;
  *(_QWORD *)((char *)a3 + *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20)) = a1;
  type metadata accessor for DebugFormatUploadHiddenReason();
  swift_storeEnumTagMultiPayload();
  *a3 = v5;
  type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  return a1;
}

uint64_t sub_1BB50C330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t (*v54)(_QWORD);
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  unsigned int v59;
  void (*v60)(char *, uint64_t);
  uint64_t (*v61)();
  uint64_t v62;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  char *v67;
  unsigned int v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unsigned int v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  void (*v96)(uint64_t);
  uint64_t v97;
  uint64_t (*v98)(uint64_t, char *, uint64_t);
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  int v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t, uint64_t);
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t, char *);
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  int v134;
  void (*v135)(char *, uint64_t, uint64_t);
  uint64_t v136;
  unsigned int (*v137)(char *, uint64_t, char *);
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;

  v164 = a2;
  v165 = a4;
  v163 = a1;
  sub_1BB50E474(0);
  MEMORY[0x1E0C80A78](v5);
  v147 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v145 = (char *)&v135 - v8;
  v159 = sub_1BB86E0A4();
  v162 = *(_QWORD *)(v159 - 8);
  MEMORY[0x1E0C80A78](v159);
  v160 = (char *)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v161 = (char *)&v135 - v11;
  sub_1BA841768(0);
  MEMORY[0x1E0C80A78](v12);
  v142 = (char *)&v135 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v143 = (char *)&v135 - v15;
  MEMORY[0x1E0C80A78](v16);
  v150 = (char *)&v135 - v17;
  MEMORY[0x1E0C80A78](v18);
  v151 = (char *)&v135 - v19;
  MEMORY[0x1E0C80A78](v20);
  v152 = (char *)&v135 - v21;
  MEMORY[0x1E0C80A78](v22);
  v157 = (char *)&v135 - v23;
  MEMORY[0x1E0C80A78](v24);
  v153 = (char *)&v135 - v25;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v135 - v27;
  v29 = sub_1BB86EB84();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v144 = (char *)&v135 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v146 = (char *)&v135 - v33;
  MEMORY[0x1E0C80A78](v34);
  v154 = (char *)&v135 - v35;
  MEMORY[0x1E0C80A78](v36);
  v155 = (char *)&v135 - v37;
  MEMORY[0x1E0C80A78](v38);
  v156 = (char *)&v135 - v39;
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v135 - v41;
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)&v135 - v44;
  v46 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v46);
  v149 = (uint64_t)&v135 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)&v135 - v49;
  v51 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v51);
  v53 = (char *)&v135 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a3, (uint64_t)v53, v54);
  v148 = v51;
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    v61 = type metadata accessor for FormatFile;
    sub_1BA4C2DD8(a3, v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v164, v165, v29);
    v62 = (uint64_t)v53;
    return sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))v61);
  }
  v141 = a3;
  sub_1BA5193C4((uint64_t)v53, (uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  v55 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v55(v45, &v50[*(int *)(v46 + 96)], v29);
  v158 = v45;
  v56 = (void (*)(char *, uint64_t, uint64_t))v55;
  sub_1BB86EB78();
  v57 = sub_1BB86E3A4();
  v136 = *(_QWORD *)(v57 - 8);
  v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48);
  v59 = v58(v28, 1, v57);
  sub_1BA4A2E80((uint64_t)v28, (uint64_t (*)(_QWORD))sub_1BA841768);
  v56(v42, v165, v29);
  if (v59 == 1)
  {
    v60 = *(void (**)(char *, uint64_t))(v30 + 8);
    v60(v42, v29);
  }
  else
  {
    v64 = (uint64_t)v153;
    sub_1BB86EB78();
    v65 = v58((char *)v64, 1, v57);
    sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))sub_1BA841768);
    v60 = *(void (**)(char *, uint64_t))(v30 + 8);
    v60(v42, v29);
    if (v65 == 1)
    {
      sub_1BA4A2E80((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      sub_1BA4C2DD8(v141, v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v164, v158, v29);
    }
  }
  v140 = v50;
  v153 = (char *)v46;
  v66 = (uint64_t)v157;
  v67 = v158;
  sub_1BB86EB78();
  v68 = v58((char *)v66, 1, v57);
  sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))sub_1BA841768);
  v69 = v156;
  v70 = v165;
  v56(v156, v165, v29);
  v157 = (char *)v57;
  v139 = v30;
  v135 = v56;
  v138 = v29;
  v137 = (unsigned int (*)(char *, uint64_t, char *))v58;
  if (v68 != 1)
  {
    v60(v69, v29);
    v74 = v155;
    v56(v155, v70, v29);
    v75 = v154;
    v56(v154, (uint64_t)v67, v29);
    v76 = v70;
    goto LABEL_13;
  }
  v71 = v69;
  v72 = (uint64_t)v152;
  sub_1BB86EB78();
  v73 = v58((char *)v72, 1, v57);
  sub_1BA4A2E80(v72, (uint64_t (*)(_QWORD))sub_1BA841768);
  v60(v71, v29);
  v74 = v155;
  v56(v155, v70, v29);
  v75 = v154;
  v56(v154, (uint64_t)v67, v29);
  v76 = v70;
  if (v73 == 1)
  {
LABEL_13:
    v60(v75, v29);
    v60(v74, v29);
    goto LABEL_14;
  }
  v77 = v161;
  sub_1BB86EB6C();
  v156 = (char *)sub_1BB86E098();
  v78 = v75;
  v79 = *(void (**)(char *, uint64_t))(v162 + 8);
  v80 = v77;
  v81 = v159;
  v79(v80, v159);
  v82 = v160;
  sub_1BB86EB6C();
  v83 = sub_1BB86E098();
  v79(v82, v81);
  v84 = v78;
  v76 = v70;
  v60(v84, v29);
  v60(v74, v29);
  if (v156 == (char *)v83)
  {
    v61 = type metadata accessor for FormatPackage;
    v85 = v149;
    sub_1BA5193C4((uint64_t)v140, v149, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    v86 = v139;
    v87 = v138;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 24))(v85 + *((int *)v153 + 24), v76, v138);
    sub_1BA4C2DD8(v85, v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v164, v67, v87);
    v62 = v85;
    return sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))v61);
  }
LABEL_14:
  v88 = v161;
  sub_1BB86EB6C();
  v89 = sub_1BB86E098();
  v90 = *(void (**)(char *, uint64_t))(v162 + 8);
  v91 = v159;
  v90(v88, v159);
  v92 = v160;
  sub_1BB86EB6C();
  v93 = sub_1BB86E098();
  v90(v92, v91);
  if (v89 != v93)
  {
    sub_1BA4A2E80((uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    sub_1BA4C2DD8(v141, v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v98 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v139 + 32);
    v99 = v164;
    v100 = v67;
    return v98(v99, v100, v138);
  }
  v94 = v151;
  sub_1BB86EB78();
  v95 = v157;
  if (v137(v94, 1, v157) == 1)
  {
    v96 = sub_1BA841768;
    v97 = (uint64_t)v94;
LABEL_20:
    sub_1BA4A2E80(v97, (uint64_t (*)(_QWORD))v96);
    v102 = 0;
    v103 = 1;
    goto LABEL_22;
  }
  v101 = v145;
  sub_1BB86E398();
  (*(void (**)(char *, char *))(v136 + 8))(v94, v95);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v101, 1, v91) == 1)
  {
    v96 = sub_1BB50E474;
    v97 = (uint64_t)v101;
    goto LABEL_20;
  }
  v102 = sub_1BB86E098();
  v90(v101, v91);
  v103 = 0;
LABEL_22:
  v104 = v161;
  v105 = (uint64_t)v150;
  sub_1BB86EB78();
  v106 = v157;
  if (v137((char *)v105, 1, v157) != 1)
  {
    v161 = (char *)v102;
    v117 = v105;
    v118 = (uint64_t)v140;
    v119 = (uint64_t)v147;
    sub_1BB86E398();
    (*(void (**)(uint64_t, char *))(v136 + 8))(v117, v106);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v162 + 48))(v119, 1, v91) == 1)
    {
      sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))sub_1BB50E474);
      v107 = v118;
      if ((v103 & 1) != 0)
        goto LABEL_24;
    }
    else
    {
      v131 = sub_1BB86E098();
      v90((char *)v119, v91);
      if (v161 == (char *)v131)
        v132 = v103;
      else
        v132 = 1;
      v107 = v118;
      if (v132 != 1)
        goto LABEL_24;
    }
    goto LABEL_36;
  }
  sub_1BA4A2E80(v105, (uint64_t (*)(_QWORD))sub_1BA841768);
  v107 = (uint64_t)v140;
  if ((v103 & 1) == 0)
  {
LABEL_36:
    sub_1BA4A2E80(v107, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    sub_1BA4C2DD8(v141, v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v98 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v139 + 32);
    v99 = v164;
    v100 = v158;
    return v98(v99, v100, v138);
  }
LABEL_24:
  sub_1BB86EB6C();
  v108 = v104;
  v109 = v160;
  v110 = v158;
  sub_1BB86EB6C();
  sub_1BA4A2870(&qword_1EF2C60C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3810], MEMORY[0x1E0DB3818]);
  v111 = sub_1BB872958();
  v90(v109, v91);
  v90(v108, v91);
  v112 = v146;
  v113 = v110;
  v114 = v138;
  v115 = v135;
  v135(v146, (uint64_t)v113, v138);
  if ((v111 & 1) != 0)
  {
    v60(v112, v114);
    v116 = v144;
    v115(v144, v76, v114);
LABEL_30:
    v60(v116, v114);
    v126 = v163;
    v125 = v164;
    v127 = v153;
    v128 = (uint64_t)v140;
LABEL_31:
    v61 = type metadata accessor for FormatPackage;
    v129 = v149;
    sub_1BA5193C4(v128, v149, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    v130 = v139;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 24))(v129 + *((int *)v127 + 24), v165, v114);
    sub_1BA4C2DD8(v129, v126, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, char *, uint64_t))(v130 + 32))(v125, v158, v114);
    v62 = v129;
    return sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))v61);
  }
  v120 = (uint64_t)v143;
  sub_1BB86EB78();
  v60(v112, v114);
  v121 = v157;
  v122 = v76;
  v123 = (uint64_t (*)(uint64_t, uint64_t, char *))v137;
  v124 = v137((char *)v120, 1, v157);
  sub_1BA4A2E80(v120, (uint64_t (*)(_QWORD))sub_1BA841768);
  v116 = v144;
  v115(v144, v122, v114);
  if (v124 == 1)
    goto LABEL_30;
  v133 = (uint64_t)v142;
  sub_1BB86EB78();
  v60(v116, v114);
  v134 = v123(v133, 1, v121);
  sub_1BA4A2E80(v133, (uint64_t (*)(_QWORD))sub_1BA841768);
  v126 = v163;
  v125 = v164;
  v127 = v153;
  v128 = (uint64_t)v140;
  if (v134 == 1)
    goto LABEL_31;
  sub_1BA4A2E80((uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BA4C2DD8(v141, v126, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v139 + 32))(v125, v158, v114);
}

void sub_1BB50CFDC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = a1;
  v13 = a2;
  v12 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v12);
  v10 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v10);
  v9 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v3);
  sub_1BA841768(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1BB86E0A4();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1BB86EB84();
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v7);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v8 = (char *)sub_1BB50D1E8 + 4 * byte_1BB920F1D[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB50D1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA5193C4(v2, v4, type metadata accessor for FormatVersioningModeRelease);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 88) + 16))(v3, v4 + *(int *)(v0 + 20), v1);
  sub_1BA4A2E80(v4, type metadata accessor for FormatVersioningModeRelease);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 88) + 56))(v3, 0, 1, v1);
}

uint64_t type metadata accessor for DebugFormatUploadDataSource()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DebugFormatUploadPrivateEntry(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2C6200);
}

uint64_t sub_1BB50D460()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB50D484()
{
  return sub_1BAA2BF9C();
}

uint64_t sub_1BB50D4A4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB50D4C8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB50D50C(uint64_t a1)
{
  uint64_t v1;

  sub_1BB509E8C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1BB50D524()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatUploadPrivateEntry(0) - 8) + 80);
  return sub_1BB509924((uint64_t *)(v0 + ((v1 + 16) & ~v1)));
}

uint64_t type metadata accessor for DebugFormatUploadPrivateEntryResult(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2C6170);
}

uint64_t sub_1BB50D564()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB50D5A8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB509FBC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1BB50D5C0()
{
  return sub_1BB50D5DC((uint64_t (*)(unint64_t, _QWORD))sub_1BB509508);
}

uint64_t sub_1BB50D5D0()
{
  return sub_1BB50D5DC((uint64_t (*)(unint64_t, _QWORD))sub_1BB509A70);
}

uint64_t sub_1BB50D5DC(uint64_t (*a1)(unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for DebugFormatUploadPrivateEntry(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return a1(v1 + v4, *(unsigned __int8 *)(v1 + v4 + *(_QWORD *)(v3 + 64)));
}

uint64_t sub_1BB50D62C()
{
  return sub_1BB50E64C((uint64_t (*)(_QWORD, _QWORD))sub_1BAA2D9A8);
}

uint64_t objectdestroy_8Tm_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);

  v1 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_release();
  v3 = v2 + *(int *)(v1 + 20);
  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for FormatContent(0);
      v5 = v3 + *(int *)(v4 + 20);
      v6 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v3 + *(int *)(v4 + 40);
      v8 = sub_1BB871E24();
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      goto LABEL_31;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(v3 + 106) != 255)
      {
        v10 = *(unsigned __int16 *)(v3 + 104) | (*(unsigned __int8 *)(v3 + 106) << 16);
        sub_1BA77A170(*(_QWORD *)(v3 + 96), v10, SBYTE2(v10), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
      }
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      goto LABEL_31;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 56) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 168) >= 3uLL)
        swift_bridgeObjectRelease();
      v28 = (int *)type metadata accessor for FormatPackage();
      v11 = v3 + v28[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = type metadata accessor for FormatCompilerOptions(0);
      v13 = v11 + *(int *)(v12 + 24);
      if (*(_QWORD *)(v13 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v14 = v13 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v15 = sub_1BB86E710();
      v29 = *(_QWORD *)(v15 - 8);
      v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
      if (!v30(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v14, v15);
      v16 = v11 + *(int *)(v12 + 28);
      if (!v30(v16, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v16, v15);
      swift_bridgeObjectRelease();
      v17 = v3 + v28[24];
      v18 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      v19 = v3 + v28[25];
      if (!v30(v19, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v19, v15);
      break;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 7u:
      swift_release();
      break;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_BYTE *)(v3 + 80));
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v3 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      v21 = type metadata accessor for FormatContent(0);
      v22 = v20 + *(int *)(v21 + 20);
      v23 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = v20 + *(int *)(v21 + 40);
      v25 = sub_1BB871E24();
      v26 = *(_QWORD *)(v25 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  sub_1BA5F1DE8(*(_QWORD *)(v2 + *(int *)(v1 + 24)), *(_QWORD *)(v2 + *(int *)(v1 + 24) + 8), *(_BYTE *)(v2 + *(int *)(v1 + 24) + 16));
  return swift_deallocObject();
}

uint64_t sub_1BB50DD80(uint64_t a1, uint64_t a2)
{
  return sub_1BB50E6A0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BB50A620);
}

void sub_1BB50DD9C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C60B8, (uint64_t (*)(uint64_t))sub_1BAA30BEC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB50DDBC(uint64_t a1, uint64_t a2)
{
  return sub_1BB50EED0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))sub_1BB50AB60);
}

id sub_1BB50DDDC@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB50EF4C(a1, a2);
}

void sub_1BB50DDF0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2AB3C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BB50DE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB50DE6C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1BB50E050);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_1BB50E074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_1BB50DE0C((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1BB50E148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1BB86C01C();
  v11 = result;
  if (result)
  {
    result = sub_1BB86C040();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1BB86C034();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1BB50DE0C(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1BB50E1FC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB50E248()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1BB50E27C + dword_1BB50E454[v0 >> 62]))();
}

uint64_t sub_1BB50E28C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

void sub_1BB50E474(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C4008, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB50E490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  sub_1BAA30BA8(0);
  v2 = v1;
  v3 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for DebugNewsroomLayoutData();
  v5 = v3 + *(int *)(v4 + 52);
  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = v3 + *(int *)(v2 + 36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v9 + *(int *)(v4 + 52);
  if (!v8(v10, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB50E60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB50F1A8(a1, sub_1BAA30BA8, &qword_1EF2C60B0, a2);
}

uint64_t sub_1BB50E630()
{
  return sub_1BB50E64C((uint64_t (*)(_QWORD, _QWORD))sub_1BAA2DC24);
}

uint64_t sub_1BB50E64C(uint64_t (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BB50E684(uint64_t a1, uint64_t a2)
{
  return sub_1BB50E6A0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BB50BB10);
}

uint64_t sub_1BB50E6A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatUploadPrivateEntry(0) - 8) + 80);
  return a3(a1, a2, v3 + ((v7 + 16) & ~v7));
}

void sub_1BB50E6FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t objectdestroy_24Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);

  v1 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_release();
  v3 = v2 + *(int *)(v1 + 20);
  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for FormatContent(0);
      v5 = v3 + *(int *)(v4 + 20);
      v6 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v3 + *(int *)(v4 + 40);
      v8 = sub_1BB871E24();
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      goto LABEL_31;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(v3 + 106) != 255)
      {
        v10 = *(unsigned __int16 *)(v3 + 104) | (*(unsigned __int8 *)(v3 + 106) << 16);
        sub_1BA77A170(*(_QWORD *)(v3 + 96), v10, SBYTE2(v10), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
      }
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      goto LABEL_31;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 56) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 168) >= 3uLL)
        swift_bridgeObjectRelease();
      v28 = (int *)type metadata accessor for FormatPackage();
      v11 = v3 + v28[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = type metadata accessor for FormatCompilerOptions(0);
      v13 = v11 + *(int *)(v12 + 24);
      if (*(_QWORD *)(v13 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v14 = v13 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v15 = sub_1BB86E710();
      v29 = *(_QWORD *)(v15 - 8);
      v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
      if (!v30(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v14, v15);
      v16 = v11 + *(int *)(v12 + 28);
      if (!v30(v16, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v16, v15);
      swift_bridgeObjectRelease();
      v17 = v3 + v28[24];
      v18 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      v19 = v3 + v28[25];
      if (!v30(v19, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v19, v15);
      break;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 7u:
      swift_release();
      break;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_BYTE *)(v3 + 80));
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v3 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      v21 = type metadata accessor for FormatContent(0);
      v22 = v20 + *(int *)(v21 + 20);
      v23 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = v20 + *(int *)(v21 + 40);
      v25 = sub_1BB871E24();
      v26 = *(_QWORD *)(v25 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  sub_1BA5F1DE8(*(_QWORD *)(v2 + *(int *)(v1 + 24)), *(_QWORD *)(v2 + *(int *)(v1 + 24) + 8), *(_BYTE *)(v2 + *(int *)(v1 + 24) + 16));
  return swift_deallocObject();
}

uint64_t sub_1BB50EEB4(uint64_t a1, uint64_t a2)
{
  return sub_1BB50EED0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))sub_1BB50C100);
}

uint64_t sub_1BB50EED0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for DebugFormatUploadPrivateEntry(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return a3(a1, a2, v3 + v8, *(unsigned __int8 *)(v3 + v8 + *(_QWORD *)(v7 + 64)));
}

id sub_1BB50EF4C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatUploadPrivateEntry(0) - 8) + 80);
  return sub_1BB50C29C(a1, (uint64_t *)(v2 + ((v5 + 16) & ~v5)), a2);
}

void sub_1BB50EFA4(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BB50E6FC(255, a3, sub_1BB50DD9C, a4);
    v5 = sub_1BB86EAAC();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BB50F008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  sub_1BAA312C0(0);
  v2 = v1;
  v3 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for DebugNewsroomThemeData();
  v5 = v3 + *(int *)(v4 + 48);
  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = v3 + *(int *)(v2 + 36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v9 + *(int *)(v4 + 48);
  if (!v8(v10, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB50F184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB50F1A8(a1, sub_1BAA312C0, &qword_1EF2C60D8, a2);
}

uint64_t sub_1BB50F1A8@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(((uint64_t (*)(_QWORD))a2)(0) - 8) + 80);
  return sub_1BB50C050(a1, v4 + ((v9 + 16) & ~v9), a3, a2, a4);
}

uint64_t sub_1BB50F218()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB50F23C()
{
  uint64_t v0;

  return sub_1BB509334(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BB50F248(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

unint64_t sub_1BB50F254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int EnumCaseMultiPayload;
  void *v38;
  uint64_t v39;
  uint64_t *v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  _QWORD v93[2];
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t *v98;
  uint64_t *v99;
  int v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unsigned __int8 v120;
  unsigned __int8 v121;
  uint64_t v122;
  uint64_t v123;
  char v124;

  v3 = type metadata accessor for DebugFormatUploadHiddenEntry();
  v105 = *(_QWORD *)(v3 - 8);
  v106 = v3;
  MEMORY[0x1E0C80A78](v3);
  v113 = (_QWORD *)((char *)v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v97 = (_QWORD *)((char *)v93 - v6);
  MEMORY[0x1E0C80A78](v7);
  v96 = (_QWORD *)((char *)v93 - v8);
  v114 = type metadata accessor for DebugFormatUploadHiddenReason();
  v108 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v95 = (uint64_t)v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v94 = (uint64_t)v93 - v11;
  sub_1BB51023C();
  v112 = v12;
  MEMORY[0x1E0C80A78](v12);
  v111 = (_QWORD *)((char *)v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v110 = (_QWORD *)((char *)v93 - v15);
  sub_1BB5102C0(0);
  MEMORY[0x1E0C80A78](v16);
  v102 = (_QWORD *)((char *)v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v101 = (_QWORD *)((char *)v93 - v19);
  v104 = type metadata accessor for DebugFormatUploadPrivateEntry(0);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v99 = (_QWORD *)((char *)v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v21);
  v98 = (_QWORD *)((char *)v93 - v22);
  MEMORY[0x1E0C80A78](v23);
  v109 = (_QWORD *)((char *)v93 - v24);
  v117 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1E0C80A78](v117);
  v26 = (void **)((char *)v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v27);
  v119 = (uint64_t)v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for DebugFormatCompilerResultEntry();
  v29 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v31 = (_QWORD *)((char *)v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v122 = a1;
  sub_1BAF57920();
  sub_1BA4A2870((unint64_t *)&qword_1EF2B6C80, (uint64_t (*)(uint64_t))sub_1BAF57920, MEMORY[0x1E0DEAF38]);
  v32 = sub_1BB872BC8();
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    v100 = 0;
    v34 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v93[1] = v32;
    v35 = v32 + v34;
    v36 = MEMORY[0x1E0DEE9D8];
    v115 = *(_QWORD *)(v29 + 72);
    v118 = MEMORY[0x1E0DEE9D8];
    v107 = v1;
    while (1)
    {
      sub_1BA4C2DD8(v35, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      sub_1BA4C2DD8((uint64_t)v31 + *(int *)(v116 + 20), (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultOutput);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          v38 = *v26;
          v39 = *v31;
          v40 = v113;
          *(uint64_t *)((char *)v113 + *(int *)(v106 + 20)) = (uint64_t)*v26;
          swift_storeEnumTagMultiPayload();
          *v40 = v39;
          swift_retain();
          v41 = v38;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v36 = sub_1BB3924A4(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
          v43 = *(_QWORD *)(v36 + 16);
          v42 = *(_QWORD *)(v36 + 24);
          if (v43 >= v42 >> 1)
            v36 = sub_1BB3924A4(v42 > 1, v43 + 1, 1, v36);
          *(_QWORD *)(v36 + 16) = v43 + 1;
          sub_1BA5193C4((uint64_t)v113, v36+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v43, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenEntry);

LABEL_4:
          sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
          goto LABEL_5;
        }
        sub_1BB50E6FC(0, (unint64_t *)&qword_1EF2BE470, (void (*)(uint64_t))type metadata accessor for FormatFile, (void (*)(uint64_t))sub_1BA8EBDF8);

      }
      sub_1BA5193C4((uint64_t)v26, v119, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
      swift_retain();
      sub_1BB86D2B8();
      swift_release();
      if (!v124)
      {
        v59 = v109;
        *v109 = *v31;
        v60 = v104;
        sub_1BA5193C4(v119, (uint64_t)v59 + *(int *)(v104 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
        v61 = (char *)v59 + *(int *)(v60 + 24);
        *(_QWORD *)v61 = 0;
        *((_QWORD *)v61 + 1) = 0;
        v61[16] = 2;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v62 = v118;
        else
          v62 = sub_1BB3924B8(0, *(_QWORD *)(v118 + 16) + 1, 1, v118);
        v64 = *(_QWORD *)(v62 + 16);
        v63 = *(_QWORD *)(v62 + 24);
        if (v64 >= v63 >> 1)
          v62 = sub_1BB3924B8(v63 > 1, v64 + 1, 1, v62);
        *(_QWORD *)(v62 + 16) = v64 + 1;
        v65 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
        v118 = v62;
        sub_1BA5193C4((uint64_t)v109, v62 + v65 + *(_QWORD *)(v103 + 72) * v64, type metadata accessor for DebugFormatUploadPrivateEntry);
        goto LABEL_4;
      }
      if (v124 == 1)
      {
        v45 = *v31;
        swift_retain();
        swift_retain();
        sub_1BB86D2B8();
        swift_release();
        v120 = v121;
        v46 = v101;
        sub_1BB508DB0(&v122, v101, v45, &v120);
        swift_release();
        v48 = v122;
        v47 = v123;
        v49 = *(int *)(v112 + 48);
        v50 = v110;
        v51 = (char *)v110 + v49;
        *v110 = v122;
        v50[1] = v47;
        sub_1BA5193C4((uint64_t)v46, (uint64_t)v50 + v49, (uint64_t (*)(_QWORD))sub_1BB5102C0);
        if (!v47)
        {
          sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v51, 1, v114) == 1)
            goto LABEL_49;
          v79 = (uint64_t)v51;
          v80 = v94;
          sub_1BA5193C4(v79, v94, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenReason);
          v81 = *v31;
          v82 = v96;
          sub_1BA4C2DD8(v80, (uint64_t)v96 + *(int *)(v106 + 20), (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenReason);
          *v82 = v81;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v36 = sub_1BB3924A4(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
          v84 = *(_QWORD *)(v36 + 16);
          v83 = *(_QWORD *)(v36 + 24);
          if (v84 >= v83 >> 1)
            v36 = sub_1BB3924A4(v83 > 1, v84 + 1, 1, v36);
          *(_QWORD *)(v36 + 16) = v84 + 1;
          sub_1BA5193C4((uint64_t)v96, v36+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v84, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenEntry);
          sub_1BA4A2E80(v94, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenReason);
          sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
LABEL_47:
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v51, 1, v114) != 1)
        {
          sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
LABEL_49:
          sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
          v91 = (uint64_t)v110;
          goto LABEL_52;
        }
        v52 = v98;
        *v98 = v45;
        v53 = v104;
        sub_1BA5193C4(v119, (uint64_t)v52 + *(int *)(v104 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
        v54 = (char *)v52 + *(int *)(v53 + 24);
        *(_QWORD *)v54 = v48;
        *((_QWORD *)v54 + 1) = v47;
        v54[16] = 0;
        swift_retain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v55 = v118;
        else
          v55 = sub_1BB3924B8(0, *(_QWORD *)(v118 + 16) + 1, 1, v118);
        v57 = *(_QWORD *)(v55 + 16);
        v56 = *(_QWORD *)(v55 + 24);
        if (v57 >= v56 >> 1)
          v55 = sub_1BB3924B8(v56 > 1, v57 + 1, 1, v55);
        *(_QWORD *)(v55 + 16) = v57 + 1;
        v58 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
        v118 = v55;
        sub_1BA5193C4((uint64_t)v98, v55 + v58 + *(_QWORD *)(v103 + 72) * v57, type metadata accessor for DebugFormatUploadPrivateEntry);
        sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      }
      else
      {
        v66 = *v31;
        swift_retain();
        swift_retain();
        sub_1BB86D2B8();
        swift_release();
        v120 = v121;
        v67 = v102;
        sub_1BB508DB0(&v122, v102, v66, &v120);
        swift_release();
        v69 = v122;
        v68 = v123;
        v70 = v111;
        v71 = (uint64_t)v111 + *(int *)(v112 + 48);
        *v111 = v122;
        v70[1] = v68;
        sub_1BA5193C4((uint64_t)v67, v71, (uint64_t (*)(_QWORD))sub_1BB5102C0);
        if (!v68)
        {
          sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v71, 1, v114) == 1)
            goto LABEL_51;
          v85 = v71;
          v86 = v95;
          sub_1BA5193C4(v85, v95, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenReason);
          v87 = *v31;
          v88 = v97;
          sub_1BA4C2DD8(v86, (uint64_t)v97 + *(int *)(v106 + 20), (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenReason);
          *v88 = v87;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v36 = sub_1BB3924A4(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
          v90 = *(_QWORD *)(v36 + 16);
          v89 = *(_QWORD *)(v36 + 24);
          if (v90 >= v89 >> 1)
            v36 = sub_1BB3924A4(v89 > 1, v90 + 1, 1, v36);
          *(_QWORD *)(v36 + 16) = v90 + 1;
          sub_1BA5193C4((uint64_t)v97, v36+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v90, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenEntry);
          sub_1BA4A2E80(v95, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenReason);
          sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
          goto LABEL_47;
        }
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v71, 1, v114) != 1)
        {
          sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
LABEL_51:
          sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
          v91 = (uint64_t)v111;
LABEL_52:
          sub_1BA4A2E80(v91, (uint64_t (*)(_QWORD))sub_1BB51023C);
          goto LABEL_5;
        }
        v72 = v99;
        *v99 = v66;
        v73 = v104;
        sub_1BA5193C4(v119, (uint64_t)v72 + *(int *)(v104 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
        v74 = (char *)v72 + *(int *)(v73 + 24);
        *(_QWORD *)v74 = v69;
        *((_QWORD *)v74 + 1) = v68;
        v74[16] = 1;
        swift_retain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v75 = v118;
        else
          v75 = sub_1BB3924B8(0, *(_QWORD *)(v118 + 16) + 1, 1, v118);
        v77 = *(_QWORD *)(v75 + 16);
        v76 = *(_QWORD *)(v75 + 24);
        if (v77 >= v76 >> 1)
          v75 = sub_1BB3924B8(v76 > 1, v77 + 1, 1, v75);
        *(_QWORD *)(v75 + 16) = v77 + 1;
        v78 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
        v118 = v75;
        sub_1BA5193C4((uint64_t)v99, v75 + v78 + *(_QWORD *)(v103 + 72) * v77, type metadata accessor for DebugFormatUploadPrivateEntry);
        sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      }
      swift_bridgeObjectRelease();
      v100 = 1;
LABEL_5:
      v35 += v115;
      if (!--v33)
      {
        swift_bridgeObjectRelease();
        return v118;
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB50FF54(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for DebugFormatUploadHiddenEntry();
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - v8;
  sub_1BB39C98C(0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (id *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(a2 + 16);
  if (v14)
  {
    v15 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v16 = *(_QWORD *)(v11 + 72);
    swift_bridgeObjectRetain();
    v21 = a2;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v15, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BB39C98C);
      if (swift_getEnumCaseMultiPayload() == 1)
      {

      }
      else
      {
        type metadata accessor for DebugFormatUploadPrivateEntryResult(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1BA5193C4((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenEntry);
          sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenEntry);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            a1 = sub_1BB3924A4(0, *(_QWORD *)(a1 + 16) + 1, 1, a1);
          v18 = *(_QWORD *)(a1 + 16);
          v17 = *(_QWORD *)(a1 + 24);
          if (v18 >= v17 >> 1)
            a1 = sub_1BB3924A4(v17 > 1, v18 + 1, 1, a1);
          *(_QWORD *)(a1 + 16) = v18 + 1;
          sub_1BA5193C4((uint64_t)v6, a1+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenEntry);
          sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenEntry);
        }
        else
        {
          v23 = a1;
          v19 = swift_retain();
          MEMORY[0x1BCCE36AC](v19);
          if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
          swift_release();
          a1 = v23;
        }
      }
      v15 += v16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    return v24;
  }
  else
  {
    swift_bridgeObjectRetain();
    return MEMORY[0x1E0DEE9D8];
  }
}

void sub_1BB51023C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C60E8)
  {
    sub_1BA4AD288(255, &qword_1EF2C60F0, (uint64_t)&type metadata for FormatCompilerOptions.Newsroom.Environment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BB5102C0(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C60E8);
  }
}

void sub_1BB5102C0(uint64_t a1)
{
  sub_1BA4B07F0(a1, qword_1EF2C60F8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatUploadHiddenReason, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t *sub_1BB5102DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  _OWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v7 = *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
      v8 = (_OWORD *)((char *)a1 + v7);
      v9 = (uint64_t *)((char *)a2 + v7);
      v10 = type metadata accessor for DebugFormatUploadHiddenReason();
      swift_retain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v11 = v9[1];
          if (v11 == 1)
          {
            v12 = *((_OWORD *)v9 + 1);
            *v8 = *(_OWORD *)v9;
            v8[1] = v12;
            v8[2] = *((_OWORD *)v9 + 2);
          }
          else
          {
            *(_QWORD *)v8 = *v9;
            *((_QWORD *)v8 + 1) = v11;
            v18 = v9[3];
            *((_QWORD *)v8 + 2) = v9[2];
            *((_QWORD *)v8 + 3) = v18;
            v19 = v9[4];
            v20 = v9[5];
            *((_QWORD *)v8 + 4) = v19;
            *((_QWORD *)v8 + 5) = v20;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          goto LABEL_13;
        case 1u:
          v17 = v9[1];
          *(_QWORD *)v8 = *v9;
          *((_QWORD *)v8 + 1) = v17;
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 2u:
        case 4u:
          v14 = (void *)*v9;
          v15 = v14;
          *(_QWORD *)v8 = v14;
          goto LABEL_13;
        case 3u:
          v16 = sub_1BB86EB84();
          (*(void (**)(_OWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v8, v9, v16);
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          break;
      }
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1BB5104DC(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v3 = a1 + *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
    type metadata accessor for DebugFormatUploadHiddenReason();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        if (*(_QWORD *)(v3 + 8) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
        break;
      case 1u:
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      case 2u:
      case 4u:

        break;
      case 3u:
        v4 = sub_1BB86EB84();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
        break;
      default:
        return;
    }
  }
}

_QWORD *sub_1BB5105BC(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  _OWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
    v6 = (_OWORD *)((char *)a1 + v5);
    v7 = (_QWORD *)((char *)a2 + v5);
    v8 = type metadata accessor for DebugFormatUploadHiddenReason();
    swift_retain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v9 = v7[1];
        if (v9 == 1)
        {
          v10 = *((_OWORD *)v7 + 1);
          *v6 = *(_OWORD *)v7;
          v6[1] = v10;
          v6[2] = *((_OWORD *)v7 + 2);
        }
        else
        {
          *(_QWORD *)v6 = *v7;
          *((_QWORD *)v6 + 1) = v9;
          v15 = v7[3];
          *((_QWORD *)v6 + 2) = v7[2];
          *((_QWORD *)v6 + 3) = v15;
          v16 = v7[4];
          v17 = v7[5];
          *((_QWORD *)v6 + 4) = v16;
          *((_QWORD *)v6 + 5) = v17;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        goto LABEL_11;
      case 1u:
        v14 = v7[1];
        *(_QWORD *)v6 = *v7;
        *((_QWORD *)v6 + 1) = v14;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 4u:
        v11 = (void *)*v7;
        v12 = v11;
        *(_QWORD *)v6 = v11;
        goto LABEL_11;
      case 3u:
        v13 = sub_1BB86EB84();
        (*(void (**)(_OWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v6, v7, v13);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        break;
    }
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1BB510794(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  id v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for DebugFormatUploadPrivateEntryResult);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v5 = *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
      v6 = (_OWORD *)((char *)a1 + v5);
      v7 = (_OWORD *)((char *)a2 + v5);
      v8 = type metadata accessor for DebugFormatUploadHiddenReason();
      swift_retain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          if (*((_QWORD *)v7 + 1) == 1)
          {
            v9 = *v7;
            v10 = v7[2];
            v6[1] = v7[1];
            v6[2] = v10;
            *v6 = v9;
          }
          else
          {
            *(_QWORD *)v6 = *(_QWORD *)v7;
            *((_QWORD *)v6 + 1) = *((_QWORD *)v7 + 1);
            *((_QWORD *)v6 + 2) = *((_QWORD *)v7 + 2);
            *((_QWORD *)v6 + 3) = *((_QWORD *)v7 + 3);
            *((_QWORD *)v6 + 4) = *((_QWORD *)v7 + 4);
            *((_QWORD *)v6 + 5) = *((_QWORD *)v7 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          goto LABEL_12;
        case 1u:
          *(_QWORD *)v6 = *(_QWORD *)v7;
          *((_QWORD *)v6 + 1) = *((_QWORD *)v7 + 1);
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
        case 4u:
          v11 = *(void **)v7;
          v12 = v11;
          *(_QWORD *)v6 = v11;
          goto LABEL_12;
        case 3u:
          v13 = sub_1BB86EB84();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v6, v7, v13);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1BB5109A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for DebugFormatUploadHiddenReason();
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v10 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1BB510A9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for DebugFormatUploadPrivateEntryResult);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for DebugFormatUploadHiddenEntry() + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = type metadata accessor for DebugFormatUploadHiddenReason();
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        v10 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BB510BAC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DebugFormatUploadHiddenEntry();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BB510C20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    type metadata accessor for FormatFile();
    swift_retain();
    v5 = (char *)&loc_1BB510CAC + 4 * word_1BB920F80[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  swift_retain();
  return v6;
}

uint64_t sub_1BB511A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v5 = type metadata accessor for FormatContent(0);
      v6 = v4 + *(int *)(v5 + 20);
      v7 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v4 + *(int *)(v5 + 40);
      v9 = sub_1BB871E24();
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      goto LABEL_31;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(v4 + 106) != 255)
      {
        v11 = *(unsigned __int16 *)(v4 + 104) | (*(unsigned __int8 *)(v4 + 106) << 16);
        sub_1BA77A170(*(_QWORD *)(v4 + 96), v11, SBYTE2(v11), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
      }
      return sub_1BA5F1DE8(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 16));
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      goto LABEL_31;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 56) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 168) >= 3uLL)
        swift_bridgeObjectRelease();
      v12 = (int *)type metadata accessor for FormatPackage();
      v13 = v4 + v12[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = type metadata accessor for FormatCompilerOptions(0);
      v15 = v13 + *(int *)(v14 + 24);
      if (*(_QWORD *)(v15 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v16 = v15 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v17 = sub_1BB86E710();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
      if (!v19(v16, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      v20 = v13 + *(int *)(v14 + 28);
      if (!v19(v20, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
      swift_bridgeObjectRelease();
      v21 = v4 + v12[24];
      v22 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      v23 = v4 + v12[25];
      if (!v19(v23, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v23, v17);
      return sub_1BA5F1DE8(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 16));
    case 6u:
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 7u:
      swift_release();
      return sub_1BA5F1DE8(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 16));
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_BYTE *)(v4 + 80));
      return sub_1BA5F1DE8(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 16));
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = v4 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      v25 = type metadata accessor for FormatContent(0);
      v26 = v24 + *(int *)(v25 + 20);
      v27 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = v24 + *(int *)(v25 + 40);
      v29 = sub_1BB871E24();
      v30 = *(_QWORD *)(v29 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_32:
      swift_bridgeObjectRelease();
      break;
    default:
      return sub_1BA5F1DE8(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 16));
  }
  return sub_1BA5F1DE8(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 16));
}

void sub_1BB5120E4(_QWORD *a1, _QWORD *a2)
{
  char *v2;

  *a1 = *a2;
  type metadata accessor for FormatFile();
  swift_retain();
  v2 = (char *)sub_1BB512164 + 4 * word_1BB920FB0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB512164(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__dst, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  _QWORD *v37;
  int v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;

  *(_DWORD *)(v42 - 84) = v38;
  *(_QWORD *)(v42 - 96) = v36;
  v81 = v41;
  v82 = v40;
  v43 = v39[1];
  *v37 = *v39;
  v37[1] = v43;
  v44 = (int *)type metadata accessor for FormatContent(0);
  v45 = v44[5];
  v46 = (char *)v37 + v45;
  v47 = (char *)v39 + v45;
  v48 = sub_1BB86C8B0();
  v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
  swift_bridgeObjectRetain();
  v49(v46, v47, v48);
  v50 = v44[6];
  v51 = (_QWORD *)((char *)v37 + v50);
  v52 = (_QWORD *)((char *)v39 + v50);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  v54 = v44[7];
  v55 = (_QWORD *)((char *)v37 + v54);
  v56 = (_QWORD *)((char *)v39 + v54);
  v57 = v56[1];
  *v55 = *v56;
  v55[1] = v57;
  v58 = v44[8];
  v59 = (_QWORD *)((char *)v37 + v58);
  v60 = (_QWORD *)((char *)v39 + v58);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  v62 = v44[9];
  v63 = (_QWORD *)((char *)v37 + v62);
  v64 = (_QWORD *)((char *)v39 + v62);
  v65 = v64[1];
  *v63 = *v64;
  v63[1] = v65;
  v66 = v44[10];
  v80 = (char *)v37 + v66;
  v67 = (char *)v39 + v66;
  v68 = sub_1BB871E24();
  v69 = *(_QWORD *)(v68 - 8);
  v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v79(v67, 1, v68))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v80, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v80, v67, v68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v80, 0, 1, v68);
  }
  v71 = *(_QWORD *)(v42 - 96);
  *(_QWORD *)((char *)v37 + v44[11]) = *(_QWORD *)((char *)v39 + v44[11]);
  *(_QWORD *)((char *)v37 + v44[12]) = *(_QWORD *)((char *)v39 + v44[12]);
  *(_QWORD *)((char *)v37 + v44[13]) = *(_QWORD *)((char *)v39 + v44[13]);
  *(_QWORD *)((char *)v37 + v44[14]) = *(_QWORD *)((char *)v39 + v44[14]);
  *(_QWORD *)((char *)v37 + v44[15]) = *(_QWORD *)((char *)v39 + v44[15]);
  *(_QWORD *)((char *)v37 + v44[16]) = *(_QWORD *)((char *)v39 + v44[16]);
  *(_QWORD *)((char *)v37 + v44[17]) = *(_QWORD *)((char *)v39 + v44[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v72 = *(int *)(v71 + 24);
  v73 = v81 + v72;
  v74 = v82 + v72;
  v75 = *(_QWORD *)v74;
  v76 = *(_QWORD *)(v74 + 8);
  v77 = *(_BYTE *)(v74 + 16);
  sub_1BA5F1EC8(*(_QWORD *)v74, v76, v77);
  *(_QWORD *)v73 = v75;
  *(_QWORD *)(v73 + 8) = v76;
  *(_BYTE *)(v73 + 16) = v77;
  return v81;
}

_QWORD *sub_1BB512EC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1 + *(int *)(a3 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    type metadata accessor for FormatFile();
    v6 = (char *)&loc_1BB512F64 + 4 * word_1BB920FC8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = v9[16];
  sub_1BA5F1EC8(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *((_QWORD *)v8 + 1);
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  v15 = v8[16];
  v8[16] = v12;
  sub_1BA5F1DE8(v13, v14, v15);
  return a1;
}

_QWORD *sub_1BB513EC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;

  v3 = a3;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for FormatFile();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 11:
      v72 = v3;
      v22 = v8[1];
      *v7 = *v8;
      v7[1] = v22;
      v7[2] = v8[2];
      v23 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      *(_OWORD *)((char *)v7 + v23) = *(_OWORD *)((char *)v8 + v23);
      v26 = (int *)type metadata accessor for FormatContent(0);
      v27 = v26[5];
      v28 = &v24[v27];
      v29 = &v25[v27];
      v30 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)&v24[v26[6]] = *(_OWORD *)&v25[v26[6]];
      *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
      *(_OWORD *)&v24[v26[8]] = *(_OWORD *)&v25[v26[8]];
      *(_OWORD *)&v24[v26[9]] = *(_OWORD *)&v25[v26[9]];
      v31 = v26[10];
      v32 = &v24[v31];
      v33 = &v25[v31];
      v34 = sub_1BB871E24();
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      *(_QWORD *)&v24[v26[11]] = *(_QWORD *)&v25[v26[11]];
      *(_QWORD *)&v24[v26[12]] = *(_QWORD *)&v25[v26[12]];
      *(_QWORD *)&v24[v26[13]] = *(_QWORD *)&v25[v26[13]];
      *(_QWORD *)&v24[v26[14]] = *(_QWORD *)&v25[v26[14]];
      *(_QWORD *)&v24[v26[15]] = *(_QWORD *)&v25[v26[15]];
      *(_QWORD *)&v24[v26[16]] = *(_QWORD *)&v25[v26[16]];
      *(_QWORD *)&v24[v26[17]] = *(_QWORD *)&v25[v26[17]];
      swift_storeEnumTagMultiPayload();
      v3 = v72;
      break;
    case 5:
      v73 = v3;
      v37 = v8[1];
      *v7 = *v8;
      v7[1] = v37;
      v7[2] = v8[2];
      *((_WORD *)v7 + 24) = *((_WORD *)v8 + 24);
      *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
      *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
      *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
      *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
      *(_OWORD *)((char *)v7 + 120) = *(_OWORD *)((char *)v8 + 120);
      *(_OWORD *)((char *)v7 + 136) = *(_OWORD *)((char *)v8 + 136);
      *((_QWORD *)v7 + 19) = *((_QWORD *)v8 + 19);
      v7[10] = v8[10];
      v69 = (int *)type metadata accessor for FormatPackage();
      v38 = v69[23];
      v39 = (char *)v7 + v38;
      v40 = (char *)v8 + v38;
      *(_OWORD *)((char *)v7 + v38) = *(_OWORD *)((char *)v8 + v38);
      v70 = type metadata accessor for FormatCompilerOptions(0);
      v41 = *(int *)(v70 + 24);
      v42 = &v39[v41];
      v43 = &v40[v41];
      v44 = *(_OWORD *)&v40[v41 + 16];
      *(_OWORD *)v42 = *(_OWORD *)&v40[v41];
      *((_OWORD *)v42 + 1) = v44;
      *((_OWORD *)v42 + 2) = *(_OWORD *)&v40[v41 + 32];
      v45 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v46 = &v42[v45];
      v47 = &v43[v45];
      v48 = sub_1BB86E710();
      v49 = *(_QWORD *)(v48 - 8);
      v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
      v68 = v49;
      if (v71(v47, 1, v48))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      v51 = v70;
      v52 = *(int *)(v70 + 28);
      v53 = &v39[v52];
      v54 = &v40[v52];
      if (v71(&v40[v52], 1, v48))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v53, v54, v48);
        v51 = v70;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v53, 0, 1, v48);
      }
      *(_QWORD *)&v39[*(int *)(v51 + 32)] = *(_QWORD *)&v40[*(int *)(v51 + 32)];
      v56 = v69[24];
      v57 = (char *)v7 + v56;
      v58 = (char *)v8 + v56;
      v59 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      v60 = v69[25];
      v61 = (char *)v7 + v60;
      v62 = (char *)v8 + v60;
      v3 = v73;
      if (v71(v62, 1, v48))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v61, v62, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v61, 0, 1, v48);
      }
      goto LABEL_22;
    case 0:
      *v7 = *v8;
      v11 = (int *)type metadata accessor for FormatContent(0);
      v12 = v11[5];
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      *(_OWORD *)((char *)v7 + v11[6]) = *(_OWORD *)((char *)v8 + v11[6]);
      *(_OWORD *)((char *)v7 + v11[7]) = *(_OWORD *)((char *)v8 + v11[7]);
      *(_OWORD *)((char *)v7 + v11[8]) = *(_OWORD *)((char *)v8 + v11[8]);
      *(_OWORD *)((char *)v7 + v11[9]) = *(_OWORD *)((char *)v8 + v11[9]);
      v16 = v11[10];
      v17 = (char *)v7 + v16;
      v18 = (char *)v8 + v16;
      v19 = sub_1BB871E24();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      *(_QWORD *)((char *)v7 + v11[11]) = *(_QWORD *)((char *)v8 + v11[11]);
      *(_QWORD *)((char *)v7 + v11[12]) = *(_QWORD *)((char *)v8 + v11[12]);
      *(_QWORD *)((char *)v7 + v11[13]) = *(_QWORD *)((char *)v8 + v11[13]);
      *(_QWORD *)((char *)v7 + v11[14]) = *(_QWORD *)((char *)v8 + v11[14]);
      *(_QWORD *)((char *)v7 + v11[15]) = *(_QWORD *)((char *)v8 + v11[15]);
      *(_QWORD *)((char *)v7 + v11[16]) = *(_QWORD *)((char *)v8 + v11[16]);
      *(_QWORD *)((char *)v7 + v11[17]) = *(_QWORD *)((char *)v8 + v11[17]);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      break;
  }
  v64 = *(int *)(v3 + 24);
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  *(_OWORD *)v65 = *(_OWORD *)v66;
  v65[16] = v66[16];
  return a1;
}

_QWORD *sub_1BB514550(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v71;
  int *v72;
  int *v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (_OWORD *)((char *)a2 + v6);
    sub_1BA4A2E80((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v9 = type metadata accessor for FormatFile();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 11:
        v75 = a3;
        v22 = v8[1];
        *v7 = *v8;
        v7[1] = v22;
        v7[2] = v8[2];
        v23 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        v24 = (char *)v7 + v23;
        v25 = (char *)v8 + v23;
        *(_OWORD *)((char *)v7 + v23) = *(_OWORD *)((char *)v8 + v23);
        v26 = (int *)type metadata accessor for FormatContent(0);
        v27 = v26[5];
        v28 = &v24[v27];
        v29 = &v25[v27];
        v30 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        *(_OWORD *)&v24[v26[6]] = *(_OWORD *)&v25[v26[6]];
        *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
        *(_OWORD *)&v24[v26[8]] = *(_OWORD *)&v25[v26[8]];
        *(_OWORD *)&v24[v26[9]] = *(_OWORD *)&v25[v26[9]];
        v31 = v26[10];
        v32 = &v24[v31];
        v33 = &v25[v31];
        v34 = sub_1BB871E24();
        v35 = *(_QWORD *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
        {
          sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        *(_QWORD *)&v24[v26[11]] = *(_QWORD *)&v25[v26[11]];
        *(_QWORD *)&v24[v26[12]] = *(_QWORD *)&v25[v26[12]];
        *(_QWORD *)&v24[v26[13]] = *(_QWORD *)&v25[v26[13]];
        *(_QWORD *)&v24[v26[14]] = *(_QWORD *)&v25[v26[14]];
        *(_QWORD *)&v24[v26[15]] = *(_QWORD *)&v25[v26[15]];
        *(_QWORD *)&v24[v26[16]] = *(_QWORD *)&v25[v26[16]];
        *(_QWORD *)&v24[v26[17]] = *(_QWORD *)&v25[v26[17]];
        swift_storeEnumTagMultiPayload();
        a3 = v75;
        break;
      case 5:
        v76 = a3;
        v37 = v8[1];
        *v7 = *v8;
        v7[1] = v37;
        v7[2] = v8[2];
        *((_WORD *)v7 + 24) = *((_WORD *)v8 + 24);
        *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
        *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
        *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
        *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
        *(_OWORD *)((char *)v7 + 120) = *(_OWORD *)((char *)v8 + 120);
        *(_OWORD *)((char *)v7 + 136) = *(_OWORD *)((char *)v8 + 136);
        *((_QWORD *)v7 + 19) = *((_QWORD *)v8 + 19);
        v7[10] = v8[10];
        v72 = (int *)type metadata accessor for FormatPackage();
        v38 = v72[23];
        v39 = (char *)v7 + v38;
        v40 = (char *)v8 + v38;
        *(_OWORD *)((char *)v7 + v38) = *(_OWORD *)((char *)v8 + v38);
        v73 = (int *)type metadata accessor for FormatCompilerOptions(0);
        v41 = v73[6];
        v42 = &v39[v41];
        v43 = &v40[v41];
        v44 = *(_OWORD *)&v40[v41 + 16];
        *(_OWORD *)v42 = *(_OWORD *)&v40[v41];
        *((_OWORD *)v42 + 1) = v44;
        *((_OWORD *)v42 + 2) = *(_OWORD *)&v40[v41 + 32];
        v45 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        v46 = &v42[v45];
        v47 = &v43[v45];
        v48 = sub_1BB86E710();
        v49 = *(_QWORD *)(v48 - 8);
        v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
        v71 = v49;
        if (v74(v47, 1, v48))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
        }
        v51 = v73[7];
        v52 = &v39[v51];
        v53 = &v40[v51];
        a3 = v76;
        if (v74(&v40[v51], 1, v48))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v52, v53, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v52, 0, 1, v48);
        }
        *(_QWORD *)&v39[v73[8]] = *(_QWORD *)&v40[v73[8]];
        v55 = v72[24];
        v56 = (char *)v7 + v55;
        v57 = (char *)v8 + v55;
        v58 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
        v59 = v72[25];
        v60 = (char *)v7 + v59;
        v61 = (char *)v8 + v59;
        if (v74(v61, 1, v48))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v60, v61, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v60, 0, 1, v48);
        }
        goto LABEL_23;
      case 0:
        *v7 = *v8;
        v11 = (int *)type metadata accessor for FormatContent(0);
        v12 = v11[5];
        v13 = (char *)v7 + v12;
        v14 = (char *)v8 + v12;
        v15 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        *(_OWORD *)((char *)v7 + v11[6]) = *(_OWORD *)((char *)v8 + v11[6]);
        *(_OWORD *)((char *)v7 + v11[7]) = *(_OWORD *)((char *)v8 + v11[7]);
        *(_OWORD *)((char *)v7 + v11[8]) = *(_OWORD *)((char *)v8 + v11[8]);
        *(_OWORD *)((char *)v7 + v11[9]) = *(_OWORD *)((char *)v8 + v11[9]);
        v16 = v11[10];
        v17 = (char *)v7 + v16;
        v18 = (char *)v8 + v16;
        v19 = sub_1BB871E24();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        *(_QWORD *)((char *)v7 + v11[11]) = *(_QWORD *)((char *)v8 + v11[11]);
        *(_QWORD *)((char *)v7 + v11[12]) = *(_QWORD *)((char *)v8 + v11[12]);
        *(_QWORD *)((char *)v7 + v11[13]) = *(_QWORD *)((char *)v8 + v11[13]);
        *(_QWORD *)((char *)v7 + v11[14]) = *(_QWORD *)((char *)v8 + v11[14]);
        *(_QWORD *)((char *)v7 + v11[15]) = *(_QWORD *)((char *)v8 + v11[15]);
        *(_QWORD *)((char *)v7 + v11[16]) = *(_QWORD *)((char *)v8 + v11[16]);
        *(_QWORD *)((char *)v7 + v11[17]) = *(_QWORD *)((char *)v8 + v11[17]);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  v63 = *(int *)(a3 + 24);
  v64 = (char *)a1 + v63;
  v65 = (char *)a2 + v63;
  v66 = v65[16];
  v67 = *(_QWORD *)v64;
  v68 = *((_QWORD *)v64 + 1);
  *(_OWORD *)v64 = *(_OWORD *)v65;
  v69 = v64[16];
  v64[16] = v66;
  sub_1BA5F1DE8(v67, v68, v69);
  return a1;
}

uint64_t sub_1BB514C10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB514C1C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FormatFile();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1BB514C98()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB514CA4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FormatFile();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB514D18()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatFile();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static Ratio.Aspect.aspect(for:min:max:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, double *a3@<X8>)
{
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;

  v5 = objc_msgSend(*(id *)(a1 + 40), sel_thumbnailUltraHQ);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_thumbnailSize);
    v8 = v7;
    v10 = v9;

    if (v10 == 0.0)
    {
      v11 = sub_1BB86DA20();
      return (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a3, a2, v11);
    }
    sub_1BB86DA14();
    v15 = v14;
    v16 = v8 / v10;
    sub_1BB86DA14();
    if (v17 >= v16)
      v17 = v16;
    if (v15 > v17)
      v17 = v15;
    *a3 = v17;
    v13 = *MEMORY[0x1E0DB61D0];
  }
  else
  {
    v13 = *MEMORY[0x1E0DB61C0];
  }
  v18 = sub_1BB86DA20();
  return (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(a3, v13, v18);
}

ValueMetadata *type metadata accessor for CategoryViewItemWidth()
{
  return &type metadata for CategoryViewItemWidth;
}

uint64_t static SharingActivity.block(tag:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BB515C60();
  MEMORY[0x1E0C80A78](v2);
  sub_1BB515CC8();
  MEMORY[0x1E0C80A78](v3);
  if (!a1)
    return 0;
  v4 = qword_1ED3BA8E8;
  swift_unknownObjectRetain();
  if (v4 != -1)
    swift_once();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB872970();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BA82DAD0();
  swift_unknownObjectRetain();
  sub_1BB870048();
  sub_1BB8703E4();
  sub_1BB870048();
  swift_allocObject();
  v5 = sub_1BB86FC88();
  swift_unknownObjectRelease();
  return v5;
}

uint64_t static UIActivityType.block.getter()
{
  return sub_1BB872970();
}

NewsFeed::BlockingCommandState_optional __swiftcall BlockingCommandState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  NewsFeed::BlockingCommandState_optional v2;

  v1 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = NewsFeed_BlockingCommandState_notBlocked;
  else
    v2.value = NewsFeed_BlockingCommandState_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

uint64_t BlockingCommandState.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6B636F6C42746F6ELL;
  else
    return 0x64656B636F6C62;
}

uint64_t sub_1BB51515C(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x6B636F6C42746F6ELL;
  else
    v3 = 0x64656B636F6C62;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEA00000000006465;
  if (*a2)
    v5 = 0x6B636F6C42746F6ELL;
  else
    v5 = 0x64656B636F6C62;
  if (*a2)
    v6 = 0xEA00000000006465;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB515208()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB51528C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB5152EC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB51536C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB5153C8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x64656B636F6C62;
  if (*v1)
    v2 = 0x6B636F6C42746F6ELL;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xEA00000000006465;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB51540C()
{
  sub_1BB515E44();
  return sub_1BB872CE8();
}

uint64_t static Commands.Blocking.block.getter()
{
  return sub_1BA499934(&qword_1ED3BA8E8);
}

uint64_t sub_1BB515460()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  swift_getObjectType();
  v3 = FCTagProviding.localizedTagType.getter();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  v6 = sub_1BB8729D0();
  swift_bridgeObjectRelease();
  return v6;
}

id sub_1BB515608(_BYTE *a1)
{
  uint64_t *v1;

  if ((*a1 & 1) != 0)
  {
    if (qword_1ED3AAB28 != -1)
      swift_once();
    v1 = &qword_1ED39D8E8;
  }
  else
  {
    if (qword_1EF2A7250 != -1)
      swift_once();
    v1 = &qword_1EF2C4738;
  }
  return (id)*v1;
}

uint64_t sub_1BB51568C(_BYTE *a1)
{
  id v1;
  id v2;

  if ((*a1 & 1) != 0)
  {
    if (qword_1ED3AAB28 != -1)
      swift_once();
    v1 = (id)qword_1ED39D8E8;
  }
  else
  {
    if (qword_1EF2A7250 != -1)
      swift_once();
    v2 = (id)qword_1EF2C4738;
  }
  return sub_1BB8703D8();
}

uint64_t static KeyCommandItem.block(tag:)(uint64_t a1)
{
  uint64_t v2;

  sub_1BB515CC8();
  MEMORY[0x1E0C80A78](v2);
  if (qword_1ED3BA8E8 != -1)
    swift_once();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BA82DAD0();
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_1BB870048();
  return sub_1BB86F964();
}

uint64_t sub_1BB51589C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  swift_getObjectType();
  v5 = FCTagProviding.localizedTagType.getter();
  v7 = v6;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  v8 = sub_1BB8729D0();
  v10 = v9;
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  a1[1] = v10;
  return result;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5block3tagACSgSo14FCTagProviding_pSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BB515E88(0, (unint64_t *)&unk_1ED3AFA70, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v2);
  sub_1BB515E88(0, (unint64_t *)&unk_1ED3AFA10, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v3);
  sub_1BB515E88(0, (unint64_t *)&unk_1ED3AFA40, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v4);
  if (!a1)
    return 0;
  v5 = qword_1ED3BA8E8;
  swift_unknownObjectRetain();
  if (v5 != -1)
    swift_once();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BA82DAD0();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB870030();
  sub_1BB870018();
  sub_1BB870348();
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB2C();
}

void sub_1BB515C60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3E20)
  {
    sub_1BB8703E4();
    sub_1BA82DAD0();
    v0 = sub_1BB870060();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3E20);
  }
}

void sub_1BB515CC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3E30)
  {
    sub_1BA82DAD0();
    v0 = sub_1BB870060();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3E30);
  }
}

uint64_t sub_1BB515D28()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB515D4C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BB51589C(a1);
}

uint64_t storeEnumTagSinglePayload for BlockingCommandState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB515DB4 + 4 * byte_1BB9210D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB515DE8 + 4 * byte_1BB9210D0[v4]))();
}

uint64_t sub_1BB515DE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB515DF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB515DF8);
  return result;
}

uint64_t sub_1BB515E04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB515E0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB515E10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB515E18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlockingCommandState()
{
  return &type metadata for BlockingCommandState;
}

ValueMetadata *type metadata accessor for Commands.Blocking()
{
  return &type metadata for Commands.Blocking;
}

unint64_t sub_1BB515E44()
{
  unint64_t result;

  result = qword_1EF2C6240;
  if (!qword_1EF2C6240)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for BlockingCommandState, &type metadata for BlockingCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2C6240);
  }
  return result;
}

void sub_1BB515E88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA82DAD0();
    v7 = a3(a1, &type metadata for BlockingCommandState, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

ValueMetadata *type metadata accessor for SportsFeaturedEventsResult()
{
  return &type metadata for SportsFeaturedEventsResult;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatProgressViewNodeProgressObserver(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  sub_1BA897950(*a2);
  *a1 = v3;
  return a1;
}

uint64_t destroy for FormatProgressViewNodeProgressObserver(uint64_t *a1)
{
  return sub_1BA8979BC(*a1);
}

uint64_t *assignWithCopy for FormatProgressViewNodeProgressObserver(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  sub_1BA897950(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1BA8979BC(v4);
  return a1;
}

uint64_t *assignWithTake for FormatProgressViewNodeProgressObserver(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1BA8979BC(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatProgressViewNodeProgressObserver(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 15);
  v3 = (((*(_QWORD *)a1 >> 60) >> 3) & 0xFFFFFFF1 | (2 * ((*(_QWORD *)a1 >> 60) & 7))) ^ 0xF;
  if (v3 >= 0xE)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatProgressViewNodeProgressObserver(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE)
  {
    *(_QWORD *)result = a2 - 15;
    if (a3 >= 0xF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0xF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = (unint64_t)(((-a2 >> 1) & 7) - 8 * a2) << 60;
  }
  return result;
}

uint64_t *sub_1BB516040(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFFFLL | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressViewNodeProgressObserver()
{
  return &type metadata for FormatProgressViewNodeProgressObserver;
}

uint64_t sub_1BB516068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[144];
  uint64_t v20;

  v17 = sub_1BB870C48();
  v5 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v15 = v2;
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B794(0, v8, 0);
    v9 = v20;
    v10 = a1 + 32;
    v11 = v8 - 1;
    v16 = *(_QWORD *)(a2 + 104);
    while (1)
    {
      sub_1BA895BCC(v10, (uint64_t)v19);
      sub_1BA895BCC((uint64_t)v19, (uint64_t)&v18);
      sub_1BA895DFC((uint64_t)v19, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA984500(v16, v7);
      sub_1BA895DFC((uint64_t)v19, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
      v20 = v9;
      v13 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BAC7B794(v12 > 1, v13 + 1, 1);
        v9 = v20;
      }
      *(_QWORD *)(v9 + 16) = v13 + 1;
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, v7, v17);
      if (!v11)
        break;
      v10 += 136;
      --v11;
    }
  }
  return v9;
}

id sub_1BB516204(uint64_t a1, double a2, double a3, double a4)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  id v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  double Height;
  double Width;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  sub_1BB873630();
  v8 = v6;
  v9 = v7;
  if (*(_QWORD *)(a1 + 184))
  {
    if ((*(_BYTE *)(a1 + 256) & 1) != 0)
      v10 = 0.0;
    else
      v10 = *(double *)(a1 + 224) * a4;
    if ((*(_BYTE *)(a1 + 256) & 1) != 0)
      v11 = 0.0;
    else
      v11 = *(double *)(a1 + 232) * a4;
    if ((*(_BYTE *)(a1 + 256) & 1) != 0)
      v12 = v6;
    else
      v12 = *(double *)(a1 + 240) * a4;
    if ((*(_BYTE *)(a1 + 256) & 1) != 0)
      v13 = v7;
    else
      v13 = *(double *)(a1 + 248) * a4;
    v14 = *(_QWORD *)(a1 + 40);
    if (!v14)
      goto LABEL_18;
LABEL_17:
    v15 = *(unsigned __int8 *)(v14 + 112);
    if (v15 > 0xFD)
      goto LABEL_18;
    v21 = *(_QWORD *)(v14 + 96);
    v20 = *(char **)(v14 + 104);
    if ((v15 & 0x80) != 0)
    {
      v30.origin.x = v10;
      v30.origin.y = v11;
      v30.size.width = v12;
      v30.size.height = v13;
      Height = CGRectGetHeight(v30);
      v31.origin.x = v10;
      v31.origin.y = v11;
      v31.size.width = v12;
      v31.size.height = v13;
      Width = CGRectGetWidth(v31);
      if (Width >= Height)
        Width = Height;
      v22 = Width * 0.5;
      sub_1BA6E6CC4(v21, (uint64_t)v20, v15);
      v20 = (char *)&unk_1E7270E58;
      v23 = 1;
    }
    else
    {
      v22 = *(double *)(v14 + 96);
      sub_1BA6F2B04(*(uint64_t *)&v22, *(_QWORD *)(v14 + 104), *(_BYTE *)(v14 + 112));
      v23 = *((_QWORD *)v20 + 2);
      if (!v23)
      {
        v24 = 0;
LABEL_32:
        swift_bridgeObjectRelease();
        v19 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, v24, v10, v11, v12, v13, v22 * a4, v22 * a4);
        return v19;
      }
    }
    v24 = 0;
    v25 = v20 + 32;
    do
    {
      v26 = *v25++;
      v27 = qword_1BB9212C0[v26];
      if ((v27 & ~v24) == 0)
        v27 = 0;
      v24 |= v27;
      --v23;
    }
    while (v23);
    goto LABEL_32;
  }
  v10 = 0.0;
  v11 = 0.0;
  v12 = v6;
  v13 = v7;
  v14 = *(_QWORD *)(a1 + 40);
  if (v14)
    goto LABEL_17;
LABEL_18:
  v16 = 0;
  v17 = 0;
  v32.origin.x = v10;
  v32.origin.y = v11;
  v32.size.width = v12;
  v32.size.height = v13;
  if (CGRectEqualToRect(*(CGRect *)(&v8 - 2), v32))
    return 0;
  v19 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRect_, v10, v11, v12, v13);
  return v19;
}

id UIFont.withTraits(width:slant:grade:design:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, void *a7)
{
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  char v21;
  id v22;
  uint64_t inited;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  double v29;
  id v30;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char isUniquelyReferenced_nonNull_native;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char v49;
  id v50;
  _OWORD v51[2];
  __int128 v52;
  unint64_t v53;

  v12 = MEMORY[0x1E0DEE9E0];
  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    v33 = sub_1BB8729A0();
    v35 = v34;
    v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)&a1);
    v53 = sub_1BA78DE28();
    *(_QWORD *)&v52 = v36;
    sub_1BA76EAE0(&v52, v51);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BA785F30(v51, v33, v35, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((a4 & 1) != 0)
    {
LABEL_3:
      if ((a6 & 1) != 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  v38 = *(double *)&a3;
  v39 = sub_1BB8729A0();
  v41 = v40;
  v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v38);
  v53 = sub_1BA78DE28();
  *(_QWORD *)&v52 = v42;
  sub_1BA76EAE0(&v52, v51);
  v43 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BA785F30(v51, v39, v41, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((a6 & 1) != 0)
  {
LABEL_4:
    if (!a7)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  v44 = objc_msgSend((id)objc_opt_self(), sel_ts_fontSystemFontGradeTraitKey);
  v45 = sub_1BB8729A0();
  v47 = v46;

  v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, a5);
  v53 = sub_1BA78DE28();
  *(_QWORD *)&v52 = v48;
  sub_1BA76EAE0(&v52, v51);
  v49 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BA785F30(v51, v45, v47, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a7)
  {
LABEL_5:
    v13 = (void *)objc_opt_self();
    v14 = a7;
    v15 = objc_msgSend(v13, sel_ts_fontSystemFontDesignTraitKey);
    v16 = sub_1BB8729A0();
    v18 = v17;

    type metadata accessor for SystemDesign(0);
    v53 = v19;
    *(_QWORD *)&v52 = v14;
    sub_1BA76EAE0(&v52, v51);
    v20 = v14;
    v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BA785F30(v51, v16, v18, v21);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_6:
  if (*(_QWORD *)(v12 + 16))
  {
    v22 = objc_msgSend(v50, sel_fontDescriptor);
    sub_1BA786428();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    v24 = (void *)*MEMORY[0x1E0DC13C0];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC13C0];
    sub_1BA78647C();
    *(_QWORD *)(inited + 64) = v25;
    *(_QWORD *)(inited + 40) = v12;
    v26 = v24;
    sub_1BA7864E4(inited);
    type metadata accessor for AttributeName(0);
    sub_1BA785CB4();
    v27 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v22, sel_fontDescriptorByAddingAttributes_, v27);

    objc_msgSend(v50, sel_pointSize);
    v30 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v28, v29);

    return v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    return v50;
  }
}

uint64_t FormatJsonConfigKey.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x73676E69646E6962;
  else
    return 0x736E6F6974706FLL;
}

uint64_t sub_1BB51689C(char *a1, char *a2)
{
  return sub_1BB7F8AEC(*a1, *a2);
}

uint64_t sub_1BB5168A8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB516928()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB516984(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x736E6F6974706FLL;
  if (*v1)
    v2 = 0x73676E69646E6962;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB5169C4(_QWORD *a1)
{
  return FormatJsonConfigKey.encode(to:)(a1);
}

uint64_t sub_1BB5169E0(char *a1, char *a2)
{
  return sub_1BB649FD8(*a1, *a2);
}

uint64_t sub_1BB5169EC(char *a1, char *a2)
{
  return sub_1BB64A7F0(*a1, *a2);
}

uint64_t sub_1BB5169F8(char *a1, char *a2)
{
  return sub_1BB6497D8(*a1, *a2);
}

uint64_t _s8NewsFeed19FormatJsonConfigKeyO1loiySbAC_ACtFZ_0(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x73676E69646E6962;
  else
    v3 = 0x736E6F6974706FLL;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE800000000000000;
  if (*a2)
    v5 = 0x73676E69646E6962;
  else
    v5 = 0x736E6F6974706FLL;
  if (*a2)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v8 = 0;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1BB516AAC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB516AD8();
  result = sub_1BA4A0438();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB516AD8()
{
  unint64_t result;

  result = qword_1EF2C6248;
  if (!qword_1EF2C6248)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatJsonConfigKey, &type metadata for FormatJsonConfigKey);
    atomic_store(result, (unint64_t *)&qword_1EF2C6248);
  }
  return result;
}

unint64_t sub_1BB516B1C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB516B40();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB516B40()
{
  unint64_t result;

  result = qword_1EF2C6250;
  if (!qword_1EF2C6250)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatJsonConfigKey, &type metadata for FormatJsonConfigKey);
    atomic_store(result, (unint64_t *)&qword_1EF2C6250);
  }
  return result;
}

unint64_t sub_1BB516B84(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82E9F8();
  a1[2] = sub_1BA82EAC4();
  result = sub_1BA82EA3C();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatJsonConfigKey()
{
  return &type metadata for FormatJsonConfigKey;
}

_QWORD *sub_1BB516BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  _QWORD *v47;
  void *v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  _QWORD *v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t inited;
  uint64_t v69;
  _OWORD v70[2];
  uint64_t v71;
  _OWORD v72[2];
  uint64_t v73;
  _QWORD v74[4];
  char v75;
  _QWORD v76[4];
  char v77;

  sub_1BA4B07F0(0, &qword_1EF2B0000, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB60A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v62 = (char *)&v59 - v1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
  v66 = v3;
  sub_1BA8C88C8(0);
  v69 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 32) & ~v7;
  v64 = v8;
  v65 = v7 | 7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB887E40;
  v10 = v9 + v8;
  sub_1BB86D708();
  sub_1BAAFA530(0x74726F7077656956, 0xED0000657A695320, v11, v12, 0, (_QWORD *)(v9 + v8));
  v13 = type metadata accessor for FormatInspectionItem(0);
  v14 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v10, 0, 1, v13);
  sub_1BB86D768();
  sub_1BAAFA530(0x20656C6269736956, 0xEC000000657A6953, v15, v16, 0, (_QWORD *)(v10 + v6));
  v14(v10 + v6, 0, 1, v13);
  v63 = 2 * v6;
  sub_1BB86D6FC();
  sub_1BAAFA530(0x676E69646E756F42, 0xED0000657A695320, v17, v18, 0, (_QWORD *)(v10 + 2 * v6));
  v14(v10 + 2 * v6, 0, 1, v13);
  v67 = 3 * v6;
  sub_1BB86D6E4();
  sub_1BAAFA530(0x5320776F646E6957, 0xEB00000000657A69, v19, v20, 0, (_QWORD *)(v10 + 3 * v6));
  v14(v10 + 3 * v6, 0, 1, v13);
  v61 = 4 * v6;
  sub_1BB86D744();
  sub_1BAAFA530(0xD000000000000012, 0x80000001BB98FD20, v21, v22, 0, (_QWORD *)(v10 + 4 * v6));
  v14(v10 + 4 * v6, 0, 1, v13);
  sub_1BB86D714();
  v76[0] = v23;
  v76[1] = v24;
  v76[2] = v25;
  v76[3] = v26;
  v77 = 0;
  sub_1BAB005FC(0x4D2074756F79614CLL, 0xEE00736E69677261, (uint64_t)v76, (_QWORD *)(v10 + 5 * v6));
  v14(v10 + 5 * v6, 0, 1, v13);
  sub_1BB86D720();
  v74[0] = v27;
  v74[1] = v28;
  v74[2] = v29;
  v74[3] = v30;
  v75 = 0;
  sub_1BAB005FC(0xD000000000000010, 0x80000001BB98FD40, (uint64_t)v74, (_QWORD *)(v10 + 6 * v6));
  v14(v10 + 6 * v6, 0, 1, v13);
  v31 = (void *)sub_1BB86D75C();
  v59 = 0xD000000000000015;
  sub_1BAB00928(0xD000000000000015, 0x80000001BB973080, v31, (_QWORD *)(v10 + 7 * v6));
  v14(v10 + 7 * v6, 0, 1, v13);
  v32 = sub_1BB86D72C();
  sub_1BAB00BC8(0xD000000000000010, 0x80000001BB98FD60, v32, 0, (_QWORD *)(v10 + 8 * v6));
  v14(v10 + 8 * v6, 0, 1, v13);
  v33 = (uint64_t)v62;
  sub_1BB86D750();
  v34 = sub_1BB86D93C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 0, 1, v34);
  v60 = 0xD000000000000014;
  sub_1BAB00E74(0xD000000000000014, 0x80000001BB98FD80, v33, (_QWORD *)(v10 + 9 * v6));
  v14(v10 + 9 * v6, 0, 1, v13);
  sub_1BB86D774();
  sub_1BAAF3A18(0x656C616353, 0xE500000000000000, v35, 0, (_QWORD *)(v10 + 10 * v6));
  v14(v10 + 10 * v6, 0, 1, v13);
  sub_1BAF89090(0x4F2074756F79614CLL, 0xEE00736E6F697470, 0, 0, v9, v70);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v36 = inited;
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v36 + 64) = &off_1E72D2F60;
  v37 = v36;
  v38 = swift_allocObject();
  *(_QWORD *)(v37 + 32) = v38;
  v62 = (char *)(v37 + 32);
  *(_QWORD *)(v38 + 48) = v71;
  v39 = v70[1];
  *(_OWORD *)(v38 + 16) = v70[0];
  *(_OWORD *)(v38 + 32) = v39;
  v40 = v64;
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1BB87D7A0;
  v42 = v41 + v40;
  v43 = (void *)sub_1BB86D738();
  v44 = objc_msgSend(v43, sel_horizontalSizeClass);

  sub_1BAB00E98(v59, 0x80000001BB98FDC0, (uint64_t)v44, 0, (_QWORD *)(v41 + v40));
  v14(v41 + v40, 0, 1, v13);
  v45 = (void *)sub_1BB86D738();
  v46 = objc_msgSend(v45, sel_verticalSizeClass);

  sub_1BAB00E98(0xD000000000000013, 0x80000001BB98FDE0, (uint64_t)v46, 0, (_QWORD *)(v42 + v6));
  v14(v42 + v6, 0, 1, v13);
  v47 = (_QWORD *)(v42 + v63);
  v48 = (void *)sub_1BB86D738();
  v49 = objc_msgSend(v48, sel_userInterfaceStyle);

  v50 = v60;
  sub_1BAB01154(v60, 0x80000001BB98FE00, (uint64_t)v49, 0, v47);
  v14((uint64_t)v47, 0, 1, v13);
  v51 = (_QWORD *)(v42 + v67);
  v52 = (void *)sub_1BB86D738();
  v53 = objc_msgSend(v52, sel_userInterfaceIdiom);

  sub_1BAB01404(v50, 0x80000001BB98FE20, (uint64_t)v53, 0, v51);
  v14((uint64_t)v51, 0, 1, v13);
  sub_1BAF89090(0xD000000000000010, 0x80000001BB98FDA0, 0, 0, v41, v72);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v54 = inited;
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v54 + 104) = &off_1E72D2F60;
  v55 = swift_allocObject();
  *(_QWORD *)(v54 + 72) = v55;
  *(_QWORD *)(v55 + 48) = v73;
  v56 = v72[1];
  *(_OWORD *)(v55 + 16) = v72[0];
  *(_OWORD *)(v55 + 32) = v56;
  v57 = sub_1BB6DF010(v54);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v57;
}

_QWORD *sub_1BB5173C0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t inited;
  uint64_t v55;
  _OWORD v56[2];
  uint64_t v57;
  _QWORD v58[4];
  char v59;
  _QWORD v60[4];
  char v61;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2AFFC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5FD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v51 = (char *)&v49 - v4;
  sub_1BA4B07F0(0, &qword_1EF2AFFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D38], v2);
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)&v49 - v6;
  v55 = sub_1BB86DA68();
  v49 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED39ED18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D98], v2);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v49 - v10;
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v12);
  sub_1BA8C88C8(0);
  v53 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  v52 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_1BB881B80;
  v18 = (_QWORD *)(v17 + v16);
  v19 = sub_1BB86D678();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v11, a1, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v11, 0, 1, v19);
  sub_1BAB016F4(0x53206E6D756C6F43, 0xED00006D65747379, (uint64_t)v11, v18);
  v21 = type metadata accessor for FormatInspectionItem(0);
  v22 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v18, 0, 1, v21);
  v23 = sub_1BB86D63C();
  sub_1BAB01A20(0x736E6D756C6F43, 0xE700000000000000, v23, 0, (_QWORD *)((char *)v18 + v15));
  v22((_QWORD *)((char *)v18 + v15), 0, 1, v21);
  sub_1BB86D5C4();
  sub_1BAAF3A18(0x57206E6D756C6F43, 0xEC00000068746469, v24, 0, (_QWORD *)((char *)v18 + 2 * v15));
  v22((_QWORD *)((char *)v18 + 2 * v15), 0, 1, v21);
  sub_1BB86D624();
  sub_1BB86DA50();
  v26 = v25;
  v49 = *(_QWORD *)(v49 + 8);
  ((void (*)(char *, uint64_t))v49)(v8, v55);
  sub_1BAAF3A18(0xD00000000000001CLL, 0x80000001BB98FC60, v26, 0, (_QWORD *)((char *)v18 + 3 * v15));
  v22((_QWORD *)((char *)v18 + 3 * v15), 0, 1, v21);
  v27 = (uint64_t)v50;
  sub_1BB86D630();
  v28 = sub_1BB86D60C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 0, 1, v28);
  sub_1BAB01C6C(0x54206E6D756C6F43, 0xED00007374696172, v27, (_QWORD *)((char *)v18 + 4 * v15));
  v22((_QWORD *)((char *)v18 + 4 * v15), 0, 1, v21);
  sub_1BB86D624();
  v29 = (uint64_t)v51;
  sub_1BB86DA44();
  ((void (*)(char *, uint64_t))v49)(v8, v55);
  v30 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
  sub_1BAB020B8(0xD000000000000012, 0x80000001BB98FC80, v29, (_QWORD *)((char *)v18 + 5 * v15));
  v22((_QWORD *)((char *)v18 + 5 * v15), 0, 1, v21);
  sub_1BB86D654();
  sub_1BAAF3A18(0xD000000000000010, 0x80000001BB98FCA0, v31, 0, (_QWORD *)((char *)v18 + 6 * v15));
  v22((_QWORD *)((char *)v18 + 6 * v15), 0, 1, v21);
  sub_1BB86D5F4();
  sub_1BAAF3A18(0xD00000000000001BLL, 0x80000001BB98FCC0, v32, 0, (_QWORD *)((char *)v18 + 7 * v15));
  v22((_QWORD *)((char *)v18 + 7 * v15), 0, 1, v21);
  sub_1BB86D648();
  sub_1BAAF3A18(0xD000000000000012, 0x80000001BB98FCE0, v33, 0, &v18[v15]);
  v22(&v18[v15], 0, 1, v21);
  sub_1BB86D5E8();
  sub_1BAAF3A18(0xD00000000000001DLL, 0x80000001BB98FD00, v34, 0, (_QWORD *)((char *)v18 + 9 * v15));
  v22((_QWORD *)((char *)v18 + 9 * v15), 0, 1, v21);
  sub_1BB86D618();
  v60[0] = v35;
  v60[1] = v36;
  v60[2] = v37;
  v60[3] = v38;
  v61 = 0;
  sub_1BAB023E4(0x73646E756F42, 0xE600000000000000, (uint64_t)v60, (_QWORD *)((char *)v18 + 10 * v15));
  v22((_QWORD *)((char *)v18 + 10 * v15), 0, 1, v21);
  sub_1BB86D5DC();
  v58[0] = v39;
  v58[1] = v40;
  v58[2] = v41;
  v58[3] = v42;
  v59 = 0;
  sub_1BAB005FC(0x4D2074756F79614CLL, 0xEE00736E69677261, (uint64_t)v58, (_QWORD *)((char *)v18 + 11 * v15));
  v22((_QWORD *)((char *)v18 + 11 * v15), 0, 1, v21);
  sub_1BB86D5D0();
  sub_1BAAF3A18(0x614620656C616353, 0xEC000000726F7463, v43, 0, (_QWORD *)((char *)v18 + 12 * v15));
  v22((_QWORD *)((char *)v18 + 12 * v15), 0, 1, v21);
  sub_1BAF89090(0x4F206E6D756C6F43, 0xEE00736E6F697470, 0, 0, v52, v56);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v44 = inited;
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v44 + 64) = &off_1E72D2F60;
  v45 = swift_allocObject();
  *(_QWORD *)(v44 + 32) = v45;
  *(_QWORD *)(v45 + 48) = v57;
  v46 = v56[1];
  *(_OWORD *)(v45 + 16) = v56[0];
  *(_OWORD *)(v45 + 32) = v46;
  v47 = sub_1BB6DF010(v44);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v47;
}

void sub_1BB517BEC()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_navigationItem);
  sub_1BA65E330();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB8856E0;
  v3 = (void *)sub_1BB872970();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v3);

  if (v4)
  {
    v5 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v6 = v0;
    v7 = objc_msgSend(v5, sel_initWithImage_style_target_action_, v4, 0, v6, sel_doDismiss);

    *(_QWORD *)(v2 + 32) = v7;
    sub_1BB872DCC();
    sub_1BAAC19FC();
    v8 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setRightBarButtonItems_, v8);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BB517DB0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatLayoutDimensionViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BB517DFC(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t inited;
  id v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  void *v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _BYTE *v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  char *v35;
  objc_class *v36;
  id v37;
  void *v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  objc_super v49;

  v47 = a1;
  v3 = sub_1BB86D678();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v46 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)&v40 - v7;
  v45 = sub_1BB86D660();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v42 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86D7A4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - v14;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v17 = objc_msgSend(a2, sel_view);
  if (v17)
  {
    v18 = v17;
    v19 = *(void **)&a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_scrollView];
    sub_1BAC8E808(v17, v19);

    v20 = sub_1BB516BC8();
    v10 = *(_QWORD *)(v10 + 8);
    v40 = v9;
    ((void (*)(char *, uint64_t))v10)(v15, v9);
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspection;
    *(_QWORD *)(inited + 64) = &off_1E7335C38;
    *(_QWORD *)(inited + 32) = v20;
    v21 = &a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem];
    swift_beginAccess();
    v41 = v4;
    v22 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v22(v48, v21, v3);
    v23 = objc_msgSend(a2, sel_view);
    if (v23)
    {
      v24 = v23;
      sub_1BAC8E808(v23, v19);

      v25 = v42;
      sub_1BB86D66C();
      ((void (*)(char *, uint64_t))v10)(v12, v40);
      v26 = *(void (**)(char *, uint64_t))(v41 + 8);
      v26(v48, v3);
      v27 = (uint64_t)v46;
      v22(v46, v21, v3);
      v28 = sub_1BB5173C0(v27);
      v26((char *)v27, v3);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v25, v45);
      *(_QWORD *)(inited + 96) = &type metadata for FormatInspection;
      *(_QWORD *)(inited + 104) = &off_1E7335C38;
      *(_QWORD *)(inited + 72) = v28;
      v29 = sub_1BB6DF010(inited);
      swift_setDeallocating();
      sub_1BA89EA04(0);
      swift_arrayDestroy();
      v30 = sub_1BB6DED58((uint64_t)v29);
      swift_bridgeObjectRelease();
      v31 = v43;
      v43[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
      v31[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
      *(_QWORD *)&v31[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
      *(_OWORD *)&v31[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
      v32 = &v31[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
      *v32 = 0;
      v32[1] = 0xE000000000000000;
      v33 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
      v34 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
      v35 = v31;
      *(_QWORD *)&v31[v33] = objc_msgSend(v34, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
      *(_QWORD *)&v35[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
      *(_QWORD *)&v35[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v47;
      *(_QWORD *)&v35[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v30;
      *(_QWORD *)&v35[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v30;
      *(_QWORD *)&v35[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
      swift_retain();
      swift_bridgeObjectRetain();

      v36 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
      v49.receiver = v35;
      v49.super_class = v36;
      v37 = objc_msgSendSuper2(&v49, sel_initWithNibName_bundle_, 0, 0);
      v38 = (void *)sub_1BB872970();
      objc_msgSend(v37, sel_setTitle_, v38);

      swift_release();
      *((_BYTE *)v37 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize) = 0;
      *((_BYTE *)v37 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange) = 0;
      return (uint64_t)v37;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  ((void (*)(char *, uint64_t))v10)(v12, v40);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v48, v3);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1BB518360()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB518394()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB5183E8()
{
  return sub_1BB872A90();
}

uint64_t sub_1BB518404()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB518454@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BB5184A4(_QWORD *a1@<X8>)
{
  *a1 = 0x7365636341736168;
  a1[1] = 0xE900000000000073;
}

uint64_t sub_1BB5184C4()
{
  sub_1BB51888C();
  return sub_1BB872D60();
}

uint64_t sub_1BB518520()
{
  sub_1BB51888C();
  return sub_1BB872D0C();
}

void sub_1BB51856C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251B40;
}

uint64_t static FormatPuzzleBinding.Bool.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatPuzzleBinding.Bool.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPuzzleBinding.Bool.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB5185EC()
{
  unint64_t result;

  result = qword_1EF2C6280;
  if (!qword_1EF2C6280)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Bool, &type metadata for FormatPuzzleBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2C6280);
  }
  return result;
}

unint64_t sub_1BB518630(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB518654();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB518654()
{
  unint64_t result;

  result = qword_1EF2C6288;
  if (!qword_1EF2C6288)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Bool, &type metadata for FormatPuzzleBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2C6288);
  }
  return result;
}

unint64_t sub_1BB518698(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE87250();
  a1[2] = sub_1BAEF5484();
  result = sub_1BB5185EC();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB5186CC(_QWORD *a1)
{
  return FormatPuzzleBinding.Bool.init(from:)(a1);
}

uint64_t sub_1BB5186E0(_QWORD *a1)
{
  return FormatPuzzleBinding.Bool.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Bool()
{
  return &type metadata for FormatPuzzleBinding.Bool;
}

uint64_t _s4BoolOwst_5_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB518748 + 4 * asc_1BB92153C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB518768 + 4 * byte_1BB921541[v4]))();
}

_BYTE *sub_1BB518748(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB518768(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB518770(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB518778(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB518780(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB518788(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s4BoolO10CodingTypeOMa_4()
{
  return &_s4BoolO10CodingTypeON_4;
}

unint64_t sub_1BB5187A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C6290;
  if (!qword_1EF2C6290)
  {
    sub_1BB5187F0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C6290);
  }
  return result;
}

void sub_1BB5187F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C6298)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C6298);
  }
}

unint64_t sub_1BB518848()
{
  unint64_t result;

  result = qword_1EF2C62A0;
  if (!qword_1EF2C62A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92173C, &_s4BoolO10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1EF2C62A0);
  }
  return result;
}

unint64_t sub_1BB51888C()
{
  unint64_t result;

  result = qword_1EF2C62A8;
  if (!qword_1EF2C62A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9216C4, &_s4BoolO10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1EF2C62A8);
  }
  return result;
}

uint64_t sub_1BB5188D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  uint64_t v4;
  BOOL *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[168];

  sub_1BA93EB58(a1, (uint64_t)v9);
  v3 = (v9[72] & 0xFE) != 2;
  v4 = type metadata accessor for FormatInspectionItem(0);
  v5 = (BOOL *)(a2 + *(int *)(v4 + 24));
  *v5 = v3;
  v6 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(BOOL *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  *(_OWORD *)a2 = xmmword_1BB921790;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  v7 = a2 + *(int *)(v4 + 28);
  *(_QWORD *)v7 = 0;
  *(_QWORD *)(v7 + 8) = 0;
  *(_BYTE *)(v7 + 16) = -1;
  sub_1BA93EBE8((uint64_t)v9);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 0, 1, v4);
}

uint64_t getEnumTagSinglePayload for DebugFormatSnapshotGestureState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DebugFormatSnapshotGestureState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 41) = v3;
  return result;
}

uint64_t sub_1BB518A14(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BB518A30(uint64_t result, int a2)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    *(_BYTE *)(result + 40) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatSnapshotGestureState()
{
  return &type metadata for DebugFormatSnapshotGestureState;
}

uint64_t sub_1BB518A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3FF8, (uint64_t (*)(uint64_t))sub_1BB518B88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4B07F0(0, &qword_1ED3A4030, (uint64_t (*)(uint64_t))sub_1BB518B88, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3A4068 = result;
  return result;
}

uint64_t static Commands.viewRadarText.getter()
{
  if (qword_1ED3A4078 != -1)
    swift_once();
  return swift_retain();
}

void sub_1BB518B88(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AADA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB79E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

id FormatPluginConfig.__allocating_init(pluginData:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_1BAA4F898(a1, (uint64_t)v3 + OBJC_IVAR____TtC8NewsFeed18FormatPluginConfig_pluginData);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_1BA95992C(a1);
  return v4;
}

uint64_t FormatPluginConfig.pluginData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed18FormatPluginConfig_pluginData;
  swift_beginAccess();
  return sub_1BAA4F898(v3, a1);
}

uint64_t FormatPluginConfig.pluginData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed18FormatPluginConfig_pluginData;
  swift_beginAccess();
  sub_1BB518D70(a1, v3);
  return swift_endAccess();
}

uint64_t (*FormatPluginConfig.pluginData.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id FormatPluginConfig.init(pluginData:)(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BAA4F898(a1, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed18FormatPluginConfig_pluginData);
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_1BA95992C(a1);
  return v4;
}

uint64_t sub_1BB518D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatPluginData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void FormatPluginConfig.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t FormatModule.createPlugin(identifier:layoutOptionsProvider:config:eventDelegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  char *v16;
  uint64_t result;
  char *v18;
  uint64_t v19;

  v13 = sub_1BB86DC00();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + OBJC_IVAR____TtC8NewsFeed12FormatModule_resolver), *(_QWORD *)(v7 + OBJC_IVAR____TtC8NewsFeed12FormatModule_resolver + 24));
  type metadata accessor for FormatViewController();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = v13;
  v14[6] = a6;
  v14[7] = a7;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v15 = a5;
  swift_retain();
  v16 = (char *)sub_1BB86DF24();
  result = swift_release();
  if (v16)
  {
    v18 = &v16[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier];
    swift_beginAccess();
    *(_QWORD *)v18 = a1;
    *((_QWORD *)v18 + 1) = a2;
    swift_bridgeObjectRelease();
    *(_QWORD *)(*(_QWORD *)&v16[OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler] + 40) = a7;
    swift_unknownObjectWeakAssign();
    sub_1BB519190();
    sub_1BB871428();
    swift_allocObject();
    swift_bridgeObjectRetain_n();
    v19 = sub_1BB8713E0();
    swift_release();

    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB518FE4(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB5193A4(0, &qword_1ED3A3F98);
  sub_1BB86DDBC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatPluginConfig();
  sub_1BB86DDC8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86DC0C();
  sub_1BB86DDC8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB519340();
  return sub_1BB86DDD4();
}

uint64_t sub_1BB519144()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB519180(_QWORD *a1)
{
  return sub_1BB518FE4(a1);
}

unint64_t sub_1BB519190()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A6998;
  if (!qword_1ED3A6998)
  {
    v1 = type metadata accessor for FormatViewController();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatViewController, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A6998);
  }
  return result;
}

id FormatModule.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FormatModule.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BB51928C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  return FormatModule.createPlugin(identifier:layoutOptionsProvider:config:eventDelegate:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of FormatModuleType.createPlugin(identifier:layoutOptionsProvider:config:eventDelegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 8))();
}

uint64_t sub_1BB5192BC()
{
  return type metadata accessor for FormatPluginConfig();
}

uint64_t type metadata accessor for FormatPluginConfig()
{
  uint64_t result;

  result = qword_1ED3A6290;
  if (!qword_1ED3A6290)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for FormatPluginConfig()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatPluginConfig.__allocating_init(pluginData:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for FormatModule()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatModule()
{
  return swift_lookUpClassMethod();
}

void sub_1BB519340()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A77D0)
  {
    sub_1BB5193A4(255, &qword_1ED3A77C8);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A77D0);
  }
}

uint64_t sub_1BB5193A4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1BB5193F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a3;
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - v11;
  v13 = sub_1BB86BC8C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v4;
  v18 = *(unsigned int *)(v4 + 24);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v17, a2, v13, v15);
  v19 = (void *)sub_1BB86E59C();
  if (!v19)
    goto LABEL_7;
  v20 = v19;
  v21 = objc_msgSend(v19, sel_fetchStartDate, v35);

  if (v21)
  {
    sub_1BB86C874();

    v22 = sub_1BB86C8B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 0, 1, v22);
  }
  else
  {
    v22 = sub_1BB86C8B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
  }
  sub_1BA50236C((uint64_t)v9, (uint64_t)v12);
  sub_1BB86C8B0();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
  {
    sub_1BA76D750((uint64_t)v12);
LABEL_7:
    sub_1BB86C73C();
    v25 = v24;
    goto LABEL_9;
  }
  sub_1BB86C730();
  v25 = v26;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
LABEL_9:
  v27 = (void *)sub_1BB86E584();
  v28 = (void *)sub_1BB86E59C();
  v29 = (void *)sub_1BB86E590();
  swift_bridgeObjectRetain();
  v30 = (void *)sub_1BB86BC38();
  if (!a4)
  {
    v31 = 0;
    if (v29)
      goto LABEL_11;
LABEL_13:
    v32 = 0;
    goto LABEL_14;
  }
  v31 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  if (!v29)
    goto LABEL_13;
LABEL_11:
  v32 = (void *)sub_1BB86C478();

LABEL_14:
  v33 = v36;
  v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58CC8]), sel_initWithType_URLRequest_operationID_requestUUID_startTime_HTTPResponse_metrics_containerName_error_, v18, v30, 0, v31, v27, v28, v25, 0, v32);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  objc_msgSend(*(id *)(v33 + 16), sel_logNetworkEvent_, v34);

}

uint64_t sub_1BB5196CC()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_1BB5196F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BB5193F0(a1, a2, a3, a4);
}

uint64_t sub_1BB519714@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB51A768();
  *a1 = result;
  return result;
}

uint64_t sub_1BB519740()
{
  sub_1BB51A724();
  return sub_1BB872D60();
}

uint64_t sub_1BB51979C()
{
  sub_1BB51A724();
  return sub_1BB872D0C();
}

void sub_1BB5197E8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252C38;
}

uint64_t sub_1BB5197F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSportsEventBinding.Command.init(from:)(a1, a2);
}

uint64_t sub_1BB51980C(_QWORD *a1)
{
  return FormatSportsEventBinding.Command.encode(to:)(a1);
}

uint64_t sub_1BB519824@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  id v39;
  void *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _QWORD *v52;

  if (!*a1)
  {
    sub_1BA6DC310(0, (unint64_t *)&unk_1EF2A9CC0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    v25 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
    v26 = (v25 + 32) & ~v25;
    v10 = swift_allocObject();
    v48 = xmmword_1BB87CE70;
    *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
    v52 = (_QWORD *)(v10 + v26);
    v27 = *(void **)(a2 + 16);
    swift_getObjectType();
    v28 = objc_msgSend(v27, sel_displayName);
    v29 = sub_1BB8729A0();
    v30 = a4;
    v32 = v31;

    sub_1BA6DC310(0, (unint64_t *)&qword_1EF2A9CD0, (void (*)(uint64_t))sub_1BA89EA20);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v48;
    sub_1BAFEB10C(a3, (uint64_t)v27, (uint64_t)&v49);
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(inited + 64) = &off_1E72D2F60;
    v34 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v34;
    *(_QWORD *)(v34 + 48) = v51;
    v35 = v50;
    *(_OWORD *)(v34 + 16) = v49;
    *(_OWORD *)(v34 + 32) = v35;
    v36 = sub_1BA9747FC(inited);
    swift_setDeallocating();
    sub_1BA89EA20();
    swift_arrayDestroy();
    v37 = sub_1BB6DF010(v36);
    swift_bridgeObjectRelease();
    v38 = v32;
    a4 = v30;
    result = sub_1BAAF3C48(0x746E657645, 0xE500000000000000, (uint64_t)v37, v29, v38, v52);
    goto LABEL_12;
  }
  if (*a1 != 1)
  {
    v39 = objc_msgSend(*(id *)(a2 + 16), sel_eventCompetitorTags);
    if (v39)
    {
      v40 = v39;
      sub_1BA8EB1C8();
      v41 = sub_1BB872DB4();

      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        v43 = sub_1BB873F30();
        v42 = swift_bridgeObjectRelease();
        if (v43)
          goto LABEL_8;
      }
      else if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_8:
        MEMORY[0x1E0C80A78](v42);
        v46[2] = a3;
        v10 = sub_1BAFBC290(v41, (void (*)(unint64_t, uint64_t))sub_1BB51A7B0, (uint64_t)v46);
        result = swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
    sub_1BA6DC310(0, (unint64_t *)&unk_1EF2A9CC0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    v44 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
    v45 = (v44 + 32) & ~v44;
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
    v49 = 0u;
    v50 = 0u;
    result = sub_1BAAF422C(0x74697465706D6F43, 0xEA0000000000726FLL, (uint64_t)&v49, (uint64_t *)(v10 + v45));
    goto LABEL_12;
  }
  sub_1BA6DC310(0, (unint64_t *)&unk_1EF2A9CC0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject();
  v47 = xmmword_1BB87CE70;
  *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)&v48 = v10 + v9;
  v11 = *(void **)(a2 + 16);
  v12 = objc_msgSend(objc_msgSend(v11, sel_eventLeagueTag), sel_displayName);
  swift_unknownObjectRelease();
  v13 = sub_1BB8729A0();
  v52 = v4;
  v14 = a4;
  v16 = v15;

  sub_1BA6DC310(0, (unint64_t *)&qword_1EF2A9CD0, (void (*)(uint64_t))sub_1BA89EA20);
  v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = v47;
  v18 = objc_msgSend(v11, sel_eventLeagueTag);
  swift_getObjectType();
  sub_1BAFEB10C(a3, (uint64_t)v18, (uint64_t)&v49);
  swift_unknownObjectRelease();
  *(_QWORD *)(v17 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v17 + 64) = &off_1E72D2F60;
  v19 = swift_allocObject();
  *(_QWORD *)(v17 + 32) = v19;
  *(_QWORD *)(v19 + 48) = v51;
  v20 = v50;
  *(_OWORD *)(v19 + 16) = v49;
  *(_OWORD *)(v19 + 32) = v20;
  v21 = sub_1BA9747FC(v17);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v22 = sub_1BB6DF010(v21);
  swift_bridgeObjectRelease();
  v23 = v16;
  a4 = v14;
  result = sub_1BAAF3C48(0x65756761654CLL, 0xE600000000000000, (uint64_t)v22, v13, v23, (_QWORD *)v48);
LABEL_12:
  *a4 = v10;
  return result;
}

uint64_t sub_1BB519D78@<X0>(void *a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  _QWORD *v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  _OWORD v19[2];
  uint64_t v20;

  strcpy((char *)v19, "Competitor [");
  BYTE13(v19[0]) = 0;
  HIWORD(v19[0]) = -5120;
  sub_1BB87420C();
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  v8 = v19[0];
  swift_getObjectType();
  v9 = objc_msgSend(a1, sel_displayName);
  v10 = sub_1BB8729A0();
  v12 = v11;

  sub_1BA6DC310(0, (unint64_t *)&qword_1EF2A9CD0, (void (*)(uint64_t))sub_1BA89EA20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BAFEB10C(a2, (uint64_t)a1, (uint64_t)v19);
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v14 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v14;
  *(_QWORD *)(v14 + 48) = v20;
  v15 = v19[1];
  *(_OWORD *)(v14 + 16) = v19[0];
  *(_OWORD *)(v14 + 32) = v15;
  v16 = sub_1BA9747FC(inited);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v17 = sub_1BB6DF010(v16);
  swift_bridgeObjectRelease();
  return sub_1BAAF3C48(v8, *((uint64_t *)&v8 + 1), (uint64_t)v17, v10, v12, a3);
}

uint64_t _s8NewsFeed24FormatSportsEventBindingV7CommandO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(unsigned __int8 *)(a2 + 24);
  if (!(v5 >> 6))
  {
    if (v9 >= 0x40)
    {
LABEL_11:
      sub_1BA856F00(v3, v2, v4, v5, (uint64_t (*)(void))sub_1BA856DD0);
      sub_1BA856F00(v7, v6, v8, v9, (uint64_t (*)(void))sub_1BA856DD0);
      sub_1BA856F00(v3, v2, v4, v5, (uint64_t (*)(void))sub_1BA7EDFFC);
      sub_1BA856F00(v7, v6, v8, v9, (uint64_t (*)(void))sub_1BA7EDFFC);
      goto LABEL_12;
    }
    goto LABEL_6;
  }
  if (v5 >> 6 == 1)
  {
    if ((v9 & 0xC0) != 0x40)
      goto LABEL_11;
LABEL_6:
    v17 = *(_QWORD *)a1;
    v18 = v2;
    LOBYTE(v19) = v4;
    v13 = v7;
    v14 = v6;
    LOBYTE(v15) = v8;
    sub_1BA856F00(v7, v6, v8, v9, (uint64_t (*)(void))sub_1BA856DD0);
    sub_1BA856F00(v3, v2, v4, v5, (uint64_t (*)(void))sub_1BA856DD0);
    sub_1BA856F00(v3, v2, v4, v5, (uint64_t (*)(void))sub_1BA856DD0);
    sub_1BA856F00(v7, v6, v8, v9, (uint64_t (*)(void))sub_1BA856DD0);
    v10 = static FormatTagBinding.Command.== infix(_:_:)((uint64_t)&v17, (uint64_t)&v13);
    sub_1BA856F00(v3, v2, v4, v5, (uint64_t (*)(void))sub_1BA7EDFFC);
    sub_1BA856F00(v7, v6, v8, v9, (uint64_t (*)(void))sub_1BA7EDFFC);
    sub_1BA856F00(v7, v6, v8, v9, (uint64_t (*)(void))sub_1BA7EDFFC);
    sub_1BA856F00(v3, v2, v4, v5, (uint64_t (*)(void))sub_1BA7EDFFC);
    return v10 & 1;
  }
  if ((v9 & 0xC0) != 0x80)
    goto LABEL_11;
  v17 = *(_QWORD *)a1;
  v18 = v2;
  v19 = v4;
  v20 = v5 & 0x3F;
  v13 = v7;
  v14 = v6;
  v15 = v8;
  v16 = v9 & 0x3F;
  if (v3 != v7)
    goto LABEL_11;
  sub_1BA856F00(v3, v6, v8, v9, (uint64_t (*)(void))sub_1BA856DD0);
  sub_1BA856F00(v3, v2, v4, v5, (uint64_t (*)(void))sub_1BA856DD0);
  sub_1BA856F00(v3, v2, v4, v5, (uint64_t (*)(void))sub_1BA856DD0);
  sub_1BA856F00(v3, v6, v8, v9, (uint64_t (*)(void))sub_1BA856DD0);
  v11 = static FormatTagBinding.Command.== infix(_:_:)((uint64_t)&v18, (uint64_t)&v14);
  sub_1BA856F00(v3, v2, v4, v5, (uint64_t (*)(void))sub_1BA7EDFFC);
  sub_1BA856F00(v3, v6, v8, v9, (uint64_t (*)(void))sub_1BA7EDFFC);
  sub_1BA856F00(v3, v6, v8, v9, (uint64_t (*)(void))sub_1BA7EDFFC);
  sub_1BA856F00(v3, v2, v4, v5, (uint64_t (*)(void))sub_1BA7EDFFC);
  if ((v11 & 1) == 0)
  {
LABEL_12:
    v10 = 0;
    return v10 & 1;
  }
  v10 = 1;
  return v10 & 1;
}

unint64_t sub_1BB51A260(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB51A284();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB51A284()
{
  unint64_t result;

  result = qword_1EF2C62C0;
  if (!qword_1EF2C62C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Command, &type metadata for FormatSportsEventBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2C62C0);
  }
  return result;
}

unint64_t sub_1BB51A2C8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE7D340();
  a1[2] = sub_1BAEF4898();
  result = sub_1BB51A2FC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB51A2FC()
{
  unint64_t result;

  result = qword_1EF2C62D8;
  if (!qword_1EF2C62D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Command, &type metadata for FormatSportsEventBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2C62D8);
  }
  return result;
}

uint64_t _s7CommandOwxx(uint64_t a1)
{
  return sub_1BA856F00(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), (uint64_t (*)(void))sub_1BA7EDFFC);
}

uint64_t _s7CommandOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA856F00(*(_QWORD *)a2, v4, v5, v6, (uint64_t (*)(void))sub_1BA856DD0);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s7CommandOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA856F00(*(_QWORD *)a2, v4, v5, v6, (uint64_t (*)(void))sub_1BA856DD0);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BA856F00(v7, v8, v9, v10, (uint64_t (*)(void))sub_1BA7EDFFC);
  return a1;
}

uint64_t _s7CommandOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BA856F00(v5, v7, v6, v8, (uint64_t (*)(void))sub_1BA7EDFFC);
  return a1;
}

uint64_t _s7CommandOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3E && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 62);
  v3 = (*(_BYTE *)(a1 + 24) & 0x3C | (*(unsigned __int8 *)(a1 + 24) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s7CommandOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 62;
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1BB51A54C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = *(_BYTE *)(result + 24) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.Command()
{
  return &type metadata for FormatSportsEventBinding.Command;
}

uint64_t _s7CommandO10CodingTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB51A5BC + 4 * byte_1BB9218C1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB51A5F0 + 4 * byte_1BB9218BC[v4]))();
}

uint64_t sub_1BB51A5F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB51A5F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB51A600);
  return result;
}

uint64_t sub_1BB51A60C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB51A614);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB51A618(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB51A620(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7CommandO10CodingTypeOMa_1()
{
  return &_s7CommandO10CodingTypeON_1;
}

unint64_t sub_1BB51A640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C62E0;
  if (!qword_1EF2C62E0)
  {
    sub_1BB51A688();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C62E0);
  }
  return result;
}

void sub_1BB51A688()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C62E8)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C62E8);
  }
}

unint64_t sub_1BB51A6E0()
{
  unint64_t result;

  result = qword_1EF2C62F0;
  if (!qword_1EF2C62F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB921A80, &_s7CommandO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2C62F0);
  }
  return result;
}

unint64_t sub_1BB51A724()
{
  unint64_t result;

  result = qword_1EF2C62F8;
  if (!qword_1EF2C62F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB921A08, &_s7CommandO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2C62F8);
  }
  return result;
}

uint64_t sub_1BB51A768()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1BB51A7B0@<X0>(void *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB519D78(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB51A7B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB51A7EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB802020(*a1, *a2);
}

uint64_t sub_1BB51A7F8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB51A89C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB51A91C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB51A9BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB51AD24();
  *a1 = result;
  return result;
}

void sub_1BB51A9E8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xEB00000000657669;
  v5 = 0x7463757274736564;
  if (v2 != 1)
  {
    v5 = 0x656E696C6E69;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x746C7561666564;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t storeEnumTagSinglePayload for FormatMenuStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB51AA98 + 4 * byte_1BB921AD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB51AACC + 4 * byte_1BB921AD0[v4]))();
}

uint64_t sub_1BB51AACC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB51AAD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB51AADCLL);
  return result;
}

uint64_t sub_1BB51AAE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB51AAF0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB51AAF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB51AAFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuStyle()
{
  return &type metadata for FormatMenuStyle;
}

unint64_t sub_1BB51AB18(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEFC5D4();
  a1[2] = sub_1BAEFC7F8();
  result = sub_1BB51AB4C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB51AB4C()
{
  unint64_t result;

  result = qword_1EF2C6300;
  if (!qword_1EF2C6300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB921BB8, &type metadata for FormatMenuStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2C6300);
  }
  return result;
}

unint64_t sub_1BB51AB90(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB51ABB4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB51ABB4()
{
  unint64_t result;

  result = qword_1EF2C6308;
  if (!qword_1EF2C6308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB921AEC, &type metadata for FormatMenuStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2C6308);
  }
  return result;
}

unint64_t sub_1BB51ABF8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB51AC24();
  result = sub_1BB51AC68();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB51AC24()
{
  unint64_t result;

  result = qword_1EF2C6310;
  if (!qword_1EF2C6310)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB921B08, &type metadata for FormatMenuStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2C6310);
  }
  return result;
}

unint64_t sub_1BB51AC68()
{
  unint64_t result;

  result = qword_1ED39FA70;
  if (!qword_1ED39FA70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB921B40, &type metadata for FormatMenuStyle);
    atomic_store(result, (unint64_t *)&qword_1ED39FA70);
  }
  return result;
}

uint64_t sub_1BB51ACB0()
{
  sub_1BB51AC68();
  return sub_1BB872D60();
}

uint64_t sub_1BB51AD0C(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_1BADBECAC(a1, *v1);
}

uint64_t sub_1BB51AD24()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t FormatVideoPlayerNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

unint64_t FormatVideoPlayerNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 192);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

uint64_t FormatVideoPlayerNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 184);
}

uint64_t FormatVideoPlayerNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 200);
}

uint64_t FormatVideoPlayerNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoPlayerNode.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 232);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoPlayerNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t FormatVideoPlayerNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatVideoPlayerNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatVideoPlayerNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoPlayerNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatVideoPlayerNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatVideoPlayerNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatVideoPlayerNode.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatVideoPlayerNode.posterContent.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 80);
  return swift_retain();
}

uint64_t FormatVideoPlayerNode.posterStyle.getter()
{
  return swift_retain();
}

uint64_t FormatVideoPlayerNode.overlayContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_QWORD *)(v1 + 104);
  v4 = *(_QWORD *)(v1 + 112);
  v5 = *(_QWORD *)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 128);
  v7 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 144);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_1BA49C600(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t FormatVideoPlayerNode.isLive.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 152);
  v3 = *(_QWORD *)(v1 + 160);
  v4 = *(_QWORD *)(v1 + 168);
  v5 = *(_BYTE *)(v1 + 176);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return sub_1BA82ABBC(v2, v3, v4, v5);
}

uint64_t FormatVideoPlayerNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 184) = a1;
  return result;
}

uint64_t (*FormatVideoPlayerNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BB51B11C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 192);
  *(_QWORD *)(v3 + 192) = v2;
  sub_1BA67D3F4(v2);
  return sub_1BA6EEDB4(v4);
}

unint64_t FormatVideoPlayerNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v1 + 192) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatVideoPlayerNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatVideoPlayerNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 200) = a1;
  return result;
}

uint64_t (*FormatVideoPlayerNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatVideoPlayerNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 216);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 208);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1BB51B284(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 224) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatVideoPlayerNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 224) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoPlayerNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BB51B360(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 232) = v3;
  *(_QWORD *)(v4 + 240) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatVideoPlayerNode.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 232) = a1;
  *(_QWORD *)(v2 + 240) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoPlayerNode.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatVideoPlayerNode.allowsPrerollAds.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 248);
  v4 = *(_QWORD *)(v1 + 256);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_BYTE *)(v1 + 264);
  *(_BYTE *)(a1 + 16) = v5;
  return sub_1BA796C58(v3, v4, v5);
}

uint64_t FormatVideoPlayerNode.allowsPrerollAds.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 248);
  v6 = *(_QWORD *)(v1 + 256);
  *(_QWORD *)(v1 + 248) = v2;
  *(_QWORD *)(v1 + 256) = v3;
  v7 = *(_BYTE *)(v1 + 264);
  *(_BYTE *)(v1 + 264) = v4;
  return sub_1BA796C70(v5, v6, v7);
}

uint64_t (*FormatVideoPlayerNode.allowsPrerollAds.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatVideoPlayerNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:posterContent:posterStyle:overlayContent:isLive:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:allowsPrerollAds:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t a10, __int128 *a11, __int128 *a12, uint64_t a13, uint64_t *a14, char a15, uint64_t *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20)
{
  uint64_t v25;

  v25 = swift_allocObject();
  FormatVideoPlayerNode.init(identifier:size:resize:adjustments:style:animation:content:posterContent:posterStyle:overlayContent:isLive:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:allowsPrerollAds:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
  return v25;
}

uint64_t FormatVideoPlayerNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BA49A42C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144));
  sub_1BA82ABF8(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_BYTE *)(v0 + 176));
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 192));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA796C70(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256), *(_BYTE *)(v0 + 264));
  return v0;
}

uint64_t FormatVideoPlayerNode.__deallocating_deinit()
{
  FormatVideoPlayerNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB51B6E0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C6318, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode, (uint64_t)&protocol conformance descriptor for FormatVideoPlayerNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB51B71C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3BEA50, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode, (uint64_t)&protocol conformance descriptor for FormatVideoPlayerNode);
  a1[2] = sub_1BA50AD30(&qword_1ED3A01C0, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode, (uint64_t)&protocol conformance descriptor for FormatVideoPlayerNode);
  result = sub_1BA50AD30(&qword_1EF2C6320, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode, (uint64_t)"偟+ :\n");
  a1[3] = result;
  return result;
}

uint64_t sub_1BB51B794(_QWORD *a1)
{
  return FormatVideoPlayerNode.encode(to:)(a1);
}

uint64_t sub_1BB51B7B4(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed21FormatVideoPlayerNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BB51B7C0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C6328, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode, (uint64_t)&protocol conformance descriptor for FormatVideoPlayerNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB51B7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;

  v55 = a3;
  v49 = a7;
  v50 = a8;
  v56 = a4;
  v47 = a2;
  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  v48 = v12;
  v51 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v51 + 64);
  MEMORY[0x1E0C80A78](v12);
  v46 = (char *)&v39 - v14;
  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v39 - v18;
  v58 = a1;
  KeyPath = swift_getKeyPath();
  swift_unownedRetainStrong();
  v21 = *(_QWORD *)(a5 + 32);
  sub_1BA71CA6C(v21);
  v52 = a5;
  swift_release();
  v57 = v21;
  v53 = a6;
  v22 = v55;
  v23 = v54;
  sub_1BA717E88();
  sub_1BA719718(v21);
  if (!v23)
  {
    v42 = v13;
    v43 = v19;
    v25 = v51;
    v26 = v52;
    v44 = v17;
    v45 = KeyPath;
    v54 = v16;
    v27 = v22;
    swift_unownedRetainStrong();
    swift_beginAccess();
    v28 = *(_QWORD *)(v26 + 48);
    swift_bridgeObjectRetain();
    swift_release();
    v29 = v53;
    swift_retain();
    v30 = sub_1BB67D4D4(v28, v29);
    v40 = a9;
    swift_bridgeObjectRelease();
    swift_release();
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v41 = v30;
    v32 = v46;
    v33 = v48;
    v31(v46, v47, v48);
    v34 = (*(unsigned __int8 *)(v25 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v47 = 0;
    v35 = (v42 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = (char *)swift_allocObject();
    *((_QWORD *)v36 + 2) = v26;
    *((_QWORD *)v36 + 3) = v27;
    v37 = v49;
    *((_QWORD *)v36 + 4) = v56;
    *((_QWORD *)v36 + 5) = v37;
    *((_QWORD *)v36 + 6) = v50;
    *((_QWORD *)v36 + 7) = v29;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v36[v34], v32, v33);
    *(_QWORD *)&v36[v35] = v40;
    swift_retain();
    swift_unownedRetain();
    sub_1BA7099D4();
    sub_1BA50AD30(&qword_1ED3C4560, 255, (uint64_t (*)(uint64_t))sub_1BA7099D4, MEMORY[0x1E0DB5B88]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v38 = v43;
    sub_1BB86D534();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v54);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1BB51BB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  int v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t *, uint64_t, uint64_t);
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t *v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  double v148;
  double v149;
  double v150;
  double v151;
  double v152;
  double v153;
  double v154;
  double v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  char *v194;
  uint64_t v195;
  unint64_t *v196;
  char *v197;
  uint64_t v198;
  int *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  char v225;
  uint64_t v226[3];
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char v239;
  unint64_t v240;
  uint64_t *v241;
  uint64_t *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unsigned __int8 v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;

  v213 = a4;
  v195 = a8;
  v196 = a9;
  v214 = a7;
  v215 = a6;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C41E8, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  MEMORY[0x1E0C80A78](v21);
  v203 = (uint64_t)&v175 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v204 = (uint64_t)&v175 - v24;
  v25 = type metadata accessor for FormatNodeStateData.Data();
  v200 = *(_QWORD *)(v25 - 8);
  v201 = v25;
  MEMORY[0x1E0C80A78](v25);
  v202 = (uint64_t)&v175 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = (int *)type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v199);
  v206 = (uint64_t *)((char *)&v175 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = sub_1BB86C67C();
  v209 = *(_QWORD *)(v28 - 8);
  v210 = v28;
  MEMORY[0x1E0C80A78](v28);
  v198 = (uint64_t)&v175 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v211 = (char *)&v175 - v31;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1E0C80A78](v32);
  v197 = (char *)&v175 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v175 - v35;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v175 - v38;
  swift_unownedRetainStrong();
  v40 = *(_QWORD *)(a1 + 80);
  swift_retain();
  swift_release();
  v246 = v40;
  v207 = a3;
  v208 = a2;
  v41 = v213;
  sub_1BA67CC20();
  swift_release();
  v205 = a5;
  swift_bridgeObjectRetain();
  v42 = v212;
  sub_1BB51D1A8(a1, v41, a10, a11, a12, a13, v215, v214);
  if (v42)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v193 = (uint64_t *)v36;
  v212 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v44 = v253;
  v45 = v213;
  sub_1BA70DDB0(*(_QWORD *)(v213 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v39);
  v194 = v39;
  v46 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v39, 0, 1, v46);
  v47 = (uint64_t)v211;
  v48 = v212;
  v49 = v215;
  v50 = v45 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
  v51 = *(unsigned __int8 *)(v50 + *(int *)(type metadata accessor for GroupLayoutContext() + 44));
  swift_unownedRetainStrong();
  v52 = *(_QWORD *)(v48 + 72);
  swift_retain();
  swift_release();
  v246 = v52;
  sub_1BB19AD28(v49, v214, v47);
  LODWORD(v192) = v51;
  v213 = v44;
  swift_release();
  swift_unownedRetainStrong();
  v54 = *(_QWORD *)(v48 + 152);
  v53 = *(_QWORD *)(v48 + 160);
  v55 = *(_QWORD *)(v48 + 168);
  LOBYTE(v52) = *(_BYTE *)(v48 + 176);
  sub_1BA82ABBC(v54, v53, v55, v52);
  swift_release();
  v246 = v54;
  v247 = v53;
  if ((v52 & 1) != 0)
  {
    LOBYTE(v248) = v55 & 1;
    sub_1BB86DD80();
    LODWORD(v188) = FormatBoolean.value(contextLayoutOptions:)(v216);
    swift_release();
    sub_1BA82ABF8(v54, v53, v55, 1);
  }
  else
  {
    v248 = v55;
    LODWORD(v188) = sub_1BB85DEF8(v215);
    sub_1BA82ABF8(v54, v53, v55, 0);
  }
  swift_unownedRetainStrong();
  v56 = *(_QWORD *)(v48 + 96);
  v57 = *(_QWORD *)(v48 + 104);
  v58 = *(_QWORD *)(v48 + 112);
  v59 = *(_QWORD *)(v48 + 128);
  v60 = *(_QWORD *)(v48 + 136);
  v61 = *(unsigned __int8 *)(v48 + 144);
  v190 = *(_QWORD *)(v48 + 120);
  v191 = v59;
  v214 = v60;
  sub_1BA49C600(v56, v57, v58, v190, v59, v60, v61);
  swift_release();
  if (v58 == 1)
  {
    v185 = 0;
    v189 = 0;
    v190 = 0;
    LODWORD(v186) = 0;
    v191 = 0;
    v62 = 0;
    v187 = (_QWORD *)0xC000000000000000;
  }
  else
  {
    v216 = v56;
    v217 = v57;
    v218 = v58;
    v219 = v190;
    v220 = v191;
    v221 = v214;
    LODWORD(v189) = v61;
    v222 = v61 & 1;
    sub_1BAB364E0(v208, v207, v215, (uint64_t)&v246, a10, a11, a12, a13);
    sub_1BA49A42C(v56, v57, v58, v190, v191, v214, v189);
    v187 = (_QWORD *)v246;
    v62 = v247;
    v190 = v249;
    v191 = v248;
    LODWORD(v186) = v250;
    v185 = v251;
    v189 = v252;
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  v63 = *(unsigned __int8 *)(v48 + 264);
  if (v63 == 255)
  {
    swift_release();
    v67 = 2;
  }
  else
  {
    v65 = *(_QWORD *)(v48 + 248);
    v64 = *(_QWORD *)(v48 + 256);
    sub_1BA69C808(v65, v64, v63 & 1);
    swift_release();
    v216 = v65;
    v217 = v64;
    LOBYTE(v218) = v63 & 1;
    sub_1BB86DD80();
    v66 = FormatBoolean.value(contextLayoutOptions:)(v244);
    swift_release();
    sub_1BA796C70(v65, v64, v63);
    v67 = v66 & 1;
  }
  v68 = (uint64_t)v197;
  v69 = v193;
  sub_1BA57B488((uint64_t)v194, (uint64_t)v193, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  v70 = type metadata accessor for FeedHeadline(0);
  v71 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v70 - 8) + 48);
  v72 = v71(v69, 1, v70);
  v214 = 0;
  if (v72 == 1)
  {
    sub_1BA502AD0((uint64_t)v69, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    v73 = 0;
    v197 = 0;
  }
  else
  {
    v73 = *v69;
    v197 = (char *)v69[1];
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v69, type metadata accessor for FeedHeadline);
  }
  v74 = *(_QWORD *)(v215 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  v75 = *(_QWORD *)(v215 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  sub_1BA57B488((uint64_t)v194, v68, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  if (v71(v68, 1, v70) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA502AD0(v68, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    v76 = 0;
  }
  else
  {
    v76 = *(_QWORD *)(v68 + 40);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1BA4A2E80(v68, type metadata accessor for FeedHeadline);
  }
  v77 = v198;
  v78 = v209;
  v79 = v210;
  (*(void (**)(uint64_t, char *, uint64_t))(v209 + 16))(v198, v211, v210);
  v80 = v206;
  *v206 = v73;
  v81 = (uint64_t)v80;
  v82 = v208;
  *(_QWORD *)(v81 + 8) = v197;
  *(_QWORD *)(v81 + 16) = v82;
  *(_QWORD *)(v81 + 24) = v207;
  *(_QWORD *)(v81 + 32) = v74;
  *(_QWORD *)(v81 + 40) = v75;
  *(_QWORD *)(v81 + 48) = v76;
  *(_BYTE *)(v81 + 56) = v192;
  v83 = v199;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v81 + v199[9], v77, v79);
  *(_QWORD *)(v81 + v83[10]) = v213;
  *(_BYTE *)(v81 + v83[11]) = v188 & 1;
  v84 = v81 + v83[12];
  v85 = (uint64_t)v187;
  *(_QWORD *)v84 = v187;
  *(_QWORD *)(v84 + 8) = v62;
  v87 = v189;
  v86 = v190;
  *(_QWORD *)(v84 + 16) = v191;
  *(_QWORD *)(v84 + 24) = v86;
  *(_BYTE *)(v84 + 32) = v186;
  *(_QWORD *)(v84 + 40) = v185;
  *(_QWORD *)(v84 + 48) = v87;
  *(_BYTE *)(v81 + v83[13]) = (v67 == 2) | v67 & 1;
  v88 = v202;
  sub_1BA4C2DD8(v81, v202, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  v89 = v201;
  swift_storeEnumTagMultiPayload();
  v90 = v204;
  sub_1BA4C2DD8(v88, v204, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v200 + 56))(v90, 0, 1, v89);
  v91 = v203;
  sub_1BA57B488(v90, v203, (unint64_t *)&qword_1ED3C41E8, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  swift_beginAccess();
  v92 = v213 & 0x1FFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  v93 = v207;
  swift_bridgeObjectRetain_n();
  v201 = v92;
  swift_retain();
  v205 = v85 & 0x1FFFFFFFFFFFFFFFLL;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BA722740(v91, v208, v93);
  swift_endAccess();
  sub_1BA502AD0(v90, (unint64_t *)&qword_1ED3C41E8, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  sub_1BA4A2E80(v88, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  v94 = v215;
  v95 = *(_QWORD *)(v215 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  v96 = v212;
  swift_unownedRetainStrong();
  swift_beginAccess();
  v97 = *(_QWORD *)(v96 + 16);
  v98 = *(_QWORD *)(v96 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  v99 = *(_QWORD *)(v95 + 40);
  if (v99)
  {
    v244 = *(_QWORD *)(v95 + 32);
    v245 = v99;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v100);
    sub_1BB872AFC(v101);
    swift_bridgeObjectRelease();
    v98 = v245;
    v183 = v244;
  }
  else
  {
    v183 = v97;
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  v102 = *(_QWORD *)(v96 + 24);
  v182 = *(_QWORD *)(v96 + 16);
  v203 = v102;
  swift_bridgeObjectRetain();
  swift_release();
  swift_unownedRetainStrong();
  v103 = *(_QWORD *)(v96 + 40);
  swift_retain();
  swift_release();
  v204 = v98;
  if (v103)
  {
    v104 = *(_QWORD *)(v103 + 16);
    swift_retain();
    swift_release();
  }
  else
  {
    v104 = 0;
  }
  v197 = (char *)v104;
  v243 = v104;
  swift_unownedRetainStrong();
  swift_beginAccess();
  v181 = *(_QWORD *)(v96 + 184);
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  v105 = *(_QWORD *)(v96 + 192);
  sub_1BA67D3F4(v105);
  swift_release();
  v240 = v105;
  sub_1BA67C978(v94, (uint64_t *)&v242);
  sub_1BA6EEDB4(v105);
  v193 = v242;
  v241 = v242;
  swift_unownedRetainStrong();
  v192 = v96 + 200;
  swift_beginAccess();
  v180 = *(unsigned __int8 *)(v96 + 200);
  swift_release();
  swift_unownedRetainStrong();
  v106 = *(_QWORD *)(v96 + 208);
  LOBYTE(v105) = *(_BYTE *)(v96 + 216);
  swift_release();
  v238 = v106;
  v239 = v105;
  v188 = *(_QWORD *)(v94 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  sub_1BB86DD80();
  v202 = v236;
  sub_1BB86C538();
  v108 = v207;
  v107 = v208;
  v236 = v208;
  v237 = v207;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v109);
  swift_bridgeObjectRelease();
  v179 = v236;
  v200 = v237;
  v236 = v107;
  v237 = v108;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v110);
  v186 = v236;
  v199 = (int *)v237;
  swift_unownedRetainStrong();
  swift_beginAccess();
  v112 = *(_QWORD *)(v96 + 16);
  v111 = *(_QWORD *)(v96 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  v113 = *(_QWORD *)(v95 + 40);
  v187 = (_QWORD *)v95;
  if (v113)
  {
    v234 = *(_QWORD *)(v95 + 32);
    v235 = v113;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v114);
    sub_1BB872AFC(v115);
    swift_bridgeObjectRelease();
    v112 = v234;
    v111 = v235;
  }
  v213 = swift_allocObject();
  v234 = v112;
  v235 = v111;
  sub_1BB872AFC(v116);
  v185 = v234;
  v198 = v235;
  swift_unownedRetainStrong();
  swift_beginAccess();
  v117 = *(_QWORD *)(v96 + 24);
  v184 = *(_QWORD *)(v96 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  v118 = v215;
  v119 = (uint64_t *)(*(_QWORD *)(v215 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                   + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v120 = *v119;
  v121 = v119[1];
  swift_unownedRetainStrong();
  v122 = *(_QWORD *)(v96 + 88);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  v123 = v214;
  v124 = sub_1BA73C2F0(v122, v118, v120, v121);
  v214 = v123;
  if (v123)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4((unint64_t)v193);
    swift_release();
    sub_1BA4A2E80((uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v211, v210);
    sub_1BA502AD0((uint64_t)v194, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    return swift_deallocUninitializedObject();
  }
  v175 = v124;
  v176 = v119;
  v177 = v117;
  v178 = v96 + 16;
  v125 = v198;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unownedRetainStrong();
  v126 = *(_QWORD *)(v96 + 40);
  swift_retain();
  swift_release();
  if (v126)
  {
    v127 = *(_QWORD *)(v126 + 16);
    swift_retain();
    swift_release();
  }
  else
  {
    v127 = 0;
  }
  v128 = v125;
  v129 = v177;
  v130 = v184;
  v131 = v185;
  v229 = v127;
  v226[0] = 0x8000000000000000;
  swift_unownedRetainStrong();
  swift_beginAccess();
  LODWORD(v198) = *(unsigned __int8 *)(v96 + 200);
  swift_release();
  sub_1BB86DD80();
  v132 = v233;
  swift_unownedRetainStrong();
  v133 = *(_QWORD *)(v212 + 208);
  v134 = *(_BYTE *)(v212 + 216);
  swift_release();
  v231 = v133;
  LOBYTE(v232) = v134;
  swift_unownedRetainStrong();
  v185 = v212 + 232;
  swift_beginAccess();
  v135 = *(_QWORD *)(v212 + 232);
  v136 = *(_QWORD *)(v212 + 240);
  swift_bridgeObjectRetain();
  swift_release();
  v184 = type metadata accessor for FormatImageNodeLayoutAttributes();
  swift_allocObject();
  v174 = v132;
  v137 = v212;
  v199 = (int *)FormatImageNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:shouldCancelContextMenu:)(v186, (uint64_t)v199, v131, v128, v130, v129, v175, &v229, a10, a11, a12, a13, 0, v226, v198, v174, &v231, v135, v136,
                  0);
  v138 = v207;
  v231 = v208;
  v232 = v207;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v139);
  v186 = v231;
  v198 = v232;
  swift_unownedRetainStrong();
  swift_beginAccess();
  v141 = *(_QWORD *)(v137 + 16);
  v140 = *(_QWORD *)(v137 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  v142 = v187;
  v143 = v187[5];
  v144 = v176;
  if (v143)
  {
    v229 = v187[4];
    v230 = v143;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v145);
    sub_1BB872AFC(v146);
    swift_bridgeObjectRelease();
    v141 = v229;
    v140 = v230;
  }
  v229 = v141;
  v230 = v140;
  sub_1BB872AFC(v142);
  v177 = v229;
  v187 = (_QWORD *)v230;
  swift_unownedRetainStrong();
  swift_beginAccess();
  v147 = *(_QWORD *)(v137 + 24);
  v178 = *(_QWORD *)(v137 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  sub_1BB873600();
  v149 = v148;
  v151 = v150;
  v153 = v152;
  v155 = v154;
  v156 = v137;
  v157 = *v144;
  v158 = v144[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v159 = v191;
  v160 = swift_retain();
  v161 = v214;
  v162 = sub_1BA73C2F0(v160, v215, v157, v158);
  v214 = v161;
  if (v161)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4((unint64_t)v193);
    swift_release();
    sub_1BA4A2E80((uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v211, v210);
    sub_1BA502AD0((uint64_t)v194, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    return swift_deallocUninitializedObject();
  }
  v163 = v162;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v227 = 0x8000000000000000;
  v228 = v190;
  swift_unownedRetainStrong();
  swift_beginAccess();
  LODWORD(v215) = *(unsigned __int8 *)(v156 + 200);
  swift_retain();
  swift_release();
  sub_1BB86DD80();
  v164 = v138;
  v165 = v223;
  swift_unownedRetainStrong();
  v166 = *(_QWORD *)(v156 + 208);
  v191 = v159;
  v167 = *(_BYTE *)(v156 + 216);
  swift_release();
  v224 = v166;
  v225 = v167;
  swift_unownedRetainStrong();
  swift_beginAccess();
  v169 = *(_QWORD *)(v156 + 232);
  v168 = *(_QWORD *)(v156 + 240);
  swift_bridgeObjectRetain();
  swift_release();
  swift_allocObject();
  v170 = FormatImageNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:shouldCancelContextMenu:)(v186, v198, v177, (uint64_t)v187, v178, v147, v163, &v228, v149, v151, v153, v155, 0, &v227, v215, v165, &v224, v169, v168,
           0);
  type metadata accessor for FormatVideoPlayerNodeLayoutAttributes();
  swift_allocObject();
  v171 = v195;
  swift_retain();
  swift_bridgeObjectRetain();
  v172 = sub_1BB5F042C(v208, v164, v183, v204, v182, v203, &v243, v181, a10, a11, a12, a13, (uint64_t *)&v241, v180, &v238, v202, v171, v179, v200,
           (uint64_t)v199,
           v170);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BA4A2E80((uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  (*(void (**)(char *, uint64_t))(v209 + 8))(v211, v210);
  result = sub_1BA502AD0((uint64_t)v194, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  v173 = v213;
  *(_QWORD *)(v213 + 16) = v172;
  *v196 = v173 | 0x8000000000000004;
  return result;
}

uint64_t sub_1BB51D1A8(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[10];
  char v34;
  uint64_t v35;

  v14 = *(_QWORD *)(swift_unownedRetainStrong() + 88);
  swift_retain();
  swift_release();
  if (!v14 || (v15 = *(_QWORD *)(v14 + 240), sub_1BA6E6C90(v15), swift_release(), v15 == 1))
  {
    v35 = a8;
    v31 = 0;
    v32 = 0;
    v29 = 0;
    v30 = 0;
    v27 = 0;
    v28 = 0;
    v26 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
LABEL_4:
    swift_retain();
    sub_1BB86D774();
    v21 = v20;
    v22 = sub_1BB86D738();
    swift_release();
    type metadata accessor for FormatImageNodeContext();
    v23 = swift_allocObject();
    *(double *)(v23 + 16) = a5;
    *(double *)(v23 + 24) = a6;
    *(_QWORD *)(v23 + 32) = v21;
    *(_QWORD *)(v23 + 40) = v22;
    *(_QWORD *)(v23 + 48) = v32;
    *(_QWORD *)(v23 + 56) = v31;
    *(_QWORD *)(v23 + 64) = v30;
    *(_QWORD *)(v23 + 72) = v29;
    *(_QWORD *)(v23 + 80) = v28;
    *(_QWORD *)(v23 + 88) = v27;
    *(_QWORD *)(v23 + 96) = v26;
    *(_QWORD *)(v23 + 104) = v16;
    *(_QWORD *)(v23 + 112) = v17;
    *(_QWORD *)(v23 + 120) = v18;
    *(_BYTE *)(v23 + 128) = v19;
    swift_unownedRetainStrong();
    v24 = *(_QWORD *)(a1 + 80);
    swift_retain();
    swift_release();
    v33[0] = v24;
    sub_1BA73B78C();
    swift_release();
    return swift_release();
  }
  sub_1BA52688C(a2, (uint64_t)v33, a5, a6);
  result = sub_1BA6E6D00(v15);
  if (!v8)
  {
    v35 = a8;
    v31 = v33[1];
    v32 = v33[0];
    v29 = v33[3];
    v30 = v33[2];
    v27 = v33[5];
    v28 = v33[4];
    v16 = v33[7];
    v26 = v33[6];
    v17 = v33[8];
    v18 = v33[9];
    v19 = v34;
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1BB51D3E4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB51D430@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB51D47C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 184);
  return result;
}

uint64_t sub_1BB51D4C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 184) = v2;
  return result;
}

unint64_t sub_1BB51D500@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 192);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BB51D54C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 200);
  return result;
}

uint64_t sub_1BB51D590(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 200) = v2;
  return result;
}

uint64_t sub_1BB51D5D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 224);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB51D61C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 240);
  *a2 = *(_QWORD *)(v3 + 232);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatVideoPlayerNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatVideoPlayerNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:posterContent:posterStyle:overlayContent:isLive:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:allowsPrerollAds:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t sub_1BB51D6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB51D77C@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return sub_1BB51BB70(v5[2], v5[3], v5[4], v5[5], v5[6], v5[7], (uint64_t)v5 + v13, *(uint64_t *)((char *)v5 + ((*(_QWORD *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFF8)), a1, a2, a3, a4, a5);
}

uint64_t sub_1BB51D824()
{
  swift_release();
  return swift_deallocObject();
}

id FormatCollectionView.__allocating_init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_collectionViewLayout_, a1, a2, a3, a4, a5);

  return v7;
}

Swift::Void __swiftcall FormatCollectionView.viewWillAppear()()
{
  sub_1BB51DA14(MEMORY[0x1E0DBB828]);
}

unint64_t sub_1BB51D8C4()
{
  unint64_t result;

  result = qword_1ED3AB1F8;
  if (!qword_1ED3AB1F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3AB1F8);
  }
  return result;
}

unint64_t sub_1BB51D900()
{
  unint64_t result;

  result = qword_1ED3C49B0;
  if (!qword_1ED3C49B0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3C49B0);
  }
  return result;
}

uint64_t sub_1BB51D954(uint64_t a1)
{
  uint64_t v2;

  sub_1BB51D990();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BB51D990()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C6330[0])
  {
    sub_1BB51D900();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, qword_1EF2C6330);
  }
}

Swift::Void __swiftcall FormatCollectionView.viewDidLoad()()
{
  sub_1BB51DA14(MEMORY[0x1E0DBB818]);
}

Swift::Void __swiftcall FormatCollectionView.viewDidAppear()()
{
  sub_1BB51DA14(MEMORY[0x1E0DBB820]);
}

Swift::Void __swiftcall FormatCollectionView.viewWillDisappear()()
{
  sub_1BB51DA14(MEMORY[0x1E0DBB838]);
}

Swift::Void __swiftcall FormatCollectionView.viewDidDisappear()()
{
  sub_1BB51DA14(MEMORY[0x1E0DBB830]);
}

void sub_1BB51DA14(void (*a1)(uint64_t, uint64_t))
{
  void *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12[2];
  uint64_t v13;
  id v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v3 = objc_msgSend(v1, sel_visibleCells);
  sub_1BB51D8C4();
  v4 = sub_1BB872DB4();

  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_14;
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1BCCE4630](i, v4);
      else
        v7 = *(id *)(v4 + 8 * i + 32);
      v8 = v7;
      v14 = v7;
      sub_1BB51D900();
      v9 = v8;
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1BA4CECCC(v12, (uint64_t)v15);
        v10 = v16;
        v11 = v17;
        __swift_project_boxed_opaque_existential_1(v15, v16);
        a1(v10, v11);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      }
      else
      {
        v13 = 0;
        memset(v12, 0, sizeof(v12));

        sub_1BB51D954((uint64_t)v12);
      }
    }
    swift_bridgeObjectRelease();
  }
}

id FormatCollectionView.init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  id v11;
  objc_super v13;

  v13.receiver = v5;
  v13.super_class = (Class)swift_getObjectType();
  v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_collectionViewLayout_, a1, a2, a3, a4, a5);

  return v11;
}

id FormatCollectionView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FormatCollectionView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id FormatCollectionView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BB51DDCC()
{
  FormatCollectionView.viewDidLoad()();
}

void sub_1BB51DDEC()
{
  FormatCollectionView.viewWillAppear()();
}

void sub_1BB51DE0C()
{
  FormatCollectionView.viewDidAppear()();
}

void sub_1BB51DE2C()
{
  FormatCollectionView.viewWillDisappear()();
}

void sub_1BB51DE4C()
{
  FormatCollectionView.viewDidDisappear()();
}

uint64_t FormatCollectionView.shouldMonitorMotion.getter()
{
  return 0;
}

uint64_t FormatCollectionView.shouldMonitorScroll.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v1 = objc_msgSend(v0, sel_visibleCells);
  sub_1BB51D8C4();
  v2 = sub_1BB872DB4();

  if (v2 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    v4 = 4;
    while (1)
    {
      v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCE4630](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      swift_getObjectType();
      if (swift_conformsToProtocol2())
        v8 = v6;
      else
        v8 = 0;
      if (v8)
      {
        swift_getObjectType();
        v9 = sub_1BB870ED0();

        if ((v9 & 1) != 0)
        {
          v10 = 1;
          goto LABEL_19;
        }
      }
      else
      {

      }
      ++v4;
      if (v7 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
LABEL_18:
  v10 = 0;
LABEL_19:
  swift_bridgeObjectRelease();
  return v10;
}

void FormatCollectionView.blueprintViewportMonitor(_:viewportScrollDataDidChange:)()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  void *v7;

  v1 = objc_msgSend(v0, sel_visibleCells);
  sub_1BB51D8C4();
  v2 = sub_1BB872DB4();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_15;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1BCCE4630](i, v2);
      else
        v5 = *(id *)(v2 + 8 * i + 32);
      v6 = v5;
      swift_getObjectType();
      if (swift_conformsToProtocol2())
        v7 = v6;
      else
        v7 = 0;
      if (v7)
      {
        swift_getObjectType();
        sub_1BB870EDC();
      }

    }
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t type metadata accessor for FormatCollectionView()
{
  return objc_opt_self();
}

unint64_t sub_1BB51E140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for FormatOption();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (!((*(_QWORD *)(v5 + 8 * v7 + 32) >> 59) & 0x1E | (*(_QWORD *)(v5 + 8 * v7 + 32) >> 2) & 1))
    {
      v9 = swift_projectBox();
      sub_1BA900B30(v9, (uint64_t)v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1BA7AD174(0, *(_QWORD *)(v8 + 16) + 1, 1, v8);
      v11 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      if (v11 >= v10 >> 1)
        v8 = sub_1BA7AD174(v10 > 1, v11 + 1, 1, v8);
      *(_QWORD *)(v8 + 16) = v11 + 1;
      sub_1BA8569CC((uint64_t)v4, v8+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v11);
    }
    ++v7;
  }
  while (v6 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BB51E294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  unint64_t v52;
  size_t v53;
  uint64_t isStackAllocationSafe;
  char *v55;
  id v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  id v81;
  _QWORD v82[4];
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;

  v7 = v6;
  v95 = a5;
  v101 = *MEMORY[0x1E0C80C00];
  v87 = type metadata accessor for FormatOption();
  v11 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v96 = (uint64_t)v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a3 + 112);
  v90 = v5;
  v98 = v5[3];
  swift_bridgeObjectRetain();
  v14 = sub_1BA6D3530();
  sub_1BA7082C0(v14);
  v15 = *(_QWORD *)(v13 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  v84 = v11;
  if (v15)
  {
    v93 = a4;
    v94 = a2;
    v97 = v6;
    *(_QWORD *)&v100 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v15, 0);
    v16 = v100;
    v17 = v13 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v18 = *(_QWORD *)(v11 + 72);
    do
    {
      v19 = v96;
      sub_1BA900B30(v17, v96);
      v20 = swift_allocBox();
      sub_1BA8569CC(v19, v21);
      *(_QWORD *)&v100 = v16;
      v23 = *(_QWORD *)(v16 + 16);
      v22 = *(_QWORD *)(v16 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1BA76B828(v22 > 1, v23 + 1, 1);
        v16 = v100;
      }
      *(_QWORD *)(v16 + 16) = v23 + 1;
      *(_QWORD *)(v16 + 8 * v23 + 32) = v20 | 0x8000000000000000;
      v17 += v18;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    v7 = v97;
    a4 = v93;
    a2 = v94;
  }
  sub_1BA7082C0(v16);
  sub_1BA7A9E9C(*(_QWORD *)(a4 + 56), &v100);
  v99 = v100;
  type metadata accessor for FormatOptionList();
  swift_allocObject();
  swift_retain();
  v24 = sub_1BA7AA0C8((uint64_t *)&v99, a2);
  if (v7)
    return swift_bridgeObjectRelease();
  v26 = v24[2];
  swift_bridgeObjectRetain();
  swift_release();
  sub_1BA7082C0(v26);
  v27 = v90[15];
  if (v27)
  {
    v93 = *(_QWORD *)(v27 + 16);
    if (v93)
    {
      v97 = 0;
      v28 = v90[7];
      v29 = v90[8];
      v83 = v90 + 4;
      __swift_project_boxed_opaque_existential_1(v90 + 4, v28);
      *(_QWORD *)&v100 = 0;
      *((_QWORD *)&v100 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1BB873CB4();
      sub_1BB872AFC("");
      *(_QWORD *)&v99 = *(_QWORD *)(v27 + 16);
      sub_1BB87420C();
      sub_1BB872AFC(v30);
      swift_bridgeObjectRelease();
      sub_1BB872AFC("Format will attempt to apply ");
      (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v29 + 16))(v100, *((_QWORD *)&v100 + 1), v28, v29);
      swift_bridgeObjectRelease();
      type metadata accessor for FormatVariableCollection();
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = MEMORY[0x1E0DEE9E0];
      type metadata accessor for FormatOptionCollection();
      swift_initStackObject();
      v32 = swift_bridgeObjectRetain();
      v33 = sub_1BA6E1E0C(v32, v31);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v99 = v95;
      v34 = swift_bridgeObjectRetain();
      v82[1] = v33;
      v35 = sub_1BA6E42A0(v34);
      sub_1BA6E3FB8(v35);
      v36 = 0;
      v92 = v27 + 32;
      v82[3] = 0xD00000000000003BLL;
      v82[2] = 0x80000001BB9900B0;
      v86 = v27;
      do
      {
        if (v36 >= *(_QWORD *)(v27 + 16))
          __break(1u);
        v40 = (uint64_t *)(v92 + 24 * v36);
        v42 = v40[1];
        v41 = v40[2];
        if (v42)
        {
          v43 = *v40;
          v44 = qword_1ED3BE7F8;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          if (v44 != -1)
            swift_once();
          *(_QWORD *)&v100 = v43;
          *((_QWORD *)&v100 + 1) = v42;
          v45 = sub_1BA6E583C((uint64_t *)&v100);
          v46 = *(_QWORD *)(v45 + 16);
          if (v46)
          {
            v85 = v43;
            v88 = v45;
            v89 = v42;
            v91 = v41;
            v94 = v36;
            v47 = (uint64_t *)(v45 + 64);
            while (1)
            {
              v48 = *(v47 - 1);
              v49 = *v47;
              v50 = *(_BYTE *)(v48 + 32);
              v51 = v50 & 0x3F;
              v52 = (unint64_t)((1 << v50) + 63) >> 6;
              v53 = 8 * v52;
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              isStackAllocationSafe = swift_bridgeObjectRetain();
              if (v51 <= 0xD
                || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
              {
                MEMORY[0x1E0C80A78](isStackAllocationSafe);
                v55 = (char *)v82 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0);
                bzero(v55, v53);
                v56 = v97;
                v57 = sub_1BA6EB5B4((uint64_t)v55, v52, v48, v95);
                swift_bridgeObjectRelease();
                v97 = v56;
                if (v56)
                {
                  v81 = v97;
                  swift_willThrow();

                  __break(1u);
LABEL_51:
                  swift_bridgeObjectRelease();

                  result = MEMORY[0x1BCCE5C38](v55, -1, -1);
                  __break(1u);
                  return result;
                }
              }
              else
              {
                v55 = (char *)swift_slowAlloc();
                bzero(v55, v53);
                v58 = v97;
                v59 = sub_1BA6EB5B4((uint64_t)v55, v52, v48, v95);
                v97 = v58;
                if (v58)
                  goto LABEL_51;
                v57 = v59;
                swift_bridgeObjectRelease();
                MEMORY[0x1BCCE5C38](v55, -1, -1);
              }
              v60 = sub_1BA6EB330(v57, v48);
              swift_release();
              if ((v60 & 1) != 0)
              {
                v61 = sub_1BA6EBD20(v95, v49);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v61 & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  v62 = v91;
                  v63 = *(_QWORD *)(v91 + 16);
                  if (v63)
                  {
                    *(_QWORD *)&v100 = MEMORY[0x1E0DEE9D8];
                    sub_1BA76B828(0, v63, 0);
                    v64 = v100;
                    v65 = v62
                        + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
                    v66 = *(_QWORD *)(v84 + 72);
                    do
                    {
                      v67 = v96;
                      sub_1BA900B30(v65, v96);
                      v68 = swift_allocBox();
                      sub_1BA8569CC(v67, v69);
                      *(_QWORD *)&v100 = v64;
                      v71 = *(_QWORD *)(v64 + 16);
                      v70 = *(_QWORD *)(v64 + 24);
                      if (v71 >= v70 >> 1)
                      {
                        sub_1BA76B828(v70 > 1, v71 + 1, 1);
                        v64 = v100;
                      }
                      *(_QWORD *)(v64 + 16) = v71 + 1;
                      *(_QWORD *)(v64 + 8 * v71 + 32) = v68 | 0x1000000000000000;
                      v65 += v66;
                      --v63;
                    }
                    while (v63);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    v64 = MEMORY[0x1E0DEE9D8];
                  }
                  sub_1BA7082C0(v64);
                  v27 = v86;
                  v36 = v94;
                  goto LABEL_14;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              v47 += 5;
              if (!--v46)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v27 = v86;
                v36 = v94;
                goto LABEL_13;
              }
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_13:
          v37 = v90[7];
          v38 = v90[8];
          __swift_project_boxed_opaque_existential_1(v83, v37);
          *(_QWORD *)&v100 = 0;
          *((_QWORD *)&v100 + 1) = 0xE000000000000000;
          sub_1BB873CB4();
          sub_1BB872AFC(&v102);
          sub_1BB872AFC(v39);
          swift_bridgeObjectRelease();
          (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v38 + 16))(v100, *((_QWORD *)&v100 + 1), v37, v38);
          swift_bridgeObjectRelease();
        }
        else
        {
          v72 = *(_QWORD *)(v41 + 16);
          if (v72)
          {
            v94 = v36;
            *(_QWORD *)&v100 = MEMORY[0x1E0DEE9D8];
            swift_bridgeObjectRetain();
            sub_1BA76B828(0, v72, 0);
            v73 = v100;
            v74 = v41 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
            v75 = *(_QWORD *)(v84 + 72);
            do
            {
              v76 = v96;
              sub_1BA900B30(v74, v96);
              v77 = swift_allocBox();
              sub_1BA8569CC(v76, v78);
              *(_QWORD *)&v100 = v73;
              v80 = *(_QWORD *)(v73 + 16);
              v79 = *(_QWORD *)(v73 + 24);
              if (v80 >= v79 >> 1)
              {
                sub_1BA76B828(v79 > 1, v80 + 1, 1);
                v73 = v100;
              }
              *(_QWORD *)(v73 + 16) = v80 + 1;
              *(_QWORD *)(v73 + 8 * v80 + 32) = v77 | 0x1000000000000000;
              v74 += v75;
              --v72;
            }
            while (v72);
            swift_bridgeObjectRelease();
            v27 = v86;
            v36 = v94;
          }
          else
          {
            v73 = MEMORY[0x1E0DEE9D8];
          }
          sub_1BA7082C0(v73);
        }
LABEL_14:
        ++v36;
      }
      while (v36 != v93);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  return v98;
}

uint64_t sub_1BB51EC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t *a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  int64_t *v28;
  uint64_t result;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  unsigned int v65;
  unint64_t v66;
  size_t v67;
  uint64_t isStackAllocationSafe;
  char *v69;
  int64_t *v70;
  uint64_t v71;
  int64_t *v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD v96[4];
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t *v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;

  v8 = v7;
  v104 = a6;
  v115 = *MEMORY[0x1E0C80C00];
  v100 = type metadata accessor for FormatOption();
  v13 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v110 = (uint64_t)v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a3 + 80);
  v103 = v6;
  v112 = v6[3];
  swift_bridgeObjectRetain();
  v16 = sub_1BA6D3530();
  sub_1BA7082C0(v16);
  v17 = *(_QWORD *)(v15 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  v98 = v13;
  if (v17)
  {
    v107 = a4;
    v108 = a2;
    v109 = v8;
    v111 = a5;
    *(_QWORD *)&v114 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v17, 0);
    v18 = v114;
    v19 = *(unsigned __int8 *)(v13 + 80);
    v106 = v15;
    v20 = v15 + ((v19 + 32) & ~v19);
    v21 = *(_QWORD *)(v13 + 72);
    do
    {
      v22 = v110;
      sub_1BA900B30(v20, v110);
      v23 = swift_allocBox();
      sub_1BA8569CC(v22, v24);
      *(_QWORD *)&v114 = v18;
      v26 = *(_QWORD *)(v18 + 16);
      v25 = *(_QWORD *)(v18 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1BA76B828(v25 > 1, v26 + 1, 1);
        v18 = v114;
      }
      *(_QWORD *)(v18 + 16) = v26 + 1;
      *(_QWORD *)(v18 + 8 * v26 + 32) = v23 | 0x8000000000000004;
      v20 += v21;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a5 = v111;
    a2 = v108;
    v8 = v109;
    a4 = v107;
  }
  sub_1BA7082C0(v18);
  sub_1BA7A9E9C(a4, &v114);
  v113 = v114;
  type metadata accessor for FormatOptionList();
  swift_allocObject();
  swift_retain();
  v27 = sub_1BA7AA0C8((uint64_t *)&v113, a2);
  v28 = (int64_t *)v8;
  if (v8)
    return swift_bridgeObjectRelease();
  v30 = v27[2];
  swift_bridgeObjectRetain();
  swift_release();
  sub_1BA7082C0(v30);
  v31 = a5[2];
  v32 = MEMORY[0x1E0DEE9D8];
  if (v31)
  {
    v111 = 0;
    *(_QWORD *)&v114 = MEMORY[0x1E0DEE9D8];
    sub_1BA76B828(0, v31, 0);
    v32 = v114;
    v33 = (uint64_t)a5 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
    v34 = *(_QWORD *)(v98 + 72);
    do
    {
      v35 = v110;
      sub_1BA900B30(v33, v110);
      v36 = swift_allocBox();
      sub_1BA8569CC(v35, v37);
      *(_QWORD *)&v114 = v32;
      v39 = *(_QWORD *)(v32 + 16);
      v38 = *(_QWORD *)(v32 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_1BA76B828(v38 > 1, v39 + 1, 1);
        v32 = v114;
      }
      *(_QWORD *)(v32 + 16) = v39 + 1;
      *(_QWORD *)(v32 + 8 * v39 + 32) = v36 | 0x3000000000000004;
      v33 += v34;
      --v31;
    }
    while (v31);
    v28 = v111;
  }
  sub_1BA7082C0(v32);
  v40 = v103[15];
  if (v40)
  {
    v105 = *(_QWORD *)(v40 + 16);
    if (v105)
    {
      v41 = v103[7];
      v42 = v103[8];
      v97 = v103 + 4;
      __swift_project_boxed_opaque_existential_1(v103 + 4, v41);
      *(_QWORD *)&v114 = 0;
      *((_QWORD *)&v114 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1BB873CB4();
      sub_1BB872AFC("");
      *(_QWORD *)&v113 = *(_QWORD *)(v40 + 16);
      sub_1BB87420C();
      sub_1BB872AFC(v43);
      swift_bridgeObjectRelease();
      sub_1BB872AFC("tors for selector ");
      (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v42 + 16))(v114, *((_QWORD *)&v114 + 1), v41, v42);
      swift_bridgeObjectRelease();
      type metadata accessor for FormatVariableCollection();
      v44 = swift_allocObject();
      *(_QWORD *)(v44 + 16) = MEMORY[0x1E0DEE9E0];
      type metadata accessor for FormatOptionCollection();
      swift_initStackObject();
      v45 = swift_bridgeObjectRetain();
      v46 = sub_1BA6E1E0C(v45, v44);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v113 = v104;
      v47 = swift_bridgeObjectRetain();
      v96[1] = v46;
      v48 = sub_1BA6E42A0(v47);
      sub_1BA6E3FB8(v48);
      v49 = 0;
      v104 = v40 + 32;
      v96[3] = 0xD000000000000035;
      v96[2] = 0x80000001BB990170;
      v99 = v40;
      do
      {
        if (v49 >= *(_QWORD *)(v40 + 16))
          __break(1u);
        v53 = (uint64_t *)(v104 + 24 * v49);
        v55 = v53[1];
        v54 = v53[2];
        if (v55)
        {
          v56 = *v53;
          v57 = v113;
          v58 = qword_1ED3BE7F8;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          v109 = v57;
          swift_bridgeObjectRetain();
          if (v58 != -1)
            swift_once();
          v106 = v56;
          *(_QWORD *)&v114 = v56;
          *((_QWORD *)&v114 + 1) = v55;
          v59 = sub_1BA6E583C((uint64_t *)&v114);
          v60 = *(_QWORD *)(v59 + 16);
          if (v60)
          {
            v101 = v59;
            v102 = v55;
            v107 = v49;
            v108 = v54;
            v61 = (uint64_t *)(v59 + 64);
            while (1)
            {
              v111 = v28;
              v63 = *(v61 - 1);
              v62 = *v61;
              v64 = *(_BYTE *)(v63 + 32);
              v65 = v64 & 0x3F;
              v66 = (unint64_t)((1 << v64) + 63) >> 6;
              v67 = 8 * v66;
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              isStackAllocationSafe = swift_bridgeObjectRetain();
              if (v65 <= 0xD
                || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
              {
                MEMORY[0x1E0C80A78](isStackAllocationSafe);
                v69 = (char *)v96 - ((v67 + 15) & 0x3FFFFFFFFFFFFFF0);
                bzero(v69, v67);
                v70 = v111;
                v71 = sub_1BA6EB5B4((uint64_t)v69, v66, v63, v109);
                v28 = v70;
                swift_bridgeObjectRelease();
                if (v70)
                {
                  swift_willThrow();

                  __break(1u);
LABEL_57:
                  swift_bridgeObjectRelease();

                  result = MEMORY[0x1BCCE5C38](v69, -1, -1);
                  __break(1u);
                  return result;
                }
              }
              else
              {
                v69 = (char *)swift_slowAlloc();
                bzero(v69, v67);
                v72 = v111;
                v73 = sub_1BA6EB5B4((uint64_t)v69, v66, v63, v109);
                v28 = v72;
                if (v72)
                  goto LABEL_57;
                v71 = v73;
                swift_bridgeObjectRelease();
                MEMORY[0x1BCCE5C38](v69, -1, -1);
              }
              v74 = sub_1BA6EB330(v71, v63);
              swift_release();
              if ((v74 & 1) != 0)
              {
                v75 = sub_1BA6EBD20(v109, v62);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v75 & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  v76 = v108;
                  v77 = *(_QWORD *)(v108 + 16);
                  if (v77)
                  {
                    *(_QWORD *)&v114 = MEMORY[0x1E0DEE9D8];
                    sub_1BA76B828(0, v77, 0);
                    v78 = v114;
                    v79 = v76
                        + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
                    v80 = *(_QWORD *)(v98 + 72);
                    do
                    {
                      v81 = v110;
                      sub_1BA900B30(v79, v110);
                      v82 = swift_allocBox();
                      sub_1BA8569CC(v81, v83);
                      *(_QWORD *)&v114 = v78;
                      v85 = *(_QWORD *)(v78 + 16);
                      v84 = *(_QWORD *)(v78 + 24);
                      if (v85 >= v84 >> 1)
                      {
                        sub_1BA76B828(v84 > 1, v85 + 1, 1);
                        v78 = v114;
                      }
                      *(_QWORD *)(v78 + 16) = v85 + 1;
                      *(_QWORD *)(v78 + 8 * v85 + 32) = v82 | 0x1000000000000000;
                      v79 += v80;
                      --v77;
                    }
                    while (v77);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    v78 = MEMORY[0x1E0DEE9D8];
                  }
                  sub_1BA7082C0(v78);
                  v40 = v99;
                  v49 = v107;
                  goto LABEL_20;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              v61 += 5;
              if (!--v60)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v40 = v99;
                v49 = v107;
                goto LABEL_19;
              }
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_19:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v50 = v103[7];
          v51 = v103[8];
          __swift_project_boxed_opaque_existential_1(v97, v50);
          *(_QWORD *)&v114 = 0;
          *((_QWORD *)&v114 + 1) = 0xE000000000000000;
          sub_1BB873CB4();
          sub_1BB872AFC(&v116);
          sub_1BB872AFC(v52);
          swift_bridgeObjectRelease();
          (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v51 + 16))(v114, *((_QWORD *)&v114 + 1), v50, v51);
          swift_bridgeObjectRelease();
        }
        else
        {
          v86 = *(_QWORD *)(v54 + 16);
          if (v86)
          {
            v107 = v49;
            *(_QWORD *)&v114 = MEMORY[0x1E0DEE9D8];
            swift_bridgeObjectRetain();
            sub_1BA76B828(0, v86, 0);
            v87 = v114;
            v88 = *(unsigned __int8 *)(v98 + 80);
            v108 = v54;
            v89 = v54 + ((v88 + 32) & ~v88);
            v90 = *(_QWORD *)(v98 + 72);
            do
            {
              v91 = v110;
              sub_1BA900B30(v89, v110);
              v92 = swift_allocBox();
              sub_1BA8569CC(v91, v93);
              *(_QWORD *)&v114 = v87;
              v95 = *(_QWORD *)(v87 + 16);
              v94 = *(_QWORD *)(v87 + 24);
              if (v95 >= v94 >> 1)
              {
                sub_1BA76B828(v94 > 1, v95 + 1, 1);
                v87 = v114;
              }
              *(_QWORD *)(v87 + 16) = v95 + 1;
              *(_QWORD *)(v87 + 8 * v95 + 32) = v92 | 0x1000000000000000;
              v89 += v90;
              --v86;
            }
            while (v86);
            swift_bridgeObjectRelease();
            v40 = v99;
            v49 = v107;
          }
          else
          {
            v87 = MEMORY[0x1E0DEE9D8];
          }
          sub_1BA7082C0(v87);
        }
LABEL_20:
        ++v49;
      }
      while (v49 != v105);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  return v112;
}

uint64_t sub_1BB51F6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  unint64_t v31;
  size_t v32;
  uint64_t isStackAllocationSafe;
  char *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v69 = v3[2];
  swift_bridgeObjectRetain();
  v5 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v5);
  swift_beginAccess();
  v6 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v6);
  v7 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v7);
  v8 = sub_1BA7718D4(a3);
  sub_1BA6E3FB8(v8);
  v58 = v3;
  v9 = v3[14];
  if (!v9)
    return v69;
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
    return v69;
  v11 = v58[7];
  v12 = v58[8];
  v57 = v58 + 4;
  __swift_project_boxed_opaque_existential_1(v58 + 4, v11);
  v67 = 0;
  v68 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1BB873CB4();
  sub_1BB872AFC("");
  v66 = *(_QWORD *)(v9 + 16);
  sub_1BB87420C();
  sub_1BB872AFC(v13);
  swift_bridgeObjectRelease();
  sub_1BB872AFC("options for selector ");
  (*(void (**)(_QWORD, unint64_t, uint64_t, uint64_t))(v12 + 16))(0, 0xE000000000000000, v11, v12);
  swift_bridgeObjectRelease();
  v14 = 0;
  v65 = 0;
  v63 = v9 + 32;
  v55 = 0x80000001BB9901E0;
  v56 = 0xD000000000000037;
  v54 = v9;
  v53 = v10;
  while (2)
  {
    if (v14 >= *(_QWORD *)(v9 + 16))
      __break(1u);
    v18 = v63 + 24 * v14;
    v20 = *(_QWORD *)(v18 + 8);
    v19 = *(_QWORD *)(v18 + 16);
    if (!v20)
    {
      v46 = *(_QWORD *)(v19 + 16);
      if (v46)
      {
        swift_bridgeObjectRetain();
        v47 = (uint64_t *)(v19 + 40);
        do
        {
          v48 = *(v47 - 1);
          v49 = *v47;
          swift_bridgeObjectRetain();
          sub_1BA6EE5AC((uint64_t *)&v67, v48, v49);
          swift_bridgeObjectRelease();
          v47 += 2;
          --v46;
        }
        while (v46);
        goto LABEL_6;
      }
      goto LABEL_7;
    }
    v21 = *(_QWORD **)v18;
    v22 = v69;
    v23 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v64 = v22;
    swift_bridgeObjectRetain();
    if (v23 != -1)
      swift_once();
    v67 = v21;
    v68 = v20;
    v24 = sub_1BA6E583C((uint64_t *)&v67);
    v25 = *(_QWORD *)(v24 + 16);
    if (!v25)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v58[7];
      v16 = v58[8];
      __swift_project_boxed_opaque_existential_1(v57, v15);
      v67 = 0;
      v68 = 0xE000000000000000;
      sub_1BB873CB4();
      sub_1BB872AFC(v67);
      sub_1BB872AFC(v17);
      swift_bridgeObjectRelease();
      (*(void (**)(_QWORD *, unint64_t, uint64_t, uint64_t))(v16 + 16))(v67, v68, v15, v16);
      goto LABEL_6;
    }
    v60 = v20;
    v61 = v14;
    v62 = v19;
    v59 = v24;
    v26 = (uint64_t *)(v24 + 64);
    while (1)
    {
      v27 = *(v26 - 1);
      v28 = *v26;
      v29 = *(_BYTE *)(v27 + 32);
      v30 = v29 & 0x3F;
      v31 = (unint64_t)((1 << v29) + 63) >> 6;
      v32 = 8 * v31;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      isStackAllocationSafe = swift_bridgeObjectRetain();
      if (v30 <= 0xD
        || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
      {
        MEMORY[0x1E0C80A78](isStackAllocationSafe);
        v34 = (char *)&v52 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0);
        bzero(v34, v32);
        v35 = v31;
        v36 = v65;
        v37 = sub_1BA6EB5B4((uint64_t)v34, v35, v27, v64);
        swift_bridgeObjectRelease();
        v65 = v36;
        if (v36)
        {
          v51 = v65;
          swift_willThrow();

          __break(1u);
LABEL_37:

          result = MEMORY[0x1BCCE5C38](v34, -1, -1);
          __break(1u);
          return result;
        }
      }
      else
      {
        v34 = (char *)swift_slowAlloc();
        bzero(v34, v32);
        v38 = v31;
        v39 = v65;
        v37 = sub_1BA6EB5B4((uint64_t)v34, v38, v27, v64);
        swift_bridgeObjectRelease();
        v65 = v39;
        if (v39)
          goto LABEL_37;
        MEMORY[0x1BCCE5C38](v34, -1, -1);
      }
      v40 = sub_1BA6EB330(v37, v27);
      swift_release();
      if ((v40 & 1) != 0)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_15:
      v26 += 5;
      if (!--v25)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = v54;
        v10 = v53;
        v14 = v61;
        goto LABEL_5;
      }
    }
    v41 = sub_1BA6EBD20(v64, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v41 & 1) == 0)
      goto LABEL_15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v42 = *(_QWORD *)(v62 + 16);
    if (!v42)
    {
      swift_bridgeObjectRelease();
      v9 = v54;
      v10 = v53;
      v14 = v61;
      goto LABEL_7;
    }
    v43 = (uint64_t *)(v62 + 40);
    v9 = v54;
    v10 = v53;
    v14 = v61;
    do
    {
      v44 = *(v43 - 1);
      v45 = *v43;
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC((uint64_t *)&v67, v44, v45);
      swift_bridgeObjectRelease();
      v43 += 2;
      --v42;
    }
    while (v42);
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    if (++v14 != v10)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  return v69;
}

uint64_t FormatNodeState.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  return v0;
}

uint64_t method lookup function for FormatNodeState()
{
  return swift_lookUpClassMethod();
}

uint64_t FeedServiceImpressionProcessor.__allocating_init(cursorContainerBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t FeedServiceImpressionProcessor.init(cursorContainerBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t FeedServiceImpressionProcessor.blueprintImpressionManager(_:startedImpression:)(uint64_t a1, uint64_t a2)
{
  return sub_1BB51FEB8(a2, (uint64_t (*)(_QWORD, uint64_t *, double))MEMORY[0x1E0DBA170], (void (*)(void))MEMORY[0x1E0DBA160], MEMORY[0x1E0DBA168], 1);
}

uint64_t FeedServiceImpressionProcessor.blueprintImpressionManager(_:createdImpression:)(uint64_t a1, uint64_t a2)
{
  return sub_1BB51FEB8(a2, (uint64_t (*)(_QWORD, uint64_t *, double))MEMORY[0x1E0DB8880], (void (*)(void))MEMORY[0x1E0DB8850], MEMORY[0x1E0DB8868], 0);
}

uint64_t FeedServiceImpressionProcessor.blueprintImpressionManager(_:cancelledImpression:)(uint64_t a1, uint64_t a2)
{
  return sub_1BB51FEB8(a2, (uint64_t (*)(_QWORD, uint64_t *, double))MEMORY[0x1E0DB8880], (void (*)(void))MEMORY[0x1E0DB8850], MEMORY[0x1E0DB8868], 0);
}

uint64_t FeedServiceImpressionProcessor.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t FeedServiceImpressionProcessor.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB51FE38(uint64_t a1, uint64_t a2)
{
  return sub_1BB51FEB8(a2, (uint64_t (*)(_QWORD, uint64_t *, double))MEMORY[0x1E0DBA170], (void (*)(void))MEMORY[0x1E0DBA160], MEMORY[0x1E0DBA168], 1);
}

uint64_t sub_1BB51FE78(uint64_t a1, uint64_t a2)
{
  return sub_1BB51FEB8(a2, (uint64_t (*)(_QWORD, uint64_t *, double))MEMORY[0x1E0DB8880], (void (*)(void))MEMORY[0x1E0DB8850], MEMORY[0x1E0DB8868], 0);
}

uint64_t sub_1BB51FEB8(uint64_t a1, uint64_t (*a2)(_QWORD, uint64_t *, double), void (*a3)(void), void (*a4)(uint64_t), int a5)
{
  uint64_t *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t (*v27)(_BYTE *);
  _BYTE *v28;
  uint64_t v29;
  _BYTE v30[12];
  int v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD, uint64_t *, double);
  void (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v31 = a5;
  v36 = a4;
  v39 = a2;
  v40 = a3;
  v38 = a1;
  v41 = *v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = swift_getAssociatedConformanceWitness();
  v42 = AssociatedTypeWitness;
  v43 = v7;
  v44 = AssociatedConformanceWitness;
  v45 = v9;
  v10 = sub_1BB871680();
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x1E0C80A78](v10);
  v32 = &v30[-v11];
  v37 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v37);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = &v30[-v16];
  v18 = sub_1BB86F778();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = &v30[-v21];
  v42 = AssociatedTypeWitness;
  v43 = v7;
  v44 = AssociatedConformanceWitness;
  v45 = v9;
  v23 = v39(0, &v42, v20);
  v40();
  sub_1BB86F76C();
  v24 = v18;
  v25 = v41;
  (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v22, v24);
  (*(void (**)(uint64_t))(*(_QWORD *)(v25 + 112) + 8))(v7);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v7);
  LODWORD(v19) = swift_getEnumCaseMultiPayload();
  result = sub_1BA6DB314((uint64_t)v13);
  if (!(_DWORD)v19)
  {
    v27 = *(uint64_t (**)(_BYTE *))(v35 + 16);
    v28 = v32;
    v36(v23);
    v29 = v27(v28);
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v33 + 8))(v28, v34);
    if ((~v29 & 0xF000000000000007) != 0)
    {
      sub_1BAAD66C0(v29);
      swift_retain();
      FeedServiceState.markGapOnScreen(_:)(v31 & 1);
      swift_release();
      return sub_1BA62ECD4(v29);
    }
  }
  return result;
}

uint64_t sub_1BB520190(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_1BB520198()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for FeedServiceImpressionProcessor()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t method lookup function for FeedServiceImpressionProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedServiceImpressionProcessor.__allocating_init(cursorContainerBlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t FeedGroupEmitterRuleOutput.rule.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C010C(v1, a1);
}

uint64_t FeedGroupEmitterRuleOutput.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA5F1EC8(v2, v3, v4);
}

uint64_t assignWithCopy for FeedGroupEmitterRuleOutput(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, a2);
  v4 = v2[5];
  v5 = v2[6];
  LOBYTE(v2) = *((_BYTE *)v2 + 56);
  sub_1BA5F1EC8(v4, v5, v2);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  v8 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = (_BYTE)v2;
  sub_1BA5F1DE8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FeedGroupEmitterRuleOutput(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v5;
  sub_1BA5F1DE8(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupEmitterRuleOutput(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupEmitterRuleOutput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupEmitterRuleOutput()
{
  return &type metadata for FeedGroupEmitterRuleOutput;
}

uint64_t initializeWithCopy for FeedGroupEmitterRuleOutputDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedGroupEmitterRuleOutputDescription(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedGroupEmitterRuleOutputDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedGroupEmitterRuleOutputDescription()
{
  return &type metadata for FeedGroupEmitterRuleOutputDescription;
}

uint64_t sub_1BB52048C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1BB5209A0(0, &qword_1ED3AB610, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB520918();
  sub_1BB8746C8();
  v11[15] = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v11[14] = *(_BYTE *)(v3 + 16);
    v11[13] = 1;
    sub_1BB5209FC();
    sub_1BB8741AC();
    v11[12] = 2;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB5205E8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x746C75736572;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x7470697263736564;
}

uint64_t sub_1BB52064C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB520BE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB520670()
{
  sub_1BB520918();
  return sub_1BB874710();
}

uint64_t sub_1BB520698()
{
  sub_1BB520918();
  return sub_1BB87471C();
}

double sub_1BB5206C0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB520718(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB520704(_QWORD *a1)
{
  return sub_1BB52048C(a1);
}

uint64_t sub_1BB520718@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  int v20;
  char v21;
  char v22;
  unsigned __int8 v23;
  char v24;

  sub_1BB5209A0(0, &qword_1EF2C63B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB520918();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v22 = 1;
  sub_1BB52095C();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v20 = v23;
  v21 = 2;
  v13 = sub_1BB874098();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17 = v13;
  v16(v9, v6);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = v15;
  return result;
}

unint64_t sub_1BB520918()
{
  unint64_t result;

  result = qword_1ED3A51F8;
  if (!qword_1ED3A51F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9221AC, &type metadata for FeedGroupEmitterRuleOutputDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A51F8);
  }
  return result;
}

unint64_t sub_1BB52095C()
{
  unint64_t result;

  result = qword_1EF2C63C0;
  if (!qword_1EF2C63C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87F0EC, &type metadata for FeedGroupEmitterRuleResult.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF2C63C0);
  }
  return result;
}

void sub_1BB5209A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB520918();
    v7 = a3(a1, &type metadata for FeedGroupEmitterRuleOutputDescription.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB5209FC()
{
  unint64_t result;

  result = qword_1ED3A5148;
  if (!qword_1ED3A5148)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87F0C4, &type metadata for FeedGroupEmitterRuleResult.Kind);
    atomic_store(result, (unint64_t *)&qword_1ED3A5148);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedGroupEmitterRuleOutputDescription.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB520A8C + 4 * byte_1BB922035[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB520AC0 + 4 * asc_1BB922030[v4]))();
}

uint64_t sub_1BB520AC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB520AC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB520AD0);
  return result;
}

uint64_t sub_1BB520ADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB520AE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB520AE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB520AF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupEmitterRuleOutputDescription.CodingKeys()
{
  return &type metadata for FeedGroupEmitterRuleOutputDescription.CodingKeys;
}

unint64_t sub_1BB520B10()
{
  unint64_t result;

  result = qword_1EF2C63C8;
  if (!qword_1EF2C63C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922184, &type metadata for FeedGroupEmitterRuleOutputDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C63C8);
  }
  return result;
}

unint64_t sub_1BB520B58()
{
  unint64_t result;

  result = qword_1ED3A5208;
  if (!qword_1ED3A5208)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9220F4, &type metadata for FeedGroupEmitterRuleOutputDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A5208);
  }
  return result;
}

unint64_t sub_1BB520BA0()
{
  unint64_t result;

  result = qword_1ED3A5200;
  if (!qword_1ED3A5200)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92211C, &type metadata for FeedGroupEmitterRuleOutputDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A5200);
  }
  return result;
}

uint64_t sub_1BB520BE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB990260)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t FormatVideoNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatVideoNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t FormatVideoNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 96);
  return swift_retain();
}

uint64_t FormatVideoNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

unint64_t FormatVideoNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 112);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatVideoNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 120);
}

void FormatVideoNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 136);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 128);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatVideoNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatVideoNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatVideoNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB520E28(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB520E60 + 4 * byte_1BB922200[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BB520E60()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB520E7C()
{
  return 0x6E65644965646F6ELL;
}

uint64_t sub_1BB520EA0()
{
  return 0x656D617266;
}

uint64_t sub_1BB520EB4()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB520ECC()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB520EE0()
{
  return 0x696C696269736976;
}

unint64_t sub_1BB520EF8()
{
  return 0xD000000000000018;
}

uint64_t sub_1BB520F74()
{
  unsigned __int8 *v0;

  return sub_1BB520E28(*v0);
}

uint64_t sub_1BB520F7C()
{
  sub_1BB521460();
  return sub_1BB874710();
}

uint64_t sub_1BB520FA4()
{
  sub_1BB521460();
  return sub_1BB87471C();
}

uint64_t FormatVideoNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 112));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatVideoNodeLayoutAttributes.__deallocating_deinit()
{
  FormatVideoNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatVideoNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  char v11;
  _OWORD v13[2];
  char v14;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C63D0, (uint64_t (*)(void))sub_1BB521460, (uint64_t)&type metadata for FormatVideoNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB521460();
  sub_1BB8746C8();
  LOBYTE(v13[0]) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1BB87417C();
    LOBYTE(v13[0]) = 2;
    sub_1BB87417C();
    v10 = *(_OWORD *)(v3 + 80);
    v13[0] = *(_OWORD *)(v3 + 64);
    v13[1] = v10;
    v14 = 3;
    type metadata accessor for CGRect(0);
    sub_1BA50AD30(&qword_1EF2A9A18, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
    sub_1BB8741AC();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 96);
    v14 = 4;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v13[0]) = 5;
    sub_1BB8741A0();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 112);
    v14 = 6;
    sub_1BA84B088();
    sub_1BB8741AC();
    LOBYTE(v13[0]) = 7;
    sub_1BB874188();
    v11 = *(_BYTE *)(v3 + 136);
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 128);
    BYTE8(v13[0]) = v11;
    v14 = 8;
    sub_1BA5FB410();
    sub_1BB87414C();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 144);
    v14 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 152);
    v14 = 10;
    type metadata accessor for FormatVideoNodeStyle();
    sub_1BA50AD30(&qword_1EF2B5A68, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeStyle, (uint64_t)&protocol conformance descriptor for FormatVideoNodeStyle);
    sub_1BB87414C();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 160);
    v14 = 11;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA9952AC(&qword_1EF2AC0D8, (uint64_t (*)(void))sub_1BA994B84, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB521460()
{
  unint64_t result;

  result = qword_1EF2C63D8;
  if (!qword_1EF2C63D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9224B4, &type metadata for FormatVideoNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C63D8);
  }
  return result;
}

uint64_t FormatVideoNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatVideoNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatVideoNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  char v21;

  sub_1BA4CDF6C(0, &qword_1EF2C63E0, (uint64_t (*)(void))sub_1BB521460, (uint64_t)&type metadata for FormatVideoNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v17 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB521460();
  v16 = v6;
  v7 = v18;
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
    v14 = (uint64_t)a1;
  }
  else
  {
    v18 = a1;
    LOBYTE(v19) = 0;
    *(_QWORD *)(v1 + 16) = sub_1BB874098();
    *(_QWORD *)(v1 + 24) = v8;
    LOBYTE(v19) = 1;
    *(_QWORD *)(v1 + 32) = sub_1BB874098();
    *(_QWORD *)(v1 + 40) = v9;
    LOBYTE(v19) = 2;
    *(_QWORD *)(v1 + 48) = sub_1BB874098();
    *(_QWORD *)(v1 + 56) = v10;
    type metadata accessor for CGRect(0);
    v21 = 3;
    sub_1BA50AD30((unint64_t *)&unk_1ED3B9910, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    v15 = 0;
    sub_1BB8740D4();
    v11 = v20;
    *(_OWORD *)(v1 + 64) = v19;
    *(_OWORD *)(v1 + 80) = v11;
    v21 = 4;
    sub_1BA995268();
    sub_1BB874068();
    *(_QWORD *)(v1 + 96) = v19;
    LOBYTE(v19) = 5;
    *(_QWORD *)(v1 + 104) = sub_1BB8740C8();
    v21 = 6;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 112) = v19;
    LOBYTE(v19) = 7;
    *(_BYTE *)(v1 + 120) = sub_1BB8740A4() & 1;
    v21 = 8;
    sub_1BA650BA0();
    sub_1BB874068();
    v13 = BYTE8(v19);
    *(_QWORD *)(v1 + 128) = v19;
    *(_BYTE *)(v1 + 136) = v13;
    type metadata accessor for FormatContextLayoutOptions();
    v21 = 9;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 144) = v19;
    type metadata accessor for FormatVideoNodeStyle();
    v21 = 10;
    sub_1BA50AD30(&qword_1ED3A6890, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeStyle, (uint64_t)&protocol conformance descriptor for FormatVideoNodeStyle);
    sub_1BB874068();
    *(_QWORD *)(v1 + 152) = v19;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v21 = 11;
    sub_1BA9952AC(&qword_1EF2AC100, (uint64_t (*)(void))sub_1BA995330, MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v17);
    v14 = (uint64_t)v18;
    *(_QWORD *)(v1 + 160) = v19;
  }
  __swift_destroy_boxed_opaque_existential_1(v14);
  return v1;
}

uint64_t sub_1BB521AEC(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C63E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatVideoNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatVideoNodeLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t sub_1BB521B38(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C30A8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatVideoNodeLayoutAttributes);
}

uint64_t sub_1BB521B64(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C3100, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatVideoNodeLayoutAttributes);
}

uint64_t sub_1BB521B90(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C63F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatVideoNodeLayoutAttributes);
}

uint64_t sub_1BB521BBC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatVideoNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB521C10(_QWORD *a1)
{
  return FormatVideoNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BB521C30(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1EF2C3150, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatVideoNodeLayoutAttributes);
  return sub_1BB86D96C();
}

uint64_t method lookup function for FormatVideoNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatVideoNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t storeEnumTagSinglePayload for FormatVideoNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BB521D20 + 4 * byte_1BB922211[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BB521D54 + 4 * byte_1BB92220C[v4]))();
}

uint64_t sub_1BB521D54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB521D5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB521D64);
  return result;
}

uint64_t sub_1BB521D70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB521D78);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BB521D7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB521D84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatVideoNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB521DA4()
{
  unint64_t result;

  result = qword_1EF2C64F8;
  if (!qword_1EF2C64F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92248C, &type metadata for FormatVideoNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C64F8);
  }
  return result;
}

unint64_t sub_1BB521DEC()
{
  unint64_t result;

  result = qword_1EF2C6500;
  if (!qword_1EF2C6500)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9223FC, &type metadata for FormatVideoNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6500);
  }
  return result;
}

unint64_t sub_1BB521E34()
{
  unint64_t result;

  result = qword_1EF2C6508;
  if (!qword_1EF2C6508)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922424, &type metadata for FormatVideoNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6508);
  }
  return result;
}

unint64_t UIAccessibilityContrast.isDarkerSystemColorsEnabled.getter(unint64_t result)
{
  if (result >= 2)
    return UIAccessibilityDarkerSystemColorsEnabled();
  return result;
}

uint64_t UIAccessibilityContrast.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 1751607656;
  v2 = 0x6E776F6E6B6E75;
  if (!a1)
    v2 = 0x6C616D726F6ELL;
  if (a1 != 1)
    v1 = v2;
  if (a1 == -1)
    return 0x6669636570736E75;
  else
    return v1;
}

uint64_t sub_1BB521F14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = 1751607656;
  v3 = 0x6E776F6E6B6E75;
  if (!*v0)
    v3 = 0x6C616D726F6ELL;
  if (v1 != 1)
    v2 = v3;
  if (v1 == -1)
    return 0x6669636570736E75;
  else
    return v2;
}

uint64_t sub_1BB521FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[8];

  v3 = sub_1BB5256E4(a1, a2, (uint64_t)v5, (uint64_t (*)(uint64_t, __int128 *))sub_1BA91206C);
  sub_1BA8DAD20(a2);
  return v3;
}

void static FormatColor.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1BB522054@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  char v4;

  if (a1 >> 60)
  {
    v4 = 0;
  }
  else
  {
    if (*(_QWORD *)(v1 + 16) != *(_QWORD *)(a1 + 16) || *(_QWORD *)(v1 + 24) != *(_QWORD *)(a1 + 24))
      return sub_1BB874398();
    v4 = 1;
  }
  return v4 & 1;
}

_QWORD *sub_1BB522954(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _QWORD *v13;
  _OWORD v15[2];
  uint64_t v16;

  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  if ((~*a2 & 0xF000000000000007) != 0)
    __asm { BR              X11 }
  sub_1BA8EDAAC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  v9 = (_QWORD *)(v8 + v7);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v9);
  v10 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  sub_1BAF89090(0x726F6C6F43, 0xE500000000000000, 0, 0, v8, v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v11 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(v11 + 48) = v16;
  v12 = v15[1];
  *(_OWORD *)(v11 + 16) = v15[0];
  *(_OWORD *)(v11 + 32) = v12;
  v13 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA67D978(0, &qword_1EF2ABC80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayDestroy();
  return v13;
}

void sub_1BB525134()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB525170@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_retain();
}

uint64_t sub_1BB525190()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = swift_allocObject();
  swift_retain();
  swift_retain();
  sub_1BB525134();
  sub_1BB525134();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v3;
  swift_release();
  result = swift_release();
  *v0 = v1 | 0x3000000000000000;
  return result;
}

uint64_t sub_1BB525220@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(v6 + 32) = v4;
  *(_BYTE *)(v6 + 40) = v5;
  *v1 = v6 | 0x7000000000000000;
  return sub_1BA745F88(v2, v3, v4, v5);
}

uint64_t sub_1BB52527C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  *v1 = v4 | 0x4000000000000000;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB5252E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v8;
  uint64_t v10;
  _QWORD v11[3];
  _QWORD v12[3];
  uint64_t v13;

  v12[1] = a1;
  v12[2] = a2;
  v13 = a3;
  v11[1] = a4;
  v11[2] = a5;
  v12[0] = a6;
  v10 = a4;
  v11[0] = a1;
  if ((static FormatColor.== infix(_:_:)(v11, &v10) & 1) != 0 && (sub_1BA8884D4(a2, a5) & 1) != 0)
    v8 = static FormatColor.== infix(_:_:)(&v13, v12);
  else
    v8 = 0;
  return v8 & 1;
}

uint64_t static FormatColor.system(_:alpha:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  char v7;
  uint64_t result;

  v7 = *a1;
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v7;
  *(_QWORD *)(result + 24) = a2;
  *(_BYTE *)(result + 32) = a3 & 1;
  *a4 = result | 0x1000000000000000;
  return result;
}

uint64_t static FormatColor.fixed(_:alpha:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  char v7;
  uint64_t result;

  v7 = *a1;
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v7;
  *(_QWORD *)(result + 24) = a2;
  *(_BYTE *)(result + 32) = a3 & 1;
  *a4 = result | 0x2000000000000000;
  return result;
}

id sub_1BB52541C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  FormatColor.color.getter();
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithUserInterfaceStyle_, a1);
  v5 = objc_msgSend(v3, sel_resolvedColorWithTraitCollection_, v4);

  return v5;
}

BOOL sub_1BB5254B0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(void))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _BOOL8 result;

  v12 = a7();
  v14 = v13;
  if (v12 == a7() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    if ((a3 & 1) == 0)
      return (a6 & 1) == 0 && *(double *)&a2 == *(double *)&a5;
  }
  else
  {
    v17 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v17 & 1) == 0)
      return result;
    if ((a3 & 1) == 0)
      return (a6 & 1) == 0 && *(double *)&a2 == *(double *)&a5;
  }
  return (a6 & 1) != 0;
}

void sub_1BB5255A0()
{
  sub_1BB525134();
  sub_1BB525134();
}

uint64_t sub_1BB5255F0()
{
  return swift_deallocObject();
}

unint64_t sub_1BB525600(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA7FDD98();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB525624()
{
  unint64_t result;

  result = qword_1ED3D0188;
  if (!qword_1ED3D0188)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColor, &type metadata for FormatColor);
    atomic_store(result, (unint64_t *)&qword_1ED3D0188);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatColor()
{
  return &type metadata for FormatColor;
}

uint64_t sub_1BB525684()
{
  uint64_t v0;

  sub_1BA6F3F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1BB5256B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB5256E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, __int128 *))
{
  int64_t v4;
  uint64_t v5;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v15;
  ValueMetadata *v16;
  _UNKNOWN **v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A388(0, v4, 0);
    v5 = v18;
    v9 = (unint64_t *)(a1 + 32);
    do
    {
      v10 = *v9++;
      *(_QWORD *)&v15 = v10;
      sub_1BA74444C(v10);
      v11 = a4(a2, &v15);
      sub_1BA74447C(v10);
      v18 = v5;
      v13 = *(_QWORD *)(v5 + 16);
      v12 = *(_QWORD *)(v5 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BAC7A388(v12 > 1, v13 + 1, 1);
        v5 = v18;
      }
      v17 = &off_1E7335C38;
      v16 = &type metadata for FormatInspection;
      *(_QWORD *)&v15 = v11;
      *(_QWORD *)(v5 + 16) = v13 + 1;
      sub_1BA4CECCC(&v15, v5 + 40 * v13 + 32);
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t FeedEngagementBanner.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedEngagementBanner.debugTitle.getter()
{
  return 0;
}

uint64_t FeedEngagementBanner.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedEngagementBanner.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedEngagementBanner.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedEngagementBanner.engagementBanner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedEngagementBanner() + 20);
  v4 = sub_1BB86EDAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedEngagementBanner.traits.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedEngagementBanner();
  *a1 = *(_QWORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t FeedEngagementBanner.layoutDirection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for FeedEngagementBanner();
  v4 = (uint64_t *)(v1 + *(int *)(result + 28));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t FeedEngagementBanner.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedEngagementBanner() + 32));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1BA75A650(v4, v5);
}

uint64_t FeedEngagementBanner.init(identifier:engagementBanner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  int *v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v8 = (int *)type metadata accessor for FeedEngagementBanner();
  *(_QWORD *)((char *)a4 + v8[6]) = 0x80000;
  v9 = (char *)a4 + v8[7];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  *(_OWORD *)((char *)a4 + v8[8]) = xmmword_1BB8E2850;
  *a4 = a1;
  a4[1] = a2;
  v10 = (char *)a4 + v8[5];
  v11 = sub_1BB86EDAC();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a3, v11);
}

uint64_t sub_1BB5259E0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(result + 24));
  return result;
}

uint64_t sub_1BB5259F0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v2 + *(int *)(result + 28));
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 8);
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = (_BYTE)v3;
  return result;
}

uint64_t FeedEngagementBanner.cacheIdentifier.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD v10[2];

  v1 = sub_1BB86EDB8();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D59588];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0[1];
  v10[0] = *v0;
  v10[1] = v6;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v7);
  type metadata accessor for FeedEngagementBanner();
  sub_1BB86ED94();
  sub_1BA4A2870((unint64_t *)&unk_1ED39EE40, v2, MEMORY[0x1E0D59598]);
  sub_1BB87420C();
  sub_1BB872AFC(v8);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return v10[0];
}

uint64_t FeedEngagementBanner.hashValue.getter()
{
  sub_1BB8745CC();
  type metadata accessor for FeedEngagementBanner();
  sub_1BA4A2870(&qword_1EF2C6510, (uint64_t (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t)&protocol conformance descriptor for FeedEngagementBanner);
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB525B74()
{
  sub_1BA4A2870(&qword_1EF2C6520, (uint64_t (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t)&protocol conformance descriptor for FeedEngagementBanner);
  return sub_1BB86EC50();
}

uint64_t _s8NewsFeed0B16EngagementBannerV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v11;
  char v12;
  uint64_t v14;

  v4 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BAB5F4E8((uint64_t)a1, (uint64_t)&v14 - v8);
    sub_1BAB5F4E8((uint64_t)a2, (uint64_t)v6);
  }
  else
  {
    v11 = sub_1BB874398();
    sub_1BAB5F4E8((uint64_t)a1, (uint64_t)v9);
    sub_1BAB5F4E8((uint64_t)a2, (uint64_t)v6);
    v12 = 0;
    if ((v11 & 1) == 0)
      goto LABEL_9;
  }
  v12 = MEMORY[0x1BCCDF6A4](&v9[*(int *)(v4 + 20)], &v6[*(int *)(v4 + 20)]);
LABEL_9:
  sub_1BB526380((uint64_t)v6);
  sub_1BB526380((uint64_t)v9);
  return v12 & 1;
}

uint64_t sub_1BB525CD4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1ED39F658, (uint64_t (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t)&protocol conformance descriptor for FeedEngagementBanner);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BB525D10()
{
  return sub_1BA4A2870(&qword_1EF2C6510, (uint64_t (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t)&protocol conformance descriptor for FeedEngagementBanner);
}

uint64_t sub_1BB525D3C()
{
  return sub_1BA4A2870(&qword_1ED39F658, (uint64_t (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t)&protocol conformance descriptor for FeedEngagementBanner);
}

uint64_t sub_1BB525D68()
{
  return sub_1BA4A2870(&qword_1EF2C6518, (uint64_t (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t)&protocol conformance descriptor for FeedEngagementBanner);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedEngagementBanner(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86EDAC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    if (v19 >= 0x11)
    {
      *v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
  }
  return v4;
}

unint64_t destroy for FeedEngagementBanner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86EDAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 32) + 8);
  if (result >= 0x11)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *initializeWithCopy for FeedEngagementBanner(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86EDAC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = a3[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  if (v18 >= 0x11)
  {
    *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  return a1;
}

_QWORD *assignWithCopy for FeedEngagementBanner(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86EDAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[8];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v13;
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = *(_QWORD *)((char *)a1 + v14 + 8);
  v18 = v16[1];
  if (v17 >= 0x11)
  {
    if (v18 >= 0x11)
    {
      *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)v15);
    goto LABEL_6;
  }
  if (v18 < 0x11)
  {
LABEL_6:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    return a1;
  }
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *initializeWithTake for FeedEngagementBanner(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86EDAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for FeedEngagementBanner(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86EDAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  if (*(_QWORD *)((char *)a1 + v14 + 8) >= 0x11uLL)
  {
    v17 = v16[1];
    if (v17 >= 0x11)
    {
      *v15 = *v16;
      v15[1] = v17;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)v15);
  }
  *(_OWORD *)v15 = *(_OWORD *)v16;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedEngagementBanner()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB526284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86EDAC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FeedEngagementBanner()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB52630C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86EDAC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB526380(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedEngagementBanner();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL FeedPartOfDay.isDay.getter()
{
  _BYTE *v0;

  return (*v0 & 1) == 0;
}

uint64_t FeedPartOfDay.isNight.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t static FeedPartOfDay.partOfDay(for:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB86CC28();
  *a1 = (result & 1) == 0;
  return result;
}

NewsFeed::FeedPartOfDay_optional __swiftcall FeedPartOfDay.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FeedPartOfDay_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t FeedPartOfDay.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x746867696ELL;
  else
    return 7954788;
}

uint64_t sub_1BB526498(char *a1, char *a2)
{
  return sub_1BB804798(*a1, *a2);
}

unint64_t sub_1BB5264A8()
{
  unint64_t result;

  result = qword_1EF2C6528;
  if (!qword_1EF2C6528)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPartOfDay, &type metadata for FeedPartOfDay);
    atomic_store(result, (unint64_t *)&qword_1EF2C6528);
  }
  return result;
}

uint64_t sub_1BB5264EC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB526560()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB5265B0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedPartOfDay_optional sub_1BB526620(Swift::String *a1)
{
  return FeedPartOfDay.init(rawValue:)(*a1);
}

void sub_1BB52662C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7954788;
  if (*v1)
    v2 = 0x746867696ELL;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB526660()
{
  sub_1BB5267D4();
  return sub_1BB872D60();
}

uint64_t sub_1BB5266BC()
{
  sub_1BB5267D4();
  return sub_1BB872D0C();
}

uint64_t storeEnumTagSinglePayload for FeedPartOfDay(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB526754 + 4 * byte_1BB922845[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB526788 + 4 * byte_1BB922840[v4]))();
}

uint64_t sub_1BB526788(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB526790(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB526798);
  return result;
}

uint64_t sub_1BB5267A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB5267ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB5267B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5267B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedPartOfDay()
{
  return &type metadata for FeedPartOfDay;
}

unint64_t sub_1BB5267D4()
{
  unint64_t result;

  result = qword_1EF2C6530;
  if (!qword_1EF2C6530)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPartOfDay, &type metadata for FeedPartOfDay);
    atomic_store(result, (unint64_t *)&qword_1EF2C6530);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatTestRun(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB526864 + 4 * byte_1BB922965[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB526898 + 4 * byte_1BB922960[v4]))();
}

uint64_t sub_1BB526898(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5268A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB5268A8);
  return result;
}

uint64_t sub_1BB5268B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB5268BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB5268C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5268C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestRun()
{
  return &type metadata for DebugFormatTestRun;
}

unint64_t sub_1BB5268E8()
{
  unint64_t result;

  result = qword_1EF2C6538;
  if (!qword_1EF2C6538)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922A58, &type metadata for DebugFormatTestRun);
    atomic_store(result, (unint64_t *)&qword_1EF2C6538);
  }
  return result;
}

uint64_t sub_1BB52692C(char *a1, char *a2)
{
  return sub_1BB7FF4D4(*a1, *a2);
}

uint64_t sub_1BB526938()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB5269B0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB526A04()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB526A78@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB526AD4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x656C676E6973;
  if (*v1)
    v2 = 0x65676E6172;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB526B0C()
{
  sub_1BB1B0228();
  return sub_1BB872CDC();
}

uint64_t sub_1BB526B4C()
{
  sub_1BB1B0228();
  return sub_1BB872CD0();
}

uint64_t sub_1BB526B94()
{
  sub_1BB1B0228();
  return sub_1BB872CC4();
}

uint64_t sub_1BB526BD4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3490], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for H12_V1()
{
  return &type metadata for H12_V1;
}

uint64_t sub_1BB526C38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C6680, (uint64_t (*)(void))sub_1BB529508, (uint64_t)&type metadata for H12_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB529508();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4AD288(0, &qword_1EF2C3F90, (uint64_t)&type metadata for HMultiLayoutItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB43EAE0(&qword_1EF2C4040, (uint64_t (*)(void))sub_1BAF5F1B0, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB526DF4()
{
  sub_1BB529508();
  return sub_1BB874710();
}

uint64_t sub_1BB526E1C()
{
  sub_1BB529508();
  return sub_1BB87471C();
}

double sub_1BB526E44@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB5292EC(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB526E88(_QWORD *a1)
{
  return sub_1BB526C38(a1);
}

uint64_t sub_1BB526E9C()
{
  sub_1BB528E78();
  return sub_1BB86D96C();
}

uint64_t sub_1BB526F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[8];
  void *v52;
  unsigned __int8 v53;
  ValueMetadata *v54;
  unint64_t v55;

  v42 = a2;
  v43 = a1;
  v44 = a3;
  v37 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for GroupLayoutBindingContext();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v35 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v3;
  v38 = *v3;
  v14 = (void *)*((_QWORD *)v3 + 1);
  v15 = v3[16];
  sub_1BA4C2DD8(a1, v35, v16);
  sub_1BA4C2DD8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  sub_1BB86C8D4();
  v17 = sub_1BB86C8C8();
  v34 = v18;
  (*(void (**)(char *, unint64_t))(v6 + 8))(v8, v37);
  v54 = &type metadata for H12_V1;
  v37 = sub_1BA8EDEB8();
  v55 = v37;
  v51[0] = v13;
  v52 = v14;
  v53 = v15;
  type metadata accessor for GroupLayoutKey();
  v19 = swift_allocObject();
  sub_1BA7C26A0(v14, v15);
  v49 = sub_1BB874734();
  v50 = v20;
  v47 = 95;
  v48 = 0xE100000000000000;
  v45 = 45;
  v46 = 0xE100000000000000;
  sub_1BA7114A0();
  v21 = sub_1BB873B04();
  v23 = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 24) = v23;
  v24 = (uint64_t *)(v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v25 = v34;
  *v24 = v17;
  v24[1] = v25;
  sub_1BA4C010C((uint64_t)v51, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v26 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v35, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v26, 0, 1, v39);
  v27 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v11, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v27, 0, 1, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  sub_1BA7C2538(v14, v15);
  v28 = type metadata accessor for H12_V1.Bound();
  v29 = v44;
  v44[3] = v28;
  v29[4] = sub_1BA4A2870(qword_1EF2C6550, (uint64_t (*)(uint64_t))type metadata accessor for H12_V1.Bound, (uint64_t)&unk_1BB922BA8);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v29);
  v31 = v37;
  boxed_opaque_existential_0[4] = (uint64_t)&type metadata for H12_V1;
  boxed_opaque_existential_0[5] = v31;
  *((_BYTE *)boxed_opaque_existential_0 + 8) = v38;
  boxed_opaque_existential_0[2] = (uint64_t)v14;
  *((_BYTE *)boxed_opaque_existential_0 + 24) = v15;
  sub_1BA4C2DD8(v42, (uint64_t)boxed_opaque_existential_0 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  result = sub_1BB3E0F34(0, 0, 0, 0, 0);
  *boxed_opaque_existential_0 = v19;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v28 + 28)) = result;
  return result;
}

double sub_1BB52729C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  __int128 v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for H12_V1.Bound() + 28));
  v28 = v2;
  swift_bridgeObjectRetain();
  v9 = sub_1BB141F90((void (*)(_QWORD *__return_ptr, uint64_t))sub_1BB528E14, (uint64_t)v27, v8);
  swift_bridgeObjectRelease();
  v23 = v9;
  *(_QWORD *)&v30 = v9;
  sub_1BA4AD288(0, &qword_1EF2C3F68, (uint64_t)&type metadata for HGroupLayoutContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v11 = v10;
  sub_1BA5C69E0(&qword_1EF2C3F70, &qword_1EF2C3F68, (uint64_t)&type metadata for HGroupLayoutContext, MEMORY[0x1E0DEAF50]);
  v24 = v11;
  v12 = sub_1BB8730F0();
  v13 = *MEMORY[0x1E0DB5D88];
  v14 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
  v25 = v12;
  v26 = v2;
  sub_1BB529130(0, &qword_1EF2C65F8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  swift_bridgeObjectRelease();
  sub_1BB86DB40();
  v22 = v30;
  v15 = v31;
  v16 = v32;
  v29 = v33;
  *(_QWORD *)&v30 = v23;
  sub_1BA4AD288(0, &qword_1EF2C3F90, (uint64_t)&type metadata for HMultiLayoutItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v17 = MEMORY[0x1E0DEAF38];
  sub_1BA5C69E0(&qword_1EF2C3F98, &qword_1EF2C3F68, (uint64_t)&type metadata for HGroupLayoutContext, MEMORY[0x1E0DEAF38]);
  sub_1BA5C69E0(&qword_1EF2C3FA0, &qword_1EF2C3F90, (uint64_t)&type metadata for HMultiLayoutItem, v17);
  swift_bridgeObjectRetain();
  v18 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v30 = v18;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, v17);
  sub_1BA6B39A0();
  v19 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)a1 = 0;
  result = *(double *)&v22;
  *(_OWORD *)(a1 + 8) = v22;
  *(_QWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 32) = v16;
  v21 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v19;
  *(_QWORD *)(a1 + 48) = v21;
  return result;
}

uint64_t sub_1BB52761C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[3];
  _OWORD v35[9];
  char v36;
  __int128 v37[2];
  __int128 v38[2];
  __int128 v39[2];
  __int128 v40[9];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[2];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[32];
  _BYTE v57[137];
  char v58;

  sub_1BA982FE4(a1, (uint64_t)&v49);
  if (!v58)
  {
    v33 = v55;
    v34[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)&v56[9];
    v29 = v51;
    v30 = v52;
    v31 = v53;
    v32 = v54;
    v27 = v49;
    v28 = v50;
    v47 = v55;
    v48[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)&v56[9];
    v43 = v51;
    v44 = v52;
    v45 = v53;
    v46 = v54;
    v13 = *a2;
    v41 = v49;
    v42 = v50;
    sub_1BA90EFB8(v35);
    sub_1BA8EDBB0((uint64_t)v35, (uint64_t)v40);
    v14 = (char *)a2 + *(int *)(type metadata accessor for H12_V1.Bound() + 24);
    v15 = type metadata accessor for GroupLayoutContext();
    v16 = *(_QWORD *)(*(_QWORD *)&v14[*(int *)(v15 + 40)] + 16);
    v17 = *(double *)&v14[*(int *)(v15 + 32)];
    sub_1BA4C010C(v16 + 16, (uint64_t)v38);
    sub_1BA4C010C(v16 + 56, (uint64_t)v37);
    v18 = v17 * *(double *)(v16 + 96);
    type metadata accessor for FeedLayoutStylerFactory();
    v19 = swift_allocObject();
    sub_1BA4CECCC(v38, v19 + 16);
    sub_1BA4CECCC(v37, v19 + 56);
    *(double *)(v19 + 96) = v18;
    swift_retain();
    sub_1BA8D1F08((uint64_t)&v27);
    FeedLayoutStylerFactory.styler()((uint64_t *)v39);
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1(v19 + 16);
    __swift_destroy_boxed_opaque_existential_1(v19 + 56);
    swift_deallocClassInstance();
    CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, &v41, (uint64_t)v40, (uint64_t)v39, a3);
    result = sub_1BA8D1FE4((uint64_t)&v27);
    goto LABEL_5;
  }
  if (v58 == 1)
  {
    v33 = v55;
    v34[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)&v56[9];
    v29 = v51;
    v30 = v52;
    v31 = v53;
    v32 = v54;
    v27 = v49;
    v28 = v50;
    sub_1BA8EDBB0((uint64_t)v57, (uint64_t)v35);
    v5 = *a2;
    v47 = v33;
    v48[0] = v34[0];
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)((char *)v34 + 9);
    v43 = v29;
    v44 = v30;
    v45 = v31;
    v46 = v32;
    v41 = v27;
    v42 = v28;
    sub_1BA8EDBB0((uint64_t)v35, (uint64_t)v40);
    v6 = (char *)a2 + *(int *)(type metadata accessor for H12_V1.Bound() + 24);
    v7 = type metadata accessor for GroupLayoutContext();
    v8 = *(_QWORD *)(*(_QWORD *)&v6[*(int *)(v7 + 40)] + 16);
    v9 = *(double *)&v6[*(int *)(v7 + 32)];
    sub_1BA4C010C(v8 + 16, (uint64_t)v38);
    sub_1BA4C010C(v8 + 56, (uint64_t)v37);
    v10 = v9 * *(double *)(v8 + 96);
    type metadata accessor for FeedLayoutStylerFactory();
    v11 = swift_allocObject();
    sub_1BA4CECCC(v38, v11 + 16);
    sub_1BA4CECCC(v37, v11 + 56);
    *(double *)(v11 + 96) = v10;
    swift_retain();
    sub_1BA8D1F08((uint64_t)&v27);
    sub_1BA8966F8((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BB43E670);
    FeedLayoutStylerFactory.styler()((uint64_t *)v39);
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1(v11 + 16);
    __swift_destroy_boxed_opaque_existential_1(v11 + 56);
    swift_deallocClassInstance();
    CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v5, &v41, (uint64_t)v40, (uint64_t)v39, a3);
    sub_1BA8D1FE4((uint64_t)&v27);
    result = sub_1BA8966F8((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA90EF2C);
LABEL_5:
    *(_BYTE *)(a3 + 392) = 0;
    return result;
  }
  v35[6] = v55;
  v35[7] = *(_OWORD *)v56;
  v35[8] = *(_OWORD *)&v56[16];
  v36 = v57[0];
  v35[2] = v51;
  v35[3] = v52;
  v35[4] = v53;
  v35[5] = v54;
  v35[0] = v49;
  v35[1] = v50;
  v20 = *a2;
  sub_1BA6A955C((uint64_t)v35, (uint64_t)&v27);
  v21 = (char *)a2 + *(int *)(type metadata accessor for H12_V1.Bound() + 24);
  v22 = type metadata accessor for GroupLayoutContext();
  v23 = *(_QWORD *)(*(_QWORD *)&v21[*(int *)(v22 + 40)] + 16);
  v24 = *(double *)&v21[*(int *)(v22 + 32)];
  sub_1BA4C010C(v23 + 16, (uint64_t)v40);
  sub_1BA4C010C(v23 + 56, (uint64_t)v39);
  v25 = v24 * *(double *)(v23 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v26 = swift_allocObject();
  sub_1BA4CECCC(v40, v26 + 16);
  sub_1BA4CECCC(v39, v26 + 56);
  *(double *)(v26 + 96) = v25;
  swift_retain();
  FeedLayoutStylerFactory.styler()((uint64_t *)&v41);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v26 + 16);
  __swift_destroy_boxed_opaque_existential_1(v26 + 56);
  swift_deallocClassInstance();
  CoverChannelViewLayout.Context.init(key:model:styler:)(v20, (uint64_t)&v27, (uint64_t)&v41, (_QWORD *)a3);
  result = sub_1BA6A94C4((uint64_t)v35);
  *(_BYTE *)(a3 + 392) = 1;
  return result;
}

void sub_1BB527A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  unsigned int v22;
  void (*v23)(char *, _QWORD, uint64_t);
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1BA4CDF6C(0, &qword_1EF2C6610, (uint64_t (*)(void))sub_1BB528E34, (uint64_t)&type metadata for H12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - v8;
  v27 = a2;
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v24 = *MEMORY[0x1E0DB63C0];
    v23 = *(void (**)(char *, _QWORD, uint64_t))(v26 + 104);
    v22 = *MEMORY[0x1E0DB5C80];
    swift_bridgeObjectRetain();
    v11 = 0;
    v21 = xmmword_1BB87CE70;
    v19 = a3;
    v20 = v7;
    v25 = a1;
    v12 = MEMORY[0x1E0DB5DD0];
    do
    {
      ++v11;
      v28 = a1;
      v23(v9, v24, v7);
      sub_1BB529074();
      sub_1BA4CDF6C(0, &qword_1EF2C6620, (uint64_t (*)(void))sub_1BB528E34, (uint64_t)&type metadata for H12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v14 = v13;
      v15 = *(_QWORD *)(v13 - 8);
      v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = v21;
      v18 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v15 + 104))(v17 + v16, v22, v14);
      MEMORY[0x1E0C80A78](v18);
      sub_1BB529130(0, &qword_1EF2C6628, (uint64_t (*)(uint64_t, _QWORD *))v12);
      sub_1BB5290F0(&qword_1EF2C6630, &qword_1EF2C6628, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
      swift_bridgeObjectRetain();
      a1 = v25;
      sub_1BB86D498();
      v7 = v20;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
      swift_bridgeObjectRelease();
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
  }
}

void sub_1BB527D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, _QWORD *);
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *, _QWORD, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  double (*v63)(uint64_t, uint64_t);
  double v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  uint64_t *v68;
  unint64_t *v69;
  ValueMetadata *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  double v82;
  uint64_t (*v83)(uint64_t, _QWORD *);
  _OWORD *v84;
  _OWORD *v85;
  uint64_t v86;
  unint64_t *v87;
  ValueMetadata *v88;
  uint64_t *v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t *v94;
  unsigned int v95;
  _QWORD *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t KeyPath;
  uint64_t v104;
  unsigned int v105;
  __int128 v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _OWORD v123[25];
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE v127[24];
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  _BYTE v132[392];
  uint64_t v133;

  v116 = a1;
  v117 = a3;
  v4 = sub_1BB86DA20();
  v98 = *(_QWORD *)(v4 - 8);
  v99 = v4;
  MEMORY[0x1E0C80A78](v4);
  v102 = (uint64_t *)((char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C6610, (uint64_t (*)(void))sub_1BB528E34, (uint64_t)&type metadata for H12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v118 = v6;
  v122 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v100 = (uint64_t *)((char *)&v92 - v10);
  v11 = sub_1BB86DA38();
  v114 = *(_QWORD *)(v11 - 8);
  v115 = v11;
  MEMORY[0x1E0C80A78](v11);
  v113 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 16);
  if (!v13)
    return;
  v14 = a2 + 32;
  v112 = (char *)&v133;
  v105 = *MEMORY[0x1E0DB6208];
  v111 = *MEMORY[0x1E0DB5FB0];
  v110 = *MEMORY[0x1E0DB5FB8];
  v109 = *MEMORY[0x1E0DB63D0];
  v108 = *MEMORY[0x1E0DB5C30];
  v107 = *MEMORY[0x1E0DB5C68];
  v96 = &v123[10];
  v101 = (uint64_t)&v123[5] + 8;
  v94 = &v126;
  v93 = *MEMORY[0x1E0DB61D0];
  v95 = *MEMORY[0x1E0DB61C0];
  v92 = a2;
  swift_bridgeObjectRetain();
  v15 = 0;
  v106 = xmmword_1BB87CE70;
  v97 = v8;
  while (1)
  {
    sub_1BB43E1F0(v14, (uint64_t)v132);
    v43 = *v112;
    v120 = v14;
    v121 = v13;
    v119 = v15;
    if ((v43 & 1) == 0)
    {
      memcpy(v123, v132, 0x188uLL);
      if ((BYTE8(v123[3]) & 0x10) != 0)
      {
        v16 = v117 + *(int *)(type metadata accessor for H12_V1.Bound() + 24);
        v17 = type metadata accessor for GroupLayoutContext();
        v18 = *(_QWORD *)(*(_QWORD *)(v16 + *(int *)(v17 + 40)) + 24);
        v19 = MEMORY[0x1E0C80A78](v17);
        *(&v92 - 4) = (uint64_t)v123;
        *(&v92 - 3) = v18;
        v90 = v20;
      }
      else
      {
        v71 = v117 + *(int *)(type metadata accessor for H12_V1.Bound() + 24);
        v72 = type metadata accessor for GroupLayoutContext();
        v73 = *(_QWORD *)(*(_QWORD *)(v71 + *(int *)(v72 + 40)) + 24);
        v19 = MEMORY[0x1E0C80A78](v72);
        v90 = v123;
        v91 = v73;
      }
      (*(void (**)(char *, _QWORD, uint64_t, double))(v114 + 104))(v113, v105, v115, v19);
      sub_1BA915C74();
      swift_allocObject();
      swift_retain();
      v104 = sub_1BB86DB34();
      swift_release();
      v124 = v116;
      KeyPath = swift_getKeyPath();
      sub_1BA71C838();
      v22 = v21;
      v23 = swift_allocBox();
      v25 = v24;
      v26 = (char *)v24 + *(int *)(v22 + 48);
      sub_1BB86D42C();
      v27 = swift_allocBox();
      sub_1BB86D420();
      *v25 = v27;
      v28 = sub_1BB86D894();
      v29 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104);
      v29(v25, v111, v28);
      v29((uint64_t *)v26, v110, v28);
      v30 = v100;
      *v100 = v23;
      v31 = v118;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v122 + 104))(v30, v109, v118);
      sub_1BB529074();
      sub_1BA4CDF6C(0, &qword_1EF2C6620, (uint64_t (*)(void))sub_1BB528E34, (uint64_t)&type metadata for H12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v33 = v32;
      v34 = *(_QWORD *)(v32 - 8);
      v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v106;
      v37 = v36 + v35;
      sub_1BA4CDF6C(0, &qword_1EF2C6638, (uint64_t (*)(void))sub_1BB528E34, (uint64_t)&type metadata for H12_V1.Layout, MEMORY[0x1E0DB5C60]);
      (*(void (**)(unint64_t, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v37, v108, v38);
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v34 + 104))(v37, v107, v33);
      v39 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BB529130(0, &qword_1EF2C6640, MEMORY[0x1E0DB5A10]);
      v41 = v40;
      v42 = sub_1BB5290F0(&qword_1EF2C6648, &qword_1EF2C6640, v39, MEMORY[0x1E0DB5A18]);
      v90 = v41;
      v91 = v42;
      v15 = v119;
      sub_1BB86D528();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t *, uint64_t))(v122 + 8))(v30, v31);
      sub_1BA915C30((uint64_t)v123);
      v8 = v97;
      goto LABEL_5;
    }
    v123[12] = *(_OWORD *)&v132[192];
    v123[13] = *(_OWORD *)&v132[208];
    v123[14] = *(_OWORD *)&v132[224];
    *(_QWORD *)&v123[15] = *(_QWORD *)&v132[240];
    v123[8] = *(_OWORD *)&v132[128];
    v123[9] = *(_OWORD *)&v132[144];
    v123[10] = *(_OWORD *)&v132[160];
    v123[11] = *(_OWORD *)&v132[176];
    v123[4] = *(_OWORD *)&v132[64];
    v123[5] = *(_OWORD *)&v132[80];
    v123[6] = *(_OWORD *)&v132[96];
    v123[7] = *(_OWORD *)&v132[112];
    v123[0] = *(_OWORD *)v132;
    v123[1] = *(_OWORD *)&v132[16];
    v123[2] = *(_OWORD *)&v132[32];
    v123[3] = *(_OWORD *)&v132[48];
    v131 = v116;
    v104 = swift_getKeyPath();
    sub_1BA71C838();
    v45 = v44;
    v46 = swift_allocBox();
    v48 = v47;
    v49 = (char *)v47 + *(int *)(v45 + 48);
    sub_1BB86D42C();
    v50 = swift_allocBox();
    sub_1BB86D420();
    *v48 = v50;
    v51 = sub_1BB86D894();
    v52 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v51 - 8) + 104);
    v52(v48, v111, v51);
    v52((uint64_t *)v49, v110, v51);
    *v8 = v46;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v122 + 104))(v8, v109, v118);
    sub_1BB529074();
    sub_1BA4CDF6C(0, &qword_1EF2C6620, (uint64_t (*)(void))sub_1BB528E34, (uint64_t)&type metadata for H12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v54 = v53;
    v55 = *(_QWORD *)(v53 - 8);
    v56 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = v106;
    v58 = v57 + v56;
    sub_1BA4CDF6C(0, &qword_1EF2C6638, (uint64_t (*)(void))sub_1BB528E34, (uint64_t)&type metadata for H12_V1.Layout, MEMORY[0x1E0DB5C60]);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(v58, v108, v59);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v55 + 104))(v58, v107, v54);
    type metadata accessor for H12_V1.Bound();
    type metadata accessor for GroupLayoutContext();
    v60 = *((_QWORD *)&v123[11] + 1);
    v61 = *(_QWORD *)&v123[12];
    v62 = v96;
    __swift_project_boxed_opaque_existential_1(v96, *((uint64_t *)&v123[11] + 1));
    v63 = *(double (**)(uint64_t, uint64_t))(v61 + 48);
    swift_retain();
    v64 = v63(v60, v61);
    v65 = *((_QWORD *)&v123[11] + 1);
    v66 = *(_QWORD *)&v123[12];
    __swift_project_boxed_opaque_existential_1(v62, *((uint64_t *)&v123[11] + 1));
    v67 = (*(double (**)(uint64_t, uint64_t))(v66 + 56))(v65, v66);
    sub_1BA90C818(v101, (uint64_t)&v124, &qword_1ED3A5228, (uint64_t)&type metadata for FeedTag.Overrides);
    if (v125 == 1)
    {
      v68 = &v124;
      v69 = &qword_1ED3A5228;
      v70 = &type metadata for FeedTag.Overrides;
LABEL_18:
      sub_1BA6ED734((uint64_t)v68, v69, (uint64_t)v70);
      v75 = v95;
      goto LABEL_19;
    }
    sub_1BA90C818((uint64_t)v94, (uint64_t)v127, (unint64_t *)&unk_1EF2AA6F0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
    sub_1BA90C870((uint64_t)&v124);
    if (!v128)
    {
      v68 = (uint64_t *)v127;
      v69 = (unint64_t *)&unk_1EF2AA6F0;
      v70 = &type metadata for FeedTag.Overrides.Image;
      goto LABEL_18;
    }
    v74 = v130;
    sub_1BA90CA40((uint64_t)v127);
    v75 = v95;
    if ((v74 & 1) == 0)
      break;
LABEL_19:
    v78 = v98;
    v79 = v99;
    v80 = v102;
    v81 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v98 + 104))(v102, v75, v99);
    v82 = MEMORY[0x1E0C80A78](v81);
    *(&v92 - 4) = (uint64_t)v80;
    *((double *)&v92 - 3) = v64 + v67 + v67;
    v90 = v123;
    (*(void (**)(char *, _QWORD, uint64_t, double))(v114 + 104))(v113, v105, v115, v82);
    sub_1BB43E57C();
    swift_allocObject();
    sub_1BB86DB34();
    (*(void (**)(_QWORD *, uint64_t))(v78 + 8))(v80, v79);
    swift_release();
    v83 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB529130(0, &qword_1EF2C6640, MEMORY[0x1E0DB5A10]);
    v85 = v84;
    v86 = sub_1BB5290F0(&qword_1EF2C6648, &qword_1EF2C6640, v83, MEMORY[0x1E0DB5A18]);
    v90 = v85;
    v91 = v86;
    v15 = v119;
    sub_1BB86D528();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t *, uint64_t))(v122 + 8))(v8, v118);
    sub_1BB43E22C((uint64_t)v123);
LABEL_5:
    v14 = v120 + 400;
    v13 = v121 - 1;
    if (v121 == 1)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  sub_1BA90C818(v101, (uint64_t)&v124, &qword_1ED3A5228, (uint64_t)&type metadata for FeedTag.Overrides);
  if (v125 == 1)
  {
    v87 = &qword_1ED3A5228;
    v88 = &type metadata for FeedTag.Overrides;
    v89 = &v124;
    goto LABEL_24;
  }
  sub_1BA90C818((uint64_t)v94, (uint64_t)v127, (unint64_t *)&unk_1EF2AA6F0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
  sub_1BA90C870((uint64_t)&v124);
  if (v128)
  {
    v76 = v129;
    v77 = v130;
    sub_1BA90CA40((uint64_t)v127);
    if ((v77 & 1) != 0)
      goto LABEL_25;
    *v102 = v76;
    v75 = v93;
    goto LABEL_19;
  }
  v87 = (unint64_t *)&unk_1EF2AA6F0;
  v88 = &type metadata for FeedTag.Overrides.Image;
  v89 = (uint64_t *)v127;
LABEL_24:
  sub_1BA6ED734((uint64_t)v89, v87, (uint64_t)v88);
LABEL_25:
  __break(1u);
}

uint64_t sub_1BB528878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[25];
  _BYTE v44[392];
  _BYTE v45[400];
  uint64_t v46;
  _BYTE v47[392];

  v8 = sub_1BB86C8E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF5F314(a3, v47);
  sub_1BB43E1F0(a2, (uint64_t)v45);
  sub_1BAF5F314(v47, &v46);
  if ((v45[392] & 1) == 0)
  {
    sub_1BB43E1F0((uint64_t)v45, (uint64_t)v43);
    sub_1BAF5F314(v47, v44);
    v33 = sub_1BAF5D6A4((uint64_t)v44);
    v34 = nullsub_1();
    if (v33 != 1)
    {
      v40 = (const void *)v34;
      v41 = swift_allocObject();
      memcpy((void *)(v41 + 16), v43, 0x188uLL);
      memcpy((void *)(v41 + 408), v40, 0x180uLL);
      *(_QWORD *)(v41 + 792) = a1;
      v32 = v41 | 0x5000000000000000;
      goto LABEL_9;
    }
    sub_1BA915C30((uint64_t)v43);
LABEL_7:
    v35 = swift_allocObject();
    sub_1BB86C8D4();
    v36 = sub_1BB86C8C8();
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(_QWORD *)(v35 + 16) = v36;
    *(_QWORD *)(v35 + 24) = v38;
    *a4 = v35;
    return sub_1BA4A2E80((uint64_t)v45, (uint64_t (*)(_QWORD))sub_1BB43E284);
  }
  sub_1BB43E1F0((uint64_t)v45, (uint64_t)v43);
  sub_1BAF5F314(v47, v44);
  v12 = sub_1BAF5D6A4((uint64_t)v44);
  v13 = nullsub_1();
  if (v12 != 1)
  {
    sub_1BB43E22C((uint64_t)v43);
    goto LABEL_7;
  }
  v14 = (__int128 *)v13;
  v15 = swift_allocObject();
  v16 = v43[13];
  *(_OWORD *)(v15 + 208) = v43[12];
  *(_OWORD *)(v15 + 224) = v16;
  *(_OWORD *)(v15 + 240) = v43[14];
  *(_QWORD *)(v15 + 256) = *(_QWORD *)&v43[15];
  v17 = v43[9];
  *(_OWORD *)(v15 + 144) = v43[8];
  *(_OWORD *)(v15 + 160) = v17;
  v18 = v43[11];
  *(_OWORD *)(v15 + 176) = v43[10];
  *(_OWORD *)(v15 + 192) = v18;
  v19 = v43[5];
  *(_OWORD *)(v15 + 80) = v43[4];
  *(_OWORD *)(v15 + 96) = v19;
  v20 = v43[7];
  *(_OWORD *)(v15 + 112) = v43[6];
  *(_OWORD *)(v15 + 128) = v20;
  v21 = v43[1];
  *(_OWORD *)(v15 + 16) = v43[0];
  *(_OWORD *)(v15 + 32) = v21;
  v22 = v43[3];
  *(_OWORD *)(v15 + 48) = v43[2];
  *(_OWORD *)(v15 + 64) = v22;
  v23 = *v14;
  v24 = v14[1];
  v25 = v14[3];
  *(_OWORD *)(v15 + 296) = v14[2];
  *(_OWORD *)(v15 + 312) = v25;
  *(_OWORD *)(v15 + 280) = v24;
  *(_OWORD *)(v15 + 264) = v23;
  v26 = v14[4];
  v27 = v14[5];
  v28 = v14[7];
  *(_OWORD *)(v15 + 360) = v14[6];
  *(_OWORD *)(v15 + 376) = v28;
  *(_OWORD *)(v15 + 328) = v26;
  *(_OWORD *)(v15 + 344) = v27;
  v29 = v14[8];
  v30 = v14[9];
  v31 = v14[11];
  *(_OWORD *)(v15 + 424) = v14[10];
  *(_OWORD *)(v15 + 440) = v31;
  *(_OWORD *)(v15 + 392) = v29;
  *(_OWORD *)(v15 + 408) = v30;
  *(_QWORD *)(v15 + 456) = a1;
  v32 = v15 | 0x6000000000000000;
LABEL_9:
  *a4 = v32;
  return sub_1BB43E384((uint64_t)v45);
}

uint64_t sub_1BB528B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB526F04(a1, a2, a3);
}

uint64_t sub_1BB528B44()
{
  return sub_1BB690ADC();
}

unint64_t sub_1BB528B54(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB528B80();
  result = sub_1BB528BC4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB528B80()
{
  unint64_t result;

  result = qword_1EF2C6540;
  if (!qword_1EF2C6540)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922AF4, &type metadata for H12_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2C6540);
  }
  return result;
}

unint64_t sub_1BB528BC4()
{
  unint64_t result;

  result = qword_1EF2C6548;
  if (!qword_1EF2C6548)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922B1C, &type metadata for H12_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2C6548);
  }
  return result;
}

uint64_t type metadata accessor for H12_V1.Bound()
{
  uint64_t result;

  result = qword_1EF2C65B0;
  if (!qword_1EF2C65B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB528C44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB528C50(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB528CCC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB528CD8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB528D4C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB528DD8(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C65F0, (uint64_t (*)(uint64_t))type metadata accessor for H12_V1.Bound, (uint64_t)&unk_1BB922B80);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB528E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB52761C(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1BB528E2C(uint64_t a1)
{
  uint64_t v1;

  sub_1BB527A84(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BB528E34()
{
  unint64_t result;

  result = qword_1EF2C6600;
  if (!qword_1EF2C6600)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922CD8, &type metadata for H12_V1.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2C6600);
  }
  return result;
}

unint64_t sub_1BB528E78()
{
  unint64_t result;

  result = qword_1EF2C6608;
  if (!qword_1EF2C6608)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922CA8, &type metadata for H12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C6608);
  }
  return result;
}

uint64_t sub_1BB528EBC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB528EE0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 112) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 144))
      __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB528F7C()
{
  uint64_t v0;
  void *v1;

  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 152) >= 0x11uLL)
    swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(v0 + 296) >= 0x11uLL)
      swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB529074()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C6618)
  {
    sub_1BA4CDF6C(255, &qword_1EF2C6620, (uint64_t (*)(void))sub_1BB528E34, (uint64_t)&type metadata for H12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C6618);
  }
}

void sub_1BB5290E8(uint64_t a1)
{
  uint64_t v1;

  sub_1BB527D10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB5290F0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB529130(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB529130(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for H12_V1.Layout;
    v8[1] = &type metadata for H12_V1.Layout.Attributes;
    v8[2] = sub_1BB528E34();
    v8[3] = sub_1BB528E78();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

ValueMetadata *type metadata accessor for H12_V1.Layout.Attributes()
{
  return &type metadata for H12_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for H12_V1.Layout()
{
  return &type metadata for H12_V1.Layout;
}

unint64_t sub_1BB5291D0()
{
  unint64_t result;

  result = qword_1EF2C6650;
  if (!qword_1EF2C6650)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922C48, &type metadata for H12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C6650);
  }
  return result;
}

unint64_t sub_1BB529218()
{
  unint64_t result;

  result = qword_1EF2C6658;
  if (!qword_1EF2C6658)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922C20, &type metadata for H12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C6658);
  }
  return result;
}

unint64_t sub_1BB529260()
{
  unint64_t result;

  result = qword_1EF2C6660;
  if (!qword_1EF2C6660)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922BF8, &type metadata for H12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C6660);
  }
  return result;
}

unint64_t sub_1BB5292A8()
{
  unint64_t result;

  result = qword_1EF2C6668;
  if (!qword_1EF2C6668)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922C70, &type metadata for H12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C6668);
  }
  return result;
}

uint64_t sub_1BB5292EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C6670, (uint64_t (*)(void))sub_1BB529508, (uint64_t)&type metadata for H12_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB529508();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4AD288(0, &qword_1EF2C3F90, (uint64_t)&type metadata for HMultiLayoutItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v23 = 1;
  sub_1BB43EAE0(&qword_1EF2C4030, (uint64_t (*)(void))sub_1BAF5F168, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB529508()
{
  unint64_t result;

  result = qword_1EF2C6678;
  if (!qword_1EF2C6678)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922DCC, &type metadata for H12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6678);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for H12_V1.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB529598 + 4 * byte_1BB922AE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB5295CC + 4 * byte_1BB922AE0[v4]))();
}

uint64_t sub_1BB5295CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5295D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB5295DCLL);
  return result;
}

uint64_t sub_1BB5295E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB5295F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB5295F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5295FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for H12_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for H12_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB52961C()
{
  unint64_t result;

  result = qword_1EF2C6688;
  if (!qword_1EF2C6688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922DA4, &type metadata for H12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6688);
  }
  return result;
}

unint64_t sub_1BB529664()
{
  unint64_t result;

  result = qword_1EF2C6690;
  if (!qword_1EF2C6690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922D14, &type metadata for H12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6690);
  }
  return result;
}

unint64_t sub_1BB5296AC()
{
  unint64_t result;

  result = qword_1EF2C6698;
  if (!qword_1EF2C6698)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922D3C, &type metadata for H12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6698);
  }
  return result;
}

uint64_t sub_1BB5296F0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

NewsFeed::FeedFontLoadResult __swiftcall FeedFontLoadResult.init(loadedFonts:missingFonts:)(Swift::OpaquePointer loadedFonts, Swift::OpaquePointer missingFonts)
{
  Swift::OpaquePointer *v2;
  NewsFeed::FeedFontLoadResult result;

  v2->_rawValue = loadedFonts._rawValue;
  v2[1]._rawValue = missingFonts._rawValue;
  result.missingFonts = missingFonts;
  result.loadedFonts = loadedFonts;
  return result;
}

id LoadedFont.loadableFont.getter()
{
  id *v0;

  return *v0;
}

void *LoadedFont.assetHandle.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

uint64_t LoadedFont.hash(into:)()
{
  sub_1BB8738D0();
  return sub_1BB8745D8();
}

uint64_t static LoadedFont.== infix(_:_:)()
{
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
  return sub_1BB8738B8() & 1;
}

uint64_t LoadedFont.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8738D0();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB529808()
{
  sub_1BB8745CC();
  sub_1BB8738D0();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB52984C()
{
  sub_1BB8738D0();
  return sub_1BB8745D8();
}

uint64_t sub_1BB529878()
{
  sub_1BB8745CC();
  sub_1BB8738D0();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB5298B8()
{
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
  return sub_1BB8738B8() & 1;
}

uint64_t FeedFontLoadResult.loadedFonts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedFontLoadResult.missingFonts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB529918()
{
  uint64_t v0;

  return sub_1BA4A7050(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB529934()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB529960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  unsigned int v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  unint64_t v29;
  void *v30;
  _QWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  id v39;
  id v40;
  unint64_t v41;
  id v42[3];

  v42[2] = *(id *)MEMORY[0x1E0C80C00];
  v3 = type metadata accessor for FeedFontManager.LocalFont();
  MEMORY[0x1E0C80A78](v3);
  v6 = (id *)((char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v35 = v1 + 40;
    v36 = v1;
    v8 = *(void **)(v1 + 24);
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v38 = *(_QWORD *)(v4 + 72);
    v39 = v8;
    v32[1] = a1;
    swift_bridgeObjectRetain();
    v34 = xmmword_1BB87CE70;
    v33 = xmmword_1BB87A390;
    do
    {
      sub_1BB52AF54(v9, (uint64_t)v6);
      v20 = (void *)sub_1BB86C58C();
      v40 = 0;
      v21 = objc_msgSend(v39, sel_registerFontWithURL_error_, v20, &v40);

      if (v21)
      {
        v10 = v40;
        v11 = sub_1BB8732E8();
        sub_1BA7AA598();
        v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = v34;
        v13 = *v6;
        v14 = objc_msgSend(v13, sel_description);
        v15 = sub_1BB8729A0();
        v17 = v16;

        *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v12 + 64) = sub_1BA6A2D8C();
        *(_QWORD *)(v12 + 32) = v15;
        *(_QWORD *)(v12 + 40) = v17;
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3D4460);
        v18 = (void *)sub_1BB873A08();
        sub_1BB86EF44("Font manager registered a local font, font=%@", 45, 2, &dword_1BA493000, v18, v11, v12);
        swift_bridgeObjectRelease();

        sub_1BB86DD20();
        swift_beginAccess();
        sub_1BA522BE4(v42, v13, 0);
        swift_endAccess();
        v19 = v42[1];

        sub_1BB86DD2C();
      }
      else
      {
        v22 = v40;
        v23 = (void *)sub_1BB86C484();

        swift_willThrow();
        v37 = sub_1BB8732F4();
        sub_1BA7AA598();
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = v33;
        v40 = 0;
        v41 = 0xE000000000000000;
        sub_1BB873E34();
        v25 = v40;
        v26 = v41;
        *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
        v27 = sub_1BA6A2D8C();
        *(_QWORD *)(v24 + 64) = v27;
        *(_QWORD *)(v24 + 32) = v25;
        *(_QWORD *)(v24 + 40) = v26;
        v40 = 0;
        v41 = 0xE000000000000000;
        v42[0] = v23;
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
        sub_1BB873E34();
        v28 = v40;
        v29 = v41;
        *(_QWORD *)(v24 + 96) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v24 + 104) = v27;
        *(_QWORD *)(v24 + 72) = v28;
        *(_QWORD *)(v24 + 80) = v29;
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3D4460);
        v30 = (void *)sub_1BB873A08();
        sub_1BB86EF44("Failed to register font, url=%@, error=%{public}@", 49, 2, &dword_1BA493000, v30, v37, v24);
        swift_bridgeObjectRelease();

      }
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedFontManager.LocalFont);
      v9 += v38;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB529D78(uint64_t a1)
{
  uint64_t v1;
  uint64_t i;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v13[2];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v1; ++i)
    {
      v4 = *(id *)(a1 + 8 * i + 32);
      v5 = objc_msgSend(v4, sel_fontName);
      if (v5)
      {
        v6 = v5;
        sub_1BB8729A0();

        v7 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v8 = objc_msgSend((id)objc_opt_self(), sel_fontWithName_size_, v7, 0.0);

        if (v8)
        {
          v9 = v4;
          sub_1BB86DD20();
          swift_beginAccess();
          v10 = v9;
          sub_1BA522BE4(v13, v10, 0);
          swift_endAccess();
          v11 = v13[1];

          sub_1BB86DD2C();
        }
      }

    }
    swift_bridgeObjectRelease();
  }
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

void sub_1BB529F24(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  _QWORD v23[2];
  uint64_t v24;
  unint64_t v25;

  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB8732F4();
  sub_1BA7AA598();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87A390;
  v13 = objc_msgSend(a2, sel_fontURL);
  if (v13)
  {
    v14 = v13;
    sub_1BB86C5EC();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
    {
      v15 = sub_1BB86C538();
      v17 = v16;
      v18 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
      v19 = sub_1BA6A2D8C();
      *(_QWORD *)(v12 + 64) = v19;
      *(_QWORD *)(v12 + 32) = v15;
      *(_QWORD *)(v12 + 40) = v17;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      v24 = 0;
      v25 = 0xE000000000000000;
      v23[1] = a1;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
      sub_1BB873E34();
      v20 = v24;
      v21 = v25;
      *(_QWORD *)(v12 + 96) = v18;
      *(_QWORD *)(v12 + 104) = v19;
      *(_QWORD *)(v12 + 72) = v20;
      *(_QWORD *)(v12 + 80) = v21;
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3D4460);
      v22 = (void *)sub_1BB873A08();
      sub_1BB86EF44("Failed to download font, url=%@, error=%{public}@", 49, 2, &dword_1BA493000, v22, v11, v12);
      swift_bridgeObjectRelease();

      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  __break(1u);
}

uint64_t FeedFontManager.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedFontManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t assignWithCopy for LoadedFont(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

ValueMetadata *type metadata accessor for LoadedFont()
{
  return &type metadata for LoadedFont;
}

ValueMetadata *type metadata accessor for FeedFontLoadResult()
{
  return &type metadata for FeedFontLoadResult;
}

uint64_t method lookup function for FeedFontManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB52A264(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v4 = (void **)(a1 + 32);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    do
    {
      v6 = *v4++;
      MEMORY[0x1E0C80A78](v5);
      swift_allocObject();
      v7 = v6;
      sub_1BB86EA58();

      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      v5 = sub_1BB873DBC();
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1BB52A3A4(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  id v44;
  void *v45;
  char *v46;
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  id v50;
  void *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  id v58;
  void *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  char v66;
  uint64_t v67;
  id v68;
  void *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v75;
  char *v76;
  char *v77;
  uint64_t result;
  unint64_t v79;
  char *v80;
  id v81;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  __int128 v92;
  char *v93;
  unsigned int v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  int64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  unint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;

  v87 = type metadata accessor for FeedFontManager.LocalFont();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v89 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86C67C();
  v104 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v105 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v6);
  v93 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v95 = (char *)&v86 - v9;
  MEMORY[0x1E0C80A78](v10);
  v96 = (char *)&v86 - v11;
  MEMORY[0x1E0C80A78](v12);
  v88 = (char *)&v86 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v86 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v86 - v18;
  v109 = MEMORY[0x1E0DEE9D8];
  v110 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BB873BE8();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97E0);
    sub_1BAC87674();
    sub_1BB873084();
    a1 = v111;
    v102 = v112;
    v20 = v113;
    v21 = v114;
    v22 = v115;
  }
  else
  {
    v23 = -1 << *(_BYTE *)(a1 + 32);
    v24 = *(_QWORD *)(a1 + 56);
    v102 = a1 + 56;
    v20 = ~v23;
    v25 = -v23;
    if (v25 < 64)
      v26 = ~(-1 << v25);
    else
      v26 = -1;
    v22 = v26 & v24;
    swift_bridgeObjectRetain();
    v21 = 0;
  }
  v103 = v19;
  v98 = v16;
  v100 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v90 = v20;
  v101 = (unint64_t)(v20 + 64) >> 6;
  v91 = MEMORY[0x1E0DEE9D8];
  v92 = xmmword_1BB87CE70;
  v99 = MEMORY[0x1E0DEE9B0] + 8;
  v97 = a1;
  v27 = v21;
  if ((a1 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_32:
  v37 = sub_1BB873C0C();
  if (!v37)
    goto LABEL_66;
  v107 = v37;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97E0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v36 = v108;
  swift_unknownObjectRelease();
  v32 = v27;
  v30 = v22;
  if (!v36)
    goto LABEL_66;
  while (1)
  {
    v106 = v30;
    v38 = objc_msgSend(v36, sel_fontURL, v86);
    if (!v38)
    {
      v28 = (uint64_t)v103;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56))(v103, 1, 1, v4);
LABEL_10:
      sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v29 = v36;
      MEMORY[0x1BCCE36AC]();
      if (*(_QWORD *)(v110 + 16) >= *(_QWORD *)(v110 + 24) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      goto LABEL_13;
    }
    v39 = v38;
    v40 = v105;
    sub_1BB86C5EC();

    v28 = (uint64_t)v103;
    v41 = v104;
    v42 = *(void (**)(char *, char *, uint64_t))(v104 + 32);
    v42(v103, v40, v4);
    v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
    v1(v28, 0, 1, v4);
    v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
    if (v43(v28, 1, v4) == 1)
      goto LABEL_10;
    sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v44 = objc_msgSend(v36, sel_fontURL);
    if (!v44)
      goto LABEL_68;
    v45 = v44;
    v46 = v105;
    sub_1BB86C5EC();

    v47 = v98;
    v42(v98, v46, v4);
    v1((uint64_t)v47, 0, 1, v4);
    if (v43((uint64_t)v47, 1, v4) == 1)
      goto LABEL_69;
    v48 = sub_1BB86C508();
    v49 = *(void (**)(char *, uint64_t))(v104 + 8);
    v49(v47, v4);
    v50 = objc_msgSend(v36, sel_fontURL);
    v51 = v50;
    if ((v48 & 1) == 0)
    {
      if (!v50)
        goto LABEL_70;
      v52 = v105;
      sub_1BB86C5EC();

      v53 = v96;
      v42(v96, v52, v4);
      v1((uint64_t)v53, 0, 1, v4);
      if (v43((uint64_t)v53, 1, v4) == 1)
        goto LABEL_71;
      v54 = sub_1BB86C61C();
      v56 = v55;
      v49(v53, v4);
      if (v56)
      {
        if (v54 != 1886680168 || v56 != 0xE400000000000000)
        {
          v57 = sub_1BB874398();
          swift_bridgeObjectRelease();
          if ((v57 & 1) == 0)
            goto LABEL_45;
LABEL_51:
          v65 = v36;
          MEMORY[0x1BCCE36AC]();
          if (*(_QWORD *)(v109 + 16) >= *(_QWORD *)(v109 + 24) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
          a1 = v97;
LABEL_13:
          v22 = v106;

          v27 = v32;
          if (a1 < 0)
            goto LABEL_32;
          goto LABEL_14;
        }
LABEL_50:
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
LABEL_45:
      v58 = objc_msgSend(v36, sel_fontURL);
      if (!v58)
        goto LABEL_72;
      v59 = v58;
      v60 = v105;
      sub_1BB86C5EC();

      v61 = v95;
      v42(v95, v60, v4);
      v1((uint64_t)v61, 0, 1, v4);
      if (v43((uint64_t)v61, 1, v4) == 1)
        goto LABEL_73;
      v62 = sub_1BB86C61C();
      v64 = v63;
      v49(v61, v4);
      if (v64)
      {
        if (v62 == 0x7370747468 && v64 == 0xE500000000000000)
          goto LABEL_50;
        v66 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v66 & 1) != 0)
          goto LABEL_51;
      }
      v94 = sub_1BB8732F4();
      sub_1BA7AA598();
      v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = v92;
      v68 = objc_msgSend(v36, sel_fontURL);
      if (!v68)
        goto LABEL_74;
      v69 = v68;
      v70 = v105;
      sub_1BB86C5EC();

      v71 = v93;
      v42(v93, v70, v4);
      v1((uint64_t)v71, 0, 1, v4);
      if (v43((uint64_t)v71, 1, v4) == 1)
        goto LABEL_75;
      v72 = v71;
      v73 = sub_1BB86C538();
      v1 = v74;
      *(_QWORD *)(v67 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v67 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v67 + 32) = v73;
      *(_QWORD *)(v67 + 40) = v1;
      v49(v72, v4);
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3D4460);
      v75 = (void *)sub_1BB873A08();
      sub_1BB86EF44("Unsupported font URL= %{public}@ , skipping", 43, 2, &dword_1BA493000, v75, v94, v67);
      swift_bridgeObjectRelease();

      a1 = v97;
      goto LABEL_13;
    }
    if (!v50)
      goto LABEL_76;
    v76 = v105;
    sub_1BB86C5EC();

    v77 = v88;
    v42(v88, v76, v4);
    v1((uint64_t)v77, 0, 1, v4);
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v43)(v77, 1, v4);
    a1 = v97;
    v79 = v91;
    if ((_DWORD)result == 1)
      goto LABEL_77;
    v80 = v89;
    *(_QWORD *)v89 = v36;
    v42(&v80[*(int *)(v87 + 20)], v77, v4);
    v81 = v36;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = v106;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v79 = sub_1BB393C3C(0, *(_QWORD *)(v79 + 16) + 1, 1, v79);
    v84 = *(_QWORD *)(v79 + 16);
    v83 = *(_QWORD *)(v79 + 24);
    if (v84 >= v83 >> 1)
      v79 = sub_1BB393C3C(v83 > 1, v84 + 1, 1, v79);
    *(_QWORD *)(v79 + 16) = v84 + 1;
    v85 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
    v91 = v79;
    sub_1BB52AF98((uint64_t)v89, v79 + v85 + *(_QWORD *)(v86 + 72) * v84);

    v27 = v32;
    if (a1 < 0)
      goto LABEL_32;
LABEL_14:
    if (!v22)
      break;
    v30 = (v22 - 1) & v22;
    v31 = __clz(__rbit64(v22)) | (v27 << 6);
    v32 = v27;
LABEL_30:
    v36 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v31);
    if (!v36)
      goto LABEL_66;
  }
  v33 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
LABEL_68:
    v1((uint64_t)v98, 1, 1, v4);
LABEL_69:
    __break(1u);
LABEL_70:
    v1((uint64_t)v96, 1, 1, v4);
LABEL_71:
    __break(1u);
LABEL_72:
    v1((uint64_t)v95, 1, 1, v4);
LABEL_73:
    __break(1u);
LABEL_74:
    v1((uint64_t)v93, 1, 1, v4);
LABEL_75:
    __break(1u);
LABEL_76:
    result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v1)(v88, 1, 1, v4);
LABEL_77:
    __break(1u);
    return result;
  }
  if (v33 >= v101)
    goto LABEL_66;
  v34 = *(_QWORD *)(v102 + 8 * v33);
  v32 = v27 + 1;
  if (v34)
    goto LABEL_29;
  v32 = v27 + 2;
  if (v27 + 2 >= v101)
    goto LABEL_66;
  v34 = *(_QWORD *)(v102 + 8 * v32);
  if (v34)
    goto LABEL_29;
  v32 = v27 + 3;
  if (v27 + 3 >= v101)
    goto LABEL_66;
  v34 = *(_QWORD *)(v102 + 8 * v32);
  if (v34)
    goto LABEL_29;
  v32 = v27 + 4;
  if (v27 + 4 >= v101)
    goto LABEL_66;
  v34 = *(_QWORD *)(v102 + 8 * v32);
  if (v34)
  {
LABEL_29:
    v30 = (v34 - 1) & v34;
    v31 = __clz(__rbit64(v34)) + (v32 << 6);
    goto LABEL_30;
  }
  v35 = v27 + 5;
  while (v101 != v35)
  {
    v34 = *(_QWORD *)(v102 + 8 * v35++);
    if (v34)
    {
      v32 = v35 - 1;
      goto LABEL_29;
    }
  }
LABEL_66:
  sub_1BA6EBD18();
  return v91;
}

uint64_t sub_1BB52AE9C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB52AEC8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BB52AEEC(uint64_t a1)
{
  uint64_t v1;

  sub_1BB529F24(a1, *(void **)(v1 + 16));
}

uint64_t sub_1BB52AEF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for FeedFontManager.LocalFont()
{
  uint64_t result;

  result = qword_1ED39C498;
  if (!qword_1ED39C498)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB52AF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedFontManager.LocalFont();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB52AF98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedFontManager.LocalFont();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void **sub_1BB52AFDC(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  char *v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB86C67C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1BB52B070(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86C67C();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void **sub_1BB52B0B8(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  id v10;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86C67C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **sub_1BB52B124(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_QWORD *sub_1BB52B194(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **sub_1BB52B1F0(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1BB52B25C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB52B268(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1BB52B2E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB52B2F0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86C67C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB52B364()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FormatOptionEnum.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatOptionEnum.init(name:value:selectors:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t FormatOptionEnum.description.getter()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;

  v4 = *v0;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t FormatOptionEnum.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionEnum.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionEnum.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatOptionEnum.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB52BA04()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;

  v4 = *v0;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BB52BA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v30 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F38(0, v4, 0);
    v7 = 0;
    result = v30;
    v26 = a1 + 32;
    v29 = a2 + 56;
    while (1)
    {
      v8 = (uint64_t *)(v26 + 32 * v7);
      v9 = v8[2];
      v10 = v8[3];
      v27 = v8[1];
      v28 = result;
      if (!*(_QWORD *)(a2 + 16))
        break;
      v11 = *v8;
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1BB872A90();
      v12 = sub_1BB874608();
      v13 = -1 << *(_BYTE *)(a2 + 32);
      v14 = v12 & ~v13;
      if (((*(_QWORD *)(v29 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_21;
      v15 = *(_QWORD *)(a2 + 48);
      v16 = (_QWORD *)(v15 + 16 * v14);
      v17 = *v16 == v9 && v16[1] == v10;
      if (!v17 && (sub_1BB874398() & 1) == 0)
      {
        v18 = ~v13;
        while (1)
        {
          v14 = (v14 + 1) & v18;
          if (((*(_QWORD *)(v29 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v14);
          v20 = *v19 == v9 && v19[1] == v10;
          if (v20 || (sub_1BB874398() & 1) != 0)
            goto LABEL_17;
        }
LABEL_21:
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
LABEL_17:
      swift_bridgeObjectRelease();
      result = v28;
      v22 = *(_QWORD *)(v28 + 16);
      v21 = *(_QWORD *)(v28 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1BAC79F38(v21 > 1, v22 + 1, 1);
        result = v28;
      }
      ++v7;
      *(_QWORD *)(result + 16) = v22 + 1;
      v23 = (_QWORD *)(result + 32 * v22);
      v23[4] = v11;
      v23[5] = v27;
      v23[6] = v9;
      v23[7] = v10;
      if (v7 == v4)
        return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_23:
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    *v24 = v9;
    v24[1] = v10;
    v24[2] = a3;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BB52BCF8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB52BD1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB52BD1C()
{
  unint64_t result;

  result = qword_1EF2C66A0;
  if (!qword_1EF2C66A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionEnum, &type metadata for FormatOptionEnum);
    atomic_store(result, (unint64_t *)&qword_1EF2C66A0);
  }
  return result;
}

unint64_t sub_1BB52BD60(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA71754C();
  a1[2] = sub_1BA63D928();
  result = sub_1BB52BD94();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB52BD94()
{
  unint64_t result;

  result = qword_1EF2C66A8;
  if (!qword_1EF2C66A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionEnum, &type metadata for FormatOptionEnum);
    atomic_store(result, (unint64_t *)&qword_1EF2C66A8);
  }
  return result;
}

uint64_t sub_1BB52BDD8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB52BDE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionEnum()
{
  return &type metadata for FormatOptionEnum;
}

uint64_t SharingPuzzleTypeActivityTypeProvider.supportedActivityTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SharingPuzzleTypeActivityTypeProvider.__allocating_init(supportedActivityTypes:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t SharingPuzzleTypeActivityTypeProvider.init(supportedActivityTypes:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t SharingPuzzleTypeActivityTypeProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SharingPuzzleTypeActivityTypeProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of SharingPuzzleTypeActivityTypeProviderType.supportedActivityTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for SharingPuzzleTypeActivityTypeProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingPuzzleTypeActivityTypeProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingPuzzleTypeActivityTypeProvider.__allocating_init(supportedActivityTypes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t PuzzleMetadata.allowedStorefrontIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMetadata.authors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMetadata.behaviorFlags.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t PuzzleMetadata.blockedStorefrontIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMetadata.dataResourceID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.difficulty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t PuzzleMetadata.isDraft.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t PuzzleMetadata.isPaid.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t PuzzleMetadata.language.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.minNewsVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.liverpooledAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PuzzleMetadata();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 60), a1, (uint64_t (*)(_QWORD))sub_1BA76D78C);
}

uint64_t type metadata accessor for PuzzleMetadata()
{
  uint64_t result;

  result = qword_1EF2C6728;
  if (!qword_1EF2C6728)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PuzzleMetadata.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PuzzleMetadata();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 64), a1, (uint64_t (*)(_QWORD))sub_1BA76D78C);
}

uint64_t PuzzleMetadata.puzzleTypeID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PuzzleMetadata() + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PuzzleMetadata() + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.teaserConfiguration.getter()
{
  type metadata accessor for PuzzleMetadata();
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMetadata.thumbnailLarge.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PuzzleMetadata() + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PuzzleMetadata() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.init(allowedStorefrontIDs:authors:behaviorFlags:blockedStorefrontIDs:dataResourceID:description:difficulty:isDraft:isPaid:language:minNewsVersion:liverpooledAt:publishDate:puzzleTypeID:subtitle:teaserConfiguration:thumbnailLarge:title:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, __int128 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int *v27;
  uint64_t result;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11;
  *(_BYTE *)(a9 + 73) = a12;
  *(_OWORD *)(a9 + 80) = a13;
  *(_QWORD *)(a9 + 96) = a14;
  *(_QWORD *)(a9 + 104) = a15;
  v27 = (int *)type metadata accessor for PuzzleMetadata();
  sub_1BA50236C(a16, a9 + v27[15]);
  result = sub_1BA50236C(a17, a9 + v27[16]);
  v29 = (_QWORD *)(a9 + v27[17]);
  *v29 = a18;
  v29[1] = a19;
  v30 = (_QWORD *)(a9 + v27[18]);
  *v30 = a20;
  v30[1] = a21;
  *(_QWORD *)(a9 + v27[19]) = a22;
  v31 = (_QWORD *)(a9 + v27[20]);
  *v31 = a23;
  v31[1] = a24;
  v32 = (_QWORD *)(a9 + v27[21]);
  *v32 = a25;
  v32[1] = a26;
  return result;
}

uint64_t sub_1BB52C2B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BB52C2EC + 4 * byte_1BB9230D8[a1]))(0xD000000000000014, 0x80000001BB990510);
}

uint64_t sub_1BB52C2EC()
{
  return 0x73726F68747561;
}

uint64_t sub_1BB52C304()
{
  return 0x726F697661686562;
}

uint64_t sub_1BB52C490()
{
  return 0x69616E626D756874;
}

uint64_t sub_1BB52C4B4()
{
  return 0x656C746974;
}

uint64_t sub_1BB52C4C8()
{
  unsigned __int8 *v0;

  return sub_1BB52C2B4(*v0);
}

uint64_t sub_1BB52C4D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB52E30C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BB52C4F4(_BYTE *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_1BB52C500()
{
  sub_1BB52D070();
  return sub_1BB874710();
}

uint64_t sub_1BB52C528()
{
  sub_1BB52D070();
  return sub_1BB87471C();
}

uint64_t PuzzleMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  BOOL v26;
  uint64_t v27;
  char v28;
  BOOL v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  int *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char v69;
  uint64_t v70;

  v67 = a2;
  sub_1BB52D018();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PuzzleMetadata();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1BB52D070();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  v65 = v11;
  v66 = v6;
  v64 = (int *)v9;
  sub_1BA6D249C();
  v69 = 0;
  sub_1BA6113B4();
  sub_1BB874068();
  v14 = v65;
  *(_QWORD *)v65 = v70;
  v69 = 1;
  sub_1BB874068();
  v14[1] = v70;
  LOBYTE(v70) = 2;
  v63 = 0;
  v15 = sub_1BB874050();
  if ((v16 & 1) != 0)
    v17 = 0;
  else
    v17 = v15;
  v14[2] = v17;
  v69 = 3;
  sub_1BB874068();
  v14[3] = v70;
  LOBYTE(v70) = 4;
  v14[4] = sub_1BB87402C();
  v14[5] = v18;
  LOBYTE(v70) = 5;
  v14[6] = sub_1BB87402C();
  v14[7] = v19;
  LOBYTE(v70) = 6;
  v20 = sub_1BB874080();
  if ((v21 & 1) != 0)
    v22 = 0;
  else
    v22 = v20;
  v14[8] = v22;
  LOBYTE(v70) = 7;
  v23 = sub_1BB874050();
  v26 = (v24 & 1) == 0 && v23 != 0;
  v65[72] = v26;
  LOBYTE(v70) = 8;
  v27 = sub_1BB874050();
  v30 = (v28 & 1) == 0 && v27 != 0;
  v65[73] = v30;
  LOBYTE(v70) = 9;
  v31 = sub_1BB87402C();
  v32 = v65;
  *((_QWORD *)v65 + 10) = v31;
  *((_QWORD *)v32 + 11) = v33;
  LOBYTE(v70) = 10;
  v34 = sub_1BB87402C();
  v36 = 3157561;
  if (v35)
    v36 = v34;
  v37 = 0xE300000000000000;
  if (v35)
    v37 = v35;
  v38 = v65;
  *((_QWORD *)v65 + 12) = v36;
  *((_QWORD *)v38 + 13) = v37;
  LOBYTE(v70) = 11;
  sub_1BB874044();
  v40 = &v65[v64[15]];
  if ((v39 & 1) != 0)
  {
    v42 = sub_1BB86C8B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v40, 1, 1, v42);
  }
  else
  {
    sub_1BB86C850();
    v41 = sub_1BB86C8B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
  LOBYTE(v70) = 12;
  sub_1BB874044();
  v44 = &v65[v64[16]];
  if ((v43 & 1) != 0)
  {
    v46 = sub_1BB86C8B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v44, 1, 1, v46);
  }
  else
  {
    sub_1BB86C850();
    v45 = sub_1BB86C8B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
  }
  LOBYTE(v70) = 13;
  v47 = sub_1BB87402C();
  if (v48)
    v49 = v47;
  else
    v49 = 0;
  v50 = 0xE000000000000000;
  if (v48)
    v50 = v48;
  v51 = (uint64_t *)&v65[v64[17]];
  *v51 = v49;
  v51[1] = v50;
  LOBYTE(v70) = 14;
  v52 = sub_1BB87402C();
  v53 = (uint64_t *)&v65[v64[18]];
  *v53 = v52;
  v53[1] = v54;
  sub_1BB52D0B4();
  v69 = 15;
  sub_1BB52D118();
  sub_1BB874068();
  *(_QWORD *)&v65[v64[19]] = v70;
  LOBYTE(v70) = 16;
  v55 = sub_1BB87402C();
  v56 = (uint64_t *)&v65[v64[20]];
  *v56 = v55;
  v56[1] = v57;
  LOBYTE(v70) = 17;
  v58 = sub_1BB87402C();
  v60 = v59;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v8, v5);
  v61 = (uint64_t)v65;
  v62 = (uint64_t *)&v65[v64[21]];
  *v62 = v58;
  v62[1] = v60;
  sub_1BA4C2DD8(v61, v67, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleMetadata);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  return sub_1BA4A2E80(v61, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleMetadata);
}

void sub_1BB52D018()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C66B0)
  {
    sub_1BB52D070();
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C66B0);
  }
}

unint64_t sub_1BB52D070()
{
  unint64_t result;

  result = qword_1EF2C66B8;
  if (!qword_1EF2C66B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9232B4, &type metadata for PuzzleMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C66B8);
  }
  return result;
}

void sub_1BB52D0B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C66C0)
  {
    sub_1BAACF73C();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C66C0);
  }
}

unint64_t sub_1BB52D118()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  result = qword_1EF2C66C8;
  if (!qword_1EF2C66C8)
  {
    sub_1BB52D0B4();
    v2 = v1;
    v3 = sub_1BB52D180();
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF2C66C8);
  }
  return result;
}

unint64_t sub_1BB52D180()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF2AFB50;
  if (!qword_1EF2AFB50)
  {
    sub_1BAACF73C();
    v2[0] = MEMORY[0x1E0DEA9A0];
    v2[1] = MEMORY[0x1E0DEA9A0];
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF2AFB50);
  }
  return result;
}

uint64_t sub_1BB52D1D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleMetadata.init(from:)(a1, a2);
}

uint64_t initializeBufferWithCopyOfBuffer for PuzzleMetadata(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v40;
  uint64_t v41;
  void *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    v9 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v9;
    v10 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v10;
    v11 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v11;
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_BYTE *)(a1 + 73) = *((_BYTE *)a2 + 73);
    v12 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v12;
    v13 = a2[13];
    v14 = a3[15];
    __dst = (void *)(a1 + v14);
    v40 = (char *)a2 + v14;
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v13;
    v15 = sub_1BB86C8B0();
    v41 = *(_QWORD *)(v15 - 8);
    v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v40, 1, v15))
    {
      sub_1BA76D78C();
      memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      v18 = v41;
    }
    else
    {
      v18 = v41;
      (*(void (**)(void *, char *, uint64_t))(v41 + 16))(__dst, v40, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v15);
    }
    v19 = a3[16];
    v20 = (void *)(v7 + v19);
    v21 = (char *)a2 + v19;
    if (v16((char *)a2 + v19, 1, v15))
    {
      sub_1BA76D78C();
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v20, v21, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v15);
    }
    v23 = a3[17];
    v24 = a3[18];
    v25 = (_QWORD *)(v7 + v23);
    v26 = (uint64_t *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = (_QWORD *)(v7 + v24);
    v29 = (uint64_t *)((char *)a2 + v24);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = a3[20];
    *(_QWORD *)(v7 + a3[19]) = *(uint64_t *)((char *)a2 + a3[19]);
    v32 = (_QWORD *)(v7 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = a3[21];
    v36 = (_QWORD *)(v7 + v35);
    v37 = (uint64_t *)((char *)a2 + v35);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for PuzzleMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 60);
  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 64);
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  const void *v36;
  uint64_t v37;
  void *__dst;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = *(_QWORD *)(a2 + 104);
  v11 = a3[15];
  __dst = (void *)(a1 + v11);
  v36 = (const void *)(a2 + v11);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  v12 = sub_1BB86C8B0();
  v37 = *(_QWORD *)(v12 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v36, 1, v12))
  {
    sub_1BA76D78C();
    memcpy(__dst, v36, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v37 + 16))(__dst, v36, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v12);
  }
  v15 = a3[16];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if (v13((const void *)(a2 + v15), 1, v12))
  {
    sub_1BA76D78C();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v37 + 16))(v16, v17, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v16, 0, 1, v12);
  }
  v19 = a3[17];
  v20 = a3[18];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (_QWORD *)(a1 + v20);
  v25 = (_QWORD *)(a2 + v20);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[21];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[15];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1BB86C8B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1BA76D78C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[16];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_1BA76D78C();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  v21 = a3[17];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[18];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = a3[20];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = a3[21];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PuzzleMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  v8 = *(_OWORD *)(a2 + 96);
  v9 = a3[15];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  v12 = sub_1BB86C8B0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    sub_1BA76D78C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = a3[16];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    sub_1BA76D78C();
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  v20 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  v21 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  return a1;
}

uint64_t assignWithTake for PuzzleMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  v11 = a3[15];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1BB86C8B0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    sub_1BA76D78C();
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = a3[16];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = v16((void *)(a1 + v20), 1, v14);
  v24 = v16(v22, 1, v14);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v21, v22, v14);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v21, v14);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    sub_1BA76D78C();
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v21, v22, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
LABEL_13:
  v26 = a3[17];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[18];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRelease();
  v36 = a3[20];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (uint64_t *)(a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = a3[21];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (uint64_t *)(a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB52DFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 104);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA76D78C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 60), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB52E034(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 104) = (a2 - 1);
  }
  else
  {
    sub_1BA76D78C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 60), a2, a2, v7);
  }
  return result;
}

void sub_1BB52E0A8()
{
  unint64_t v0;

  sub_1BA76D78C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for PuzzleMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1BB52E1B4 + 4 * byte_1BB9230EF[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1BB52E1E8 + 4 * byte_1BB9230EA[v4]))();
}

uint64_t sub_1BB52E1E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB52E1F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB52E1F8);
  return result;
}

uint64_t sub_1BB52E204(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB52E20CLL);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1BB52E210(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB52E218(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMetadata.CodingKeys()
{
  return &type metadata for PuzzleMetadata.CodingKeys;
}

unint64_t sub_1BB52E238()
{
  unint64_t result;

  result = qword_1EF2C67A0;
  if (!qword_1EF2C67A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92328C, &type metadata for PuzzleMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C67A0);
  }
  return result;
}

unint64_t sub_1BB52E280()
{
  unint64_t result;

  result = qword_1EF2C67A8;
  if (!qword_1EF2C67A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9231FC, &type metadata for PuzzleMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C67A8);
  }
  return result;
}

unint64_t sub_1BB52E2C8()
{
  unint64_t result;

  result = qword_1EF2C67B0;
  if (!qword_1EF2C67B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB923224, &type metadata for PuzzleMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C67B0);
  }
  return result;
}

uint64_t sub_1BB52E30C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001BB990510 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726F68747561 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F697661686562 && a2 == 0xED00007367616C46 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB990530 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F73655261746164 && a2 == 0xEE00444965637275 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C75636966666964 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74666172447369 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x646961507369 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x567377654E6E696DLL && a2 == 0xEE006E6F69737265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6F6F70726576696CLL && a2 == 0xED0000744164656CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x7954656C7A7A7570 && a2 == 0xEC00000044496570 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB990550 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x69616E626D756874 && a2 == 0xEE00656772614C6CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 17;
    else
      return 18;
  }
}

uint64_t sub_1BB52EB1C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = sub_1BB86D0F0();
  v24 = *(_QWORD *)(v1 - 8);
  v25 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - v6;
  v8 = objc_msgSend(v0, sel_topicsConfig, v5);
  sub_1BB52EDFC();
  v9 = sub_1BB872DB4();

  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9E0];
LABEL_12:
    swift_bridgeObjectRelease();
    return v13;
  }
  swift_bridgeObjectRetain();
  result = sub_1BB873F30();
  v10 = result;
  if (!result)
    goto LABEL_11;
LABEL_3:
  if (v10 >= 1)
  {
    v12 = 0;
    v21 = v9 & 0xC000000000000001;
    v13 = MEMORY[0x1E0DEE9E0];
    v22 = v10;
    v23 = v9;
    do
    {
      if (v21)
        v14 = (id)MEMORY[0x1BCCE4630](v12, v9);
      else
        v14 = *(id *)(v9 + 8 * v12 + 32);
      v15 = v14;
      ++v12;
      v16 = objc_msgSend(v14, sel_topicID, v21);
      v17 = sub_1BB8729A0();
      v19 = v18;

      objc_msgSend(v15, sel_capAtBaseline);
      objc_msgSend(v15, sel_halfLifeCoefficientOverride);
      objc_msgSend(v15, sel_limitInGroup);
      objc_msgSend(v15, sel_publisherTopicWeight);
      objc_msgSend(v15, sel_scoreMultiplier);
      objc_msgSend(v15, sel_shouldLimitInGroup);
      objc_msgSend(v15, sel_tagWeight);
      objc_msgSend(v15, sel_useHalfLifeCoefficientOverride);
      sub_1BB86D0E4();
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v3, v7, v25);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26 = v13;
      sub_1BB4C0D28((uint64_t)v3, v17, v19, isUniquelyReferenced_nonNull_native);
      v13 = v26;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v23;
    }
    while (v22 != v12);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BB52EDFC()
{
  unint64_t result;

  result = qword_1ED3A0928;
  if (!qword_1ED3A0928)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3A0928);
  }
  return result;
}

uint64_t FeedJournalGroupResultKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB52EE60 + 4 * byte_1BB923310[*v0]))(1954047342, 0xE400000000000000);
}

uint64_t sub_1BB52EE60()
{
  return 1953718636;
}

uint64_t sub_1BB52EE6C()
{
  return 1819242352;
}

uint64_t sub_1BB52EE78()
{
  return 0x646570706F7264;
}

uint64_t sub_1BB52EE90()
{
  return 0x7972746572;
}

uint64_t sub_1BB52EEA4()
{
  return 1885956979;
}

uint64_t sub_1BB52EEB0()
{
  return 1701736302;
}

NewsFeed::FeedJournalGroupResultKind_optional __swiftcall FeedJournalGroupResultKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedJournalGroupResultKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1BB52EF14(char *a1)
{
  sub_1BB8050A4(*a1);
}

void sub_1BB52EF20()
{
  char *v0;

  sub_1BAB0B558(0, *v0);
}

void sub_1BB52EF2C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB52EF60()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB52EFD0(uint64_t a1)
{
  char *v1;

  sub_1BAB0B558(a1, *v1);
}

NewsFeed::FeedJournalGroupResultKind_optional sub_1BB52EFD8(Swift::String *a1)
{
  return FeedJournalGroupResultKind.init(rawValue:)(*a1);
}

uint64_t sub_1BB52EFE4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB52F00C + 4 * byte_1BB92331E[*v0]))();
}

void sub_1BB52F00C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1953718636;
  a1[1] = v1;
}

void sub_1BB52F01C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1819242352;
  a1[1] = v1;
}

void sub_1BB52F02C(_QWORD *a1@<X8>)
{
  *a1 = 0x646570706F7264;
  a1[1] = 0xE700000000000000;
}

void sub_1BB52F048(_QWORD *a1@<X8>)
{
  *a1 = 0x7972746572;
  a1[1] = 0xE500000000000000;
}

void sub_1BB52F060(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1885956979;
  a1[1] = v1;
}

void sub_1BB52F070(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1701736302;
  a1[1] = v1;
}

void FeedJournalGroupResultKind.description.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB52F0BC()
{
  uint64_t v0;

  sub_1BA7114A0();
  v0 = sub_1BB873ABC();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1BB52F160()
{
  unint64_t result;

  result = qword_1EF2C67B8;
  if (!qword_1EF2C67B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedJournalGroupResultKind, &type metadata for FeedJournalGroupResultKind);
    atomic_store(result, (unint64_t *)&qword_1EF2C67B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedJournalGroupResultKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB52F1F4 + 4 * byte_1BB923331[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB52F228 + 4 * byte_1BB92332C[v4]))();
}

uint64_t sub_1BB52F228(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB52F230(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB52F238);
  return result;
}

uint64_t sub_1BB52F244(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB52F24CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB52F250(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB52F258(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedJournalGroupResultKind()
{
  return &type metadata for FeedJournalGroupResultKind;
}

uint64_t sub_1BB52F274(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v16 - v5;
  v16[1] = a1;
  swift_getKeyPath();
  sub_1BA657B44();
  sub_1BB86DB70();
  sub_1BA656FEC();
  sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
  v12 = v11 + v10;
  v13 = *MEMORY[0x1E0DB5C38];
  sub_1BA6577C0(0, &qword_1ED3B0658, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E0DB5C68], v8);
  sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10], MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BB52F484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v15[-v7];
  v17 = a1;
  v9 = swift_allocObject();
  v10 = (_QWORD *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 24));
  v11 = v10[3];
  v12 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  *(double *)(v9 + 16) = (*(double (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F0], v5);
  v16 = a2;
  v13 = MEMORY[0x1E0DB5B80];
  sub_1BA65781C(0, &qword_1ED3B0648, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5B80]);
  sub_1BA657898(&qword_1ED3B0640, &qword_1ED3B0648, (uint64_t (*)(uint64_t, _QWORD *))v13, MEMORY[0x1E0DB5B88]);
  sub_1BB86D498();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB52F60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v15)(uint64_t, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a2;
  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v37 - v7);
  v39 = a1;
  v44 = a1;
  swift_getKeyPath();
  v9 = swift_allocObject();
  v10 = type metadata accessor for HeadlineViewLayout.Context(0);
  v11 = (_QWORD *)(a2 + *(int *)(v10 + 24));
  v12 = v11[3];
  v13 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  *(double *)(v9 + 16) = (*(double (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  *v8 = v9;
  v14 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104);
  v14(v8, *MEMORY[0x1E0DB63F0], v5);
  v15 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  v18 = sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v15, MEMORY[0x1E0DB5A18]);
  v19 = sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  v41 = v18;
  v42 = v17;
  v40 = v19;
  sub_1BB86D4E0();
  swift_release();
  v20 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v21 = v5;
  v20(v8, v5);
  v22 = v43 + *(int *)(v10 + 20);
  result = type metadata accessor for FeedHeadline(0);
  v24 = (unsigned __int8 *)(v22 + *(int *)(result + 40));
  if (v24[1] != 1 || *v24 <= 1u)
  {
    v25 = v39;
    v44 = v39;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = 0x4010000000000000;
    *v8 = v26;
    v14(v8, *MEMORY[0x1E0DB63E8], v5);
    v38 = (uint64_t (*)(uint64_t *, uint64_t))v20;
    sub_1BB86D4EC();
    v20(v8, v5);
    v44 = v25;
    swift_getKeyPath();
    v27 = v11[3];
    v28 = v11[4];
    __swift_project_boxed_opaque_existential_1(v11, v27);
    (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
    sub_1BA657B44();
    sub_1BB86DB70();
    sub_1BA656FEC();
    sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v30 = v29;
    v31 = *(_QWORD *)(v29 - 8);
    v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
    v34 = v33 + v32;
    v35 = *MEMORY[0x1E0DB5C58];
    sub_1BA6577C0(0, &qword_1ED3B0658, MEMORY[0x1E0DB5C60]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v34, v35, v36);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v31 + 104))(v34, *MEMORY[0x1E0DB5C68], v30);
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return v38(v8, v21);
  }
  return result;
}

uint64_t sub_1BB52F9F0()
{
  return swift_deallocObject();
}

uint64_t sub_1BB52FA00()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for HeadlineViewLayout.Context(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_release();
  v3 = v2 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v4 = (int *)type metadata accessor for FeedHeadline(0);
  v5 = v4[10];
  v6 = v3 + v5 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  v7 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);

    v9 = v6 + *(int *)(v7 + 28);
    v10 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = v3 + v4[11];
  v12 = sub_1BB871B24();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  if (*(_QWORD *)(v3 + v4[12] + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + v4[13]) >= 3uLL)
    swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v2 + *(int *)(v1 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB52FC2C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB52F60C(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V7()
{
  return &type metadata for A12_V7;
}

uint64_t sub_1BB52FC54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C68E8, (uint64_t (*)(void))sub_1BB53231C, (uint64_t)&type metadata for A12_V7.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB53231C();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB52FE08()
{
  sub_1BB53231C();
  return sub_1BB874710();
}

uint64_t sub_1BB52FE30()
{
  sub_1BB53231C();
  return sub_1BB87471C();
}

double sub_1BB52FE58@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB532108(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB52FE9C(_QWORD *a1)
{
  return sub_1BB52FC54(a1);
}

uint64_t sub_1BB52FEB0()
{
  sub_1BB531E88();
  return sub_1BB86D96C();
}

uint64_t sub_1BB52FF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  unsigned __int8 v74;
  ValueMetadata *v75;
  unint64_t v76;
  uint64_t v77;

  v62 = a2;
  v55 = a3;
  v56 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v61 = type metadata accessor for GroupLayoutBindingContext();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v66 = a1;
  sub_1BA4C2DD8(a1, v59, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v58 = sub_1BB86C8C8();
  v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v75 = &type metadata for A12_V7;
  v20 = sub_1BA8EE3C4();
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v67 = sub_1BB874734();
  v68 = v22;
  v71 = 95;
  v72 = 0xE100000000000000;
  v69 = 45;
  v70 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v57;
  *v26 = v58;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v73, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v59, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v28, 0, 1, v61);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v29, 0, 1, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  sub_1BA7C2538(v16, v17);
  v75 = &type metadata for A12_V7;
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  sub_1BA4C2DD8(v62, v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v65;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E7269D50, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v31;
    v42 = (_QWORD *)(v41 + 16);
    swift_beginAccess();
    v43 = *(_QWORD **)(v41 + 16);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v41 + 16) = v43;
    if ((v44 & 1) == 0)
    {
      v43 = sub_1BA7892A0(0, v43[2] + 1, 1, v43);
      *v42 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
    {
      v43 = sub_1BA7892A0((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
      *v42 = v43;
    }
    v43[2] = v46 + 1;
    v47 = &v43[2 * v46];
    v47[4] = sub_1BACB8D7C;
    v47[5] = 0;
    swift_endAccess();
    v49 = sub_1BA7E1F18((uint64_t)&unk_1E7269D78, 0, 0, v41, 0, 0, 0, 0);
    swift_release();
    v67 = v40;
    sub_1BA7DD6A0(v49);
    v50 = v67;
    v51 = type metadata accessor for A12_V7.Bound();
    v52 = v55;
    v55[3] = v51;
    v52[4] = sub_1BA4A2870(qword_1EF2C67D0, (uint64_t (*)(uint64_t))type metadata accessor for A12_V7.Bound, (uint64_t)&unk_1BB923610);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v73, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v77, (uint64_t)boxed_opaque_existential_0 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v51 + 28)) = v50;
  }
  return result;
}

double sub_1BB53054C@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _BYTE *v47;
  _QWORD v48[6];
  char v49[105];
  __int128 v50[9];
  __int128 v51[2];
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = v1;
  v47 = a1;
  v3 = sub_1BB86DA38();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x1E0C80A78](v3);
  *(_QWORD *)&v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v6 = type metadata accessor for A12_V7.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(v7 + *(int *)(v8 + 40));
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(int *)(v8 + 32);
  v44 = v7;
  v12 = *(double *)(v7 + v11);
  sub_1BA4C010C(v10 + 16, (uint64_t)&v52);
  sub_1BA4C010C(v10 + 56, (uint64_t)v51);
  v13 = v12 * *(double *)(v10 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v52, v14 + 16);
  sub_1BA4CECCC(v51, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v50[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v50, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v9 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v51);
  sub_1BA4C010C(v15 + 56, (uint64_t)v50);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v51, v17 + 16);
  sub_1BA4CECCC(v50, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v49[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v49, (uint64_t *)&v52);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v18 = sub_1BA6B5B08((uint64_t)&v52, *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v6 + 28)) + 16) - 1);
  *(_QWORD *)&v52 = inited;
  sub_1BA6B5BE8(v18);
  v19 = v52;
  v46 = v2;
  v48[2] = v2;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BACB8FF0(v20, v19, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 16);
  sub_1BB874434();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v23 = swift_dynamicCastClass();
  if (!v23)
  {
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
  }
  v24 = *(_QWORD *)(v23 + 16);
  swift_release();
  if (v24 == v22 - (v22 != 0))
  {
    v25 = swift_dynamicCastClass();
    if (!v25)
    {
      swift_bridgeObjectRelease();
      v25 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v40 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    v25 = sub_1BA85CDD8(v21, v21 + ((v40 + 32) & ~v40), v22 != 0, (2 * v22) | 1);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v52 = v25;
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v27 = v26;
  sub_1BA8F1DA0(&qword_1EF2A9F08, MEMORY[0x1E0DEAF50]);
  v41 = v27;
  sub_1BB8730F0();
  swift_release();
  v28 = *MEMORY[0x1E0DB5D88];
  v29 = sub_1BB86D678();
  v30 = v45;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v45, v28, v29);
  v31 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v42 + 104))(v30, *MEMORY[0x1E0DB6200], v43);
  MEMORY[0x1E0C80A78](v31);
  sub_1BB531F2C(0, &qword_1EF2C6878, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v32 = sub_1BB86DB40();
  v45 = v52;
  v33 = v53;
  v34 = v54;
  *(_QWORD *)&v52 = v21;
  *(_QWORD *)&v51[0] = v55;
  MEMORY[0x1E0C80A78](v32);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA8F1DA0((unint64_t *)&qword_1ED3B94C0, MEMORY[0x1E0DEAF38]);
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v35 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v52 = v35;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v36 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = v47;
  *v47 = 0;
  result = *(double *)&v45;
  *(_OWORD *)(v37 + 8) = v45;
  *((_QWORD *)v37 + 3) = v33;
  *((_QWORD *)v37 + 4) = v34;
  v39 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v37 + 5) = v36;
  *((_QWORD *)v37 + 6) = v39;
  return result;
}

uint64_t sub_1BB530B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2C6890, (uint64_t (*)(void))sub_1BB531E44, (uint64_t)&type metadata for A12_V7.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 12;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BB531F2C(0, &qword_1EF2C6898, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB531EEC(&qword_1EF2C68A0, &qword_1EF2C6898, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BB530CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD);
  uint64_t v12;
  void (*v13)(uint64_t *);
  uint64_t (*v14)(uint64_t, _QWORD *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(uint64_t *);
  uint64_t (*v28)(uint64_t *, uint64_t);
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  void (*v45)(uint64_t, _QWORD, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a3;
  v42 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C6890, (uint64_t (*)(void))sub_1BB531E44, (uint64_t)&type metadata for A12_V7.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v39 - v7);
  v49 = a1;
  v9 = sub_1BB86D438();
  v10 = swift_allocBox();
  v11 = *(void (**)(_QWORD))(*(_QWORD *)(v9 - 8) + 104);
  v43 = *MEMORY[0x1E0DB5A38];
  v45 = (void (*)(uint64_t, _QWORD, uint64_t))v11;
  v11(v12);
  *v8 = v10;
  v13 = *(void (**)(uint64_t *))(v6 + 104);
  v44 = *MEMORY[0x1E0DB6318];
  v13(v8);
  v14 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB531F2C(0, &qword_1EF2C68A8, MEMORY[0x1E0DB5A10]);
  v16 = v15;
  v17 = sub_1BB531EEC(&qword_1EF2C68B0, &qword_1EF2C68A8, v14, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v18 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v18(v8, v5);
  v46 = a1;
  v49 = a1;
  sub_1BAA71EEC();
  v20 = v19;
  v21 = swift_allocBox();
  v23 = (char *)v22 + *(int *)(v20 + 48);
  *v22 = 7;
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = v23;
  v27 = v13;
  v28 = (uint64_t (*)(uint64_t *, uint64_t))v18;
  v29 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v26, v24, v25);
  *v8 = v21;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v27)(v8, *MEMORY[0x1E0DB6338], v5);
  v48 = v42;
  sub_1BB86D498();
  result = v28(v8, v5);
  v31 = *(_QWORD *)(v47 + 16);
  if (v31)
  {
    swift_bridgeObjectRetain();
    v32 = 0;
    LODWORD(v42) = *MEMORY[0x1E0DB63C0];
    v40 = v31;
    v41 = v9;
    v39[1] = v17;
    v39[2] = v29;
    do
    {
      v33 = v46;
      ++v32;
      v49 = v46;
      v34 = v41;
      v35 = swift_allocBox();
      v45(v36, v43, v34);
      *v8 = v35;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v27)(v8, v44, v5);
      swift_bridgeObjectRetain();
      sub_1BB86D4EC();
      v28(v8, v5);
      v49 = v33;
      v37 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v27)(v8, v42, v5);
      MEMORY[0x1E0C80A78](v37);
      sub_1BB86D498();
      v38 = v40;
      v28(v8, v5);
      swift_bridgeObjectRelease();
    }
    while (v38 != v32);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BB531068(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t (*v24)(uint64_t, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C6890, (uint64_t (*)(void))sub_1BB531E44, (uint64_t)&type metadata for A12_V7.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - v14;
  v28 = a1;
  swift_getKeyPath();
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB63C0], v12);
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v17 = (char *)v6 + v4[5];
    v27 = v12;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v26 = v13;
    v20 = v19;
    v21 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    v22 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 1;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v22;
    v23 = v22;
    sub_1BAB62528((uint64_t)v10, (uint64_t)v6);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v24 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB531F2C(0, &qword_1EF2C68A8, MEMORY[0x1E0DB5A10]);
    sub_1BB531EEC(&qword_1EF2C68B0, &qword_1EF2C68A8, v24, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v15, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB53131C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2C6890, (uint64_t (*)(void))sub_1BB531E44, (uint64_t)&type metadata for A12_V7.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB531F2C(0, &qword_1EF2C68A8, MEMORY[0x1E0DB5A10]);
  sub_1BB531EEC(&qword_1EF2C68B0, &qword_1EF2C68A8, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 6;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BB531504(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C6890, (uint64_t (*)(void))sub_1BB531E44, (uint64_t)&type metadata for A12_V7.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16))
  {
    v14 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    v15 = a2 + ((v14 + 32) & ~v14);
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB531F2C(0, &qword_1EF2C68A8, MEMORY[0x1E0DB5A10]);
    sub_1BB531EEC(&qword_1EF2C68B0, &qword_1EF2C68A8, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB5317B8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C6890, (uint64_t (*)(void))sub_1BB531E44, (uint64_t)&type metadata for A12_V7.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for HeadlineViewLayout.Context(0);
    v15 = a2
        + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72)
        + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80));
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB531F2C(0, &qword_1EF2C68A8, MEMORY[0x1E0DB5A10]);
    sub_1BB531EEC(&qword_1EF2C68B0, &qword_1EF2C68A8, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1BB531A78@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V7.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB531B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB52FF18(a1, a2, a3);
}

uint64_t sub_1BB531B6C()
{
  return sub_1BB690B48();
}

unint64_t sub_1BB531B7C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB531BA8();
  result = sub_1BB531BEC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB531BA8()
{
  unint64_t result;

  result = qword_1EF2C67C0;
  if (!qword_1EF2C67C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92355C, &type metadata for A12_V7);
    atomic_store(result, (unint64_t *)&qword_1EF2C67C0);
  }
  return result;
}

unint64_t sub_1BB531BEC()
{
  unint64_t result;

  result = qword_1EF2C67C8;
  if (!qword_1EF2C67C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB923584, &type metadata for A12_V7);
    atomic_store(result, (unint64_t *)&qword_1EF2C67C8);
  }
  return result;
}

uint64_t type metadata accessor for A12_V7.Bound()
{
  uint64_t result;

  result = qword_1EF2C6830;
  if (!qword_1EF2C6830)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB531C6C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB531C78(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB531CF4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB531D00(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB531D74()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB531E00(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C6870, (uint64_t (*)(uint64_t))type metadata accessor for A12_V7.Bound, (uint64_t)&unk_1BB9235E8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB531E3C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB530B6C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BB531E44()
{
  unint64_t result;

  result = qword_1EF2C6880;
  if (!qword_1EF2C6880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB923740, &type metadata for A12_V7.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2C6880);
  }
  return result;
}

unint64_t sub_1BB531E88()
{
  unint64_t result;

  result = qword_1EF2C6888;
  if (!qword_1EF2C6888)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB923710, &type metadata for A12_V7.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C6888);
  }
  return result;
}

uint64_t sub_1BB531ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB531A78(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB531ED4()
{
  return swift_deallocObject();
}

uint64_t sub_1BB531EE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB530CC8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB531EEC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB531F2C(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB531F2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V7.Layout;
    v8[1] = &type metadata for A12_V7.Layout.Attributes;
    v8[2] = sub_1BB531E44();
    v8[3] = sub_1BB531E88();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB531FA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB531068(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB531FB0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB53131C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB531FB8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB531504(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB531FC0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB5317B8(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V7.Layout.Attributes()
{
  return &type metadata for A12_V7.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V7.Layout()
{
  return &type metadata for A12_V7.Layout;
}

unint64_t sub_1BB531FEC()
{
  unint64_t result;

  result = qword_1EF2C68B8;
  if (!qword_1EF2C68B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9236B0, &type metadata for A12_V7.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C68B8);
  }
  return result;
}

unint64_t sub_1BB532034()
{
  unint64_t result;

  result = qword_1EF2C68C0;
  if (!qword_1EF2C68C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB923688, &type metadata for A12_V7.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C68C0);
  }
  return result;
}

unint64_t sub_1BB53207C()
{
  unint64_t result;

  result = qword_1EF2C68C8;
  if (!qword_1EF2C68C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB923660, &type metadata for A12_V7.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C68C8);
  }
  return result;
}

unint64_t sub_1BB5320C4()
{
  unint64_t result;

  result = qword_1EF2C68D0;
  if (!qword_1EF2C68D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9236D8, &type metadata for A12_V7.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C68D0);
  }
  return result;
}

uint64_t sub_1BB532108@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C68D8, (uint64_t (*)(void))sub_1BB53231C, (uint64_t)&type metadata for A12_V7.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB53231C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB53231C()
{
  unint64_t result;

  result = qword_1EF2C68E0;
  if (!qword_1EF2C68E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB923834, &type metadata for A12_V7.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C68E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V7.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB5323AC + 4 * byte_1BB92354D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB5323E0 + 4 * byte_1BB923548[v4]))();
}

uint64_t sub_1BB5323E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5323E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB5323F0);
  return result;
}

uint64_t sub_1BB5323FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB532404);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB532408(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB532410(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V7.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V7.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB532430()
{
  unint64_t result;

  result = qword_1EF2C68F0;
  if (!qword_1EF2C68F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92380C, &type metadata for A12_V7.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C68F0);
  }
  return result;
}

unint64_t sub_1BB532478()
{
  unint64_t result;

  result = qword_1EF2C68F8;
  if (!qword_1EF2C68F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92377C, &type metadata for A12_V7.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C68F8);
  }
  return result;
}

unint64_t sub_1BB5324C0()
{
  unint64_t result;

  result = qword_1EF2C6900;
  if (!qword_1EF2C6900)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9237A4, &type metadata for A12_V7.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6900);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatDevice(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 30 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 30) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE1)
    return ((uint64_t (*)(void))((char *)&loc_1BB532550 + 4 * byte_1BB923895[v4]))();
  *a1 = a2 + 30;
  return ((uint64_t (*)(void))((char *)sub_1BB532584 + 4 * byte_1BB923890[v4]))();
}

uint64_t sub_1BB532584(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB53258C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB532594);
  return result;
}

uint64_t sub_1BB5325A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB5325A8);
  *(_BYTE *)result = a2 + 30;
  return result;
}

uint64_t sub_1BB5325AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5325B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatDevice()
{
  return &type metadata for DebugFormatDevice;
}

unint64_t sub_1BB5325D4()
{
  unint64_t result;

  result = qword_1EF2C6908;
  if (!qword_1EF2C6908)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB923A04, &type metadata for DebugFormatDevice);
    atomic_store(result, (unint64_t *)&qword_1EF2C6908);
  }
  return result;
}

uint64_t sub_1BB532618(uint64_t a1, void *a2, unsigned __int8 a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  _QWORD v27[11];
  unsigned __int8 v28;

  *(double *)&v27[4] = a11;
  *(double *)&v27[5] = a10;
  *(double *)&v27[6] = a9;
  *(double *)&v27[7] = a8;
  v14 = sub_1BB86D93C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB532E4C(a2, a3);
  v18 = objc_msgSend(a2, sel_traitCollection);
  v27[10] = a1;
  v28 = a3;
  v19 = (void *)sub_1BB8734A4();

  objc_msgSend(a2, sel_layoutMargins);
  if (a3 < 0x17u || a3 - 23 < 6)
  {
    sub_1BB87327C();
    sub_1BB873270();
  }
  sub_1BB86DC3C();
  sub_1BB873624();
  v27[2] = v21;
  v27[3] = v20;
  sub_1BB873618();
  v27[0] = v23;
  v27[1] = v22;
  v24 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v24, sel_nativeBounds);

  objc_msgSend((id)objc_opt_self(), sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, objc_msgSend(a2, sel_semanticContentAttribute));
  v25 = objc_msgSend(v19, sel_preferredContentSizeCategory);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DB6098], v14);
  return sub_1BB86D6F0();
}

uint64_t sub_1BB53290C(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_1BB87183C();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB87186C();
  MEMORY[0x1BCCE3D00]();
  sub_1BB871830();
  MEMORY[0x1BCCE3D0C](v5);
  sub_1BB871848();
  MEMORY[0x1BCCE3D00]();
  sub_1BB871830();
  MEMORY[0x1BCCE3D0C](v5);
  sub_1BB871860();
  MEMORY[0x1BCCE3D00]();
  sub_1BB871830();
  MEMORY[0x1BCCE3D0C](v5);
  result = sub_1BB533A20(a2);
  if (result >> 6 && result >> 6 != 1)
  {
    if (result != 128)
      return result;
  }
  else
  {
    MEMORY[0x1BCCE3D00]();
    sub_1BB871800();
    v7 = MEMORY[0x1BCCE3D0C](v5);
    MEMORY[0x1BCCE3D00](v7);
    sub_1BB8717DC();
    result = MEMORY[0x1BCCE3D0C](v5);
  }
  MEMORY[0x1BCCE3D00](result);
  sub_1BB8717E8();
  return MEMORY[0x1BCCE3D0C](v5);
}

uint64_t sub_1BB532AE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB532B24 + 4 * byte_1BB92389A[a1]))(0x5320656E6F685069, 0xE900000000000045);
}

uint64_t sub_1BB532B24()
{
  return 0x5820656E6F685069;
}

uint64_t sub_1BB532B3C()
{
  return 0x5820656E6F685069;
}

uint64_t sub_1BB532B54()
{
  return 0x5820656E6F685069;
}

uint64_t sub_1BB532B78()
{
  return 0x3120656E6F685069;
}

uint64_t sub_1BB532B94()
{
  return 0x3120656E6F685069;
}

unint64_t sub_1BB532BB8()
{
  return 0xD000000000000011;
}

uint64_t sub_1BB532D94()
{
  return 1684099177;
}

uint64_t sub_1BB532DA4()
{
  return 0x7269412064615069;
}

uint64_t sub_1BB532DBC()
{
  return 0x6E694D2064615069;
}

uint64_t sub_1BB532DD4()
{
  return 0x6F72502064615069;
}

void sub_1BB532E4C(void *a1, unsigned __int8 a2)
{
  id v4;
  void *v5;
  id v6;

  objc_msgSend(a1, sel_bounds);
  sub_1BB5337F8(a2);
  if ((a2 - 23) <= 5u)
  {
    v4 = objc_msgSend(a1, sel_window);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, sel_windowScene);

      if (v6)
      {
        objc_msgSend(v6, sel_interfaceOrientation);

      }
    }
  }
}

uint64_t sub_1BB532F40(uint64_t a1, uint64_t a2, char a3)
{
  void *v5;
  id v6;
  uint64_t result;
  char v8;

  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v5 = (void *)sub_1BA901EAC(v8);
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  v6 = v5;
  sub_1BB871818();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  sub_1BB8717F4();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  sub_1BB87180C();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  sub_1BB8717D0();
  result = sub_1BB533A20(a3);
  if (result >> 6 && result >> 6 != 1)
  {
    if (result != 128)
      return result;
    __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
    sub_1BB871800();
    __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
    sub_1BB8717DC();
    __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  }
  return sub_1BB8717E8();
}

uint64_t sub_1BB5331F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB533224 + 4 * byte_1BB9238B9[a1]))(0x7258656E6F685069, 0xE800000000000000);
}

uint64_t sub_1BB533224()
{
  return 0x7358656E6F685069;
}

uint64_t sub_1BB533244()
{
  return 0x4553656E6F685069;
}

uint64_t sub_1BB533258()
{
  return 0x3131656E6F685069;
}

uint64_t sub_1BB53326C()
{
  return 0x3131656E6F685069;
}

uint64_t sub_1BB533408()
{
  return 1684099177;
}

uint64_t sub_1BB533418()
{
  return 0x72694164615069;
}

uint64_t sub_1BB533430()
{
  return 0x696E694D64615069;
}

uint64_t sub_1BB533444()
{
  return 0x5F6F725064615069;
}

uint64_t sub_1BB5334A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB5331F0(*a1);
  v5 = v4;
  if (v3 == sub_1BB5331F0(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB533528()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB5331F0(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB533588()
{
  unsigned __int8 *v0;

  sub_1BB5331F0(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB5335C8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB5331F0(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB533624@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB53398C();
  *a1 = result;
  return result;
}

uint64_t sub_1BB533650@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB5331F0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1BB533678(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72511C8;
}

uint64_t sub_1BB533688()
{
  sub_1BB5339DC();
  return sub_1BB872CDC();
}

uint64_t sub_1BB5336C8()
{
  sub_1BB5339DC();
  return sub_1BB872CD0();
}

uint64_t sub_1BB533710()
{
  sub_1BB5339DC();
  return sub_1BB872CC4();
}

unint64_t sub_1BB533754()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C6910;
  if (!qword_1EF2C6910)
  {
    sub_1BB53379C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C6910);
  }
  return result;
}

void sub_1BB53379C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C6918)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C6918);
  }
}

uint64_t sub_1BB5337F0()
{
  unsigned __int8 *v0;

  return sub_1BB532AE8(*v0);
}

uint64_t sub_1BB5337F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(double, double))((char *)sub_1BB53382C + 4 * byte_1BB9238D8[a1]))(375.0, 667.0);
}

double sub_1BB53382C()
{
  return 375.0;
}

double sub_1BB533848()
{
  return 390.0;
}

double sub_1BB533900()
{
  return 810.0;
}

double sub_1BB533930()
{
  return 744.0;
}

double sub_1BB53394C()
{
  return 834.0;
}

double sub_1BB533974()
{
  return 1024.0;
}

uint64_t sub_1BB53398C()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1F)
    return 31;
  else
    return v0;
}

unint64_t sub_1BB5339DC()
{
  unint64_t result;

  result = qword_1EF2C6920;
  if (!qword_1EF2C6920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92398C, &type metadata for DebugFormatDevice);
    atomic_store(result, (unint64_t *)&qword_1EF2C6920);
  }
  return result;
}

uint64_t sub_1BB533A20(char a1)
{
  return byte_1BB923A56[a1];
}

uint64_t sub_1BB533A34(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB532F40(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t *sub_1BB533A40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for DebugFormatTestSuiteScopeResult();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        v14 = a2[3];
        a1[2] = a2[2];
        a1[3] = v14;
        v15 = a2[5];
        a1[4] = a2[4];
        a1[5] = v15;
        *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
        a1[7] = a2[7];
        v16 = a2 + 8;
        v17 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v17 <= 2)
        {
          *((_OWORD *)a1 + 4) = *v16;
        }
        else
        {
          *((_BYTE *)a1 + 64) = *(_BYTE *)v16;
          a1[9] = v17;
          swift_bridgeObjectRetain();
        }
        v18 = a2[11];
        a1[10] = a2[10];
        a1[11] = v18;
        v19 = a2[13];
        a1[12] = a2[12];
        a1[13] = v19;
        v20 = a2[15];
        a1[14] = a2[14];
        a1[15] = v20;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        v21 = a2[18];
        a1[17] = a2[17];
        a1[18] = v21;
        type metadata accessor for DebugFormatTestCaseResult(0);
        type metadata accessor for DebugFormatTestCaseResult.Result(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22 = (char *)&loc_1BB533C78 + 4 * byte_1BB923A80[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v11 = (void *)a2[3];
      a1[3] = (uint64_t)v11;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = v11;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

void sub_1BB534204(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_12:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = a1 + *(int *)(type metadata accessor for DebugFormatTestCaseResult(0) + 24);
      type metadata accessor for DebugFormatTestCaseResult.Result(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          __swift_destroy_boxed_opaque_existential_1(v3);
          v4 = type metadata accessor for DebugFormatTestCaseLayout();
          v5 = v3 + *(int *)(v4 + 20);
          v6 = sub_1BB86D7A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
          v7 = type metadata accessor for GroupLayoutContext();
          v8 = v5 + *(int *)(v7 + 20);
          v9 = sub_1BB86D660();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
          v10 = v5 + *(int *)(v7 + 24);
          if (*(_QWORD *)(v10 + 24) >= 2uLL)
            swift_bridgeObjectRelease();
          v11 = v10 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
          v12 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
          {
            v13 = sub_1BB8705C4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
          }
          swift_release();
          swift_release();
          v14 = v3 + *(int *)(v4 + 24);
          __swift_destroy_boxed_opaque_existential_1(v14 + 8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 = v14 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
          v16 = sub_1BB86D8A0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_12;
        case 2u:
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v3 + 72) >= 3uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1(v3 + 160);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1(v3 + 208);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();

          break;
        default:
          return;
      }
    }
  }
}

_QWORD *sub_1BB5345A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;

  v6 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
      a1[7] = a2[7];
      v14 = a2 + 8;
      v15 = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15 <= 2)
      {
        *((_OWORD *)a1 + 4) = *v14;
      }
      else
      {
        *((_BYTE *)a1 + 64) = *(_BYTE *)v14;
        a1[9] = v15;
        swift_bridgeObjectRetain();
      }
      v16 = a2[11];
      a1[10] = a2[10];
      a1[11] = v16;
      v17 = a2[13];
      a1[12] = a2[12];
      a1[13] = v17;
      v18 = a2[15];
      a1[14] = a2[14];
      a1[15] = v18;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      v19 = a2[18];
      a1[17] = a2[17];
      a1[18] = v19;
      type metadata accessor for DebugFormatTestCaseResult(0);
      type metadata accessor for DebugFormatTestCaseResult.Result(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = (char *)&loc_1BB5347B8 + 4 * byte_1BB923A88[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
    v9 = (void *)a2[3];
    a1[3] = v9;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v9;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_1BB534F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  char *v19;

  v6 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        }
        else
        {
          *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          swift_bridgeObjectRetain();
        }
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        type metadata accessor for DebugFormatTestCaseResult(0);
        type metadata accessor for DebugFormatTestCaseResult.Result(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17 = (char *)&loc_1BB5352A4 + 4 * byte_1BB923A8C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v11 = *(void **)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v11;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = v11;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_7:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_1BB1992CC(a1);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1BB1992CC(a1);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v16 = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16 <= 2)
      {
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      }
      else
      {
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      type metadata accessor for DebugFormatTestCaseResult(0);
      type metadata accessor for DebugFormatTestCaseResult.Result(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = (char *)sub_1BB5359BC + 4 * byte_1BB923A90[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v13 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v13;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v13;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1BB5359BC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__dst, uint64_t a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *__dsta;
  int *v65;

  v24 = *(_QWORD *)(a19 + 24);
  v25 = *(_QWORD *)(v23 - 88);
  *(_QWORD *)(v25 + 24) = v24;
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(a19 + 32);
  (**(void (***)(uint64_t, uint64_t))(v24 - 8))(v25, a19);
  v65 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
  v26 = v65[5];
  v27 = v25 + v26;
  v28 = a19 + v26;
  v29 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  v30 = (int *)type metadata accessor for GroupLayoutContext();
  v31 = v30[5];
  v32 = v27 + v31;
  v33 = v28 + v31;
  v34 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = v30[6];
  v36 = v27 + v35;
  v37 = v28 + v35;
  v38 = *(_OWORD *)(v28 + v35);
  *(_BYTE *)(v36 + 16) = *(_BYTE *)(v28 + v35 + 16);
  *(_OWORD *)v36 = v38;
  LOBYTE(v35) = *(_BYTE *)(v28 + v35 + 19);
  *(_WORD *)(v36 + 17) = *(_WORD *)(v37 + 17);
  *(_BYTE *)(v36 + 19) = v35;
  *(_WORD *)(v36 + 20) = *(_WORD *)(v37 + 20);
  *(_WORD *)(v36 + 22) = *(_WORD *)(v37 + 22);
  v39 = *(_QWORD *)(v37 + 24);
  if (v39 >= 2)
    v39 = swift_bridgeObjectRetain();
  *(_QWORD *)(v36 + 24) = v39;
  v40 = type metadata accessor for FeedLayoutSolverOptions(0);
  v41 = *(int *)(v40 + 36);
  v63 = v40;
  __dsta = (void *)(v36 + v41);
  v42 = (const void *)(v37 + v41);
  v43 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    sub_1BA914C98();
    memcpy(__dsta, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v46 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(__dsta, v42, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(__dsta, 0, 1, v43);
  }
  *(_QWORD *)(v36 + *(int *)(v63 + 40)) = *(_QWORD *)(v37 + *(int *)(v63 + 40));
  *(_QWORD *)(v27 + v30[7]) = *(_QWORD *)(v28 + v30[7]);
  *(_QWORD *)(v27 + v30[8]) = *(_QWORD *)(v28 + v30[8]);
  *(_BYTE *)(v27 + v30[9]) = *(_BYTE *)(v28 + v30[9]);
  *(_QWORD *)(v27 + v30[10]) = *(_QWORD *)(v28 + v30[10]);
  *(_BYTE *)(v27 + v30[11]) = *(_BYTE *)(v28 + v30[11]);
  *(_QWORD *)(v27 + v30[12]) = *(_QWORD *)(v28 + v30[12]);
  v47 = v65[6];
  v48 = *(_QWORD *)(v23 - 88) + v47;
  v49 = a19 + v47;
  *(_BYTE *)v48 = *(_BYTE *)(a19 + v47);
  v50 = *(_QWORD *)(a19 + v47 + 32);
  *(_QWORD *)(v48 + 32) = v50;
  *(_QWORD *)(v48 + 40) = *(_QWORD *)(a19 + v47 + 40);
  v51 = **(void (***)(uint64_t, uint64_t, uint64_t))(v50 - 8);
  swift_retain();
  swift_retain();
  v51(v48 + 8, v49 + 8, v50);
  *(_QWORD *)(v48 + 48) = *(_QWORD *)(v49 + 48);
  *(_QWORD *)(v48 + 56) = *(_QWORD *)(v49 + 56);
  *(_QWORD *)(v48 + 64) = *(_QWORD *)(v49 + 64);
  *(_QWORD *)(v48 + 72) = *(_QWORD *)(v49 + 72);
  *(_QWORD *)(v48 + 80) = *(_QWORD *)(v49 + 80);
  *(_BYTE *)(v48 + 88) = *(_BYTE *)(v49 + 88);
  *(_QWORD *)(v48 + 96) = *(_QWORD *)(v49 + 96);
  v52 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v53 = v52[13];
  v61 = v49 + v53;
  v62 = v48 + v53;
  v54 = sub_1BB86D8A0();
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v60(v62, v61, v54);
  *(_QWORD *)(v48 + v52[14]) = *(_QWORD *)(v49 + v52[14]);
  *(_QWORD *)(v48 + v52[15]) = *(_QWORD *)(v49 + v52[15]);
  *(_BYTE *)(v48 + v52[16]) = *(_BYTE *)(v49 + v52[16]);
  *(_QWORD *)(v48 + v52[17]) = *(_QWORD *)(v49 + v52[17]);
  *(_QWORD *)(v48 + v52[18]) = *(_QWORD *)(v49 + v52[18]);
  v55 = *(_QWORD *)(v23 - 88);
  *(_QWORD *)(v48 + v52[19]) = *(_QWORD *)(v49 + v52[19]);
  v56 = v65[7];
  v57 = v55 + v56;
  v58 = a19 + v56;
  *(_BYTE *)v57 = *(_BYTE *)v58;
  v59 = *(_OWORD *)(v58 + 8);
  *(_OWORD *)(v57 + 24) = *(_OWORD *)(v58 + 24);
  *(_OWORD *)(v57 + 8) = v59;
  *(_QWORD *)(v57 + 40) = *(_QWORD *)(v58 + 40);
  *(_QWORD *)(v57 + 48) = *(_QWORD *)(v58 + 48);
  *(_QWORD *)(v55 + v65[8]) = *(_QWORD *)(a19 + v65[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v21 + *(int *)(a18 + 28)) = *(_QWORD *)(v22 + *(int *)(a18 + 28));
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB535894);
}

_OWORD *sub_1BB535FA0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int *v68;
  char *v69;
  uint64_t v70;
  char *v71;

  v6 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
LABEL_15:
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    a1[8] = a2[8];
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
    v12 = type metadata accessor for DebugFormatTestCaseResult(0);
    v13 = *(int *)(v12 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v70 = v12;
      v36 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v36;
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      v68 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v37 = v68[5];
      v69 = v14;
      v20 = &v14[v37];
      v71 = v15;
      v21 = &v15[v37];
      v38 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v20, v21, v38);
      v23 = (int *)type metadata accessor for GroupLayoutContext();
      v39 = v23[5];
      v40 = &v20[v39];
      v41 = &v21[v39];
      v42 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
      v43 = v23[6];
      v29 = &v20[v43];
      v30 = &v21[v43];
      *(_OWORD *)v29 = *(_OWORD *)&v21[v43];
      v29[16] = v21[v43 + 16];
      *(_WORD *)(v29 + 17) = *(_WORD *)&v21[v43 + 17];
      v29[19] = v21[v43 + 19];
      *((_DWORD *)v29 + 5) = *(_DWORD *)&v21[v43 + 20];
      *((_QWORD *)v29 + 3) = *(_QWORD *)&v21[v43 + 24];
      v65 = type metadata accessor for FeedLayoutSolverOptions(0);
      v44 = *(int *)(v65 + 36);
      v67 = &v29[v44];
      v45 = &v30[v44];
      v46 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      v64 = *(_QWORD *)(v46 - 8);
      v66 = v45;
      v47 = v45;
      v35 = v46;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v47, 1, v46))
      {
LABEL_10:
        sub_1BA914C98();
        memcpy(v67, v66, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
LABEL_13:
        *(_QWORD *)&v29[*(int *)(v65 + 40)] = *(_QWORD *)&v30[*(int *)(v65 + 40)];
        *(_QWORD *)&v20[v23[7]] = *(_QWORD *)&v21[v23[7]];
        *(_QWORD *)&v20[v23[8]] = *(_QWORD *)&v21[v23[8]];
        v20[v23[9]] = v21[v23[9]];
        *(_QWORD *)&v20[v23[10]] = *(_QWORD *)&v21[v23[10]];
        v20[v23[11]] = v21[v23[11]];
        *(_QWORD *)&v20[v23[12]] = *(_QWORD *)&v21[v23[12]];
        v50 = v68[6];
        v51 = &v69[v50];
        v52 = &v71[v50];
        *v51 = v71[v50];
        *(_OWORD *)(v51 + 8) = *(_OWORD *)&v71[v50 + 8];
        *(_OWORD *)(v51 + 24) = *(_OWORD *)&v71[v50 + 24];
        *((_QWORD *)v51 + 5) = *(_QWORD *)&v71[v50 + 40];
        v53 = *(_OWORD *)&v71[v50 + 64];
        *((_OWORD *)v51 + 3) = *(_OWORD *)&v71[v50 + 48];
        *((_OWORD *)v51 + 4) = v53;
        *((_QWORD *)v51 + 10) = *(_QWORD *)&v71[v50 + 80];
        v51[88] = v71[v50 + 88];
        *((_QWORD *)v51 + 12) = *(_QWORD *)&v71[v50 + 96];
        v54 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v55 = v54[13];
        v56 = &v51[v55];
        v57 = &v52[v55];
        v58 = sub_1BB86D8A0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
        *(_QWORD *)&v51[v54[14]] = *(_QWORD *)&v52[v54[14]];
        *(_QWORD *)&v51[v54[15]] = *(_QWORD *)&v52[v54[15]];
        v51[v54[16]] = v52[v54[16]];
        *(_QWORD *)&v51[v54[17]] = *(_QWORD *)&v52[v54[17]];
        *(_QWORD *)&v51[v54[18]] = *(_QWORD *)&v52[v54[18]];
        *(_QWORD *)&v51[v54[19]] = *(_QWORD *)&v52[v54[19]];
        v59 = v68[7];
        v60 = &v69[v59];
        v61 = &v71[v59];
        v62 = *((_OWORD *)v61 + 1);
        *(_OWORD *)v60 = *(_OWORD *)v61;
        *((_OWORD *)v60 + 1) = v62;
        *((_OWORD *)v60 + 2) = *((_OWORD *)v61 + 2);
        *((_QWORD *)v60 + 6) = *((_QWORD *)v61 + 6);
        *(_QWORD *)&v69[v68[8]] = *(_QWORD *)&v71[v68[8]];
        swift_storeEnumTagMultiPayload();
        v12 = v70;
        goto LABEL_14;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_14:
        *(_QWORD *)((char *)a1 + *(int *)(v12 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 28));
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      v70 = v12;
      v18 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v18;
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      v68 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v19 = v68[5];
      v69 = v14;
      v20 = &v14[v19];
      v71 = v15;
      v21 = &v15[v19];
      v22 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      v23 = (int *)type metadata accessor for GroupLayoutContext();
      v24 = v23[5];
      v25 = &v20[v24];
      v26 = &v21[v24];
      v27 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      v28 = v23[6];
      v29 = &v20[v28];
      v30 = &v21[v28];
      *(_OWORD *)v29 = *(_OWORD *)&v21[v28];
      v29[16] = v21[v28 + 16];
      *(_WORD *)(v29 + 17) = *(_WORD *)&v21[v28 + 17];
      v29[19] = v21[v28 + 19];
      *((_DWORD *)v29 + 5) = *(_DWORD *)&v21[v28 + 20];
      *((_QWORD *)v29 + 3) = *(_QWORD *)&v21[v28 + 24];
      v65 = type metadata accessor for FeedLayoutSolverOptions(0);
      v31 = *(int *)(v65 + 36);
      v67 = &v29[v31];
      v32 = &v30[v31];
      v33 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      v64 = *(_QWORD *)(v33 - 8);
      v66 = v32;
      v34 = v32;
      v35 = v33;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v34, 1, v33))
        goto LABEL_10;
    }
    v49 = sub_1BB8705C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v67, v66, v49);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v67, 0, 1, v35);
    goto LABEL_13;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1BB5366D8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_OWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  __int128 v97;
  int *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  __int128 v106;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  __int128 v112;
  int *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  __int128 v121;
  uint64_t v122;
  char *__src;
  unsigned int (**__srca)(const void *, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  char *__dst;
  char *__dsta;
  int *v129;
  int *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;

  v6 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
LABEL_30:
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        return a1;
      }
      v12 = a2[7];
      a1[6] = a2[6];
      a1[7] = v12;
      a1[8] = a2[8];
      v13 = a2[3];
      a1[2] = a2[2];
      a1[3] = v13;
      v14 = a2[5];
      a1[4] = a2[4];
      a1[5] = v14;
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
      v16 = type metadata accessor for DebugFormatTestCaseResult(0);
      v17 = *(int *)(v16 + 24);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v133 = v16;
        v68 = *((_OWORD *)v19 + 1);
        *(_OWORD *)v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v68;
        *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
        v129 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
        v69 = v129[5];
        v131 = v18;
        v24 = &v18[v69];
        v135 = v19;
        v25 = &v19[v69];
        v70 = sub_1BB86D7A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v24, v25, v70);
        v27 = (int *)type metadata accessor for GroupLayoutContext();
        v71 = v27[5];
        v72 = &v24[v71];
        v73 = &v25[v71];
        v74 = sub_1BB86D660();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
        v75 = v27[6];
        v33 = &v24[v75];
        v34 = &v25[v75];
        *(_OWORD *)v33 = *(_OWORD *)&v25[v75];
        v33[16] = v25[v75 + 16];
        *(_WORD *)(v33 + 17) = *(_WORD *)&v25[v75 + 17];
        v33[19] = v25[v75 + 19];
        *((_DWORD *)v33 + 5) = *(_DWORD *)&v25[v75 + 20];
        *((_QWORD *)v33 + 3) = *(_QWORD *)&v25[v75 + 24];
        v76 = type metadata accessor for FeedLayoutSolverOptions(0);
        v77 = *(int *)(v76 + 36);
        v125 = v76;
        __dst = &v33[v77];
        v78 = &v34[v77];
        v79 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        v122 = *(_QWORD *)(v79 - 8);
        __src = v78;
        v80 = v78;
        v40 = v79;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v80, 1, v79))
        {
LABEL_21:
          sub_1BA914C98();
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
LABEL_28:
          *(_QWORD *)&v33[*(int *)(v125 + 40)] = *(_QWORD *)&v34[*(int *)(v125 + 40)];
          *(_QWORD *)&v24[v27[7]] = *(_QWORD *)&v25[v27[7]];
          *(_QWORD *)&v24[v27[8]] = *(_QWORD *)&v25[v27[8]];
          v24[v27[9]] = v25[v27[9]];
          *(_QWORD *)&v24[v27[10]] = *(_QWORD *)&v25[v27[10]];
          v24[v27[11]] = v25[v27[11]];
          *(_QWORD *)&v24[v27[12]] = *(_QWORD *)&v25[v27[12]];
          v94 = v129[6];
          v95 = &v131[v94];
          v96 = &v135[v94];
          *v95 = v135[v94];
          *(_OWORD *)(v95 + 8) = *(_OWORD *)&v135[v94 + 8];
          *(_OWORD *)(v95 + 24) = *(_OWORD *)&v135[v94 + 24];
          *((_QWORD *)v95 + 5) = *(_QWORD *)&v135[v94 + 40];
          v97 = *(_OWORD *)&v135[v94 + 64];
          *((_OWORD *)v95 + 3) = *(_OWORD *)&v135[v94 + 48];
          *((_OWORD *)v95 + 4) = v97;
          *((_QWORD *)v95 + 10) = *(_QWORD *)&v135[v94 + 80];
          v95[88] = v135[v94 + 88];
          *((_QWORD *)v95 + 12) = *(_QWORD *)&v135[v94 + 96];
          v98 = (int *)type metadata accessor for GroupLayoutBindingContext();
          v99 = v98[13];
          v100 = &v95[v99];
          v101 = &v96[v99];
          v102 = sub_1BB86D8A0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v100, v101, v102);
          *(_QWORD *)&v95[v98[14]] = *(_QWORD *)&v96[v98[14]];
          *(_QWORD *)&v95[v98[15]] = *(_QWORD *)&v96[v98[15]];
          v95[v98[16]] = v96[v98[16]];
          *(_QWORD *)&v95[v98[17]] = *(_QWORD *)&v96[v98[17]];
          *(_QWORD *)&v95[v98[18]] = *(_QWORD *)&v96[v98[18]];
          *(_QWORD *)&v95[v98[19]] = *(_QWORD *)&v96[v98[19]];
          v103 = v129[7];
          v104 = &v131[v103];
          v105 = &v135[v103];
          v106 = *((_OWORD *)v105 + 1);
          *(_OWORD *)v104 = *(_OWORD *)v105;
          *((_OWORD *)v104 + 1) = v106;
          *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
          *((_QWORD *)v104 + 6) = *((_QWORD *)v105 + 6);
          *(_QWORD *)&v131[v129[8]] = *(_QWORD *)&v135[v129[8]];
          swift_storeEnumTagMultiPayload();
          v16 = v133;
          goto LABEL_29;
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_29:
          *(_QWORD *)((char *)a1 + *(int *)(v16 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v16 + 28));
          swift_storeEnumTagMultiPayload();
          goto LABEL_30;
        }
        v133 = v16;
        v22 = *((_OWORD *)v19 + 1);
        *(_OWORD *)v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v22;
        *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
        v129 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
        v23 = v129[5];
        v131 = v18;
        v24 = &v18[v23];
        v135 = v19;
        v25 = &v19[v23];
        v26 = sub_1BB86D7A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        v27 = (int *)type metadata accessor for GroupLayoutContext();
        v28 = v27[5];
        v29 = &v24[v28];
        v30 = &v25[v28];
        v31 = sub_1BB86D660();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        v32 = v27[6];
        v33 = &v24[v32];
        v34 = &v25[v32];
        *(_OWORD *)v33 = *(_OWORD *)&v25[v32];
        v33[16] = v25[v32 + 16];
        *(_WORD *)(v33 + 17) = *(_WORD *)&v25[v32 + 17];
        v33[19] = v25[v32 + 19];
        *((_DWORD *)v33 + 5) = *(_DWORD *)&v25[v32 + 20];
        *((_QWORD *)v33 + 3) = *(_QWORD *)&v25[v32 + 24];
        v35 = type metadata accessor for FeedLayoutSolverOptions(0);
        v36 = *(int *)(v35 + 36);
        v125 = v35;
        __dst = &v33[v36];
        v37 = &v34[v36];
        v38 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        v122 = *(_QWORD *)(v38 - 8);
        __src = v37;
        v39 = v37;
        v40 = v38;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v39, 1, v38))
          goto LABEL_21;
      }
      v93 = sub_1BB8705C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(__dst, __src, v93);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(__dst, 0, 1, v40);
      goto LABEL_28;
    }
    goto LABEL_7;
  }
  if (!v10)
  {
    if (a1 == a2)
      return a1;
    sub_1BB1992CC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      v11 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    v41 = a2[7];
    a1[6] = a2[6];
    a1[7] = v41;
    a1[8] = a2[8];
    v42 = a2[3];
    a1[2] = a2[2];
    a1[3] = v42;
    v43 = a2[5];
    a1[4] = a2[4];
    a1[5] = v43;
    v44 = a2[1];
    *a1 = *a2;
    a1[1] = v44;
    *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
    v45 = type metadata accessor for DebugFormatTestCaseResult(0);
    v46 = *(int *)(v45 + 24);
    v47 = (char *)a1 + v46;
    v48 = (char *)a2 + v46;
    v49 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    v50 = swift_getEnumCaseMultiPayload();
    if (v50 == 1)
    {
      v136 = v45;
      v82 = *((_OWORD *)v48 + 1);
      *(_OWORD *)v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v82;
      *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
      v130 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v83 = v130[5];
      v132 = v48;
      v134 = v47;
      v53 = &v47[v83];
      v54 = &v48[v83];
      v84 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v53, v54, v84);
      v56 = (int *)type metadata accessor for GroupLayoutContext();
      v85 = v56[5];
      v86 = &v53[v85];
      v87 = &v54[v85];
      v88 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
      v89 = v56[6];
      v62 = &v53[v89];
      v63 = &v54[v89];
      *(_OWORD *)v62 = *(_OWORD *)&v54[v89];
      v62[16] = v54[v89 + 16];
      *(_WORD *)(v62 + 17) = *(_WORD *)&v54[v89 + 17];
      v62[19] = v54[v89 + 19];
      *((_DWORD *)v62 + 5) = *(_DWORD *)&v54[v89 + 20];
      *((_QWORD *)v62 + 3) = *(_QWORD *)&v54[v89 + 24];
      v90 = type metadata accessor for FeedLayoutSolverOptions(0);
      v91 = *(int *)(v90 + 36);
      v126 = v90;
      __dsta = &v62[v91];
      v66 = &v63[v91];
      v67 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      __srca = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v67 - 8);
      if (__srca[6](v66, 1, v67))
      {
LABEL_25:
        sub_1BA914C98();
        memcpy(__dsta, v66, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
LABEL_33:
        *(_QWORD *)&v62[*(int *)(v126 + 40)] = *(_QWORD *)&v63[*(int *)(v126 + 40)];
        *(_QWORD *)&v53[v56[7]] = *(_QWORD *)&v54[v56[7]];
        *(_QWORD *)&v53[v56[8]] = *(_QWORD *)&v54[v56[8]];
        v53[v56[9]] = v54[v56[9]];
        *(_QWORD *)&v53[v56[10]] = *(_QWORD *)&v54[v56[10]];
        v53[v56[11]] = v54[v56[11]];
        *(_QWORD *)&v53[v56[12]] = *(_QWORD *)&v54[v56[12]];
        v109 = v130[6];
        v110 = &v134[v109];
        v111 = &v132[v109];
        *v110 = v132[v109];
        *(_OWORD *)(v110 + 8) = *(_OWORD *)&v132[v109 + 8];
        *(_OWORD *)(v110 + 24) = *(_OWORD *)&v132[v109 + 24];
        *((_QWORD *)v110 + 5) = *(_QWORD *)&v132[v109 + 40];
        v112 = *(_OWORD *)&v132[v109 + 64];
        *((_OWORD *)v110 + 3) = *(_OWORD *)&v132[v109 + 48];
        *((_OWORD *)v110 + 4) = v112;
        *((_QWORD *)v110 + 10) = *(_QWORD *)&v132[v109 + 80];
        v110[88] = v132[v109 + 88];
        *((_QWORD *)v110 + 12) = *(_QWORD *)&v132[v109 + 96];
        v113 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v114 = v113[13];
        v115 = &v110[v114];
        v116 = &v111[v114];
        v117 = sub_1BB86D8A0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
        *(_QWORD *)&v110[v113[14]] = *(_QWORD *)&v111[v113[14]];
        *(_QWORD *)&v110[v113[15]] = *(_QWORD *)&v111[v113[15]];
        v110[v113[16]] = v111[v113[16]];
        *(_QWORD *)&v110[v113[17]] = *(_QWORD *)&v111[v113[17]];
        *(_QWORD *)&v110[v113[18]] = *(_QWORD *)&v111[v113[18]];
        *(_QWORD *)&v110[v113[19]] = *(_QWORD *)&v111[v113[19]];
        v118 = v130[7];
        v119 = &v134[v118];
        v120 = &v132[v118];
        v121 = *((_OWORD *)v120 + 1);
        *(_OWORD *)v119 = *(_OWORD *)v120;
        *((_OWORD *)v119 + 1) = v121;
        *((_OWORD *)v119 + 2) = *((_OWORD *)v120 + 2);
        *((_QWORD *)v119 + 6) = *((_QWORD *)v120 + 6);
        *(_QWORD *)&v134[v130[8]] = *(_QWORD *)&v132[v130[8]];
        swift_storeEnumTagMultiPayload();
        v45 = v136;
        goto LABEL_34;
      }
    }
    else
    {
      if (v50)
      {
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
LABEL_34:
        *(_QWORD *)((char *)a1 + *(int *)(v45 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v45 + 28));
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v136 = v45;
      v51 = *((_OWORD *)v48 + 1);
      *(_OWORD *)v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v51;
      *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
      v130 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v52 = v130[5];
      v132 = v48;
      v134 = v47;
      v53 = &v47[v52];
      v54 = &v48[v52];
      v55 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
      v56 = (int *)type metadata accessor for GroupLayoutContext();
      v57 = v56[5];
      v58 = &v53[v57];
      v59 = &v54[v57];
      v60 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
      v61 = v56[6];
      v62 = &v53[v61];
      v63 = &v54[v61];
      *(_OWORD *)v62 = *(_OWORD *)&v54[v61];
      v62[16] = v54[v61 + 16];
      *(_WORD *)(v62 + 17) = *(_WORD *)&v54[v61 + 17];
      v62[19] = v54[v61 + 19];
      *((_DWORD *)v62 + 5) = *(_DWORD *)&v54[v61 + 20];
      *((_QWORD *)v62 + 3) = *(_QWORD *)&v54[v61 + 24];
      v64 = type metadata accessor for FeedLayoutSolverOptions(0);
      v65 = *(int *)(v64 + 36);
      v126 = v64;
      __dsta = &v62[v65];
      v66 = &v63[v65];
      v67 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      __srca = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v67 - 8);
      if (__srca[6](v66, 1, v67))
        goto LABEL_25;
    }
    v108 = sub_1BB8705C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(__dsta, v66, v108);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srca[7])(__dsta, 0, 1, v67);
    goto LABEL_33;
  }
  sub_1BB1992CC((uint64_t)a1);
LABEL_7:
  v11 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
  memcpy(a1, a2, v11);
  return a1;
}

uint64_t sub_1BB5374AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB5374B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1BB537504()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB537510(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1BB537560(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1BB537598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for DebugFormatTestSuiteResultItem()
{
  uint64_t result;

  result = qword_1EF2C6998;
  if (!qword_1EF2C6998)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB537614()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DebugFormatTestSuiteScopeResult();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t ShareLinkProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ShareLinkProviderType.shareLink(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  id v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  id v27;
  unsigned int v28;
  uint64_t v29;
  id v31;
  void *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - v11;
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v34 - v19;
  if (objc_msgSend(a1, sel_contentType, v18) != (id)1)
  {
    v34 = v20;
    v35 = a2;
    v21 = objc_msgSend(a1, sel_articleID);
    if (!v21)
    {
      sub_1BB8729A0();
      v21 = (id)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    v22 = objc_msgSend(a1, sel_routeURL);
    if (v22)
    {
      sub_1BB86C5EC();

      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v16, v13);
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v23(v12, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        v22 = 0;
      }
      else
      {
        v22 = (id)sub_1BB86C58C();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
      }
    }
    else
    {
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v23(v12, 1, 1, v13);
    }
    v24 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForArticleID_routeURL_, v21, v22);

    if (v24)
    {
      sub_1BB86C5EC();

      v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v25(v9, v16, v13);
      v23(v9, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) != 1)
      {
        v26 = v34;
        v25(v34, v9, v13);
        v27 = objc_msgSend(a1, sel_sourceChannel);
        if (!v27 || (v28 = objc_msgSend(v27, sel_isPublic), swift_unknownObjectRelease(), v28))
        {
          v29 = v35;
          v25((char *)v35, v26, v13);
          return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v23)(v29, 0, 1, v13);
        }
        (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
        goto LABEL_16;
      }
    }
    else
    {
      v23(v9, 1, 1, v13);
    }
    sub_1BA7F0A80((uint64_t)v9);
LABEL_16:
    a2 = v35;
  }
  v31 = objc_msgSend(a1, sel_contentURL);
  if (v31)
  {
    v32 = v31;
    sub_1BB86C5EC();

    v33 = 0;
  }
  else
  {
    v33 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v6, v33, 1, v13);
  return sub_1BA7F0AD4((uint64_t)v6, a2);
}

uint64_t sub_1BB537A20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShareLinkProviderType.shareLink(for:)(a1, a2);
}

uint64_t ShareLinkProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ShareLinkProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BB537A4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAF55A1C(a1, a2);
}

uint64_t dispatch thunk of ShareLinkProviderType.shareLink(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for ShareLinkProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ShareLinkProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

double sub_1BB537A88(double **a1, uint64_t a2, void *a3)
{
  double *v3;
  CGFloat v4;
  CGFloat v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  CGFloat v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double v14;
  double v15;
  CGPoint v16;
  CGSize v17;
  CGFloat MinX;
  CGFloat MinY;
  unint64_t v20;
  uint64_t v22;
  id v23;
  CGPoint v24;
  CGSize v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[6];
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v23 = a3;
  v3 = *a1;
  v4 = (*a1)[13];
  MEMORY[0x1E0C80A78](a1);
  v5 = v3[17];
  v6 = sub_1BB87027C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - v8;
  v10 = v3[16];
  v24.x = v3[12];
  v24.y = v4;
  v25.width = v10;
  v25.height = v5;
  sub_1BB86FAD8();
  sub_1BB86FAE4();
  sub_1BB870270();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BA4D9CE8(0, &qword_1ED3B1DE8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC((__int128 *)&v24, (uint64_t)v27);
    v11 = v28;
    v12 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 8))(v30, v11, v12);
    sub_1BA739A14((uint64_t)v30, (uint64_t)&v24);
    v13 = v23;
    if (v26 == 1)
    {
      objc_msgSend(v23, sel_frame);
    }
    else
    {
      v16 = v24;
      v17 = v25;
      objc_msgSend(v23, sel_frame);
      MinX = CGRectGetMinX(v31);
      objc_msgSend(v13, sel_frame);
      MinY = CGRectGetMinY(v32);
      v33.origin = v16;
      v33.size = v17;
      v20 = (unint64_t)CGRectOffset(v33, MinX, MinY);
    }
    v15 = *(double *)&v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    v26 = 0;
    v24 = (CGPoint)0;
    v25 = (CGSize)0;
    sub_1BA65DB80((uint64_t)&v24, &qword_1ED3C57E8, &qword_1ED3B1DE8);
    objc_msgSend(v23, sel_frame);
    return v14;
  }
  return v15;
}

uint64_t sub_1BB537D1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  int v6;
  unsigned int *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  int v15;
  uint64_t v16;

  v2 = sub_1BB86EDB8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (id *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for FeedEngagementBanner();
  sub_1BB86ED94();
  v6 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0D59550])
  {
    v7 = (unsigned int *)MEMORY[0x1E0D52F80];
LABEL_11:
    v9 = *v7;
    v10 = sub_1BB871E84();
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104);
    v12 = a1;
    v13 = v9;
    return v11(v12, v13, v10);
  }
  v8 = v6;
  if (v6 == *MEMORY[0x1E0D59558])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v5, v2);

    v7 = (unsigned int *)MEMORY[0x1E0D52F88];
    goto LABEL_11;
  }
  if (v6 == *MEMORY[0x1E0D59568])
  {
    v7 = (unsigned int *)MEMORY[0x1E0D52F98];
    goto LABEL_11;
  }
  if (v6 == *MEMORY[0x1E0D59570])
  {
    v7 = (unsigned int *)MEMORY[0x1E0D52FA0];
    goto LABEL_11;
  }
  if (v6 == *MEMORY[0x1E0D59560])
  {
    v7 = (unsigned int *)MEMORY[0x1E0D52F90];
    goto LABEL_11;
  }
  v15 = *MEMORY[0x1E0D59580];
  v10 = sub_1BB871E84();
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104);
  if (v8 != v15)
  {
    v11(a1, *MEMORY[0x1E0D52F88], v10);
    return (*(uint64_t (**)(id *, uint64_t))(v3 + 8))(v5, v2);
  }
  v13 = *MEMORY[0x1E0D52FA8];
  v12 = a1;
  return v11(v12, v13, v10);
}

uint64_t FormatNumberFormatRoundingMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB537F20 + 4 * byte_1BB923B70[*v0]))(0x676E696C696563, 0xE700000000000000);
}

uint64_t sub_1BB537F20()
{
  return 0x726F6F6C66;
}

uint64_t sub_1BB537F34()
{
  return 1853321060;
}

uint64_t sub_1BB537F44()
{
  return 28789;
}

uint64_t sub_1BB537F50()
{
  return 0x6E657645666C6168;
}

uint64_t sub_1BB537F68()
{
  return 0x6E776F44666C6168;
}

uint64_t sub_1BB537F80()
{
  return 0x7055666C6168;
}

NewsFeed::FormatNumberFormatRoundingMode_optional __swiftcall FormatNumberFormatRoundingMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatNumberFormatRoundingMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1BB537FEC(char *a1)
{
  sub_1BB80710C(*a1);
}

unint64_t sub_1BB537FFC()
{
  unint64_t result;

  result = qword_1EF2C69A8;
  if (!qword_1EF2C69A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormatRoundingMode, &type metadata for FormatNumberFormatRoundingMode);
    atomic_store(result, (unint64_t *)&qword_1EF2C69A8);
  }
  return result;
}

void sub_1BB538040()
{
  char *v0;

  sub_1BAB0BB58(0, *v0);
}

void sub_1BB53804C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB538088()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB538110(uint64_t a1)
{
  char *v1;

  sub_1BAB0BB58(a1, *v1);
}

NewsFeed::FormatNumberFormatRoundingMode_optional sub_1BB538118(Swift::String *a1)
{
  return FormatNumberFormatRoundingMode.init(rawValue:)(*a1);
}

uint64_t sub_1BB538124()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB538154 + 4 * byte_1BB923B7E[*v0]))();
}

void sub_1BB538154(_QWORD *a1@<X8>)
{
  *a1 = 0x726F6F6C66;
  a1[1] = 0xE500000000000000;
}

void sub_1BB53816C(_QWORD *a1@<X8>)
{
  *a1 = 1853321060;
  a1[1] = 0xE400000000000000;
}

void sub_1BB538180(_QWORD *a1@<X8>)
{
  *a1 = 28789;
  a1[1] = 0xE200000000000000;
}

void sub_1BB538190(_QWORD *a1@<X8>)
{
  *a1 = 0x6E657645666C6168;
  a1[1] = 0xE800000000000000;
}

void sub_1BB5381AC(_QWORD *a1@<X8>)
{
  *a1 = 0x6E776F44666C6168;
  a1[1] = 0xE800000000000000;
}

void sub_1BB5381C8(_QWORD *a1@<X8>)
{
  *a1 = 0x7055666C6168;
  a1[1] = 0xE600000000000000;
}

unint64_t sub_1BB5381E0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB53820C();
  result = sub_1BB538250();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB53820C()
{
  unint64_t result;

  result = qword_1EF2C69B0;
  if (!qword_1EF2C69B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormatRoundingMode, &type metadata for FormatNumberFormatRoundingMode);
    atomic_store(result, (unint64_t *)&qword_1EF2C69B0);
  }
  return result;
}

unint64_t sub_1BB538250()
{
  unint64_t result;

  result = qword_1EF2C69B8;
  if (!qword_1EF2C69B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormatRoundingMode, &type metadata for FormatNumberFormatRoundingMode);
    atomic_store(result, (unint64_t *)&qword_1EF2C69B8);
  }
  return result;
}

unint64_t sub_1BB538294(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB5382B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB5382B8()
{
  unint64_t result;

  result = qword_1EF2C69C0;
  if (!qword_1EF2C69C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormatRoundingMode, &type metadata for FormatNumberFormatRoundingMode);
    atomic_store(result, (unint64_t *)&qword_1EF2C69C0);
  }
  return result;
}

unint64_t sub_1BB5382FC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE7BC44();
  a1[2] = sub_1BAEF7E9C();
  result = sub_1BB537FFC();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB538330()
{
  sub_1BB538250();
  return sub_1BB872D60();
}

uint64_t sub_1BB53838C(_QWORD *a1)
{
  return FormatNumberFormatRoundingMode.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatNumberFormatRoundingMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB5383EC + 4 * byte_1BB923B8A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB538420 + 4 * byte_1BB923B85[v4]))();
}

uint64_t sub_1BB538420(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB538428(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB538430);
  return result;
}

uint64_t sub_1BB53843C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB538444);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB538448(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB538450(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatNumberFormatRoundingMode()
{
  return &type metadata for FormatNumberFormatRoundingMode;
}

uint64_t sub_1BB53846C(uint64_t a1, uint64_t a2)
{
  return sub_1BA884794(*(_QWORD *)(*(_QWORD *)a1 + 16), *(_QWORD *)(*(_QWORD *)a2 + 16));
}

ValueMetadata *type metadata accessor for FormatAccessibilityData()
{
  return &type metadata for FormatAccessibilityData;
}

uint64_t FormatTextNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t a19)
{
  uint64_t v27;

  v27 = swift_allocObject();
  FormatTextNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
  return v27;
}

uint64_t FormatTextNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t FormatTextNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatTextNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t FormatTextNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatTextNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 104);
  return swift_retain();
}

uint64_t FormatTextNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

unint64_t FormatTextNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatTextNodeLayoutAttributes.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 128) = a1;
  return result;
}

uint64_t (*FormatTextNodeLayoutAttributes.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatTextNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatTextNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 152);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 144);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatTextNodeLayoutAttributes.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB538724(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB53875C + 4 * byte_1BB923D90[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BB53875C()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB538778()
{
  return 0x6E65644965646F6ELL;
}

uint64_t sub_1BB53879C()
{
  return 0x656D617266;
}

uint64_t sub_1BB5387B0()
{
  return 0x656C797473;
}

uint64_t sub_1BB5387C4()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB5387DC()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB5387F0()
{
  return 0x696C696269736976;
}

unint64_t sub_1BB538808()
{
  return 0xD000000000000018;
}

uint64_t sub_1BB538880()
{
  unsigned __int8 *v0;

  return sub_1BB538724(*v0);
}

uint64_t sub_1BB538888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB539A18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB5388AC()
{
  sub_1BB539640();
  return sub_1BB874710();
}

uint64_t sub_1BB5388D4()
{
  sub_1BB539640();
  return sub_1BB87471C();
}

uint64_t FormatTextNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  char v11;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;
  char v17;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C69C8, (uint64_t (*)(void))sub_1BB539640, (uint64_t)&type metadata for FormatTextNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB539640();
  sub_1BB8746C8();
  LOBYTE(v15) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1BB87417C();
    LOBYTE(v15) = 2;
    sub_1BB87417C();
    v10 = *(_OWORD *)(v3 + 80);
    v15 = *(_OWORD *)(v3 + 64);
    v16 = v10;
    LOBYTE(v13) = 3;
    type metadata accessor for CGRect(0);
    sub_1BA50AD30(&qword_1EF2A9A18, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
    sub_1BB8741AC();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 96);
    LOBYTE(v13) = 4;
    type metadata accessor for FormatTextNodeStyle();
    sub_1BA50AD30(&qword_1ED3A66F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
    sub_1BB87414C();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 104);
    LOBYTE(v13) = 5;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v15) = 6;
    sub_1BB8741A0();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 120);
    LOBYTE(v13) = 7;
    sub_1BA84B088();
    sub_1BB8741AC();
    swift_beginAccess();
    if ((*(_BYTE *)(v3 + 128) & 1) == 0)
    {
      LOBYTE(v13) = 8;
      v17 = 0;
      sub_1BB539684();
      sub_1BB874464();
    }
    v13 = *(_QWORD *)(v3 + 136);
    v17 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    v11 = *(_BYTE *)(v3 + 152);
    v13 = *(_QWORD *)(v3 + 144);
    v14 = v11;
    v17 = 10;
    sub_1BA5FB410();
    sub_1BB87414C();
    LOBYTE(v13) = 11;
    sub_1BB87411C();
    v13 = *(_QWORD *)(v3 + 176);
    v17 = 12;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA9952AC(&qword_1EF2AC0D8, (uint64_t (*)(void))sub_1BA994B84, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatTextNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatTextNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t *FormatTextNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char v15;
  char v16;
  uint64_t v17;
  _QWORD v18[2];
  _QWORD *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  char v23;
  char v24;

  v20 = *v1;
  sub_1BA4CDF6C(0, &qword_1EF2C69E0, (uint64_t (*)(void))sub_1BB539640, (uint64_t)&type metadata for FormatTextNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v18 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB539640();
  v8 = v19;
  sub_1BB87468C();
  if (v8)
  {
    swift_deallocPartialClassInstance();
    v13 = (uint64_t)a1;
  }
  else
  {
    v19 = a1;
    LOBYTE(v21) = 0;
    v1[2] = sub_1BB874098();
    v1[3] = v9;
    LOBYTE(v21) = 1;
    v1[4] = sub_1BB874098();
    v1[5] = v10;
    LOBYTE(v21) = 2;
    v1[6] = sub_1BB874098();
    v1[7] = v11;
    type metadata accessor for CGRect(0);
    v24 = 3;
    sub_1BA50AD30((unint64_t *)&unk_1ED3B9910, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    v18[1] = 0;
    sub_1BB8740D4();
    v12 = v22;
    *((_OWORD *)v1 + 4) = v21;
    *((_OWORD *)v1 + 5) = v12;
    type metadata accessor for FormatTextNodeStyle();
    v24 = 4;
    sub_1BA50AD30(&qword_1ED3C8748, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
    sub_1BB874068();
    v1[12] = v21;
    v24 = 5;
    sub_1BA995268();
    sub_1BB874068();
    v1[13] = v21;
    LOBYTE(v21) = 6;
    v1[14] = sub_1BB8740C8();
    v24 = 7;
    sub_1BA651250();
    sub_1BB8740D4();
    v1[15] = v21;
    LOBYTE(v21) = 8;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v24 = 8;
      sub_1BB8740D4();
      v15 = v23;
    }
    else
    {
      v15 = 1;
    }
    *((_BYTE *)v1 + 128) = v15;
    type metadata accessor for FormatContextLayoutOptions();
    v24 = 9;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    v1[17] = v21;
    v24 = 10;
    sub_1BA650BA0();
    sub_1BB874068();
    v16 = BYTE8(v21);
    v1[18] = v21;
    *((_BYTE *)v1 + 152) = v16;
    LOBYTE(v21) = 11;
    v1[20] = sub_1BB87402C();
    v1[21] = v17;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v24 = 12;
    sub_1BA9952AC(&qword_1EF2AC100, (uint64_t (*)(void))sub_1BA995330, MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v1[22] = v21;
    v13 = (uint64_t)v19;
  }
  __swift_destroy_boxed_opaque_existential_1(v13);
  return v1;
}

uint64_t sub_1BB539498()
{
  return swift_bridgeObjectRetain();
}

uint64_t *sub_1BB5394A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *result;

  v5 = swift_allocObject();
  result = FormatTextNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB5394F8(_QWORD *a1)
{
  return FormatTextNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BB539518(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1EF2C3178, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatTextNodeLayoutAttributes);
  return sub_1BB86D96C();
}

uint64_t sub_1BB539598(uint64_t a1)
{
  sub_1BA6E8AA8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  return a1;
}

uint64_t sub_1BB5395F0()
{
  uint64_t *v0;

  sub_1BA6E8CCC(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11], v0[12], v0[13], v0[14], v0[15]);
  return swift_deallocObject();
}

unint64_t sub_1BB539640()
{
  unint64_t result;

  result = qword_1EF2C69D0;
  if (!qword_1EF2C69D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB924054, &type metadata for FormatTextNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C69D0);
  }
  return result;
}

unint64_t sub_1BB539684()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C69D8;
  if (!qword_1EF2C69D8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2C69C8, (uint64_t (*)(void))sub_1BB539640, (uint64_t)&type metadata for FormatTextNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C69D8);
  }
  return result;
}

uint64_t sub_1BB5396EC(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C69E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatTextNodeLayoutAttributes);
}

uint64_t sub_1BB539718(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C30D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatTextNodeLayoutAttributes);
}

uint64_t sub_1BB539744(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C3128, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatTextNodeLayoutAttributes);
}

uint64_t sub_1BB539770(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C69F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatTextNodeLayoutAttributes);
}

uint64_t sub_1BB53979C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 128);
  return result;
}

uint64_t sub_1BB5397E0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 128) = v2;
  return result;
}

uint64_t method lookup function for FormatTextNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatTextNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of FormatTextNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t storeEnumTagSinglePayload for FormatTextNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BB5398C0 + 4 * byte_1BB923DAA[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BB5398F4 + 4 * byte_1BB923DA5[v4]))();
}

uint64_t sub_1BB5398F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5398FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB539904);
  return result;
}

uint64_t sub_1BB539910(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB539918);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BB53991C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB539924(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatTextNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatTextNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB539944()
{
  unint64_t result;

  result = qword_1EF2C69F8;
  if (!qword_1EF2C69F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92402C, &type metadata for FormatTextNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C69F8);
  }
  return result;
}

unint64_t sub_1BB53998C()
{
  unint64_t result;

  result = qword_1EF2C6A00;
  if (!qword_1EF2C6A00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB923F9C, &type metadata for FormatTextNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6A00);
  }
  return result;
}

unint64_t sub_1BB5399D4()
{
  unint64_t result;

  result = qword_1EF2C6A08;
  if (!qword_1EF2C6A08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB923FC4, &type metadata for FormatTextNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6A08);
  }
  return result;
}

uint64_t sub_1BB539A18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB961EB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB965970)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

double EmptyViewSupplementaryLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t EmptyViewSupplementaryLayoutAttributes.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  v4 = sub_1BB870E88();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

double *EmptyViewSupplementaryLayoutAttributes.__allocating_init(kind:frame:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double *v10;
  char *v11;
  uint64_t v12;

  v10 = (double *)swift_allocObject();
  v11 = (char *)v10 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  v12 = sub_1BB870E88();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  return v10;
}

uint64_t EmptyViewSupplementaryLayoutAttributes.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  v2 = sub_1BB870E88();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1BB53A04C()
{
  sub_1BA49C040(&qword_1ED3B8BB8, (uint64_t)&protocol conformance descriptor for EmptyViewSupplementaryLayoutAttributes);
  return sub_1BB870FF0();
}

uint64_t sub_1BB53A084()
{
  return type metadata accessor for EmptyViewSupplementaryLayoutAttributes();
}

uint64_t method lookup function for EmptyViewSupplementaryLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmptyViewSupplementaryLayoutAttributes.__allocating_init(kind:frame:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for FormatLayoutOption()
{
  return &type metadata for FormatLayoutOption;
}

unint64_t sub_1BB53A0B0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA56BD08();
  a1[2] = sub_1BA5A83C0();
  result = sub_1BB53A0E4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB53A0E4()
{
  unint64_t result;

  result = qword_1EF2C6A10;
  if (!qword_1EF2C6A10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9241E4, &type metadata for FormatLayoutOption);
    atomic_store(result, (unint64_t *)&qword_1EF2C6A10);
  }
  return result;
}

unint64_t sub_1BB53A128(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB53A14C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB53A14C()
{
  unint64_t result;

  result = qword_1EF2C6A18;
  if (!qword_1EF2C6A18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB924234, &type metadata for FormatLayoutOption);
    atomic_store(result, (unint64_t *)&qword_1EF2C6A18);
  }
  return result;
}

uint64_t sub_1BB53A190()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1BB87342C();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v0);
  v2 = sub_1BB873450();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA657D64();
  sub_1BB872658();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D8], v2);
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, v1, MEMORY[0x1E0DEF828]);
  sub_1BA81D850(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9660, (uint64_t (*)(uint64_t))sub_1BA81D850, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  result = sub_1BB87348C();
  qword_1ED476408 = result;
  return result;
}

uint64_t sub_1BB53A348@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for FeatureAvailability();
  result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for FeatureAvailability;
  *a1 = result;
  return result;
}

uint64_t sub_1BB53A38C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D47E8);
  result = sub_1BB86DF48();
  if (v9)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA4EFE00(0, &qword_1ED3BB4C0);
    result = sub_1BB86DF3C();
    if (result)
    {
      v5 = result;
      v6 = type metadata accessor for IssueService();
      v7 = swift_allocObject();
      result = sub_1BA4CECCC(&v8, v7 + 16);
      *(_QWORD *)(v7 + 56) = v5;
      a2[3] = v6;
      a2[4] = (uint64_t)&protocol witness table for IssueService;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB53A494@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t OperationFactory;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, &qword_1ED3B9830);
  result = sub_1BB86DF3C();
  if (result)
  {
    v4 = result;
    OperationFactory = type metadata accessor for IssuesFetchOperationFactory();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    a2[3] = OperationFactory;
    a2[4] = (uint64_t)&off_1E73297E0;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB53A528@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97D0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for ResourceService();
    result = swift_allocObject();
    *(_BYTE *)(result + 24) = 2;
    *(_QWORD *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&protocol witness table for ResourceService;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB53A5C4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D5E60);
  result = sub_1BB86DF48();
  if (v7)
  {
    v4 = type metadata accessor for FormatBackgroundFeedPluginFactory();
    v5 = swift_allocObject();
    result = sub_1BA4CECCC(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&protocol witness table for FormatBackgroundFeedPluginFactory;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB53A674@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatBackgroundLayoutSolver();
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for FormatLayoutViewFactory();
    result = sub_1BB86DF3C();
    if (result)
    {
      v6 = result;
      v7 = type metadata accessor for FormatBackgroundLayoutManager();
      v8 = (_QWORD *)swift_allocObject();
      sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3A00, (uint64_t (*)(uint64_t))sub_1BB53C260, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4AE8]);
      swift_allocObject();
      result = sub_1BB86E86C();
      v8[3] = v6;
      v8[4] = result;
      v8[2] = v5;
      a2[3] = v7;
      a2[4] = &protocol witness table for FormatBackgroundLayoutManager;
      *a2 = v8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB53A788(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA50CAA8(0, qword_1ED3D3178, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39A0);
  result = sub_1BB86DF48();
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatDecorationProviderFactory();
  result = sub_1BB86DF3C();
  if (result)
  {
    v4 = result;
    type metadata accessor for FormatBackgroundLayoutSolver();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    sub_1BA4CECCC(&v6, v5 + 24);
    *(_QWORD *)(v5 + 64) = v4;
    return v5;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BB53A8C8(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86CCAC();
  result = sub_1BB86DF3C();
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_1BB53A918@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA833560(a1, &qword_1ED3A2FF0, (uint64_t)&protocol witness table for FCOfflineModeMonitor, a2);
}

uint64_t sub_1BB53A934@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - v9;
  v11 = objc_msgSend((id)objc_opt_self(), sel_authTokenBaseURLForConfiguration_, objc_msgSend(a1, sel_appConfiguration, v8));
  if (v11)
  {
    v12 = v11;
    sub_1BB86C5EC();

    v13 = sub_1BB86C67C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
  }
  else
  {
    v13 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  }
  sub_1BA7F0AD4((uint64_t)v6, (uint64_t)v10);
  sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
  {
    swift_unknownObjectRelease();
    sub_1BA7F0A80((uint64_t)v10);
    v15 = 1;
  }
  else
  {
    sub_1BB86C5BC();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
    v15 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, v15, 1, v13);
}

uint64_t sub_1BB53AAEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D5790);
  result = sub_1BB86DF48();
  if (v7)
  {
    v4 = type metadata accessor for LatestPuzzleProvider();
    v5 = swift_allocObject();
    result = sub_1BA4CECCC(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1E72DBA30;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB53AB9C@<X0>(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t result;
  void *v5;
  void *v6;
  objc_class *v7;
  id v8;
  char *v9;
  _BYTE v10[24];
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3CF8D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D5790);
  result = sub_1BB86DF48();
  if (!v11)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v6 = (void *)result;
    v7 = (objc_class *)type metadata accessor for PuzzleHistoryService();
    v8 = objc_allocWithZone(v7);
    v9 = sub_1BB5DF274(v5, (uint64_t)v10, v6);

    result = swift_unknownObjectRelease();
    a2[3] = (char *)v7;
    a2[4] = (char *)&off_1E73255A8;
    *a2 = v9;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BB53ACF4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  void *v6;
  id v7;
  _BYTE v8[24];
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  _BYTE v12[24];
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0980);
  result = sub_1BB86DF48();
  if (!v13)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D5790);
  result = sub_1BB86DF48();
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D59E0);
  result = sub_1BB86DF48();
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, &qword_1ED3C0B30);
  result = sub_1BB86DF3C();
  if (result)
  {
    v6 = (void *)result;
    type metadata accessor for PuzzleGameCenterService();
    swift_allocObject();
    v7 = sub_1BB5039B0((uint64_t)v12, v5, (uint64_t)v10, (uint64_t)v8, v6);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    result = sub_1BA4A2870((unint64_t *)&unk_1ED3C4280, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleGameCenterService, (uint64_t)&unk_1BB9209E0);
    *a2 = v7;
    a2[1] = result;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BB53AF10(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, &qword_1ED3B0800);
  result = sub_1BB86DF48();
  if (v4)
  {
    sub_1BA4CECCC(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1BB86E5F0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB53AFDC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  void (*v10)(char *, uint64_t *, uint64_t, double);
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16[5];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D59E0);
  result = sub_1BB86DF48();
  v4 = v18;
  if (v18)
  {
    v5 = type metadata accessor for PuzzleStatsProcessor();
    v6 = v19;
    v7 = __swift_project_boxed_opaque_existential_1(v17, v18);
    v16[3] = v4;
    v8 = *(_QWORD *)(v6 + 8);
    v16[4] = v8;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
    v10 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(_QWORD *)(v4 - 8) + 16);
    v11 = ((uint64_t (*)(uint64_t *, _QWORD *, uint64_t))v10)(boxed_opaque_existential_0, v7, v4);
    v12 = MEMORY[0x1E0C80A78](v11);
    v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    v10(v14, boxed_opaque_existential_0, v4, v12);
    v15 = sub_1BA82BF70((uint64_t)v14, v5, v4, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1E7325818;
    *a2 = v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB53B130@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  sub_1BA4B07F0(0, &qword_1ED3C4038, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF2258], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - v3;
  v5 = type metadata accessor for PuzzleStatsStateStore();
  v6 = swift_allocObject();
  v7 = sub_1BB86EFEC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  sub_1BA5C9E38();
  swift_allocObject();
  result = sub_1BB86E350();
  *(_QWORD *)(v6 + 16) = result;
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1E72E5328;
  *a1 = v6;
  return result;
}

uint64_t sub_1BB53B244@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v27[5];
  char v28[24];
  uint64_t v29;
  _BYTE v30[24];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34[24];
  uint64_t v35;
  _QWORD v36[6];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D59E0);
  result = sub_1BB86DF48();
  if (!v36[3])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D5790);
  result = sub_1BB86DF48();
  if (!v35)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3C4300);
  result = sub_1BB86DF48();
  v6 = v32;
  if (!v32)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v7 = v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3C42B0);
  result = sub_1BB86DF48();
  if (!v31)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3C42E8);
  result = sub_1BB86DF48();
  if (!v29)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v26 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3BA810);
  result = sub_1BB86DF3C();
  if (result)
  {
    v8 = (void *)result;
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
    v10 = MEMORY[0x1E0C80A78](v9);
    v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
    v14 = *v12;
    v15 = type metadata accessor for PuzzleStatsProcessor();
    v27[4] = &off_1E7325818;
    v27[3] = v15;
    v27[0] = v14;
    v16 = type metadata accessor for PuzzleStatsService();
    v17 = swift_allocObject();
    v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v15);
    v19 = MEMORY[0x1E0C80A78](v18);
    v21 = (uint64_t *)((char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v22 + 16))(v21, v19);
    v23 = sub_1BA515C9C(v5, v36, (uint64_t)v34, v6, v7, *v21, (uint64_t)v28, v8, v17);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    v24 = v26;
    v26[3] = v16;
    v24[4] = &off_1E72869B0;
    *v24 = v23;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1BB53B618@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D59E0);
  result = sub_1BB86DF48();
  if (!v14)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3C4260);
  result = sub_1BB86DF48();
  if (!v12)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3C4250);
  result = sub_1BB86DF48();
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3C4360);
  result = sub_1BB86DF48();
  if (v8)
  {
    v5 = type metadata accessor for PuzzleImageShareAttributeProvider();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 176) = 0;
    sub_1BA4CECCC(&v13, v6 + 16);
    sub_1BA4CECCC(&v11, v6 + 56);
    sub_1BA4CECCC(&v9, v6 + 96);
    result = sub_1BA4CECCC(&v7, v6 + 136);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1E73011D0;
    *a2 = v6;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BB53B7EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3BA810);
  result = sub_1BB86DF3C();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for FeedUserInfo();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&protocol witness table for FeedUserInfo;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB53B880(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA4EFE00(0, &qword_1ED3B9830);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  v5 = type metadata accessor for HeadlineReferenceService();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  v39 = v5;
  v40 = sub_1BA4A2870(&qword_1ED39B958, (uint64_t (*)(uint64_t))type metadata accessor for HeadlineReferenceService, (uint64_t)&unk_1BB930F88);
  *(_QWORD *)&v38 = v6;
  sub_1BB86E2E4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = result;
  v8 = type metadata accessor for IssueReferenceService();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  v39 = v8;
  v40 = sub_1BA4A2870(qword_1ED39E6C0, (uint64_t (*)(uint64_t))type metadata accessor for IssueReferenceService, (uint64_t)&unk_1BB929760);
  *(_QWORD *)&v38 = v9;
  sub_1BB86E2E4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B9820);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v10 = result;
  v11 = type metadata accessor for TagReferenceService();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  v39 = v11;
  v40 = sub_1BA4A2870((unint64_t *)&unk_1ED39B570, (uint64_t (*)(uint64_t))type metadata accessor for TagReferenceService, (uint64_t)&unk_1BB8EB684);
  *(_QWORD *)&v38 = v12;
  sub_1BB86E2E4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97C0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v13 = result;
  v14 = type metadata accessor for AssetReferenceService();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  v39 = v14;
  v40 = sub_1BA4A2870(&qword_1ED39B6A0, (uint64_t (*)(uint64_t))type metadata accessor for AssetReferenceService, (uint64_t)&unk_1BB951CA8);
  *(_QWORD *)&v38 = v15;
  sub_1BB86E2E4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v16 = result;
  v17 = type metadata accessor for AssetManagerReferenceService();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v16;
  v39 = v17;
  v40 = sub_1BA4A2870(&qword_1ED3A8278, (uint64_t (*)(uint64_t))type metadata accessor for AssetManagerReferenceService, (uint64_t)&unk_1BB9064F0);
  *(_QWORD *)&v38 = v18;
  sub_1BB86E2E4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v19 = result;
  v20 = type metadata accessor for SubscriptionReferenceService();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v19;
  v39 = v20;
  v40 = sub_1BA4A2870(&qword_1ED39BB68, (uint64_t (*)(uint64_t))type metadata accessor for SubscriptionReferenceService, (uint64_t)&unk_1BB941FA0);
  *(_QWORD *)&v38 = v21;
  sub_1BB86E2E4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v22 = result;
  v23 = type metadata accessor for CloudContextReferenceService();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v22;
  v39 = v23;
  v40 = sub_1BA4A2870(&qword_1ED39BA98, (uint64_t (*)(uint64_t))type metadata accessor for CloudContextReferenceService, (uint64_t)&unk_1BB922AB0);
  *(_QWORD *)&v38 = v24;
  sub_1BB86E2E4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, &qword_1ED3D2D08);
  result = sub_1BB86DF48();
  if (!v39)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v25 = type metadata accessor for FeedWeatherReferenceService();
  v26 = swift_allocObject();
  sub_1BA4CECCC(&v38, v26 + 16);
  v39 = v25;
  v40 = sub_1BA4A2870(&qword_1ED39AD90, (uint64_t (*)(uint64_t))type metadata accessor for FeedWeatherReferenceService, (uint64_t)&unk_1BB895AAC);
  *(_QWORD *)&v38 = v26;
  sub_1BB86E2E4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3BA810);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v27 = result;
  v28 = type metadata accessor for UserInfoReferenceService();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v27;
  v39 = v28;
  v40 = sub_1BA4A2870(&qword_1ED3A75D0, (uint64_t (*)(uint64_t))type metadata accessor for UserInfoReferenceService, (uint64_t)&unk_1BB8886DC);
  *(_QWORD *)&v38 = v29;
  sub_1BB86E2E4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, &qword_1ED3D5790);
  result = sub_1BB86DF48();
  if (!v39)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v30 = type metadata accessor for PuzzleReferenceService();
  v31 = swift_allocObject();
  sub_1BA4CECCC(&v38, v31 + 16);
  v39 = v30;
  v40 = sub_1BA4A2870(&qword_1ED3A7008, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleReferenceService, (uint64_t)&unk_1BB89C028);
  *(_QWORD *)&v38 = v31;
  sub_1BB86E2E4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  result = sub_1BB86DF48();
  if (!v39)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v32 = type metadata accessor for PuzzleTypeReferenceService();
  v33 = swift_allocObject();
  sub_1BA4CECCC(&v38, v33 + 16);
  v39 = v32;
  v40 = sub_1BA4A2870((unint64_t *)&unk_1ED3A7D50, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleTypeReferenceService, (uint64_t)&unk_1BB958BDC);
  *(_QWORD *)&v38 = v33;
  sub_1BB86E2E4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, &qword_1ED3C4100);
  result = sub_1BB86DF48();
  if (!v39)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D38C0);
  result = sub_1BB86DF48();
  if (v37)
  {
    v34 = type metadata accessor for FeedSponsorshipAdReferenceService();
    v35 = swift_allocObject();
    sub_1BA4CECCC(&v38, v35 + 16);
    sub_1BA4CECCC(&v36, v35 + 56);
    v39 = v34;
    v40 = sub_1BA4A2870(&qword_1ED3A2918, (uint64_t (*)(uint64_t))type metadata accessor for FeedSponsorshipAdReferenceService, (uint64_t)&unk_1BB8AA34C);
    *(_QWORD *)&v38 = v35;
    sub_1BB86E2E4();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BB53C108()
{
  type metadata accessor for NetworkEventHandler();
  sub_1BB86E5D8();
  return swift_release();
}

uint64_t sub_1BB53C158(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, &qword_1ED3C43F8);
  result = sub_1BB86DF3C();
  if (result)
  {
    v2 = result;
    type metadata accessor for NetworkEventHandler();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v2;
    *(_DWORD *)(result + 24) = 24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB53C1DC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB53C200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB53A934(*(void **)(v1 + 16), a1);
}

uint64_t sub_1BB53C208()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BB53C22C()
{
  uint64_t v0;

  return sub_1BB53A8C8((_QWORD *)(v0 + 16));
}

uint64_t sub_1BB53C234()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB53C258@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB25EBA0(*(uint64_t (**)(void))(v1 + 16), a1);
}

void sub_1BB53C260(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A9BA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatBackgroundLayoutSolverResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void static FormatCodingHeaderSupplementaryKindStrategy.defaultValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t static FormatCodingHeaderSupplementaryKindStrategy.shouldEncode(wrappedValue:)(_BYTE *a1)
{
  char v1;
  char v2;

  if ((*a1 & 1) != 0)
  {
    v1 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v2 = v1 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  return v2 & 1;
}

unint64_t sub_1BB53C2F0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB53C314();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB53C314()
{
  unint64_t result;

  result = qword_1EF2C6A20;
  if (!qword_1EF2C6A20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingHeaderSupplementaryKindStrategy, &type metadata for FormatCodingHeaderSupplementaryKindStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2C6A20);
  }
  return result;
}

uint64_t sub_1BB53C360(_BYTE *a1)
{
  char v1;
  char v2;

  if ((*a1 & 1) != 0)
  {
    v1 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v2 = v1 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  return v2 & 1;
}

ValueMetadata *type metadata accessor for FormatCodingHeaderSupplementaryKindStrategy()
{
  return &type metadata for FormatCodingHeaderSupplementaryKindStrategy;
}

uint64_t FeedGroupConfigSidecar.subtype.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupConfigSidecar.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  return sub_1BAA40194(v3, a1);
}

uint64_t FeedGroupConfigSidecar.init(subtype:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;

  *a4 = a1;
  a4[1] = a2;
  v5 = (uint64_t)a4 + *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  return sub_1BB108BD0(a3, v5);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedGroupConfigSidecar(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  char *__dst;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v37 = *a2;
    *a1 = *a2;
    v38 = v37 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    v10 = (int *)type metadata accessor for FormatContent(0);
    v11 = v10[5];
    v12 = (char *)v7 + v11;
    v13 = &v8[v11];
    v14 = sub_1BB86C8B0();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    v16 = v10[6];
    v17 = (_QWORD *)((char *)v7 + v16);
    v18 = &v8[v16];
    v19 = *((_QWORD *)v18 + 1);
    *v17 = *(_QWORD *)v18;
    v17[1] = v19;
    v20 = v10[7];
    v21 = (_QWORD *)((char *)v7 + v20);
    v22 = &v8[v20];
    v23 = *((_QWORD *)v22 + 1);
    *v21 = *(_QWORD *)v22;
    v21[1] = v23;
    v24 = v10[8];
    v25 = (_QWORD *)((char *)v7 + v24);
    v26 = &v8[v24];
    v27 = *((_QWORD *)v26 + 1);
    *v25 = *(_QWORD *)v26;
    v25[1] = v27;
    v28 = v10[9];
    v29 = (_QWORD *)((char *)v7 + v28);
    v30 = &v8[v28];
    v31 = *((_QWORD *)v30 + 1);
    *v29 = *(_QWORD *)v30;
    v29[1] = v31;
    v32 = v10[10];
    __dst = (char *)v7 + v32;
    v33 = &v8[v32];
    v34 = sub_1BB871E24();
    v35 = *(_QWORD *)(v34 - 8);
    v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40(v33, 1, v34))
    {
      sub_1BA6D940C(0);
      memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
    }
    *(_QWORD *)((char *)v7 + v10[11]) = *(_QWORD *)&v8[v10[11]];
    *(_QWORD *)((char *)v7 + v10[12]) = *(_QWORD *)&v8[v10[12]];
    *(_QWORD *)((char *)v7 + v10[13]) = *(_QWORD *)&v8[v10[13]];
    *(_QWORD *)((char *)v7 + v10[14]) = *(_QWORD *)&v8[v10[14]];
    *(_QWORD *)((char *)v7 + v10[15]) = *(_QWORD *)&v8[v10[15]];
    *(_QWORD *)((char *)v7 + v10[16]) = *(_QWORD *)&v8[v10[16]];
    *(_QWORD *)((char *)v7 + v10[17]) = *(_QWORD *)&v8[v10[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  return (uint64_t *)v38;
}

uint64_t destroy for FeedGroupConfigSidecar(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for FormatContent(0);
  v6 = v4 + *(int *)(v5 + 20);
  v7 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v4 + *(int *)(v5 + 40);
  v9 = sub_1BB871E24();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FeedGroupConfigSidecar(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  char *__dst;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (char *)a2 + v4;
  v7 = *(_QWORD *)((char *)a2 + v4 + 8);
  *v5 = *(_QWORD *)((char *)a2 + v4);
  v5[1] = v7;
  v8 = (int *)type metadata accessor for FormatContent(0);
  v9 = v8[5];
  v10 = (char *)v5 + v9;
  v11 = &v6[v9];
  v12 = sub_1BB86C8B0();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = v8[6];
  v15 = (_QWORD *)((char *)v5 + v14);
  v16 = &v6[v14];
  v17 = *((_QWORD *)v16 + 1);
  *v15 = *(_QWORD *)v16;
  v15[1] = v17;
  v18 = v8[7];
  v19 = (_QWORD *)((char *)v5 + v18);
  v20 = &v6[v18];
  v21 = *((_QWORD *)v20 + 1);
  *v19 = *(_QWORD *)v20;
  v19[1] = v21;
  v22 = v8[8];
  v23 = (_QWORD *)((char *)v5 + v22);
  v24 = &v6[v22];
  v25 = *((_QWORD *)v24 + 1);
  *v23 = *(_QWORD *)v24;
  v23[1] = v25;
  v26 = v8[9];
  v27 = (_QWORD *)((char *)v5 + v26);
  v28 = &v6[v26];
  v29 = *((_QWORD *)v28 + 1);
  *v27 = *(_QWORD *)v28;
  v27[1] = v29;
  v30 = v8[10];
  __dst = (char *)v5 + v30;
  v31 = &v6[v30];
  v32 = sub_1BB871E24();
  v33 = *(_QWORD *)(v32 - 8);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36(v31, 1, v32))
  {
    sub_1BA6D940C(0);
    memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v31, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
  }
  *(_QWORD *)((char *)v5 + v8[11]) = *(_QWORD *)&v6[v8[11]];
  *(_QWORD *)((char *)v5 + v8[12]) = *(_QWORD *)&v6[v8[12]];
  *(_QWORD *)((char *)v5 + v8[13]) = *(_QWORD *)&v6[v8[13]];
  *(_QWORD *)((char *)v5 + v8[14]) = *(_QWORD *)&v6[v8[14]];
  *(_QWORD *)((char *)v5 + v8[15]) = *(_QWORD *)&v6[v8[15]];
  *(_QWORD *)((char *)v5 + v8[16]) = *(_QWORD *)&v6[v8[16]];
  *(_QWORD *)((char *)v5 + v8[17]) = *(_QWORD *)&v6[v8[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FeedGroupConfigSidecar(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for FormatContent(0);
  v10 = v9[5];
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = v9[6];
  v15 = (_QWORD *)((char *)v7 + v14);
  v16 = &v8[v14];
  *v15 = *(_QWORD *)v16;
  v15[1] = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v9[7];
  v18 = (_QWORD *)((char *)v7 + v17);
  v19 = &v8[v17];
  *v18 = *(_QWORD *)v19;
  v18[1] = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v9[8];
  v21 = (_QWORD *)((char *)v7 + v20);
  v22 = &v8[v20];
  *v21 = *(_QWORD *)v22;
  v21[1] = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v9[9];
  v24 = (_QWORD *)((char *)v7 + v23);
  v25 = &v8[v23];
  *v24 = *(_QWORD *)v25;
  v24[1] = *((_QWORD *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = v9[10];
  v27 = (char *)v7 + v26;
  v28 = &v8[v26];
  v29 = sub_1BB871E24();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v27, v28, v29);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
    goto LABEL_6;
  }
  if (v33)
  {
LABEL_6:
    sub_1BA6D940C(0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_7:
  *(_QWORD *)((char *)v7 + v9[11]) = *(_QWORD *)&v8[v9[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[12]) = *(_QWORD *)&v8[v9[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[13]) = *(_QWORD *)&v8[v9[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[14]) = *(_QWORD *)&v8[v9[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[15]) = *(_QWORD *)&v8[v9[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[16]) = *(_QWORD *)&v8[v9[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[17]) = *(_QWORD *)&v8[v9[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FeedGroupConfigSidecar(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  v7 = (int *)type metadata accessor for FormatContent(0);
  v8 = v7[5];
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)&v5[v7[6]] = *(_OWORD *)&v6[v7[6]];
  *(_OWORD *)&v5[v7[7]] = *(_OWORD *)&v6[v7[7]];
  *(_OWORD *)&v5[v7[8]] = *(_OWORD *)&v6[v7[8]];
  *(_OWORD *)&v5[v7[9]] = *(_OWORD *)&v6[v7[9]];
  v12 = v7[10];
  v13 = &v5[v12];
  v14 = &v6[v12];
  v15 = sub_1BB871E24();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1BA6D940C(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_QWORD *)&v5[v7[11]] = *(_QWORD *)&v6[v7[11]];
  *(_QWORD *)&v5[v7[12]] = *(_QWORD *)&v6[v7[12]];
  *(_QWORD *)&v5[v7[13]] = *(_QWORD *)&v6[v7[13]];
  *(_QWORD *)&v5[v7[14]] = *(_QWORD *)&v6[v7[14]];
  *(_QWORD *)&v5[v7[15]] = *(_QWORD *)&v6[v7[15]];
  *(_QWORD *)&v5[v7[16]] = *(_QWORD *)&v6[v7[16]];
  *(_QWORD *)&v5[v7[17]] = *(_QWORD *)&v6[v7[17]];
  return a1;
}

_QWORD *assignWithTake for FeedGroupConfigSidecar(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for FormatContent(0);
  v12 = v11[5];
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = v11[6];
  v17 = (_QWORD *)((char *)v8 + v16);
  v18 = &v9[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = v11[7];
  v22 = (_QWORD *)((char *)v8 + v21);
  v23 = &v9[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = v11[8];
  v27 = (_QWORD *)((char *)v8 + v26);
  v28 = &v9[v26];
  v30 = *(_QWORD *)v28;
  v29 = *((_QWORD *)v28 + 1);
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = v11[9];
  v32 = (_QWORD *)((char *)v8 + v31);
  v33 = &v9[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v36 = v11[10];
  v37 = (char *)v8 + v36;
  v38 = &v9[v36];
  v39 = sub_1BB871E24();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  v42 = v41(v37, 1, v39);
  v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 40))(v37, v38, v39);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v39);
    goto LABEL_6;
  }
  if (v43)
  {
LABEL_6:
    sub_1BA6D940C(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_7:
  *(_QWORD *)((char *)v8 + v11[11]) = *(_QWORD *)&v9[v11[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v8 + v11[12]) = *(_QWORD *)&v9[v11[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v8 + v11[13]) = *(_QWORD *)&v9[v11[13]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v8 + v11[14]) = *(_QWORD *)&v9[v11[14]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v8 + v11[15]) = *(_QWORD *)&v9[v11[15]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v8 + v11[16]) = *(_QWORD *)&v9[v11[16]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v8 + v11[17]) = *(_QWORD *)&v9[v11[17]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB53D15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FormatContent(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB53D1D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FormatContent(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t dispatch thunk of FeedGroupConfigSidecarConvertible.sidecar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1BB53D32C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = v2[1];
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB62E2A4(*(_QWORD *)(a1 + 32));
    __asm { BR              X9 }
  }
  *a2 = v4;
  a2[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatNodeStyleCollection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA543EBC();
  sub_1BA543F30(&qword_1ED39BE70, &qword_1ED39B180, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatNodeStyleCollection.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

NewsFeed::FormatNodeStyleCollection __swiftcall FormatNodeStyleCollection.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  NewsFeed::FormatNodeStyleCollection result;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = (void *)sub_1BA8F27B4(MEMORY[0x1E0DEE9D8]);
  *v1 = v2;
  v1[1] = v3;
  result.styleSourcesByClass._rawValue = v4;
  result.styles._rawValue = v3;
  return result;
}

unint64_t sub_1BB53D870@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  unint64_t result;

  v2 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA8F27B4(MEMORY[0x1E0DEE9D8]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

void sub_1BB53D8A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  __int128 v3;
  __int128 v4;
  _OWORD v5[5];
  uint64_t v6;

  v3 = *(_OWORD *)(a2 + 48);
  v5[2] = *(_OWORD *)(a2 + 32);
  v5[3] = v3;
  v5[4] = *(_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v4;
  sub_1BA7530BC(a1, (uint64_t)v5, *v2);
}

ValueMetadata *type metadata accessor for FormatNodeStyleCollection()
{
  return &type metadata for FormatNodeStyleCollection;
}

uint64_t sub_1BB53D8F4()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for FeedLayoutDirection()
{
  return &type metadata for FeedLayoutDirection;
}

uint64_t LayeredMediaViewModel.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LayeredMediaViewModel.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LayeredMediaViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for LayeredMediaViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t _s8NewsFeed15FormatMenuImageO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v11;
  uint64_t v12;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v6 = *a2;
  v5 = a2[1];
  v7 = a2[2];
  if ((v4 & 0x2000000000000000) != 0)
  {
    if ((v7 & 0x2000000000000000) != 0)
    {
      v11 = *a2;
      v12 = v3;
      sub_1BA7CCCA0(v6, v5, v7);
      sub_1BA7CCCA0(v3, v2, v4);
      sub_1BA7CCCA0(v3, v2, v4);
      sub_1BA7CCCA0(v6, v5, v7);
      v8 = static FormatSyncImageContent.== infix(_:_:)(&v12, (unint64_t *)&v11);
      goto LABEL_7;
    }
  }
  else if ((v7 & 0x2000000000000000) == 0)
  {
    sub_1BA7CCCA0(*a2, a2[1], v7);
    sub_1BA7CCCA0(v3, v2, v4);
    sub_1BA7CCCA0(v3, v2, v4);
    sub_1BA7CCCA0(v6, v5, v7);
    v8 = sub_1BB641260(v3, v2, v4, v6, v5, v7);
LABEL_7:
    v9 = v8;
    sub_1BA7CCC64(v3, v2, v4);
    sub_1BA7CCC64(v6, v5, v7);
    sub_1BA7CCC64(v6, v5, v7);
    sub_1BA7CCC64(v3, v2, v4);
    return v9 & 1;
  }
  sub_1BA7CCCA0(*a1, v2, v4);
  sub_1BA7CCCA0(v6, v5, v7);
  sub_1BA7CCC64(v3, v2, v4);
  sub_1BA7CCC64(v6, v5, v7);
  v9 = 0;
  return v9 & 1;
}

unint64_t sub_1BB53DB5C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB53DB80();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB53DB80()
{
  unint64_t result;

  result = qword_1EF2C6A88;
  if (!qword_1EF2C6A88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuImage, &type metadata for FormatMenuImage);
    atomic_store(result, (unint64_t *)&qword_1EF2C6A88);
  }
  return result;
}

unint64_t sub_1BB53DBC4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4ED7B4();
  a1[2] = sub_1BA7B7104();
  result = sub_1BB53DBF8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB53DBF8()
{
  unint64_t result;

  result = qword_1EF2C6A90;
  if (!qword_1EF2C6A90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuImage, &type metadata for FormatMenuImage);
    atomic_store(result, (unint64_t *)&qword_1EF2C6A90);
  }
  return result;
}

uint64_t destroy for FormatMenuImage(uint64_t *a1)
{
  return sub_1BA7CCC64(*a1, a1[1], a1[2]);
}

uint64_t *_s8NewsFeed15FormatMenuImageOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1BA7CCCA0(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for FormatMenuImage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1BA7CCCA0(*a2, v4, v5);
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1BA7CCC64(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for FormatMenuImage(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1BA7CCC64(v4, v6, v5);
  return a1;
}

uint64_t sub_1BB53DD2C(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 16) >> 61) & 1;
}

uint64_t sub_1BB53DD38(uint64_t result)
{
  *(_QWORD *)(result + 16) &= ~0x2000000000000000uLL;
  return result;
}

_QWORD *sub_1BB53DD48(_QWORD *result, char a2)
{
  unint64_t v2;

  v2 = result[2] & 0xCFFFFFFFFFFFFFF8 | ((unint64_t)(a2 & 1) << 61);
  *result &= 0xCFFFFFFFFFFFFFF8;
  result[2] = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuImage()
{
  return &type metadata for FormatMenuImage;
}

id SharingPuzzleTypeURLActivityItemSource.__allocating_init(puzzleType:linkPresentationSource:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1BB53E3A0(a1, a2);
  swift_unknownObjectRelease();
  swift_release();
  return v6;
}

id SharingPuzzleTypeURLActivityItemSource.init(puzzleType:linkPresentationSource:)(void *a1, uint64_t a2)
{
  id v2;

  v2 = sub_1BB53E3A0(a1, a2);
  swift_unknownObjectRelease();
  swift_release();
  return v2;
}

id SharingPuzzleTypeURLActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingPuzzleTypeURLActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingPuzzleTypeURLActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_OWORD *SharingPuzzleTypeURLActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *result;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10[3];
  uint64_t v11;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7E8428(v1 + OBJC_IVAR____TtC8NewsFeed38SharingPuzzleTypeURLActivityItemSource_puzzleTypeURL, (uint64_t)v5);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    result = (_OWORD *)sub_1BA7F0A80((uint64_t)v5);
    *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEA968];
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  }
  else
  {
    v11 = v6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_0, v5, v6);
    return sub_1BA76EAE0(v10, (_OWORD *)a1);
  }
  return result;
}

uint64_t SharingPuzzleTypeURLActivityItemSource.activityViewController(_:itemForActivityType:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v18;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v8 = sub_1BB8729A0();
    v10 = v9;
    if (v8 == sub_1BB8729A0() && v10 == v11)
    {
      result = swift_bridgeObjectRelease_n();
      goto LABEL_10;
    }
    v13 = sub_1BB874398();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
LABEL_10:
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
  }
  sub_1BA7E8428(v2 + OBJC_IVAR____TtC8NewsFeed38SharingPuzzleTypeURLActivityItemSource_puzzleTypeURL, (uint64_t)v7);
  v15 = sub_1BB86C67C();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15) == 1)
  {
    result = sub_1BA7F0A80((uint64_t)v7);
    goto LABEL_10;
  }
  *(_QWORD *)(a2 + 24) = v15;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_0, v7, v15);
}

LPLinkMetadata_optional __swiftcall SharingPuzzleTypeURLActivityItemSource.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  uint64_t v1;
  objc_class *v2;
  Swift::Bool v3;
  objc_class *v4;
  id v5;
  LPLinkMetadata_optional result;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed38SharingPuzzleTypeURLActivityItemSource_linkPresentationSource))
  {
    sub_1BB86E71C();
    v2 = (objc_class *)objc_msgSend(v5, sel_linkMetadata);
    swift_unknownObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v4 = v2;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

id sub_1BB53E3A0(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3;
  v11 = objc_msgSend(a1, sel_identifier);
  if (!v11)
  {
    sub_1BB8729A0();
    v11 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v12 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForPuzzleTypeID_, v11);

  if (v12)
  {
    sub_1BB86C5EC();

    v13 = sub_1BB86C67C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
  }
  else
  {
    v14 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  }
  sub_1BA7F0AD4((uint64_t)v9, (uint64_t)&v10[OBJC_IVAR____TtC8NewsFeed38SharingPuzzleTypeURLActivityItemSource_puzzleTypeURL]);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed38SharingPuzzleTypeURLActivityItemSource_linkPresentationSource] = a2;
  swift_retain();

  v16.receiver = v10;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t sub_1BB53E520()
{
  return type metadata accessor for SharingPuzzleTypeURLActivityItemSource();
}

uint64_t type metadata accessor for SharingPuzzleTypeURLActivityItemSource()
{
  uint64_t result;

  result = qword_1EF2C6AD0;
  if (!qword_1EF2C6AD0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB53E564()
{
  unint64_t v0;

  sub_1BA6EF3B0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SharingPuzzleTypeURLActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingPuzzleTypeURLActivityItemSource.__allocating_init(puzzleType:linkPresentationSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BB53E5EC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  void *v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  int v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t);
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  _QWORD *v71;
  void *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(_QWORD *, _QWORD, uint64_t, _QWORD *);
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  int64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t *v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  int v128;
  _QWORD *v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *v140;
  int64_t v141;
  _OWORD *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  __int128 v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  _QWORD *v168;
  uint64_t result;
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  _OWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  __int128 v189;
  void *v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  id v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  _QWORD *v201;
  uint64_t v202;
  __int128 v203;
  _QWORD *v204;
  uint64_t *v205;
  unint64_t v206;
  void (*v207)(_QWORD *, _QWORD, uint64_t);
  uint64_t v208;
  uint64_t v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  _OWORD v217[3];
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  _OWORD v225[3];
  __int128 v226;
  unsigned __int8 v227;
  _BYTE v228[32];
  uint64_t v229;
  __int128 v230;
  __int128 v231;
  uint64_t v232;
  _BYTE v233[64];
  _OWORD v234[2];
  uint64_t v235;
  _OWORD v236[2];
  uint64_t v237;

  v1 = v0;
  v2 = type metadata accessor for FormatOption();
  v174 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v205 = (uint64_t *)((char *)&v170 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v204 = (uint64_t *)((char *)&v170 - v5);
  sub_1BA8C88C8(0);
  v186 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v170 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v170 - v11);
  v13 = type metadata accessor for FeedWebEmbed();
  v181 = *(_QWORD *)(v13 - 8);
  v182 = (_QWORD *)v13;
  MEMORY[0x1E0C80A78](v13);
  v173 = (uint64_t)&v170 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FeedWeather(0);
  v178 = *(_QWORD *)(v15 - 8);
  v179 = v15;
  MEMORY[0x1E0C80A78](v15);
  v172 = (uint64_t)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = type metadata accessor for FeedHeadline(0);
  v17 = *(_QWORD *)(v193 - 8);
  MEMORY[0x1E0C80A78](v193);
  v171 = (uint64_t *)((char *)&v170 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA93EB20(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v170 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v199 = (uint64_t)&v170 - v23;
  sub_1BA93EB3C(0);
  MEMORY[0x1E0C80A78](v24);
  v177 = (uint64_t)&v170 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v198 = (uint64_t)&v170 - v27;
  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v28);
  v175 = (uint64_t)&v170 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v197 = (uint64_t)&v170 - v31;
  swift_retain();
  sub_1BB23AE4C((uint64_t)v233, 0.0, 0.0, 22.0, 22.0);
  swift_release();
  v32 = v0[8];
  v33 = *(_QWORD *)(v32 + 16);
  v185 = v9;
  v180 = v21;
  if (v33 && (v34 = sub_1BA6E35A8(0x6974704F64656546, 0xEE007473694C6E6FLL), (v35 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v32 + 56) + 40 * v34, (uint64_t)&v230);
  }
  else
  {
    v232 = 0;
    v230 = 0u;
    v231 = 0u;
  }
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3B17E0, (unint64_t *)&qword_1ED3B17D0, (uint64_t)&protocol descriptor for FeedGroupItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v36 = swift_dynamicCast();
  if (v36)
    v37 = *((_QWORD *)&v226 + 1);
  else
    v37 = 0;
  if (v36)
    v38 = v226;
  else
    v38 = 0;
  v39 = v1[8];
  v40 = *(_QWORD *)(v39 + 16);
  v201 = v1;
  if (v40 && (v41 = sub_1BA6E35A8(0x756F724764656546, 0xEC00000067615470), (v42 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v39 + 56) + 40 * v41, (uint64_t)&v230);
  }
  else
  {
    v232 = 0;
    v230 = 0u;
    v231 = 0u;
  }
  v43 = swift_dynamicCast();
  v45 = (void *)*((_QWORD *)&v226 + 1);
  v44 = v226;
  v46 = v227;
  if (!v43)
    v46 = 0;
  v191 = v46;
  if (!v43)
    v45 = 0;
  v190 = v45;
  if (!v43)
    v44 = 0;
  v196 = (void *)v44;
  v47 = v201[8];
  if (*(_QWORD *)(v47 + 16) && (v48 = sub_1BA6E35A8(0x7573734964656546, 0xE900000000000065), (v49 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v47 + 56) + 40 * v48, (uint64_t)v228);
  }
  else
  {
    v229 = 0;
    memset(v228, 0, sizeof(v228));
  }
  v50 = (uint64_t)v201;
  if (swift_dynamicCast())
  {
    nullsub_1();
  }
  else
  {
    sub_1BA90EFB8(&v226);
    sub_1BA5193C4((uint64_t)&v226, (uint64_t)&v230, (uint64_t (*)(_QWORD))sub_1BA8EDBF4);
  }
  sub_1BA5193C4((uint64_t)&v230, (uint64_t)&v226, (uint64_t (*)(_QWORD))sub_1BA8EDBF4);
  sub_1BB540164(v50, 0x6461654864656546, 0xEC000000656E696CLL, type metadata accessor for FeedHeadline, v197);
  sub_1BB540164(v50, 0x7461655764656546, 0xEB00000000726568, type metadata accessor for FeedWeather, v198);
  sub_1BB540164(v50, 0x4562655764656546, 0xEC0000006465626DLL, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed, v199);
  v51 = *(_QWORD *)(v50 + 64);
  if (*(_QWORD *)(v51 + 16) && (v52 = sub_1BA6E35A8(0x6373654464656546, 0xEE00726F74706972), (v53 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v51 + 56) + 40 * v52, (uint64_t)&v218);
  }
  else
  {
    *(_QWORD *)&v220 = 0;
    v218 = 0u;
    v219 = 0u;
  }
  v54 = swift_dynamicCast();
  v55 = (void *)v210;
  if (!v54)
    v55 = 0;
  v195 = v55;
  v56 = *(_QWORD *)(v50 + 64);
  if (*(_QWORD *)(v56 + 16) && (v57 = sub_1BA6E35A8(0x726F705364656546, 0xEF746E6576457374), (v58 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v56 + 56) + 40 * v57, (uint64_t)&v218);
  }
  else
  {
    *(_QWORD *)&v220 = 0;
    v218 = 0u;
    v219 = 0u;
  }
  if (swift_dynamicCast())
  {
    v59 = *((_QWORD *)&v210 + 1);
    v188 = v210;
    v189 = v211;
    v200 = v212;
  }
  else
  {
    v200 = 0;
    v189 = 0uLL;
    v59 = 0;
    v188 = 0;
  }
  v194 = v59;
  if (v38)
  {
    swift_bridgeObjectRetain();
    v60 = swift_bridgeObjectRetain();
    sub_1BA5DCC4C(v60);
  }
  else
  {
    v38 = MEMORY[0x1E0DEE9D8];
    v37 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v218 = v38;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB0AD630();
  v61 = sub_1BB872BC8();
  v176 = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v218 = v37;
  sub_1BA6D3834(v61);
  v187 = v218;
  sub_1BA8EDAAC();
  v184 = swift_allocObject();
  *(_OWORD *)(v184 + 16) = xmmword_1BB87A390;
  v62 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v63 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v209 = *(_QWORD *)(v7 + 72);
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1BB887E50;
  v183 = v64;
  v206 = v63;
  v65 = (_QWORD *)(v64 + v63);
  sub_1BA5B089C(0, (unint64_t *)&qword_1EF2A9CD0, (unint64_t *)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, v62);
  v67 = v66;
  v68 = swift_allocObject();
  v203 = xmmword_1BB87CE70;
  *(_OWORD *)(v68 + 16) = xmmword_1BB87CE70;
  if (v195)
  {
    v69 = v195;
    v70 = FCFeedDescriptor.feedTag.getter();
    v71 = sub_1BB1F5C20((uint64_t)v233, v70);

    swift_unknownObjectRelease();
  }
  else
  {
    v71 = sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  v72 = v196;
  *(_QWORD *)(v68 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v68 + 64) = &off_1E7335C38;
  *(_QWORD *)(v68 + 32) = v71;
  v73 = sub_1BA9747FC(v68);
  swift_setDeallocating();
  v202 = sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v74 = sub_1BB6DF010(v73);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(1684366662, 0xE400000000000000, (uint64_t)v74, 0, 0, v65);
  v75 = type metadata accessor for FormatInspectionItem(0);
  v207 = *(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v75 - 8) + 56);
  v208 = v75;
  v207(v65, 0, 1);
  v76 = swift_allocObject();
  *(_OWORD *)(v76 + 16) = v203;
  v192 = v67;
  if (v72)
  {
    v77 = v190;
    sub_1BB5410AC((uint64_t)v72, v190);
    v78 = sub_1BB1F5C20((uint64_t)v233, v72);
    sub_1BB349550((uint64_t)v72, v77);
  }
  else
  {
    v78 = sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  v79 = (_QWORD *)((char *)v65 + v209);
  *(_QWORD *)(v76 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v76 + 64) = &off_1E7335C38;
  *(_QWORD *)(v76 + 32) = v78;
  v80 = sub_1BA9747FC(v76);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v81 = sub_1BB6DF010(v80);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(6775124, 0xE300000000000000, (uint64_t)v81, 0, 0, v79);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v207)(v79, 0, 1, v208);
  v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = v203;
  sub_1BA5193C4((uint64_t)&v226, (uint64_t)&v218, (uint64_t (*)(_QWORD))sub_1BA8EDBF4);
  if (sub_1BA84DAF0((uint64_t *)&v218) == 1)
  {
    v83 = (uint64_t)sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v216 = v224;
    v217[0] = v225[0];
    *(_OWORD *)((char *)v217 + 9) = *(_OWORD *)((char *)v225 + 9);
    v212 = v220;
    v213 = v221;
    v214 = v222;
    v215 = v223;
    v210 = v218;
    v211 = v219;
    sub_1BA8966F8((uint64_t)&v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BB43E670);
    v83 = sub_1BB45614C((uint64_t)v233, &v210);
    sub_1BA8966F8((uint64_t)&v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA90EF2C);
  }
  v84 = (_QWORD *)((char *)v65 + 2 * v209);
  *(_QWORD *)(v82 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v82 + 64) = &off_1E7335C38;
  *(_QWORD *)(v82 + 32) = v83;
  v85 = sub_1BA9747FC(v82);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v86 = sub_1BB6DF010(v85);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x6575737349, 0xE500000000000000, (uint64_t)v86, 0, 0, v84);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v207)(v84, 0, 1, v208);
  v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = v203;
  v88 = v175;
  sub_1BA4C2DD8(v197, v175, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v88, 1, v193) == 1)
  {
    sub_1BA4A2E80(v88, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
    v89 = (uint64_t)sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v90 = (void (*)(_QWORD *, _QWORD, uint64_t, _QWORD *))v171;
    sub_1BA5193C4(v88, (uint64_t)v171, type metadata accessor for FeedHeadline);
    v89 = sub_1BA89DF1C((uint64_t)v233, v90);
    sub_1BA4A2E80((uint64_t)v90, type metadata accessor for FeedHeadline);
  }
  v91 = (_QWORD *)((char *)v65 + 3 * v209);
  *(_QWORD *)(v87 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v87 + 64) = &off_1E7335C38;
  *(_QWORD *)(v87 + 32) = v89;
  v92 = sub_1BA9747FC(v87);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v93 = sub_1BB6DF010(v92);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x656E696C64616548, 0xE800000000000000, (uint64_t)v93, 0, 0, v91);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v207)(v91, 0, 1, v208);
  v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = v203;
  v95 = v194;
  v193 = (uint64_t)v65;
  if (v194)
  {
    v96 = v188;
    *(_QWORD *)&v210 = v188;
    *((_QWORD *)&v210 + 1) = v194;
    v211 = v189;
    LOBYTE(v212) = v200 & 1;
    sub_1BB54107C(v188, v194);
    v97 = sub_1BB2A54C4((uint64_t)v233, (uint64_t)&v210);
    v65 = (_QWORD *)v193;
    sub_1BB54104C(v96, v95);
  }
  else
  {
    v97 = sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  v98 = (_QWORD *)((char *)v65 + 4 * v209);
  *(_QWORD *)(v94 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v94 + 64) = &off_1E7335C38;
  *(_QWORD *)(v94 + 32) = v97;
  v99 = sub_1BA9747FC(v94);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v100 = sub_1BB6DF010(v99);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x45207374726F7053, 0xEC000000746E6576, (uint64_t)v100, 0, 0, v98);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v207)(v98, 0, 1, v208);
  v101 = swift_allocObject();
  *(_OWORD *)(v101 + 16) = v203;
  v102 = v177;
  sub_1BA4C2DD8(v198, v177, (uint64_t (*)(_QWORD))sub_1BA93EB3C);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v102, 1, v179) == 1)
  {
    sub_1BA4A2E80(v102, (uint64_t (*)(_QWORD))sub_1BA93EB3C);
    v103 = sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v104 = v172;
    sub_1BA5193C4(v102, v172, type metadata accessor for FeedWeather);
    v103 = sub_1BAA85488((uint64_t)v233, v104);
    sub_1BA4A2E80(v104, type metadata accessor for FeedWeather);
  }
  v105 = (_QWORD *)((char *)v65 + 5 * v209);
  *(_QWORD *)(v101 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v101 + 64) = &off_1E7335C38;
  *(_QWORD *)(v101 + 32) = v103;
  v106 = sub_1BA9747FC(v101);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v107 = sub_1BB6DF010(v106);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x72656874616557, 0xE700000000000000, (uint64_t)v107, 0, 0, v105);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v207)(v105, 0, 1, v208);
  v108 = swift_allocObject();
  *(_OWORD *)(v108 + 16) = v203;
  v109 = (uint64_t)v180;
  sub_1BA4C2DD8(v199, (uint64_t)v180, (uint64_t (*)(_QWORD))sub_1BA93EB20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v181 + 48))(v109, 1, v182) == 1)
  {
    sub_1BA4A2E80(v109, (uint64_t (*)(_QWORD))sub_1BA93EB20);
    v110 = sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v111 = v173;
    sub_1BA5193C4(v109, v173, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v110 = sub_1BB495B9C((uint64_t)v233, v111);
    sub_1BA4A2E80(v111, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  }
  v112 = (_QWORD *)((char *)v65 + 6 * v209);
  *(_QWORD *)(v108 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v108 + 64) = &off_1E7335C38;
  *(_QWORD *)(v108 + 32) = v110;
  v113 = sub_1BA9747FC(v108);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v114 = sub_1BB6DF010(v113);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x6465626D45626557, 0xE800000000000000, (uint64_t)v114, 0, 0, v112);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v207)(v112, 0, 1, v208);
  v115 = swift_allocObject();
  v116 = (_QWORD *)v115;
  *(_OWORD *)(v115 + 16) = v203;
  v117 = v187;
  v118 = *(_QWORD *)(v187 + 16);
  if (v118)
  {
    v181 = v115 + 32;
    v182 = (_QWORD *)v115;
    *(_QWORD *)&v210 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v118, 0);
    v119 = v117 + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80));
    v120 = *(_QWORD *)(v174 + 72);
    v121 = (uint64_t)v12;
    do
    {
      v122 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v204;
      sub_1BA4C2DD8(v119, (uint64_t)v204, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v123 = v205;
      sub_1BA4C2DD8((uint64_t)v122, (uint64_t)v205, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BB0798DC(v123, v12);
      ((void (*)(uint64_t *, _QWORD, uint64_t, uint64_t))v207)(v12, 0, 1, v208);
      sub_1BA4A2E80((uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v124 = v210;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E1C(0, *(_QWORD *)(v124 + 16) + 1, 1);
        v124 = v210;
      }
      v126 = *(_QWORD *)(v124 + 16);
      v125 = *(_QWORD *)(v124 + 24);
      if (v126 >= v125 >> 1)
      {
        sub_1BAC79E1C(v125 > 1, v126 + 1, 1);
        v124 = v210;
      }
      *(_QWORD *)(v124 + 16) = v126 + 1;
      v127 = v124 + v206 + v126 * v209;
      v12 = (uint64_t *)v121;
      sub_1BA5193C4(v121, v127, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v119 += v120;
      --v118;
    }
    while (v118);
    swift_bridgeObjectRelease();
    v128 = v200;
    v65 = (_QWORD *)v193;
    v116 = v182;
  }
  else
  {
    swift_bridgeObjectRelease();
    v124 = MEMORY[0x1E0DEE9D8];
    v128 = v200;
  }
  v129 = (_QWORD *)((char *)&v65[v209] - v209);
  sub_1BAF89090(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v124, v234);
  swift_bridgeObjectRelease();
  v116[7] = &type metadata for FormatInspectionGroup;
  v116[8] = &off_1E72D2F60;
  v130 = swift_allocObject();
  v116[4] = v130;
  v131 = v234[1];
  *(_OWORD *)(v130 + 16) = v234[0];
  *(_OWORD *)(v130 + 32) = v131;
  *(_QWORD *)(v130 + 48) = v235;
  v132 = sub_1BA9747FC((uint64_t)v116);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v133 = sub_1BB6DF010(v132);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x736E6F6974704FLL, 0xE700000000000000, (uint64_t)v133, 0, 0, v129);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v207)(v129, 0, 1, v208);
  v134 = swift_allocObject();
  *(_OWORD *)(v134 + 16) = v203;
  v135 = v201[4];
  v136 = v201[5];
  __swift_project_boxed_opaque_existential_1(v201 + 1, v135);
  v137 = (*(uint64_t (**)(uint64_t, uint64_t))(v136 + 80))(v135, v136);
  v138 = sub_1BA67F4CC(v137);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v210 = v138;
  swift_retain();
  v139 = v176;
  sub_1BA79BAB4((uint64_t *)&v210);
  if (v139)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    v187 = v134;
    v192 = 0;
    swift_release();
    v140 = (_QWORD *)v210;
    v141 = *(_QWORD *)(v210 + 16);
    v142 = v185;
    v200 = v128;
    if (v141)
    {
      *(_QWORD *)&v210 = MEMORY[0x1E0DEE9D8];
      sub_1BAC79E1C(0, v141, 0);
      v143 = v210;
      v144 = type metadata accessor for FormatInspectionItem.Value(0);
      v204 = *(_QWORD **)(*(_QWORD *)(v144 - 8) + 56);
      v205 = (uint64_t *)v144;
      v145 = v142 + 1;
      v182 = v140;
      v146 = v140 + 5;
      v203 = xmmword_1BB8D4900;
      do
      {
        v147 = *v146;
        v148 = v208;
        v149 = (_QWORD *)((char *)v142 + *(int *)(v208 + 24));
        *v149 = *(v146 - 1);
        v149[1] = v147;
        v150 = (uint64_t)v205;
        swift_storeEnumTagMultiPayload();
        ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v204)(v149, 0, 1, v150);
        *v142 = v203;
        *v145 = 0;
        v145[1] = 0;
        v151 = (char *)v142 + *(int *)(v148 + 28);
        *(_QWORD *)v151 = 0;
        *((_QWORD *)v151 + 1) = 0;
        v151[16] = -1;
        ((void (*)(_OWORD *, _QWORD, uint64_t, uint64_t))v207)(v142, 0, 1, v148);
        *(_QWORD *)&v210 = v143;
        v152 = (uint64_t)v142;
        v154 = *(_QWORD *)(v143 + 16);
        v153 = *(_QWORD *)(v143 + 24);
        swift_bridgeObjectRetain();
        if (v154 >= v153 >> 1)
        {
          sub_1BAC79E1C(v153 > 1, v154 + 1, 1);
          v143 = v210;
        }
        v146 += 2;
        *(_QWORD *)(v143 + 16) = v154 + 1;
        sub_1BA5193C4(v152, v143 + v206 + v154 * v209, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
        --v141;
        v142 = (_OWORD *)v152;
      }
      while (v141);
      swift_release();
      v155 = v201;
      v65 = (_QWORD *)v193;
    }
    else
    {
      swift_release();
      v143 = MEMORY[0x1E0DEE9D8];
      v155 = v201;
    }
    v156 = &v65[v209];
    sub_1BAF89090(0x726F7463656C6553, 0xE900000000000073, 0, 0, v143, v236);
    swift_bridgeObjectRelease();
    v157 = v187;
    *(_QWORD *)(v187 + 56) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(v157 + 64) = &off_1E72D2F60;
    v158 = swift_allocObject();
    *(_QWORD *)(v157 + 32) = v158;
    v159 = v236[1];
    *(_OWORD *)(v158 + 16) = v236[0];
    *(_OWORD *)(v158 + 32) = v159;
    *(_QWORD *)(v158 + 48) = v237;
    v160 = sub_1BA9747FC(v157);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v161 = sub_1BB6DF010(v160);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x726F7463656C6553, 0xE900000000000073, (uint64_t)v161, 0, 0, v156);
    ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v207)(v156, 0, 1, v208);
    sub_1BAF89090(0x70756F7247, 0xE500000000000000, 0, 0, v183, &v210);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v162 = (_QWORD *)v184;
    *(_QWORD *)(v184 + 56) = &type metadata for FormatInspectionGroup;
    v162[8] = &off_1E72D2F60;
    v163 = swift_allocObject();
    v162[4] = v163;
    v164 = v211;
    *(_OWORD *)(v163 + 16) = v210;
    *(_OWORD *)(v163 + 32) = v164;
    *(_QWORD *)(v163 + 48) = v212;
    v165 = v155[10];
    MEMORY[0x1E0C80A78](v163);
    *(&v170 - 2) = (uint64_t)v155;
    swift_bridgeObjectRetain();
    v166 = sub_1BA8A3CB4((void (*)(_QWORD *__return_ptr, _QWORD *))sub_1BB541030, (uint64_t)(&v170 - 4), v165);
    swift_bridgeObjectRelease();
    v167 = sub_1BB6DF010(v166);
    swift_bridgeObjectRelease();
    v162[12] = &type metadata for FormatInspection;
    v162[13] = &off_1E7335C38;
    v162[9] = v167;
    v168 = sub_1BB6DF010((uint64_t)v162);
    swift_setDeallocating();
    sub_1BA5B089C(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1BB54104C(v188, v194);

    sub_1BA8966F8((uint64_t)&v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA90EF2C);
    sub_1BB349550((uint64_t)v196, v190);
    sub_1BA8DAD20((uint64_t)v233);
    sub_1BA4A2E80(v199, (uint64_t (*)(_QWORD))sub_1BA93EB20);
    sub_1BA4A2E80(v198, (uint64_t (*)(_QWORD))sub_1BA93EB3C);
    sub_1BA4A2E80(v197, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
    return (uint64_t)v168;
  }
  return result;
}

uint64_t sub_1BB53FE98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2 + OBJC_IVAR____TtC8NewsFeed39DebugFormatBindingDetailsViewController_bindings;
  swift_beginAccess();
  sub_1BB5410E0(a1, v7);
  swift_endAccess();
  sub_1BA4C2DD8(v7, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v8 = sub_1BB53E5EC();
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v9 = sub_1BB6DED58(v8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v9;
  swift_bridgeObjectRelease();
  sub_1BB20A0CC();
  return sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
}

void sub_1BB540008()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BB540034()
{
  uint64_t v0;

  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatBindingDetailsViewController_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  return swift_release();
}

uint64_t sub_1BB5400A8()
{
  return type metadata accessor for DebugFormatBindingDetailsViewController();
}

uint64_t type metadata accessor for DebugFormatBindingDetailsViewController()
{
  uint64_t result;

  result = qword_1EF2C6B10;
  if (!qword_1EF2C6B10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB5400EC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutBindingContext();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BB540164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  _OWORD v13[2];
  uint64_t v14;

  v7 = *(_QWORD *)(a1 + 64);
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_1BA6E35A8(a2, a3), (v9 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v7 + 56) + 40 * v8, (uint64_t)v13);
  }
  else
  {
    v14 = 0;
    memset(v13, 0, sizeof(v13));
  }
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3B17E0, (unint64_t *)&qword_1ED3B17D0, (uint64_t)&protocol descriptor for FeedGroupItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = a4(0);
  v11 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a5, v11 ^ 1u, 1, v10);
}

uint64_t sub_1BB540240@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v29;
  _QWORD *v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void (*v63)(_QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD *v64;
  int64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  __int128 *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  char *v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t result;
  __int128 v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  void (*v90)(_QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  __int128 v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  __int128 v99;
  void (*v100)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t *v102;
  unint64_t v103;
  uint64_t v104;
  void (*v105)(_QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD v106[32];
  _OWORD v107[2];
  uint64_t v108;
  _OWORD v109[2];
  uint64_t v110;
  _OWORD v111[2];
  uint64_t v112;
  _OWORD v113[2];
  uint64_t v114;
  _OWORD v115[3];
  __int128 v116;
  uint64_t v117[3];
  uint64_t v118;

  v96 = a2;
  v94 = a3;
  v4 = type metadata accessor for FormatOption();
  v89 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  *(_QWORD *)&v99 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v98 = (uint64_t)&v87 - v7;
  sub_1BA8C88C8(0);
  v93 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (__int128 *)((char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v102 = (uint64_t *)((char *)&v87 - v13);
  v14 = a1[1];
  v115[0] = *a1;
  v115[1] = v14;
  v15 = a1[3];
  v115[2] = a1[2];
  v116 = v15;
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = *(_QWORD *)(v9 + 72);
  v19 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BB87D7A0;
  v92 = v20;
  v103 = v19;
  v21 = v20 + v19;
  v22 = *((_QWORD *)&v115[0] + 1);
  v23 = *(_QWORD *)&v115[0];
  v24 = type metadata accessor for FormatInspectionItem(0);
  v25 = (char *)(v21 + *(int *)(v24 + 24));
  *(_QWORD *)v25 = v23;
  *((_QWORD *)v25 + 1) = v22;
  v26 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  v100 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v101 = v26;
  v100(v25, 0, 1, v26);
  *(_OWORD *)v21 = xmmword_1BB918EB0;
  *(_QWORD *)(v21 + 16) = 0;
  *(_QWORD *)(v21 + 24) = 0;
  v118 = v24;
  v27 = v21 + *(int *)(v24 + 28);
  *(_QWORD *)v27 = 0;
  *(_QWORD *)(v27 + 8) = 0;
  *(_BYTE *)(v27 + 16) = -1;
  v28 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v28(v21, 0, 1, v24);
  v97 = v21;
  v104 = v18;
  v91 = (_QWORD *)(v21 + v18);
  sub_1BA5B089C(0, (unint64_t *)&qword_1EF2A9CD0, (unint64_t *)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, v16);
  v30 = v29;
  inited = swift_initStackObject();
  v95 = xmmword_1BB87CE70;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  type metadata accessor for GroupLayoutBindingContext();
  v32 = v96;
  sub_1BA79EDD0((uint64_t)v115);
  swift_bridgeObjectRetain();
  v33 = swift_bridgeObjectRetain();
  v34 = v105;
  v35 = sub_1BB540DA8(v33, (uint64_t)v115);
  sub_1BA79ED54((uint64_t)v115);
  swift_bridgeObjectRelease();
  v106[2] = v32;
  v106[3] = v115;
  v36 = sub_1BB540C40(v35, (void (*)(uint64_t))sub_1BB5410D8, (uint64_t)v106);
  v90 = v34;
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x736D657449, 0xE500000000000000, 0, 0, v36, v107);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v37 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v37;
  *(_QWORD *)(v37 + 48) = v108;
  v38 = v107[1];
  *(_OWORD *)(v37 + 16) = v107[0];
  *(_OWORD *)(v37 + 32) = v38;
  v39 = sub_1BA9747FC(inited);
  swift_setDeallocating();
  v96 = sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  v40 = sub_1BB6DF010(v39);
  swift_bridgeObjectRelease();
  v41 = v91;
  sub_1BAAF3C48(0x736D657449, 0xE500000000000000, (uint64_t)v40, 0, 0, v91);
  v105 = v28;
  v28((unint64_t)v41, 0, 1, v118);
  v91 = v30;
  v42 = swift_initStackObject();
  v43 = (_QWORD *)v42;
  *(_OWORD *)(v42 + 16) = v95;
  v44 = v116;
  v117[0] = v116;
  v45 = *(_QWORD *)(v116 + 16);
  v46 = MEMORY[0x1E0DEE9D8];
  if (v45)
  {
    v87 = v42 + 32;
    v88 = (_QWORD *)v42;
    *(_QWORD *)&v113[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC79E1C(0, v45, 0);
    v47 = v44 + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
    v48 = *(_QWORD *)(v89 + 72);
    v49 = v102;
    do
    {
      v50 = v98;
      sub_1BA4C2DD8(v47, v98, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v51 = (uint64_t *)v99;
      sub_1BA4C2DD8(v50, v99, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BB0798DC(v51, v49);
      v105(v49, 0, 1, v118);
      sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v52 = *(_QWORD *)&v113[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E1C(0, *(_QWORD *)(v52 + 16) + 1, 1);
        v52 = *(_QWORD *)&v113[0];
      }
      v54 = *(_QWORD *)(v52 + 16);
      v53 = *(_QWORD *)(v52 + 24);
      if (v54 >= v53 >> 1)
      {
        sub_1BAC79E1C(v53 > 1, v54 + 1, 1);
        v52 = *(_QWORD *)&v113[0];
      }
      *(_QWORD *)(v52 + 16) = v54 + 1;
      v49 = v102;
      sub_1BA5193C4((uint64_t)v102, v52 + v103 + v54 * v104, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v47 += v48;
      --v45;
    }
    while (v45);
    sub_1BA4F6CCC((uint64_t)v117);
    v46 = MEMORY[0x1E0DEE9D8];
    v43 = v88;
  }
  else
  {
    v52 = MEMORY[0x1E0DEE9D8];
  }
  v55 = (_QWORD *)(v97 + 2 * v104);
  sub_1BAF89090(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v52, v109);
  swift_bridgeObjectRelease();
  v43[7] = &type metadata for FormatInspectionGroup;
  v43[8] = &off_1E72D2F60;
  v56 = swift_allocObject();
  v43[4] = v56;
  *(_QWORD *)(v56 + 48) = v110;
  v57 = v109[1];
  *(_OWORD *)(v56 + 16) = v109[0];
  *(_OWORD *)(v56 + 32) = v57;
  v58 = sub_1BA9747FC((uint64_t)v43);
  swift_setDeallocating();
  swift_arrayDestroy();
  v59 = sub_1BB6DF010(v58);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x736E6F6974704FLL, 0xE700000000000000, (uint64_t)v59, 0, 0, v55);
  v105(v55, 0, 1, v118);
  v60 = swift_initStackObject();
  *(_OWORD *)(v60 + 16) = v95;
  v61 = swift_bridgeObjectRetain();
  v62 = sub_1BA67F4CC(v61);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v113[0] = v62;
  swift_retain();
  v63 = v90;
  sub_1BA79BAB4((uint64_t *)v113);
  if (v63)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v95 = v60;
    v98 = 0;
    swift_release();
    v64 = *(_QWORD **)&v113[0];
    v65 = *(_QWORD *)(*(_QWORD *)&v113[0] + 16);
    if (v65)
    {
      *(_QWORD *)&v113[0] = v46;
      sub_1BAC79E1C(0, v65, 0);
      v66 = *(_QWORD *)&v113[0];
      v102 = (uint64_t *)(v11 + 1);
      v91 = v64;
      v67 = v64 + 5;
      v99 = xmmword_1BB8D4900;
      do
      {
        v68 = *v67;
        v69 = v118;
        v70 = (char *)v11 + *(int *)(v118 + 24);
        *(_QWORD *)v70 = *(v67 - 1);
        *((_QWORD *)v70 + 1) = v68;
        v71 = v11;
        v72 = v101;
        swift_storeEnumTagMultiPayload();
        v73 = v72;
        v11 = v71;
        v100(v70, 0, 1, v73);
        *v71 = v99;
        v74 = v102;
        *v102 = 0;
        v74[1] = 0;
        v75 = (char *)v71 + *(int *)(v69 + 28);
        *(_QWORD *)v75 = 0;
        *((_QWORD *)v75 + 1) = 0;
        v75[16] = -1;
        v105(v71, 0, 1, v69);
        *(_QWORD *)&v113[0] = v66;
        v77 = *(_QWORD *)(v66 + 16);
        v76 = *(_QWORD *)(v66 + 24);
        swift_bridgeObjectRetain();
        if (v77 >= v76 >> 1)
        {
          sub_1BAC79E1C(v76 > 1, v77 + 1, 1);
          v66 = *(_QWORD *)&v113[0];
        }
        v67 += 2;
        *(_QWORD *)(v66 + 16) = v77 + 1;
        sub_1BA5193C4((uint64_t)v71, v66 + v103 + v77 * v104, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
        --v65;
      }
      while (v65);
      swift_release();
    }
    else
    {
      swift_release();
      v66 = MEMORY[0x1E0DEE9D8];
    }
    v78 = (_QWORD *)(v97 + 3 * v104);
    sub_1BAF89090(0x726F7463656C6553, 0xE900000000000073, 0, 0, v66, v111);
    swift_bridgeObjectRelease();
    v79 = v95;
    *(_QWORD *)(v95 + 56) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(v79 + 64) = &off_1E72D2F60;
    v80 = swift_allocObject();
    *(_QWORD *)(v79 + 32) = v80;
    *(_QWORD *)(v80 + 48) = v112;
    v81 = v111[1];
    *(_OWORD *)(v80 + 16) = v111[0];
    *(_OWORD *)(v80 + 32) = v81;
    v82 = sub_1BA9747FC(v79);
    swift_setDeallocating();
    swift_arrayDestroy();
    v83 = sub_1BB6DF010(v82);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x726F7463656C6553, 0xE900000000000073, (uint64_t)v83, 0, 0, v78);
    v105(v78, 0, 1, v118);
    sub_1BAF89090(1953459283, 0xE400000000000000, 0, 0, v92, v113);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v84 = v94;
    v94[3] = (uint64_t)&type metadata for FormatInspectionGroup;
    v84[4] = (uint64_t)&off_1E72D2F60;
    result = swift_allocObject();
    *v84 = result;
    v86 = v113[1];
    *(_OWORD *)(result + 16) = v113[0];
    *(_OWORD *)(result + 32) = v86;
    *(_QWORD *)(result + 48) = v114;
  }
  return result;
}

uint64_t sub_1BB540BEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, _QWORD *a3@<X8>)
{
  _BYTE v5[112];

  sub_1BACA5708((_QWORD *)(a1 + 32), 1, *a2, a2[1], (uint64_t)v5);
  return sub_1BAAFC020(0, 0xE000000000000000, (uint64_t)v5, a3);
}

uint64_t sub_1BB540C40(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v17[2];
  uint64_t v18;

  v17[1] = a3;
  sub_1BA8C88C8(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v17[0] = v3;
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v10, 0);
    v11 = v18;
    v12 = a1 + 32;
    do
    {
      a2(v12);
      v13 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
      v18 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC79E1C(v14 > 1, v15 + 1, 1);
        v11 = v18;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1BA5193C4((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v12 += 72;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_1BB540DA8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  result = MEMORY[0x1E0DEE9D8];
  v36 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = 0;
    v25 = a1 + 32;
    while (1)
    {
      sub_1BA6AC300(v25 + 72 * v5, (uint64_t)v32);
      v6 = *(_QWORD *)(a2 + 16);
      __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
      v7 = sub_1BB86DEE8();
      v9 = v8;
      if (*(_QWORD *)(v6 + 16))
      {
        v10 = v7;
        sub_1BB8745CC();
        sub_1BB872A90();
        v11 = sub_1BB874608();
        v12 = -1 << *(_BYTE *)(v6 + 32);
        v13 = v11 & ~v12;
        v14 = v6 + 56;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
        {
          v15 = *(_QWORD *)(v6 + 48);
          v16 = (_QWORD *)(v15 + 16 * v13);
          v17 = *v16 == v10 && v16[1] == v9;
          if (v17 || (sub_1BB874398() & 1) != 0)
          {
LABEL_12:
            swift_bridgeObjectRelease();
            v29 = v33;
            v30 = v34;
            v31 = v35;
            v27 = v32[0];
            v28 = v32[1];
            v18 = v36;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BA6ACB04(0, *(_QWORD *)(v18 + 16) + 1, 1);
              v18 = v36;
            }
            v20 = *(_QWORD *)(v18 + 16);
            v19 = *(_QWORD *)(v18 + 24);
            if (v20 >= v19 >> 1)
            {
              sub_1BA6ACB04(v19 > 1, v20 + 1, 1);
              v18 = v36;
            }
            *(_QWORD *)(v18 + 16) = v20 + 1;
            v21 = v18 + 72 * v20;
            *(_OWORD *)(v21 + 32) = v27;
            *(_QWORD *)(v21 + 96) = v31;
            *(_OWORD *)(v21 + 64) = v29;
            *(_OWORD *)(v21 + 80) = v30;
            *(_OWORD *)(v21 + 48) = v28;
            goto LABEL_4;
          }
          v22 = ~v12;
          while (1)
          {
            v13 = (v13 + 1) & v22;
            if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
              break;
            v23 = (_QWORD *)(v15 + 16 * v13);
            v24 = *v23 == v10 && v23[1] == v9;
            if (v24 || (sub_1BB874398() & 1) != 0)
              goto LABEL_12;
          }
        }
      }
      swift_bridgeObjectRelease();
      sub_1BA6ABDF8((uint64_t)v32);
LABEL_4:
      if (++v5 == v4)
        return v36;
    }
  }
  return result;
}

uint64_t sub_1BB540FFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB541030@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB540240(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB54104C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BB54107C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1BB5410AC(uint64_t result, void *a2)
{
  id v2;

  if (result)
  {
    v2 = a2;
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1BB5410D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB540BEC(a1, *(uint64_t **)(v2 + 24), a2);
}

uint64_t sub_1BB5410E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GroupLayoutBindingContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t FeedCohortConfiguration.considerPublisherTopicAggregates.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

double FeedCohortConfiguration.dilutionFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t FeedCohortConfiguration.enableUndampening.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

double FeedCohortConfiguration.favoritedBoost.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double FeedCohortConfiguration.globalWeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double FeedCohortConfiguration.globalWeightHalfLife.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double FeedCohortConfiguration.globalWeightInitialMultiplier.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double FeedCohortConfiguration.paddingFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

double FeedCohortConfiguration.preBaselineCurvature.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

double FeedCohortConfiguration.postBaselineCurvature.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

uint64_t FeedCohortConfiguration.undampenOnlyAboveBaselineMembership.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

double FeedCohortConfiguration.userBaseline.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

uint64_t FeedCohortConfiguration.useRelativePersonalizationValue.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t sub_1BB54118C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BB5411C8
                                                                     + 4 * aJ_1[a1]))(0xD000000000000020, 0x80000001BB990980);
}

uint64_t sub_1BB5411C8()
{
  return 0x6E6F6974756C6964;
}

uint64_t sub_1BB5411EC()
{
  uint64_t v0;

  return v0 - 3;
}

uint64_t sub_1BB5412F4()
{
  unsigned __int8 *v0;

  return sub_1BB54118C(*v0);
}

uint64_t sub_1BB5412FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB541EC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB541320()
{
  sub_1BB5416B0();
  return sub_1BB874710();
}

uint64_t sub_1BB541348()
{
  sub_1BB5416B0();
  return sub_1BB87471C();
}

uint64_t FeedCohortConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[8];
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;

  sub_1BB541A5C(0, &qword_1EF2C6B20, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v19 - v6;
  v22 = *(_QWORD *)(v1 + 8);
  v8 = *(unsigned __int8 *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v1 + 32);
  v12 = *(_QWORD *)(v1 + 40);
  v11 = *(_QWORD *)(v1 + 48);
  v14 = *(_QWORD *)(v1 + 56);
  v13 = *(_QWORD *)(v1 + 64);
  v15 = *(_QWORD *)(v1 + 72);
  v20 = *(unsigned __int8 *)(v1 + 80);
  v21 = v8;
  v16 = *(_QWORD *)(v1 + 88);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB5416B0();
  sub_1BB8746C8();
  v36 = 0;
  v17 = v23;
  sub_1BB874188();
  if (!v17)
  {
    v23 = v9;
    v19[6] = v12;
    v19[7] = v10;
    v19[4] = v14;
    v19[5] = v11;
    v19[2] = v15;
    v19[3] = v13;
    v19[1] = v16;
    v35 = 1;
    sub_1BB874194();
    v34 = 2;
    sub_1BB874188();
    v33 = 3;
    sub_1BB874194();
    v32 = 4;
    sub_1BB874194();
    v31 = 5;
    sub_1BB874194();
    v30 = 6;
    sub_1BB874194();
    v29 = 7;
    sub_1BB874194();
    v28 = 8;
    sub_1BB874194();
    v27 = 9;
    sub_1BB874194();
    v26 = 10;
    sub_1BB874188();
    v25 = 11;
    sub_1BB874194();
    v24 = 12;
    sub_1BB874188();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB5416B0()
{
  unint64_t result;

  result = qword_1EF2C6B28;
  if (!qword_1EF2C6B28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9247AC, &type metadata for FeedCohortConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6B28);
  }
  return result;
}

uint64_t FeedCohortConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;

  sub_1BB541A5C(0, &qword_1EF2C6B30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB5416B0();
  sub_1BB87468C();
  if (!v2)
  {
    v46 = 0;
    v10 = sub_1BB8740A4();
    v45 = 1;
    sub_1BB8740B0();
    v12 = v11;
    v44 = 2;
    v13 = sub_1BB8740A4();
    v43 = 3;
    sub_1BB8740B0();
    v15 = v14;
    v42 = 4;
    sub_1BB8740B0();
    v17 = v16;
    v41 = 5;
    sub_1BB8740B0();
    v19 = v18;
    v40 = 6;
    sub_1BB8740B0();
    v21 = v20;
    v39 = 7;
    sub_1BB8740B0();
    v23 = v22;
    v38 = 8;
    sub_1BB8740B0();
    v25 = v24;
    v37 = 9;
    sub_1BB8740B0();
    v27 = v26;
    v36 = 10;
    v33 = sub_1BB8740A4();
    v35 = 11;
    sub_1BB8740B0();
    v32 = v28;
    v34 = 12;
    v30 = sub_1BB8740A4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_BYTE *)a2 = v10 & 1;
    *(_QWORD *)(a2 + 8) = v12;
    *(_BYTE *)(a2 + 16) = v13 & 1;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(_QWORD *)(a2 + 40) = v19;
    *(_QWORD *)(a2 + 48) = v21;
    *(_QWORD *)(a2 + 56) = v23;
    *(_QWORD *)(a2 + 64) = v25;
    *(_QWORD *)(a2 + 72) = v27;
    *(_BYTE *)(a2 + 80) = v33 & 1;
    *(_QWORD *)(a2 + 88) = v32;
    *(_BYTE *)(a2 + 96) = v30 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB541A5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB5416B0();
    v7 = a3(a1, &type metadata for FeedCohortConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB541AB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedCohortConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1BB541ACC(_QWORD *a1)
{
  return FeedCohortConfiguration.encode(to:)(a1);
}

double cohortConfiguration(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4;
  double v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  double result;
  double v26;

  v4 = objc_msgSend(a1, sel_considerPublisherTopicAggregates);
  objc_msgSend(a1, sel_dilutionFactor);
  v26 = v5;
  v6 = objc_msgSend(a1, sel_enableUndampening);
  objc_msgSend(a1, sel_favoritedBoost);
  v8 = v7;
  objc_msgSend(a1, sel_globalWeight);
  v10 = v9;
  objc_msgSend(a1, sel_globalWeightHalfLife);
  v12 = v11;
  objc_msgSend(a1, sel_globalWeightInitialMultiplier);
  v14 = v13;
  objc_msgSend(a1, sel_paddingFactor);
  v16 = v15;
  objc_msgSend(a1, sel_preBaselineCurvature);
  v18 = v17;
  objc_msgSend(a1, sel_postBaselineCurvature);
  v20 = v19;
  v21 = objc_msgSend(a1, sel_undampenOnlyAboveBaselineMembership);
  objc_msgSend(a1, sel_userBaseline);
  v23 = v22;
  v24 = objc_msgSend(a1, sel_useRelativePersonalizationValue);
  *(_BYTE *)a2 = v4;
  result = v26;
  *(double *)(a2 + 8) = v26;
  *(_BYTE *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v16;
  *(_QWORD *)(a2 + 64) = v18;
  *(_QWORD *)(a2 + 72) = v20;
  *(_BYTE *)(a2 + 80) = v21;
  *(_QWORD *)(a2 + 88) = v23;
  *(_BYTE *)(a2 + 96) = v24;
  return result;
}

uint64_t getEnumTagSinglePayload for FeedCohortConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[97])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedCohortConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 97) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedCohortConfiguration()
{
  return &type metadata for FeedCohortConfiguration;
}

uint64_t storeEnumTagSinglePayload for FeedCohortConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BB541D70 + 4 * byte_1BB924642[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BB541DA4 + 4 * byte_1BB92463D[v4]))();
}

uint64_t sub_1BB541DA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB541DAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB541DB4);
  return result;
}

uint64_t sub_1BB541DC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB541DC8);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BB541DCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB541DD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedCohortConfiguration.CodingKeys()
{
  return &type metadata for FeedCohortConfiguration.CodingKeys;
}

unint64_t sub_1BB541DF4()
{
  unint64_t result;

  result = qword_1EF2C6B38;
  if (!qword_1EF2C6B38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB924784, &type metadata for FeedCohortConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6B38);
  }
  return result;
}

unint64_t sub_1BB541E3C()
{
  unint64_t result;

  result = qword_1EF2C6B40;
  if (!qword_1EF2C6B40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9246F4, &type metadata for FeedCohortConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6B40);
  }
  return result;
}

unint64_t sub_1BB541E84()
{
  unint64_t result;

  result = qword_1EF2C6B48;
  if (!qword_1EF2C6B48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92471C, &type metadata for FeedCohortConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6B48);
  }
  return result;
}

uint64_t sub_1BB541EC8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000020 && a2 == 0x80000001BB990980 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6974756C6964 && a2 == 0xEE00726F74636146 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB9909B0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657469726F766166 && a2 == 0xEE0074736F6F4264 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65576C61626F6C67 && a2 == 0xEC00000074686769 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB9909D0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001BB9909F0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x46676E6964646170 && a2 == 0xED0000726F746361 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB990A10 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BB990A30 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001BB990A50 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6573614272657375 && a2 == 0xEC000000656E696CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001BB990A80)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

void sub_1BB54244C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[8];

  v1 = sub_1BB86CBE0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries);
  swift_beginAccess();
  if (!(*v5 >> 62))
  {
    if (!*(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      return;
LABEL_3:
    swift_retain();
    sub_1BB86E494();
    swift_release();
    if (v10[7] != 1)
      return;
    v6 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_tableView);
    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (!__OFSUB__(v9, 1))
        goto LABEL_6;
    }
    else if (!__OFSUB__(*(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10), 1))
    {
LABEL_6:
      MEMORY[0x1BCCDD4D8]();
      v7 = (void *)sub_1BB86CB8C();
      (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
      objc_msgSend(v6, sel_scrollToRowAtIndexPath_atScrollPosition_animated_, v7, 3, 0);

      return;
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (v8)
    goto LABEL_3;
}

void sub_1BB542608()
{
  char *v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_unfilteredEntries];
  if (*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_filter] + 16))
  {
    v2 = v0;
    v3 = swift_bridgeObjectRetain();
    v4 = sub_1BB5450F0(v3, (uint64_t)v2);

    v5 = (uint64_t *)&v2[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries];
    swift_beginAccess();
    *v5 = v4;
  }
  else
  {
    v6 = &v0[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries];
    swift_beginAccess();
    *(_QWORD *)v6 = v1;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_tableView], sel_reloadData);
  sub_1BB54244C();
}

uint64_t sub_1BB5426F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_filter);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 1;
  v4 = *(_QWORD *)(v2 + 32);
  v14 = v2 + 32;
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
    return 1;
  swift_bridgeObjectRetain_n();
  v6 = 1;
  v15 = v2;
  v13 = v3;
LABEL_4:
  v16 = v6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = v4 + 40;
  v9 = v5 - 1;
  v10 = 1;
  v17 = v4;
  while (1)
  {
    if ((v10 & 1) == 0)
      goto LABEL_12;
    sub_1BA7114A0();
    swift_bridgeObjectRetain();
    if ((sub_1BB873B40() & 1) != 0)
      break;
    v11 = sub_1BB873B40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v17;
    if ((v11 & 1) != 0)
      goto LABEL_10;
LABEL_12:
    if (v9 == v7)
    {
      swift_bridgeObjectRelease();
      if (v16 == v13)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
      if (v16 >= *(_QWORD *)(v15 + 16))
        goto LABEL_23;
      v4 = *(_QWORD *)(v14 + 8 * v16);
      v6 = v16 + 1;
      v5 = *(_QWORD *)(v4 + 16);
      if (!v5)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      goto LABEL_4;
    }
    v10 = 0;
LABEL_5:
    ++v7;
    v8 += 16;
    if (v7 >= *(_QWORD *)(v4 + 16))
    {
      __break(1u);
LABEL_23:
      __break(1u);
      JUMPOUT(0x1BB542990);
    }
  }
  swift_bridgeObjectRelease();
LABEL_10:
  if (v9 != v7)
  {
    v10 = 1;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return 1;
}

id sub_1BB5429A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  id v16;

  v5 = *a1;
  v6 = *(void **)&v4[*a1];
  if (v6)
  {
    v7 = *(id *)&v4[*a1];
  }
  else
  {
    v9 = (void *)sub_1BB872970();
    v10 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v9);

    v11 = *a4;
    v12 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v13 = v4;
    v14 = objc_msgSend(v12, sel_initWithImage_style_target_action_, v10, 0, v13, v11);

    v15 = *(void **)&v4[v5];
    *(_QWORD *)&v4[v5] = v14;
    v7 = v14;

    v6 = 0;
  }
  v16 = v6;
  return v7;
}

id sub_1BB542AA8()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id result;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  objc_super v17;

  v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, sel_viewDidLoad);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_tableView];
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  objc_msgSend(v2, sel_setDataSource_, v1);
  objc_msgSend(v2, sel_setDelegate_, v1);
  objc_msgSend(v2, sel_setAlwaysBounceVertical_, 1);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTableFooterView_, v5);

  sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
  sub_1BB873234();
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v7 = result;
    objc_msgSend(result, sel_addSubview_, v2);

    v8 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_searchBar];
    v9 = (void *)sub_1BB872970();
    objc_msgSend(v8, sel_setPlaceholder_, v9);

    v10 = objc_msgSend(v3, sel_systemBlueColor);
    objc_msgSend(v8, sel_setTintColor_, v10);

    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    v11 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setText_, v11);

    v12 = objc_msgSend(v8, sel_searchTextField);
    objc_msgSend(v12, sel_setAutocorrectionType_, 1);

    v13 = objc_msgSend(v8, sel_searchTextField);
    objc_msgSend(v13, sel_setAutocapitalizationType_, 0);

    v14 = (void *)sub_1BB872970();
    v15 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v14);

    objc_msgSend(v8, sel_setImage_forSearchBarIcon_state_, v15, 0, 0);
    objc_msgSend(v8, sel_setDelegate_, v1);
    swift_retain();
    sub_1BB86D2D0();
    swift_release();
    sub_1BB86D2AC();
    swift_release();
    if (qword_1EF2A6C58 != -1)
      swift_once();
    swift_retain();
    sub_1BB86E4AC();
    swift_release();
    sub_1BB86E470();
    swift_release();
    swift_retain();
    sub_1BB86E4AC();
    swift_release();
    swift_allocObject();
    v16 = sub_1BB5429A0(&OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___nowBarButtonItem, 0xD000000000000014, 0x80000001BB990BE0, (uint64_t *)&selRef_doNow);
    swift_unknownObjectWeakInit();

    sub_1BB86E470();
    swift_release();
    swift_release();
    swift_retain();
    sub_1BB86D2D0();
    swift_release();
    sub_1BB86D2AC();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB542F8C(uint64_t isEscapingClosureAtFileLocation, unsigned __int8 *a2)
{
  int v3;
  unint64_t v4;
  id v5;
  _QWORD *v6;
  _QWORD *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];
  unint64_t v21;

  v3 = *a2;
  v4 = MEMORY[0x1E0DEE9D8];
  v21 = MEMORY[0x1E0DEE9D8];
  if (v3)
    goto LABEL_8;
  v5 = sub_1BB2A2900();
  v6 = sub_1BB2A292C();
  if (v4 >> 62)
    goto LABEL_24;
  if (__OFADD__(*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10), 2))
    goto LABEL_26;
LABEL_4:
  sub_1BA67B180();
  sub_1BB872DCC();
  v4 = (unint64_t)v5;
  MEMORY[0x1BCCE36AC]();
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_27;
  while (1)
  {
    sub_1BB872E8C();
    sub_1BB872DCC();
    v7 = v6;
    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();

    v4 = v21;
LABEL_8:
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    v9 = sub_1BB5429A0(&OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___clearLogBarButtonItem, 0x6873617274, 0xE500000000000000, (uint64_t *)&selRef_doClearLog);
    v10 = sub_1BB5429A0(&OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___nowBarButtonItem, 0xD000000000000014, 0x80000001BB990BE0, (uint64_t *)&selRef_doNow);
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithCustomView_, *(_QWORD *)(isEscapingClosureAtFileLocation+ OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_searchBar));
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (!__OFADD__(v18, 4))
      {
LABEL_10:
        sub_1BA67B180();
        sub_1BB872DCC();
        v4 = (unint64_t)v8;
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          goto LABEL_11;
        goto LABEL_22;
      }
    }
    else if (!__OFADD__(*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10), 4))
    {
      goto LABEL_10;
    }
    __break(1u);
LABEL_22:
    sub_1BB872E44();
LABEL_11:
    sub_1BB872E8C();
    sub_1BB872DCC();
    v12 = v9;
    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
    v13 = v10;
    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
    v14 = v11;
    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();

    v4 = objc_opt_self();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = isEscapingClosureAtFileLocation;
    *(_QWORD *)(v15 + 24) = &v21;
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = sub_1BB545850;
    v6[3] = v15;
    aBlock[4] = sub_1BA4D7948;
    aBlock[5] = v6;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4D7928;
    aBlock[3] = &block_descriptor_82;
    v5 = _Block_copy(aBlock);
    v16 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    swift_release();
    objc_msgSend((id)v4, sel_performWithoutAnimation_, v5);
    _Block_release(v5);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    v19 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!__OFADD__(v19, 2))
      goto LABEL_4;
LABEL_26:
    __break(1u);
LABEL_27:
    sub_1BB872E44();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1BB5434A4(void *a1)
{
  id v2;

  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  swift_bridgeObjectRetain();
  v2 = (id)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setToolbarItems_, v2);

}

uint64_t sub_1BB543524(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a2;
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BB86ECA4();
  swift_release();
  return swift_release();
}

void sub_1BB5435C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (void *)v4;
    *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_unfilteredEntries) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB542608();

  }
}

void sub_1BB543640(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v3 = a3 + 16;
  if (*a2 == 1)
  {
    swift_beginAccess();
    v4 = MEMORY[0x1BCCE5D40](v3);
    if (v4)
    {
      v5 = (void *)v4;
      v6 = (void *)sub_1BB872970();
      v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v6);

      objc_msgSend(v5, sel_setImage_, v7);
    }
    sub_1BB54244C();
  }
  else
  {
    swift_beginAccess();
    v8 = MEMORY[0x1BCCE5D40](v3);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = (void *)sub_1BB872970();
      v11 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v10);

      objc_msgSend(v9, sel_setImage_, v11);
    }
  }
}

void sub_1BB5437A0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_filter) = sub_1BAAD4BE0();
  swift_bridgeObjectRelease();
  sub_1BB542608();
}

uint64_t sub_1BB543900()
{
  swift_retain();
  sub_1BB86E494();
  swift_release();
  swift_retain();
  sub_1BB86E4A0();
  return swift_release();
}

uint64_t type metadata accessor for DebugFormatLogViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BB543BFC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;

  v1 = sub_1BB86CBC8();
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries);
  result = swift_beginAccess();
  v4 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    if ((v1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v1 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v5 = *(_QWORD *)(v4 + 8 * v1 + 32);
      swift_retain();
      goto LABEL_5;
    }
    __break(1u);
    return result;
  }
  v5 = MEMORY[0x1BCCE4630](v1);
LABEL_5:
  swift_endAccess();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
  v6 = (void *)sub_1BB87321C();
  v7 = *(_QWORD *)(v5 + 24);
  v8 = v6;
  v9 = sub_1BAC8ADC0(v7);
  objc_msgSend(v8, sel_setBackgroundColor_, v9);

  v10 = objc_msgSend(v8, sel_textLabel);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_setNumberOfLines_, 0);

  }
  v12 = objc_msgSend(v8, sel_textLabel);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_setAttributedText_, *(_QWORD *)(v5 + 16));

  }
  if (*(_QWORD *)(v5 + 24) >= 5uLL)
    v14 = 3;
  else
    v14 = 0;
  objc_msgSend(v8, sel_setSelectionStyle_, v14);
  v15 = objc_msgSend(v8, sel_accessoryView);
  if (!v15)
    goto LABEL_15;
  v16 = v15;
  objc_opt_self();
  v17 = (id)swift_dynamicCastObjCClass();
  if (!v17)
  {

LABEL_15:
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 12.0, 12.0);
  }
  v18 = *(void **)(v5 + 24);
  if ((unint64_t)v18 >= 5)
  {
    v20 = v18;
    v21 = (void *)sub_1BB872970();
    v19 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v21);

    sub_1BA972730(v18);
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v17, sel_setImage_, v19);

  v22 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v17, sel_setTintColor_, v22);

  objc_msgSend(v8, sel_setAccessoryView_, v17);
  swift_release();

  return (uint64_t)v8;
}

uint64_t sub_1BB543FA4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  CGRect v10;

  v2 = v1;
  v4 = sub_1BB86CBC8();
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries);
  result = swift_beginAccess();
  v7 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    v8 = MEMORY[0x1BCCE4630](v4);
    goto LABEL_5;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v4 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(_QWORD *)(v7 + 8 * v4 + 32);
    swift_retain();
LABEL_5:
    swift_endAccess();
    v9 = *(void **)(v8 + 16);
    objc_msgSend(a1, sel_bounds);
    sub_1BB873624();
    objc_msgSend(v9, sel_boundingRectWithSize_options_context_, 1, 0);
    CGRectGetHeight(v10);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB544174()
{
  uint64_t result;
  char v1;

  result = sub_1BB8732D0();
  if ((result & 1) != 0)
  {
    swift_retain();
    sub_1BB86E494();
    result = swift_release();
    if ((v1 & 1) == 0)
    {
      swift_retain();
      sub_1BB86E4A0();
      return swift_release();
    }
  }
  return result;
}

void sub_1BB54425C(uint64_t a1, char a2)
{
  char v2;

  if ((a2 & 1) == 0 && (sub_1BB8732D0() & 1) != 0)
  {
    swift_retain();
    sub_1BB86E494();
    swift_release();
    if ((v2 & 1) == 0)
    {
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
    }
  }
}

void sub_1BB5443CC(void *a1)
{
  char *v1;
  _QWORD *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  char v16;
  void **p_cache;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  __int128 *v24;
  unsigned __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;
  void (*v43)(_QWORD *, uint64_t, uint64_t, uint64_t);
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  __int128 *v58;
  unsigned __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t (*v65)(_QWORD);
  _QWORD *v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  unint64_t v83;
  uint64_t v84;
  void *v85;
  __int128 v86;
  unint64_t v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v102;
  unint64_t v103;
  unint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  id v109;
  _QWORD v110[2];
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  char *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  unsigned __int128 v127;
  __int128 v128;
  _BYTE v129[48];
  __int128 v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;

  v3 = v1;
  sub_1BB545778();
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (void *)sub_1BB86CB8C();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v8, 0);

  v9 = sub_1BB86CBC8();
  v10 = &v3[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries];
  swift_beginAccess();
  v11 = *(_QWORD *)v10;
  if ((*(_QWORD *)v10 & 0xC000000000000001) != 0)
  {
    v12 = MEMORY[0x1BCCE4630](v9);
    goto LABEL_5;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v9 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v12 = *(_QWORD *)(v11 + 8 * v9 + 32);
  swift_retain();
LABEL_5:
  swift_endAccess();
  v2 = *(_QWORD **)(v12 + 24);
  switch((unint64_t)v2)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      swift_release();
      return;
    default:
      v142 = *(_QWORD *)(v12 + 24);
      sub_1BA972428(v2);
      v13 = v2;
      v14 = v2;
      v15 = sub_1BA8EBDF8();
      v16 = swift_dynamicCast();
      p_cache = &OBJC_METACLASS____TtC8NewsFeed27DebugFormatUploadDataSource.cache;
      v118 = v3;
      if ((v16 & 1) != 0)
      {
        v18 = v138;
        if (v141 >> 60 == 12)
        {
          v114 = v137;
          v111 = v139;
          v112 = v140;
          v116 = v15;
          v117 = (void *)(v141 & 0xFFFFFFFFFFFFFFFLL);
          v113 = *(_QWORD **)&v118[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_editor];
          v19 = *(_QWORD *)((char *)v113 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
          v20 = *(_QWORD *)(v19 + 16);
          swift_retain();
          v115 = v20;
          sub_1BB86DD20();
          swift_beginAccess();
          v21 = *(_QWORD *)(v19 + 40);
          if (*(_QWORD *)(v21 + 16))
          {
            swift_bridgeObjectRetain();
            v22 = sub_1BA6E35A8((uint64_t)v114, v18);
            if ((v23 & 1) != 0)
            {
              v24 = (__int128 *)(*(_QWORD *)(v21 + 56) + (v22 << 7));
              v26 = v24[2];
              v25 = v24[3];
              v27 = v24[1];
              v124 = *v24;
              v125 = v27;
              v126 = v26;
              v127 = v25;
              v28 = v24[4];
              v29 = v24[5];
              v30 = v24[7];
              *(_OWORD *)&v129[16] = v24[6];
              *(_OWORD *)&v129[32] = v30;
              v128 = v28;
              *(_OWORD *)v129 = v29;
              memmove(&v130, v24, 0x80uLL);
              nullsub_1();
              sub_1BB0F0E74(&v124);
            }
            else
            {
              sub_1BA8EBB18(&v130);
            }
          }
          else
          {
            sub_1BA8EBB18(&v130);
            swift_bridgeObjectRetain();
          }
          sub_1BAF97E40((uint64_t)&v130, (uint64_t)&v137);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_1BB86DD2C();
          swift_release();
          sub_1BAF97E40((uint64_t)&v137, (uint64_t)&v130);
          if (sub_1BA8CF120((uint64_t)&v130) == 1)
          {

            swift_bridgeObjectRelease();
          }
          else
          {
            if (v136)
            {
              v32 = v133;
              v31 = v134;
              v119 = v114;
              v120 = v18;
              v121 = v111;
              v122 = v112;
              sub_1BA8EBC94(v133, v134, (uint64_t *)&v119, v117, (uint64_t *)&v124);
              swift_bridgeObjectRelease();
              v111 = v125;
              v114 = (_QWORD *)*((_QWORD *)&v124 + 1);
              v112 = v124;
              v115 = *((_QWORD *)&v125 + 1);
              v110[1] = v135;
              v124 = v130;
              *(_QWORD *)&v125 = v131;
              BYTE8(v125) = v132;
              *(_QWORD *)&v126 = v32;
              *((_QWORD *)&v126 + 1) = v31;
              v127 = __PAIR128__((unint64_t)v114, v112);
              *(_QWORD *)&v128 = v111;
              *((_QWORD *)&v128 + 1) = v115;
              *(_QWORD *)v129 = v135;
              *(_OWORD *)&v129[8] = __PAIR128__((unint64_t)v114, v112);
              *(_QWORD *)&v129[24] = v111;
              *(_QWORD *)&v129[32] = v115;
              *(_QWORD *)&v129[40] = v2;
              nullsub_1();
              sub_1BAF97E40((uint64_t)&v124, (uint64_t)&v119);
              swift_bridgeObjectRetain();
              sub_1BA972428(v2);
              swift_bridgeObjectRetain_n();
              v33 = v2;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              sub_1BB86E4A0();
              swift_release();
              sub_1BA4AD288(0, &qword_1EF2B14D0, (uint64_t)&type metadata for FormatSourceMap, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
              v34 = swift_allocObject();
              *(_OWORD *)(v34 + 16) = xmmword_1BB87CE70;
              v35 = v111;
              v36 = (_QWORD *)v112;
              v37 = (uint64_t)v114;
              *(_QWORD *)(v34 + 32) = v112;
              *(_QWORD *)(v34 + 40) = v37;
              v38 = v115;
              *(_QWORD *)(v34 + 48) = v35;
              *(_QWORD *)(v34 + 56) = v38;
              v119 = (_QWORD *)v34;
              swift_retain();
              sub_1BB86E4A0();
              swift_release();
              v119 = v36;
              v120 = (uint64_t)v114;
              v121 = v35;
              p_cache = (void **)(&OBJC_METACLASS____TtC8NewsFeed27DebugFormatUploadDataSource + 16);
              v122 = v115;
              v123 = v2;
              swift_bridgeObjectRetain();
              v39 = v2;
              swift_retain();
              sub_1BB86E4A0();
              swift_release();
              LOBYTE(v119) = 1;
              swift_retain();
              sub_1BB86E4A0();
              swift_release();

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
            }
            sub_1BAF92764((uint64_t)&v137);
          }
          v3 = v118;
        }
        else
        {
          sub_1BA8EBE4C((uint64_t)v137, v138, v139, v140, v141);
          v3 = v118;
        }
      }
      v137 = v2;
      v40 = v2;
      v41 = type metadata accessor for FormatLayoutError();
      v42 = swift_dynamicCast();
      v43 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
      if (!v42)
      {
        v43(v7, 1, 1, v41);
        v65 = (uint64_t (*)(_QWORD))sub_1BB545778;
LABEL_30:
        sub_1BA4A2E80((uint64_t)v7, v65);
        goto LABEL_31;
      }
      v43(v7, 0, 1, v41);
      if (swift_getEnumCaseMultiPayload() != 64)
      {
        v65 = (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError;
        goto LABEL_30;
      }
      v45 = *v7;
      v44 = (void *)v7[1];
      v46 = *(_QWORD *)(*v7 + 16);
      if (v46)
      {
        v116 = *v7;
        v117 = v44;
        v47 = (uint64_t *)(v45 + 32 * v46);
        v48 = v3;
        v49 = *v47;
        v50 = v47[1];
        v51 = v47[2];
        v111 = v47[3];
        v112 = v51;
        v114 = *(_QWORD **)((char *)p_cache[362] + (_QWORD)v48);
        v52 = *(_QWORD *)((char *)v114 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
        v53 = *(_QWORD *)(v52 + 16);
        swift_bridgeObjectRetain();
        swift_retain();
        v115 = v53;
        sub_1BB86DD20();
        swift_beginAccess();
        v54 = *(_QWORD *)(v52 + 40);
        v55 = *(_QWORD *)(v54 + 16);
        v113 = (_QWORD *)v49;
        if (v55)
        {
          swift_bridgeObjectRetain();
          v56 = sub_1BA6E35A8(v49, v50);
          if ((v57 & 1) != 0)
          {
            v58 = (__int128 *)(*(_QWORD *)(v54 + 56) + (v56 << 7));
            v60 = v58[2];
            v59 = v58[3];
            v61 = v58[1];
            v124 = *v58;
            v125 = v61;
            v126 = v60;
            v127 = v59;
            v62 = v58[4];
            v63 = v58[5];
            v64 = v58[7];
            *(_OWORD *)&v129[16] = v58[6];
            *(_OWORD *)&v129[32] = v64;
            v128 = v62;
            *(_OWORD *)v129 = v63;
            memmove(&v130, v58, 0x80uLL);
            nullsub_1();
            sub_1BB0F0E74(&v124);
          }
          else
          {
            sub_1BA8EBB18(&v130);
          }
        }
        else
        {
          sub_1BA8EBB18(&v130);
          swift_bridgeObjectRetain();
        }
        sub_1BAF97E40((uint64_t)&v130, (uint64_t)&v137);
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_1BB86DD2C();
        swift_release();
        sub_1BAF97E40((uint64_t)&v137, (uint64_t)&v130);
        if (sub_1BA8CF120((uint64_t)&v130) == 1)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          v3 = v118;
          goto LABEL_31;
        }
        v84 = v133;
        v83 = v134;
        v119 = v113;
        v120 = v50;
        v121 = v112;
        v122 = v111;
        v85 = v117;
        sub_1BA8EBC94(v133, v134, (uint64_t *)&v119, v117, (uint64_t *)&v124);
        swift_bridgeObjectRelease();
        v3 = (char *)*((_QWORD *)&v124 + 1);
        v86 = v125;
        v112 = v135;
        v113 = (_QWORD *)v124;
        v124 = v130;
        *(_QWORD *)&v125 = v131;
        BYTE8(v125) = v132;
        *(_QWORD *)&v126 = v84;
        *((_QWORD *)&v126 + 1) = v83;
        *(_QWORD *)&v127 = v113;
        *((_QWORD *)&v127 + 1) = v3;
        v128 = v86;
        *(_OWORD *)v129 = __PAIR128__((unint64_t)v113, v135);
        *(_QWORD *)&v129[16] = v3;
        *(_OWORD *)&v129[24] = v86;
        v115 = *((_QWORD *)&v86 + 1);
        v111 = v86;
        *(_QWORD *)&v129[40] = v85;
        nullsub_1();
        v87 = *(_QWORD *)((char *)v114 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__sourceFile);
        sub_1BAF97E40((uint64_t)&v124, (uint64_t)&v119);
        swift_bridgeObjectRetain_n();
        v88 = v85;
        swift_bridgeObjectRetain();
        v89 = v85;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        v9 = v87;
        sub_1BB86E4A0();
        swift_release();
        v90 = sub_1BB340FFC(1, v116);
        v94 = (v93 >> 1) - v92;
        if (!__OFSUB__(v93 >> 1, v92))
        {
          v116 = v91;
          v95 = __OFADD__(v94, 1);
          v96 = v94 + 1;
          if (!v95)
          {
            v97 = v90;
            v98 = v92;
            v99 = v93;
            v119 = sub_1BB38ED20(0, v96 & ~(v96 >> 63), 0, MEMORY[0x1E0DEE9D8]);
            v100 = swift_unknownObjectRetain();
            sub_1BB386CC8(v100, v116, v98, v99);
            v9 = (unint64_t)v119;
            swift_bridgeObjectRetain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v112 = v97;
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
LABEL_44:
              v102 = v113;
              v104 = *(_QWORD *)(v9 + 16);
              v103 = *(_QWORD *)(v9 + 24);
              if (v104 >= v103 >> 1)
                v9 = (unint64_t)sub_1BB38ED20((_QWORD *)(v103 > 1), v104 + 1, 1, (_QWORD *)v9);
              *(_QWORD *)(v9 + 16) = v104 + 1;
              v105 = (_QWORD *)(v9 + 32 * v104);
              v105[4] = v102;
              v105[5] = v3;
              v106 = v111;
              v107 = v115;
              v105[6] = v111;
              v105[7] = v107;
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              v119 = (_QWORD *)v9;
              swift_retain();
              sub_1BB86E4A0();
              swift_release();
              v119 = v113;
              v120 = (uint64_t)v3;
              v121 = v106;
              v122 = v115;
              v108 = v117;
              v123 = v117;
              swift_bridgeObjectRetain();
              v109 = v108;
              swift_retain();
              sub_1BB86E4A0();
              swift_release();
              LOBYTE(v119) = 1;
              swift_retain();
              sub_1BB86E4A0();
              swift_release();

              swift_bridgeObjectRelease();
              sub_1BAF92764((uint64_t)&v137);
              v3 = v118;
              p_cache = (void **)(&OBJC_METACLASS____TtC8NewsFeed27DebugFormatUploadDataSource + 16);
              goto LABEL_31;
            }
LABEL_52:
            v9 = (unint64_t)sub_1BB38ED20(0, *(_QWORD *)(v9 + 16) + 1, 1, (_QWORD *)v9);
            goto LABEL_44;
          }
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }

      swift_bridgeObjectRelease();
LABEL_31:
      v66 = v2;
      v67 = sub_1BA9075EC(v2);
      v68 = sub_1BA90A31C(v67);
      v70 = v69;
      sub_1BA972730(v2);
      v71 = *(_QWORD *)((char *)p_cache[362] + (_QWORD)v3);
      v72 = objc_allocWithZone((Class)type metadata accessor for DebugFormatErrorViewController());
      swift_retain();
      v73 = v68;
      swift_bridgeObjectRetain();
      v74 = sub_1BB5E45E0(v71, v68, v70);

      swift_release();
      swift_bridgeObjectRelease();
      v75 = (void *)sub_1BB86CB8C();
      v76 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v75);

      v77 = objc_msgSend(v76, sel_accessoryView);
      if (!v77)
        v77 = v76;
      v78 = objc_allocWithZone((Class)type metadata accessor for DebugNavigationController());
      v117 = v74;
      v79 = objc_msgSend(v78, sel_initWithRootViewController_, v74);
      objc_msgSend(v79, sel_setModalPresentationStyle_, 7);
      v80 = objc_msgSend(v79, sel_popoverPresentationController);
      objc_msgSend(v80, sel_setSourceView_, v77);

      v81 = objc_msgSend(v79, sel_popoverPresentationController);
      if (v81)
      {
        v82 = v81;
        objc_msgSend(v81, sel_setPermittedArrowDirections_, 3);

      }
      objc_msgSend(v79, sel_setPreferredContentSize_, 540.0, 620.0);
      objc_msgSend(v118, sel_presentViewController_animated_completion_, v79, 1, 0);
      sub_1BA972730(v2);

      swift_release();
      swift_bridgeObjectRelease();
      sub_1BA972730(v2);
      return;
  }
}

uint64_t sub_1BB5450F0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v16 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_18:
    v5 = sub_1BB873F30();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      v6 = 0;
      v7 = v4 & 0xC000000000000001;
      v8 = v4 & 0xFFFFFFFFFFFFFF8;
      v13 = v5;
      v14 = v4;
      while (1)
      {
        if (v7)
        {
          v9 = MEMORY[0x1BCCE4630](v6, v4);
          v10 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return a2;
          }
        }
        else
        {
          if (v6 >= *(_QWORD *)(v8 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          v9 = *(_QWORD *)(v4 + 8 * v6 + 32);
          swift_retain();
          v10 = v6 + 1;
          if (__OFADD__(v6, 1))
            goto LABEL_14;
        }
        v15 = v9;
        v11 = sub_1BB5426F4((uint64_t)&v15, a2);
        if (v2)
          goto LABEL_15;
        if ((v11 & 1) != 0)
        {
          sub_1BB873DB0();
          sub_1BB873DE0();
          sub_1BB873DEC();
          sub_1BB873DBC();
          v5 = v13;
          v4 = v14;
        }
        else
        {
          swift_release();
        }
        ++v6;
        if (v10 == v5)
        {
          a2 = v16;
          goto LABEL_20;
        }
      }
    }
  }
  a2 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  return a2;
}

id sub_1BB545294(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  id v15;
  objc_super v17;
  objc_super v18;
  uint64_t v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)&v1[v4] = v5;
  v6 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_tableView;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v8 = v1;
  *(_QWORD *)&v1[v6] = objc_msgSend(v7, sel_initWithFrame_style_, 0, 0.0, 0.0, 0.0, 0.0);
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_unfilteredEntries] = v9;
  v10 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_filter;
  *(_QWORD *)&v8[v10] = sub_1BAAD4BE0();
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___nowBarButtonItem] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___clearLogBarButtonItem] = 0;
  v11 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_searchBar;
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C38]), sel_initWithFrame_, 0.0, 0.0, 200.0, 44.0);
  v12 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_throttler;
  sub_1BB86E434();
  v19 = sub_1BB86E428();
  sub_1BB0B4C7C();
  swift_allocObject();
  *(_QWORD *)&v8[v12] = sub_1BB86EC98();
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_editor] = a1;
  v13 = (objc_class *)type metadata accessor for DebugFormatConsolePaneDisplayController();
  v14 = (char *)objc_allocWithZone(v13);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneDebuggerButtonItem] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneLoggerButtonItem] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController_editor] = a1;
  v18.receiver = v14;
  v18.super_class = v13;
  swift_retain_n();
  v15 = objc_msgSendSuper2(&v18, sel_init);
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2AC();
  swift_release();

  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_consolePaneDisplayController] = v15;
  v17.receiver = v8;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, sel_initWithNibName_bundle_, 0, 0);
}

void sub_1BB5454F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)&v1[v2] = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_tableView;
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 0, 0.0, 0.0, 0.0, 0.0);
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_unfilteredEntries] = v5;
  v6 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_filter;
  *(_QWORD *)&v1[v6] = sub_1BAAD4BE0();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___nowBarButtonItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___clearLogBarButtonItem] = 0;
  v7 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_searchBar;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C38]), sel_initWithFrame_, 0.0, 0.0, 200.0, 44.0);
  v8 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_throttler;
  sub_1BB86E434();
  sub_1BB86E428();
  sub_1BB0B4C7C();
  swift_allocObject();
  *(_QWORD *)&v1[v8] = sub_1BB86EC98();

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB545688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_1BB86BE54();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1;
  v13 = a2;
  sub_1BB86BDA0();
  sub_1BA7114A0();
  v8 = sub_1BB873AEC();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v12 = v8;
  v13 = v10;
  swift_retain();
  sub_1BB86D2C4();
  return swift_release();
}

void sub_1BB545778()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39B410)
  {
    type metadata accessor for FormatLayoutError();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39B410);
  }
}

uint64_t sub_1BB5457CC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB5457F0(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  sub_1BB543640(a1, a2, v2);
}

uint64_t sub_1BB5457F8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB545824()
{
  uint64_t v0;

  sub_1BB5435C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB54582C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BB545850()
{
  uint64_t v0;

  sub_1BB5434A4(*(void **)(v0 + 16));
}

uint64_t sub_1BB545858()
{
  return swift_deallocObject();
}

id sub_1BB54586C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(void **)(v0 + 80);
  if (v1)
  {
    v2 = *(id *)(v0 + 80);
  }
  else
  {
    type metadata accessor for FormatDisplayLinkAnimation.Container();
    v3 = swift_allocObject();
    swift_weakInit();
    *(_QWORD *)(v3 + 24) = 0;
    *(_BYTE *)(v3 + 32) = 1;
    v4 = objc_allocWithZone((Class)type metadata accessor for FormatDisplayLinkObject());
    swift_retain();
    *(_QWORD *)(v3 + 40) = objc_msgSend(v4, sel_init);
    swift_weakAssign();
    swift_release();
    v5 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, v3, sel_updateWithDisplayLink_);
    swift_release();
    v6 = *(void **)(v0 + 80);
    *(_QWORD *)(v0 + 80) = v5;
    v2 = v5;

    v1 = 0;
  }
  v7 = v1;
  return v2;
}

_QWORD *sub_1BB54596C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v29;
  uint64_t v30;

  v6 = v5;
  v30 = a5;
  v11 = sub_1BB86C8E0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[10] = 0;
  sub_1BB86C8D4();
  v15 = sub_1BB86C8C8();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v6[2] = v15;
  v6[3] = v17;
  v6[4] = a1;
  v6[5] = a2;
  v18 = objc_allocWithZone((Class)type metadata accessor for FormatDisplayLinkObject());
  v19 = a1;
  v6[6] = objc_msgSend(v18, sel_init);
  v6[7] = a3;
  v20 = v30;
  v6[8] = a4;
  v6[9] = v20;
  v21 = a3;
  swift_retain();
  v22 = sub_1BB54586C();
  objc_msgSend(v22, sel_setPaused_, 1);

  v23 = sub_1BB54586C();
  v24 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  objc_msgSend(v23, sel_addToRunLoop_forMode_, v24, *MEMORY[0x1E0C99860]);

  v25 = (void *)v6[6];
  v26 = v19;
  v27 = v25;
  objc_msgSend(v21, sel_applyForTime_presentationObject_modelObject_, v27, v26, 0.0);

  swift_release();
  return v6;
}

id *sub_1BB545B34()
{
  id *v0;
  id v1;

  v1 = sub_1BB54586C();
  objc_msgSend(v1, sel_invalidate);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t sub_1BB545BA0()
{
  sub_1BB545B34();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDisplayLinkAnimation()
{
  return objc_opt_self();
}

id sub_1BB545BE0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  id result;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  BOOL v12;
  double v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t i;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);

  v2 = v1;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return objc_msgSend(a1, sel_invalidate);
  v5 = Strong;
  if (*(_BYTE *)(v1 + 32) == 1)
  {
    if (*(_QWORD *)(v1 + 24))
    {
      objc_msgSend(a1, sel_invalidate);
      return (id)swift_release();
    }
    else
    {
      objc_msgSend(a1, sel_timestamp);
      v25 = v24;
      result = (id)swift_release();
      *(_QWORD *)(v1 + 24) = v25;
      *(_BYTE *)(v1 + 32) = 0;
    }
    return result;
  }
  v7 = *(double *)(v1 + 24);
  objc_msgSend(a1, sel_timestamp);
  v9 = v8 - v7;
  objc_msgSend(*(id *)(v5 + 56), sel_duration);
  v11 = v9 / v10;
  v12 = v10 <= 0.0;
  v13 = 1.0;
  if (v12)
    v11 = 1.0;
  if (v11 <= 1.0)
    v13 = v11;
  if (v13 < 0.0)
    v14 = 0.0;
  else
    v14 = v13;
  v15 = *(_QWORD *)(v1 + 40);
  v16 = (_QWORD *)(v15 + OBJC_IVAR____TtC8NewsFeed23FormatDisplayLinkObject_storage);
  swift_beginAccess();
  *v16 = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v5 + 56), sel_applyForTime_presentationObject_modelObject_, v15, *(_QWORD *)(v5 + 48), v14);
  v17 = (void *)objc_opt_self();
  objc_msgSend(v17, sel_begin);
  objc_msgSend(v17, sel_setDisableActions_, 1);
  v18 = *(id *)(v5 + 32);
  sub_1BB4D5468(v18);

  v19 = *(_QWORD *)(v5 + 40);
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_1BB873F30();
    v20 = (uint64_t)result;
    if (result)
      goto LABEL_16;
  }
  else
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (v20)
    {
LABEL_16:
      if (v20 < 1)
      {
        __break(1u);
        return result;
      }
      for (i = 0; i != v20; ++i)
      {
        if ((v19 & 0xC000000000000001) != 0)
          v22 = (id)MEMORY[0x1BCCE4630](i, v19);
        else
          v22 = *(id *)(v19 + 8 * i + 32);
        v23 = v22;
        sub_1BB4D5468(v22);

      }
    }
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_commit);
  if (v14 >= 1.0)
  {
    *(_QWORD *)(v2 + 24) = 1;
    *(_BYTE *)(v2 + 32) = 1;
    objc_msgSend(a1, sel_invalidate);
    v26 = *(void (**)(uint64_t))(v5 + 64);
    swift_retain();
    v26(v5);
    swift_release();
  }
  return (id)swift_release();
}

uint64_t sub_1BB545F00()
{
  uint64_t v0;

  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDisplayLinkAnimation.Container()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for FormatDisplayLinkAnimation.Container.State()
{
  return &type metadata for FormatDisplayLinkAnimation.Container.State;
}

uint64_t FormatLayeredMediaFilter.layeredMediaFilter(contextLayoutOptions:)@<X0>(id (**a1)(uint64_t a1)@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id (**v15)(uint64_t);

  v5 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  if ((v6 & 0xF000000000000007) == 0xF000000000000007)
  {
    v15 = a1;
    sub_1BA5E7FF4(v5);
    sub_1BA6E6C68(v4);
    sub_1BA6E6C68(v6);
    v7 = 0;
  }
  else
  {
    sub_1BA5E7FF4(v5);
    sub_1BA6E6C68(v4);
    sub_1BA6E6C68(v6);
    sub_1BA6E6C68(v6);
    FormatFloat.value(contextLayoutOptions:)();
    if (v2)
    {
      sub_1BA5E800C(v5);
      sub_1BA6E6CD8(v4);
      sub_1BA6E6CD8(v6);
      return sub_1BA6E6CD8(v6);
    }
    v7 = v8;
    v15 = a1;
    sub_1BA6E6CD8(v6);
  }
  v10 = 0;
  if ((v4 & 0xF000000000000007) != 0xF000000000000007)
  {
    swift_retain();
    FormatFloat.value(contextLayoutOptions:)();
    if (v2)
    {
      sub_1BA5E800C(v5);
      sub_1BA6E6CD8(v4);
      sub_1BA6E6CD8(v6);
      return sub_1BA6E6CD8(v4);
    }
    v10 = v11;
    sub_1BA6E6CD8(v4);
  }
  if ((~v5 & 0xF000000000000007) != 0)
  {
    FormatColor.color.getter();
    v12 = v13;
  }
  else
  {
    v12 = 0;
  }
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v7;
  *(_BYTE *)(v14 + 24) = (v6 & 0xF000000000000007) == 0xF000000000000007;
  *(_QWORD *)(v14 + 32) = v10;
  *(_BYTE *)(v14 + 40) = (v4 & 0xF000000000000007) == 0xF000000000000007;
  *(_QWORD *)(v14 + 48) = v12;
  sub_1BA5E800C(v5);
  sub_1BA6E6CD8(v4);
  result = sub_1BA6E6CD8(v6);
  *v15 = sub_1BB546230;
  v15[1] = (id (*)(uint64_t))v14;
  return result;
}

BOOL static FormatLayeredMediaFilter.== infix(_:_:)(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a2 + 2);
  v7 = *a1;
  v8 = v2;
  v5 = *a2;
  v6 = v3;
  return _s8NewsFeed24FormatLayeredMediaFilterO10MonochromeV2eeoiySbAE_AEtFZ_0((uint64_t *)&v7, (uint64_t *)&v5);
}

BOOL sub_1BB54619C(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a2 + 2);
  v7 = *a1;
  v8 = v2;
  v5 = *a2;
  v6 = v3;
  return _s8NewsFeed24FormatLayeredMediaFilterO10MonochromeV2eeoiySbAE_AEtFZ_0((uint64_t *)&v7, (uint64_t *)&v5);
}

uint64_t FormatLayeredMediaFilter.Monochrome.color.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatLayeredMediaFilter.Monochrome.amount.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

uint64_t FormatLayeredMediaFilter.Monochrome.brightnessAdjustment.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

uint64_t sub_1BB54620C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BB546230(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB601B70(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(void **)(v1 + 48));
}

BOOL _s8NewsFeed24FormatLayeredMediaFilterO10MonochromeV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  char v14;
  char v15;
  uint64_t v16;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v6 = *a2;
  v5 = a2[1];
  v7 = a2[2];
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if ((~v6 & 0xF000000000000007) == 0)
      goto LABEL_8;
LABEL_6:
    sub_1BA5E7FF4(v6);
    sub_1BA5E800C(v3);
    sub_1BA5E800C(v6);
    return 0;
  }
  v16 = *a1;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    swift_retain();
    goto LABEL_6;
  }
  swift_retain_n();
  static FormatColor.== infix(_:_:)((uint64_t)&v16);
  v9 = v8;
  swift_release();
  sub_1BA5E800C(v3);
  if ((v9 & 1) == 0)
    return 0;
LABEL_8:
  if ((~v2 & 0xF000000000000007) != 0)
  {
    v16 = v2;
    if ((~v5 & 0xF000000000000007) != 0)
    {
      swift_retain_n();
      static FormatFloat.== infix(_:_:)((uint64_t)&v16);
      v12 = v11;
      swift_release();
      sub_1BA6E6CD8(v2);
      if ((v12 & 1) == 0)
        return 0;
      goto LABEL_15;
    }
    swift_retain();
LABEL_13:
    sub_1BA6E6C68(v5);
    sub_1BA6E6CD8(v2);
    v10 = v5;
LABEL_21:
    sub_1BA6E6CD8(v10);
    return 0;
  }
  if ((~v5 & 0xF000000000000007) != 0)
    goto LABEL_13;
LABEL_15:
  if ((~v4 & 0xF000000000000007) == 0)
  {
    if ((~v7 & 0xF000000000000007) == 0)
      return 1;
    goto LABEL_20;
  }
  v16 = v4;
  if ((~v7 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_20:
    sub_1BA6E6C68(v7);
    sub_1BA6E6CD8(v4);
    v10 = v7;
    goto LABEL_21;
  }
  swift_retain_n();
  static FormatFloat.== infix(_:_:)((uint64_t)&v16);
  v15 = v14;
  swift_release();
  sub_1BA6E6CD8(v4);
  return (v15 & 1) != 0;
}

unint64_t sub_1BB54640C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB546430();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB546430()
{
  unint64_t result;

  result = qword_1EF2C6CA0;
  if (!qword_1EF2C6CA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaFilter, &type metadata for FormatLayeredMediaFilter);
    atomic_store(result, (unint64_t *)&qword_1EF2C6CA0);
  }
  return result;
}

uint64_t sub_1BB546474(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA826FE4, (uint64_t (*)(void))sub_1BA827028, (uint64_t (*)(void))sub_1BB546490);
}

unint64_t sub_1BB546490()
{
  unint64_t result;

  result = qword_1EF2C6CA8;
  if (!qword_1EF2C6CA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaFilter, &type metadata for FormatLayeredMediaFilter);
    atomic_store(result, (unint64_t *)&qword_1EF2C6CA8);
  }
  return result;
}

unint64_t sub_1BB5464D4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB5464F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB5464F8()
{
  unint64_t result;

  result = qword_1EF2C6CB0;
  if (!qword_1EF2C6CB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaFilter.Monochrome, &type metadata for FormatLayeredMediaFilter.Monochrome);
    atomic_store(result, (unint64_t *)&qword_1EF2C6CB0);
  }
  return result;
}

uint64_t sub_1BB54653C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA4E12A0, (uint64_t (*)(void))sub_1BA827080, (uint64_t (*)(void))sub_1BB546558);
}

unint64_t sub_1BB546558()
{
  unint64_t result;

  result = qword_1EF2C6CB8;
  if (!qword_1EF2C6CB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaFilter.Monochrome, &type metadata for FormatLayeredMediaFilter.Monochrome);
    atomic_store(result, (unint64_t *)&qword_1EF2C6CB8);
  }
  return result;
}

uint64_t sub_1BB5465A0(uint64_t a1)
{
  destroy for FormatColorNotExpression();
  return a1;
}

ValueMetadata *type metadata accessor for FormatLayeredMediaFilter()
{
  return &type metadata for FormatLayeredMediaFilter;
}

_QWORD *_s8NewsFeed24FormatLayeredMediaFilterO10MonochromeVwca_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;

  v4 = *a2;
  v5 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if (v5 != 0xF000000000000007)
    {
      *a1 = v4;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 == 0xF000000000000007)
  {
    sub_1BAA5FA24((uint64_t)a1);
    v4 = *a2;
LABEL_6:
    *a1 = v4;
    goto LABEL_8;
  }
  *a1 = v4;
  swift_retain();
  swift_release();
LABEL_8:
  v6 = a1 + 1;
  v7 = a2[1];
  v8 = v7 & 0xF000000000000007;
  if ((~a1[1] & 0xF000000000000007) == 0)
  {
    if (v8 != 0xF000000000000007)
    {
      *v6 = v7;
      swift_retain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v8 == 0xF000000000000007)
  {
    sub_1BB5465A0((uint64_t)(a1 + 1));
    v7 = a2[1];
LABEL_13:
    *v6 = v7;
    goto LABEL_15;
  }
  *v6 = v7;
  swift_retain();
  swift_release();
LABEL_15:
  v9 = a1 + 2;
  v10 = a2[2];
  v11 = v10 & 0xF000000000000007;
  if ((~a1[2] & 0xF000000000000007) != 0)
  {
    if (v11 != 0xF000000000000007)
    {
      *v9 = v10;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1BB5465A0((uint64_t)(a1 + 2));
    v10 = a2[2];
    goto LABEL_20;
  }
  if (v11 == 0xF000000000000007)
  {
LABEL_20:
    *v9 = v10;
    return a1;
  }
  *v9 = v10;
  swift_retain();
  return a1;
}

_QWORD *_s8NewsFeed24FormatLayeredMediaFilterO10MonochromeVwta_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = *a2;
  if ((~*a1 & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v4 & 0xF000000000000007) == 0)
  {
    sub_1BAA5FA24((uint64_t)a1);
LABEL_4:
    *a1 = v4;
    goto LABEL_6;
  }
  *a1 = v4;
  swift_release();
LABEL_6:
  v5 = a1 + 1;
  v6 = a2[1];
  if ((~a1[1] & 0xF000000000000007) == 0)
  {
LABEL_9:
    *v5 = v6;
    goto LABEL_11;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1BB5465A0((uint64_t)(a1 + 1));
    goto LABEL_9;
  }
  *v5 = v6;
  swift_release();
LABEL_11:
  v7 = a1 + 2;
  v8 = a2[2];
  if ((~a1[2] & 0xF000000000000007) != 0)
  {
    if ((~v8 & 0xF000000000000007) != 0)
    {
      *v7 = v8;
      swift_release();
      return a1;
    }
    sub_1BB5465A0((uint64_t)(a1 + 2));
  }
  *v7 = v8;
  return a1;
}

ValueMetadata *type metadata accessor for FormatLayeredMediaFilter.Monochrome()
{
  return &type metadata for FormatLayeredMediaFilter.Monochrome;
}

_QWORD *sub_1BB546834(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(unint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  __int128 v16;
  _QWORD *v17;
  _OWORD v18[2];
  uint64_t v19;

  v1 = a1[1];
  if ((v1 & 0xF000000000000007) == 0xD000000000000007)
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  v3 = a1[2];
  v4 = *a1;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v5);
  sub_1BA8C88C8(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87D7A0;
  v12 = v11 + v10;
  sub_1BA5E7FF4(v4);
  sub_1BA6E6C68(v1);
  sub_1BA6E6C68(v3);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6F7268636F6E6F4DLL, 0xEA0000000000656DLL, (_QWORD *)(v11 + v10));
  v13 = type metadata accessor for FormatInspectionItem(0);
  v14 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 0, 1, v13);
  sub_1BAAF7724(0x726F6C6F43, 0xE500000000000000, v4, (_QWORD *)(v12 + v9));
  v14(v12 + v9, 0, 1, v13);
  sub_1BA5E7FF4(v4);
  sub_1BA6E6C68(v1);
  sub_1BAAFB354(0x746E756F6D41, 0xE600000000000000, v1, (_QWORD *)(v12 + 2 * v9));
  v14(v12 + 2 * v9, 0, 1, v13);
  sub_1BA6E6C68(v3);
  sub_1BAAFB354(0xD000000000000017, 0x80000001BB990D40, v3, (_QWORD *)(v12 + 3 * v9));
  v14(v12 + 3 * v9, 0, 1, v13);
  sub_1BAF89090(0x7265746C6946, 0xE600000000000000, 0, 0, v11, v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v15 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v15;
  *(_QWORD *)(v15 + 48) = v19;
  v16 = v18[1];
  *(_OWORD *)(v15 + 16) = v18[0];
  *(_OWORD *)(v15 + 32) = v16;
  v17 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  sub_1BB546BA4(v4, v1, v3);
  return v17;
}

uint64_t sub_1BB546B70()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB546BA4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if ((a2 & 0xF000000000000007) != 0xD000000000000007)
  {
    sub_1BA5E800C(result);
    sub_1BA6E6CD8(a2);
    return sub_1BA6E6CD8(a3);
  }
  return result;
}

uint64_t SportsBracketDataVisualization.__allocating_init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t *a10)
{
  uint64_t v17;

  v17 = swift_allocObject();
  SportsBracketDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v17;
}

uint64_t SportsBracketDataVisualization.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsBracketDataVisualization.competitorTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsBracketDataVisualization.umcCanonicalId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsBracketDataVisualization.leagueTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsBracketDataVisualization.championshipTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsBracketDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl, a1);
}

uint64_t SportsBracketDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsBracketDataVisualization.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsBracketDataVisualization.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_metadata);
  *a1 = v2;
  return sub_1BAF9A4C8(v2);
}

uint64_t SportsBracketDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 16);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 24);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 32);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1BA99178C(v2, v3);
}

uint64_t SportsBracketDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_configuredEmbedUrl, a1);
}

_QWORD *SportsBracketDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t *a10)
{
  _QWORD *v10;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v47 = a7;
  v48 = a8;
  v54 = a6;
  v55 = a1;
  v56 = a5;
  v14 = sub_1BB86C67C();
  v15 = MEMORY[0x1E0C80A78](v14);
  v50 = a3;
  v51 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *a9;
  v18 = *a10;
  v17 = a10[1];
  v20 = a10[2];
  v19 = a10[3];
  v21 = a10[4];
  v22 = a10[5];
  v23 = v54;
  v10[4] = v55;
  v10[5] = a2;
  v49 = a2;
  v10[6] = a3;
  v10[7] = a4;
  v24 = v17;
  v55 = a4;
  v10[8] = v56;
  v52 = v26;
  v53 = v25;
  (*(void (**)(uint64_t, uint64_t, double))(v26 + 16))((uint64_t)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl, v23, v15);
  v27 = 0;
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources) = v47;
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events) = v48;
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_metadata) = v44;
  v28 = (_QWORD *)((char *)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
  *v28 = v18;
  v28[1] = v24;
  v28[2] = v20;
  v28[3] = v19;
  v28[4] = v21;
  v28[5] = v22;
  v57 = v18;
  v58 = v24;
  v59 = v20;
  v60 = v19;
  v29 = v19;
  v61 = v21;
  v62 = v22;
  v30 = v22;
  if (v24 && v20)
    v27 = swift_unknownObjectRetain();
  v31 = (void *)v27;
  v45 = v18;
  v46 = v21;
  v32 = v29;
  sub_1BA99178C(v18, v24);
  swift_unknownObjectRetain();
  v33 = v50;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v34 = v54;
  v35 = sub_1BB0FE158(v49, v33, v54, (uint64_t)&v57, v31);
  v37 = v36;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v10[2] = v35;
  v10[3] = v37;
  v38 = v45;
  v57 = v45;
  v58 = v24;
  v59 = v20;
  v60 = v32;
  v61 = v46;
  v62 = v30;
  v39 = v51;
  sub_1BB0FA6B8(v34, &v57, 0xD000000000000018, 0x80000001BB990D60, v51);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v40 = v52;
  v41 = v34;
  v42 = v53;
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v41, v53);
  sub_1BA993900(v38, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))((uint64_t)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_configuredEmbedUrl, v39, v42);
  return v10;
}

uint64_t SportsBracketDataVisualization.with(metadata:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34[6];
  uint64_t v35;

  v3 = sub_1BB86C67C();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v6;
  v7 = *a1;
  v8 = v1[4];
  v9 = v1[6];
  v33 = v1[5];
  v11 = v1[7];
  v10 = v1[8];
  v30 = v8;
  v31 = v10;
  (*(void (**)(char *, uint64_t, double))(v12 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl, v4);
  v29 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources);
  v13 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events);
  v14 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
  v26 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8);
  v27 = v14;
  v15 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 16);
  v16 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 24);
  v18 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 32);
  v17 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 40);
  v34[0] = v14;
  v34[1] = v26;
  v34[2] = v15;
  v34[3] = v16;
  v34[4] = v18;
  v34[5] = v17;
  v35 = v7;
  v28 = swift_allocObject();
  swift_unknownObjectRetain();
  v19 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v20 = v31;
  swift_unknownObjectRetain();
  v21 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA99178C(v27, v26);
  v22 = v21;
  v23 = v28;
  SportsBracketDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(v19, v33, v9, v11, v20, (uint64_t)v32, v22, v13, &v35, v34);
  return v23;
}

uint64_t SportsBracketDataVisualization.with(config:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35[6];
  uint64_t v36;

  v3 = sub_1BB86C67C();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v6;
  v7 = a1[1];
  v9 = a1[2];
  v8 = a1[3];
  v26 = *a1;
  v27 = v9;
  v11 = a1[4];
  v10 = a1[5];
  v12 = v1[4];
  v28 = v8;
  v29 = v12;
  v34 = v1[5];
  v30 = v1[6];
  v13 = v1[8];
  v31 = v1[7];
  v32 = v7;
  (*(void (**)(char *, uint64_t, double))(v14 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl, v4);
  v15 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources);
  v25 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events);
  v16 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_metadata);
  v35[5] = v10;
  v36 = v16;
  v35[0] = v26;
  v35[1] = v7;
  v35[2] = v9;
  v35[3] = v8;
  v35[4] = v11;
  v17 = swift_allocObject();
  swift_unknownObjectRetain();
  v18 = v15;
  swift_bridgeObjectRetain();
  v19 = v25;
  swift_bridgeObjectRetain();
  v20 = v29;
  swift_bridgeObjectRetain();
  v21 = v30;
  swift_bridgeObjectRetain();
  v22 = v31;
  swift_unknownObjectRetain();
  sub_1BAF9A4C8(v16);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsBracketDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(v20, v34, v21, v22, v13, (uint64_t)v33, v18, v19, &v36, v35);
  return v17;
}

uint64_t SportsBracketDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SportsBracketDataVisualization.init(from:)(a1);
  return v2;
}

char *SportsBracketDataVisualization.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  _QWORD *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61;

  v57 = *v1;
  v3 = sub_1BB86C67C();
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v44 - v6;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3B70, (uint64_t (*)(uint64_t))sub_1BB0FD09C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v49 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)&v44 - v10;
  sub_1BB548EC4(0);
  v54 = v11;
  v12 = *((_QWORD *)v11 - 1);
  MEMORY[0x1E0C80A78](v11);
  v53 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C6CC8, (uint64_t (*)(void))sub_1BB548EE0, (uint64_t)&type metadata for SportsBracketDataVisualization.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v44 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB548EE0();
  v19 = v55;
  v20 = v56;
  sub_1BB87468C();
  if (v19)
  {
    swift_deallocPartialClassInstance();
    v43 = (uint64_t)a1;
  }
  else
  {
    v21 = v52;
    v55 = v16;
    v46 = a1;
    LOBYTE(v58) = 0;
    sub_1BA4A2870((unint64_t *)&unk_1ED3A3AF0, (uint64_t (*)(uint64_t))sub_1BB548EC4, MEMORY[0x1E0DB50A0]);
    v23 = v53;
    v22 = v54;
    sub_1BB8740D4();
    sub_1BB86ED1C();
    (*(void (**)(char *, char *))(v12 + 8))(v23, v22);
    *((_QWORD *)v20 + 4) = v58;
    LOBYTE(v58) = 1;
    *((_QWORD *)v20 + 5) = sub_1BB874098();
    *((_QWORD *)v20 + 6) = v24;
    sub_1BB0FD09C(0);
    v26 = v25;
    LOBYTE(v58) = 5;
    sub_1BA4A2870((unint64_t *)&unk_1ED3A3B50, (uint64_t (*)(uint64_t))sub_1BB0FD09C, MEMORY[0x1E0DB50A0]);
    v27 = (uint64_t)v21;
    v28 = v26;
    sub_1BB874068();
    v54 = v18;
    v29 = *(_QWORD *)(v26 - 8);
    v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
    if (v45(v27, 1, v26) == 1)
    {
      sub_1BAF9CEEC(v27);
      v30 = 0;
    }
    else
    {
      sub_1BB86ED1C();
      v30 = v58;
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    }
    *((_QWORD *)v20 + 7) = v30;
    LOBYTE(v58) = 6;
    v31 = (uint64_t)v49;
    v53 = 0;
    sub_1BB874068();
    if (v45(v31, 1, v28) == 1)
    {
      sub_1BAF9CEEC(v31);
      v32 = 0;
    }
    else
    {
      sub_1BB86ED1C();
      v32 = v58;
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v28);
    }
    v33 = v50;
    v34 = v51;
    *((_QWORD *)v20 + 8) = v32;
    LOBYTE(v58) = 2;
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v35 = v48;
    sub_1BB8740D4();
    v36 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v36(&v20[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl], v35, v34);
    sub_1BA865434(0);
    v61 = 3;
    sub_1BA603240(&qword_1ED3AB090, (uint64_t (*)(uint64_t))sub_1BA865434, sub_1BB548F24, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    *(_QWORD *)&v20[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources] = v58;
    sub_1BAB05BC0(0);
    v61 = 4;
    sub_1BA603240((unint64_t *)&unk_1EF2C6CE0, (uint64_t (*)(uint64_t))sub_1BAB05BC0, sub_1BB548F40, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    *(_QWORD *)&v20[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events] = v58;
    v61 = 7;
    sub_1BB548F5C();
    sub_1BB874068();
    *(_QWORD *)&v56[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_metadata] = v58;
    v61 = 8;
    sub_1BA993A48();
    sub_1BB874068();
    v37 = &v56[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config];
    v38 = v59;
    *v37 = v58;
    v37[1] = v38;
    v37[2] = v60;
    LOBYTE(v58) = 9;
    v39 = sub_1BB874098();
    v40 = v56;
    *((_QWORD *)v56 + 2) = v39;
    v40[3] = v41;
    LOBYTE(v58) = 10;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v15);
    v20 = v56;
    v36(&v56[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_configuredEmbedUrl], v47, v51);
    v43 = (uint64_t)v46;
  }
  __swift_destroy_boxed_opaque_existential_1(v43);
  return v20;
}

uint64_t SportsBracketDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char v42;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3B70, (uint64_t (*)(uint64_t))sub_1BB0FD09C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v31 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v32 = (uint64_t)&v31 - v5;
  v6 = sub_1BB86E008();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB548EC4(0);
  v36 = v10;
  v34 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2C6D00, (uint64_t (*)(void))sub_1BB548EE0, (uint64_t)&type metadata for SportsBracketDataVisualization.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v35 = v13;
  v33 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB548EE0();
  sub_1BB8746C8();
  *(_QWORD *)&v39 = *(_QWORD *)(v38 + 32);
  v16 = qword_1ED39E310;
  swift_bridgeObjectRetain_n();
  if (v16 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED39A4E0);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
  MEMORY[0x1E0C80A78](v18);
  sub_1BA98E368();
  *(&v31 - 2) = v19;
  *(&v31 - 1) = sub_1BA4A2870((unint64_t *)&unk_1ED3AB0E0, (uint64_t (*)(uint64_t))sub_1BA98E368, MEMORY[0x1E0DEAF38]);
  swift_getKeyPath();
  sub_1BB86ED34();
  swift_bridgeObjectRelease();
  LOBYTE(v39) = 0;
  sub_1BA4A2870(&qword_1ED3A3AE8, (uint64_t (*)(uint64_t))sub_1BB548EC4, MEMORY[0x1E0DB5098]);
  v21 = v35;
  v20 = v36;
  v22 = v15;
  v23 = v37;
  sub_1BB8741AC();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v20);
  if (!v23)
  {
    v24 = v38;
    LOBYTE(v39) = 1;
    sub_1BB87417C();
    v25 = swift_unknownObjectRetain();
    v26 = v32;
    sub_1BAF9B48C(v25, v32);
    LOBYTE(v39) = 5;
    sub_1BB0FD09C(0);
    sub_1BA4A2870((unint64_t *)&unk_1ED3A3B40, (uint64_t (*)(uint64_t))sub_1BB0FD09C, MEMORY[0x1E0DB5098]);
    sub_1BB87414C();
    sub_1BAF9CEEC(v26);
    v27 = swift_unknownObjectRetain();
    v28 = v31;
    sub_1BAF9B48C(v27, v31);
    LOBYTE(v39) = 6;
    sub_1BB87414C();
    sub_1BAF9CEEC(v28);
    LOBYTE(v39) = 2;
    sub_1BB86C67C();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1BB8741AC();
    *(_QWORD *)&v39 = *(_QWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources);
    v42 = 3;
    sub_1BA865434(0);
    sub_1BA603240((unint64_t *)&qword_1ED3AB080, (uint64_t (*)(uint64_t))sub_1BA865434, sub_1BB548FBC, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    *(_QWORD *)&v39 = *(_QWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events);
    v42 = 4;
    sub_1BAB05BC0(0);
    sub_1BA603240(&qword_1EF2C6D10, (uint64_t (*)(uint64_t))sub_1BAB05BC0, sub_1BB548FD8, MEMORY[0x1E0DEAF10]);
    sub_1BB87414C();
    v30 = *(_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 16);
    v39 = *(_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
    v40 = v30;
    v41 = *(_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 32);
    v42 = 8;
    sub_1BA993C44();
    sub_1BB87414C();
    LOBYTE(v39) = 9;
    sub_1BB87417C();
    LOBYTE(v39) = 10;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v22, v21);
}

uint64_t sub_1BB548330(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB548370
                                                            + 4 * asc_1BB924AB0[a1]))(0x74697465706D6F63, 0xEE0073676154726FLL);
}

uint64_t sub_1BB548370()
{
  return 0x6E6F6E6143636D75;
}

uint64_t sub_1BB548394()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BB5483AC()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BB5483D0()
{
  return 0x73746E657665;
}

uint64_t sub_1BB5483E4()
{
  return 0x615465756761656CLL;
}

uint64_t sub_1BB548400()
{
  return 0x6E6F69706D616863;
}

uint64_t sub_1BB548424()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1BB54843C()
{
  return 0x696669746E656469;
}

unint64_t sub_1BB548458()
{
  return 0xD000000000000012;
}

uint64_t sub_1BB548474()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BB548488(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB5484C8 + 4 * byte_1BB924ABB[a1]))(0x74697465706D6F63, 0xEE0073676154726FLL);
}

uint64_t sub_1BB5484C8()
{
  return 0x6E6F6E6143636D75;
}

uint64_t sub_1BB5484EC()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BB548504()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BB548528()
{
  return 0x73746E657665;
}

uint64_t sub_1BB54853C()
{
  return 0x615465756761656CLL;
}

uint64_t sub_1BB548558()
{
  return 0x6E6F69706D616863;
}

uint64_t sub_1BB54857C()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1BB548594()
{
  return 0x696669746E656469;
}

unint64_t sub_1BB5485B0()
{
  return 0xD000000000000012;
}

uint64_t sub_1BB5485CC()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BB5485E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB548330(*a1);
  v5 = v4;
  if (v3 == sub_1BB548330(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB548668()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB548330(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB5486C8()
{
  unsigned __int8 *v0;

  sub_1BB548330(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB548708()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB548330(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB548764@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB549484();
  *a1 = result;
  return result;
}

uint64_t sub_1BB548790@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB548330(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB5487B8()
{
  unsigned __int8 *v0;

  return sub_1BB548488(*v0);
}

uint64_t sub_1BB5487C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB549484();
  *a1 = result;
  return result;
}

uint64_t sub_1BB5487E4()
{
  sub_1BB548EE0();
  return sub_1BB874710();
}

uint64_t sub_1BB54880C()
{
  sub_1BB548EE0();
  return sub_1BB87471C();
}

uint64_t SportsBracketDataVisualization.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl;
  v2 = sub_1BB86C67C();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BAF9CEDC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_metadata));
  sub_1BA993900(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsBracketDataVisualization.__deallocating_deinit()
{
  SportsBracketDataVisualization.deinit();
  return swift_deallocClassInstance();
}

char *sub_1BB548930@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char *result;

  v5 = swift_allocObject();
  result = SportsBracketDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB548984(_QWORD *a1)
{
  return SportsBracketDataVisualization.encode(to:)(a1);
}

uint64_t static SportsBracketDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1BB874398();
}

uint64_t SportsBracketDataVisualizationMetadata.backingTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsBracketDataVisualizationMetadata.init(backingTag:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t SportsBracketDataVisualizationMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v20 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3B70, (uint64_t (*)(uint64_t))sub_1BB0FD09C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v21 = (uint64_t)&v20 - v5;
  sub_1BA4CDF6C(0, &qword_1EF2C6D18, (uint64_t (*)(void))sub_1BB548FF4, (uint64_t)&type metadata for SportsBracketDataVisualizationMetadata.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB548FF4();
  sub_1BB87468C();
  if (!v2)
  {
    v11 = v20;
    sub_1BB0FD09C(0);
    v13 = v12;
    sub_1BA4A2870((unint64_t *)&unk_1ED3A3B50, (uint64_t (*)(uint64_t))sub_1BB0FD09C, MEMORY[0x1E0DB50A0]);
    sub_1BB874068();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v21, 1, v13) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_1BAF9CEEC(v21);
      *v11 = 0;
    }
    else
    {
      v15 = v21;
      sub_1BB86ED1C();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v16 = v22;
      v17 = v15;
      v18 = v20;
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
      *v18 = v16;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t SportsBracketDataVisualizationMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3B70, (uint64_t (*)(uint64_t))sub_1BB0FD09C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - v3;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2C6D28, (uint64_t (*)(void))sub_1BB548FF4, (uint64_t)&type metadata for SportsBracketDataVisualizationMetadata.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v12 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB548FF4();
  sub_1BB8746C8();
  v9 = swift_unknownObjectRetain();
  sub_1BAF9B48C(v9, (uint64_t)v4);
  sub_1BB0FD09C(0);
  sub_1BA4A2870((unint64_t *)&unk_1ED3A3B40, (uint64_t (*)(uint64_t))sub_1BB0FD09C, MEMORY[0x1E0DB5098]);
  sub_1BB87414C();
  sub_1BAF9CEEC((uint64_t)v4);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v8, v6);
}

uint64_t sub_1BB548DA8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BB548DF8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BB548E4C()
{
  sub_1BB548FF4();
  return sub_1BB874710();
}

uint64_t sub_1BB548E74()
{
  sub_1BB548FF4();
  return sub_1BB87471C();
}

uint64_t sub_1BB548E9C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SportsBracketDataVisualizationMetadata.init(from:)(a1, a2);
}

uint64_t sub_1BB548EB0(_QWORD *a1)
{
  return SportsBracketDataVisualizationMetadata.encode(to:)(a1);
}

void sub_1BB548EC4(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A3B00, (uint64_t (*)(uint64_t))sub_1BA98E368, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
}

unint64_t sub_1BB548EE0()
{
  unint64_t result;

  result = qword_1EF2C6CD0;
  if (!qword_1EF2C6CD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB924F14, &type metadata for SportsBracketDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6CD0);
  }
  return result;
}

uint64_t sub_1BB548F24()
{
  return sub_1BA4A2870(&qword_1ED3AA680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource);
}

uint64_t sub_1BB548F40()
{
  return sub_1BA4A2870((unint64_t *)&unk_1ED3A8558, (uint64_t (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsScoreDataVisualization);
}

unint64_t sub_1BB548F5C()
{
  unint64_t result;

  result = qword_1EF2C6CF0;
  if (!qword_1EF2C6CF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsBracketDataVisualizationMetadata, &type metadata for SportsBracketDataVisualizationMetadata);
    atomic_store(result, (unint64_t *)&qword_1EF2C6CF0);
  }
  return result;
}

uint64_t sub_1BB548FA4()
{
  return 16;
}

__n128 sub_1BB548FB0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BB548FBC()
{
  return sub_1BA4A2870((unint64_t *)&unk_1ED3AA670, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource);
}

uint64_t sub_1BB548FD8()
{
  return sub_1BA4A2870(&qword_1ED3A8550, (uint64_t (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsScoreDataVisualization);
}

unint64_t sub_1BB548FF4()
{
  unint64_t result;

  result = qword_1EF2C6D20;
  if (!qword_1EF2C6D20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB924EC4, &type metadata for SportsBracketDataVisualizationMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6D20);
  }
  return result;
}

uint64_t sub_1BB549038()
{
  return type metadata accessor for SportsBracketDataVisualization();
}

uint64_t type metadata accessor for SportsBracketDataVisualization()
{
  uint64_t result;

  result = qword_1ED3CD1F8;
  if (!qword_1ED3CD1F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB54907C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SportsBracketDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsBracketDataVisualization.__allocating_init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of SportsBracketDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

ValueMetadata *type metadata accessor for SportsBracketDataVisualizationMetadata()
{
  return &type metadata for SportsBracketDataVisualizationMetadata;
}

uint64_t storeEnumTagSinglePayload for SportsBracketDataVisualizationMetadata.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB5491AC + 4 * byte_1BB924AC6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB5491CC + 4 * byte_1BB924ACB[v4]))();
}

_BYTE *sub_1BB5491AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB5491CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB5491D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB5491DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB5491E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB5491EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsBracketDataVisualizationMetadata.CodingKeys()
{
  return &type metadata for SportsBracketDataVisualizationMetadata.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SportsBracketDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BB549254 + 4 * byte_1BB924AD5[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BB549288 + 4 * byte_1BB924AD0[v4]))();
}

uint64_t sub_1BB549288(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB549290(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB549298);
  return result;
}

uint64_t sub_1BB5492A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB5492ACLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BB5492B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5492B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsBracketDataVisualization.CodingKeys()
{
  return &type metadata for SportsBracketDataVisualization.CodingKeys;
}

unint64_t sub_1BB5492D8()
{
  unint64_t result;

  result = qword_1EF2C6D38;
  if (!qword_1EF2C6D38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB924DAC, &type metadata for SportsBracketDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6D38);
  }
  return result;
}

unint64_t sub_1BB549320()
{
  unint64_t result;

  result = qword_1EF2C6D40;
  if (!qword_1EF2C6D40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB924E9C, &type metadata for SportsBracketDataVisualizationMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6D40);
  }
  return result;
}

unint64_t sub_1BB549368()
{
  unint64_t result;

  result = qword_1EF2C6D48;
  if (!qword_1EF2C6D48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB924DD4, &type metadata for SportsBracketDataVisualizationMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6D48);
  }
  return result;
}

unint64_t sub_1BB5493B0()
{
  unint64_t result;

  result = qword_1EF2C6D50;
  if (!qword_1EF2C6D50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB924DFC, &type metadata for SportsBracketDataVisualizationMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6D50);
  }
  return result;
}

unint64_t sub_1BB5493F8()
{
  unint64_t result;

  result = qword_1EF2C6D58;
  if (!qword_1EF2C6D58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB924CE4, &type metadata for SportsBracketDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6D58);
  }
  return result;
}

unint64_t sub_1BB549440()
{
  unint64_t result;

  result = qword_1EF2C6D60;
  if (!qword_1EF2C6D60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB924D0C, &type metadata for SportsBracketDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C6D60);
  }
  return result;
}

uint64_t sub_1BB549484()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

void sub_1BB5494CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;

  v10 = *a4;
  v11 = *((_BYTE *)a4 + 8);
  v12 = *((_BYTE *)a4 + 9);
  sub_1BB86EC14();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  *(_QWORD *)(v13 + 32) = v10;
  *(_BYTE *)(v13 + 40) = v11;
  *(_BYTE *)(v13 + 41) = v12;
  *(_QWORD *)(v13 + 48) = a6;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v14 = (void *)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();
  swift_release();

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = v10;
  *(_BYTE *)(v15 + 32) = v11;
  *(_BYTE *)(v15 + 33) = v12;
  swift_unknownObjectRetain();
  swift_retain();
  v16 = (void *)sub_1BB86E854();
  sub_1BB86E9A4();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1BB549644(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;

  if ((a1 & 1) != 0)
  {
    v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager + 24);
    v12 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager), v11);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v12 + 32))(a3, a4 & 1, a5, v11, v12);
  }
  else
  {
    v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager + 24);
    v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager), v6);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a3, v6, v7);
  }
}

uint64_t sub_1BB5496F8()
{
  swift_getObjectType();
  if (qword_1ED3BA8F8 != -1)
    swift_once();
  swift_unknownObjectRetain();
  sub_1BB86FF4C();
  return swift_unknownObjectRelease();
}

void sub_1BB5497CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  sub_1BA7AA598();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87FC80;
  v5 = sub_1BB871440();
  v7 = v6;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BA6A2D8C();
  *(_QWORD *)(v4 + 64) = v9;
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  v10 = objc_msgSend(a3, sel_identifier);
  v11 = sub_1BB8729A0();
  v13 = v12;

  *(_QWORD *)(v4 + 96) = v8;
  *(_QWORD *)(v4 + 104) = v9;
  *(_QWORD *)(v4 + 72) = v11;
  *(_QWORD *)(v4 + 80) = v13;
  swift_getErrorValue();
  v14 = sub_1BB87456C();
  *(_QWORD *)(v4 + 136) = v8;
  *(_QWORD *)(v4 + 144) = v9;
  *(_QWORD *)(v4 + 112) = v14;
  *(_QWORD *)(v4 + 120) = v15;
  sub_1BA517860();
  v16 = (void *)sub_1BB873A08();
  v17 = sub_1BB87330C();
  sub_1BB86EF44("following command handler failed, command=%{public}@, context=%@, error=%{public}@", 82, 2, &dword_1BA493000, v16, v17, v4);
  swift_bridgeObjectRelease();

}

void sub_1BB549984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unsigned __int8 *a5, uint64_t a6)
{
  sub_1BB5494CC(a1, a2, a3, a4, *a5, a6);
}

id sub_1BB5499A8@<X0>(_QWORD *a1@<X3>, _BYTE *a2@<X8>)
{
  _QWORD *v2;
  id result;

  result = objc_msgSend(*(id *)(*v2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_subscriptionController), sel_hasSubscriptionToTag_, *a1);
  *a2 = result ^ 1;
  return result;
}

uint64_t sub_1BB5499EC(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return sub_1BB549BB4(a4) & 1;
}

uint64_t sub_1BB549BB4(void **a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t result;
  void *v11;
  uint64_t ObjectType;
  id v13;
  unsigned __int8 v14;

  v2 = *a1;
  v3 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v4 = objc_msgSend(v3, sel_bundleIdentifier);

  if (!v4)
    return 0;
  v5 = sub_1BB8729A0();
  v7 = v6;

  if (v5 == 0x6C7070612E6D6F63 && v7 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    v11 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_subscriptionController);
    ObjectType = swift_getObjectType();
    v13 = objc_msgSend(v2, sel_identifier);
    if (!v13)
    {
      sub_1BB8729A0();
      v13 = (id)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    v14 = objc_msgSend(v11, sel_isChannelPermanentForTagID_, v13);

    if ((v14 & 1) == 0
      && !FCTagProviding.isSection.getter(ObjectType)
      && (objc_msgSend(v2, sel_isSportsEvent) & 1) == 0
      && (objc_msgSend(v2, sel_isMySports) & 1) == 0)
    {
      return objc_msgSend(v2, sel_disableFollow) ^ 1;
    }
    return 0;
  }
  v9 = sub_1BB874398();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v9 & 1) != 0)
    goto LABEL_9;
  return result;
}

uint64_t sub_1BB549D8C()
{
  uint64_t v0;

  return sub_1BB549644(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1BB549DC4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB549DF8()
{
  return sub_1BB5496F8();
}

uint64_t sub_1BB549E30()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1BB549E5C(uint64_t a1)
{
  uint64_t v1;

  sub_1BB5497CC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t FormatModelFactory.__allocating_init(factory:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), a1);
  return v2;
}

uint64_t FormatModelFactory.createFormatModels(from:context:namespace:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  void (*v23)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t AssociatedConformanceWitness;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  __int128 v42;
  __int128 v43;
  char v44;
  uint64_t v45;
  __int128 v46;

  v35 = a3;
  v36 = a4;
  v34 = a1;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v33 = sub_1BB873A2C();
  v9 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v11 = (char *)&v33 - v10;
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v33 - v14;
  v16 = *((_BYTE *)a2 + 8);
  v17 = *((_BYTE *)a2 + 9);
  v18 = *((_BYTE *)a2 + 10);
  v19 = *((_BYTE *)a2 + 11);
  v20 = *((_BYTE *)a2 + 48);
  v21 = a2[7];
  v37 = *a2;
  v38 = v16;
  v39 = v17;
  v40 = v18;
  v41 = v19;
  v22 = *((_OWORD *)a2 + 2);
  v42 = *((_OWORD *)a2 + 1);
  v43 = v22;
  v44 = v20;
  v45 = v21;
  v46 = *((_OWORD *)a2 + 4);
  v23 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24);
  v24 = v36;
  v36 = v7;
  v23(v34, &v37, v35, v24, v7, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v33);
    return MEMORY[0x1E0DEE9D8];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v11, AssociatedTypeWitness);
    sub_1BB54A124();
    v26 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatModel() - 8) + 80);
    v27 = (v26 + 32) & ~v26;
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
    sub_1BB1C32F8();
    v29 = (uint64_t *)(v25 + v27 + *(int *)(v28 + 48));
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v29[3] = AssociatedTypeWitness;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v29);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(boxed_opaque_existential_0, v15, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, AssociatedTypeWitness);
  }
  return v25;
}

void sub_1BB54A124()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB858)
  {
    type metadata accessor for FormatModel();
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB858);
  }
}

uint64_t FormatModelFactory.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return v0;
}

uint64_t FormatModelFactory.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t sub_1BB54A1E4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return FormatModelFactory.createFormatModels(from:context:namespace:)(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FormatModelSubFactoryType.model(for:context:namespace:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t method lookup function for FormatModelFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatModelFactory.__allocating_init(factory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t FormatViewNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

unint64_t FormatViewNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 80);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

uint64_t FormatViewNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatViewNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 72);
}

uint64_t FormatViewNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t FormatViewNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB54A374(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;

  v3 = *a1;
  if (!*a1)
  {
    v4 = a1[1];
    if (!v4)
      goto LABEL_10;
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  sub_1BA72BED4(v7, v3);
  if (v1)
    goto LABEL_12;
  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1[1];
  if (v4)
  {
LABEL_5:
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    sub_1BA72BED4(v7, v4);
    if (v1)
      goto LABEL_12;
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_10:
  v5 = a1[3];
  if (!v5)
  {
LABEL_15:
    sub_1BA646F54((uint64_t)(a1 + 4), (uint64_t)&v8, (uint64_t)&qword_1ED39E800, (uint64_t)&type metadata for FormatMediaTimingFillMode, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4CF8F4);
    sub_1BA646F54((uint64_t)&v8, (uint64_t)&v9, (uint64_t)&qword_1ED39E800, (uint64_t)&type metadata for FormatMediaTimingFillMode, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4CF8F4);
    __asm { BR              X11 }
  }
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  sub_1BA72BED4(v7, v5);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_15;
  }
LABEL_12:
  swift_release();
  sub_1BA896610((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BB54A5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;

  v24 = (void *)*MEMORY[0x1E0CD2B60];
  v25 = (id)*MEMORY[0x1E0CD2B60];
  v26 = *(_QWORD *)(v23 + 40);
  if (v26)
  {
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    sub_1BA72BED4(a22, v26);
    if (v22)
      goto LABEL_6;
    swift_bridgeObjectRelease();
    swift_release();
    v27 = *(_QWORD *)(v23 + 48);
    if (!v27)
      goto LABEL_10;
  }
  else
  {
    v27 = *(_QWORD *)(v23 + 48);
    if (!v27)
      goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  sub_1BA72BED4(a22, v27);
  if (v22)
  {
LABEL_6:
    swift_release();
    sub_1BA896610(v23);
    swift_bridgeObjectRelease();
    swift_release();

    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  v28 = *(unsigned __int8 *)(v23 + 72);
  if (v28 == 255)
  {
    sub_1BA896610(v23);
  }
  else
  {
    v31 = *(_BYTE *)(v23 + 72);
    v29 = *(_QWORD *)(v23 + 64);
    v30 = *(_QWORD *)(v23 + 56);
    sub_1BA69C808(v30, v29, v28 & 1);
    sub_1BB86DD80();
    FormatBoolean.value(contextLayoutOptions:)(a21);
    swift_release();
    sub_1BA896610(v23);
    if (v22)
    {
      swift_release();

      sub_1BA796C70(v30, v29, v31);
LABEL_16:
      JUMPOUT(0x1BB54A504);
    }
    sub_1BA796C70(v30, v29, v31);
  }
  sub_1BB86FBB0();
  JUMPOUT(0x1BB54A4FCLL);
}

uint64_t sub_1BB54A828(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v5 = *a1;
  if (*a1)
  {
    type metadata accessor for FormatDecorationContext();
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    sub_1BA72BED4(v9, v5);
    if (v2)
      goto LABEL_10;
    swift_bridgeObjectRelease();
    swift_release();
    v6 = a1[1];
    if (!v6)
    {
LABEL_8:
      v7 = a1[3];
      if (v7)
        goto LABEL_9;
LABEL_14:
      sub_1BA646F54((uint64_t)(a1 + 4), (uint64_t)&v10, (uint64_t)&qword_1ED39E800, (uint64_t)&type metadata for FormatMediaTimingFillMode, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4CF8F4);
      sub_1BA646F54((uint64_t)&v10, (uint64_t)&v11, (uint64_t)&qword_1ED39E800, (uint64_t)&type metadata for FormatMediaTimingFillMode, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4CF8F4);
      __asm { BR              X11 }
    }
  }
  else
  {
    v6 = a1[1];
    if (!v6)
      goto LABEL_8;
  }
  type metadata accessor for FormatDecorationContext();
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  sub_1BA72BED4(v9, v6);
  if (v2)
    goto LABEL_10;
  swift_bridgeObjectRelease();
  swift_release();
  v7 = a1[3];
  if (!v7)
    goto LABEL_14;
LABEL_9:
  type metadata accessor for FormatDecorationContext();
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  sub_1BA72BED4(v9, v7);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_14;
  }
LABEL_10:
  swift_release();
  sub_1BA896610((uint64_t)a1);
  sub_1BA4A2E80(a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB54AD70@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v4 = v3;
  v31 = a3;
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v30 - v18;
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      v20 = *(_QWORD *)(a2 + 16);
      v21 = *(_QWORD *)(a2 + 24);
      swift_retain();
      swift_retain_n();
      sub_1BB54AD70(a1, v20);
      swift_release();
      if (v4)
      {
        return swift_release_n();
      }
      else
      {
        v28 = v32;
        swift_retain();
        sub_1BB54AD70(a1, v21);
        swift_release_n();
        swift_release();
        v29 = v32;
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = v28;
        *(_QWORD *)(result + 24) = v29;
        *v31 = result | 0x8000000000000000;
      }
    }
    else
    {
      v26 = *(_QWORD *)(a2 + 16);
      v27 = *(_QWORD *)(a2 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BA9A035C(&v32, a1, v26, v27);
      sub_1BB54AD70(a1, v32);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    v23 = swift_projectBox();
    sub_1BA4C2DD8(v23, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
    sub_1BA4C2DD8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
    sub_1BB0428DC((uint64_t)v16, (uint64_t)v13);
    sub_1BA7FAB40(a1, (uint64_t)v10);
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    if (!v3)
    {
      v24 = swift_allocBox();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v25, v10, v7);
      *v31 = v24;
    }
    return sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
  }
  return result;
}

uint64_t sub_1BB54B05C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v4 = v3;
  v31 = a3;
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v30 - v18;
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      v20 = *(_QWORD *)(a2 + 16);
      v21 = *(_QWORD *)(a2 + 24);
      swift_retain();
      swift_retain_n();
      sub_1BB54B05C(a1, v20);
      swift_release();
      if (v4)
      {
        return swift_release_n();
      }
      else
      {
        v28 = v32;
        swift_retain();
        sub_1BB54B05C(a1, v21);
        swift_release_n();
        swift_release();
        v29 = v32;
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = v28;
        *(_QWORD *)(result + 24) = v29;
        *v31 = result | 0x8000000000000000;
      }
    }
    else
    {
      v26 = *(_QWORD *)(a2 + 16);
      v27 = *(_QWORD *)(a2 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BA9A66BC(v26, v27, &v32);
      sub_1BB54B05C(a1, v32);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    v23 = swift_projectBox();
    sub_1BA4C2DD8(v23, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
    sub_1BA4C2DD8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
    sub_1BB0428DC((uint64_t)v16, (uint64_t)v13);
    sub_1BB49C5F4(a1, (uint64_t)v10);
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    if (!v3)
    {
      v24 = swift_allocBox();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v25, v10, v7);
      *v31 = v24;
    }
    return sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
  }
  return result;
}

uint64_t FormatViewNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t FormatViewNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatViewNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatViewNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatViewNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatViewNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatViewNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*FormatViewNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t FormatViewNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 80) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatViewNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatViewNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatViewNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatViewNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 104);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 96);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1BB54B600(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 112) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatViewNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatViewNode.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatViewNode.__allocating_init(identifier:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, char a10, uint64_t *a11, unint64_t a12, unint64_t a13, uint64_t a14)
{
  uint64_t v19;

  v19 = swift_allocObject();
  FormatViewNode.init(identifier:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, __PAIR128__(a13, a12), a14);
  return v19;
}

uint64_t FormatViewNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatViewNode.__deallocating_deinit()
{
  FormatViewNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB54B840(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C6D90, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNode, (uint64_t)&protocol conformance descriptor for FormatViewNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB54B87C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3BD350, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNode, (uint64_t)&protocol conformance descriptor for FormatViewNode);
  a1[2] = sub_1BA50AD30(&qword_1ED39F950, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNode, (uint64_t)&protocol conformance descriptor for FormatViewNode);
  result = sub_1BA50AD30(&qword_1EF2C6D98, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNode, (uint64_t)&protocol conformance descriptor for FormatViewNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB54B8F4(_QWORD *a1, _QWORD *a2)
{
  return static FormatViewNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BB54B900(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C6DA0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNode, (uint64_t)&protocol conformance descriptor for FormatViewNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB54B93C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB54B988@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB54B9D4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return result;
}

uint64_t sub_1BB54BA18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 72) = v2;
  return result;
}

unint64_t sub_1BB54BA58@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 80);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BB54BAA4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 88);
  return result;
}

uint64_t sub_1BB54BAE8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 88) = v2;
  return result;
}

uint64_t sub_1BB54BB28@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatViewNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatViewNode.__allocating_init(identifier:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1BB54BBB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_bridgeObjectRelease();
  swift_unownedRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB54BC94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB54BCB8(uint64_t a1)
{
  sub_1BA4B7794(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_OWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136));
  return a1;
}

uint64_t sub_1BB54BD18()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id CGFloat.number.getter(double a1)
{
  float v1;
  id v2;
  double v3;

  v1 = a1;
  v2 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  *(float *)&v3 = v1;
  return objc_msgSend(v2, sel_initWithFloat_, v3);
}

id Int.number.getter(uint64_t a1)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
}

double sub_1BB54BDB4@<D0>(double *a1@<X0>, double *a2@<X1>, double *a3@<X8>)
{
  double result;

  result = *a1 / *a2;
  *a3 = result;
  return result;
}

double sub_1BB54BDC8(double *a1, double *a2)
{
  double result;

  result = *a1 / *a2;
  *a1 = result;
  return result;
}

id sub_1BB54BDDC()
{
  double *v0;
  float v1;
  id v2;
  double v3;

  v1 = *v0;
  v2 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  *(float *)&v3 = v1;
  return objc_msgSend(v2, sel_initWithFloat_, v3);
}

unint64_t sub_1BB54BE14(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB54BE38();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB54BE38()
{
  unint64_t result;

  result = qword_1ED3BBDE0;
  if (!qword_1ED3BBDE0)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEF080], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ED3BBDE0);
  }
  return result;
}

_QWORD *sub_1BB54BE7C@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  if (*a2)
  {
    if (*result != 0x8000000000000000 || v3 != -1)
    {
      *a3 = *result / v3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *sub_1BB54BEAC(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  if (*a2)
  {
    v3 = *result;
    if (v2 != -1 || v3 != 0x8000000000000000)
    {
      *result = v3 / v2;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1BB54BEDC()
{
  _QWORD *v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *v0);
}

uint64_t dispatch thunk of static FormatEquationValue./ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of static FormatEquationValue./= infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FormatEquationValue.number.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

id CategoryColorPalette.foregroundColor.getter()
{
  id *v0;

  return *v0;
}

id CategoryColorPalette.backgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id CategoryColorPalette.selectedForegroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id CategoryColorPalette.selectedBackgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

id CategoryColorPalette.pillForegroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

id CategoryColorPalette.pillBackgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

id CategoryColorPalette.pillSelectedForegroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

id CategoryColorPalette.pillSelectedBackgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 56);
}

void __swiftcall CategoryColorPalette.init(foregroundColor:backgroundColor:selectedForegroundColor:selectedBackgroundColor:pillForegroundColor:pillBackgroundColor:pillSelectedForegroundColor:pillSelectedBackgroundColor:)(NewsFeed::CategoryColorPalette *__return_ptr retstr, UIColor foregroundColor, UIColor backgroundColor, UIColor selectedForegroundColor, UIColor selectedBackgroundColor, UIColor pillForegroundColor, UIColor pillBackgroundColor, UIColor pillSelectedForegroundColor, UIColor pillSelectedBackgroundColor)
{
  retstr->foregroundColor = foregroundColor;
  retstr->backgroundColor = backgroundColor;
  retstr->selectedForegroundColor = selectedForegroundColor;
  retstr->selectedBackgroundColor = selectedBackgroundColor;
  retstr->pillForegroundColor = pillForegroundColor;
  retstr->pillBackgroundColor = pillBackgroundColor;
  retstr->pillSelectedForegroundColor = pillSelectedForegroundColor;
  retstr->pillSelectedBackgroundColor = pillSelectedBackgroundColor;
}

void sub_1BB54BF7C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v0 = (void *)objc_opt_self();
  v12 = objc_msgSend(v0, sel_labelColor);
  v11 = objc_msgSend(v0, sel_clearColor);
  v10 = objc_msgSend(v0, sel_systemPinkColor);
  v1 = objc_msgSend(v0, sel_secondarySystemBackgroundColor);
  v2 = objc_msgSend(v0, sel_labelColor);
  v3 = objc_msgSend(v0, sel_secondarySystemBackgroundColor);
  v4 = objc_msgSend(v0, sel_whiteColor);
  v5 = objc_msgSend(v0, sel_blackColor);
  v6 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

  v7 = objc_msgSend(v0, sel_blackColor);
  v8 = objc_msgSend(v0, sel_whiteColor);
  v9 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v7, v8);

  qword_1ED39E0E0 = (uint64_t)v12;
  *(_QWORD *)algn_1ED39E0E8 = v11;
  qword_1ED39E0F0 = (uint64_t)v10;
  unk_1ED39E0F8 = v1;
  qword_1ED39E100 = (uint64_t)v2;
  unk_1ED39E108 = v3;
  qword_1ED39E110 = (uint64_t)v6;
  unk_1ED39E118 = v9;
}

id static CategoryColorPalette.default.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v18;

  if (qword_1ED39E608 != -1)
    swift_once();
  v2 = (void *)qword_1ED39E0E0;
  v3 = *(void **)algn_1ED39E0E8;
  v4 = (void *)qword_1ED39E0F0;
  v5 = (void *)unk_1ED39E0F8;
  v6 = (void *)qword_1ED39E100;
  v7 = (void *)unk_1ED39E108;
  v9 = (void *)qword_1ED39E110;
  v8 = unk_1ED39E118;
  v18 = (id)unk_1ED39E118;
  *a1 = qword_1ED39E0E0;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v9;
  a1[7] = v8;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v9;
  return v18;
}

void destroy for CategoryColorPalette(id *a1)
{

}

_QWORD *initializeWithCopy for CategoryColorPalette(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  a1[4] = v7;
  a1[5] = v8;
  v9 = *(void **)(a2 + 48);
  v10 = *(void **)(a2 + 56);
  a1[6] = v9;
  a1[7] = v10;
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  v18 = v10;
  return a1;
}

uint64_t assignWithCopy for CategoryColorPalette(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 40);
  v20 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v19;
  v21 = v19;

  v22 = *(void **)(a2 + 48);
  v23 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v22;
  v24 = v22;

  v25 = *(void **)(a2 + 56);
  v26 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v25;
  v27 = v25;

  return a1;
}

uint64_t assignWithTake for CategoryColorPalette(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];

  v7 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = a2[3];

  return a1;
}

ValueMetadata *type metadata accessor for CategoryColorPalette()
{
  return &type metadata for CategoryColorPalette;
}

uint64_t FormatWeatherConditionCode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB54C458 + 4 * word_1BB9252A0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1BB54C458()
{
  return 0x6F64616E726F74;
}

uint64_t sub_1BB54C46C()
{
  return 0x6C616369706F7274;
}

uint64_t sub_1BB54C490()
{
  return 0x6E61636972727568;
}

unint64_t sub_1BB54C4AC()
{
  return 0xD000000000000013;
}

uint64_t sub_1BB54C808()
{
  return 0x7453676E6F727473;
}

uint64_t sub_1BB54C828()
{
  return 0x7272756C466E7573;
}

uint64_t sub_1BB54C848()
{
  return 0x65776F68536E7573;
}

uint64_t sub_1BB54C864()
{
  return 0x694D7972746E6977;
}

NewsFeed::FormatWeatherConditionCode_optional __swiftcall FormatWeatherConditionCode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatWeatherConditionCode_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1BB87450C();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 28;
  switch(v3)
  {
    case 0:
      goto LABEL_30;
    case 1:
      v5 = 1;
      goto LABEL_30;
    case 2:
      v5 = 2;
      goto LABEL_30;
    case 3:
      v5 = 3;
      goto LABEL_30;
    case 4:
      v5 = 4;
      goto LABEL_30;
    case 5:
      v5 = 5;
      goto LABEL_30;
    case 6:
      v5 = 6;
      goto LABEL_30;
    case 7:
      v5 = 7;
      goto LABEL_30;
    case 8:
      v5 = 8;
      goto LABEL_30;
    case 9:
      v5 = 9;
      goto LABEL_30;
    case 10:
      v5 = 10;
      goto LABEL_30;
    case 11:
      v5 = 11;
      goto LABEL_30;
    case 12:
      v5 = 12;
      goto LABEL_30;
    case 13:
      v5 = 13;
      goto LABEL_30;
    case 14:
      v5 = 14;
      goto LABEL_30;
    case 15:
      v5 = 15;
      goto LABEL_30;
    case 16:
      v5 = 16;
      goto LABEL_30;
    case 17:
      v5 = 17;
      goto LABEL_30;
    case 18:
      v5 = 18;
      goto LABEL_30;
    case 19:
      v5 = 19;
      goto LABEL_30;
    case 20:
      v5 = 20;
      goto LABEL_30;
    case 21:
      v5 = 21;
      goto LABEL_30;
    case 22:
      v5 = 22;
      goto LABEL_30;
    case 23:
      v5 = 23;
      goto LABEL_30;
    case 24:
      v5 = 24;
      goto LABEL_30;
    case 25:
      v5 = 25;
      goto LABEL_30;
    case 26:
      v5 = 26;
      goto LABEL_30;
    case 27:
      v5 = 27;
LABEL_30:
      v6 = v5;
      break;
    case 28:
      break;
    case 29:
      v6 = 29;
      break;
    case 30:
      v6 = 30;
      break;
    case 31:
      v6 = 31;
      break;
    case 32:
      v6 = 32;
      break;
    case 33:
      v6 = 33;
      break;
    case 34:
      v6 = 34;
      break;
    case 35:
      v6 = 35;
      break;
    case 36:
      v6 = 36;
      break;
    case 37:
      v6 = 37;
      break;
    case 38:
      v6 = 38;
      break;
    case 39:
      v6 = 39;
      break;
    case 40:
      v6 = 40;
      break;
    case 41:
      v6 = 41;
      break;
    case 42:
      v6 = 42;
      break;
    case 43:
      v6 = 43;
      break;
    case 44:
      v6 = 44;
      break;
    case 45:
      v6 = 45;
      break;
    default:
      v6 = 46;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t sub_1BB54CA68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F300C(*a1, *a2);
}

uint64_t sub_1BB54CA74()
{
  sub_1BB8745CC();
  FormatWeatherConditionCode.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB54CAD8()
{
  FormatWeatherConditionCode.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB54CB28()
{
  sub_1BB8745CC();
  FormatWeatherConditionCode.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatWeatherConditionCode_optional sub_1BB54CB88(Swift::String *a1)
{
  return FormatWeatherConditionCode.init(rawValue:)(*a1);
}

uint64_t sub_1BB54CB94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatWeatherConditionCode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BB54CBB8()
{
  sub_1BB54CD10();
  return sub_1BB872D60();
}

uint64_t sub_1BB54CC14(_QWORD *a1)
{
  return FormatWeatherConditionCode.encode(to:)(a1);
}

uint64_t FormatWeatherConditionCode.description.getter()
{
  return FormatWeatherConditionCode.rawValue.getter();
}

unint64_t sub_1BB54CC5C()
{
  unint64_t result;

  result = qword_1EF2C6DA8;
  if (!qword_1EF2C6DA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherConditionCode, &type metadata for FormatWeatherConditionCode);
    atomic_store(result, (unint64_t *)&qword_1EF2C6DA8);
  }
  return result;
}

unint64_t sub_1BB54CCA0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB54CCCC();
  result = sub_1BB54CD10();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB54CCCC()
{
  unint64_t result;

  result = qword_1EF2C6DB0;
  if (!qword_1EF2C6DB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherConditionCode, &type metadata for FormatWeatherConditionCode);
    atomic_store(result, (unint64_t *)&qword_1EF2C6DB0);
  }
  return result;
}

unint64_t sub_1BB54CD10()
{
  unint64_t result;

  result = qword_1EF2C6DB8;
  if (!qword_1EF2C6DB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherConditionCode, &type metadata for FormatWeatherConditionCode);
    atomic_store(result, (unint64_t *)&qword_1EF2C6DB8);
  }
  return result;
}

unint64_t sub_1BB54CD54(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB54CD78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB54CD78()
{
  unint64_t result;

  result = qword_1EF2C6DC0;
  if (!qword_1EF2C6DC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherConditionCode, &type metadata for FormatWeatherConditionCode);
    atomic_store(result, (unint64_t *)&qword_1EF2C6DC0);
  }
  return result;
}

unint64_t sub_1BB54CDBC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BB54CDF0();
  a1[2] = sub_1BB54CE34();
  result = sub_1BB54CC5C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB54CDF0()
{
  unint64_t result;

  result = qword_1EF2C6DC8;
  if (!qword_1EF2C6DC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherConditionCode, &type metadata for FormatWeatherConditionCode);
    atomic_store(result, (unint64_t *)&qword_1EF2C6DC8);
  }
  return result;
}

unint64_t sub_1BB54CE34()
{
  unint64_t result;

  result = qword_1EF2C6DD0;
  if (!qword_1EF2C6DD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherConditionCode, &type metadata for FormatWeatherConditionCode);
    atomic_store(result, (unint64_t *)&qword_1EF2C6DD0);
  }
  return result;
}

uint64_t sub_1BB54CE78()
{
  return FormatWeatherConditionCode.rawValue.getter();
}

uint64_t getEnumTagSinglePayload for FormatWeatherConditionCode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD3)
    goto LABEL_17;
  if (a2 + 45 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 45) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 45;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 45;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 45;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x2E;
  v8 = v6 - 46;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatWeatherConditionCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 45 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 45) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD2)
    return ((uint64_t (*)(void))((char *)&loc_1BB54CF84 + 4 * byte_1BB92532F[v4]))();
  *a1 = a2 + 45;
  return ((uint64_t (*)(void))((char *)sub_1BB54CFB8 + 4 * byte_1BB92532A[v4]))();
}

uint64_t sub_1BB54CFB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB54CFC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB54CFC8);
  return result;
}

uint64_t sub_1BB54CFD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB54CFDCLL);
  *(_BYTE *)result = a2 + 45;
  return result;
}

uint64_t sub_1BB54CFE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB54CFE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatWeatherConditionCode()
{
  return &type metadata for FormatWeatherConditionCode;
}

uint64_t GapViewRenderer.render(context:with:in:)(uint64_t a1, double *a2, uint64_t a3)
{
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v4 = a2[4];
  v5 = a2[5];
  v6 = a2[6];
  v7 = a2[7];
  sub_1BA4C010C(a1 + 56, (uint64_t)v12);
  v8 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed7GapView_activityIndicatorView);
  objc_msgSend(v8, sel_setFrame_, v4, v5, v6, v7);
  v9 = v13;
  v10 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(void *, uint64_t, uint64_t))(v10 + 8))(v8, v9, v10);
  objc_msgSend(v8, sel_startAnimating);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t GapViewRenderer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t GapViewRenderer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of GapViewRendererType.render(context:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for GapViewRenderer()
{
  return swift_lookUpClassMethod();
}

BOOL static FormatTagBinding.Text.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BB54D104(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BA80F698(*a1);
  v5 = v4;
  if (v3 == sub_1BA80F698(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB54D18C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA80F698(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB54D1EC()
{
  unsigned __int8 *v0;

  sub_1BA80F698(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB54D22C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA80F698(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB54D288(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724C2C0;
}

uint64_t FormatTagBinding.Text.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatTagBinding.Text.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB54D308()
{
  unint64_t result;

  result = qword_1EF2C6DD8;
  if (!qword_1EF2C6DD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Text, &type metadata for FormatTagBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2C6DD8);
  }
  return result;
}

unint64_t sub_1BB54D34C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAEBECE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB54D370(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA53E23C();
  a1[2] = sub_1BA55CF78();
  result = sub_1BB54D308();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatTagBinding.Text()
{
  return &type metadata for FormatTagBinding.Text;
}

ValueMetadata *_s14descr1E731D319V4TextO10CodingTypeOMa()
{
  return &_s14descr1E731D319V4TextO10CodingTypeON;
}

uint64_t sub_1BB54D3C4()
{
  return sub_1BA4A2870(&qword_1EF2C6DE0, (uint64_t (*)(uint64_t))sub_1BB54D3F0, MEMORY[0x1E0DEAF50]);
}

void sub_1BB54D3F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C6DE8)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C6DE8);
  }
}

unint64_t sub_1BB54D448()
{
  unint64_t result;

  result = qword_1EF2C6DF0;
  if (!qword_1EF2C6DF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9258A4, &_s14descr1E731D319V4TextO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2C6DF0);
  }
  return result;
}

void sub_1BB54D48C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB54D4C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v4;

  v4 = 0;
  swift_unknownObjectRetain();
  sub_1BB54D938(0x696669746E656449, 0xEA00000000007265, v1, &v4, v0);
  v2 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 0, 1, v2);
}

void sub_1BB54D864()
{
  swift_unknownObjectRetain();
  JUMPOUT(0x1BB54D824);
}

void sub_1BB54D8A0()
{
  swift_unknownObjectRetain();
  JUMPOUT(0x1BB54D824);
}

void sub_1BB54D8D0()
{
  swift_unknownObjectRetain();
  JUMPOUT(0x1BB54D824);
}

void sub_1BB54D908()
{
  swift_unknownObjectRetain();
  JUMPOUT(0x1BB54D824);
}

uint64_t sub_1BB54D938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;

  LOBYTE(v13) = *a4;
  swift_getObjectType();
  sub_1BA7A8728(a3, (uint64_t)sub_1BA90FCEC, 0, (uint64_t)&v13);
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v9 & 0xFFFFFFFFFFFFLL;
  if (v11)
  {
    *(_QWORD *)&v13 = v9;
    *((_QWORD *)&v13 + 1) = v10;
    *((_QWORD *)&v14 + 1) = MEMORY[0x1E0DEA968];
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = 0u;
    v14 = 0u;
  }
  sub_1BAAF40BC(a1, a2, (uint64_t)&v13, a5);
  return swift_unknownObjectRelease();
}

void sub_1BB54D9EC(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB54DA2C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v1 = type metadata accessor for FormatJsonKeyValue();
  v2 = (_QWORD *)((char *)v0 + *(int *)(v1 + 20));
  v9 = 0;
  swift_getObjectType();
  v3 = swift_unknownObjectRetain();
  sub_1BA7A8728(v3, (uint64_t)sub_1BA90FCEC, 0, (uint64_t)&v9);
  v5 = v4;
  v7 = v6;
  swift_unknownObjectRelease();
  *v2 = v5;
  v2[1] = v7;
  type metadata accessor for FormatJson();
  swift_storeEnumTagMultiPayload();
  *v0 = 0x696669746E656469;
  v0[1] = 0xEA00000000007265;
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 0, 1, v1);
}

void sub_1BB54E4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v14 = (_QWORD *)(v13 + *(int *)(type metadata accessor for FormatJsonKeyValue() + 20));
  a13 = 20;
  swift_getObjectType();
  v15 = swift_unknownObjectRetain();
  sub_1BA7A8728(v15, (uint64_t)sub_1BA90FCEC, 0, (uint64_t)&a13);
  v17 = v16;
  v19 = v18;
  swift_unknownObjectRelease();
  *v14 = v17;
  v14[1] = v19;
  type metadata accessor for FormatJson();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB54E4ACLL);
}

void sub_1BB54E580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v14 = (_QWORD *)(v13 + *(int *)(type metadata accessor for FormatJsonKeyValue() + 20));
  a13 = 21;
  swift_getObjectType();
  v15 = swift_unknownObjectRetain();
  sub_1BA7A8728(v15, (uint64_t)sub_1BA90FCEC, 0, (uint64_t)&a13);
  v17 = v16;
  v19 = v18;
  swift_unknownObjectRelease();
  *v14 = v17;
  v14[1] = v19;
  type metadata accessor for FormatJson();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB54E4ACLL);
}

void sub_1BB54E60C()
{
  type metadata accessor for FormatJsonKeyValue();
  JUMPOUT(0x1BB54E4C8);
}

void sub_1BB54E630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v14 = (_QWORD *)(v13 + *(int *)(type metadata accessor for FormatJsonKeyValue() + 20));
  a13 = 19;
  swift_getObjectType();
  v15 = swift_unknownObjectRetain();
  sub_1BA7A8728(v15, (uint64_t)sub_1BA90FCEC, 0, (uint64_t)&a13);
  v17 = v16;
  v19 = v18;
  swift_unknownObjectRelease();
  *v14 = v17;
  v14[1] = v19;
  type metadata accessor for FormatJson();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB54E4ACLL);
}

double sub_1BB54E728@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v5;
  _QWORD v6[3];
  _BYTE v7[16];
  _OWORD v8[2];
  uint64_t v9;

  v6[2] = a1;
  v3 = sub_1BA89F4C0((void (*)(char *))sub_1BB54E854, (uint64_t)v6, (uint64_t)&unk_1E724C2C0, (uint64_t)v7);
  sub_1BAF89090(1954047316, 0xE400000000000000, 0, 0, v3, v8);
  swift_bridgeObjectRelease();
  result = *(double *)v8;
  v5 = v8[1];
  *(_OWORD *)a2 = v8[0];
  *(_OWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 32) = v9;
  return result;
}

void sub_1BB54E7B8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3A67D8)
  {
    v2 = sub_1BB54E810();
    v4 = type metadata accessor for FormatCellAutomation(a1, (uint64_t)&type metadata for TagAutomation, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3A67D8);
  }
}

unint64_t sub_1BB54E810()
{
  unint64_t result;

  result = qword_1ED3A5818;
  if (!qword_1ED3A5818)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for TagAutomation, &type metadata for TagAutomation);
    atomic_store(result, (unint64_t *)&qword_1ED3A5818);
  }
  return result;
}

void sub_1BB54E854(uint64_t a1)
{
  sub_1BB54D48C(a1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatCacheKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB54E8BC + 4 * byte_1BB925905[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB54E8F0 + 4 * byte_1BB925900[v4]))();
}

uint64_t sub_1BB54E8F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB54E8F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB54E900);
  return result;
}

uint64_t sub_1BB54E90C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB54E914);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB54E918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB54E920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCacheKind()
{
  return &type metadata for DebugFormatCacheKind;
}

unint64_t sub_1BB54E940()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C6DF8;
  if (!qword_1EF2C6DF8)
  {
    sub_1BB54E988();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C6DF8);
  }
  return result;
}

void sub_1BB54E988()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C6E00)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C6E00);
  }
}

uint64_t sub_1BB54E9DC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB54EA38(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251CD0;
}

unint64_t sub_1BB54EA4C()
{
  unint64_t result;

  result = qword_1EF2C6E08;
  if (!qword_1EF2C6E08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB925960, &type metadata for DebugFormatCacheKind);
    atomic_store(result, (unint64_t *)&qword_1EF2C6E08);
  }
  return result;
}

id FormatLayoutViewToken.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id FormatLayoutViewToken.init()()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed21FormatLayoutViewToken_children] = MEMORY[0x1E0DEE9D8];
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

id FormatLayoutViewToken.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_QWORD *assignWithCopy for DebugFormatFileTreeView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for DebugFormatFileTreeView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatFileTreeView()
{
  return &type metadata for DebugFormatFileTreeView;
}

uint64_t sub_1BB54EBBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BB54EBCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  BOOL v38;
  BOOL v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  unint64_t v93;

  v0 = type metadata accessor for DebugFormatCacheFile();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v77 = (uint64_t)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CE0, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v80 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v69 - v8;
  v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v1 + 56);
  v79((char *)&v69 - v8, 1, 1, v0, v7);
  v78 = type metadata accessor for DebugFormatFileTreeItem();
  v10 = swift_allocObject();
  sub_1BB86C8D4();
  v11 = (_QWORD *)(v10 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
  *v11 = 47;
  v11[1] = 0xE100000000000000;
  swift_beginAccess();
  LOBYTE(v92) = 1;
  sub_1BB871884();
  swift_endAccess();
  sub_1BAA19F18((uint64_t)v9, v10 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile);
  v71 = v10;
  v70 = (uint64_t *)(v10 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
  *v70 = MEMORY[0x1E0DEE9D8];
  v81 = v0;
  result = sub_1BB872E14();
  v75 = *(_QWORD *)(result + 16);
  if (!v75)
  {
LABEL_66:
    swift_bridgeObjectRelease();
    v61 = v70;
    swift_beginAccess();
    v62 = *v61;
    v63 = v71;
    swift_setDeallocating();
    v64 = v63 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_id;
    v65 = sub_1BB86C8E0();
    v66 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8);
    swift_bridgeObjectRetain();
    v66(v64, v65);
    sub_1BB479A28(v63 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v67 = v63 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem__isExpanded;
    sub_1BA4AD288(0, (unint64_t *)&qword_1EF2C4960, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96198]);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
    swift_deallocClassInstance();
    return v62;
  }
  v13 = 0;
  v74 = result + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v73 = v1;
  v72 = result;
  while (1)
  {
    if (v13 >= *(_QWORD *)(result + 16))
      goto LABEL_70;
    v15 = *(_QWORD *)(v1 + 72);
    v76 = v13;
    sub_1BB1AEDB4(v74 + v15 * v13, v77);
    v92 = 47;
    v93 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v16);
    swift_bridgeObjectRelease();
    sub_1BA7114A0();
    v17 = sub_1BB873B4C();
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
      break;
    swift_bridgeObjectRelease();
LABEL_4:
    v14 = v76 + 1;
    sub_1BB550EF8(v77);
    v13 = v14;
    v1 = v73;
    result = v72;
    if (v14 == v75)
      goto LABEL_66;
  }
  v85 = v17 + 32;
  v82 = (_QWORD *)(v17 + 32 * v18);
  v19 = v71;
  swift_retain();
  result = swift_bridgeObjectRetain();
  v20 = 0;
  v83 = v18;
  v84 = v17;
  while (1)
  {
    if (v20 >= *(_QWORD *)(v17 + 16))
      goto LABEL_68;
    v23 = (unint64_t *)(v85 + 32 * v20);
    v25 = *v23;
    v24 = v23[1];
    v27 = v23[2];
    v26 = v23[3];
    v28 = (_QWORD *)(v19 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
    swift_beginAccess();
    v29 = *v28;
    v30 = *v28 >> 62;
    v89 = v19;
    v90 = v20;
    v88 = v28;
    if (v30)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v31 = sub_1BB873F30();
    }
    else
    {
      v31 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
    }
    v86 = v25;
    v87 = v24;
    v32 = v25 >> 16;
    v33 = v24 >> 16;
    if (!v31)
      goto LABEL_52;
    if ((v29 & 0xC000000000000001) != 0)
    {
      v34 = MEMORY[0x1BCCE4630](0, v29);
    }
    else
    {
      v34 = *(_QWORD *)(v29 + 32);
      swift_retain();
    }
    v35 = *(_QWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
    v36 = *(_QWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8);
    v37 = (v36 & 0x2000000000000000) != 0 ? HIBYTE(v36) & 0xF : v35 & 0xFFFFFFFFFFFFLL;
    v38 = v35 == v27 && v36 == v26;
    v39 = v38 && v32 == 0;
    v40 = v39 && v37 == v33;
    if (!v40 && (sub_1BB874200() & 1) == 0)
      break;
LABEL_8:
    v21 = v83;
    v17 = v84;
    v22 = v90;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    result = swift_release();
    v19 = v34;
LABEL_9:
    v20 = v22 + 1;
    if (v20 == v21)
    {
      swift_bridgeObjectRelease_n();
      swift_release();
      goto LABEL_4;
    }
  }
  swift_release();
  if (v31 == 1)
  {
LABEL_52:
    result = swift_bridgeObjectRelease_n();
    v21 = v83;
    v17 = v84;
    if (v83 > *(_QWORD *)(v84 + 16))
      goto LABEL_69;
    if (v27 == v82[2] && v26 == v82[3] && v32 == *v82 >> 16 && v33 == v82[1] >> 16 || (sub_1BB874200() & 1) != 0)
    {
      v51 = MEMORY[0x1BCCE334C](v86, v87, v27, v26);
      v53 = v52;
      swift_bridgeObjectRelease();
      v54 = v80;
      sub_1BB1AEDB4(v77, v80);
      v55 = v54;
      v56 = 0;
    }
    else
    {
      v51 = MEMORY[0x1BCCE334C](v86, v87, v27, v26);
      v53 = v57;
      swift_bridgeObjectRelease();
      v54 = v80;
      v55 = v80;
      v56 = 1;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v79)(v55, v56, 1, v81);
    v19 = swift_allocObject();
    sub_1BB86C8D4();
    v58 = (uint64_t *)(v19 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
    *v58 = v51;
    v58[1] = v53;
    swift_beginAccess();
    v91 = 1;
    sub_1BB871884();
    swift_endAccess();
    v22 = v90;
    v59 = v88;
    sub_1BAA19F18(v54, v19 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile);
    *(_QWORD *)(v19 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children) = MEMORY[0x1E0DEE9D8];
    swift_beginAccess();
    v60 = swift_retain();
    MEMORY[0x1BCCE36AC](v60);
    if (*(_QWORD *)((*v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
    swift_endAccess();
    result = swift_release();
    goto LABEL_9;
  }
  v41 = 5;
  while (1)
  {
    v42 = v41 - 4;
    if ((v29 & 0xC000000000000001) == 0)
      break;
    result = MEMORY[0x1BCCE4630](v41 - 4, v29);
    v34 = result;
    v43 = __OFADD__(v42, 1);
    v44 = v41 - 3;
    if (v43)
      goto LABEL_67;
LABEL_37:
    v45 = *(_QWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
    v46 = *(_QWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8);
    if ((v46 & 0x2000000000000000) != 0)
      v47 = HIBYTE(v46) & 0xF;
    else
      v47 = v45 & 0xFFFFFFFFFFFFLL;
    v50 = v45 == v27 && v46 == v26 && v32 == 0 && v47 == v33;
    if (v50 || (sub_1BB874200() & 1) != 0)
      goto LABEL_8;
    swift_release();
    ++v41;
    if (v44 == v31)
      goto LABEL_52;
  }
  v34 = *(_QWORD *)(v29 + 8 * v41);
  result = swift_retain();
  v43 = __OFADD__(v42, 1);
  v44 = v41 - 3;
  if (!v43)
    goto LABEL_37;
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
  return result;
}

uint64_t sub_1BB54F490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v28 = a3;
  v5 = sub_1BB8722BC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB550F34();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB5512A4(0);
  v27 = v14;
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1;
  v30 = a2;
  sub_1BB550FB0();
  sub_1BB551184();
  sub_1BB8724A8();
  sub_1BB8722B0();
  sub_1BA4A2870(&qword_1EF2C6E50, (uint64_t (*)(uint64_t))sub_1BB550F34, MEMORY[0x1E0CDD950]);
  sub_1BB872574();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v18 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v19 = MEMORY[0x1BCCE2EB4](v18);
  KeyPath = swift_getKeyPath();
  v31 = v19;
  swift_retain();
  v21 = sub_1BB872244();
  v23 = v27;
  v22 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v28, v17, v27);
  swift_release();
  sub_1BB5513AC(0, &qword_1EF2C6E58, sub_1BB5512A4, (void (*)(uint64_t))sub_1BB551414);
  v25 = (uint64_t *)(v22 + *(int *)(v24 + 36));
  *v25 = KeyPath;
  v25[1] = v21;
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v23);
}

uint64_t sub_1BB54F6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a3;
  sub_1BB550FB0();
  v13 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1BB871890();
  swift_release();
  swift_release();
  swift_release();
  if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
  {
    v12 = swift_bridgeObjectRetain();
    v9 = (uint64_t)sub_1BA85E324(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v15 = v9;
  sub_1BB54FB50(&v15);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1BA4B07F0(0, &qword_1EF2A9180, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB5513AC(0, &qword_1EF2C6E28, sub_1BB55109C, (void (*)(uint64_t))sub_1BB55110C);
  sub_1BB3D4F50();
  sub_1BA4A2870((unint64_t *)&qword_1EF2C2E78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BB5511E4();
  swift_retain();
  sub_1BB8725E0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14, v8, v13);
}

uint64_t sub_1BB54F8FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  sub_1BB55109C(0);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DebugFormatFileTreeModel();
  sub_1BA4A2870((unint64_t *)&qword_1EF2BE458, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeModel, (uint64_t)&unk_1BB8FD238);
  swift_retain();
  swift_retain();
  v7 = sub_1BB87228C();
  v9 = v8;
  type metadata accessor for DebugFormatFileTreeItem();
  sub_1BA4A2870(&qword_1EF2C2DB8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, (uint64_t)&unk_1BB91B918);
  v10 = sub_1BB87228C();
  v15[0] = v7;
  v15[1] = v9;
  v15[2] = v10;
  v15[3] = v11;
  sub_1BB872238();
  sub_1BB3D5274();
  sub_1BB872550();
  swift_release();
  swift_release();
  v15[0] = sub_1BB87258C();
  swift_retain();
  v12 = sub_1BB8725D4();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(a1, v6, v3);
  swift_release();
  sub_1BB5513AC(0, &qword_1EF2C6E28, sub_1BB55109C, (void (*)(uint64_t))sub_1BB55110C);
  *(_QWORD *)(a1 + *(int *)(v13 + 36)) = v12;
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BB54FAE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1BB54F490(*v1, v1[1], a1);
}

uint64_t sub_1BB54FAEC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  uint64_t result;

  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  result = swift_bridgeObjectRelease();
  *a1 = 47;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_1BB54FB50(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BA6B2698(v2);
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BB54FCBC(v6);
  return sub_1BB873DBC();
}

uint64_t sub_1BB54FBC8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BB871890();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BB54FC44()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BB87189C();
}

uint64_t sub_1BB54FCBC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  int v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  int v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  char v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;

  v3 = a1[1];
  result = sub_1BB8741F4();
  v136 = v3;
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_209;
    if ((unint64_t)v3 < 2)
      return result;
    v8 = (_QWORD *)*a1;
    v9 = -1;
    v10 = 1;
    v11 = (_QWORD *)*a1;
    while (1)
    {
      v137 = v11;
      v140 = v10;
      v12 = v8[v10];
      v141 = v9;
      while (1)
      {
        v13 = *v11;
        v14 = (_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
        swift_beginAccess();
        if (*v14 >> 62)
        {
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          v15 = sub_1BB873F30();
          swift_bridgeObjectRelease();
        }
        else
        {
          v15 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_retain();
        }
        v16 = (unint64_t *)(v13 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
        swift_beginAccess();
        v17 = *v16;
        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          v18 = sub_1BB873F30();
          swift_bridgeObjectRelease();
          if (v15)
          {
LABEL_18:
            if (!v18)
              goto LABEL_29;
            goto LABEL_23;
          }
        }
        else
        {
          v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v15)
            goto LABEL_18;
        }
        if (v18)
          break;
LABEL_23:
        if (*(_QWORD *)(v13 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name) != *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name)
          || *(_QWORD *)(v13 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8) != *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8))
        {
          v20 = sub_1BB874398();
          swift_release();
          result = swift_release();
          if ((v20 & 1) != 0)
            goto LABEL_12;
          goto LABEL_30;
        }
LABEL_29:
        swift_release();
        result = swift_release();
LABEL_30:
        if (!v8)
          goto LABEL_213;
        v21 = *v11;
        v12 = v11[1];
        *v11 = v12;
        v11[1] = v21;
        --v11;
        if (__CFADD__(v9++, 1))
          goto LABEL_12;
      }
      swift_release();
      result = swift_release();
LABEL_12:
      v10 = v140 + 1;
      v11 = v137 + 1;
      v9 = v141 - 1;
      if (v140 + 1 == v136)
        return result;
    }
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_218;
  v132 = result;
  v129 = a1;
  if (v3 < 2)
  {
    v23 = (char *)MEMORY[0x1E0DEE9D8];
    v143 = MEMORY[0x1E0DEE9D8];
    v139 = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v26 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_175:
      if (v26 >= 2)
      {
        v122 = *v129;
        do
        {
          v123 = v26 - 2;
          if (v26 < 2)
            goto LABEL_204;
          if (!v122)
            goto LABEL_217;
          v124 = v23;
          v125 = *(_QWORD *)&v23[16 * v123 + 32];
          v126 = *(_QWORD *)&v23[16 * v26 + 24];
          sub_1BB550970((char *)(v122 + 8 * v125), (char *)(v122 + 8 * *(_QWORD *)&v23[16 * v26 + 16]), v122 + 8 * v126, v139);
          if (v1)
            break;
          if (v126 < v125)
            goto LABEL_205;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v124 = sub_1BACAB464((uint64_t)v124);
          if (v123 >= *((_QWORD *)v124 + 2))
            goto LABEL_206;
          v127 = &v124[16 * v123 + 32];
          *(_QWORD *)v127 = v125;
          *((_QWORD *)v127 + 1) = v126;
          v128 = *((_QWORD *)v124 + 2);
          if (v26 > v128)
            goto LABEL_207;
          memmove(&v124[16 * v26 + 16], &v124[16 * v26 + 32], 16 * (v128 - v26));
          v23 = v124;
          *((_QWORD *)v124 + 2) = v128 - 1;
          v26 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_186:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v143 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BB872DCC();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    type metadata accessor for DebugFormatFileTreeItem();
    v7 = sub_1BB872E74();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v139 = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v143 = v7;
  }
  v24 = 0;
  v25 = *a1;
  v130 = *a1 - 8;
  v131 = *a1 + 16;
  v23 = (char *)MEMORY[0x1E0DEE9D8];
  v142 = *a1;
LABEL_38:
  v27 = v24++;
  v138 = v27;
  if (v24 >= v3)
    goto LABEL_89;
  v133 = v23;
  v28 = *(_QWORD *)(v25 + 8 * v24);
  v29 = *(_QWORD *)(v25 + 8 * v27);
  v30 = (unint64_t *)(v28 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
  swift_beginAccess();
  v31 = *v30;
  if (v31 >> 62)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v32 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_retain();
  }
  v33 = (unint64_t *)(v29 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
  swift_beginAccess();
  v34 = *v33;
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    v35 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v32)
    {
LABEL_43:
      if (!v35)
      {
        swift_release();
        swift_release();
        v36 = 1;
        goto LABEL_56;
      }
      goto LABEL_49;
    }
  }
  else
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v32)
      goto LABEL_43;
  }
  if (v35)
  {
    swift_release();
    swift_release();
    v36 = 0;
    goto LABEL_56;
  }
LABEL_49:
  if (*(_QWORD *)(v29 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name) == *(_QWORD *)(v28
                                                                                               + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name)
    && *(_QWORD *)(v29 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8) == *(_QWORD *)(v28 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8))
  {
    v38 = 0;
  }
  else
  {
    v38 = sub_1BB874398();
  }
  swift_release();
  swift_release();
  v36 = v38 ^ 1;
LABEL_56:
  v24 = v27 + 2;
  if (v27 + 2 >= v3)
  {
    v23 = v133;
    v25 = v142;
    if ((v36 & 1) != 0)
    {
LABEL_81:
      if (v24 < v27)
        goto LABEL_212;
LABEL_82:
      if (v27 < v24)
      {
        v50 = (uint64_t *)(v130 + 8 * v24);
        v51 = v24;
        v52 = v27;
        v53 = (uint64_t *)(v25 + 8 * v27);
        do
        {
          if (v52 != --v51)
          {
            if (!v25)
              goto LABEL_216;
            v54 = *v53;
            *v53 = *v50;
            *v50 = v54;
          }
          ++v52;
          --v50;
          ++v53;
        }
        while (v52 < v51);
      }
    }
LABEL_89:
    if (v24 >= v3)
      goto LABEL_124;
LABEL_90:
    if (__OFSUB__(v24, v27))
      goto LABEL_208;
    if (v24 - v27 >= v132)
      goto LABEL_124;
    if (__OFADD__(v27, v132))
      goto LABEL_210;
    if (v27 + v132 >= v3)
      v55 = v3;
    else
      v55 = v27 + v132;
    if (v55 < v27)
    {
LABEL_211:
      __break(1u);
      goto LABEL_212;
    }
    if (v24 == v55)
      goto LABEL_124;
    v134 = v23;
    v135 = v55;
    v56 = (uint64_t *)(v130 + 8 * v24);
LABEL_102:
    v57 = *(_QWORD *)(v25 + 8 * v24);
    v58 = v27;
    v59 = v56;
    while (1)
    {
      v60 = *v59;
      v61 = (unint64_t *)(v57 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
      swift_beginAccess();
      v62 = *v61;
      if (v62 >> 62)
      {
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        v63 = sub_1BB873F30();
        swift_bridgeObjectRelease();
      }
      else
      {
        v63 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        swift_retain();
      }
      v64 = (unint64_t *)(v60 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
      swift_beginAccess();
      v65 = *v64;
      if (v65 >> 62)
      {
        swift_bridgeObjectRetain();
        v66 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (v63)
        {
LABEL_107:
          if (!v66)
            goto LABEL_118;
          goto LABEL_112;
        }
      }
      else
      {
        v66 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v63)
          goto LABEL_107;
      }
      if (v66)
      {
        swift_release();
        swift_release();
LABEL_100:
        v25 = v142;
LABEL_101:
        ++v24;
        ++v56;
        v27 = v138;
        if (v24 != v135)
          goto LABEL_102;
        v24 = v135;
        v23 = v134;
LABEL_124:
        if (v24 < v27)
          goto LABEL_203;
        v70 = v23;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v23 = v70;
        else
          v23 = sub_1BACAA368(0, *((_QWORD *)v70 + 2) + 1, 1, v70);
        v72 = *((_QWORD *)v23 + 2);
        v71 = *((_QWORD *)v23 + 3);
        v26 = v72 + 1;
        v25 = v142;
        if (v72 >= v71 >> 1)
        {
          v121 = sub_1BACAA368((char *)(v71 > 1), v72 + 1, 1, v23);
          v25 = v142;
          v23 = v121;
        }
        *((_QWORD *)v23 + 2) = v26;
        v73 = v23 + 32;
        v74 = &v23[16 * v72 + 32];
        *(_QWORD *)v74 = v138;
        *((_QWORD *)v74 + 1) = v24;
        if (v72)
        {
          while (2)
          {
            v75 = v26 - 1;
            if (v26 >= 4)
            {
              v80 = &v73[16 * v26];
              v81 = *((_QWORD *)v80 - 8);
              v82 = *((_QWORD *)v80 - 7);
              v86 = __OFSUB__(v82, v81);
              v83 = v82 - v81;
              if (v86)
                goto LABEL_192;
              v85 = *((_QWORD *)v80 - 6);
              v84 = *((_QWORD *)v80 - 5);
              v86 = __OFSUB__(v84, v85);
              v78 = v84 - v85;
              v79 = v86;
              if (v86)
                goto LABEL_193;
              v87 = v26 - 2;
              v88 = &v73[16 * v26 - 32];
              v90 = *(_QWORD *)v88;
              v89 = *((_QWORD *)v88 + 1);
              v86 = __OFSUB__(v89, v90);
              v91 = v89 - v90;
              if (v86)
                goto LABEL_195;
              v86 = __OFADD__(v78, v91);
              v92 = v78 + v91;
              if (v86)
                goto LABEL_198;
              if (v92 >= v83)
              {
                v110 = &v73[16 * v75];
                v112 = *(_QWORD *)v110;
                v111 = *((_QWORD *)v110 + 1);
                v86 = __OFSUB__(v111, v112);
                v113 = v111 - v112;
                if (v86)
                  goto LABEL_202;
                v103 = v78 < v113;
              }
              else
              {
LABEL_143:
                if ((v79 & 1) != 0)
                  goto LABEL_194;
                v87 = v26 - 2;
                v93 = &v73[16 * v26 - 32];
                v95 = *(_QWORD *)v93;
                v94 = *((_QWORD *)v93 + 1);
                v96 = __OFSUB__(v94, v95);
                v97 = v94 - v95;
                v98 = v96;
                if (v96)
                  goto LABEL_197;
                v99 = &v73[16 * v75];
                v101 = *(_QWORD *)v99;
                v100 = *((_QWORD *)v99 + 1);
                v86 = __OFSUB__(v100, v101);
                v102 = v100 - v101;
                if (v86)
                  goto LABEL_200;
                if (__OFADD__(v97, v102))
                  goto LABEL_201;
                if (v97 + v102 < v78)
                  goto LABEL_155;
                v103 = v78 < v102;
              }
              if (v103)
                v75 = v87;
            }
            else
            {
              if (v26 == 3)
              {
                v77 = *((_QWORD *)v23 + 4);
                v76 = *((_QWORD *)v23 + 5);
                v86 = __OFSUB__(v76, v77);
                v78 = v76 - v77;
                v79 = v86;
                goto LABEL_143;
              }
              v104 = *((_QWORD *)v23 + 4);
              v105 = *((_QWORD *)v23 + 5);
              v86 = __OFSUB__(v105, v104);
              v97 = v105 - v104;
              v98 = v86;
LABEL_155:
              if ((v98 & 1) != 0)
                goto LABEL_196;
              v106 = &v73[16 * v75];
              v108 = *(_QWORD *)v106;
              v107 = *((_QWORD *)v106 + 1);
              v86 = __OFSUB__(v107, v108);
              v109 = v107 - v108;
              if (v86)
                goto LABEL_199;
              if (v109 < v97)
                goto LABEL_37;
            }
            v114 = v75 - 1;
            if (v75 - 1 >= v26)
            {
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
LABEL_192:
              __break(1u);
LABEL_193:
              __break(1u);
LABEL_194:
              __break(1u);
LABEL_195:
              __break(1u);
LABEL_196:
              __break(1u);
LABEL_197:
              __break(1u);
LABEL_198:
              __break(1u);
LABEL_199:
              __break(1u);
LABEL_200:
              __break(1u);
LABEL_201:
              __break(1u);
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
LABEL_205:
              __break(1u);
LABEL_206:
              __break(1u);
LABEL_207:
              __break(1u);
LABEL_208:
              __break(1u);
LABEL_209:
              __break(1u);
LABEL_210:
              __break(1u);
              goto LABEL_211;
            }
            if (!v25)
              goto LABEL_215;
            v115 = v23;
            v116 = &v73[16 * v114];
            v117 = *(_QWORD *)v116;
            v118 = &v73[16 * v75];
            v119 = *((_QWORD *)v118 + 1);
            sub_1BB550970((char *)(v25 + 8 * *(_QWORD *)v116), (char *)(v25 + 8 * *(_QWORD *)v118), v25 + 8 * v119, v139);
            if (v1)
              goto LABEL_186;
            if (v119 < v117)
              goto LABEL_189;
            if (v75 > *((_QWORD *)v115 + 2))
              goto LABEL_190;
            *(_QWORD *)v116 = v117;
            *(_QWORD *)&v73[16 * v114 + 8] = v119;
            v120 = *((_QWORD *)v115 + 2);
            if (v75 >= v120)
              goto LABEL_191;
            v26 = v120 - 1;
            memmove(&v73[16 * v75], v118 + 16, 16 * (v120 - 1 - v75));
            v23 = v115;
            *((_QWORD *)v115 + 2) = v120 - 1;
            v25 = v142;
            if (v120 <= 2)
              goto LABEL_37;
            continue;
          }
        }
        v26 = 1;
LABEL_37:
        v3 = v136;
        if (v24 >= v136)
          goto LABEL_175;
        goto LABEL_38;
      }
LABEL_112:
      if (*(_QWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name) != *(_QWORD *)(v57 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name)
        || *(_QWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8) != *(_QWORD *)(v57 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8))
      {
        v68 = sub_1BB874398();
        swift_release();
        swift_release();
        if ((v68 & 1) != 0)
          goto LABEL_100;
        goto LABEL_119;
      }
LABEL_118:
      swift_release();
      swift_release();
LABEL_119:
      v25 = v142;
      if (!v142)
        goto LABEL_214;
      v69 = *v59;
      v57 = v59[1];
      *v59 = v57;
      v59[1] = v69;
      --v59;
      if (v24 == ++v58)
        goto LABEL_101;
    }
  }
  v39 = (uint64_t *)(v131 + 8 * v27);
  while (1)
  {
    v40 = *(v39 - 1);
    v41 = *v39;
    v42 = (unint64_t *)(*v39 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
    swift_beginAccess();
    v43 = *v42;
    if (v43 >> 62)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v44 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_retain();
    }
    v45 = (unint64_t *)(v40 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
    swift_beginAccess();
    v46 = *v45;
    if (v46 >> 62)
    {
      swift_bridgeObjectRetain();
      v47 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v44)
      {
LABEL_64:
        if (!v47)
          goto LABEL_58;
        goto LABEL_71;
      }
    }
    else
    {
      v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v44)
        goto LABEL_64;
    }
    if (v47)
      break;
LABEL_71:
    if (*(_QWORD *)(v40 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name) == *(_QWORD *)(v41
                                                                                                 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name)
      && *(_QWORD *)(v40 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8) == *(_QWORD *)(v41 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8))
    {
LABEL_58:
      swift_release();
      swift_release();
      if ((v36 & 1) == 0)
      {
        v3 = v136;
        v27 = v138;
        v23 = v133;
        v25 = v142;
        if (v24 >= v136)
          goto LABEL_124;
        goto LABEL_90;
      }
      goto LABEL_59;
    }
    v49 = sub_1BB874398();
    swift_release();
    swift_release();
    if (((v36 ^ v49) & 1) == 0)
    {
      v3 = v136;
      goto LABEL_80;
    }
LABEL_59:
    ++v24;
    ++v39;
    if (v136 == v24)
    {
      v3 = v136;
      v24 = v136;
LABEL_80:
      v23 = v133;
      v25 = v142;
      v27 = v138;
      if ((v36 & 1) == 0)
        goto LABEL_89;
      goto LABEL_81;
    }
  }
  swift_release();
  swift_release();
  if ((v36 & 1) == 0)
    goto LABEL_59;
  v3 = v136;
  v27 = v138;
  v23 = v133;
  v25 = v142;
  if (v24 >= v138)
    goto LABEL_82;
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

