uint64_t sub_1BB5F8308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1BB86F43C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_1BB5F8388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1BB86F43C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1BB5F83EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86F43C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1BB5F8460()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB5F846C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86F43C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB5F84E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB5F84F4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86F43C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LayeredMediaImageVariant()
{
  uint64_t result;

  result = qword_1ED39D2E0;
  if (!qword_1ED39D2E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB5F85A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86F43C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t UIUserInterfaceStyle.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 1802658148;
  v2 = 0x6E776F6E6B6E75;
  if (a1 == 1)
    v2 = 0x746867696CLL;
  if (a1 != 2)
    v1 = v2;
  if (a1)
    return v1;
  else
    return 0x6669636570736E75;
}

uint64_t sub_1BB5F8698()
{
  return sub_1BB5F882C(&qword_1EF2C8C10, (uint64_t)&unk_1BB87BD7C);
}

uint64_t sub_1BB5F86BC()
{
  sub_1BB5F882C(&qword_1EF2C8C18, (uint64_t)&unk_1BB87ABE8);
  return sub_1BB872CDC();
}

uint64_t sub_1BB5F870C()
{
  sub_1BB5F882C(&qword_1EF2C8C18, (uint64_t)&unk_1BB87ABE8);
  return sub_1BB872CD0();
}

uint64_t sub_1BB5F8764()
{
  sub_1BB5F882C(&qword_1EF2C8C18, (uint64_t)&unk_1BB87ABE8);
  return sub_1BB872CC4();
}

uint64_t sub_1BB5F87B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = 1802658148;
  v3 = 0x6E776F6E6B6E75;
  if (*v0 == 1)
    v3 = 0x746867696CLL;
  if (v1 != 2)
    v2 = v3;
  if (v1)
    return v2;
  else
    return 0x6669636570736E75;
}

uint64_t sub_1BB5F882C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for UIUserInterfaceStyle(255);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1BB5F886C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C8B0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1BA76D78C();
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *((_BYTE *)v4 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t sub_1BB5F8984(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_1BB5F8A00(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1BA76D78C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_1BB5F8AEC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA76D78C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1BB5F8C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1BB86C8B0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BA76D78C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_1BB5F8D08(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BA76D78C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1BB5F8E38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB5F8E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA76D78C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BB5F8EC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB5F8ECC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA76D78C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PuzzleStatsProcessingData()
{
  uint64_t result;

  result = qword_1ED3ADAD0;
  if (!qword_1ED3ADAD0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB5F8F7C()
{
  unint64_t v0;

  sub_1BA76D78C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t FormatSlotDefinition.init(identifier:name:description:items:transforms:properties:editorProperties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  v11 = (uint64_t)a9 + *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  return sub_1BA6E7324(a11, v11);
}

uint64_t FormatSlotDefinition.transforms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB5F9054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char v30;
  uint64_t result;
  int v32;
  int v33;
  int v34;
  BOOL v35;
  int v36;
  int v37;
  int v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;

  v77 = a2;
  sub_1BA4B07F0(0, qword_1EF2ADE58, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v71 - v7;
  v80 = type metadata accessor for FormatSlotDefinitionItemSet();
  v9 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v76 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v71 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v71 - v15);
  MEMORY[0x1E0C80A78](v17);
  v78 = (uint64_t)&v71 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v71 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v71 - v23;
  v25 = v3[6];
  v26 = *(_QWORD *)(v25 + 16);
  v79 = a3;
  if (!v26)
  {
    swift_bridgeObjectRetain();
LABEL_19:
    sub_1BA5E01A4(v77, (uint64_t)v8, qword_1EF2ADE58, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v45 = v80;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v80) == 1)
    {
      sub_1BA5C699C((uint64_t)v8, qword_1EF2ADE58, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      v46 = v76;
      sub_1BAA44244(a1, v76);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v25 = sub_1BB3905C4(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
      v48 = *(_QWORD *)(v25 + 16);
      v47 = *(_QWORD *)(v25 + 24);
      if (v48 >= v47 >> 1)
        v25 = sub_1BB3905C4(v47 > 1, v48 + 1, 1, v25);
      *(_QWORD *)(v25 + 16) = v48 + 1;
      sub_1BA8C88F0(v46, v25+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v48);
      goto LABEL_31;
    }
    v49 = v78;
    sub_1BA8C88F0((uint64_t)v8, v78);
    v50 = v45;
    v51 = *(_QWORD *)(a1 + 8);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2B1578, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v52 = *(_QWORD *)(v9 + 72);
    v53 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v77 = v52;
    v54 = (uint64_t *)a1;
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1BB87CE70;
    v56 = *v54;
    sub_1BAA44244(v49, v55 + v53);
    sub_1BA5E01A4((uint64_t)v54 + *(int *)(v50 + 36), (uint64_t)v16 + *(int *)(v50 + 36), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    *v16 = v56;
    v57 = MEMORY[0x1E0DEE9D8];
    v16[1] = v51;
    v16[2] = v57;
    v16[3] = v57;
    v16[4] = v55;
    sub_1BAA44244((uint64_t)v16, (uint64_t)v13);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = sub_1BB3905C4(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
    v59 = *(_QWORD *)(v25 + 16);
    v58 = *(_QWORD *)(v25 + 24);
    if (v59 >= v58 >> 1)
      v25 = sub_1BB3905C4(v58 > 1, v59 + 1, 1, v25);
    *(_QWORD *)(v25 + 16) = v59 + 1;
    sub_1BA8C88F0((uint64_t)v13, v25 + v53 + v59 * v77);
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    v44 = v78;
LABEL_30:
    sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
LABEL_31:
    v61 = *v3;
    v60 = v3[1];
    v63 = v3[2];
    v62 = v3[3];
    v64 = v3[4];
    v65 = v3[5];
    v66 = v3[7];
    v67 = v3[8];
    v68 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
    v69 = (uint64_t)v3 + v68;
    v70 = v79;
    sub_1BA5E01A4(v69, (uint64_t)v79 + v68, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    *v70 = v61;
    v70[1] = v60;
    v70[2] = v63;
    v70[3] = v62;
    v70[4] = v64;
    v70[5] = v65;
    v70[6] = v25;
    v70[7] = v66;
    v70[8] = v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  v74 = v13;
  v75 = v16;
  v73 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v72 = *(_QWORD *)(v9 + 72);
  sub_1BAA44244(v25 + v73 + v72 * (v26 - 1), (uint64_t)&v71 - v23);
  v27 = *((_QWORD *)v24 + 1);
  v28 = (int *)a1;
  v29 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = sub_1BA857E18(v27, v29);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
  {
    sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    v13 = v74;
    v16 = v75;
    a1 = (uint64_t)v28;
    goto LABEL_19;
  }
  v32 = *(_DWORD *)v24;
  v33 = *v28;
  v34 = 0x7FFFFFFF;
  v35 = *(_DWORD *)v24 == 0x7FFFFFFF || v33 == 0x7FFFFFFF;
  v36 = 0x7FFFFFFF;
  if (!v35)
  {
    v36 = v32 + v33;
    if (__OFADD__(v32, v33))
      goto LABEL_35;
  }
  v37 = *((_DWORD *)v24 + 1);
  v38 = v28[1];
  if (v37 != 0x7FFFFFFF && v38 != 0x7FFFFFFF)
  {
    v34 = v37 + v38;
    if (__OFADD__(v37, v38))
      goto LABEL_36;
  }
  v40 = *((_QWORD *)v24 + 3);
  v41 = *((_QWORD *)v24 + 4);
  sub_1BA5E01A4((uint64_t)&v24[*(int *)(v80 + 36)], (uint64_t)&v21[*(int *)(v80 + 36)], (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  v42 = MEMORY[0x1E0DEE9D8];
  *(_DWORD *)v21 = v36;
  *((_DWORD *)v21 + 1) = v34;
  *((_QWORD *)v21 + 1) = v27;
  *((_QWORD *)v21 + 2) = v42;
  *((_QWORD *)v21 + 3) = v40;
  *((_QWORD *)v21 + 4) = v41;
  v43 = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRetain();
  sub_1BA5DCC20(v40);
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if (v43)
      goto LABEL_15;
  }
  else
  {
    result = sub_1BAA67E4C(v25);
    v25 = result;
    if (v43)
    {
LABEL_15:
      if (v43 <= *(_QWORD *)(v25 + 16))
      {
        sub_1BAA9CB58((uint64_t)v21, v25 + v73 + (v43 - 1) * v72);
        v44 = (uint64_t)v24;
        goto LABEL_30;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t FormatSlotDefinition.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSlotDefinition.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSlotDefinition.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSlotDefinition.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotDefinition.transforms.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatSlotDefinition.transforms.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSlotDefinition.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotDefinition.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatSlotDefinition();
  return sub_1BA5E01A4(v1 + *(int *)(v3 + 40), a1, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
}

BOOL _s8NewsFeed20FormatSlotDefinitionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  _BOOL8 result;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v36)(uint64_t);
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA793CE8();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v42 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v42 - v20;
  if (*a1 == *a2 && a1[1] == a2[1] || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5] || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
      {
        if ((sub_1BA88286C(a1[6], a2[6]) & 1) != 0)
        {
          v44 = v4;
          v45 = v6;
          v43 = v12;
          v26 = a1[7];
          v27 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v28 = sub_1BA88285C(v26, v27);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v28 & 1) != 0 && (sub_1BA882880(a1[8], a2[8]) & 1) != 0)
          {
            v29 = type metadata accessor for FormatSlotDefinition();
            v30 = (uint64_t)a1 + *(int *)(v29 + 40);
            v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA5E01A4(v30, (uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            sub_1BA5E01A4((uint64_t)a2 + *(int *)(v29 + 40), (uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v31);
            v32 = (uint64_t)v43;
            v33 = (uint64_t)&v43[*(int *)(v10 + 48)];
            sub_1BA5E01A4((uint64_t)v21, (uint64_t)v43, (unint64_t *)&qword_1ED3C47E8, v31);
            sub_1BA5E01A4((uint64_t)v18, v33, (unint64_t *)&qword_1ED3C47E8, v31);
            v34 = v44;
            v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
            if (v35(v32, 1, v44) == 1)
            {
              v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v36);
              if (v35(v33, 1, v34) == 1)
              {
                sub_1BA5C699C(v32, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                return 1;
              }
            }
            else
            {
              sub_1BA5E01A4(v32, (uint64_t)v15, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              if (v35(v33, 1, v34) != 1)
              {
                v38 = v45;
                (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v8, v33, v34);
                v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                v40 = sub_1BB872958();
                v41 = *(void (**)(char *, uint64_t))(v38 + 8);
                v41(v8, v34);
                sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v39);
                sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v39);
                v41(v15, v34);
                sub_1BA5C699C(v32, (unint64_t *)&qword_1ED3C47E8, v39);
                return (v40 & 1) != 0;
              }
              v37 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v37);
              (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v34);
            }
            sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))sub_1BA793CE8);
          }
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BB5F9B9C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C8C20, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB5F9BD8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3B6288, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition);
  a1[2] = sub_1BA4A2870(&qword_1ED3A6868, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition);
  result = sub_1BA4A2870(&qword_1EF2C8C28, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB5F9C50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB5F9C5C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 56) = v3;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatSlotDefinition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  char *__dst;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = *(int *)(a3 + 40);
    __dst = (char *)a1 + v9;
    v10 = (char *)a2 + v9;
    a1[8] = a2[8];
    v11 = sub_1BB86E710();
    v12 = *(_QWORD *)(v11 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v10, 1, v11))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
  }
  return v3;
}

_QWORD *assignWithCopy for FormatSlotDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for FormatSlotDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 40);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithTake for FormatSlotDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 40);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1BB86E710();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1BB5FA230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_1BB5FA2C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB5FA350()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB5FA374(unsigned __int8 *a1, uint64_t a2, void *a3, void (*a4)(id))
{
  int v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v6 = *a1;
  v7 = a2 + 16;
  swift_beginAccess();
  v8 = (void *)MEMORY[0x1BCCE5D40](v7);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_view);

    if (v10)
    {
      if (v6)
      {
        objc_msgSend(v10, sel_bounds);
        objc_msgSend(a3, sel_setFrame_);
        objc_msgSend(a3, sel_setAutoresizingMask_, 18);
        v11 = objc_msgSend(v10, sel_addSubview_, a3);
      }
      else
      {
        v11 = objc_msgSend(a3, sel_removeFromSuperview);
      }
      a4(v11);

    }
  }
}

uint64_t sub_1BB5FA464()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1BB5FA498(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1BB5FA374(a1, *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(void (**)(id))(v1 + 56));
}

id sub_1BB5FA4AC(void *a1, id a2)
{
  id v3;
  id result;
  id v5;

  if (a1)
  {
    v3 = a1;
LABEL_5:
    v5 = a1;
    return v3;
  }
  result = objc_msgSend(a2, sel_view);
  if (result)
  {
    v3 = result;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1BB5FA504()
{
  uint64_t started;
  uint64_t v1;
  char *v2;

  started = type metadata accessor for StartTimeEndTime(0);
  MEMORY[0x1E0C80A78](started);
  v1 = type metadata accessor for StartTime(0);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  v2 = (char *)sub_1BB5FA5C4 + 4 * byte_1BB932020[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB5FA5C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1BA5193C4(v2, v1, type metadata accessor for StartTime);
  sub_1BB5FACF0();
  v3 = swift_allocBox();
  v5 = v4;
  v6 = sub_1BB86C8B0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, v1, v6);
  *v0 = v3;
  return result;
}

void SportsDataVisualizationEventStatus.isLive.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB5FA994()
{
  char v0;

  v0 = sub_1BB874398();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

void sub_1BB5FA9E8()
{
  JUMPOUT(0x1BB5FA9A8);
}

void SportsDataVisualizationEventStatus.startTime.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB5FAA30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BB5FACF0();
  v1 = swift_projectBox();
  v2 = sub_1BB86C8B0();
  v3 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v1, v2);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v0, 0, 1, v2);
}

void sub_1BB5FAAA0()
{
  sub_1BB86C8B0();
  JUMPOUT(0x1BB5FAA90);
}

uint64_t SportsDataVisualizationEventStatus.endTime.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_1BB86C8B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 >> 61 != 4)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v4 + 56))(a1, 1, 1, v3, v5);
  sub_1BB5FAC8C();
  v9 = v8;
  v10 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v10 + *(int *)(v9 + 48), v3);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v7, v3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
}

void SportsDataVisualizationEventStatus.isFinalized.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB5FAC0C()
{
  char v0;

  v0 = sub_1BB874398();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t SportsDataVisualizationEventStatus.sportEventState.getter()
{
  _QWORD *v0;

  return byte_1BB932F4E[*v0 >> 60];
}

void sub_1BB5FAC8C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A3270)
  {
    sub_1BB86C8B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A3270);
  }
}

void sub_1BB5FACF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3278)
  {
    v0 = sub_1BB86C8B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3278);
  }
}

void SportsDataVisualizationEventStatus.isUpcoming.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB5FAD84()
{
  char v0;

  v0 = sub_1BB874398();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

void sub_1BB5FADD4()
{
  JUMPOUT(0x1BB5FAD94);
}

uint64_t sub_1BB5FADF0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB5FAE24 + 4 * byte_1BB932057[a1]))(0x656D6167657270, 0xE700000000000000);
}

uint64_t sub_1BB5FAE24()
{
  return 0x6576694C7261656ELL;
}

uint64_t sub_1BB5FAE3C()
{
  return 0x6572676F72506E69;
}

uint64_t sub_1BB5FAE58()
{
  return 0x6B61657262;
}

uint64_t sub_1BB5FAE6C()
{
  return 0x656E6F7074736F70;
}

uint64_t sub_1BB5FAEB0()
{
  return 0x646579616C6564;
}

uint64_t sub_1BB5FAEC4()
{
  return 0x74696566726F66;
}

uint64_t sub_1BB5FAED8()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1BB5FAEEC()
{
  return 0x6C616E6966;
}

uint64_t sub_1BB5FAF00()
{
  return 0x6D69547472617473;
}

uint64_t sub_1BB5FAF20()
{
  sub_1BB5FEEF0();
  return sub_1BB874710();
}

uint64_t sub_1BB5FAF48()
{
  sub_1BB5FEEF0();
  return sub_1BB87471C();
}

uint64_t sub_1BB5FAF70()
{
  sub_1BB5FEE24();
  return sub_1BB874710();
}

uint64_t sub_1BB5FAF98()
{
  sub_1BB5FEE24();
  return sub_1BB87471C();
}

uint64_t sub_1BB5FAFC0()
{
  unsigned __int8 *v0;

  return sub_1BB5FADF0(*v0);
}

uint64_t sub_1BB5FAFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB5FFE00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB5FAFEC()
{
  sub_1BB5FF000();
  return sub_1BB874710();
}

uint64_t sub_1BB5FB014()
{
  sub_1BB5FF000();
  return sub_1BB87471C();
}

uint64_t sub_1BB5FB03C()
{
  sub_1BB5FEDE0();
  return sub_1BB874710();
}

uint64_t sub_1BB5FB064()
{
  sub_1BB5FEDE0();
  return sub_1BB87471C();
}

uint64_t sub_1BB5FB08C()
{
  _BYTE *v0;

  if (*v0)
    return 0x656D6954646E65;
  else
    return 0x6D69547472617473;
}

uint64_t sub_1BB5FB0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB60028C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB5FB0F0()
{
  sub_1BB5FED9C();
  return sub_1BB874710();
}

uint64_t sub_1BB5FB118()
{
  sub_1BB5FED9C();
  return sub_1BB87471C();
}

uint64_t sub_1BB5FB140()
{
  sub_1BB5FED58();
  return sub_1BB874710();
}

uint64_t sub_1BB5FB168()
{
  sub_1BB5FED58();
  return sub_1BB87471C();
}

uint64_t sub_1BB5FB190()
{
  sub_1BB5FEF34();
  return sub_1BB874710();
}

uint64_t sub_1BB5FB1B8()
{
  sub_1BB5FEF34();
  return sub_1BB87471C();
}

uint64_t sub_1BB5FB1E0()
{
  sub_1BB5FEF78();
  return sub_1BB874710();
}

uint64_t sub_1BB5FB208()
{
  sub_1BB5FEF78();
  return sub_1BB87471C();
}

uint64_t sub_1BB5FB230()
{
  sub_1BB5FEEAC();
  return sub_1BB874710();
}

uint64_t sub_1BB5FB258()
{
  sub_1BB5FEEAC();
  return sub_1BB87471C();
}

uint64_t sub_1BB5FB280()
{
  sub_1BB5FEFBC();
  return sub_1BB874710();
}

uint64_t sub_1BB5FB2A8()
{
  sub_1BB5FEFBC();
  return sub_1BB87471C();
}

uint64_t sub_1BB5FB2D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB5FB370()
{
  sub_1BB5FEE68();
  return sub_1BB874710();
}

uint64_t sub_1BB5FB398()
{
  sub_1BB5FEE68();
  return sub_1BB87471C();
}

uint64_t sub_1BB5FB3C0()
{
  sub_1BB5FED14();
  return sub_1BB874710();
}

uint64_t sub_1BB5FB3E8()
{
  sub_1BB5FED14();
  return sub_1BB87471C();
}

void SportsDataVisualizationEventStatus.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD v51[42];
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BA4CDF6C(0, &qword_1ED3AB760, (uint64_t (*)(void))sub_1BB5FED14, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.UnknownCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v51[30] = *(_QWORD *)(v5 - 8);
  v51[31] = v5;
  MEMORY[0x1E0C80A78](v5);
  v51[29] = (char *)v51 - v6;
  sub_1BA4CDF6C(0, &qword_1ED3AB750, (uint64_t (*)(void))sub_1BB5FED58, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.ForfeitCodingKeys, v4);
  v51[36] = *(_QWORD *)(v7 - 8);
  v51[37] = v7;
  MEMORY[0x1E0C80A78](v7);
  v51[35] = (char *)v51 - v8;
  sub_1BA4CDF6C(0, &qword_1ED3AB740, (uint64_t (*)(void))sub_1BB5FED9C, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.FinalCodingKeys, v4);
  v51[33] = *(_QWORD *)(v9 - 8);
  v51[34] = v9;
  MEMORY[0x1E0C80A78](v9);
  v51[32] = (char *)v51 - v10;
  sub_1BA4CDF6C(0, &qword_1ED3AB748, (uint64_t (*)(void))sub_1BB5FEDE0, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.DelayedCodingKeys, v4);
  v51[28] = v11;
  v51[27] = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v51[26] = (char *)v51 - v12;
  sub_1BA4CDF6C(0, &qword_1ED3AB770, (uint64_t (*)(void))sub_1BB5FEE24, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.CancelledCodingKeys, v4);
  v51[25] = v13;
  v51[24] = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v51[23] = (char *)v51 - v14;
  sub_1BA4CDF6C(0, &qword_1ED3AB780, (uint64_t (*)(void))sub_1BB5FEE68, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.SuspendedCodingKeys, v4);
  v51[22] = v15;
  v51[21] = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v51[20] = (char *)v51 - v16;
  sub_1BA4CDF6C(0, &qword_1ED3AB778, (uint64_t (*)(void))sub_1BB5FEEAC, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.PostponedCodingKeys, v4);
  v51[19] = v17;
  v51[18] = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v51[17] = (char *)v51 - v18;
  sub_1BA4CDF6C(0, &qword_1ED3AB738, (uint64_t (*)(void))sub_1BB5FEEF0, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.BreakCodingKeys, v4);
  v51[16] = v19;
  v51[15] = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v51[14] = (char *)v51 - v20;
  sub_1BA4CDF6C(0, &qword_1ED3AB788, (uint64_t (*)(void))sub_1BB5FEF34, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.InProgressCodingKeys, v4);
  v51[13] = v21;
  v51[12] = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v51[11] = (char *)v51 - v22;
  sub_1BA4CDF6C(0, &qword_1ED3AB768, (uint64_t (*)(void))sub_1BB5FEF78, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.NearLiveCodingKeys, v4);
  v51[10] = v23;
  v51[9] = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v51[8] = (char *)v51 - v24;
  sub_1BA4CDF6C(0, &qword_1ED3AB758, (uint64_t (*)(void))sub_1BB5FEFBC, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.PregameCodingKeys, v4);
  v51[7] = v25;
  v51[6] = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v51[5] = (char *)v51 - v26;
  v52 = sub_1BB86C8B0();
  v56 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v51[41] = (char *)v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v51[39] = (char *)v51 - v29;
  MEMORY[0x1E0C80A78](v30);
  v51[40] = (char *)v51 - v31;
  MEMORY[0x1E0C80A78](v32);
  v51[38] = (char *)v51 - v33;
  MEMORY[0x1E0C80A78](v34);
  v51[4] = (char *)v51 - v35;
  MEMORY[0x1E0C80A78](v36);
  v51[3] = (char *)v51 - v37;
  MEMORY[0x1E0C80A78](v38);
  v51[2] = (char *)v51 - v39;
  MEMORY[0x1E0C80A78](v40);
  v51[1] = (char *)v51 - v41;
  MEMORY[0x1E0C80A78](v42);
  v51[0] = (char *)v51 - v43;
  MEMORY[0x1E0C80A78](v44);
  MEMORY[0x1E0C80A78](v45);
  MEMORY[0x1E0C80A78](v46);
  sub_1BA4CDF6C(0, &qword_1ED3AB730, (uint64_t (*)(void))sub_1BB5FF000, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.CodingKeys, v4);
  v55 = v47;
  v53 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)v51 - v48;
  v50 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB5FF000();
  v54 = v49;
  sub_1BB8746C8();
  __asm { BR              X10 }
}

uint64_t sub_1BB5FBAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BB5FACF0();
  v2 = swift_projectBox();
  v3 = *(_QWORD *)(v1 - 104);
  v4 = *(_QWORD *)(v1 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v4);
  *(_BYTE *)(v1 - 95) = 0;
  sub_1BB5FEFBC();
  v5 = *(_QWORD *)(v1 - 440);
  v7 = *(_QWORD *)(v1 - 128);
  v6 = *(_QWORD *)(v1 - 120);
  sub_1BB874110();
  sub_1BA629A0C((unint64_t *)&unk_1ED3B0510, MEMORY[0x1E0CB0890]);
  v8 = *(_QWORD *)(v1 - 424);
  sub_1BB8741AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 432) + 8))(v5, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v7, v6);
}

void sub_1BB5FC110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  sub_1BB5FAC8C();
  v2 = v1;
  v3 = swift_projectBox();
  v4 = v3 + *(int *)(v2 + 48);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 104) + 16);
  v6 = *(_QWORD *)(v0 - 176);
  v7 = *(_QWORD *)(v0 - 144);
  v5(v6, v3, v7);
  v5(*(_QWORD *)(v0 - 160), v4, v7);
  *(_BYTE *)(v0 - 69) = 8;
  sub_1BB5FED9C();
  v8 = *(_QWORD *)(v0 - 224);
  sub_1BB874110();
  *(_BYTE *)(v0 - 70) = 0;
  sub_1BA629A0C((unint64_t *)&unk_1ED3B0510, MEMORY[0x1E0CB0890]);
  v9 = *(_QWORD *)(v0 - 208);
  v10 = *(_QWORD *)(v0 - 112);
  sub_1BB8741AC();
  if (v10)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 216) + 8))(v8, v9);
    v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 104) + 8);
    v11(*(_QWORD *)(v0 - 160), v7);
    v11(v6, v7);
  }
  else
  {
    *(_BYTE *)(v0 - 71) = 1;
    v12 = *(_QWORD *)(v0 - 160);
    sub_1BB8741AC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 216) + 8))(v8, v9);
    v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 104) + 8);
    v13(v12, v7);
    v13(*(_QWORD *)(v0 - 176), v7);
  }
  JUMPOUT(0x1BB5FC0E8);
}

uint64_t SportsDataVisualizationEventStatus.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD v41[36];
  uint64_t v42;
  uint64_t v43;

  v41[29] = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BA4CDF6C(0, &qword_1ED3AB528, (uint64_t (*)(void))sub_1BB5FED14, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.UnknownCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v41[12] = v4;
  v41[35] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v41[34] = (char *)v41 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3AB518, (uint64_t (*)(void))sub_1BB5FED58, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.ForfeitCodingKeys, v3);
  v41[13] = v6;
  v41[23] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41[33] = (char *)v41 - v7;
  sub_1BA4CDF6C(0, &qword_1ED3AB508, (uint64_t (*)(void))sub_1BB5FED9C, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.FinalCodingKeys, v3);
  v41[15] = v8;
  v41[14] = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v41[32] = (char *)v41 - v9;
  sub_1BA4CDF6C(0, &qword_1ED3AB510, (uint64_t (*)(void))sub_1BB5FEDE0, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.DelayedCodingKeys, v3);
  v41[11] = v10;
  v41[22] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v41[27] = (char *)v41 - v11;
  sub_1BA4CDF6C(0, &qword_1ED3AB538, (uint64_t (*)(void))sub_1BB5FEE24, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.CancelledCodingKeys, v3);
  v41[10] = v12;
  v41[21] = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v41[31] = (char *)v41 - v13;
  sub_1BA4CDF6C(0, &qword_1ED3AB548, (uint64_t (*)(void))sub_1BB5FEE68, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.SuspendedCodingKeys, v3);
  v41[9] = v14;
  v41[20] = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v41[28] = (char *)v41 - v15;
  sub_1BA4CDF6C(0, &qword_1ED3AB540, (uint64_t (*)(void))sub_1BB5FEEAC, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.PostponedCodingKeys, v3);
  v41[8] = v16;
  v41[19] = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v41[30] = (char *)v41 - v17;
  sub_1BA4CDF6C(0, &qword_1ED3AB500, (uint64_t (*)(void))sub_1BB5FEEF0, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.BreakCodingKeys, v3);
  v41[7] = v18;
  v41[18] = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v41[26] = (char *)v41 - v19;
  sub_1BA4CDF6C(0, &qword_1ED3AB550, (uint64_t (*)(void))sub_1BB5FEF34, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.InProgressCodingKeys, v3);
  v41[6] = v20;
  v41[17] = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v41[25] = (char *)v41 - v21;
  sub_1BA4CDF6C(0, &qword_1ED3AB530, (uint64_t (*)(void))sub_1BB5FEF78, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.NearLiveCodingKeys, v3);
  v41[5] = v22;
  v41[16] = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v41[24] = (char *)v41 - v23;
  sub_1BA4CDF6C(0, &qword_1ED3AB520, (uint64_t (*)(void))sub_1BB5FEFBC, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.PregameCodingKeys, v3);
  v41[4] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v41 - v26;
  sub_1BA4CDF6C(0, &qword_1ED3AB4F8, (uint64_t (*)(void))sub_1BB5FF000, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.CodingKeys, v3);
  v29 = v28;
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = *(_QWORD *)(a1 + 24);
  v42 = a1;
  v32 = (_QWORD *)a1;
  v34 = (char *)v41 - v33;
  __swift_project_boxed_opaque_existential_1(v32, v31);
  sub_1BB5FF000();
  v35 = v43;
  sub_1BB87468C();
  if (!v35)
  {
    v41[2] = v27;
    v41[1] = v25;
    v41[3] = 0;
    v43 = v30;
    v36 = sub_1BB8740EC();
    if (*(_QWORD *)(v36 + 16) == 1)
      __asm { BR              X10 }
    v37 = sub_1BB873D68();
    swift_allocError();
    v39 = v38;
    sub_1BA909FB4();
    *v39 = &type metadata for SportsDataVisualizationEventStatus;
    sub_1BB874008();
    sub_1BB873D38();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x1E0DEC450], v37);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v29);
  }
  return __swift_destroy_boxed_opaque_existential_1(v42);
}

void sub_1BB5FD054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 - 69) = 8;
  sub_1BB5FED9C();
  v4 = *(_QWORD *)(v3 - 376);
  sub_1BB873FFC();
  if (!v4)
  {
    *(_QWORD *)(v3 - 128) = v0;
    *(_QWORD *)(v3 - 120) = v1;
    sub_1BB5FAC8C();
    v5 = swift_allocBox();
    sub_1BB86C8B0();
    *(_BYTE *)(v3 - 70) = 0;
    sub_1BA629A0C(&qword_1ED3B0528, MEMORY[0x1E0CB08C0]);
    v6 = v2;
    v7 = *(_QWORD *)(v3 - 280);
    sub_1BB8740D4();
    *(_BYTE *)(v3 - 71) = 1;
    sub_1BB8740D4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 288) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 104) + 8))(*(_QWORD *)(v3 - 128), *(_QWORD *)(v3 - 120));
    **(_QWORD **)(v3 - 168) = v5 | 0x8000000000000000;
    JUMPOUT(0x1BB5FD02CLL);
  }
  JUMPOUT(0x1BB5FD1BCLL);
}

void sub_1BB5FD12C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v4 - 66) = 9;
  sub_1BB5FED58();
  v6 = *(_QWORD *)(v4 - 376);
  sub_1BB873FFC();
  if (v6)
    JUMPOUT(0x1BB5FD170);
  *(_QWORD *)(v4 - 128) = v1;
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 144) = a1;
  sub_1BB5FAC8C();
  swift_allocBox();
  sub_1BB86C8B0();
  *(_BYTE *)(v4 - 67) = 0;
  sub_1BA629A0C(&qword_1ED3B0528, MEMORY[0x1E0CB08C0]);
  v7 = *(_QWORD *)(v4 - 296);
  sub_1BB8740D4();
  *(_BYTE *)(v4 - 68) = 1;
  sub_1BB8740D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 216) + 8))(v3, v7);
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 104) + 8))(*(_QWORD *)(v4 - 128), *(_QWORD *)(v4 - 120));
  JUMPOUT(0x1BB5FD610);
}

void sub_1BB5FD178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 - 65) = 10;
  sub_1BB5FED14();
  v6 = *(_QWORD *)(v5 - 376);
  sub_1BB873FFC();
  if (v6)
    JUMPOUT(0x1BB5FD1BCLL);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v0, *(_QWORD *)(v5 - 304));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  **(_QWORD **)(v5 - 168) = 0xA000000000000000;
  JUMPOUT(0x1BB5FD02CLL);
}

uint64_t sub_1BB5FD620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return SportsDataVisualizationEventStatus.init(from:)(a1, a2);
}

void sub_1BB5FD634(_QWORD *a1)
{
  SportsDataVisualizationEventStatus.encode(to:)(a1);
}

void SportsDataVisualizationEventStatus.description.getter()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BB5FD728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  sub_1BB5FACF0();
  v5 = swift_projectBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v0);
  *(_QWORD *)(v4 - 96) = 0x28656D6167657270;
  *(_QWORD *)(v4 - 88) = 0xE800000000000000;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v2, 1, 1, v0);
  sub_1BB5FDF8C(v1, v2, 32);
  sub_1BA76D750(v2);
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  v8 = *(_QWORD *)(v4 - 96);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return v8;
}

void SportsDataVisualizationEventStatus.debugDescription.getter()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BB5FDBD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1BB5FACF0();
  v5 = swift_projectBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v0);
  *(_QWORD *)(v4 - 96) = 0xA656D6167657250;
  *(_QWORD *)(v4 - 88) = 0xE800000000000000;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v2, 1, 1, v0);
  sub_1BB5FDF8C(v1, v2, 10);
  sub_1BA76D750(v2);
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v4 - 96);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return v7;
}

uint64_t sub_1BB5FDF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  void *v13;
  uint64_t result;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;

  v27[1] = a3;
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3AC0F0 != -1)
    swift_once();
  v7 = (void *)qword_1ED3AC0E0;
  v8 = (void *)sub_1BB86C808();
  v9 = objc_msgSend(v7, sel_stringFromDate_, v8);

  sub_1BB8729A0();
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12((char *)a2, 1, v10) != 1)
  {
    v13 = (void *)qword_1ED3AC0E0;
    sub_1BA76D70C(a2, (uint64_t)v6);
    result = v12(v6, 1, v10);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }
    v15 = (void *)sub_1BB86C808();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
    v16 = objc_msgSend(v13, sel_stringFromDate_, v15);

    sub_1BB8729A0();
  }
  if (qword_1ED3AC1E8 != -1)
    swift_once();
  v17 = (void *)qword_1ED3AC1D8;
  v18 = (void *)sub_1BB86C808();
  v19 = objc_msgSend(v17, sel_stringFromDate_, v18);

  v20 = sub_1BB8729A0();
  v22 = v21;

  v28 = v20;
  v29 = v22;
  sub_1BB872AFC(v23);
  sub_1BB872AFC(v24);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v25);
  sub_1BB872AFC(v26);
  swift_bridgeObjectRelease();
  return v28;
}

id sub_1BB5FE1FC(uint64_t a1)
{
  return sub_1BB5FE224(a1, 2, 0, &qword_1ED3AC1D8);
}

id sub_1BB5FE210(uint64_t a1)
{
  return sub_1BB5FE224(a1, 0, 1, &qword_1ED3AC0E0);
}

id sub_1BB5FE224(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v7;
  id result;

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v7, sel_setDateStyle_, a2);
  result = objc_msgSend(v7, sel_setTimeStyle_, a3);
  *a4 = v7;
  return result;
}

void _s8NewsFeed34SportsDataVisualizationEventStatusO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[8];

  v34[7] = a2;
  v3 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v34[6] = (char *)v34 - v13;
  MEMORY[0x1E0C80A78](v14);
  v34[5] = (char *)v34 - v15;
  MEMORY[0x1E0C80A78](v16);
  v34[4] = (char *)v34 - v17;
  MEMORY[0x1E0C80A78](v18);
  v34[3] = (char *)v34 - v19;
  MEMORY[0x1E0C80A78](v20);
  v34[2] = (char *)v34 - v21;
  MEMORY[0x1E0C80A78](v22);
  v34[1] = (char *)v34 - v23;
  MEMORY[0x1E0C80A78](v24);
  v34[0] = (char *)v34 - v25;
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78](v29);
  MEMORY[0x1E0C80A78](v30);
  MEMORY[0x1E0C80A78](v31);
  MEMORY[0x1E0C80A78](v32);
  MEMORY[0x1E0C80A78](v33);
  __asm { BR              X10 }
}

uint64_t sub_1BB5FE5B8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  char v10;
  void (*v11)(uint64_t, uint64_t);

  if (v2 >> 60)
  {
    v10 = 0;
  }
  else
  {
    v6 = v1;
    sub_1BB5FACF0();
    v7 = swift_projectBox();
    v8 = swift_projectBox();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v9(v4, v7, a1);
    v9(v3, v8, a1);
    swift_retain();
    swift_retain();
    v10 = sub_1BB86C868();
    v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v11(v3, a1);
    v11(v4, a1);
    swift_release();
    swift_release();
  }
  return v10 & 1;
}

unint64_t sub_1BB5FED14()
{
  unint64_t result;

  result = qword_1ED3A9EE8;
  if (!qword_1ED3A9EE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932EFC, &type metadata for SportsDataVisualizationEventStatus.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9EE8);
  }
  return result;
}

unint64_t sub_1BB5FED58()
{
  unint64_t result;

  result = qword_1ED3A9EB8;
  if (!qword_1ED3A9EB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932EAC, &type metadata for SportsDataVisualizationEventStatus.ForfeitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9EB8);
  }
  return result;
}

unint64_t sub_1BB5FED9C()
{
  unint64_t result;

  result = qword_1ED3A9E88;
  if (!qword_1ED3A9E88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932E5C, &type metadata for SportsDataVisualizationEventStatus.FinalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E88);
  }
  return result;
}

unint64_t sub_1BB5FEDE0()
{
  unint64_t result;

  result = qword_1ED3A9EA0;
  if (!qword_1ED3A9EA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932E0C, &type metadata for SportsDataVisualizationEventStatus.DelayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9EA0);
  }
  return result;
}

unint64_t sub_1BB5FEE24()
{
  unint64_t result;

  result = qword_1ED3A9F18;
  if (!qword_1ED3A9F18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932DBC, &type metadata for SportsDataVisualizationEventStatus.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F18);
  }
  return result;
}

unint64_t sub_1BB5FEE68()
{
  unint64_t result;

  result = qword_1ED3A9F48;
  if (!qword_1ED3A9F48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932D6C, &type metadata for SportsDataVisualizationEventStatus.SuspendedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F48);
  }
  return result;
}

unint64_t sub_1BB5FEEAC()
{
  unint64_t result;

  result = qword_1ED3A9F30;
  if (!qword_1ED3A9F30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932D1C, &type metadata for SportsDataVisualizationEventStatus.PostponedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F30);
  }
  return result;
}

unint64_t sub_1BB5FEEF0()
{
  unint64_t result;

  result = qword_1ED3A9E70;
  if (!qword_1ED3A9E70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932CCC, &type metadata for SportsDataVisualizationEventStatus.BreakCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E70);
  }
  return result;
}

unint64_t sub_1BB5FEF34()
{
  unint64_t result;

  result = qword_1ED3A9F60;
  if (!qword_1ED3A9F60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932C7C, &type metadata for SportsDataVisualizationEventStatus.InProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F60);
  }
  return result;
}

unint64_t sub_1BB5FEF78()
{
  unint64_t result;

  result = qword_1ED3A9F00;
  if (!qword_1ED3A9F00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932C2C, &type metadata for SportsDataVisualizationEventStatus.NearLiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F00);
  }
  return result;
}

unint64_t sub_1BB5FEFBC()
{
  unint64_t result;

  result = qword_1ED3A9ED0;
  if (!qword_1ED3A9ED0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932BDC, &type metadata for SportsDataVisualizationEventStatus.PregameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9ED0);
  }
  return result;
}

unint64_t sub_1BB5FF000()
{
  unint64_t result;

  result = qword_1ED3A9E58;
  if (!qword_1ED3A9E58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932B8C, &type metadata for SportsDataVisualizationEventStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E58);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SportsDataVisualizationEventStatus(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x76 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 118);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x75)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationEventStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x75)
  {
    *(_QWORD *)result = a2 - 118;
    if (a3 >= 0x76)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x76)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BB5FF0E4(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 60;
  if (v1 <= 9)
    return v1;
  else
    return (*a1 >> 3) + 10;
}

unint64_t *sub_1BB5FF100(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 0xA)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 60;
  }
  else
  {
    v2 = 8 * (a2 - 10);
    v3 = 0xA000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus()
{
  return &type metadata for SportsDataVisualizationEventStatus;
}

uint64_t type metadata accessor for EventStatusFormatter()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationEventStatus.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BB5FF1A8 + 4 * byte_1BB9320BF[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BB5FF1DC + 4 * byte_1BB9320BA[v4]))();
}

uint64_t sub_1BB5FF1DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5FF1E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB5FF1ECLL);
  return result;
}

uint64_t sub_1BB5FF1F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB5FF200);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BB5FF204(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5FF20C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.CodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.PregameCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.PregameCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.NearLiveCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.NearLiveCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.InProgressCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.InProgressCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.BreakCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.BreakCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.PostponedCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.PostponedCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.SuspendedCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.SuspendedCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.CancelledCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.CancelledCodingKeys;
}

uint64_t _s8NewsFeed34SportsDataVisualizationEventStatusO17PregameCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB5FF2DC + 4 * byte_1BB9320C4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB5FF2FC + 4 * byte_1BB9320C9[v4]))();
}

_BYTE *sub_1BB5FF2DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB5FF2FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB5FF304(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB5FF30C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB5FF314(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB5FF31C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.DelayedCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.DelayedCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.FinalCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.FinalCodingKeys;
}

uint64_t _s8NewsFeed34SportsDataVisualizationEventStatusO15FinalCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB5FF398 + 4 * byte_1BB9320D3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB5FF3CC + 4 * byte_1BB9320CE[v4]))();
}

uint64_t sub_1BB5FF3CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5FF3D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB5FF3DCLL);
  return result;
}

uint64_t sub_1BB5FF3E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB5FF3F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB5FF3F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB5FF3FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.ForfeitCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.ForfeitCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.UnknownCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.UnknownCodingKeys;
}

unint64_t sub_1BB5FF42C()
{
  unint64_t result;

  result = qword_1EF2C8CC8;
  if (!qword_1EF2C8CC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932434, &type metadata for SportsDataVisualizationEventStatus.ForfeitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8CC8);
  }
  return result;
}

unint64_t sub_1BB5FF474()
{
  unint64_t result;

  result = qword_1EF2C8CD0;
  if (!qword_1EF2C8CD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9324EC, &type metadata for SportsDataVisualizationEventStatus.FinalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8CD0);
  }
  return result;
}

unint64_t sub_1BB5FF4BC()
{
  unint64_t result;

  result = qword_1EF2C8CD8;
  if (!qword_1EF2C8CD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9325A4, &type metadata for SportsDataVisualizationEventStatus.DelayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8CD8);
  }
  return result;
}

unint64_t sub_1BB5FF504()
{
  unint64_t result;

  result = qword_1EF2C8CE0;
  if (!qword_1EF2C8CE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93265C, &type metadata for SportsDataVisualizationEventStatus.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8CE0);
  }
  return result;
}

unint64_t sub_1BB5FF54C()
{
  unint64_t result;

  result = qword_1EF2C8CE8;
  if (!qword_1EF2C8CE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932714, &type metadata for SportsDataVisualizationEventStatus.SuspendedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8CE8);
  }
  return result;
}

unint64_t sub_1BB5FF594()
{
  unint64_t result;

  result = qword_1EF2C8CF0;
  if (!qword_1EF2C8CF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9327CC, &type metadata for SportsDataVisualizationEventStatus.PostponedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8CF0);
  }
  return result;
}

unint64_t sub_1BB5FF5DC()
{
  unint64_t result;

  result = qword_1EF2C8CF8;
  if (!qword_1EF2C8CF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932884, &type metadata for SportsDataVisualizationEventStatus.BreakCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8CF8);
  }
  return result;
}

unint64_t sub_1BB5FF624()
{
  unint64_t result;

  result = qword_1EF2C8D00;
  if (!qword_1EF2C8D00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93293C, &type metadata for SportsDataVisualizationEventStatus.InProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8D00);
  }
  return result;
}

unint64_t sub_1BB5FF66C()
{
  unint64_t result;

  result = qword_1EF2C8D08;
  if (!qword_1EF2C8D08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9329F4, &type metadata for SportsDataVisualizationEventStatus.NearLiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8D08);
  }
  return result;
}

unint64_t sub_1BB5FF6B4()
{
  unint64_t result;

  result = qword_1EF2C8D10;
  if (!qword_1EF2C8D10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932AAC, &type metadata for SportsDataVisualizationEventStatus.PregameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8D10);
  }
  return result;
}

unint64_t sub_1BB5FF6FC()
{
  unint64_t result;

  result = qword_1EF2C8D18;
  if (!qword_1EF2C8D18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932B64, &type metadata for SportsDataVisualizationEventStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8D18);
  }
  return result;
}

unint64_t sub_1BB5FF744()
{
  unint64_t result;

  result = qword_1ED3A9E68;
  if (!qword_1ED3A9E68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932AD4, &type metadata for SportsDataVisualizationEventStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E68);
  }
  return result;
}

unint64_t sub_1BB5FF78C()
{
  unint64_t result;

  result = qword_1ED3A9E60;
  if (!qword_1ED3A9E60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932AFC, &type metadata for SportsDataVisualizationEventStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E60);
  }
  return result;
}

unint64_t sub_1BB5FF7D4()
{
  unint64_t result;

  result = qword_1ED3A9EE0;
  if (!qword_1ED3A9EE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932A1C, &type metadata for SportsDataVisualizationEventStatus.PregameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9EE0);
  }
  return result;
}

unint64_t sub_1BB5FF81C()
{
  unint64_t result;

  result = qword_1ED3A9ED8;
  if (!qword_1ED3A9ED8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932A44, &type metadata for SportsDataVisualizationEventStatus.PregameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9ED8);
  }
  return result;
}

unint64_t sub_1BB5FF864()
{
  unint64_t result;

  result = qword_1ED3A9F10;
  if (!qword_1ED3A9F10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932964, &type metadata for SportsDataVisualizationEventStatus.NearLiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F10);
  }
  return result;
}

unint64_t sub_1BB5FF8AC()
{
  unint64_t result;

  result = qword_1ED3A9F08;
  if (!qword_1ED3A9F08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93298C, &type metadata for SportsDataVisualizationEventStatus.NearLiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F08);
  }
  return result;
}

unint64_t sub_1BB5FF8F4()
{
  unint64_t result;

  result = qword_1ED3A9F70;
  if (!qword_1ED3A9F70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9328AC, &type metadata for SportsDataVisualizationEventStatus.InProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F70);
  }
  return result;
}

unint64_t sub_1BB5FF93C()
{
  unint64_t result;

  result = qword_1ED3A9F68;
  if (!qword_1ED3A9F68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9328D4, &type metadata for SportsDataVisualizationEventStatus.InProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F68);
  }
  return result;
}

unint64_t sub_1BB5FF984()
{
  unint64_t result;

  result = qword_1ED3A9E80;
  if (!qword_1ED3A9E80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9327F4, &type metadata for SportsDataVisualizationEventStatus.BreakCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E80);
  }
  return result;
}

unint64_t sub_1BB5FF9CC()
{
  unint64_t result;

  result = qword_1ED3A9E78;
  if (!qword_1ED3A9E78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93281C, &type metadata for SportsDataVisualizationEventStatus.BreakCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E78);
  }
  return result;
}

unint64_t sub_1BB5FFA14()
{
  unint64_t result;

  result = qword_1ED3A9F40;
  if (!qword_1ED3A9F40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93273C, &type metadata for SportsDataVisualizationEventStatus.PostponedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F40);
  }
  return result;
}

unint64_t sub_1BB5FFA5C()
{
  unint64_t result;

  result = qword_1ED3A9F38;
  if (!qword_1ED3A9F38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932764, &type metadata for SportsDataVisualizationEventStatus.PostponedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F38);
  }
  return result;
}

unint64_t sub_1BB5FFAA4()
{
  unint64_t result;

  result = qword_1ED3A9F58;
  if (!qword_1ED3A9F58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932684, &type metadata for SportsDataVisualizationEventStatus.SuspendedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F58);
  }
  return result;
}

unint64_t sub_1BB5FFAEC()
{
  unint64_t result;

  result = qword_1ED3A9F50;
  if (!qword_1ED3A9F50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9326AC, &type metadata for SportsDataVisualizationEventStatus.SuspendedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F50);
  }
  return result;
}

unint64_t sub_1BB5FFB34()
{
  unint64_t result;

  result = qword_1ED3A9F28;
  if (!qword_1ED3A9F28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9325CC, &type metadata for SportsDataVisualizationEventStatus.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F28);
  }
  return result;
}

unint64_t sub_1BB5FFB7C()
{
  unint64_t result;

  result = qword_1ED3A9F20;
  if (!qword_1ED3A9F20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9325F4, &type metadata for SportsDataVisualizationEventStatus.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F20);
  }
  return result;
}

unint64_t sub_1BB5FFBC4()
{
  unint64_t result;

  result = qword_1ED3A9EB0;
  if (!qword_1ED3A9EB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932514, &type metadata for SportsDataVisualizationEventStatus.DelayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9EB0);
  }
  return result;
}

unint64_t sub_1BB5FFC0C()
{
  unint64_t result;

  result = qword_1ED3A9EA8;
  if (!qword_1ED3A9EA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93253C, &type metadata for SportsDataVisualizationEventStatus.DelayedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9EA8);
  }
  return result;
}

unint64_t sub_1BB5FFC54()
{
  unint64_t result;

  result = qword_1ED3A9E98;
  if (!qword_1ED3A9E98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93245C, &type metadata for SportsDataVisualizationEventStatus.FinalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E98);
  }
  return result;
}

unint64_t sub_1BB5FFC9C()
{
  unint64_t result;

  result = qword_1ED3A9E90;
  if (!qword_1ED3A9E90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932484, &type metadata for SportsDataVisualizationEventStatus.FinalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E90);
  }
  return result;
}

unint64_t sub_1BB5FFCE4()
{
  unint64_t result;

  result = qword_1ED3A9EC8;
  if (!qword_1ED3A9EC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9323A4, &type metadata for SportsDataVisualizationEventStatus.ForfeitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9EC8);
  }
  return result;
}

unint64_t sub_1BB5FFD2C()
{
  unint64_t result;

  result = qword_1ED3A9EC0;
  if (!qword_1ED3A9EC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9323CC, &type metadata for SportsDataVisualizationEventStatus.ForfeitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9EC0);
  }
  return result;
}

unint64_t sub_1BB5FFD74()
{
  unint64_t result;

  result = qword_1ED3A9EF8;
  if (!qword_1ED3A9EF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB932354, &type metadata for SportsDataVisualizationEventStatus.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9EF8);
  }
  return result;
}

unint64_t sub_1BB5FFDBC()
{
  unint64_t result;

  result = qword_1ED3A9EF0;
  if (!qword_1ED3A9EF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93237C, &type metadata for SportsDataVisualizationEventStatus.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9EF0);
  }
  return result;
}

uint64_t sub_1BB5FFE00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D6167657270 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576694C7261656ELL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6572676F72506E69 && a2 == 0xEA00000000007373 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B61657262 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656E6F7074736F70 && a2 == 0xE900000000000064 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65646E6570737573 && a2 == 0xE900000000000064 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x646579616C6564 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6C616E6966 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74696566726F66 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_1BB60028C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t FormatTypeCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_1BA5223E0(0, (unint64_t *)&qword_1ED3B3798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - v8;
  v10 = *(_QWORD *)(v3 + 8);
  if (!*(_QWORD *)(v10 + 16))
  {
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 1, 1, v18);
LABEL_7:
    result = sub_1BB601528((uint64_t)v9);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_BYTE *)(a3 + 80) = 0;
    return result;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1BA6E35A8(a1, a2);
  if ((v12 & 1) != 0)
  {
    v13 = v11;
    v14 = *(_QWORD *)(v10 + 56);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v16 = v15;
    v17 = *(_QWORD *)(v15 - 8);
    sub_1BA7A2A5C(v14 + *(_QWORD *)(v17 + 72) * v13, (uint64_t)v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
  }
  else
  {
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v16 = v19;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
  }
  swift_bridgeObjectRelease();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v9, 1, v16) == 1)
    goto LABEL_7;
  v21 = *(_QWORD *)v9;
  v22 = *((_QWORD *)v9 + 1);
  v23 = *((_QWORD *)v9 + 3);
  v34 = *((_QWORD *)v9 + 2);
  v35 = v21;
  v33 = v23;
  v24 = *((_QWORD *)v9 + 4);
  v25 = *((_QWORD *)v9 + 5);
  v26 = *((_QWORD *)v9 + 6);
  v27 = *((_QWORD *)v9 + 7);
  v28 = *((_QWORD *)v9 + 8);
  v29 = *((_QWORD *)v9 + 9);
  v30 = v9[80];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA709DE8(v24, v25, v26, v27, v28, v29, v30);
  result = sub_1BA7A508C((uint64_t)v9);
  *(_QWORD *)a3 = v35;
  *(_QWORD *)(a3 + 8) = v22;
  v31 = v33;
  *(_QWORD *)(a3 + 16) = v34;
  *(_QWORD *)(a3 + 24) = v31;
  *(_QWORD *)(a3 + 32) = v24;
  *(_QWORD *)(a3 + 40) = v25;
  *(_QWORD *)(a3 + 48) = v26;
  *(_QWORD *)(a3 + 56) = v27;
  *(_QWORD *)(a3 + 64) = v28;
  *(_QWORD *)(a3 + 72) = v29;
  *(_BYTE *)(a3 + 80) = v30;
  return result;
}

NewsFeed::FormatTypeCollection __swiftcall FormatTypeCollection.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  NewsFeed::FormatTypeCollection result;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = (void *)sub_1BA5BC760(MEMORY[0x1E0DEE9D8]);
  *v1 = v2;
  v1[1] = v3;
  result.typesByName._rawValue = v4;
  result.types._rawValue = v3;
  return result;
}

uint64_t sub_1BB600640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int isUniquelyReferenced_nonNull_native;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  char *v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  unint64_t v107;
  uint64_t v108;
  _BOOL8 v109;
  uint64_t v110;
  char v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned __int8 v134;
  uint64_t result;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned __int8 v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;

  v171 = a2;
  v163 = a3;
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v180 = (char *)&v162 - v8;
  v177 = sub_1BB86EB84();
  v186 = *(_QWORD *)(v177 - 8);
  MEMORY[0x1E0C80A78](v177);
  v176 = (char *)&v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v185 = (uint64_t)&v162 - v11;
  v175 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v175);
  v174 = (char *)&v162 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5223E0(0, (unint64_t *)&qword_1ED3B3798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v162 - v17;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v188 = v19;
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v173 = (uint64_t)&v162 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v172 = (uint64_t *)((char *)&v162 - v23);
  MEMORY[0x1E0C80A78](v24);
  v164 = (uint64_t)&v162 - v25;
  MEMORY[0x1E0C80A78](v26);
  v196 = (uint64_t)&v162 - v27;
  MEMORY[0x1E0C80A78](v28);
  v194 = (uint64_t)&v162 - v29;
  MEMORY[0x1E0C80A78](v30);
  v197 = (uint64_t)&v162 - v31;
  v32 = *(_QWORD *)(a1 + 16);
  v178 = v6;
  v187 = v20;
  v167 = a1;
  v179 = v15;
  if (v32)
  {
    v33 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v34 = *(_QWORD *)(v20 + 72);
    swift_bridgeObjectRetain();
    v35 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v195 = v18;
    while (1)
    {
      sub_1BA7A2A5C(v33, v197);
      if (v35[2])
      {
        v37 = *(_QWORD *)v197;
        v36 = *(_QWORD *)(v197 + 8);
        swift_bridgeObjectRetain();
        v38 = sub_1BA6E35A8(v37, v36);
        if ((v39 & 1) != 0)
        {
          sub_1BA7A2A5C(v35[7] + v38 * v34, (uint64_t)v18);
          v40 = 0;
        }
        else
        {
          v40 = 1;
        }
        v41 = v188;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, v40, 1, v188);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v41) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v137 = v194;
          sub_1BA73E4DC((uint64_t)v18, v194);
          v196 = type metadata accessor for FormatPackageError();
          sub_1BB601798();
          v168 = swift_allocError();
          v139 = v138;
          v140 = v197;
          v141 = *(_QWORD *)v197;
          v142 = *(_QWORD *)(v197 + 8);
          v143 = *(_QWORD *)(v197 + 16);
          v144 = *(_QWORD *)(v197 + 24);
          v146 = *(_QWORD *)(v197 + 32);
          v145 = *(_QWORD *)(v197 + 40);
          v148 = *(_QWORD *)(v197 + 48);
          v185 = *(_QWORD *)(v197 + 56);
          v147 = v185;
          v186 = v145;
          v149 = *(_QWORD *)(v197 + 64);
          v150 = *(_QWORD *)(v197 + 72);
          v151 = *(_QWORD *)v137;
          v187 = *(_QWORD *)(v137 + 8);
          v152 = v187;
          v154 = *(_QWORD *)(v137 + 16);
          v183 = *(_QWORD *)(v137 + 24);
          v153 = v183;
          v184 = v149;
          v156 = *(_QWORD *)(v137 + 40);
          v195 = *(char **)(v137 + 32);
          v155 = (uint64_t)v195;
          v158 = *(_QWORD *)(v137 + 56);
          v192 = *(_QWORD *)(v137 + 48);
          v157 = v192;
          v193 = v156;
          v160 = *(_QWORD *)(v137 + 72);
          v190 = *(_QWORD **)(v137 + 64);
          v159 = (uint64_t)v190;
          v191 = v158;
          v189 = v160;
          v161 = *(_BYTE *)(v197 + 80);
          LOBYTE(v138) = *(_BYTE *)(v137 + 80);
          LODWORD(v188) = v138;
          *(_QWORD *)v139 = v141;
          *(_QWORD *)(v139 + 8) = v142;
          *(_QWORD *)(v139 + 16) = v143;
          *(_QWORD *)(v139 + 24) = v144;
          *(_QWORD *)(v139 + 32) = v146;
          *(_QWORD *)(v139 + 40) = v145;
          *(_QWORD *)(v139 + 48) = v148;
          *(_QWORD *)(v139 + 56) = v147;
          *(_QWORD *)(v139 + 64) = v149;
          *(_QWORD *)(v139 + 72) = v150;
          *(_BYTE *)(v139 + 80) = v161;
          *(_DWORD *)(v139 + 81) = (_DWORD)v198;
          *(_DWORD *)(v139 + 84) = *(_DWORD *)((char *)&v198 + 3);
          *(_QWORD *)(v139 + 88) = v151;
          *(_QWORD *)(v139 + 96) = v152;
          *(_QWORD *)(v139 + 104) = v154;
          *(_QWORD *)(v139 + 112) = v153;
          *(_QWORD *)(v139 + 120) = v155;
          *(_QWORD *)(v139 + 128) = v156;
          *(_QWORD *)(v139 + 136) = v157;
          *(_QWORD *)(v139 + 144) = v158;
          *(_QWORD *)(v139 + 152) = v159;
          *(_QWORD *)(v139 + 160) = v160;
          *(_BYTE *)(v139 + 168) = v138;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA709DE8(v146, v186, v148, v185, v184, v150, v161);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA709DE8((uint64_t)v195, v193, v192, v191, (uint64_t)v190, v189, v188);
          swift_willThrow();
          sub_1BA7A508C(v137);
          sub_1BA7A508C(v140);
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v188);
      }
      sub_1BB601528((uint64_t)v18);
      v43 = *(_QWORD *)v197;
      v42 = *(_QWORD *)(v197 + 8);
      sub_1BA7A2A5C(v197, v196);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v198 = v35;
      v46 = sub_1BA6E35A8(v43, v42);
      v47 = v35[2];
      v48 = (v45 & 1) == 0;
      v49 = v47 + v48;
      if (__OFADD__(v47, v48))
      {
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      v50 = v45;
      if (v35[3] >= v49)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BA7F255C();
      }
      else
      {
        sub_1BA7A53D4(v49, isUniquelyReferenced_nonNull_native);
        v51 = sub_1BA6E35A8(v43, v42);
        if ((v50 & 1) != (v52 & 1))
          goto LABEL_61;
        v46 = v51;
      }
      v20 = v187;
      v35 = v198;
      if ((v50 & 1) != 0)
      {
        sub_1BA7A50E8(v196, v198[7] + v46 * v34);
      }
      else
      {
        v198[(v46 >> 6) + 8] |= 1 << v46;
        v53 = (uint64_t *)(v35[6] + 16 * v46);
        *v53 = v43;
        v53[1] = v42;
        sub_1BA73E4DC(v196, v35[7] + v46 * v34);
        v54 = v35[2];
        v55 = __OFADD__(v54, 1);
        v56 = v54 + 1;
        if (v55)
          goto LABEL_59;
        v35[2] = v56;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7A508C(v197);
      v33 += v34;
      --v32;
      v18 = v195;
      if (!v32)
      {
        swift_bridgeObjectRelease();
        v15 = v179;
        goto LABEL_22;
      }
    }
  }
  v35 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_22:
  v57 = v171;
  v165 = *(_QWORD *)(v171 + 16);
  if (v165)
  {
    v58 = 0;
    v166 = v171 + 32;
    while (v58 < *(_QWORD *)(v57 + 16))
    {
      v190 = v35;
      v169 = v58;
      sub_1BA4C010C(v166 + 40 * v58, (uint64_t)&v198);
      v59 = v199;
      v60 = v200;
      __swift_project_boxed_opaque_existential_1(&v198, v199);
      v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v59, v60);
      v62 = *(_QWORD *)(v61 + 16);
      v170 = v61;
      if (v62)
      {
        v63 = v61 + 56;
        while (1)
        {
          v64 = (uint64_t)v15;
          v182 = v63;
          v183 = v62;
          v66 = *(_QWORD *)(v63 - 24);
          v65 = *(_QWORD *)(v63 - 16);
          v67 = *(_QWORD *)v63;
          v184 = *(_QWORD *)(v63 - 8);
          v68 = *(_QWORD *)(v63 + 8);
          v69 = *(_QWORD *)(v63 + 16);
          v71 = *(_QWORD *)(v63 + 24);
          v70 = *(_QWORD *)(v63 + 32);
          v72 = *(_QWORD *)(v63 + 40);
          v197 = *(_QWORD *)(v63 + 48);
          v73 = *(unsigned __int8 *)(v63 + 56);
          v74 = (uint64_t)v190;
          v75 = v190[2];
          v189 = v66;
          LODWORD(v196) = v73;
          v194 = v70;
          v195 = (char *)v72;
          v192 = v68;
          v193 = v69;
          v191 = v67;
          if (v75)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v181 = v71;
            sub_1BA709DE8(v68, v69, v71, v70, v72, v197, v73);
            swift_bridgeObjectRetain();
            v76 = sub_1BA6E35A8(v66, v65);
            if ((v77 & 1) != 0)
            {
              v78 = v187;
              sub_1BA7A2A5C(*(_QWORD *)(v74 + 56) + *(_QWORD *)(v187 + 72) * v76, v64);
              v79 = 0;
              v80 = (uint64_t)v180;
            }
            else
            {
              v79 = 1;
              v80 = (uint64_t)v180;
              v78 = v187;
            }
            v83 = v188;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v64, v79, 1, v188);
            swift_bridgeObjectRelease();
            v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v64, 1, v83);
            v81 = v194;
            v72 = (uint64_t)v195;
            v71 = v181;
            v68 = v192;
            v82 = v193;
            v85 = v191;
            if (v84 != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v120 = v64;
              v121 = v164;
              sub_1BA73E4DC(v120, v164);
              v188 = type metadata accessor for FormatPackageError();
              sub_1BB601798();
              v168 = swift_allocError();
              *(_QWORD *)v122 = v189;
              *(_QWORD *)(v122 + 8) = v65;
              *(_QWORD *)(v122 + 16) = v184;
              *(_QWORD *)(v122 + 24) = v85;
              *(_QWORD *)(v122 + 32) = v68;
              *(_QWORD *)(v122 + 40) = v82;
              *(_QWORD *)(v122 + 48) = v71;
              *(_QWORD *)(v122 + 56) = v81;
              v123 = v197;
              *(_QWORD *)(v122 + 64) = v72;
              *(_QWORD *)(v122 + 72) = v123;
              *(_BYTE *)(v122 + 80) = v196;
              v124 = *(_QWORD *)v121;
              v125 = *(_QWORD *)(v121 + 8);
              v126 = *(_QWORD *)(v121 + 16);
              v127 = *(_QWORD *)(v121 + 24);
              v128 = *(_QWORD *)(v121 + 32);
              v129 = *(_QWORD *)(v121 + 40);
              v130 = *(_QWORD *)(v121 + 48);
              v131 = *(_QWORD *)(v121 + 56);
              v133 = *(_QWORD *)(v121 + 64);
              v196 = *(_QWORD *)(v121 + 72);
              v132 = v196;
              v134 = *(_BYTE *)(v121 + 80);
              LODWORD(v197) = v134;
              *(_QWORD *)(v122 + 88) = v124;
              *(_QWORD *)(v122 + 96) = v125;
              *(_QWORD *)(v122 + 104) = v126;
              *(_QWORD *)(v122 + 112) = v127;
              *(_QWORD *)(v122 + 120) = v128;
              *(_QWORD *)(v122 + 128) = v129;
              *(_QWORD *)(v122 + 136) = v130;
              *(_QWORD *)(v122 + 144) = v131;
              *(_QWORD *)(v122 + 152) = v133;
              *(_QWORD *)(v122 + 160) = v132;
              *(_BYTE *)(v122 + 168) = v134;
              sub_1BA4C010C((uint64_t)&v198, v122 + 176);
              swift_storeEnumTagMultiPayload();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1BA709DE8(v128, v129, v130, v131, v133, v196, v197);
              swift_willThrow();
              sub_1BA7A508C(v121);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v198);
              return swift_bridgeObjectRelease();
            }
          }
          else
          {
            v81 = v70;
            v82 = v69;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v187 + 56))(v64, 1, 1, v188);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA709DE8(v68, v69, v71, v70, v72, v197, v196);
            v80 = (uint64_t)v180;
          }
          sub_1BB601528(v64);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA709DE8(v68, v82, v71, v81, v72, v197, v196);
          swift_bridgeObjectRetain();
          sub_1BB86EB9C();
          v86 = v186;
          v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v186 + 48);
          v88 = v177;
          if (v87(v80, 1, v177) == 1)
          {
            sub_1BB86EB54();
            sub_1BA6BF694(v80);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 32))(v185, v80, v88);
          }
          v89 = (uint64_t)v178;
          v90 = (uint64_t)v190;
          sub_1BB86EB9C();
          if (v87(v89, 1, v88) == 1)
          {
            v91 = v176;
            sub_1BB86EB48();
            sub_1BA6BF694(v89);
            v92 = v186;
          }
          else
          {
            v92 = v186;
            v91 = v176;
            (*(void (**)(char *, uint64_t, uint64_t))(v186 + 32))(v176, v89, v88);
          }
          v93 = v184;
          v94 = (int *)v175;
          v95 = v174;
          sub_1BB86EB9C();
          *(_QWORD *)v95 = 0;
          *((_QWORD *)v95 + 1) = 0;
          v96 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 32);
          v96(&v95[v94[5]], v185, v88);
          v96(&v95[v94[6]], (uint64_t)v91, v88);
          v97 = MEMORY[0x1E0DEE9E8];
          *(_QWORD *)&v95[v94[8]] = MEMORY[0x1E0DEE9E8];
          *(_QWORD *)&v95[v94[9]] = v97;
          *(_QWORD *)&v95[v94[10]] = v97;
          *(_QWORD *)&v95[v94[11]] = v97;
          v98 = (uint64_t)v172;
          v99 = v189;
          *v172 = v189;
          *(_QWORD *)(v98 + 8) = v65;
          v100 = v191;
          *(_QWORD *)(v98 + 16) = v93;
          *(_QWORD *)(v98 + 24) = v100;
          v101 = v193;
          *(_QWORD *)(v98 + 32) = v192;
          *(_QWORD *)(v98 + 40) = v101;
          v102 = v194;
          *(_QWORD *)(v98 + 48) = v71;
          *(_QWORD *)(v98 + 56) = v102;
          v103 = v197;
          *(_QWORD *)(v98 + 64) = v195;
          *(_QWORD *)(v98 + 72) = v103;
          *(_BYTE *)(v98 + 80) = v196;
          sub_1BA6BFCE4((uint64_t)v95, v98 + *(int *)(v188 + 36));
          v104 = v173;
          sub_1BA73E4DC(v98, v173);
          v105 = swift_isUniquelyReferenced_nonNull_native();
          v201 = v90;
          v107 = sub_1BA6E35A8(v99, v65);
          v108 = *(_QWORD *)(v90 + 16);
          v109 = (v106 & 1) == 0;
          v110 = v108 + v109;
          if (__OFADD__(v108, v109))
            break;
          v111 = v106;
          if (*(_QWORD *)(v90 + 24) >= v110)
          {
            v115 = (uint64_t)v195;
            if ((v105 & 1) == 0)
            {
              sub_1BA7F255C();
              v115 = (uint64_t)v195;
            }
            v114 = v187;
          }
          else
          {
            sub_1BA7A53D4(v110, v105);
            v112 = sub_1BA6E35A8(v189, v65);
            if ((v111 & 1) != (v113 & 1))
              goto LABEL_61;
            v107 = v112;
            v114 = v187;
            v115 = (uint64_t)v195;
          }
          v116 = (_QWORD *)v201;
          v190 = (_QWORD *)v201;
          if ((v111 & 1) != 0)
          {
            sub_1BA7A50E8(v104, *(_QWORD *)(v201 + 56) + *(_QWORD *)(v114 + 72) * v107);
          }
          else
          {
            *(_QWORD *)(v201 + 8 * (v107 >> 6) + 64) |= 1 << v107;
            v117 = (_QWORD *)(v116[6] + 16 * v107);
            *v117 = v189;
            v117[1] = v65;
            sub_1BA73E4DC(v104, v116[7] + *(_QWORD *)(v114 + 72) * v107);
            v118 = v116[2];
            v55 = __OFADD__(v118, 1);
            v119 = v118 + 1;
            if (v55)
              goto LABEL_58;
            v116[2] = v119;
            swift_bridgeObjectRetain();
          }
          v63 = v182 + 88;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          sub_1BA6C0C20(v192, v193, v71, v194, v115, v197, v196);
          v62 = v183 - 1;
          v15 = v179;
          if (v183 == 1)
            goto LABEL_24;
        }
        __break(1u);
        goto LABEL_57;
      }
LABEL_24:
      v58 = v169 + 1;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v198);
      v57 = v171;
      v35 = v190;
      if (v58 == v165)
        goto LABEL_53;
    }
LABEL_60:
    __break(1u);
LABEL_61:
    result = sub_1BB874560();
    __break(1u);
  }
  else
  {
LABEL_53:
    result = swift_bridgeObjectRelease();
    v136 = v163;
    *v163 = v167;
    v136[1] = v35;
  }
  return result;
}

uint64_t sub_1BB60142C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB601698(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB601450()
{
  sub_1BA52239C();
  return sub_1BB874710();
}

uint64_t sub_1BB601478()
{
  sub_1BA52239C();
  return sub_1BB87471C();
}

BOOL FormatTypeCollection.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

unint64_t sub_1BB6014B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  unint64_t result;

  v2 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA5BC760(MEMORY[0x1E0DEE9D8]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

void sub_1BB6014E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  __int128 v3;
  __int128 v4;
  _OWORD v5[5];
  uint64_t v6;

  v3 = *(_OWORD *)(a2 + 48);
  v5[2] = *(_OWORD *)(a2 + 32);
  v5[3] = v3;
  v5[4] = *(_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v4;
  sub_1BA7A2B54(a1, (uint64_t)v5, *v2);
}

uint64_t sub_1BB601528(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5223E0(0, (unint64_t *)&qword_1ED3B3798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for FormatTypeCollection()
{
  return &type metadata for FormatTypeCollection;
}

uint64_t storeEnumTagSinglePayload for FormatTypeCollection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB6015D0 + 4 * byte_1BB932F65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB601604 + 4 * byte_1BB932F60[v4]))();
}

uint64_t sub_1BB601604(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB60160C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB601614);
  return result;
}

uint64_t sub_1BB601620(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB601628);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB60162C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB601634(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatTypeCollection.CodingKeys()
{
  return &type metadata for FormatTypeCollection.CodingKeys;
}

unint64_t sub_1BB601654()
{
  unint64_t result;

  result = qword_1EF2C8D20;
  if (!qword_1EF2C8D20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933090, &type metadata for FormatTypeCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8D20);
  }
  return result;
}

uint64_t sub_1BB601698(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7365707974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79427365707974 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BB601798()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AC008;
  if (!qword_1EF2AC008)
  {
    v1 = type metadata accessor for FormatPackageError();
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F5900, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AC008);
  }
  return result;
}

uint64_t FormatTagBinding.Asset.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  v4 = 11;
  if (v2 < 0xB)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static FormatTagBinding.Asset.allCases.getter()
{
  return &unk_1E724C330;
}

uint64_t FormatTagBinding.Asset.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BB601878 + 4 * byte_1BB933108[*v0]))(0xD000000000000012, 0x80000001BB95BF90);
}

uint64_t sub_1BB601878(uint64_t a1)
{
  return a1 + 11;
}

uint64_t sub_1BB60194C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA7F1C2C((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB601990(uint64_t a1)
{
  char *v1;

  sub_1BA7F1C2C(a1, *v1);
}

uint64_t sub_1BB601998@<X0>(char *a1@<X8>)
{
  return FormatTagBinding.Asset.init(rawValue:)(a1);
}

uint64_t sub_1BB6019A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatTagBinding.Asset.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1BB6019C8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724C330;
}

unint64_t sub_1BB601A08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C8D28;
  if (!qword_1EF2C8D28)
  {
    sub_1BB601A50();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C8D28);
  }
  return result;
}

void sub_1BB601A50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C8D30)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C8D30);
  }
}

uint64_t _s5AssetOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BB601AF0 + 4 * byte_1BB933123[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BB601B24 + 4 * byte_1BB93311E[v4]))();
}

uint64_t sub_1BB601B24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB601B2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB601B34);
  return result;
}

uint64_t sub_1BB601B40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB601B48);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BB601B4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB601B54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaFilter()
{
  return &type metadata for LayeredMediaFilter;
}

id sub_1BB601B70(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, void *a6)
{
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v29 = a1;
  sub_1BB8729A0();
  v11 = objc_allocWithZone(MEMORY[0x1E0CD2780]);
  v12 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithType_, v12);

  v14 = MEMORY[0x1E0DEF040];
  if ((a3 & 1) != 0)
  {
    v15 = MEMORY[0x1E0DEB418];
    v33 = MEMORY[0x1E0DEB418];
    *(_QWORD *)&v32 = 0;
  }
  else
  {
    v31 = MEMORY[0x1E0DEF040];
    *(_QWORD *)&v30 = a2;
    sub_1BA76EAE0(&v30, &v32);
    v15 = v33;
    if (!v33)
    {
      v16 = 0;
      goto LABEL_6;
    }
  }
  v17 = __swift_project_boxed_opaque_existential_1(&v32, v15);
  v18 = *(_QWORD *)(v15 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v18 + 16))(v21, v19);
  v16 = sub_1BB874380();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
LABEL_6:
  objc_msgSend(v13, sel_setValue_forKey_, v16, *MEMORY[0x1E0CD2CE8]);
  swift_unknownObjectRelease();
  if ((a5 & 1) != 0)
  {
    v22 = MEMORY[0x1E0DEB070];
    v33 = MEMORY[0x1E0DEB070];
    *(_QWORD *)&v32 = 0x3FF0000000000000;
  }
  else
  {
    v31 = v14;
    *(_QWORD *)&v30 = a4;
    sub_1BA76EAE0(&v30, &v32);
    v22 = v33;
  }
  __swift_project_boxed_opaque_existential_1(&v32, v22);
  v23 = sub_1BB874380();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
  objc_msgSend(v13, sel_setValue_forKey_, v23, *MEMORY[0x1E0CD2CB8]);
  swift_unknownObjectRelease();
  if (a6)
  {
    v24 = objc_msgSend(a6, sel_resolvedColorWithTraitCollection_, v29);
    if (v24)
    {
      v25 = v24;
      v26 = objc_msgSend(v24, sel_CGColor);
      objc_msgSend(v13, sel_setValue_forKey_, v26, *MEMORY[0x1E0CD2D00]);

    }
  }
  return v13;
}

uint64_t type metadata accessor for DebugFormatInspectorViewController()
{
  uint64_t result;

  result = qword_1EF2C8D78;
  if (!qword_1EF2C8D78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB601E24()
{
  return swift_initClassMetadata2();
}

id sub_1BB601E90()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 *v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  _OWORD v106[2];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  char v117;
  _OWORD v118[2];
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  char v129;
  _OWORD v130[2];
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  char v141;
  _OWORD v142[2];
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  char v153;
  _OWORD v154[12];
  char v155;
  _OWORD v156[12];
  char v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  char v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  char v183;

  v1 = v0;
  v2 = (_OWORD *)(v0 + qword_1EF2C8D40);
  v3 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 144);
  v4 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 176);
  v115 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 160);
  v116 = v4;
  v5 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 80);
  v6 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 112);
  v111 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 96);
  v112 = v6;
  v7 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 112);
  v8 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 144);
  v113 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 128);
  v114 = v8;
  v9 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 16);
  v10 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 48);
  v107 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 32);
  v108 = v10;
  v11 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 48);
  v12 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 80);
  v109 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 64);
  v110 = v12;
  v13 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 16);
  v106[0] = *(_OWORD *)(v0 + qword_1EF2C8D40);
  v106[1] = v13;
  v14 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 176);
  v181 = v115;
  v182 = v14;
  v177 = v111;
  v178 = v7;
  v180 = v3;
  v179 = v113;
  v173 = v107;
  v174 = v11;
  v176 = v5;
  v175 = v109;
  v15 = *(_QWORD *)(v0 + qword_1EF2C8D48);
  v117 = *(_BYTE *)(v0 + qword_1EF2C8D40 + 192);
  v183 = *(_BYTE *)(v0 + qword_1EF2C8D40 + 192);
  v172 = v9;
  v171 = v106[0];
  sub_1BAFB380C((uint64_t)v106);
  v16 = sub_1BB60242C(0);
  sub_1BAFB3938((uint64_t)v106);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v16;
  swift_bridgeObjectRelease();
  sub_1BB20A0CC();
  v17 = v2[9];
  v18 = v2[11];
  v127 = v2[10];
  v128 = v18;
  v19 = v2[5];
  v20 = v2[7];
  v123 = v2[6];
  v124 = v20;
  v21 = v2[7];
  v22 = v2[9];
  v125 = v2[8];
  v126 = v22;
  v23 = v2[1];
  v24 = v2[3];
  v119 = v2[2];
  v120 = v24;
  v25 = v2[3];
  v26 = v2[5];
  v121 = v2[4];
  v122 = v26;
  v27 = v2[1];
  v118[0] = *v2;
  v118[1] = v27;
  v28 = v2[11];
  v181 = v127;
  v182 = v28;
  v177 = v123;
  v178 = v21;
  v180 = v17;
  v179 = v125;
  v173 = v119;
  v174 = v25;
  v176 = v19;
  v175 = v121;
  v29 = *(_QWORD *)(v1 + qword_1EF2C8D50);
  v129 = *((_BYTE *)v2 + 192);
  v183 = *((_BYTE *)v2 + 192);
  v172 = v23;
  v171 = v118[0];
  sub_1BAFB380C((uint64_t)v118);
  v30 = sub_1BB60242C(1);
  sub_1BAFB3938((uint64_t)v118);
  *(_QWORD *)(v29 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v30;
  swift_bridgeObjectRelease();
  sub_1BB20A0CC();
  v31 = v2[9];
  v32 = v2[11];
  v139 = v2[10];
  v140 = v32;
  v33 = v2[5];
  v34 = v2[7];
  v135 = v2[6];
  v136 = v34;
  v35 = v2[7];
  v36 = v2[9];
  v137 = v2[8];
  v138 = v36;
  v37 = v2[1];
  v38 = v2[3];
  v131 = v2[2];
  v132 = v38;
  v39 = v2[3];
  v40 = v2[5];
  v133 = v2[4];
  v134 = v40;
  v41 = v2[1];
  v130[0] = *v2;
  v130[1] = v41;
  v42 = v2[11];
  v181 = v139;
  v182 = v42;
  v177 = v135;
  v178 = v35;
  v180 = v31;
  v179 = v137;
  v173 = v131;
  v174 = v39;
  v176 = v33;
  v175 = v133;
  v43 = *(_QWORD *)(v1 + qword_1EF2C8D58);
  v141 = *((_BYTE *)v2 + 192);
  v183 = *((_BYTE *)v2 + 192);
  v172 = v37;
  v171 = v130[0];
  sub_1BAFB380C((uint64_t)v130);
  v44 = sub_1BB60242C(2);
  sub_1BAFB3938((uint64_t)v130);
  *(_QWORD *)(v43 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v44;
  swift_bridgeObjectRelease();
  sub_1BB20A0CC();
  v45 = v2[9];
  v46 = v2[11];
  v151 = v2[10];
  v152 = v46;
  v47 = v2[5];
  v48 = v2[7];
  v147 = v2[6];
  v148 = v48;
  v49 = v2[7];
  v50 = v2[9];
  v149 = v2[8];
  v150 = v50;
  v51 = v2[1];
  v52 = v2[3];
  v143 = v2[2];
  v144 = v52;
  v53 = v2[3];
  v54 = v2[5];
  v145 = v2[4];
  v146 = v54;
  v55 = v2[1];
  v142[0] = *v2;
  v142[1] = v55;
  v56 = v2[11];
  v181 = v151;
  v182 = v56;
  v177 = v147;
  v178 = v49;
  v180 = v45;
  v179 = v149;
  v173 = v143;
  v174 = v53;
  v176 = v47;
  v175 = v145;
  v57 = *(_QWORD *)(v1 + qword_1EF2C8D60);
  v153 = *((_BYTE *)v2 + 192);
  v183 = *((_BYTE *)v2 + 192);
  v172 = v51;
  v171 = v142[0];
  sub_1BAFB380C((uint64_t)v142);
  v58 = sub_1BB60242C(3);
  sub_1BAFB3938((uint64_t)v142);
  *(_QWORD *)(v57 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v58;
  swift_bridgeObjectRelease();
  sub_1BB20A0CC();
  v59 = *(_QWORD *)(v1 + qword_1EF2C8D68);
  v60 = v2[3];
  v154[2] = v2[2];
  v154[3] = v60;
  v61 = v2[7];
  v154[6] = v2[6];
  v154[7] = v61;
  v62 = v2[5];
  v154[4] = v2[4];
  v154[5] = v62;
  v155 = *((_BYTE *)v2 + 192);
  v63 = v2[11];
  v154[10] = v2[10];
  v154[11] = v63;
  v64 = v2[9];
  v154[8] = v2[8];
  v154[9] = v64;
  v65 = v2[1];
  v154[0] = *v2;
  v154[1] = v65;
  v66 = (__int128 *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model);
  v156[0] = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model);
  v67 = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 48);
  v69 = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 16);
  v68 = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 32);
  v156[4] = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 64);
  v156[3] = v67;
  v156[1] = v69;
  v156[2] = v68;
  v70 = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 112);
  v72 = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 80);
  v71 = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 96);
  v156[8] = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 128);
  v156[7] = v70;
  v156[5] = v72;
  v156[6] = v71;
  v74 = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 160);
  v73 = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 176);
  v75 = *(_OWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 144);
  v157 = *(_BYTE *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 192);
  v156[11] = v73;
  v156[9] = v75;
  v156[10] = v74;
  memmove((void *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model), v2, 0xC1uLL);
  sub_1BAFB380C((uint64_t)v154);
  sub_1BAFB3938((uint64_t)v156);
  v76 = *(_QWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_maskSegmentedViewController);
  v158 = *v66;
  v77 = v66[3];
  v79 = v66[1];
  v78 = v66[2];
  v162 = v66[4];
  v161 = v77;
  v159 = v79;
  v160 = v78;
  v80 = v66[7];
  v82 = v66[5];
  v81 = v66[6];
  v166 = v66[8];
  v165 = v80;
  v163 = v82;
  v164 = v81;
  v84 = v66[10];
  v83 = v66[11];
  v85 = v66[9];
  v170 = *((_BYTE *)v66 + 192);
  v169 = v83;
  v167 = v85;
  v168 = v84;
  v86 = v76 + qword_1EF2B8068;
  v171 = *(_OWORD *)(v76 + qword_1EF2B8068);
  v87 = *(_OWORD *)(v76 + qword_1EF2B8068 + 48);
  v89 = *(_OWORD *)(v76 + qword_1EF2B8068 + 16);
  v88 = *(_OWORD *)(v76 + qword_1EF2B8068 + 32);
  v175 = *(_OWORD *)(v76 + qword_1EF2B8068 + 64);
  v174 = v87;
  v172 = v89;
  v173 = v88;
  v90 = *(_OWORD *)(v76 + qword_1EF2B8068 + 112);
  v92 = *(_OWORD *)(v76 + qword_1EF2B8068 + 80);
  v91 = *(_OWORD *)(v76 + qword_1EF2B8068 + 96);
  v179 = *(_OWORD *)(v76 + qword_1EF2B8068 + 128);
  v178 = v90;
  v176 = v92;
  v177 = v91;
  v94 = *(_OWORD *)(v76 + qword_1EF2B8068 + 160);
  v93 = *(_OWORD *)(v76 + qword_1EF2B8068 + 176);
  v95 = *(_OWORD *)(v76 + qword_1EF2B8068 + 144);
  v183 = *(_BYTE *)(v76 + qword_1EF2B8068 + 192);
  v182 = v93;
  v180 = v95;
  v181 = v94;
  *(_OWORD *)v86 = v158;
  v96 = v159;
  v97 = v160;
  v98 = v162;
  *(_OWORD *)(v86 + 48) = v161;
  *(_OWORD *)(v86 + 64) = v98;
  *(_OWORD *)(v86 + 16) = v96;
  *(_OWORD *)(v86 + 32) = v97;
  v99 = v163;
  v100 = v164;
  v101 = v166;
  *(_OWORD *)(v86 + 112) = v165;
  *(_OWORD *)(v86 + 128) = v101;
  *(_OWORD *)(v86 + 80) = v99;
  *(_OWORD *)(v86 + 96) = v100;
  v102 = v167;
  v103 = v168;
  v104 = v169;
  *(_BYTE *)(v86 + 192) = v170;
  *(_OWORD *)(v86 + 160) = v103;
  *(_OWORD *)(v86 + 176) = v104;
  *(_OWORD *)(v86 + 144) = v102;
  sub_1BAFB380C((uint64_t)&v158);
  sub_1BAFB3938((uint64_t)&v171);
  return sub_1BAFB27E0();
}

uint64_t sub_1BB60242C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BB603978(a1);
  v2 = sub_1BB6DED58(v1);
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2 + 64;
    v5 = MEMORY[0x1E0DEE9D8];
    do
    {
      v9 = *(_QWORD *)v4;
      if (*(_QWORD *)(*(_QWORD *)v4 + 16))
      {
        v11 = *(_QWORD *)(v4 - 32);
        v10 = *(_QWORD *)(v4 - 24);
        v12 = *(_QWORD *)(v4 - 16);
        v13 = *(_QWORD *)(v4 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BAC7AD80(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v7 = *(_QWORD *)(v5 + 16);
        v6 = *(_QWORD *)(v5 + 24);
        if (v7 >= v6 >> 1)
          sub_1BAC7AD80(v6 > 1, v7 + 1, 1);
        *(_QWORD *)(v5 + 16) = v7 + 1;
        v8 = (_QWORD *)(v5 + 40 * v7);
        v8[4] = v11;
        v8[5] = v10;
        v8[6] = v12;
        v8[7] = v13;
        v8[8] = v9;
      }
      v4 += 40;
      --v3;
    }
    while (v3);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v5;
}

char *sub_1BB6025A8(uint64_t a1, uint64_t a2)
{
  char *v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  objc_class *v35;
  _BYTE *v36;
  _QWORD *v37;
  uint64_t v38;
  id v39;
  char *v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  void *v45;
  id v46;
  _BYTE *v47;
  _QWORD *v48;
  uint64_t v49;
  id v50;
  char *v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  void *v56;
  id v57;
  _BYTE *v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  char *v62;
  id v63;
  id v64;
  void *v65;
  uint64_t v66;
  void *v67;
  id v68;
  _BYTE *v69;
  _QWORD *v70;
  uint64_t v71;
  id v72;
  char *v73;
  id v74;
  id v75;
  void *v76;
  objc_class *v77;
  char *v78;
  char *v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  id v89;
  char *v90;
  char *v91;
  char *v92;
  id v93;
  id v94;
  id v95;
  char *v96;
  id v97;
  id v98;
  id v99;
  id v100;
  void *v101;
  id v102;
  void *v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  id v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  id v115;
  id v116;
  void *v117;
  char *v118;
  id v119;
  void *v120;
  char *v121;
  id v122;
  void *v123;
  char *v124;
  id v125;
  void *v126;
  char *v127;
  id v128;
  void *v129;
  char *v130;
  id v131;
  id v133;
  objc_class *ObjectType;
  objc_super v135;
  objc_super v136;
  objc_super v137;
  objc_super v138;
  objc_super v139;
  objc_super v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  char v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  char v166;

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = *(_OWORD *)(a2 + 144);
  v6 = *(_OWORD *)(a2 + 176);
  v164 = *(_OWORD *)(a2 + 160);
  v7 = v164;
  v165 = v6;
  v8 = *(_OWORD *)(a2 + 80);
  v9 = *(_OWORD *)(a2 + 112);
  v160 = *(_OWORD *)(a2 + 96);
  v10 = v160;
  v161 = v9;
  v11 = *(_OWORD *)(a2 + 112);
  v12 = *(_OWORD *)(a2 + 144);
  v162 = *(_OWORD *)(a2 + 128);
  v13 = v162;
  v163 = v12;
  v14 = *(_OWORD *)(a2 + 16);
  v15 = *(_OWORD *)(a2 + 48);
  v156 = *(_OWORD *)(a2 + 32);
  v16 = v156;
  v157 = v15;
  v17 = *(_OWORD *)(a2 + 48);
  v18 = *(_OWORD *)(a2 + 80);
  v158 = *(_OWORD *)(a2 + 64);
  v19 = v158;
  v159 = v18;
  v20 = *(_OWORD *)(a2 + 16);
  v154 = *(_OWORD *)a2;
  v21 = v154;
  v155 = v20;
  *(_QWORD *)&v2[qword_1EF2C8D70] = a1;
  v22 = &v2[qword_1EF2C8D40];
  v23 = *(_OWORD *)(a2 + 144);
  v24 = *(_OWORD *)(a2 + 176);
  *((_OWORD *)v22 + 10) = *(_OWORD *)(a2 + 160);
  *((_OWORD *)v22 + 11) = v24;
  v25 = *(_OWORD *)(a2 + 80);
  v26 = *(_OWORD *)(a2 + 112);
  *((_OWORD *)v22 + 6) = *(_OWORD *)(a2 + 96);
  *((_OWORD *)v22 + 7) = v26;
  *((_OWORD *)v22 + 8) = *(_OWORD *)(a2 + 128);
  *((_OWORD *)v22 + 9) = v23;
  v27 = *(_OWORD *)(a2 + 16);
  v28 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v22 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v22 + 3) = v28;
  *((_OWORD *)v22 + 4) = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v22 + 5) = v25;
  *(_OWORD *)v22 = *(_OWORD *)a2;
  *((_OWORD *)v22 + 1) = v27;
  v29 = *(_OWORD *)(a2 + 176);
  v151 = v7;
  v152 = v29;
  v147 = v10;
  v148 = v11;
  v149 = v13;
  v150 = v5;
  v143 = v16;
  v144 = v17;
  v145 = v19;
  v146 = v8;
  v166 = *(_BYTE *)(a2 + 192);
  v22[192] = *(_BYTE *)(a2 + 192);
  v153 = *(_BYTE *)(a2 + 192);
  v141 = v21;
  v142 = v14;
  swift_retain_n();
  v30 = v2;
  sub_1BAFB380C((uint64_t)&v154);
  v31 = sub_1BB60242C(0);
  v32 = (void *)sub_1BB872970();
  v33 = (void *)objc_opt_self();
  v34 = objc_msgSend(v33, sel_systemImageNamed_, v32);

  v35 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
  v36 = objc_allocWithZone(v35);
  v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(_QWORD *)&v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
  v37 = &v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *v37 = 0;
  v37[1] = 0xE000000000000000;
  v38 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  v39 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v40 = v36;
  *(_QWORD *)&v36[v38] = objc_msgSend(v39, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v31;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v31;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v34;
  swift_retain();
  swift_bridgeObjectRetain();
  v41 = v34;

  v140.receiver = v40;
  v140.super_class = v35;
  v42 = objc_msgSendSuper2(&v140, sel_initWithNibName_bundle_, 0, 0);
  v43 = (void *)sub_1BB872970();
  objc_msgSend(v42, sel_setTitle_, v43);

  swift_release();
  *(_QWORD *)&v30[qword_1EF2C8D48] = v42;
  v151 = v164;
  v152 = v165;
  v153 = v166;
  v147 = v160;
  v148 = v161;
  v149 = v162;
  v150 = v163;
  v143 = v156;
  v144 = v157;
  v145 = v158;
  v146 = v159;
  v141 = v154;
  v142 = v155;
  swift_retain();
  v44 = sub_1BB60242C(1);
  v45 = (void *)sub_1BB872970();
  v46 = objc_msgSend(v33, sel_systemImageNamed_, v45);

  v47 = objc_allocWithZone(v35);
  v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(_QWORD *)&v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
  v48 = &v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *v48 = 0;
  v48[1] = 0xE000000000000000;
  v49 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  v50 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v51 = v47;
  *(_QWORD *)&v47[v49] = objc_msgSend(v50, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(_QWORD *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v44;
  *(_QWORD *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v44;
  *(_QWORD *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v46;
  swift_retain();
  swift_bridgeObjectRetain();
  v52 = v46;

  v139.receiver = v51;
  v139.super_class = v35;
  v53 = objc_msgSendSuper2(&v139, sel_initWithNibName_bundle_, 0, 0);
  v54 = (void *)sub_1BB872970();
  objc_msgSend(v53, sel_setTitle_, v54);

  swift_release();
  *(_QWORD *)&v30[qword_1EF2C8D50] = v53;
  v151 = v164;
  v152 = v165;
  v153 = v166;
  v147 = v160;
  v148 = v161;
  v149 = v162;
  v150 = v163;
  v143 = v156;
  v144 = v157;
  v145 = v158;
  v146 = v159;
  v141 = v154;
  v142 = v155;
  swift_retain();
  v55 = sub_1BB60242C(2);
  v56 = (void *)sub_1BB872970();
  v133 = v33;
  v57 = objc_msgSend(v33, sel_systemImageNamed_, v56);

  v58 = objc_allocWithZone(v35);
  v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
  v59 = &v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *v59 = 0;
  v59[1] = 0xE000000000000000;
  v60 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  v61 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v62 = v58;
  *(_QWORD *)&v58[v60] = objc_msgSend(v61, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(_QWORD *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v55;
  *(_QWORD *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v55;
  *(_QWORD *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v57;
  swift_retain();
  swift_bridgeObjectRetain();
  v63 = v57;

  v138.receiver = v62;
  v138.super_class = v35;
  v64 = objc_msgSendSuper2(&v138, sel_initWithNibName_bundle_, 0, 0);
  v65 = (void *)sub_1BB872970();
  objc_msgSend(v64, sel_setTitle_, v65);

  swift_release();
  *(_QWORD *)&v30[qword_1EF2C8D58] = v64;
  v151 = v164;
  v152 = v165;
  v153 = v166;
  v147 = v160;
  v148 = v161;
  v149 = v162;
  v150 = v163;
  v143 = v156;
  v144 = v157;
  v145 = v158;
  v146 = v159;
  v141 = v154;
  v142 = v155;
  swift_retain();
  v66 = sub_1BB60242C(3);
  v67 = (void *)sub_1BB872970();
  v68 = objc_msgSend(v33, sel_systemImageNamed_, v67);

  v69 = objc_allocWithZone(v35);
  v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(_QWORD *)&v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
  v70 = &v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *v70 = 0;
  v70[1] = 0xE000000000000000;
  v71 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  v72 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v73 = v69;
  *(_QWORD *)&v69[v71] = objc_msgSend(v72, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v73[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v73[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(_QWORD *)&v73[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v66;
  *(_QWORD *)&v73[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v66;
  *(_QWORD *)&v73[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v68;
  swift_retain();
  swift_bridgeObjectRetain();
  v74 = v68;

  v137.receiver = v73;
  v137.super_class = v35;
  v75 = objc_msgSendSuper2(&v137, sel_initWithNibName_bundle_, 0, 0);
  v76 = (void *)sub_1BB872970();
  objc_msgSend(v75, sel_setTitle_, v76);

  swift_release();
  *(_QWORD *)&v30[qword_1EF2C8D60] = v75;
  v77 = (objc_class *)type metadata accessor for DebugFormatInspectorMaskViewController();
  v78 = (char *)objc_allocWithZone(v77);
  *(_QWORD *)&v78[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_editor] = a1;
  v79 = &v78[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model];
  *(_OWORD *)v79 = v154;
  v80 = v158;
  v82 = v155;
  v81 = v156;
  *((_OWORD *)v79 + 3) = v157;
  *((_OWORD *)v79 + 4) = v80;
  *((_OWORD *)v79 + 1) = v82;
  *((_OWORD *)v79 + 2) = v81;
  v83 = v162;
  v85 = v159;
  v84 = v160;
  *((_OWORD *)v79 + 7) = v161;
  *((_OWORD *)v79 + 8) = v83;
  *((_OWORD *)v79 + 5) = v85;
  *((_OWORD *)v79 + 6) = v84;
  v86 = v163;
  v87 = v164;
  v88 = v165;
  v79[192] = v166;
  *((_OWORD *)v79 + 10) = v87;
  *((_OWORD *)v79 + 11) = v88;
  *((_OWORD *)v79 + 9) = v86;
  v151 = v164;
  v152 = v165;
  v153 = v166;
  v147 = v160;
  v148 = v161;
  v149 = v162;
  v150 = v163;
  v143 = v156;
  v144 = v157;
  v145 = v158;
  v146 = v159;
  v141 = v154;
  v142 = v155;
  v89 = objc_allocWithZone((Class)type metadata accessor for DebugFormatInspectorMaskSegmentedViewController());
  swift_retain_n();
  sub_1BAFB380C((uint64_t)&v154);
  v90 = v78;
  v91 = sub_1BAFB2A7C(a1, &v141);
  *(_QWORD *)&v90[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_maskSegmentedViewController] = v91;
  v92 = v91;

  v136.receiver = v90;
  v136.super_class = v77;
  v93 = objc_msgSendSuper2(&v136, sel_initWithRootViewController_, v92);

  swift_release();
  *(_QWORD *)&v30[qword_1EF2C8D68] = v93;

  v135.receiver = v30;
  v135.super_class = ObjectType;
  v94 = objc_msgSendSuper2(&v135, sel_initWithNibName_bundle_, 0, 0);
  v95 = objc_allocWithZone(MEMORY[0x1E0DC3C40]);
  v96 = (char *)v94;
  v97 = objc_msgSend(v95, sel_initWithSearchResultsController_, 0);
  objc_msgSend(v97, sel_setSearchResultsUpdater_, v96);
  objc_msgSend(v97, sel_setObscuresBackgroundDuringPresentation_, 0);
  objc_msgSend(v97, sel_setHidesNavigationBarDuringPresentation_, 0);
  v98 = objc_msgSend(v97, sel_searchBar);
  v99 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  objc_msgSend(v98, sel_setTintColor_, v99);

  v100 = objc_msgSend(v97, sel_searchBar);
  v101 = (void *)sub_1BB872970();
  objc_msgSend(v100, sel_setPlaceholder_, v101);

  v102 = objc_msgSend(v97, sel_searchBar);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v103 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v102, sel_setText_, v103);

  v104 = objc_msgSend(v97, sel_searchBar);
  v105 = objc_msgSend(v104, sel_searchTextField);

  objc_msgSend(v105, sel_setAutocorrectionType_, 1);
  v106 = objc_msgSend(v97, sel_searchBar);
  v107 = objc_msgSend(v106, sel_searchTextField);

  objc_msgSend(v107, sel_setAutocapitalizationType_, 0);
  v108 = objc_msgSend(v97, sel_searchBar);
  v109 = (void *)sub_1BB872970();
  v110 = objc_msgSend(v133, sel_systemImageNamed_, v109);

  objc_msgSend(v108, sel_setImage_forSearchBarIcon_state_, v110, 0, 0);
  v111 = objc_msgSend(v97, sel_searchBar);
  objc_msgSend(v111, sel_setShowsCancelButton_, 0);

  v112 = qword_1EF2C8D50;
  v113 = objc_msgSend(*(id *)&v96[qword_1EF2C8D50], sel_navigationItem);
  objc_msgSend(v113, sel_setSearchController_, v97);

  v114 = qword_1EF2C8D58;
  v115 = objc_msgSend(*(id *)&v96[qword_1EF2C8D58], sel_navigationItem);
  objc_msgSend(v115, sel_setSearchController_, v97);

  v116 = objc_msgSend(v96, sel_navigationItem);
  objc_msgSend(v116, sel_setHidesSearchBarWhenScrolling_, 0);

  v117 = *(void **)&v96[qword_1EF2C8D48];
  sub_1BA4A2870((unint64_t *)&qword_1EF2CD510, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatInspectorPaneViewController, (uint64_t)&unk_1BB8FA908);
  v118 = v96;
  v119 = v117;
  sub_1BB8708B8();

  v120 = *(void **)&v96[v112];
  v121 = v118;
  v122 = v120;
  sub_1BB8708B8();

  v123 = *(void **)&v96[v114];
  v124 = v121;
  v125 = v123;
  sub_1BB8708B8();

  v126 = *(void **)&v124[qword_1EF2C8D60];
  v127 = v124;
  v128 = v126;
  sub_1BB8708B8();

  v129 = *(void **)&v127[qword_1EF2C8D68];
  sub_1BA4A2870(qword_1EF2C8E00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatInspectorMaskViewController, (uint64_t)&unk_1BB8DCAC8);
  v130 = v127;
  v131 = v129;
  sub_1BB8708B8();

  swift_release();
  return v130;
}

void sub_1BB603518()
{
  sub_1BB873EAC();
  __break(1u);
}

void sub_1BB603570(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BB6035A0()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[12];
  char v9;

  v1 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 176);
  v8[10] = *(_OWORD *)(v0 + qword_1EF2C8D40 + 160);
  v8[11] = v1;
  v9 = *(_BYTE *)(v0 + qword_1EF2C8D40 + 192);
  v2 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 112);
  v8[6] = *(_OWORD *)(v0 + qword_1EF2C8D40 + 96);
  v8[7] = v2;
  v3 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 144);
  v8[8] = *(_OWORD *)(v0 + qword_1EF2C8D40 + 128);
  v8[9] = v3;
  v4 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 48);
  v8[2] = *(_OWORD *)(v0 + qword_1EF2C8D40 + 32);
  v8[3] = v4;
  v5 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 80);
  v8[4] = *(_OWORD *)(v0 + qword_1EF2C8D40 + 64);
  v8[5] = v5;
  v6 = *(_OWORD *)(v0 + qword_1EF2C8D40 + 16);
  v8[0] = *(_OWORD *)(v0 + qword_1EF2C8D40);
  v8[1] = v6;
  sub_1BAFB3938((uint64_t)v8);

  return swift_release();
}

uint64_t sub_1BB603664(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[12];
  char v10;

  v2 = *(_OWORD *)(a1 + qword_1EF2C8D40 + 176);
  v9[10] = *(_OWORD *)(a1 + qword_1EF2C8D40 + 160);
  v9[11] = v2;
  v10 = *(_BYTE *)(a1 + qword_1EF2C8D40 + 192);
  v3 = *(_OWORD *)(a1 + qword_1EF2C8D40 + 112);
  v9[6] = *(_OWORD *)(a1 + qword_1EF2C8D40 + 96);
  v9[7] = v3;
  v4 = *(_OWORD *)(a1 + qword_1EF2C8D40 + 144);
  v9[8] = *(_OWORD *)(a1 + qword_1EF2C8D40 + 128);
  v9[9] = v4;
  v5 = *(_OWORD *)(a1 + qword_1EF2C8D40 + 48);
  v9[2] = *(_OWORD *)(a1 + qword_1EF2C8D40 + 32);
  v9[3] = v5;
  v6 = *(_OWORD *)(a1 + qword_1EF2C8D40 + 80);
  v9[4] = *(_OWORD *)(a1 + qword_1EF2C8D40 + 64);
  v9[5] = v6;
  v7 = *(_OWORD *)(a1 + qword_1EF2C8D40 + 16);
  v9[0] = *(_OWORD *)(a1 + qword_1EF2C8D40);
  v9[1] = v7;
  sub_1BAFB3938((uint64_t)v9);

  return swift_release();
}

uint64_t sub_1BB603734()
{
  return type metadata accessor for DebugFormatInspectorViewController();
}

id sub_1BB60373C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v23;
  unint64_t v24;

  v2 = v1;
  v4 = sub_1BB86BE54();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_searchBar, v6);
  v10 = objc_msgSend(v9, sel_text);

  if (v10)
  {
    v11 = sub_1BB8729A0();
    v13 = v12;

    v23 = v11;
    v24 = v13;
    sub_1BB86BDA0();
    sub_1BA7114A0();
    v10 = (id)sub_1BB873AEC();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0xE000000000000000;
  }
  v23 = (uint64_t)v10;
  v24 = v15;
  swift_retain();
  sub_1BB86D2C4();
  swift_release();
  v16 = *(_QWORD *)(v2 + qword_1EF2C8D50);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v17 = v24;
  v18 = (uint64_t *)(v16 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm);
  *v18 = v23;
  v18[1] = v17;
  swift_bridgeObjectRelease();
  sub_1BB20A0CC();
  v19 = *(_QWORD *)(v2 + qword_1EF2C8D58);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v20 = v24;
  v21 = (uint64_t *)(v19 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm);
  *v21 = v23;
  v21[1] = v20;
  swift_bridgeObjectRelease();
  return sub_1BB20A0CC();
}

void sub_1BB603924(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1BB60373C(v4);

}

void sub_1BB603978(char a1)
{
  __asm { BR              X10 }
}

void sub_1BB6039B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BB603B7C(a3);
}

void sub_1BB603B7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[11];
  char *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  _QWORD *v64;
  void (*v65)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _BYTE v81[31];
  uint64_t v82;
  _OWORD v83[2];
  _OWORD v84[2];
  uint64_t v85;
  _OWORD v86[2];
  uint64_t v87;
  _OWORD v88[2];
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  _OWORD v94[3];

  v52 = a1;
  sub_1BA8C88C8(0);
  v53 = v2;
  v68 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v49 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)v1;
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  v57 = *(unsigned __int8 *)(v1 + 48);
  v10 = *(_OWORD *)(v1 + 97);
  v11 = *(_OWORD *)(v1 + 129);
  v93 = *(_OWORD *)(v1 + 113);
  v94[0] = v11;
  *(_OWORD *)((char *)v94 + 15) = *(_OWORD *)(v1 + 144);
  v12 = *(_OWORD *)(v1 + 65);
  v89 = *(_OWORD *)(v1 + 49);
  v90 = v12;
  v91 = *(_OWORD *)(v1 + 81);
  v92 = v10;
  v13 = *(_QWORD *)(v1 + 160);
  *(_OWORD *)((char *)v88 + 9) = *(_OWORD *)(v1 + 177);
  v88[0] = *(_OWORD *)(v1 + 168);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = swift_allocObject();
  v50 = xmmword_1BB8827B0;
  *(_OWORD *)(v14 + 16) = xmmword_1BB8827B0;
  v54 = (_QWORD *)v14;
  v55 = v8;
  v51 = v14 + 32;
  v56 = v4;
  v69 = v4;
  v70 = v5;
  v58 = v6;
  v59 = v5;
  v71 = v6;
  v72 = v7;
  v15 = v57;
  v61 = v9;
  v62 = v7;
  v73 = v8;
  v74 = v9;
  v75 = v57;
  v79 = *(_OWORD *)(v1 + 97);
  v80 = *(_OWORD *)(v1 + 113);
  *(_OWORD *)v81 = *(_OWORD *)(v1 + 129);
  *(_OWORD *)&v81[15] = *(_OWORD *)(v1 + 144);
  v76 = *(_OWORD *)(v1 + 49);
  v77 = *(_OWORD *)(v1 + 65);
  v78 = *(_OWORD *)(v1 + 81);
  v60 = v13;
  v82 = v13;
  *(_OWORD *)((char *)v83 + 9) = *(_OWORD *)(v1 + 177);
  v83[0] = *(_OWORD *)(v1 + 168);
  v16 = sub_1BB249700();
  v17 = v16[2];
  if (v17)
  {
    v69 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v17, 0);
    v18 = v69;
    v67 = type metadata accessor for FormatInspectionItem(0);
    v19 = type metadata accessor for FormatInspectionItem.Value(0);
    v65 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
    v66 = v19;
    v64 = v49 + 16;
    v48[8] = v16;
    v20 = v16 + 8;
    v63 = xmmword_1BB8D4900;
    v21 = v49;
    do
    {
      v22 = *(v20 - 3);
      v23 = *(v20 - 2);
      v24 = *(v20 - 1);
      v25 = *v20;
      v27 = v66;
      v26 = v67;
      v28 = (char *)v21 + *(int *)(v67 + 24);
      *v28 = *((_BYTE *)v20 - 32);
      *((_QWORD *)v28 + 1) = v22;
      *((_QWORD *)v28 + 2) = v23;
      *((_QWORD *)v28 + 3) = v24;
      *((_QWORD *)v28 + 4) = v25;
      swift_storeEnumTagMultiPayload();
      v65(v28, 0, 1, v27);
      *v21 = v63;
      v29 = v64;
      *v64 = 0;
      v29[1] = 0;
      v30 = (char *)v21 + *(int *)(v26 + 28);
      *(_QWORD *)v30 = 0;
      *((_QWORD *)v30 + 1) = 0;
      v30[16] = -1;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v21, 0, 1, v26);
      v69 = v18;
      v31 = (uint64_t)v21;
      v33 = *(_QWORD *)(v18 + 16);
      v32 = *(_QWORD *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v33 >= v32 >> 1)
      {
        sub_1BAC79E1C(v32 > 1, v33 + 1, 1);
        v18 = v69;
      }
      v20 += 5;
      *(_QWORD *)(v18 + 16) = v33 + 1;
      sub_1BA5193C4(v31, v18+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(_QWORD *)(v68 + 72) * v33, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      --v17;
      v21 = (_OWORD *)v31;
    }
    while (v17);
    swift_bridgeObjectRelease();
    v34 = v59;
    v15 = v57;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
    v34 = v59;
  }
  sub_1BAF89090(0x736575737349, 0xE600000000000000, 0, 0, v18, v84);
  swift_bridgeObjectRelease();
  v35 = v54;
  v54[7] = &type metadata for FormatInspectionGroup;
  v35[8] = &off_1E72D2F60;
  v36 = swift_allocObject();
  v35[4] = v36;
  v37 = v84[1];
  *(_OWORD *)(v36 + 16) = v84[0];
  *(_OWORD *)(v36 + 32) = v37;
  *(_QWORD *)(v36 + 48) = v85;
  v38 = v52;
  swift_retain();
  v39 = v60;
  v40 = swift_bridgeObjectRetain();
  v41 = sub_1BB604CAC(v40, v38);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BAF89090(0x676E69646E6942, 0xE700000000000000, 0, 0, v41, v86);
  swift_bridgeObjectRelease();
  v35[12] = &type metadata for FormatInspectionGroup;
  v35[13] = &off_1E72D2F60;
  v42 = swift_allocObject();
  v35[9] = v42;
  v43 = v86[1];
  *(_OWORD *)(v42 + 16) = v86[0];
  *(_OWORD *)(v42 + 32) = v43;
  *(_QWORD *)(v42 + 48) = v87;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v44 = *(unsigned __int8 *)(v68 + 80);
  v45 = (v44 + 32) & ~v44;
  v67 = *(_QWORD *)(v68 + 72);
  v48[7] = 3 * v67;
  *(_QWORD *)&v63 = v46;
  v52 = v44 | 7;
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1BB87FC80;
  v79 = v92;
  v80 = v93;
  *(_OWORD *)v81 = v94[0];
  *(_OWORD *)&v81[15] = *(_OWORD *)((char *)v94 + 15);
  v76 = v89;
  v77 = v90;
  v49 = (char *)v47;
  v64 = (_QWORD *)(v47 + v45);
  v69 = v56;
  v70 = v34;
  v71 = v58;
  v72 = v62;
  v73 = v55;
  v74 = v61;
  v75 = v15;
  v78 = v91;
  v82 = v39;
  *(_OWORD *)((char *)v83 + 9) = *(_OWORD *)((char *)v88 + 9);
  v83[0] = v88[0];
  sub_1BB24ACA0();
  __asm { BR              X9 }
}

_QWORD *sub_1BB6040F0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(uint64_t, _QWORD, uint64_t, uint64_t);
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  void (*v58)(_QWORD *, _QWORD, uint64_t, uint64_t);
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  void (*v89)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _UNKNOWN **v121;
  ValueMetadata *v122;
  _QWORD *v123;

  if (*(_BYTE *)(v4 + 88))
    v10 = -100;
  else
    v10 = *(_QWORD *)(v4 + 80);
  v11 = *(_OWORD *)(v5 - 208);
  *(_OWORD *)(v0 + 385) = *(_OWORD *)(v5 - 192);
  v12 = *(_OWORD *)(v5 - 160);
  *(_OWORD *)(v3 + 113) = *(_OWORD *)(v5 - 176);
  *(_OWORD *)(v3 + 129) = v12;
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 815);
  v13 = *(_OWORD *)(v5 - 224);
  *(_OWORD *)(v0 + 337) = *(_OWORD *)(v5 - 240);
  *(_OWORD *)(v0 + 353) = v13;
  *(_QWORD *)(v0 + 288) = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 296) = v4;
  v14 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 312) = v14;
  v15 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 320) = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 328) = v15;
  *(_BYTE *)(v0 + 336) = v1;
  *(_OWORD *)(v0 + 369) = v11;
  *(_QWORD *)(v0 + 448) = *(_QWORD *)(v0 + 184);
  *(_OWORD *)(v3 + 168) = *(_OWORD *)(v0 + 688);
  *(_OWORD *)(v3 + 177) = *(_OWORD *)(v0 + 697);
  v16 = sub_1BB24EE24();
  v17 = v4;
  v18 = type metadata accessor for FormatInspectionItem(0);
  v19 = *(_QWORD *)(v0 + 232);
  v20 = v19 + *(int *)(v18 + 24);
  *(_QWORD *)v20 = v9;
  *(_QWORD *)(v20 + 8) = v8;
  *(_QWORD *)(v20 + 16) = v7;
  *(_QWORD *)(v20 + 24) = v6;
  *(_QWORD *)(v20 + 32) = v10;
  *(_QWORD *)(v20 + 40) = v16;
  *(_BYTE *)(v20 + 48) = 0;
  v21 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  *(_QWORD *)(v0 + 240) = v22;
  *(_QWORD *)(v0 + 248) = v21;
  v22(v20, 0, 1, v21);
  *(_OWORD *)(v0 + 64) = xmmword_1BB8D4900;
  *(_OWORD *)v19 = xmmword_1BB8D4900;
  *(_QWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v19 + 24) = 0;
  v23 = v19 + *(int *)(v18 + 28);
  *(_QWORD *)v23 = 0;
  *(_QWORD *)(v23 + 8) = 0;
  *(_BYTE *)(v23 + 16) = -1;
  v24 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  *(_QWORD *)(v0 + 264) = v24;
  v24(v19, 0, 1, v18);
  *(_QWORD *)(v0 + 288) = 0;
  *(_QWORD *)(v0 + 296) = 0xE000000000000000;
  if (v1 == 3)
  {
    *(_QWORD *)(v0 + 608) = v17;
    sub_1BA676C10();
    v25 = *(_QWORD *)(v0 + 648);
  }
  else
  {
    v25 = 0x8000000000000000;
    *(_QWORD *)(v0 + 648) = 0x8000000000000000;
  }
  v26 = (_QWORD *)(*(_QWORD *)(v0 + 232) + *(_QWORD *)(v0 + 256));
  *(_QWORD *)(v0 + 608) = v25;
  FormatVisibility.description.getter();
  sub_1BB872AFC(v27);
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(v25);
  sub_1BAAF7494(0x696C696269736956, 0xEA00000000007974, *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), v26);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v0 + 264))(v26, 0, 1, v18);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v28 = swift_allocObject();
  *(_OWORD *)(v0 + 32) = xmmword_1BB87CE70;
  *(_OWORD *)(v28 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v0 + 8) = v28;
  *(_QWORD *)(v0 + 24) = v28 + 32;
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = *(_OWORD *)(v0 + 96);
  v30 = *(_OWORD *)(v5 - 208);
  *(_OWORD *)(v0 + 385) = *(_OWORD *)(v5 - 192);
  v31 = *(_OWORD *)(v5 - 160);
  *(_OWORD *)(v3 + 113) = *(_OWORD *)(v5 - 176);
  *(_OWORD *)(v3 + 129) = v31;
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 815);
  v32 = *(_OWORD *)(v5 - 224);
  *(_OWORD *)(v0 + 337) = *(_OWORD *)(v5 - 240);
  *(_OWORD *)(v0 + 353) = v32;
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 16) = v29;
  v33 = v29 + v2;
  v34 = *(_QWORD *)(v0 + 144);
  v35 = *(_QWORD *)(v0 + 152);
  v36 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 288) = v35;
  *(_QWORD *)(v0 + 296) = v36;
  v37 = v36;
  v39 = *(_QWORD *)(v0 + 192);
  v38 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 312) = v38;
  v40 = v38;
  *(_QWORD *)(v0 + 320) = v34;
  *(_QWORD *)(v0 + 328) = v39;
  *(_BYTE *)(v0 + 336) = *(_QWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 369) = v30;
  *(_QWORD *)(v0 + 448) = *(_QWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 688);
  *(_OWORD *)(v0 + 465) = *(_OWORD *)(v0 + 697);
  sub_1BB24A860();
  v41 = (_QWORD *)(v33 + *(int *)(v18 + 24));
  *v41 = v42;
  v41[1] = v43;
  v44 = *(_QWORD *)(v0 + 248);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v0 + 240))(v41, 0, 1, v44);
  *(_OWORD *)v33 = xmmword_1BB933260;
  *(_QWORD *)(v33 + 16) = 0;
  *(_QWORD *)(v33 + 24) = 0;
  v45 = v33 + *(int *)(v18 + 28);
  *(_QWORD *)v45 = 0;
  *(_QWORD *)(v45 + 8) = 0;
  *(_BYTE *)(v45 + 16) = -1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 264))(v33, 0, 1, v18);
  v46 = *(_OWORD *)(v5 - 208);
  *(_OWORD *)(v0 + 385) = *(_OWORD *)(v5 - 192);
  v47 = *(_OWORD *)(v5 - 160);
  *(_OWORD *)(v0 + 401) = *(_OWORD *)(v5 - 176);
  *(_OWORD *)(v0 + 417) = v47;
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 815);
  v48 = *(_OWORD *)(v5 - 224);
  *(_OWORD *)(v0 + 337) = *(_OWORD *)(v5 - 240);
  *(_OWORD *)(v0 + 353) = v48;
  v49 = (_QWORD *)(v33 + *(_QWORD *)(v0 + 256));
  *(_QWORD *)(v0 + 288) = v35;
  *(_QWORD *)(v0 + 296) = v37;
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 312) = v40;
  *(_QWORD *)(v0 + 320) = v34;
  *(_QWORD *)(v0 + 328) = v39;
  v50 = *(_QWORD *)(v0 + 160);
  *(_BYTE *)(v0 + 336) = v50;
  *(_OWORD *)(v0 + 369) = v46;
  v51 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 448) = v51;
  *(_OWORD *)(v0 + 465) = *(_OWORD *)(v0 + 697);
  *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 688);
  sub_1BB24AB50();
  v52 = (_QWORD *)((char *)v49 + *(int *)(v18 + 24));
  *v52 = v53;
  v52[1] = v54;
  v55 = *(_QWORD *)(v0 + 248);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v0 + 240))(v52, 0, 1, v55);
  *v49 = 0xD000000000000011;
  v49[1] = 0x80000001BB993D30;
  v49[2] = 0;
  v49[3] = 0;
  v56 = (char *)v49 + *(int *)(v18 + 28);
  *(_QWORD *)v56 = 0;
  *((_QWORD *)v56 + 1) = 0;
  v56[16] = -1;
  v57 = v49;
  v58 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v0 + 264);
  v58(v57, 0, 1, v18);
  v59 = *(_OWORD *)(v5 - 208);
  *(_OWORD *)(v0 + 385) = *(_OWORD *)(v5 - 192);
  v60 = *(_OWORD *)(v5 - 160);
  *(_OWORD *)(v0 + 401) = *(_OWORD *)(v5 - 176);
  *(_OWORD *)(v0 + 417) = v60;
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 815);
  v61 = *(_OWORD *)(v5 - 224);
  *(_OWORD *)(v0 + 337) = *(_OWORD *)(v5 - 240);
  *(_OWORD *)(v0 + 353) = v61;
  v62 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 288) = v62;
  *(_QWORD *)(v0 + 296) = v63;
  v64 = v18;
  v65 = *(_QWORD *)(v0 + 168);
  v66 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 304) = v65;
  *(_QWORD *)(v0 + 312) = v66;
  v67 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 320) = v34;
  *(_QWORD *)(v0 + 328) = v67;
  *(_BYTE *)(v0 + 336) = v50;
  *(_OWORD *)(v0 + 369) = v59;
  *(_QWORD *)(v0 + 448) = v51;
  *(_OWORD *)(v0 + 465) = *(_OWORD *)(v0 + 697);
  *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 688);
  sub_1BB24ABF8();
  if (v69)
    v70 = v68;
  else
    v70 = 0;
  v71 = 2 * *(_QWORD *)(v0 + 256);
  *(_QWORD *)v0 = v71;
  v72 = (_QWORD *)(v33 + v71);
  sub_1BAAF8000(0xD000000000000010, 0x80000001BB993D50, v70, v69, (_QWORD *)(v33 + v71));
  v58(v72, 0, 1, v64);
  v73 = *(_OWORD *)(v5 - 208);
  *(_OWORD *)(v0 + 385) = *(_OWORD *)(v5 - 192);
  v74 = *(_OWORD *)(v5 - 160);
  *(_OWORD *)(v0 + 401) = *(_OWORD *)(v5 - 176);
  *(_OWORD *)(v0 + 417) = v74;
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 815);
  v75 = *(_OWORD *)(v5 - 224);
  *(_OWORD *)(v0 + 337) = *(_OWORD *)(v5 - 240);
  *(_OWORD *)(v0 + 353) = v75;
  v76 = (_QWORD *)(v33 + *(_QWORD *)(v0 + 56));
  v77 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 288) = v62;
  *(_QWORD *)(v0 + 296) = v77;
  *(_QWORD *)(v0 + 304) = v65;
  v78 = v64;
  *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 320) = v34;
  *(_QWORD *)(v0 + 328) = *(_QWORD *)(v0 + 192);
  *(_BYTE *)(v0 + 336) = v50;
  *(_OWORD *)(v0 + 369) = v73;
  *(_QWORD *)(v0 + 448) = *(_QWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 465) = *(_OWORD *)(v0 + 697);
  *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 688);
  sub_1BB24965C();
  v79 = (_QWORD *)((char *)v76 + *(int *)(v64 + 24));
  *v79 = v80;
  v79[1] = v81;
  v82 = *(_QWORD *)(v0 + 248);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v0 + 240))(v79, 0, 1, v82);
  *v76 = 0xD000000000000011;
  v76[1] = 0x80000001BB993D70;
  v76[2] = 0;
  v76[3] = 0;
  v83 = (char *)v76 + *(int *)(v64 + 28);
  *(_QWORD *)v83 = 0;
  *((_QWORD *)v83 + 1) = 0;
  v83[16] = -1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v0 + 264))(v76, 0, 1, v64);
  v84 = 0;
  v85 = 0;
  if ((_DWORD)v50 == 1)
  {
    v86 = *(_QWORD *)(v0 + 176);
    v85 = *(_QWORD *)(v86 + 56);
    if (v85)
    {
      v84 = *(_QWORD *)(v86 + 48);
      swift_bridgeObjectRetain();
    }
    else
    {
      v84 = 0;
    }
  }
  v87 = (_QWORD *)(*(_QWORD *)(v0 + 232) + *(_QWORD *)v0);
  v88 = *(_QWORD *)(v0 + 256);
  sub_1BAAF8000(0xD000000000000019, 0x80000001BB993D90, v84, v85, (_QWORD *)(v33 + 4 * v88));
  v89 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 264);
  v89(v33 + 4 * v88, 0, 1, v64);
  sub_1BAF89090(0x696669746E656449, 0xEB00000000737265, 0, 0, *(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 568));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v90 = *(_QWORD **)(v0 + 8);
  v90[7] = &type metadata for FormatInspectionGroup;
  v90[8] = &off_1E72D2F60;
  v91 = swift_allocObject();
  v90[4] = v91;
  v92 = *(_OWORD *)(v0 + 584);
  *(_OWORD *)(v91 + 16) = *(_OWORD *)(v0 + 568);
  *(_OWORD *)(v91 + 32) = v92;
  *(_QWORD *)(v91 + 48) = *(_QWORD *)(v0 + 600);
  v93 = sub_1BA9747FC((uint64_t)v90);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v94 = sub_1BB6DF010(v93);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x696669746E656449, 0xEB00000000737265, (uint64_t)v94, 0, 0, v87);
  v89((uint64_t)v87, 0, 1, v64);
  sub_1BAF89090(0x656D617246, 0xE500000000000000, 0, 0, *(_QWORD *)(v0 + 88), (_QWORD *)(v0 + 608));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v95 = *(_QWORD **)(v0 + 136);
  v95[17] = &type metadata for FormatInspectionGroup;
  v95[18] = &off_1E72D2F60;
  v96 = swift_allocObject();
  v95[14] = v96;
  v97 = *(_OWORD *)(v0 + 624);
  *(_OWORD *)(v96 + 16) = *(_OWORD *)(v0 + 608);
  *(_OWORD *)(v96 + 32) = v97;
  *(_QWORD *)(v96 + 48) = *(_QWORD *)(v0 + 640);
  v98 = *(_QWORD *)(v0 + 96);
  v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = *(_OWORD *)(v0 + 32);
  v100 = *(_OWORD *)(v5 - 208);
  *(_OWORD *)(v0 + 385) = *(_OWORD *)(v5 - 192);
  v101 = *(_OWORD *)(v5 - 160);
  *(_OWORD *)(v0 + 401) = *(_OWORD *)(v5 - 176);
  *(_OWORD *)(v0 + 417) = v101;
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 815);
  v102 = *(_OWORD *)(v5 - 224);
  *(_OWORD *)(v0 + 337) = *(_OWORD *)(v5 - 240);
  *(_OWORD *)(v0 + 353) = v102;
  v103 = v99 + v98;
  v104 = *(_QWORD *)(v0 + 152);
  v106 = *(_QWORD *)(v0 + 168);
  v105 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 288) = v104;
  *(_QWORD *)(v0 + 296) = v105;
  v107 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 304) = v106;
  *(_QWORD *)(v0 + 312) = v107;
  v108 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 320) = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 328) = v108;
  *(_BYTE *)(v0 + 336) = *(_QWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 369) = v100;
  *(_QWORD *)(v0 + 448) = *(_QWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 688);
  *(_OWORD *)(v0 + 465) = *(_OWORD *)(v0 + 697);
  sub_1BB24AD3C();
  v109 = (_QWORD *)(v99 + v98 + *(int *)(v78 + 24));
  *v109 = *(_QWORD *)(v0 + 648);
  v110 = *(_QWORD *)(v0 + 248);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v0 + 240))(v109, 0, 1, v110);
  *(_OWORD *)v103 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v103 + 16) = 0;
  *(_QWORD *)(v103 + 24) = 0;
  v111 = v103 + *(int *)(v78 + 28);
  *(_QWORD *)v111 = 0;
  *(_QWORD *)(v111 + 8) = 0;
  *(_BYTE *)(v111 + 16) = -1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 264))(v103, 0, 1, v78);
  sub_1BAF89090(0x676E697A69736552, 0xE800000000000000, 0, 0, v99, (_QWORD *)(v0 + 648));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v95[22] = &type metadata for FormatInspectionGroup;
  v95[23] = &off_1E72D2F60;
  v112 = swift_allocObject();
  v113 = *(_OWORD *)(v0 + 664);
  *(_OWORD *)(v112 + 16) = *(_OWORD *)(v0 + 648);
  *(_OWORD *)(v112 + 32) = v113;
  v114 = *(_OWORD *)(v5 - 208);
  *(_OWORD *)(v0 + 385) = *(_OWORD *)(v5 - 192);
  v115 = *(_OWORD *)(v5 - 160);
  *(_OWORD *)(v0 + 401) = *(_OWORD *)(v5 - 176);
  *(_OWORD *)(v0 + 417) = v115;
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 815);
  v116 = *(_OWORD *)(v5 - 224);
  *(_OWORD *)(v0 + 337) = *(_OWORD *)(v5 - 240);
  *(_OWORD *)(v0 + 353) = v116;
  v95[19] = v112;
  *(_QWORD *)(v112 + 48) = *(_QWORD *)(v0 + 680);
  v117 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 288) = v104;
  *(_QWORD *)(v0 + 296) = v117;
  v118 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 304) = v106;
  *(_QWORD *)(v0 + 312) = v118;
  v119 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 320) = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 328) = v119;
  *(_BYTE *)(v0 + 336) = *(_QWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 369) = v114;
  *(_QWORD *)(v0 + 448) = *(_QWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 465) = *(_OWORD *)(v0 + 697);
  *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 688);
  sub_1BB24B2CC();
  if (v120)
  {
    v121 = &off_1E7335C38;
    v122 = &type metadata for FormatInspection;
  }
  else
  {
    v122 = 0;
    v121 = 0;
    v95[25] = 0;
    v95[26] = 0;
  }
  v95[24] = v120;
  v95[27] = v122;
  v95[28] = v121;
  v123 = sub_1BB6DF010((uint64_t)v95);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v123;
}

uint64_t sub_1BB604CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  int64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD v49[2];
  __int128 v50;
  _QWORD *v51;
  __int128 *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int64_t v59;
  _OWORD v60[5];
  _OWORD v61[2];
  __int128 v62;
  uint64_t v63;
  _BYTE v64[40];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;

  v5 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8C88C8(0);
  v55 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v49[1] = v2;
    v74 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v11, 0);
    v53 = a2 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__bindings;
    swift_beginAccess();
    v51 = v10 + 16;
    v13 = (unsigned __int8 *)(a1 + 72);
    v50 = xmmword_1BB8D4900;
    v54 = v7;
    v52 = (__int128 *)v10;
    do
    {
      v59 = v11;
      swift_retain();
      sub_1BB86E494();
      swift_release();
      v14 = *v13;
      v15 = sub_1BACA5874(0, 0, (uint64_t)v7, (_QWORD *)v13 - 5);
      v56 = v16;
      sub_1BA4C010C((uint64_t)(v13 - 40), (uint64_t)&v62);
      __swift_project_boxed_opaque_existential_1((_QWORD *)v13 - 5, *((_QWORD *)v13 - 2));
      v17 = sub_1BB86DEE8();
      v19 = v18;
      v20 = *((_QWORD *)v7 + 12);
      v21 = *(_QWORD *)(v20 + 16);
      v58 = v14;
      v57 = v15;
      if (v21)
      {
        v22 = v17;
        swift_bridgeObjectRetain();
        v23 = sub_1BA6E35A8(v22, v19);
        if ((v24 & 1) != 0)
        {
          v25 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 48 * v23);
          v27 = *v25;
          v26 = v25[1];
          v29 = v25[2];
          v28 = v25[3];
          v31 = v25[4];
          v30 = v25[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v27 = 0;
          v26 = 0;
          v29 = 0;
          v28 = 0;
          v31 = 0;
          v30 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v27 = 0;
        v26 = 0;
        v29 = 0;
        v28 = 0;
        v31 = 0;
        v30 = 0;
      }
      swift_bridgeObjectRelease();
      sub_1BA4CECCC(&v62, (uint64_t)v64);
      v65 = v57;
      v66 = v56;
      v67 = v27;
      v68 = v26;
      v69 = v29;
      v70 = v28;
      v71 = v31;
      v72 = v30;
      v73 = v58;
      v7 = v54;
      sub_1BA4A2E80((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      sub_1BA4C2DD8((uint64_t)v64, (uint64_t)&v62, (uint64_t (*)(_QWORD))sub_1BAF35334);
      if (v63)
      {
        sub_1BAB05BDC((uint64_t)&v62, (uint64_t)v60);
        sub_1BA4A2E80((uint64_t)v64, (uint64_t (*)(_QWORD))sub_1BAF35334);
        v32 = type metadata accessor for FormatInspectionItem(0);
        v33 = v52;
        v34 = (__int128 *)((char *)v52 + *(int *)(v32 + 24));
        v35 = v61[0];
        v34[4] = v60[4];
        v34[5] = v35;
        *(_OWORD *)((char *)v34 + 89) = *(_OWORD *)((char *)v61 + 9);
        v36 = v60[1];
        *v34 = v60[0];
        v34[1] = v36;
        v37 = v60[3];
        v34[2] = v60[2];
        v34[3] = v37;
        v38 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v34, 0, 1, v38);
        *v33 = v50;
        v39 = v51;
        *v51 = 0;
        v39[1] = 0;
        v40 = (char *)v33 + *(int *)(v32 + 28);
        *(_QWORD *)v40 = 0;
        *((_QWORD *)v40 + 1) = 0;
        v40[16] = -1;
        sub_1BAB05C18((uint64_t)&v62);
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v64, (uint64_t (*)(_QWORD))sub_1BAF35334);
        v32 = type metadata accessor for FormatInspectionItem(0);
        v33 = v52;
        v41 = (char *)v52 + *(int *)(v32 + 24);
        v42 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
        *v33 = v50;
        v43 = v51;
        *v51 = 0;
        v43[1] = 0;
        v44 = (char *)v33 + *(int *)(v32 + 28);
        *(_QWORD *)v44 = 0;
        *((_QWORD *)v44 + 1) = 0;
        v44[16] = -1;
      }
      v45 = v59;
      type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(__int128 *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v33, 0, 1, v32);
      v12 = v74;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E1C(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v74;
      }
      v47 = *(_QWORD *)(v12 + 16);
      v46 = *(_QWORD *)(v12 + 24);
      if (v47 >= v46 >> 1)
      {
        sub_1BAC79E1C(v46 > 1, v47 + 1, 1);
        v12 = v74;
      }
      *(_QWORD *)(v12 + 16) = v47 + 1;
      sub_1BA5193C4((uint64_t)v33, v12+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v47, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v13 += 48;
      v11 = v45 - 1;
    }
    while (v11);
  }
  return v12;
}

unint64_t sub_1BB605150(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;

  v60 = a2;
  v59 = type metadata accessor for FormatScopedOption();
  v3 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v5 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for FormatOption();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v58 = (uint64_t)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v52 - v14);
  MEMORY[0x1E0C80A78](v16);
  v55 = (uint64_t)v52 - v19;
  v20 = *(_QWORD *)(a1 + 16);
  if (!v20)
    return MEMORY[0x1E0DEE9D8];
  v54 = (uint64_t *)v18;
  v21 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v22 = *(_QWORD *)(v3 + 72);
  v56 = v17;
  v57 = v22;
  v52[1] = a1;
  swift_bridgeObjectRetain();
  v61 = MEMORY[0x1E0DEE9D8];
  v53 = v10;
  do
  {
    sub_1BA4C2DD8(v21, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatScopedOption);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = v15;
      v24 = v5;
      v25 = (uint64_t)v5;
      v26 = v54;
      sub_1BA5193C4(v25, (uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v27 = *v26;
      v28 = v26[1];
      v29 = v26[2];
      swift_bridgeObjectRetain();
      v30 = v29;
      v31 = v62;
      sub_1BB30F658(v60, v30);
      if (v31)
      {
        swift_bridgeObjectRelease();

        v62 = 0;
        v32 = 1;
        v33 = (uint64_t)v26;
        v34 = v56;
        v5 = v24;
        v15 = v23;
        v10 = v53;
      }
      else
      {
        v40 = v63;
        *v8 = v27;
        v8[1] = v28;
        v8[2] = v40;
        v8[3] = 1;
        v34 = v56;
        v41 = (char *)v8 + *(int *)(v56 + 28);
        v42 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
        v32 = 0;
        v33 = (uint64_t)v26;
        v5 = v24;
        v15 = v23;
        v10 = v53;
        v62 = 0;
      }
    }
    else
    {
      sub_1BA5193C4((uint64_t)v5, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v35 = *v15;
      v36 = v15[1];
      v37 = v15[2];
      swift_bridgeObjectRetain();
      v38 = v37;
      v39 = v62;
      sub_1BB30F658(v60, v38);
      v62 = v39;
      if (v39)
      {
        swift_bridgeObjectRelease();

        v62 = 0;
        v32 = 1;
        v33 = (uint64_t)v15;
        v34 = v56;
      }
      else
      {
        v43 = v63;
        *v8 = v35;
        v8[1] = v36;
        v8[2] = v43;
        v8[3] = 1;
        v34 = v56;
        v44 = (char *)v8 + *(int *)(v56 + 28);
        v45 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
        v32 = 0;
        v33 = (uint64_t)v15;
      }
    }
    sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v32, 1, v34);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v34) == 1)
    {
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA856968);
    }
    else
    {
      v46 = v55;
      sub_1BA5193C4((uint64_t)v8, v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BA5193C4(v46, v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v47 = v61;
      else
        v47 = sub_1BA7AD174(0, *(_QWORD *)(v61 + 16) + 1, 1, v61);
      v49 = *(_QWORD *)(v47 + 16);
      v48 = *(_QWORD *)(v47 + 24);
      if (v49 >= v48 >> 1)
        v47 = sub_1BA7AD174(v48 > 1, v49 + 1, 1, v47);
      *(_QWORD *)(v47 + 16) = v49 + 1;
      v50 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v61 = v47;
      sub_1BA5193C4(v58, v47 + v50 + *(_QWORD *)(v10 + 72) * v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    }
    v21 += v57;
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
  return v61;
}

_QWORD *sub_1BB6055B8()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _BYTE v15[8];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;

  v1 = v0[11];
  v31 = v0[10];
  v32 = v1;
  v2 = v0[7];
  v27 = v0[6];
  v28 = v2;
  v3 = v0[9];
  v29 = v0[8];
  v30 = v3;
  v4 = v0[3];
  v23 = v0[2];
  v24 = v4;
  v5 = v0[5];
  v25 = v0[4];
  v26 = v5;
  v6 = v0[1];
  v21 = *v0;
  v22 = v6;
  v33 = *((_BYTE *)v0 + 192);
  sub_1BB24AFF4();
  v8 = v7;
  sub_1BB86D294();
  sub_1BB86D27C();
  if (qword_1ED3D5158 != -1)
    swift_once();
  sub_1BB86D270();
  swift_release();
  v15[0] = 0;
  v15[1] = v21;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0;
  v20 = v8;
  sub_1BB24AFF4();
  swift_retain();
  swift_release();
  v9 = sub_1BB62E78C();
  swift_release();
  sub_1BA70A884(0, 0);
  swift_retain();
  v10 = sub_1BB605150(v9, (uint64_t)v15);
  swift_bridgeObjectRelease();
  sub_1BA70AB94(0, 0);
  swift_bridgeObjectRelease();
  swift_release();
  v11 = sub_1BB0ABA40(v10);
  swift_bridgeObjectRelease();
  v12 = sub_1BA9752A4(v11);
  swift_bridgeObjectRelease();
  v13 = sub_1BB6DF010(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70AB94(0, 0);
  swift_release();
  return v13;
}

uint64_t sub_1BB60580C()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void (*v56)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  __int128 v67;
  _QWORD *v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  char v97;
  _OWORD v98[2];
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  char v112;

  sub_1BB1484DC(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (uint64_t *)((char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v70 - v5);
  sub_1BA8C88C8(0);
  v8 = *(_QWORD *)(v7 - 8);
  v81 = v7;
  v82 = v8;
  MEMORY[0x1E0C80A78](v7);
  v79 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v75 = (uint64_t)&v70 - v11;
  MEMORY[0x1E0C80A78](v12);
  v78 = (unint64_t)&v70 - v13;
  MEMORY[0x1E0C80A78](v14);
  v74 = (uint64_t)&v70 - v15;
  v16 = v0[11];
  v110 = v0[10];
  v111 = v16;
  v112 = *((_BYTE *)v0 + 192);
  v17 = v0[7];
  v106 = v0[6];
  v107 = v17;
  v18 = v0[9];
  v108 = v0[8];
  v109 = v18;
  v19 = v0[3];
  v102 = v0[2];
  v103 = v19;
  v20 = v0[5];
  v104 = v0[4];
  v105 = v20;
  v21 = v0[1];
  v100 = *v0;
  v101 = v21;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v94 = v109;
  v95 = v110;
  v96 = v111;
  v97 = v112;
  v92 = v107;
  v93 = v108;
  v87 = v102;
  v88 = v103;
  v90 = v105;
  v91 = v106;
  v89 = v104;
  v85 = v100;
  v86 = v101;
  *(_QWORD *)&v85 = sub_1BB24AF48();
  swift_bridgeObjectRetain();
  sub_1BA5BBDDC((uint64_t *)&v85);
  v71 = 0;
  swift_bridgeObjectRelease();
  v23 = v85;
  v24 = *(_QWORD *)(v85 + 16);
  v80 = v3;
  v72 = inited;
  if (v24)
  {
    v73 = v6 + 2;
    swift_retain();
    v77 = sub_1BA8EC684();
    v76 = (_QWORD *)sub_1BA8EC6C8();
    v70 = v23;
    v25 = (uint64_t *)(v23 + 40);
    v26 = MEMORY[0x1E0DEE9D8];
    do
    {
      v28 = *(v25 - 1);
      v27 = *v25;
      *(_QWORD *)&v85 = v28;
      *((_QWORD *)&v85 + 1) = v27;
      *(_QWORD *)&v98[0] = 36;
      *((_QWORD *)&v98[0] + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      if ((sub_1BB8728C8() & 1) != 0)
      {
        v29 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 1, 1, v29);
      }
      else
      {
        v30 = type metadata accessor for FormatInspectionItem(0);
        v31 = (_QWORD *)((char *)v6 + *(int *)(v30 + 24));
        *v31 = 0;
        v31[1] = 0xE000000000000000;
        v32 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        v33 = v31;
        v3 = v80;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v33, 0, 1, v32);
        *v6 = v28;
        v6[1] = v27;
        v34 = v73;
        *v73 = 0;
        v34[1] = 0;
        v35 = (char *)v6 + *(int *)(v30 + 28);
        *(_QWORD *)v35 = 0;
        *((_QWORD *)v35 + 1) = 0;
        v35[16] = -1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v6, 0, 1, v30);
        swift_bridgeObjectRetain();
      }
      v36 = v81;
      v37 = v82;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v6, 0, 1, v81);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v37 + 48))(v6, 1, v36) == 1)
      {
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BB1484DC);
      }
      else
      {
        v38 = v74;
        sub_1BA5193C4((uint64_t)v6, v74, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
        sub_1BA5193C4(v38, v78, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1BB38CBE8(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
        v40 = *(_QWORD *)(v26 + 16);
        v39 = *(_QWORD *)(v26 + 24);
        if (v40 >= v39 >> 1)
          v26 = sub_1BB38CBE8(v39 > 1, v40 + 1, 1, v26);
        *(_QWORD *)(v26 + 16) = v40 + 1;
        sub_1BA5193C4(v78, v26+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(_QWORD *)(v82 + 72) * v40, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      }
      v25 += 2;
      --v24;
    }
    while (v24);
    swift_release();
    inited = v72;
  }
  else
  {
    v26 = MEMORY[0x1E0DEE9D8];
  }
  swift_release();
  sub_1BAF89090(0x726F7463656C6553, 0xE900000000000073, 0, 0, v26, v98);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v41 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v41;
  v42 = v98[1];
  *(_OWORD *)(v41 + 16) = v98[0];
  *(_OWORD *)(v41 + 32) = v42;
  v43 = v108;
  v94 = v109;
  v95 = v110;
  v96 = v111;
  v45 = v106;
  v44 = v107;
  *(_QWORD *)(v41 + 48) = v99;
  v97 = v112;
  v92 = v44;
  v93 = v43;
  v87 = v102;
  v88 = v103;
  v90 = v105;
  v91 = v45;
  v89 = v104;
  v85 = v100;
  v86 = v101;
  *(_QWORD *)&v85 = sub_1BB24AF48();
  swift_bridgeObjectRetain();
  v46 = v71;
  sub_1BA5BBDDC((uint64_t *)&v85);
  if (v46)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    v74 = inited + 32;
    swift_bridgeObjectRelease();
    v47 = (_QWORD *)v85;
    v48 = *(_QWORD *)(v85 + 16);
    if (v48)
    {
      v76 = v3 + 2;
      swift_retain();
      v78 = sub_1BA8EC684();
      v77 = sub_1BA8EC6C8();
      v73 = v47;
      v49 = v47 + 5;
      v50 = MEMORY[0x1E0DEE9D8];
      do
      {
        v52 = *(v49 - 1);
        v51 = *v49;
        *(_QWORD *)&v85 = v52;
        *((_QWORD *)&v85 + 1) = v51;
        v83 = 36;
        v84 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        if ((sub_1BB8728C8() & 1) != 0)
        {
          v53 = type metadata accessor for FormatInspectionItem(0);
          v54 = (_QWORD *)((char *)v3 + *(int *)(v53 + 24));
          *v54 = 0;
          v54[1] = 0xE000000000000000;
          v55 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          v56 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
          v57 = v55;
          v3 = v80;
          v56(v54, 0, 1, v57);
          *v3 = v52;
          v3[1] = v51;
          v58 = v76;
          *v76 = 0;
          v58[1] = 0;
          v59 = (char *)v3 + *(int *)(v53 + 28);
          *(_QWORD *)v59 = 0;
          *((_QWORD *)v59 + 1) = 0;
          v59[16] = -1;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v3, 0, 1, v53);
          swift_bridgeObjectRetain();
        }
        else
        {
          v60 = type metadata accessor for FormatInspectionItem(0);
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v3, 1, 1, v60);
        }
        v61 = v81;
        v62 = v82;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v3, 0, 1, v81);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v62 + 48))(v3, 1, v61) == 1)
        {
          sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BB1484DC);
        }
        else
        {
          v63 = v75;
          sub_1BA5193C4((uint64_t)v3, v75, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
          sub_1BA5193C4(v63, v79, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v50 = sub_1BB38CBE8(0, *(_QWORD *)(v50 + 16) + 1, 1, v50);
          v65 = *(_QWORD *)(v50 + 16);
          v64 = *(_QWORD *)(v50 + 24);
          if (v65 >= v64 >> 1)
            v50 = sub_1BB38CBE8(v64 > 1, v65 + 1, 1, v50);
          *(_QWORD *)(v50 + 16) = v65 + 1;
          sub_1BA5193C4(v79, v50+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(_QWORD *)(v82 + 72) * v65, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
        }
        v49 += 2;
        --v48;
      }
      while (v48);
      swift_release();
      inited = v72;
    }
    else
    {
      v50 = MEMORY[0x1E0DEE9D8];
    }
    swift_release();
    sub_1BAF89090(0xD000000000000010, 0x80000001BB993DB0, 0, 0, v50, &v85);
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(inited + 104) = &off_1E72D2F60;
    v66 = swift_allocObject();
    *(_QWORD *)(inited + 72) = v66;
    *(_QWORD *)(v66 + 48) = v87;
    v67 = v86;
    *(_OWORD *)(v66 + 16) = v85;
    *(_OWORD *)(v66 + 32) = v67;
    v68 = sub_1BB6DF010(inited);
    swift_setDeallocating();
    sub_1BA89EA04(0);
    swift_arrayDestroy();
    return (uint64_t)v68;
  }
  return result;
}

uint64_t sub_1BB6060C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double FeedPuzzleProgress.progress.getter()
{
  _BYTE *v0;
  double result;

  result = 0.0;
  if (v0[8] == 1)
    result = *(double *)v0;
  if (!v0[8])
    return *(double *)v0;
  return result;
}

BOOL FeedPuzzleProgress.isCompleted.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 8) == 1;
}

uint64_t FeedPuzzleProgress.rawState.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (*(_BYTE *)(v1 + 8) && *(_BYTE *)(v1 + 8) != 1)
    *a1 = 0;
  else
    *a1 = *(_QWORD *)v1;
  v3 = *MEMORY[0x1E0DB7730];
  v4 = sub_1BB86FB08();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, v3, v4);
}

BOOL static FeedPuzzleProgress.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  int v3;

  v2 = *(double *)a2;
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) != 1)
      return v3 == 2 && *(_QWORD *)&v2 == 0;
    if (v3 != 1)
      return 0;
  }
  else if (*(_BYTE *)(a2 + 8))
  {
    return 0;
  }
  return *(double *)a1 == v2;
}

BOOL sub_1BB6061EC(uint64_t a1, uint64_t a2)
{
  double v2;
  int v3;

  v2 = *(double *)a2;
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a2 + 8))
      return 0;
    return *(double *)a1 == v2;
  }
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    if (v3 != 1)
      return 0;
    return *(double *)a1 == v2;
  }
  return v3 == 2 && *(_QWORD *)&v2 == 0;
}

uint64_t sub_1BB606250@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (*(_BYTE *)(v1 + 8) && *(_BYTE *)(v1 + 8) != 1)
    *a1 = 0;
  else
    *a1 = *(_QWORD *)v1;
  v3 = *MEMORY[0x1E0DB7730];
  v4 = sub_1BB86FB08();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, v3, v4);
}

uint64_t LikingCommandContext.init(headline:feedItemIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t static UIActivityType.showMore.getter()
{
  return sub_1BB872970();
}

uint64_t static UIActivityType.showLess.getter()
{
  return sub_1BB872970();
}

uint64_t static Commands.Liking.likingComplete.getter()
{
  return sub_1BA499934(&qword_1ED3C4B48);
}

uint64_t LikingCommandContext.headline.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t LikingCommandContext.feedItemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL static LikingCompleteCommandState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LikingCompleteCommandState.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t LikingCompleteCommandState.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t static SwipeAction.like(context:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t ObjCClassFromMetadata;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v38 = a2;
  v3 = sub_1BB86F628();
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86F634();
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4ADFA4(0, &qword_1ED39A758, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DB8368]);
  MEMORY[0x1E0C80A78](v7);
  sub_1BB60820C(0, &qword_1ED39C3D0, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v8);
  sub_1BB60820C(0, &qword_1ED39C3C8, MEMORY[0x1E0DB8310]);
  MEMORY[0x1E0C80A78](v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  if (qword_1ED3BA858 != -1)
    swift_once();
  v13 = qword_1ED3C4B50;
  v43 = v10;
  v44 = v11;
  v45 = v12;
  sub_1BA748DB8();
  swift_bridgeObjectRetain();
  v31[1] = v13;
  swift_retain();
  swift_unknownObjectRetain();
  v14._countAndFlagsBits = 0x433830434335;
  v14._object = (void *)0xE600000000000000;
  UIColor.init(hex:)(v14);
  sub_1BB87000C();
  if (qword_1ED39E9D8 != -1)
    swift_once();
  v15 = (void *)qword_1ED39BD78;
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_whiteColor);
  _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v15, v17);

  if (qword_1ED39E9F0 != -1)
    swift_once();
  v18 = (void *)qword_1ED39BD80;
  v19 = objc_msgSend(v16, sel_whiteColor);
  _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v18, v19);

  sub_1BB870024();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(v21, sel_bundleForClass_, ObjCClassFromMetadata);
  v23 = sub_1BB86C340();
  v25 = v24;

  v41 = v23;
  v42 = v25;
  v26 = objc_msgSend(v21, sel_bundleForClass_, ObjCClassFromMetadata);
  v27 = sub_1BB86C340();
  v29 = v28;

  v39 = v27;
  v40 = v29;
  sub_1BB870054();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v34, *MEMORY[0x1E0DB6BB0], v33);
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v37, *MEMORY[0x1E0DB6BA0], v36);
  return sub_1BB86F64C();
}

uint64_t static SwipeAction.dislike(context:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t ObjCClassFromMetadata;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v38 = a2;
  v3 = sub_1BB86F628();
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86F634();
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4ADFA4(0, &qword_1ED39A758, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DB8368]);
  MEMORY[0x1E0C80A78](v7);
  sub_1BB60820C(0, &qword_1ED39C3D0, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v8);
  sub_1BB60820C(0, &qword_1ED39C3C8, MEMORY[0x1E0DB8310]);
  MEMORY[0x1E0C80A78](v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  if (qword_1ED3BA8C0 != -1)
    swift_once();
  v13 = qword_1ED3C4B58;
  v43 = v10;
  v44 = v11;
  v45 = v12;
  v14 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v31[1] = v13;
  swift_retain();
  swift_unknownObjectRetain();
  v15 = objc_msgSend(v14, sel_systemRedColor);
  sub_1BB87000C();
  if (qword_1ED39E9C8 != -1)
    swift_once();
  v16 = (void *)qword_1ED39D8F8;
  v17 = objc_msgSend(v14, sel_whiteColor);
  _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v16, v17);

  if (qword_1ED39E9E0 != -1)
    swift_once();
  v18 = (void *)qword_1ED39D920;
  v19 = objc_msgSend(v14, sel_whiteColor);
  _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v18, v19);

  sub_1BB870024();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(v21, sel_bundleForClass_, ObjCClassFromMetadata);
  v23 = sub_1BB86C340();
  v25 = v24;

  v41 = v23;
  v42 = v25;
  v26 = objc_msgSend(v21, sel_bundleForClass_, ObjCClassFromMetadata);
  v27 = sub_1BB86C340();
  v29 = v28;

  v39 = v27;
  v40 = v29;
  sub_1BB870054();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v34, *MEMORY[0x1E0DB6BB0], v33);
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v37, *MEMORY[0x1E0DB6BA0], v36);
  return sub_1BB86F64C();
}

uint64_t static KeyCommandItem.like(context:)()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  sub_1BA4ADFA4(0, &qword_1ED39A758, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DB8368]);
  MEMORY[0x1E0C80A78](v0);
  if (qword_1ED3BA858 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BB870054();
  return sub_1BB86F964();
}

uint64_t static KeyCommandItem.dislike(context:)()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  sub_1BA4ADFA4(0, &qword_1ED39A758, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DB8368]);
  MEMORY[0x1E0C80A78](v0);
  if (qword_1ED3BA8C0 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BB870054();
  return sub_1BB86F964();
}

uint64_t _s5TeaUI15SharingActivityC8NewsFeedE4like7contextAcD20LikingCommandContextV_tFZ_0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v27 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v2);
  sub_1BB6081A8();
  MEMORY[0x1E0C80A78](v3);
  v22[0] = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4ADFA4(0, &qword_1ED39A758, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DB8368]);
  MEMORY[0x1E0C80A78](v5);
  v6 = *a1;
  v24 = a1[1];
  v7 = a1[2];
  if (qword_1ED3BA858 != -1)
    swift_once();
  v8 = qword_1ED3C4B50;
  v23 = v7;
  swift_bridgeObjectRetain();
  v26 = v8;
  swift_retain();
  v25 = v6;
  swift_unknownObjectRetain();
  v22[1] = sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = sub_1BB86C340();
  v14 = v13;

  v28 = v12;
  v29 = v14;
  v15 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  v16 = sub_1BB86C340();
  v18 = v17;

  v31 = v16;
  v32 = v18;
  sub_1BB870054();
  if (qword_1ED39E9D8 != -1)
    swift_once();
  v19 = (id)qword_1ED39BD78;
  sub_1BB8703D8();
  if (qword_1ED39E9F0 != -1)
    swift_once();
  v20 = (id)qword_1ED39BD80;
  sub_1BB8703D8();
  sub_1BB870054();
  v28 = v25;
  v29 = v24;
  v30 = v23;
  sub_1BB86FCA0();
  swift_allocObject();
  return sub_1BB86FC88();
}

uint64_t _s5TeaUI15SharingActivityC8NewsFeedE7dislike7contextAcD20LikingCommandContextV_tFZ_0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v27 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v2);
  sub_1BB6081A8();
  MEMORY[0x1E0C80A78](v3);
  v22[0] = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4ADFA4(0, &qword_1ED39A758, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DB8368]);
  MEMORY[0x1E0C80A78](v5);
  v6 = *a1;
  v24 = a1[1];
  v7 = a1[2];
  if (qword_1ED3BA8C0 != -1)
    swift_once();
  v8 = qword_1ED3C4B58;
  v23 = v7;
  swift_bridgeObjectRetain();
  v26 = v8;
  swift_retain();
  v25 = v6;
  swift_unknownObjectRetain();
  v22[1] = sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = sub_1BB86C340();
  v14 = v13;

  v28 = v12;
  v29 = v14;
  v15 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  v16 = sub_1BB86C340();
  v18 = v17;

  v31 = v16;
  v32 = v18;
  sub_1BB870054();
  if (qword_1ED39E9C8 != -1)
    swift_once();
  v19 = (id)qword_1ED39D8F8;
  sub_1BB8703D8();
  if (qword_1ED39E9E0 != -1)
    swift_once();
  v20 = (id)qword_1ED39D920;
  sub_1BB8703D8();
  sub_1BB870054();
  v28 = v25;
  v29 = v24;
  v30 = v23;
  sub_1BB86FCA0();
  swift_allocObject();
  return sub_1BB86FC88();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE4like7contextAcD013LikingCommandC0V_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;

  sub_1BB60820C(0, &qword_1ED3A3E88, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v0);
  sub_1BB60820C(0, &qword_1ED39C3D0, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v1);
  sub_1BB60820C(0, qword_1ED3A3DF0, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v2);
  if (qword_1ED3BA858 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  v5 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v6 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BB87003C();
  if (qword_1ED39E9D8 != -1)
    swift_once();
  v7 = qword_1ED39E9F0;
  v8 = (id)qword_1ED39BD78;
  if (v7 != -1)
    swift_once();
  v9 = (id)qword_1ED39BD80;
  sub_1BB870024();
  sub_1BB870348();
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB2C();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE7dislike7contextAcD013LikingCommandC0V_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;

  sub_1BB60820C(0, &qword_1ED3A3E88, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v0);
  sub_1BB60820C(0, &qword_1ED39C3D0, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v1);
  sub_1BB60820C(0, qword_1ED3A3DF0, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v2);
  if (qword_1ED3BA8C0 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  v5 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v6 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BB87003C();
  if (qword_1ED39E9C8 != -1)
    swift_once();
  v7 = qword_1ED39E9E0;
  v8 = (id)qword_1ED39D8F8;
  if (v7 != -1)
    swift_once();
  v9 = (id)qword_1ED39D920;
  sub_1BB870024();
  sub_1BB870348();
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB2C();
}

unint64_t sub_1BB608088()
{
  unint64_t result;

  result = qword_1EF2C8E18;
  if (!qword_1EF2C8E18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LikingCompleteCommandState, &type metadata for LikingCompleteCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2C8E18);
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.Liking()
{
  return &type metadata for Commands.Liking;
}

uint64_t storeEnumTagSinglePayload for LikingCompleteCommandState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB608128 + 4 * byte_1BB933385[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB60815C + 4 * byte_1BB933380[v4]))();
}

uint64_t sub_1BB60815C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB608164(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB60816CLL);
  return result;
}

uint64_t sub_1BB608178(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB608180);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB608184(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB60818C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LikingCompleteCommandState()
{
  return &type metadata for LikingCompleteCommandState;
}

void sub_1BB6081A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C8E20)
  {
    sub_1BB8703E4();
    v0 = sub_1BB870060();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C8E20);
  }
}

void sub_1BB60820C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DBCA78]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t FormatFrameExpression.targetIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatFrameExpression.logic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(a1 + 24) = v5;
  return sub_1BAA37668(v2, v3, v4, v5);
}

uint64_t sub_1BB6082A8(char *a1, uint64_t a2, uint64_t a3)
{
  char v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  _BYTE v17[40];
  _QWORD v18[4];
  char v19;
  CGRect v20;
  CGRect v21;

  sub_1BA717D44(*(_QWORD *)a3, *(_QWORD *)(a3 + 8));
  sub_1BA75C00C();
  sub_1BB86DBAC();
  sub_1BB86D6C0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA739A14((uint64_t)v17, (uint64_t)v18);
  if ((v19 & 1) == 0)
  {
    v8 = *(double *)v18;
    v7 = *(double *)&v18[1];
    v10 = *(double *)&v18[2];
    v9 = *(double *)&v18[3];
    v12 = *(_QWORD *)(a3 + 16);
    v11 = *(_QWORD *)(a3 + 24);
    v13 = *(_QWORD *)(a3 + 32);
    v14 = *(unsigned __int8 *)(a3 + 40);
    if (v14 >> 6)
    {
      if (v14 >> 6 != 1)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1BB123080(v8, v7, v10, v9, a2, a1);
        goto LABEL_9;
      }
      swift_bridgeObjectRetain();
      v20.origin.x = v8;
      v20.origin.y = v7;
      v20.size.width = v10;
      v20.size.height = v9;
      CGRectGetHeight(v20);
    }
    else
    {
      swift_bridgeObjectRetain();
      v21.origin.x = v8;
      v21.origin.y = v7;
      v21.size.width = v10;
      v21.size.height = v9;
      CGRectGetWidth(v21);
    }
    sub_1BB4334B0();
LABEL_9:
    v6 = v15;
    sub_1BAA376C0(v12, v11, v13, v14);
    return v6 & 1;
  }
  v6 = 0;
  return v6 & 1;
}

uint64_t sub_1BB608454@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFrameExpression.init(from:)(a1, a2);
}

uint64_t sub_1BB608468(_QWORD *a1)
{
  return FormatFrameExpression.encode(to:)(a1);
}

uint64_t _s8NewsFeed21FormatFrameExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  uint64_t v6;
  char v7;
  BOOL v8;
  char v9;
  char v10;
  char v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 40);
  v5 = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v8
    || (v13 = *(_OWORD *)(a2 + 16),
        v14 = *(_OWORD *)(a1 + 16),
        v9 = sub_1BB874398(),
        v5 = v13,
        v2 = v14,
        v10 = v9,
        v11 = 0,
        (v10 & 1) != 0))
  {
    v18 = v2;
    v19 = v3;
    v20 = v4;
    v15 = v5;
    v16 = v6;
    v17 = v7;
    v11 = _s8NewsFeed26FormatFrameExpressionLogicO2eeoiySbAC_ACtFZ_0((uint64_t)&v18, (uint64_t)&v15);
  }
  return v11 & 1;
}

unint64_t sub_1BB608524(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB608548();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB608548()
{
  unint64_t result;

  result = qword_1EF2C8E28;
  if (!qword_1EF2C8E28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpression, &type metadata for FormatFrameExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C8E28);
  }
  return result;
}

unint64_t sub_1BB60858C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8FBF8();
  a1[2] = sub_1BAEF39D4();
  result = sub_1BB6085C0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6085C0()
{
  unint64_t result;

  result = qword_1EF2C8E30;
  if (!qword_1EF2C8E30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpression, &type metadata for FormatFrameExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C8E30);
  }
  return result;
}

uint64_t destroy for FormatFrameExpression(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1BAA376C0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for FormatFrameExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_1BAA37668(v4, v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  return a1;
}

uint64_t assignWithCopy for FormatFrameExpression(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[2];
  v5 = v2[3];
  v6 = v2[4];
  LOBYTE(v2) = *((_BYTE *)v2 + 40);
  sub_1BAA37668(v4, v5, v6, v2);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v10 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = (_BYTE)v2;
  sub_1BAA376C0(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatFrameExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v5;
  v10 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v6;
  sub_1BAA376C0(v7, v8, v9, v10);
  return a1;
}

ValueMetadata *type metadata accessor for FormatFrameExpression()
{
  return &type metadata for FormatFrameExpression;
}

ValueMetadata *type metadata accessor for A18_V11()
{
  return &type metadata for A18_V11;
}

uint64_t sub_1BB6087A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C8F60, (uint64_t (*)(void))sub_1BB60AAA8, (uint64_t)&type metadata for A18_V11.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB60AAA8();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB60895C()
{
  sub_1BB60AAA8();
  return sub_1BB874710();
}

uint64_t sub_1BB608984()
{
  sub_1BB60AAA8();
  return sub_1BB87471C();
}

double sub_1BB6089AC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB60A894(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB6089F0(_QWORD *a1)
{
  return sub_1BB6087A8(a1);
}

uint64_t sub_1BB608A04()
{
  sub_1BB60A614();
  return sub_1BB86D96C();
}

uint64_t sub_1BB608A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  __int128 v64;
  unsigned __int8 v65;
  ValueMetadata *v66;
  unint64_t v67;
  uint64_t v68;

  v53 = a2;
  v46 = a3;
  v47 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  MEMORY[0x1E0C80A78](v9);
  v56 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  v52 = type metadata accessor for GroupLayoutBindingContext();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v50 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v57 = a1;
  sub_1BA4C2DD8(a1, v50, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v49 = sub_1BB86C8C8();
  v48 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v47);
  v66 = &type metadata for A18_V11;
  v20 = sub_1BA8EE22C();
  v67 = v20;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v58 = sub_1BB874734();
  v59 = v22;
  v62 = 95;
  v63 = 0xE100000000000000;
  v60 = 45;
  v61 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v48;
  *v26 = v49;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v64, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v29, 0, 1, v55);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  sub_1BA7C2538(v16, v17);
  v66 = &type metadata for A18_V11;
  v67 = v20;
  v30 = v56;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  sub_1BA4C2DD8(v53, v56, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v31 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v31 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v31 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v68;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E726A290, 0, 0, v31, 0, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  }
  else
  {
    v41 = v39;
    swift_release();
    v42 = type metadata accessor for A18_V11.Bound();
    v43 = v46;
    v46[3] = v42;
    v43[4] = sub_1BA4A2870(&qword_1EF2C8E48, (uint64_t (*)(uint64_t))type metadata accessor for A18_V11.Bound, (uint64_t)&unk_1BB933640);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v43);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v64, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v30, (uint64_t)boxed_opaque_existential_0 + *(int *)(v42 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v42 + 28)) = v41;
  }
  return result;
}

uint64_t sub_1BB608F84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _QWORD v28[2];
  __int128 v29;
  _BYTE *v30;
  uint64_t v31;
  _QWORD v32[4];
  uint64_t v33;
  char v34[105];
  __int128 v35[2];
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[6];

  v2 = v1;
  v30 = a1;
  *(_QWORD *)&v29 = sub_1BB86DA38();
  v3 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A18_V11.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + *(int *)(v8 + 40)) + 16);
  v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BA4C010C(v9 + 16, (uint64_t)&v36);
  sub_1BA4C010C(v9 + 56, (uint64_t)v35);
  v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(&v36, inited + 16);
  sub_1BA4CECCC(v35, inited + 56);
  *(double *)(inited + 96) = v11;
  v34[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v34, v40);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  v13 = *(_QWORD *)(v2 + *(int *)(v6 + 28));
  v32[2] = v2;
  v32[3] = v40;
  swift_bridgeObjectRetain();
  v14 = sub_1BA8A1BE4((void (*)(uint64_t))sub_1BA7F373C, (uint64_t)v32, v13, (uint64_t)&v33);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v36 = v14;
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v16 = v15;
  sub_1BA8F1DA0(&qword_1EF2A9F08, MEMORY[0x1E0DEAF50]);
  v28[1] = v16;
  v17 = sub_1BB8730F0();
  v18 = *MEMORY[0x1E0DB5D88];
  v19 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v5, v18, v19);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0DB6200], v29);
  v31 = v17;
  sub_1BB60A6B8(0, &qword_1EF2C8EF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v20 = sub_1BB86DB40();
  v29 = v36;
  v21 = v37;
  v22 = v38;
  *(_QWORD *)&v36 = v14;
  *(_QWORD *)&v35[0] = v39;
  MEMORY[0x1E0C80A78](v20);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA8F1DA0((unint64_t *)&qword_1ED3B94C0, MEMORY[0x1E0DEAF38]);
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v23 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v36 = v23;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v24 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v25 = v30;
  *v30 = 0;
  *(_OWORD *)(v25 + 8) = v29;
  *((_QWORD *)v25 + 3) = v21;
  *((_QWORD *)v25 + 4) = v22;
  v26 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v25 + 5) = v24;
  *((_QWORD *)v25 + 6) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t sub_1BB6093AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1EF2C8F08, (uint64_t (*)(void))sub_1BB60A5D0, (uint64_t)&type metadata for A18_V11.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 18;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BB60A6B8(0, &qword_1EF2C8F10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB60A678(&qword_1EF2C8F18, &qword_1EF2C8F10, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BB609504(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v15)(uint64_t, _QWORD *);
  void (*v16)(uint64_t *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a1;
  sub_1BA4CDF6C(0, &qword_1EF2C8F08, (uint64_t (*)(void))sub_1BB60A5D0, (uint64_t)&type metadata for A18_V11.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v4 = v3;
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v18 - v5);
  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    v21 = *MEMORY[0x1E0DB5A38];
    v20 = *MEMORY[0x1E0DB6318];
    v19 = *MEMORY[0x1E0DB6410];
    swift_bridgeObjectRetain();
    v8 = 0;
    v22 = v7;
    v23 = a2;
    v9 = v25;
    do
    {
      if (*(_QWORD *)(*(_QWORD *)(a2 + 8 * v8 + 32) + 16) == 3)
      {
        v26 = v9;
        v10 = sub_1BB86D438();
        v11 = swift_allocBox();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, v21, v10);
        *v6 = v11;
        v13 = v24;
        v14 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v24 + 104);
        v14(v6, v20, v4);
        v15 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
        sub_1BB60A6B8(0, &qword_1EF2C8F20, MEMORY[0x1E0DB5A10]);
        sub_1BB60A678(&qword_1EF2C8F28, &qword_1EF2C8F20, v15, MEMORY[0x1E0DB5A18]);
        swift_bridgeObjectRetain();
        sub_1BB86D4EC();
        v16 = *(void (**)(uint64_t *, uint64_t))(v13 + 8);
        v16(v6, v4);
        v26 = v9;
        v17 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v14)(v6, v19, v4);
        MEMORY[0x1E0C80A78](v17);
        sub_1BB86D498();
        v7 = v22;
        a2 = v23;
        v16(v6, v4);
        swift_bridgeObjectRelease();
      }
      ++v8;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB609768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C8F08, (uint64_t (*)(void))sub_1BB60A5D0, (uint64_t)&type metadata for A18_V11.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v18 - v7);
  v23 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v22 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB60A6B8(0, &qword_1EF2C8F20, MEMORY[0x1E0DB5A10]);
  sub_1BB60A678(&qword_1EF2C8F28, &qword_1EF2C8F20, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v23 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 6;
  *v8 = v14;
  v11(v8, v10, v5);
  v15 = v19;
  v21 = v19;
  sub_1BB86D4BC();
  v13(v8, v5);
  v23 = a1;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 6;
  *v8 = v16;
  v11(v8, v10, v5);
  v20 = v15;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BB6099D0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C8F08, (uint64_t (*)(void))sub_1BB60A5D0, (uint64_t)&type metadata for A18_V11.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16))
  {
    v14 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    v15 = a2 + ((v14 + 32) & ~v14);
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB60A6B8(0, &qword_1EF2C8F20, MEMORY[0x1E0DB5A10]);
    sub_1BB60A678(&qword_1EF2C8F28, &qword_1EF2C8F20, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB609C84(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C8F08, (uint64_t (*)(void))sub_1BB60A5D0, (uint64_t)&type metadata for A18_V11.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for HeadlineViewLayout.Context(0);
    v15 = a2
        + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72)
        + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80));
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB60A6B8(0, &qword_1EF2C8F20, MEMORY[0x1E0DB5A10]);
    sub_1BB60A678(&qword_1EF2C8F28, &qword_1EF2C8F20, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1BB609F44(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C8F08, (uint64_t (*)(void))sub_1BB60A5D0, (uint64_t)&type metadata for A18_V11.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for HeadlineViewLayout.Context(0);
    v15 = a2
        + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))
        + 2 * *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72);
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB60A6B8(0, &qword_1EF2C8F20, MEMORY[0x1E0DB5A10]);
    sub_1BB60A678(&qword_1EF2C8F28, &qword_1EF2C8F20, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1BB60A204@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A18_V11.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB60A2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB608A6C(a1, a2, a3);
}

uint64_t sub_1BB60A2F8()
{
  return sub_1BB6909EC();
}

unint64_t sub_1BB60A308(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB60A334();
  result = sub_1BB60A378();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB60A334()
{
  unint64_t result;

  result = qword_1EF2C8E38;
  if (!qword_1EF2C8E38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93358C, &type metadata for A18_V11);
    atomic_store(result, (unint64_t *)&qword_1EF2C8E38);
  }
  return result;
}

unint64_t sub_1BB60A378()
{
  unint64_t result;

  result = qword_1EF2C8E40;
  if (!qword_1EF2C8E40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9335B4, &type metadata for A18_V11);
    atomic_store(result, (unint64_t *)&qword_1EF2C8E40);
  }
  return result;
}

uint64_t type metadata accessor for A18_V11.Bound()
{
  uint64_t result;

  result = qword_1EF2C8EA8;
  if (!qword_1EF2C8EA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB60A3F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB60A404(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB60A480()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB60A48C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB60A500()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB60A58C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C8EE8, (uint64_t (*)(uint64_t))type metadata accessor for A18_V11.Bound, (uint64_t)&unk_1BB933618);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB60A5C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB6093AC(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BB60A5D0()
{
  unint64_t result;

  result = qword_1EF2C8EF8;
  if (!qword_1EF2C8EF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933770, &type metadata for A18_V11.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2C8EF8);
  }
  return result;
}

unint64_t sub_1BB60A614()
{
  unint64_t result;

  result = qword_1EF2C8F00;
  if (!qword_1EF2C8F00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933740, &type metadata for A18_V11.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C8F00);
  }
  return result;
}

uint64_t sub_1BB60A658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB60A204(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB60A660()
{
  return swift_deallocObject();
}

void sub_1BB60A670(uint64_t a1)
{
  uint64_t v1;

  sub_1BB609504(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB60A678(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB60A6B8(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB60A6B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A18_V11.Layout;
    v8[1] = &type metadata for A18_V11.Layout.Attributes;
    v8[2] = sub_1BB60A5D0();
    v8[3] = sub_1BB60A614();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB60A734(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB609768(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB60A73C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB6099D0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB60A744(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB609C84(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB60A74C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB609F44(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V11.Layout.Attributes()
{
  return &type metadata for A18_V11.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V11.Layout()
{
  return &type metadata for A18_V11.Layout;
}

unint64_t sub_1BB60A778()
{
  unint64_t result;

  result = qword_1EF2C8F30;
  if (!qword_1EF2C8F30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9336E0, &type metadata for A18_V11.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C8F30);
  }
  return result;
}

unint64_t sub_1BB60A7C0()
{
  unint64_t result;

  result = qword_1EF2C8F38;
  if (!qword_1EF2C8F38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9336B8, &type metadata for A18_V11.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C8F38);
  }
  return result;
}

unint64_t sub_1BB60A808()
{
  unint64_t result;

  result = qword_1EF2C8F40;
  if (!qword_1EF2C8F40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933690, &type metadata for A18_V11.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C8F40);
  }
  return result;
}

unint64_t sub_1BB60A850()
{
  unint64_t result;

  result = qword_1EF2C8F48;
  if (!qword_1EF2C8F48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933708, &type metadata for A18_V11.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C8F48);
  }
  return result;
}

uint64_t sub_1BB60A894@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C8F50, (uint64_t (*)(void))sub_1BB60AAA8, (uint64_t)&type metadata for A18_V11.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB60AAA8();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB60AAA8()
{
  unint64_t result;

  result = qword_1EF2C8F58;
  if (!qword_1EF2C8F58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933864, &type metadata for A18_V11.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8F58);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A18_V11.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB60AB38 + 4 * byte_1BB93357D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB60AB6C + 4 * asc_1BB933578[v4]))();
}

uint64_t sub_1BB60AB6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB60AB74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB60AB7CLL);
  return result;
}

uint64_t sub_1BB60AB88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB60AB90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB60AB94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB60AB9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A18_V11.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V11.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB60ABBC()
{
  unint64_t result;

  result = qword_1EF2C8F68;
  if (!qword_1EF2C8F68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93383C, &type metadata for A18_V11.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8F68);
  }
  return result;
}

unint64_t sub_1BB60AC04()
{
  unint64_t result;

  result = qword_1EF2C8F70;
  if (!qword_1EF2C8F70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9337AC, &type metadata for A18_V11.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8F70);
  }
  return result;
}

unint64_t sub_1BB60AC4C()
{
  unint64_t result;

  result = qword_1EF2C8F78;
  if (!qword_1EF2C8F78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9337D4, &type metadata for A18_V11.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C8F78);
  }
  return result;
}

id static FCContentManifest.+ infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend((id)objc_opt_self(), sel_manifestByMergingManifest_withManifest_, a1, a2);
}

void static FCContentManifest.+= infix(_:_:)(_QWORD *a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = (void *)*a1;
  v4 = objc_msgSend((id)objc_opt_self(), sel_manifestByMergingManifest_withManifest_, *a1, a2);

  *a1 = v4;
}

void sub_1BB60AD58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4C2DD8(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_1BB60AE54 + 4 * byte_1BB9338B8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB60AE54()
{
  swift_unknownObjectRelease();
  return 0;
}

void FormatContentSlotItemObject.Resolved.kinds.getter()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10;

  v1 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v1);
  sub_1BA4A3FB4(0, &qword_1ED3CB5E0, v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA4C2DD8(v0, (uint64_t)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (char *)sub_1BB60B0F0 + 4 * byte_1BB9338C1[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB60B0F0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  v0 = sub_1BA8639BC((uint64_t)&unk_1E72701E0);
  swift_arrayDestroy();
  return v0;
}

void sub_1BB60B458(char *a1)
{
  sub_1BB7F275C(*a1);
}

uint64_t sub_1BB60B464()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D1E30((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB60B4A8(uint64_t a1)
{
  char *v1;

  sub_1BA9D1E30(a1, *v1);
}

uint64_t sub_1BB60B4B0()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D1E30((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BB60B4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB60F29C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB60B514()
{
  sub_1BA62739C();
  return sub_1BB874710();
}

uint64_t sub_1BB60B53C()
{
  sub_1BA62739C();
  return sub_1BB87471C();
}

unint64_t sub_1BB60B564()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C2D10;
  if (!qword_1EF2C2D10)
  {
    sub_1BA625DB0(255, (unint64_t *)&unk_1ED3A3B80, (uint64_t)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB50A0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2D10);
  }
  return result;
}

unint64_t sub_1BB60B5CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A3B20;
  if (!qword_1ED3A3B20)
  {
    sub_1BA625DB0(255, (unint64_t *)&unk_1ED3A3B30, (uint64_t)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB50A0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A3B20);
  }
  return result;
}

uint64_t *sub_1BB60B634(uint64_t *a1)
{
  sub_1BA8CB10C(*a1, a1[1]);
  return a1;
}

uint64_t sub_1BB60B690()
{
  return 8;
}

_QWORD *sub_1BB60B69C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1BB60B6A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C8F90;
  if (!qword_1EF2C8F90)
  {
    sub_1BA625DB0(255, (unint64_t *)&unk_1ED3A3B80, (uint64_t)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5098], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C8F90);
  }
  return result;
}

uint64_t sub_1BB60B714()
{
  return 8;
}

unint64_t sub_1BB60B720()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A3B18;
  if (!qword_1ED3A3B18)
  {
    sub_1BA625DB0(255, (unint64_t *)&unk_1ED3A3B30, (uint64_t)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5098], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A3B18);
  }
  return result;
}

uint64_t sub_1BB60B78C()
{
  return 8;
}

uint64_t sub_1BB60B79C()
{
  return 8;
}

uint64_t sub_1BB60B7AC()
{
  return 8;
}

uint64_t _s8ResolvedOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BB60B818 + 4 * byte_1BB9338F2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t _s8ResolvedOwca(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    v2 = (char *)&loc_1BB60C774 + 4 * byte_1BB933919[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *_s8ResolvedOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v47)(char *, char *, uint64_t);
  _OWORD *v48;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 7)
  {
    v22 = a2[1];
    *a1 = *a2;
    a1[1] = v22;
    v23 = type metadata accessor for FormatCustomItem.Resolved();
    v24 = *(int *)(v23 + 24);
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = type metadata accessor for FormatCustomItem.Action();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v37 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v25, v26, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    *(_QWORD *)((char *)a1 + *(int *)(v23 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v23 + 28));
    goto LABEL_22;
  }
  if (EnumCaseMultiPayload == 6)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    type metadata accessor for PuzzleStatistic();
    type metadata accessor for PuzzleStatisticCategory(0);
    v30 = (char *)&loc_1BB60D85C + 4 * byte_1BB933926[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  if (EnumCaseMultiPayload == 3)
  {
    *a1 = *a2;
    v7 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
    v8 = v7[5];
    v48 = a1;
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for FormatWebEmbed();
    v12 = v11[5];
    v13 = &v9[v12];
    v14 = &v10[v12];
    v15 = sub_1BB86C67C();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v17(v13, v14, v15);
    v18 = v11[6];
    v19 = &v9[v18];
    v20 = &v10[v18];
    v47 = v17;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&v10[v18], 1, v15))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v17(v19, v20, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    }
    a1 = v48;
    *(_QWORD *)&v9[v11[7]] = *(_QWORD *)&v10[v11[7]];
    *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
    *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
    *(_QWORD *)&v9[v11[10]] = *(_QWORD *)&v10[v11[10]];
    *(_QWORD *)&v9[v11[11]] = *(_QWORD *)&v10[v11[11]];
    *(_QWORD *)&v9[v11[12]] = *(_QWORD *)&v10[v11[12]];
    *(_QWORD *)((char *)v48 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
    *(_QWORD *)((char *)v48 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
    v31 = v7[8];
    v32 = (_OWORD *)((char *)v48 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    v34 = type metadata accessor for WebEmbedDataVisualization();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v32 = *v33;
        v38 = type metadata accessor for GenericDataVisualization();
        v47((char *)v32 + *(int *)(v38 + 20), (char *)v33 + *(int *)(v38 + 20), v15);
        *(_QWORD *)((char *)v32 + *(int *)(v38 + 24)) = *(_QWORD *)((char *)v33 + *(int *)(v38 + 24));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v32, v33, *(_QWORD *)(v35 + 64));
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v39 = v7[9];
    v40 = (char *)v48 + v39;
    v41 = (char *)a2 + v39;
    sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v43 = v42;
    v44 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v41, 1, v42))
    {
      sub_1BA6C5ACC(0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v40, v41, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v40, 0, 1, v43);
    }
LABEL_22:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *_s8ResolvedOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v46;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 7)
    {
      v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      v22 = type metadata accessor for FormatCustomItem.Resolved();
      v23 = *(int *)(v22 + 24);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for FormatCustomItem.Action();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v36 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v24, v25, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v22 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v22 + 28));
      goto LABEL_23;
    }
    if (EnumCaseMultiPayload == 6)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      v29 = (char *)&loc_1BB60E5C0 + 4 * byte_1BB93392A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      v46 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      v7 = v46[5];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      v10 = (int *)type metadata accessor for FormatWebEmbed();
      v11 = v10[5];
      v12 = &v8[v11];
      v13 = &v9[v11];
      v14 = sub_1BB86C67C();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v16(v12, v13, v14);
      v17 = v10[6];
      v18 = &v8[v17];
      v19 = &v9[v17];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&v9[v17], 1, v14))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v16(v18, v19, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      }
      *(_QWORD *)&v8[v10[7]] = *(_QWORD *)&v9[v10[7]];
      *(_OWORD *)&v8[v10[8]] = *(_OWORD *)&v9[v10[8]];
      *(_OWORD *)&v8[v10[9]] = *(_OWORD *)&v9[v10[9]];
      *(_QWORD *)&v8[v10[10]] = *(_QWORD *)&v9[v10[10]];
      *(_QWORD *)&v8[v10[11]] = *(_QWORD *)&v9[v10[11]];
      *(_QWORD *)&v8[v10[12]] = *(_QWORD *)&v9[v10[12]];
      *(_QWORD *)((char *)a1 + v46[6]) = *(_QWORD *)((char *)a2 + v46[6]);
      *(_QWORD *)((char *)a1 + v46[7]) = *(_QWORD *)((char *)a2 + v46[7]);
      v30 = v46[8];
      v31 = (_OWORD *)((char *)a1 + v30);
      v32 = (_OWORD *)((char *)a2 + v30);
      v33 = type metadata accessor for WebEmbedDataVisualization();
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v31 = *v32;
          v37 = type metadata accessor for GenericDataVisualization();
          v16((char *)v31 + *(int *)(v37 + 20), (char *)v32 + *(int *)(v37 + 20), v14);
          *(_QWORD *)((char *)v31 + *(int *)(v37 + 24)) = *(_QWORD *)((char *)v32 + *(int *)(v37 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v31, v32, *(_QWORD *)(v34 + 64));
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      v38 = v46[9];
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
      v42 = v41;
      v43 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v40, 1, v41))
      {
        sub_1BA6C5ACC(0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v39, v40, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
      }
LABEL_23:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

ValueMetadata *_s8ResolvedO10CodingTypeOMa()
{
  return &_s8ResolvedO10CodingTypeON;
}

uint64_t _s8ResolvedO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB60F18C + 4 * byte_1BB93393D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB60F1C0 + 4 * byte_1BB933938[v4]))();
}

uint64_t sub_1BB60F1C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB60F1C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB60F1D0);
  return result;
}

uint64_t sub_1BB60F1DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB60F1E4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB60F1E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB60F1F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8ResolvedO10CodingKeysOMa()
{
  return &_s8ResolvedO10CodingKeysON;
}

unint64_t sub_1BB60F210()
{
  unint64_t result;

  result = qword_1EF2C8F98;
  if (!qword_1EF2C8F98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933BC4, &_s8ResolvedO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2C8F98);
  }
  return result;
}

unint64_t sub_1BB60F258()
{
  unint64_t result;

  result = qword_1EF2C8FA0;
  if (!qword_1EF2C8FA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933C64, &_s8ResolvedO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2C8FA0);
  }
  return result;
}

uint64_t sub_1BB60F29C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69666E6F43707061 && a2 == 0xE900000000000067 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E614D7465737361 && a2 == 0xEC00000072656761)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t FeedNativeAdIntegrator.object.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 16);
}

void (*FeedNativeAdIntegrator.object.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1BB0440A0;
}

uint64_t FeedNativeAdIntegrator.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t FeedNativeAdIntegrator.insertNativeAd(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v1 + 16);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FeedNativeAdIntegrator.collapseNativeAd(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v1 + 16);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FeedNativeAdIntegrator.deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  return v0;
}

uint64_t FeedNativeAdIntegrator.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB60F6F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v1 + 16);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BB60F774(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v1 + 16);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BB60F7F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1BB60F848(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FeedNativeAdIntegrating.insertNativeAd(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FeedNativeAdIntegrating.collapseNativeAd(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for FeedNativeAdIntegrator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedNativeAdIntegrator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1BB60F8C4(uint64_t a1, uint64_t *a2, char *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  void (*v23)(id, uint64_t);
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void **v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;

  v7 = v6;
  v66 = a5;
  v12 = type metadata accessor for FormatAdMetricsData();
  v61 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v62 = v13;
  v64 = (uint64_t)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1BB871B24();
  v14 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v16 = (char *)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a2;
  v17 = a2[1];
  v19 = *((unsigned __int8 *)a2 + 104);
  v20 = &a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_identifier];
  *(_QWORD *)v20 = v18;
  *((_QWORD *)v20 + 1) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BB8736F0();
  objc_msgSend(a3, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a3, sel_setUserInteractionEnabled_, v19);
  v21 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_contentView;
  v22 = *(id *)&a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_contentView];
  objc_msgSend(a3, sel_bounds);
  sub_1BB8736F0();

  v60[0] = v21;
  v23 = *(void (**)(id, uint64_t))(a6 + 32);
  v24 = *(id *)&a3[v21];
  v23(v66, a6);
  v25 = a4;
  v26 = (void *)sub_1BB871A7C();
  v28 = v27;

  v63 = v7;
  sub_1BB37E230();
  v60[1] = swift_getObjectType();
  sub_1BB871CA4();
  v29 = (void **)&a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_metricsView];
  v30 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_metricsView];
  *v29 = v26;
  v29[1] = v28;
  v31 = v26;

  v32 = *v29;
  v33 = v31;
  if (*v29)
  {
    swift_getObjectType();
    v33 = v32;
    v34 = a3;
    sub_1BB871C98();

  }
  v35 = v25;
  v36 = v25;
  v37 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v36, v65);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v37);
  v39 = *MEMORY[0x1E0D52710];
  v66 = v31;
  if (v38 == v39)
  {
    v40 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_privacyMarker;
    if (*(_QWORD *)&a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_privacyMarker])
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v37);
    }
    else
    {
      v49 = (id)sub_1BB871C8C();
      if (!v49)
        v49 = objc_msgSend(objc_allocWithZone((Class)sub_1BB86EE0C()), sel_init);
      v50 = v49;
      sub_1BB8736F0();
      objc_msgSend(v50, sel_setIsAccessibilityElement_, 1);
      v51 = *(void **)&a3[v40];
      *(_QWORD *)&a3[v40] = v50;
      v52 = v50;

      objc_msgSend(a3, sel_addSubview_, v52);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v65);
    }
    v43 = v61;
  }
  else
  {
    v41 = v38;
    v42 = *MEMORY[0x1E0D526B0];
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v37);
    v43 = v61;
    if (v41 == v42 || v41 == *MEMORY[0x1E0D52708])
    {
      v44 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_privacyMarker];
      if (v44)
      {
        v45 = v44;
        sub_1BB873708();

      }
      v46 = sub_1BB871C8C();
      if (v46)
      {
        v47 = (void *)v46;
        sub_1BB873708();

      }
      sub_1BB873588();
      sub_1BB8736F0();
      v48 = *(id *)&a3[v60[0]];
      objc_msgSend(a3, sel_bounds);
      sub_1BB873600();
      sub_1BB8736F0();

    }
  }

  v53 = swift_allocObject();
  swift_weakInit();
  v54 = v35;
  v55 = v64;
  sub_1BB60FF80(v54, v64);
  v56 = (*(unsigned __int8 *)(v43 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v53;
  sub_1BB61003C(v55, v57 + v56);
  v58 = (void *)sub_1BB871338();

  return swift_release();
}

uint64_t sub_1BB60FDF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;

  v0 = sub_1BB872208();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (*(_QWORD *)(result + 16))
    {
      v5 = *(_QWORD *)(result + 24);
      swift_unknownObjectRetain();
      swift_release();
      ObjectType = swift_getObjectType();
      sub_1BB871A94();
      (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0D53820], v0);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, ObjectType, v5);
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BB60FF28()
{
  swift_unknownObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB60FF5C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB60FF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatAdMetricsData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB60FFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatAdMetricsData() - 8) + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();
  v3 = sub_1BB871B24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1BB61003C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatAdMetricsData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB610080()
{
  type metadata accessor for FormatAdMetricsData();
  return sub_1BB60FDF8();
}

uint64_t static EmptyStateStyler.feedTheme.getter()
{
  int v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  if (qword_1ED3D5150 != -1)
    swift_once();
  v0 = byte_1ED3D5168;
  v1 = (void *)objc_opt_self();
  v2 = v1;
  if (v0 == 1)
  {
    v3 = objc_msgSend(v1, sel_secondarySystemBackgroundColor);
    v4 = objc_msgSend(v2, sel_systemBackgroundColor);
    v5 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v3, v4);

  }
  else
  {
    v6 = objc_msgSend(v1, sel_systemBackgroundColor);
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  return sub_1BB86FDFC();
}

uint64_t FormatVisualEffect.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BB610218
                                                                     + 4 * asc_1BB933DD0[*v0]))(0xD000000000000017, 0x80000001BB95D0A0);
}

uint64_t sub_1BB610218(uint64_t a1)
{
  return a1 - 5;
}

uint64_t sub_1BB610310@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatVisualEffect.init(from:)(a1, a2);
}

uint64_t sub_1BB610324(_QWORD *a1)
{
  return FormatVisualEffect.encode(to:)(a1);
}

uint64_t _s8NewsFeed18FormatVisualEffectO2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = FormatBlurEffectStyle.rawValue.getter();
  v2 = v1;
  if (v0 == FormatBlurEffectStyle.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1BB6103D8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6103FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6103FC()
{
  unint64_t result;

  result = qword_1EF2C8FA8;
  if (!qword_1EF2C8FA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVisualEffect, &type metadata for FormatVisualEffect);
    atomic_store(result, (unint64_t *)&qword_1EF2C8FA8);
  }
  return result;
}

unint64_t sub_1BB610440(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8262C();
  a1[2] = sub_1BAEF6204();
  result = sub_1BB610474();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB610474()
{
  unint64_t result;

  result = qword_1EF2C8FB0;
  if (!qword_1EF2C8FB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVisualEffect, &type metadata for FormatVisualEffect);
    atomic_store(result, (unint64_t *)&qword_1EF2C8FB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatVisualEffect(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1BB610504 + 4 * byte_1BB933DE4[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1BB610538 + 4 * byte_1BB933DDF[v4]))();
}

uint64_t sub_1BB610538(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB610540(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB610548);
  return result;
}

uint64_t sub_1BB610554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB61055CLL);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1BB610560(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB610568(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatVisualEffect()
{
  return &type metadata for FormatVisualEffect;
}

_QWORD *sub_1BB610584(unsigned __int8 *a1)
{
  int v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  _OWORD v23[2];
  uint64_t v24;

  v1 = *a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  if (v1 == 15)
  {
    v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
    v5 = (v4 + 32) & ~v4;
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
    v7 = (_QWORD *)(v6 + v5);
    sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v7);
    v8 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
    sub_1BAF89090(0x45206C6175736956, 0xED00007463656666, 0, 0, v6, v23);
  }
  else
  {
    v9 = *(_QWORD *)(v3 - 8);
    v10 = *(_QWORD *)(v9 + 72);
    v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BB87A390;
    v13 = (_QWORD *)(v12 + v11);
    sub_1BAAF7494(1701869908, 0xE400000000000000, 1920298050, 0xE400000000000000, v13);
    v14 = type metadata accessor for FormatInspectionItem(0);
    v15 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
    v15(v13, 0, 1, v14);
    v16 = (_QWORD *)((char *)v13 + v10);
    LOBYTE(v23[0]) = v1;
    v17 = FormatBlurEffectStyle.rawValue.getter();
    sub_1BAAF7494(0x656C797453, 0xE500000000000000, v17, v18, v16);
    v15(v16, 0, 1, v14);
    sub_1BAF89090(0x45206C6175736956, 0xED00007463656666, 0, 0, v12, v23);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v19 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v19;
  *(_QWORD *)(v19 + 48) = v24;
  v20 = v23[1];
  *(_OWORD *)(v19 + 16) = v23[0];
  *(_OWORD *)(v19 + 32) = v20;
  v21 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v21;
}

uint64_t sub_1BB6108E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t static Settings.Puzzles.Features.enableGameCenter.getter()
{
  return sub_1BA499934(&qword_1ED3C0960);
}

uint64_t sub_1BB610938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _BYTE v10[16];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB8729A0();
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v10[15] = 1;
  sub_1BA50F0D4(0, (unint64_t *)&qword_1ED3D5FD0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1ED3AC998 = result;
  return result;
}

uint64_t static Settings.Puzzles.Features.newsSettingsGameCenterEnabled.getter()
{
  return sub_1BA499934(&qword_1ED3AD178);
}

uint64_t sub_1BB610ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001BB994440;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C8FB8 = result;
  return result;
}

uint64_t static Settings.Puzzles.ConfigOverrides.indexUrl.getter()
{
  return sub_1BA499934(&qword_1EF2A7390);
}

uint64_t sub_1BB610C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD000000000000021;
  v10[1] = 0x80000001BB9943E0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C8FC0 = result;
  return result;
}

uint64_t static Settings.Puzzles.ConfigOverrides.dataUrl.getter()
{
  return sub_1BA499934(&qword_1EF2A7398);
}

uint64_t Settings.Puzzles.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8NewsFeedE6SportsV10ScoreEmbedV15ConfigOverridesCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB610DE8(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Puzzles.ConfigOverrides, 0xD00000000000002ELL, 0x80000001BB994380, &qword_1EF2C8FC8);
}

uint64_t static Settings.Puzzles.configOverrides.getter()
{
  return sub_1BA499934(&qword_1EF2A73A0);
}

uint64_t static Settings.Puzzles.cacheOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3A36B8);
}

unint64_t static Settings.Puzzles.resetProgressStateKey.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_1BB610E68(uint64_t a1)
{
  return sub_1BA4AC3A0(a1, 0xD000000000000027, 0x80000001BB9735B0, &qword_1EF2C8FD0);
}

uint64_t static Settings.Puzzles.resetProgressState.getter()
{
  return sub_1BA499934(&qword_1EF2A73B0);
}

uint64_t sub_1BB610EA8(uint64_t a1)
{
  return sub_1BA4AC3A0(a1, 0xD00000000000002BLL, 0x80000001BB994350, &qword_1ED3A3760);
}

uint64_t static Settings.Puzzles.resetProgressInHistory.getter()
{
  return sub_1BA499934(&qword_1ED3A3768);
}

uint64_t sub_1BB610EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t result;
  uint64_t v11;

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86C8B0();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  MEMORY[0x1E0C80A78](v8);
  sub_1BB86C7D8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB5800], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  sub_1BAC6F32C(0, &qword_1EF2C9050, v9, &qword_1EF2C9058, MEMORY[0x1E0DB5470]);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C8FD8 = result;
  return result;
}

uint64_t static Settings.Puzzles.lastPuzzleBadgeUpdateDate.getter()
{
  return sub_1BA499934(&qword_1EF2A73B8);
}

uint64_t sub_1BB61108C(uint64_t a1)
{
  return sub_1BA4AC3A0(a1, 0xD00000000000002ALL, 0x80000001BB9942C0, &qword_1EF2C8FE0);
}

uint64_t static Settings.Puzzles.hideSubmitRadarButton.getter()
{
  return sub_1BA499934(&qword_1EF2A73C0);
}

uint64_t sub_1BB6110CC(uint64_t a1)
{
  return sub_1BA4AC3A0(a1, 0xD00000000000002DLL, 0x80000001BB994290, &qword_1EF2C8FE8);
}

uint64_t static Settings.Puzzles.showFeedDebugMenuOptions.getter()
{
  return sub_1BA499934(&qword_1EF2A73C8);
}

unint64_t static Settings.Puzzles.showInfoModalOnFirstPlayKey.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_1BB611128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1BB86D378();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D36C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50F0D4(0, &qword_1ED3A3790);
  v10[1] = v8;
  v12 = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57E8], v4);
  sub_1BA81BD6C(0, (unint64_t *)&qword_1EF2C2158, (unint64_t *)&qword_1EF2C2160);
  sub_1BA842038(0, (unint64_t *)&qword_1EF2C2160);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87FC80;
  v11 = 0;
  sub_1BB86D384();
  v11 = 1;
  sub_1BB86D384();
  v11 = 2;
  sub_1BB86D384();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  result = sub_1BB86D39C();
  qword_1EF2C8FF0 = result;
  return result;
}

uint64_t static Settings.Puzzles.showInfoModalOnFirstPlay.getter()
{
  return sub_1BA499934(&qword_1EF2A73D0);
}

uint64_t sub_1BB6113A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50F0D4(0, &qword_1ED3A3790);
  v5[2] = 1;
  v5[3] = 1;
  v5[1] = 11;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1BB86D3C0();
  qword_1EF2C8FF8 = result;
  return result;
}

uint64_t static Settings.Puzzles.BadgeCountOverride.badgeCountOverrideValue.getter()
{
  return sub_1BA499934(qword_1EF2A73D8);
}

uint64_t sub_1BB6114B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D378();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D36C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50F0D4(0, &qword_1ED3A3790);
  v9[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57E8], v4);
  sub_1BA81BD6C(0, (unint64_t *)&qword_1EF2C2158, (unint64_t *)&qword_1EF2C2160);
  sub_1BA842038(0, (unint64_t *)&qword_1EF2C2160);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB8832C0;
  v9[0] = 0;
  sub_1BB86D384();
  v9[0] = 1;
  sub_1BB86D384();
  v9[0] = 2;
  sub_1BB86D384();
  v9[0] = 3;
  sub_1BB86D384();
  v9[0] = 5;
  sub_1BB86D384();
  v9[0] = 10;
  sub_1BB86D384();
  v9[0] = 15;
  sub_1BB86D384();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  result = sub_1BB86D39C();
  qword_1EF2C9000 = result;
  return result;
}

uint64_t static Settings.Puzzles.prewarmHistoryPuzzlesCount.getter()
{
  return sub_1BA499934(&qword_1EF2A73E8);
}

uint64_t sub_1BB6117C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1BB86D378();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D36C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50F0D4(0, &qword_1ED3B0598);
  v10[1] = v8;
  v12 = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57E8], v4);
  sub_1BA81BD6C(0, (unint64_t *)&unk_1ED3A1728, &qword_1ED3A3788);
  sub_1BA842038(0, &qword_1ED3A3788);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB933ED0;
  v11 = 0;
  sub_1BB86D384();
  v11 = 0x404E000000000000;
  sub_1BB86D384();
  v11 = 0x4066800000000000;
  sub_1BB86D384();
  v11 = 0x4072C00000000000;
  sub_1BB86D384();
  v11 = 0x408C200000000000;
  sub_1BB86D384();
  v11 = 0x40AC200000000000;
  sub_1BB86D384();
  v11 = 0x40F5180000000000;
  sub_1BB86D384();
  v11 = 0x4122750000000000;
  sub_1BB86D384();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  result = sub_1BB86D39C();
  qword_1EF2C9008 = result;
  return result;
}

uint64_t static Settings.Puzzles.prewarmHistoryTimeInterval.getter()
{
  return sub_1BA499934(&qword_1EF2A73F0);
}

uint64_t sub_1BB611B84(uint64_t a1)
{
  return sub_1BA4C5910(a1, 0xD000000000000031, 0x80000001BB994140, (uint64_t *)&unk_1ED3A3770);
}

uint64_t static Settings.Puzzles.refreshEngineTimeInterval.getter()
{
  return sub_1BA499934(&qword_1ED3A3780);
}

uint64_t sub_1BB611BC4(uint64_t a1)
{
  return sub_1BA4C5910(a1, 0xD00000000000002ALL, 0x80000001BB994480, &qword_1EF2C9010);
}

uint64_t static Settings.Puzzles.puzzleCacheLifetime.getter()
{
  return sub_1BA499934(&qword_1EF2A73F8);
}

uint64_t static Settings.Puzzles.statsStartDateOverride.getter()
{
  return sub_1BA499934(&qword_1ED3A0D30);
}

uint64_t sub_1BB611C20(uint64_t a1)
{
  return sub_1BA4AC3A0(a1, 0xD00000000000003FLL, 0x80000001BB9940D0, (uint64_t *)&unk_1EF2C9018);
}

uint64_t static Settings.Puzzles.statsImmediatelyScheduleStreakNotification.getter()
{
  return sub_1BA499934(qword_1EF2A7408);
}

ValueMetadata *type metadata accessor for Settings.Puzzles()
{
  return &type metadata for Settings.Puzzles;
}

ValueMetadata *type metadata accessor for Settings.Puzzles.Features()
{
  return &type metadata for Settings.Puzzles.Features;
}

uint64_t sub_1BB611C80()
{
  return type metadata accessor for Settings.Puzzles.ConfigOverrides(0);
}

uint64_t sub_1BB611C88()
{
  return type metadata accessor for Settings.Puzzles.BadgeCountOverride(0);
}

uint64_t sub_1BB611C98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v1;
  return swift_task_switch();
}

uint64_t sub_1BB611CB0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  if ((uint64_t)objc_msgSend(*(id *)(v0 + 136), sel_rank) < 1)
  {
    v5 = *(_QWORD *)(v0 + 128);
    v6 = type metadata accessor for PuzzleLeaderboardEntry();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v1 = objc_msgSend(*(id *)(v0 + 136), sel_player);
    *(_QWORD *)(v0 + 144) = v1;
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1BB611DC4;
    v2 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    v3 = (_QWORD *)(v0 + 80);
    v3[1] = 0x40000000;
    v3[2] = sub_1BB612EF8;
    v3[3] = &block_descriptor_92;
    v3[4] = v2;
    objc_msgSend(v1, sel_loadPhotoForSize_withCompletionHandler_, 0, v3);
    return swift_continuation_await();
  }
}

uint64_t sub_1BB611DC4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BB611E24()
{
  uint64_t v0;
  void *v1;
  UIImage *v2;
  NSData *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  int *v21;
  uint64_t *v22;
  uint64_t *v23;

  v1 = *(void **)(v0 + 144);
  v2 = *(UIImage **)(v0 + 120);
  v3 = UIImagePNGRepresentation(v2);

  if (v3)
  {
    v4 = sub_1BB86C6E8();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0xF000000000000000;
  }
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(void **)(v0 + 136);
  v9 = objc_msgSend(v8, sel_date);
  sub_1BB86C874();

  v10 = objc_msgSend(v8, sel_formattedScore);
  v11 = sub_1BB8729A0();
  v13 = v12;

  v14 = objc_msgSend(v8, sel_player);
  v15 = objc_msgSend(v14, sel_displayName);

  v16 = sub_1BB8729A0();
  v18 = v17;

  sub_1BA86B484(v4, v6);
  v19 = objc_msgSend(v8, sel_rank);
  v20 = objc_msgSend(v8, sel_score);
  sub_1BA69D490(v4, v6);
  v21 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  v22 = (uint64_t *)(v7 + v21[5]);
  *v22 = v11;
  v22[1] = v13;
  v23 = (uint64_t *)(v7 + v21[6]);
  *v23 = v16;
  v23[1] = v18;
  v23[2] = v4;
  v23[3] = v6;
  *(_QWORD *)(v7 + v21[7]) = v19;
  *(_QWORD *)(v7 + v21[8]) = v20;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v21 - 1) + 56))(v7, 0, 1, v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB611FE8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  int *v17;
  uint64_t *v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 144);
  v2 = *(void **)(v0 + 152);
  swift_willThrow();

  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(void **)(v0 + 136);
  v5 = objc_msgSend(v3, sel_date);
  sub_1BB86C874();

  v6 = objc_msgSend(v3, sel_formattedScore);
  v7 = sub_1BB8729A0();
  v9 = v8;

  v10 = objc_msgSend(v3, sel_player);
  v11 = objc_msgSend(v10, sel_displayName);

  v12 = sub_1BB8729A0();
  v14 = v13;

  sub_1BA86B484(0, 0xF000000000000000);
  v15 = objc_msgSend(v3, sel_rank);
  v16 = objc_msgSend(v3, sel_score);
  sub_1BA69D490(0, 0xF000000000000000);
  v17 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  v18 = (uint64_t *)(v4 + v17[5]);
  *v18 = v7;
  v18[1] = v9;
  v19 = v4 + v17[6];
  *(_QWORD *)v19 = v12;
  *(_QWORD *)(v19 + 8) = v14;
  *(_OWORD *)(v19 + 16) = xmmword_1BB8A40F0;
  *(_QWORD *)(v4 + v17[7]) = v15;
  *(_QWORD *)(v4 + v17[8]) = v16;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v17 - 1) + 56))(v4, 0, 1, v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL static PuzzleLeaderboard.PlayerScope.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PuzzleLeaderboard.PlayerScope.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t PuzzleLeaderboard.PlayerScope.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

BOOL static PuzzleLeaderboard.TimeScope.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PuzzleLeaderboard.TimeScope.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t PuzzleLeaderboard.TimeScope.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t PuzzleLeaderboardEntry.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PuzzleLeaderboardEntry.formattedScore.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PuzzleLeaderboardEntry() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleLeaderboardEntry.player.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for PuzzleLeaderboardEntry() + 24));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return sub_1BA86B484(v5, v6);
}

uint64_t PuzzleLeaderboardEntry.rank.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PuzzleLeaderboardEntry() + 28));
}

uint64_t PuzzleLeaderboardEntry.score.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PuzzleLeaderboardEntry() + 32));
}

uint64_t sub_1BB612388()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB6123B0 + 4 * byte_1BB933F30[*v0]))(1702125924, 0xE400000000000000);
}

uint64_t sub_1BB6123B0()
{
  return 0x657474616D726F66;
}

uint64_t sub_1BB6123D4()
{
  return 0x726579616C70;
}

uint64_t sub_1BB6123E8()
{
  return 1802396018;
}

uint64_t sub_1BB6123F4()
{
  return 0x65726F6373;
}

uint64_t sub_1BB612408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB614124(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB61242C()
{
  sub_1BB613180();
  return sub_1BB874710();
}

uint64_t sub_1BB612454()
{
  sub_1BB613180();
  return sub_1BB87471C();
}

uint64_t PuzzleLeaderboardEntry.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  __int128 v15;
  char v16;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C9060, (uint64_t (*)(void))sub_1BB613180, (uint64_t)&type metadata for PuzzleLeaderboardEntry.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB613180();
  sub_1BB8746C8();
  LOBYTE(v14[0]) = 0;
  sub_1BB86C8B0();
  sub_1BA629A0C((unint64_t *)&unk_1ED3B0510, MEMORY[0x1E0CB0890]);
  sub_1BB8741AC();
  if (!v2)
  {
    v10 = type metadata accessor for PuzzleLeaderboardEntry();
    LOBYTE(v14[0]) = 1;
    sub_1BB87417C();
    v11 = v3 + *(int *)(v10 + 24);
    v12 = *(_QWORD *)(v11 + 8);
    v14[0] = *(_QWORD *)v11;
    v14[1] = v12;
    v15 = *(_OWORD *)(v11 + 16);
    v16 = 2;
    sub_1BB6131C4();
    sub_1BB8741AC();
    LOBYTE(v14[0]) = 3;
    sub_1BB8741A0();
    LOBYTE(v14[0]) = 4;
    sub_1BB8741A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t PuzzleLeaderboardEntry.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  char v35;

  v25 = a2;
  v3 = sub_1BB86C8B0();
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C9078, (uint64_t (*)(void))sub_1BB613180, (uint64_t)&type metadata for PuzzleLeaderboardEntry.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v28 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - v7;
  v9 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB613180();
  v30 = v8;
  v12 = v31;
  sub_1BB87468C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = (uint64_t)v11;
  v14 = v26;
  LOBYTE(v32) = 0;
  sub_1BA629A0C(&qword_1ED3B0528, MEMORY[0x1E0CB08C0]);
  v15 = v28;
  v16 = v27;
  sub_1BB8740D4();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v13, v29, v16);
  LOBYTE(v32) = 1;
  v17 = sub_1BB874098();
  v18 = (uint64_t *)(v13 + v9[5]);
  *v18 = v17;
  v18[1] = v19;
  v35 = 2;
  sub_1BB613208();
  v31 = 0;
  sub_1BB8740D4();
  v20 = v33;
  v21 = v13 + v9[6];
  *(_QWORD *)v21 = v32;
  *(_QWORD *)(v21 + 8) = v20;
  *(_OWORD *)(v21 + 16) = v34;
  LOBYTE(v32) = 3;
  *(_QWORD *)(v13 + v9[7]) = sub_1BB8740C8();
  LOBYTE(v32) = 4;
  v22 = sub_1BB8740C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v30, v15);
  *(_QWORD *)(v13 + v9[8]) = v22;
  sub_1BB61324C(v13, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BB613290(v13);
}

uint64_t sub_1BB612A28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleLeaderboardEntry.init(from:)(a1, a2);
}

uint64_t sub_1BB612A3C(_QWORD *a1)
{
  return PuzzleLeaderboardEntry.encode(to:)(a1);
}

uint64_t PuzzlePlayer.displayName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzlePlayer.profileImageData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1BA86B484(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t sub_1BB612AB4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x4E79616C70736964;
}

uint64_t sub_1BB612AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB614020(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB612B20()
{
  sub_1BB6132CC();
  return sub_1BB874710();
}

uint64_t sub_1BB612B48()
{
  sub_1BB6132CC();
  return sub_1BB87471C();
}

uint64_t PuzzlePlayer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  sub_1BA4CDF6C(0, &qword_1EF2C9088, (uint64_t (*)(void))sub_1BB6132CC, (uint64_t)&type metadata for PuzzlePlayer.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v12 = *(_QWORD *)(v1 + 24);
  v13 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6132CC();
  sub_1BB8746C8();
  LOBYTE(v15) = 0;
  v9 = v14;
  sub_1BB87417C();
  if (!v9)
  {
    v15 = v13;
    v16 = v12;
    v17 = 1;
    sub_1BA92B43C();
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzlePlayer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;

  v17 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C9098, (uint64_t (*)(void))sub_1BB6132CC, (uint64_t)&type metadata for PuzzlePlayer.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6132CC();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v17;
  LOBYTE(v18) = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v20 = 1;
  sub_1BA92B850();
  swift_bridgeObjectRetain();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v18;
  v14 = v19;
  swift_bridgeObjectRetain();
  sub_1BA86B484(v13, v14);
  swift_bridgeObjectRelease();
  *v9 = v10;
  v9[1] = v12;
  v9[2] = v13;
  v9[3] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1BA69D490(v13, v14);
}

uint64_t sub_1BB612ECC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PuzzlePlayer.init(from:)(a1, a2);
}

uint64_t sub_1BB612EE0(_QWORD *a1)
{
  return PuzzlePlayer.encode(to:)(a1);
}

uint64_t sub_1BB612EF8(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    sub_1BA8EBDF8();
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL _s8NewsFeed12PuzzlePlayerV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  char v9;
  char v10;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1BB874398(), result = 0, (v7 & 1) != 0))
  {
    if (v3 >> 60 == 15)
    {
      if (v4 >> 60 == 15)
        return 1;
    }
    else if (v4 >> 60 != 15)
    {
      sub_1BA86B484(v2, v3);
      sub_1BA86B484(v5, v4);
      sub_1BB50E1FC(v2, v3);
      v10 = v9;
      sub_1BA69D490(v5, v4);
      sub_1BA69D490(v2, v3);
      return (v10 & 1) != 0;
    }
    sub_1BA86B484(v2, v3);
    sub_1BA86B484(v5, v4);
    sub_1BA69D490(v2, v3);
    sub_1BA69D490(v5, v4);
    return 0;
  }
  return result;
}

BOOL _s8NewsFeed22PuzzleLeaderboardEntryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  __int128 v17;
  _QWORD v18[2];
  __int128 v19;

  if ((sub_1BB86C868() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_1BB874398(), result = 0, (v10 & 1) != 0))
  {
    v12 = a1 + v4[6];
    v13 = *(_QWORD *)(v12 + 8);
    v18[0] = *(_QWORD *)v12;
    v18[1] = v13;
    v19 = *(_OWORD *)(v12 + 16);
    v14 = a2 + v4[6];
    v15 = *(_QWORD *)(v14 + 8);
    v16[0] = *(_QWORD *)v14;
    v16[1] = v15;
    v17 = *(_OWORD *)(v14 + 16);
    if (_s8NewsFeed12PuzzlePlayerV2eeoiySbAC_ACtFZ_0(v18, v16) && *(_QWORD *)(a1 + v4[7]) == *(_QWORD *)(a2 + v4[7]))
      return *(_QWORD *)(a1 + v4[8]) == *(_QWORD *)(a2 + v4[8]);
    return 0;
  }
  return result;
}

unint64_t sub_1BB613180()
{
  unint64_t result;

  result = qword_1EF2C9068;
  if (!qword_1EF2C9068)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9343B0, &type metadata for PuzzleLeaderboardEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9068);
  }
  return result;
}

unint64_t sub_1BB6131C4()
{
  unint64_t result;

  result = qword_1EF2C9070;
  if (!qword_1EF2C9070)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzlePlayer, &type metadata for PuzzlePlayer);
    atomic_store(result, (unint64_t *)&qword_1EF2C9070);
  }
  return result;
}

unint64_t sub_1BB613208()
{
  unint64_t result;

  result = qword_1EF2C9080;
  if (!qword_1EF2C9080)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzlePlayer, &type metadata for PuzzlePlayer);
    atomic_store(result, (unint64_t *)&qword_1EF2C9080);
  }
  return result;
}

uint64_t sub_1BB61324C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PuzzleLeaderboardEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB613290(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PuzzleLeaderboardEntry();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BB6132CC()
{
  unint64_t result;

  result = qword_1EF2C9090;
  if (!qword_1EF2C9090)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934360, &type metadata for PuzzlePlayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9090);
  }
  return result;
}

unint64_t sub_1BB613314()
{
  unint64_t result;

  result = qword_1EF2C90A0;
  if (!qword_1EF2C90A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleLeaderboard.PlayerScope, &type metadata for PuzzleLeaderboard.PlayerScope);
    atomic_store(result, (unint64_t *)&qword_1EF2C90A0);
  }
  return result;
}

unint64_t sub_1BB61335C()
{
  unint64_t result;

  result = qword_1EF2C90A8;
  if (!qword_1EF2C90A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleLeaderboard.TimeScope, &type metadata for PuzzleLeaderboard.TimeScope);
    atomic_store(result, (unint64_t *)&qword_1EF2C90A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLeaderboard()
{
  return &type metadata for PuzzleLeaderboard;
}

ValueMetadata *type metadata accessor for PuzzleLeaderboard.PlayerScope()
{
  return &type metadata for PuzzleLeaderboard.PlayerScope;
}

uint64_t storeEnumTagSinglePayload for PuzzleLeaderboard.TimeScope(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB613410 + 4 * byte_1BB933F3A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB613444 + 4 * byte_1BB933F35[v4]))();
}

uint64_t sub_1BB613444(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB61344C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB613454);
  return result;
}

uint64_t sub_1BB613460(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB613468);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB61346C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB613474(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLeaderboard.TimeScope()
{
  return &type metadata for PuzzleLeaderboard.TimeScope;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleLeaderboardEntry(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C8B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = *(uint64_t *)((char *)a2 + v9 + 8);
    *(_QWORD *)v13 = *(uint64_t *)((char *)a2 + v9);
    *((_QWORD *)v13 + 1) = v14;
    v15 = (uint64_t *)((char *)a2 + v9 + 16);
    v16 = *(uint64_t *)((char *)a2 + v9 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16 >> 60 == 15)
    {
      *((_OWORD *)v13 + 1) = *(_OWORD *)v15;
    }
    else
    {
      v18 = *v15;
      sub_1BA69D44C(*v15, v16);
      *((_QWORD *)v13 + 2) = v18;
      *((_QWORD *)v13 + 3) = v16;
    }
    v19 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);
  }
  return a1;
}

uint64_t destroy for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;

  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  result = swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v5 + 24);
  if (v7 >> 60 != 15)
    return sub_1BA69D314(*(_QWORD *)(v5 + 16), v7);
  return result;
}

uint64_t initializeWithCopy for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = *(_QWORD *)(a2 + v8 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(v12 + 8) = v13;
  v14 = (uint64_t *)(a2 + v8 + 16);
  v15 = *(_QWORD *)(a2 + v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)(v12 + 16) = *(_OWORD *)v14;
  }
  else
  {
    v16 = *v14;
    sub_1BA69D44C(*v14, v15);
    *(_QWORD *)(v12 + 16) = v16;
    *(_QWORD *)(v12 + 24) = v15;
  }
  v17 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  return a1;
}

uint64_t assignWithCopy for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)(v12 + 16);
  v14 = *(_QWORD *)(v12 + 24);
  if (v11[3] >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      v16 = *v13;
      sub_1BA69D44C(*v13, *(_QWORD *)(v12 + 24));
      v17 = v11[2];
      v18 = v11[3];
      v11[2] = v16;
      v11[3] = v14;
      sub_1BA69D314(v17, v18);
      goto LABEL_8;
    }
    sub_1BA92BD1C((uint64_t)(v11 + 2));
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)v11 + 1) = *(_OWORD *)v13;
    goto LABEL_8;
  }
  v15 = *v13;
  sub_1BA69D44C(*v13, *(_QWORD *)(v12 + 24));
  v11[2] = v15;
  v11[3] = v14;
LABEL_8:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;

  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v16 = (_QWORD *)(v14 + 16);
  v17 = v13[3];
  if (v17 >> 60 != 15)
  {
    v18 = *(_QWORD *)(v14 + 24);
    if (v18 >> 60 != 15)
    {
      v19 = v13[2];
      v13[2] = *v16;
      v13[3] = v18;
      sub_1BA69D314(v19, v17);
      goto LABEL_6;
    }
    sub_1BA92BD1C((uint64_t)(v13 + 2));
  }
  *((_OWORD *)v13 + 1) = *(_OWORD *)v16;
LABEL_6:
  v20 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleLeaderboardEntry()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6139C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleLeaderboardEntry()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB613A4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BB86C8B0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t destroy for PuzzlePlayer(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >> 60 != 15)
    return sub_1BA69D314(*(_QWORD *)(a1 + 16), v3);
  return result;
}

uint64_t initializeWithCopy for PuzzlePlayer(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _OWORD *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 2;
  v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    v6 = *(_QWORD *)v4;
    sub_1BA69D44C(v6, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v5;
  }
  return a1;
}

_QWORD *assignWithCopy for PuzzlePlayer(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2 + 2;
  v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_1BA69D44C(*v4, v5);
      v8 = a1[2];
      v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_1BA69D314(v8, v9);
      return a1;
    }
    sub_1BA92BD1C((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_1BA69D44C(*v4, v5);
  a1[2] = v6;
  a1[3] = v5;
  return a1;
}

_QWORD *assignWithTake for PuzzlePlayer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2 + 2;
  v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_1BA69D314(v8, v6);
      return a1;
    }
    sub_1BA92BD1C((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  return a1;
}

ValueMetadata *type metadata accessor for PuzzlePlayer()
{
  return &type metadata for PuzzlePlayer;
}

uint64_t _s8NewsFeed17PuzzleLeaderboardV11PlayerScopeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB613D24 + 4 * byte_1BB933F44[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB613D58 + 4 * byte_1BB933F3F[v4]))();
}

uint64_t sub_1BB613D58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB613D60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB613D68);
  return result;
}

uint64_t sub_1BB613D74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB613D7CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB613D80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB613D88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzlePlayer.CodingKeys()
{
  return &type metadata for PuzzlePlayer.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PuzzleLeaderboardEntry.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB613DF0 + 4 * byte_1BB933F4E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB613E24 + 4 * byte_1BB933F49[v4]))();
}

uint64_t sub_1BB613E24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB613E2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB613E34);
  return result;
}

uint64_t sub_1BB613E40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB613E48);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB613E4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB613E54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLeaderboardEntry.CodingKeys()
{
  return &type metadata for PuzzleLeaderboardEntry.CodingKeys;
}

unint64_t sub_1BB613E74()
{
  unint64_t result;

  result = qword_1EF2C90B0;
  if (!qword_1EF2C90B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934280, &type metadata for PuzzleLeaderboardEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C90B0);
  }
  return result;
}

unint64_t sub_1BB613EBC()
{
  unint64_t result;

  result = qword_1EF2C90B8;
  if (!qword_1EF2C90B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934338, &type metadata for PuzzlePlayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C90B8);
  }
  return result;
}

unint64_t sub_1BB613F04()
{
  unint64_t result;

  result = qword_1EF2C90C0;
  if (!qword_1EF2C90C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9342A8, &type metadata for PuzzlePlayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C90C0);
  }
  return result;
}

unint64_t sub_1BB613F4C()
{
  unint64_t result;

  result = qword_1EF2C90C8;
  if (!qword_1EF2C90C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9342D0, &type metadata for PuzzlePlayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C90C8);
  }
  return result;
}

unint64_t sub_1BB613F94()
{
  unint64_t result;

  result = qword_1EF2C90D0;
  if (!qword_1EF2C90D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9341F0, &type metadata for PuzzleLeaderboardEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C90D0);
  }
  return result;
}

unint64_t sub_1BB613FDC()
{
  unint64_t result;

  result = qword_1EF2C90D8;
  if (!qword_1EF2C90D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934218, &type metadata for PuzzleLeaderboardEntry.CodingKeys);
    atomic_store(result, &qword_1EF2C90D8);
  }
  return result;
}

uint64_t sub_1BB614020(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB9944E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BB614124(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657474616D726F66 && a2 == 0xEE0065726F635364 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726579616C70 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1802396018 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t FormatStyle.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStyle.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStyle.types.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStyle.init(identifier:name:description:styles:types:options:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

uint64_t FormatStyle.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStyle.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStyle.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t FormatStyle.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStyle.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatStyle.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatStyle.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatStyle.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatStyle.styles.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*FormatStyle.styles.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatStyle.types.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatStyle.types.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*FormatStyle.options.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB614520()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed11FormatStyleV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v6 = a1[5];
  v5 = a1[6];
  v8 = a2[2];
  v7 = a2[3];
  v10 = a2[4];
  v9 = a2[5];
  v11 = a2[6];
  v18 = a2[7];
  v19 = a1[7];
  v16 = a2[8];
  v17 = a1[8];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_1BB874398() & 1) == 0)
    return 0;
  if (v3)
  {
    if (!v7 || (v2 != v8 || v3 != v7) && (sub_1BB874398() & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if (v6)
  {
    if (!v9 || (v4 != v10 || v6 != v9) && (sub_1BB874398() & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_1BA883C24(v5, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BA88ABB4(v19, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1BA883260(v17, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14 & 1;
    }
  }
  return 0;
}

unint64_t sub_1BB6146EC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA896988();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB614710(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA836BF4();
  a1[2] = sub_1BA836C38();
  result = sub_1BB614744();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB614744()
{
  unint64_t result;

  result = qword_1ED3D01D8;
  if (!qword_1ED3D01D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStyle, &type metadata for FormatStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3D01D8);
  }
  return result;
}

uint64_t sub_1BB614788@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB614794(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1BB6147D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6147E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1BB614820@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB61482C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 48) = v3;
  return result;
}

uint64_t sub_1BB61486C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB614878(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1BB6148B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6148C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 64) = v3;
  return result;
}

_QWORD *assignWithCopy for FormatStyle(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatStyle()
{
  return &type metadata for FormatStyle;
}

void sub_1BB614A64(uint64_t a1, uint64_t a2)
{
  sub_1BA7DE3A4(a1, a2);
}

void sub_1BB614AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1BB86CAD8();
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v7);
  __asm { BR              X10 }
}

void sub_1BB614BD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v5 = v1;
  v7 = *(_QWORD *)(v4 - 96);
  v8 = *(_QWORD *)(v4 - 88);
  sub_1BB615AEC(v2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_BYTE *)(v3 + 40), v7);
  if (!v8)
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, a1);
}

void sub_1BB614F8C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[12];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a5;
  v30[1] = a4;
  v30[11] = a3;
  v34 = a6;
  v35 = a2;
  v36 = a1;
  v31 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v31);
  v30[6] = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v7);
  v30[9] = (char *)v30 - v8;
  v9 = type metadata accessor for FormatOption();
  v30[7] = *(_QWORD *)(v9 - 8);
  v30[8] = v9;
  MEMORY[0x1E0C80A78](v9);
  v30[5] = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v11);
  v30[10] = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v13);
  v30[0] = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v30[2] = (char *)v30 - v16;
  MEMORY[0x1E0C80A78](v17);
  v30[3] = (char *)v30 - v18;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v30[4] = (char *)v30 - v21;
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  v25 = sub_1BB86C8B0();
  v32 = *(_QWORD *)(v25 - 8);
  v33 = v25;
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78](v29);
  __asm { BR              X10 }
}

void sub_1BB61529C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0[18];
  v2 = v0[9];
  v3 = v0[16];
  v4 = v0[11];
  FormatOptionCollection.subscript.getter(v3, v4, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v0[7] + 48))(v2, 1, v0[8]) == 1)
  {
    sub_1BA502AD0(v2, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    v5 = (uint64_t *)v0[6];
    *v5 = v3;
    v5[1] = v4;
    swift_storeEnumTagMultiPayload();
    v6 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    sub_1BA689E84();
    v7 = (void *)swift_allocError();
    sub_1BAB53980((uint64_t)v5, v8);
    if ((v6 & 1) != 0)
    {
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);

    }
    else
    {
      swift_bridgeObjectRetain();
      swift_willThrow();
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    }
  }
  else
  {
    v9 = v2;
    v10 = v0[5];
    sub_1BA8569CC(v9, v10);
    swift_retain();
    v11 = v0[17];
    sub_1BA711ECC();
    swift_release();
    if (!v11)
    {
      sub_1BB315B2C(v0[19], v3, v4, v0[1], v1, v0[15]);
      swift_release();
    }
    sub_1BA4A2E80(v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  }
}

void sub_1BB615AEC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[54];

  v27[5] = a3;
  v27[6] = a4;
  v27[11] = a2;
  v27[12] = a1;
  v27[10] = a6;
  v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v7);
  v27[7] = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v9);
  v27[0] = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v27[2] = (char *)v27 - v12;
  MEMORY[0x1E0C80A78](v13);
  v27[3] = (char *)v27 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v27[4] = (char *)v27 - v17;
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v27[1] = (char *)v27 - v21;
  v22 = sub_1BB86C8B0();
  v27[8] = *(_QWORD *)(v22 - 8);
  v27[9] = v22;
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  __asm { BR              X10 }
}

void sub_1BB615D3C()
{
  uint64_t *v0;

  sub_1BB636614(v0[12], v0[11], v0[5], v0[6], v0[10]);
}

unint64_t FormatBindingDateTimeExpression.logic.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75D96C(v2, v3);
}

void sub_1BB6163C0(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];
  int v13;

  v12[0] = a2;
  v13 = a1;
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v12[1] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  __asm { BR              X10 }
}

uint64_t sub_1BB616540()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(v5 - 72);
  result = sub_1BB3115D8(*(_QWORD *)(v4 + *v2), v0 + 24);
  if (!v6)
  {
    v8 = objc_msgSend(*(id *)(v0 + 80), sel_publishDate);
    if (v8)
    {
      v9 = v8;
      sub_1BB86C874();

      v10 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v1, 0, 1, v10);
    }
    else
    {
      v10 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v1, 1, 1, v10);
    }
    sub_1BA50236C(v1, v3);
    sub_1BB86C8B0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v3, 1, v10) == 1)
    {
      sub_1BA502AD0(v3, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      type metadata accessor for FormatLayoutError();
      sub_1BA689E84();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return sub_1BA93EBE8(v0 + 24);
    }
    else
    {
      sub_1BA93EBE8(v0 + 24);
      return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v11 + 32))(*(_QWORD *)v0, v3, v10);
    }
  }
  return result;
}

void sub_1BB616B78(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[44];
  int v13;

  v12[1] = a2;
  v13 = a1;
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v12[2] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  __asm { BR              X10 }
}

uint64_t sub_1BB616CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1BA9AD100();
  if (!v1)
  {
    v5 = objc_msgSend(*(id *)(v0 + 80), sel_publishDate);
    if (v5)
    {
      v6 = v5;
      sub_1BB86C874();

      v7 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 0, 1, v7);
    }
    else
    {
      v7 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
    }
    sub_1BA50236C(v2, v3);
    sub_1BB86C8B0();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
    {
      sub_1BA502AD0(v3, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      type metadata accessor for FormatLayoutError();
      sub_1BA689E84();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return sub_1BA93EBE8(v0 + 24);
    }
    else
    {
      sub_1BA93EBE8(v0 + 24);
      return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v8 + 32))(*(_QWORD *)(v0 + 8), v3, v7);
    }
  }
  return result;
}

unint64_t FormatBindingDateTimeExpression.dateTime.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1BA739250(v2);
}

unint64_t FormatBindingDateTimeExpression.logic.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1BA7DE08C(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t (*FormatBindingDateTimeExpression.logic.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB617330(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v12 - v9;
  sub_1BA739250(a2);
  sub_1BB614A64(a1, a2);
  sub_1BA6F5D74(a2);
  sub_1BA75D96C(a3, a4);
  LOBYTE(a1) = sub_1BA7DE0C4((uint64_t)v10, a1, a3, a4, (void (*)(uint64_t, unint64_t))sub_1BB614A64);
  sub_1BA7DE08C(a3, a4);
  sub_1BA502AD0((uint64_t)v10, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  return a1 & 1;
}

uint64_t sub_1BB617440(_QWORD *a1)
{
  return FormatBindingDateTimeExpression.encode(to:)(a1);
}

BOOL _s8NewsFeed31FormatBindingDateTimeExpressionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v8;
  _QWORD v9[2];

  v2 = a1[1];
  v3 = a1[2];
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v9[0] = *a1;
  static FormatDateTime.== infix(_:_:)((uint64_t)v9);
  if ((v6 & 1) == 0)
    return 0;
  if (v2 == 12)
  {
    if (v4 == 12)
    {
LABEL_7:
      sub_1BA7DE08C(v2, v3);
      sub_1BA7DE08C(v4, v5);
      sub_1BA7DE08C(v2, v3);
      return 1;
    }
LABEL_9:
    sub_1BA75D96C(v4, v5);
    sub_1BA75D96C(v2, v3);
    sub_1BA7DE08C(v2, v3);
    sub_1BA7DE08C(v4, v5);
    return 0;
  }
  if (v2 == 13)
  {
    if (v4 != 13)
      goto LABEL_9;
    goto LABEL_7;
  }
  if ((v4 & 0xFE) == 0xC)
    goto LABEL_9;
  LOBYTE(v9[0]) = v2;
  v9[1] = v3;
  sub_1BA75D96C(v2, v3);
  sub_1BA75D96C(v4, v5);
  sub_1BA75D96C(v4, v5);
  sub_1BA75D96C(v2, v3);
  sub_1BA75D96C(v4, v5);
  sub_1BA75D96C(v2, v3);
  v8 = _s8NewsFeed43FormatBindingDateTimeExpressionLogicCompareV2eeoiySbAC_ACtFZ_0((uint64_t)v9);
  sub_1BA7DE08C(v2, v3);
  sub_1BA7DE08C(v4, v5);
  sub_1BA7DE08C(v4, v5);
  sub_1BA7DE08C(v2, v3);
  sub_1BA7DE08C(v4, v5);
  sub_1BA7DE08C(v2, v3);
  return (v8 & 1) != 0;
}

unint64_t sub_1BB617608(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB61762C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB61762C()
{
  unint64_t result;

  result = qword_1EF2C90E8;
  if (!qword_1EF2C90E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpression, &type metadata for FormatBindingDateTimeExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C90E8);
  }
  return result;
}

unint64_t sub_1BB617670(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA60EDB8();
  a1[2] = sub_1BAEF5C50();
  result = sub_1BB6176A4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6176A4()
{
  unint64_t result;

  result = qword_1EF2C90F0;
  if (!qword_1EF2C90F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpression, &type metadata for FormatBindingDateTimeExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C90F0);
  }
  return result;
}

unint64_t sub_1BB6176E8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = v3;
  a2[1] = v2;
  return sub_1BA75D96C(v3, v2);
}

unint64_t sub_1BB6176F8(unint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t result;

  v3 = *a1;
  v4 = a1[1];
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  sub_1BA75D96C(*a1, v4);
  result = sub_1BA7DE08C(v5, v6);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  return result;
}

unint64_t destroy for FormatBindingDateTimeExpression(unint64_t *a1)
{
  unint64_t result;

  result = sub_1BA6F5D74(*a1);
  if ((a1[1] & 0xFE) != 0xC)
    return sub_1BA6F5D74(a1[2]);
  return result;
}

uint64_t _s8NewsFeed31FormatBindingDateTimeExpressionVwCP_0(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  sub_1BA739250(*a2);
  *(_QWORD *)a1 = v4;
  v5 = a2[1];
  if ((v5 & 0xFE) == 0xC)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  }
  else
  {
    *(_BYTE *)(a1 + 8) = v5;
    v6 = a2[2];
    sub_1BA739250(v6);
    *(_QWORD *)(a1 + 16) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for FormatBindingDateTimeExpression(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v4 = *a2;
  sub_1BA739250(*a2);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v4;
  sub_1BA6F5D74(v5);
  v6 = a2[1];
  v7 = v6 & 0xFE;
  if ((*(_QWORD *)(a1 + 8) & 0xFELL) != 0xC)
  {
    if (v7 != 12)
    {
      *(_BYTE *)(a1 + 8) = v6;
      v9 = a2[2];
      sub_1BA739250(v9);
      v10 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v9;
      sub_1BA6F5D74(v10);
      return a1;
    }
    sub_1BB6178C0(a1 + 8);
    goto LABEL_6;
  }
  if (v7 == 12)
  {
LABEL_6:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  *(_BYTE *)(a1 + 8) = v6;
  v8 = a2[2];
  sub_1BA739250(v8);
  *(_QWORD *)(a1 + 16) = v8;
  return a1;
}

uint64_t sub_1BB6178C0(uint64_t a1)
{
  destroy for FormatBindingDateTimeExpressionLogicCompare(a1);
  return a1;
}

uint64_t assignWithTake for FormatBindingDateTimeExpression(uint64_t a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *a2;
  sub_1BA6F5D74(v4);
  if ((*(_QWORD *)(a1 + 8) & 0xFELL) != 0xC)
  {
    if ((a2[1] & 0xFELL) != 0xC)
    {
      *(_BYTE *)(a1 + 8) = a2[1];
      v5 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = a2[2];
      sub_1BA6F5D74(v5);
      return a1;
    }
    sub_1BB6178C0(a1 + 8);
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingDateTimeExpression()
{
  return &type metadata for FormatBindingDateTimeExpression;
}

uint64_t FormatColorOrExpression.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t result;

  swift_retain();
  FormatColorExpression.bindChildren(binder:context:)();
  result = swift_release();
  if (!v0)
  {
    swift_retain();
    FormatColorExpression.bindChildren(binder:context:)();
    return swift_release();
  }
  return result;
}

uint64_t FormatColorOrExpression.lhsExpression.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatColorOrExpression.rhsExpression.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1BB617A54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorOrExpression.init(from:)(a1, a2);
}

uint64_t sub_1BB617A68(_QWORD *a1)
{
  return FormatColorOrExpression.encode(to:)(a1);
}

uint64_t sub_1BB617A7C()
{
  return FormatColorOrExpression.bindChildren(binder:context:)();
}

unint64_t sub_1BB617AAC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB617AD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB617AD0()
{
  unint64_t result;

  result = qword_1EF2C90F8;
  if (!qword_1EF2C90F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorOrExpression, &type metadata for FormatColorOrExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C90F8);
  }
  return result;
}

unint64_t sub_1BB617B14(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE89504();
  a1[2] = sub_1BAEF4ADC();
  result = sub_1BB617B48();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB617B48()
{
  unint64_t result;

  result = qword_1EF2C9100;
  if (!qword_1EF2C9100)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorOrExpression, &type metadata for FormatColorOrExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C9100);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatColorOrExpression()
{
  return &type metadata for FormatColorOrExpression;
}

id sub_1BB617C60()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  objc_super v10;

  v1 = v0;
  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    v5 = objc_msgSend(v1, sel_navigationItem);
    v6 = (void *)sub_1BB872970();
    objc_msgSend(v5, sel_setTitle_, v6);

    v7 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_tableView];
    objc_msgSend(v7, sel_setDataSource_, v1);
    type metadata accessor for SubtitleTableViewCell();
    sub_1BB873234();
    type metadata accessor for DebugFormatHistoryMeasurementCell();
    sub_1BB873234();
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v7, sel_setTableFooterView_, v8);

    result = objc_msgSend(v1, sel_view);
    if (result)
    {
      v9 = result;
      objc_msgSend(result, sel_addSubview_, v7);

      swift_retain();
      sub_1BB86E4AC();
      swift_release();
      sub_1BB86E470();
      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1BB617E88(char *a1, uint64_t *a2)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t i;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  double v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  char *v41;
  __int128 v42[12];
  uint64_t v43;
  __int128 aBlock;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;

  v3 = *a2;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v4 = *(double *)&aBlock;
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    for (i = 0; i != v5; ++i)
    {
      v8 = *(_QWORD *)(v3 + 32 + 200 * i + 184);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v10 = (double *)(v8 + 48);
        v7 = 0.0;
        do
        {
          v11 = *v10;
          v10 += 4;
          v7 = v7 + v11;
          --v9;
        }
        while (v9);
      }
      else
      {
        v7 = 0.0;
      }
      if (v4 <= v7)
        v4 = v7;
    }
  }
  *(double *)&aBlock = v4;
  swift_retain();
  sub_1BB86D2C4();
  swift_release();
  v12 = *(_QWORD *)(v3 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v57 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B868(0, v12, 0);
    v13 = v57;
    v14 = v3 + 32;
    do
    {
      aBlock = *(_OWORD *)v14;
      v15 = *(_OWORD *)(v14 + 16);
      v16 = *(_OWORD *)(v14 + 32);
      v17 = *(_OWORD *)(v14 + 64);
      v47 = *(_OWORD *)(v14 + 48);
      v48 = v17;
      v45 = v15;
      v46 = v16;
      v18 = *(_OWORD *)(v14 + 80);
      v19 = *(_OWORD *)(v14 + 96);
      v20 = *(_OWORD *)(v14 + 128);
      v51 = *(_OWORD *)(v14 + 112);
      v52 = v20;
      v49 = v18;
      v50 = v19;
      v21 = *(_OWORD *)(v14 + 144);
      v22 = *(_OWORD *)(v14 + 160);
      v23 = *(_OWORD *)(v14 + 176);
      v56 = *(_QWORD *)(v14 + 192);
      v54 = v22;
      v55 = v23;
      v53 = v21;
      v24 = *(_OWORD *)(v14 + 176);
      v42[10] = *(_OWORD *)(v14 + 160);
      v42[11] = v24;
      v43 = *(_QWORD *)(v14 + 192);
      v25 = *(_OWORD *)(v14 + 112);
      v42[6] = *(_OWORD *)(v14 + 96);
      v42[7] = v25;
      v26 = *(_OWORD *)(v14 + 144);
      v42[8] = *(_OWORD *)(v14 + 128);
      v42[9] = v26;
      v27 = *(_OWORD *)(v14 + 48);
      v42[2] = *(_OWORD *)(v14 + 32);
      v42[3] = v27;
      v28 = *(_OWORD *)(v14 + 80);
      v42[4] = *(_OWORD *)(v14 + 64);
      v42[5] = v28;
      v29 = *(_OWORD *)(v14 + 16);
      v42[0] = *(_OWORD *)v14;
      v42[1] = v29;
      sub_1BB40F004((uint64_t)&aBlock);
      v30 = sub_1BB37DC84(v42, v4);
      v57 = v13;
      v32 = *(_QWORD *)(v13 + 16);
      v31 = *(_QWORD *)(v13 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1BAC7B868(v31 > 1, v32 + 1, 1);
        v13 = v57;
      }
      *(_QWORD *)(v13 + 16) = v32 + 1;
      *(_QWORD *)(v13 + 8 * v32 + 32) = v30;
      v14 += 200;
      --v12;
    }
    while (v12);
  }
  *(_QWORD *)&a1[OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_sections] = v13;
  swift_bridgeObjectRelease();
  v33 = (void *)objc_opt_self();
  v34 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_tableView];
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v34;
  *(_QWORD *)&v46 = sub_1BB618BF0;
  *((_QWORD *)&v46 + 1) = v35;
  v36 = MEMORY[0x1E0C809B0];
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v45 = sub_1BA4F1DD8;
  *((_QWORD *)&v45 + 1) = &block_descriptor_93;
  v37 = _Block_copy(&aBlock);
  v38 = v34;
  swift_release();
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = a1;
  *(_QWORD *)&v46 = sub_1BB618C00;
  *((_QWORD *)&v46 + 1) = v39;
  *(_QWORD *)&aBlock = v36;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v45 = sub_1BB2D2738;
  *((_QWORD *)&v45 + 1) = &block_descriptor_6_6;
  v40 = _Block_copy(&aBlock);
  v41 = a1;
  swift_release();
  objc_msgSend(v33, sel_animateWithDuration_animations_completion_, v37, v40, 0.0);
  _Block_release(v40);
  _Block_release(v37);
}

uint64_t type metadata accessor for DebugFormatHistoryViewController()
{
  return objc_opt_self();
}

unint64_t sub_1BB61839C()
{
  uint64_t v0;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  uint64_t inited;
  void **v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  _QWORD v51[3];
  uint64_t v52;
  _BYTE v53[40];
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char v58;
  _BYTE v59[72];

  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_sections);
  if (result >= *(_QWORD *)(v2 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v3 = *(_QWORD *)(v2 + 8 * result + 32);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (result >= *(_QWORD *)(v3 + 16))
  {
LABEL_26:
    __break(1u);
    return result;
  }
  sub_1BB618B5C(v3 + (result << 6) + 32, (uint64_t)v59);
  swift_bridgeObjectRelease();
  sub_1BB618B5C((uint64_t)v59, (uint64_t)&v54);
  if ((v58 & 1) != 0)
  {
    v4 = v55;
    v5 = v56;
    v50 = v56;
    v6 = v57;
    type metadata accessor for DebugFormatHistoryMeasurementCell();
    v7 = (char *)sub_1BB87321C();
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_timeInMilliseconds] = v4;
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_totalTimeInMilliseconds] = v6;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_barView], sel_setBackgroundColor_, v5);
    sub_1BA847C08();
    inited = swift_initStackObject();
    v9 = (void **)MEMORY[0x1E0DC1138];
    *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
    v10 = *v9;
    *(_QWORD *)(inited + 32) = *v9;
    v49 = (id)objc_opt_self();
    swift_bridgeObjectRetain();
    v48 = v10;
    v11 = objc_msgSend(v49, sel_systemFontOfSize_, 13.0);
    v47 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    *(_QWORD *)(inited + 40) = v11;
    v12 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(inited + 64) = v47;
    *(_QWORD *)(inited + 72) = v12;
    v46 = (id)objc_opt_self();
    v45 = v12;
    v13 = objc_msgSend(v46, sel_labelColor);
    v14 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    *(_QWORD *)(inited + 104) = v14;
    *(_QWORD *)(inited + 80) = v13;
    sub_1BA76E82C(inited);
    v15 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
    v16 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BA76F768();
    v17 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);

    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v19 = swift_allocObject();
    v20 = MEMORY[0x1E0DEB070];
    *(_OWORD *)(v19 + 16) = xmmword_1BB87CE70;
    v21 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v19 + 56) = v20;
    *(_QWORD *)(v19 + 64) = v21;
    *(_QWORD *)(v19 + 32) = v4;
    sub_1BB8729D0();
    v22 = swift_initStackObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BB87A390;
    *(_QWORD *)(v22 + 32) = v48;
    v23 = v48;
    *(_QWORD *)(v22 + 40) = objc_msgSend(v49, sel_systemFontOfSize_, 13.0);
    *(_QWORD *)(v22 + 64) = v47;
    *(_QWORD *)(v22 + 72) = v45;
    v24 = v45;
    v25 = objc_msgSend(v46, sel_secondaryLabelColor);
    *(_QWORD *)(v22 + 104) = v14;
    *(_QWORD *)(v22 + 80) = v25;
    sub_1BA76E82C(v22);
    v26 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v27 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v28 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

    objc_msgSend(v18, sel_appendAttributedString_, v29);
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_titleLabel], sel_setAttributedText_, v18);

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA92F1BC((uint64_t)&v55, (uint64_t)v53);
    type metadata accessor for SubtitleTableViewCell();
    v7 = (char *)sub_1BB87321C();
    v30 = objc_msgSend(v7, sel_textLabel);
    if (v30)
    {
      v31 = v30;
      v32 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
      objc_msgSend(v31, sel_setFont_, v32);

    }
    v33 = objc_msgSend(v7, sel_textLabel);
    if (v33)
    {
      v34 = v33;
      v35 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v34, sel_setText_, v35);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v36 = objc_msgSend(v7, sel_detailTextLabel);
    if (v36)
    {
      v37 = v36;
      v38 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
      objc_msgSend(v37, sel_setFont_, v38);

    }
    v39 = objc_msgSend(v7, sel_detailTextLabel);
    if (v39)
    {
      v40 = v39;
      sub_1BA92F200((uint64_t)v53, (uint64_t)v51);
      if (v52)
      {
        __swift_project_boxed_opaque_existential_1(v51, v52);
        sub_1BB87420C();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
      }
      else
      {
        sub_1BA92F11C((uint64_t)v51);
      }
      v41 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v40, sel_setText_, v41);

    }
    v42 = objc_msgSend(v7, sel_detailTextLabel);
    if (v42)
    {
      v43 = v42;
      v44 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
      objc_msgSend(v43, sel_setTextColor_, v44);

    }
    sub_1BA92F11C((uint64_t)v53);
  }
  sub_1BB618B98((uint64_t)v59);
  return (unint64_t)v7;
}

uint64_t sub_1BB618B5C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DebugFormatHistoryItem(a2, a1);
  return a2;
}

uint64_t sub_1BB618B98(uint64_t a1)
{
  destroy for DebugFormatHistoryItem(a1);
  return a1;
}

uint64_t sub_1BB618BCC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BB618BF0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_reloadData);
}

id sub_1BB618C00()
{
  uint64_t v0;
  void *v1;
  double v2;

  v1 = *(void **)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_tableView);
  objc_msgSend(v1, sel_adjustedContentInset);
  return objc_msgSend(v1, sel_setContentOffset_animated_, 0, 0.0, -v2);
}

ValueMetadata *type metadata accessor for SportsStandingRecordLeague()
{
  return &type metadata for SportsStandingRecordLeague;
}

uint64_t sub_1BB618C64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BB619150(0, &qword_1EF2C9160, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB61910C();
  sub_1BB8746C8();
  v9[15] = 0;
  sub_1BB87417C();
  if (!v1)
  {
    v9[14] = 1;
    sub_1BB87417C();
    v9[13] = 2;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB618DA8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x795465756761656CLL;
  if (*v0 != 1)
    v1 = 0x6163696E6F6E6163;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_1BB618E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB619350(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB618E2C()
{
  sub_1BB61910C();
  return sub_1BB874710();
}

uint64_t sub_1BB618E54()
{
  sub_1BB61910C();
  return sub_1BB87471C();
}

double sub_1BB618E7C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1BB618ED0(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1BB618EBC(_QWORD *a1)
{
  return sub_1BB618C64(a1);
}

uint64_t sub_1BB618ED0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  sub_1BB619150(0, &qword_1EF2C9150, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB61910C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v25 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v15 = v14;
  v23 = v13;
  v26 = 2;
  swift_bridgeObjectRetain();
  v24 = v15;
  v16 = sub_1BB874098();
  v18 = v17;
  v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v20 = v24;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  return result;
}

unint64_t sub_1BB61910C()
{
  unint64_t result;

  result = qword_1EF2C9158;
  if (!qword_1EF2C9158)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934890, &type metadata for SportsStandingRecordLeague.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9158);
  }
  return result;
}

void sub_1BB619150(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB61910C();
    v7 = a3(a1, &type metadata for SportsStandingRecordLeague.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsStandingRecordLeague.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB6191F8 + 4 * byte_1BB934755[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB61922C + 4 * asc_1BB934750[v4]))();
}

uint64_t sub_1BB61922C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB619234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB61923CLL);
  return result;
}

uint64_t sub_1BB619248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB619250);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB619254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB61925C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsStandingRecordLeague.CodingKeys()
{
  return &type metadata for SportsStandingRecordLeague.CodingKeys;
}

unint64_t sub_1BB61927C()
{
  unint64_t result;

  result = qword_1EF2C9168;
  if (!qword_1EF2C9168)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934868, &type metadata for SportsStandingRecordLeague.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9168);
  }
  return result;
}

unint64_t sub_1BB6192C4()
{
  unint64_t result;

  result = qword_1EF2C9170;
  if (!qword_1EF2C9170)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9347D8, &type metadata for SportsStandingRecordLeague.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9170);
  }
  return result;
}

unint64_t sub_1BB61930C()
{
  unint64_t result;

  result = qword_1EF2C9178;
  if (!qword_1EF2C9178)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934800, &type metadata for SportsStandingRecordLeague.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9178);
  }
  return result;
}

uint64_t sub_1BB619350(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x795465756761656CLL && a2 == 0xEA00000000006570 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6163696E6F6E6163 && a2 == 0xEB0000000064496CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

id VideoPlaceholderView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1BB619508()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___imageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___imageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___imageView);
  }
  else
  {
    v4 = (void *)sub_1BB872970();
    v5 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v4);

    if (v5)
    {
      v6 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 73.0);
      v7 = objc_msgSend(v5, sel_imageWithConfiguration_, v6);

    }
    else
    {
      v7 = 0;
    }
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v7);

    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BB619630()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___blurView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___blurView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___blurView);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 11);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v4);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BB6196DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___vibrancyView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___vibrancyView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___vibrancyView);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 12);
    v5 = objc_msgSend((id)objc_opt_self(), sel_effectForBlurEffect_style_, v4, 1);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v5);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

char *VideoPlaceholderView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  objc_super v34;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___imageView] = 0;
  v11 = OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView_label;
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v13 = v5;
  v14 = objc_msgSend(v12, sel_init);
  sub_1BA7425CC();
  v15 = (void *)sub_1BB873690();
  objc_msgSend(v14, sel_setFont_, v15);

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v17 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v18 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setText_, v18, 0x80000001BB9945E0);

  objc_msgSend(v14, sel_setTextAlignment_, 1);
  objc_msgSend(v14, sel_setLineBreakMode_, 0);
  objc_msgSend(v14, sel_setNumberOfLines_, 2);
  *(_QWORD *)&v5[v11] = v14;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___blurView] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___vibrancyView] = 0;

  v34.receiver = v13;
  v34.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v34, sel_initWithFrame_, a1, a2, a3, a4);
  v20 = (void *)objc_opt_self();
  v21 = v19;
  v22 = objc_msgSend(v20, sel_clearColor);
  objc_msgSend(v21, sel_setBackgroundColor_, v22);

  v23 = (char *)v21;
  v24 = sub_1BB619630();
  objc_msgSend(v23, sel_addSubview_, v24);

  v25 = sub_1BB6196DC();
  v26 = objc_msgSend(v25, sel_contentView);

  v27 = sub_1BB619508();
  objc_msgSend(v26, sel_addSubview_, v27);

  v28 = sub_1BB6196DC();
  v29 = objc_msgSend(v28, sel_contentView);

  objc_msgSend(v29, sel_addSubview_, *(_QWORD *)&v23[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView_label]);
  v30 = sub_1BB619630();
  v31 = objc_msgSend(v30, sel_contentView);

  v32 = sub_1BB6196DC();
  objc_msgSend(v31, sel_addSubview_, v32);

  return v23;
}

Swift::Void __swiftcall VideoPlaceholderView.layoutSubviews()()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double Height;
  double v14;
  id v15;
  double MidX;
  double MidY;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  double v28;
  objc_super v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v29.receiver = v0;
  v29.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v29, sel_layoutSubviews);
  v1 = sub_1BB619630();
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);

  v2 = sub_1BB6196DC();
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

  v3 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView_label];
  objc_msgSend(v3, sel_sizeToFit);
  v4 = sub_1BB619508();
  objc_msgSend(v4, sel_frame);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v30.origin.x = v6;
  v30.origin.y = v8;
  v30.size.width = v10;
  v30.size.height = v12;
  Height = CGRectGetHeight(v30);
  objc_msgSend(v3, sel_frame);
  v14 = (Height - CGRectGetHeight(v31)) * 0.5;
  v15 = sub_1BB619508();
  objc_msgSend(v0, sel_bounds);
  MidX = CGRectGetMidX(v32);
  objc_msgSend(v0, sel_bounds);
  MidY = CGRectGetMidY(v33);
  v18 = sub_1BB619508();
  objc_msgSend(v18, sel_frame);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v34.origin.x = v20;
  v34.origin.y = v22;
  v34.size.width = v24;
  v34.size.height = v26;
  objc_msgSend(v15, sel_setCenter_, MidX, v14 + MidY - CGRectGetHeight(v34) * 0.5 + -5.0);

  objc_msgSend(v0, sel_bounds);
  v27 = CGRectGetMidX(v35);
  objc_msgSend(v0, sel_bounds);
  v28 = CGRectGetMidY(v36);
  objc_msgSend(v3, sel_frame);
  objc_msgSend(v3, sel_setCenter_, v27, v14 + v28 + CGRectGetHeight(v37) * 0.5 + 5.0);
}

id VideoPlaceholderView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VideoPlaceholderView()
{
  return objc_opt_self();
}

void sub_1BB619E90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  void *v7;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___imageView] = 0;
  v2 = OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView_label;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  sub_1BA7425CC();
  v4 = (void *)sub_1BB873690();
  objc_msgSend(v3, sel_setFont_, v4);

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v7 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setText_, v7, 0x80000001BB9945E0);

  objc_msgSend(v3, sel_setTextAlignment_, 1);
  objc_msgSend(v3, sel_setLineBreakMode_, 0);
  objc_msgSend(v3, sel_setNumberOfLines_, 2);
  *(_QWORD *)&v1[v2] = v3;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___blurView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___vibrancyView] = 0;

  sub_1BB873EAC();
  __break(1u);
}

uint64_t static FormatLiveActivityBinding.Command.== infix(_:_:)(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  __int128 v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  char v12;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_BYTE *)a1 + 24);
  v4 = *((_QWORD *)a2 + 2);
  v5 = *((_BYTE *)a2 + 24);
  v10 = *a1;
  v11 = v2;
  v12 = v3;
  v7 = *a2;
  v8 = v4;
  v9 = v5;
  return _s8NewsFeed16FormatSymbolNameO2eeoiySbAC_ACtFZ_0((uint64_t)&v10, (uint64_t)&v7) & 1;
}

uint64_t sub_1BB61A0F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatLiveActivityBinding.Command.init(from:)(a1, a2);
}

uint64_t sub_1BB61A104(_QWORD *a1)
{
  return FormatLiveActivityBinding.Command.encode(to:)(a1);
}

uint64_t sub_1BB61A118(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  __int128 v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  char v12;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_BYTE *)a1 + 24);
  v4 = *((_QWORD *)a2 + 2);
  v5 = *((_BYTE *)a2 + 24);
  v10 = *a1;
  v11 = v2;
  v12 = v3;
  v7 = *a2;
  v8 = v4;
  v9 = v5;
  return _s8NewsFeed16FormatSymbolNameO2eeoiySbAC_ACtFZ_0((uint64_t)&v10, (uint64_t)&v7) & 1;
}

unint64_t sub_1BB61A170(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB61A194();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB61A194()
{
  unint64_t result;

  result = qword_1EF2C91C8;
  if (!qword_1EF2C91C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLiveActivityBinding.Command, &type metadata for FormatLiveActivityBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2C91C8);
  }
  return result;
}

unint64_t sub_1BB61A1D8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE89FD8();
  a1[2] = sub_1BAEF48DC();
  result = sub_1BB61A20C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB61A20C()
{
  unint64_t result;

  result = qword_1EF2C91D0;
  if (!qword_1EF2C91D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLiveActivityBinding.Command, &type metadata for FormatLiveActivityBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2C91D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLiveActivityBinding.Command()
{
  return &type metadata for FormatLiveActivityBinding.Command;
}

uint64_t getEnumTagSinglePayload for DebugFormatWeather(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatWeather(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_1BB61A33C + 4 * byte_1BB9349E5[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_1BB61A370 + 4 * asc_1BB9349E0[v4]))();
}

uint64_t sub_1BB61A370(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB61A378(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB61A380);
  return result;
}

uint64_t sub_1BB61A38C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB61A394);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_1BB61A398(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB61A3A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatWeather()
{
  return &type metadata for DebugFormatWeather;
}

unint64_t sub_1BB61A3C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C91D8;
  if (!qword_1EF2C91D8)
  {
    sub_1BB61A408();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C91D8);
  }
  return result;
}

void sub_1BB61A408()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C91E0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C91E0);
  }
}

void sub_1BB61A45C(char a1)
{
  uint64_t v2;

  v2 = sub_1BB86CCE8();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1BB61A4CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for FeedWeather(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 1, 1, v1);
}

uint64_t sub_1BB61A504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0CEEA40], v1);
  sub_1BB61AAF4(1, v0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  v4 = type metadata accessor for FeedWeather(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v0, 0, 1, v4);
}

uint64_t sub_1BB61AAF4@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  int *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unsigned __int8 v33;

  v30 = sub_1BB87270C();
  v4 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86CCD0();
  v28 = v8;
  v29 = v7;
  sub_1BA968EAC(&v33);
  v27 = v33;
  sub_1BB86CCB8();
  v31 = 0;
  v32 = 0xE000000000000000;
  sub_1BB873CB4();
  v9 = sub_1BB86CCDC();
  v11 = v10;
  swift_bridgeObjectRelease();
  v31 = v9;
  v32 = v11;
  sub_1BB872AFC("aceholderView.swift");
  v24 = v32;
  v25 = v31;
  v26 = a1 ^ 1;
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_fahrenheit);
  v14 = (int *)type metadata accessor for FeedWeather(0);
  sub_1BA9405B0();
  sub_1BB86BD64();
  v15 = objc_msgSend(v12, sel_fahrenheit);
  type metadata accessor for FeedWeather.Temperature(0);
  sub_1BB86BD64();
  v16 = objc_msgSend(v12, sel_fahrenheit);
  sub_1BB86BD64();
  v17 = objc_msgSend(v12, sel_fahrenheit);
  sub_1BB86BD64();
  *(_OWORD *)a2 = xmmword_1BB934B90;
  v18 = v30;
  v19 = v28;
  *(_QWORD *)(a2 + 16) = v29;
  *(_QWORD *)(a2 + 24) = v19;
  *(_BYTE *)(a2 + 32) = v27;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2 + v14[7], v6, v18);
  v21 = (uint64_t *)(a2 + v14[10]);
  v22 = v24;
  *v21 = v25;
  v21[1] = v22;
  *(_BYTE *)(a2 + v14[8]) = v26;
  return result;
}

uint64_t sub_1BB61AD78(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB61ADAC + 4 * byte_1BB934A1E[a1]))(0x6E6F697461636F6CLL, 0xE800000000000000);
}

uint64_t sub_1BB61ADAC()
{
  return 0x6C43796C74726170;
}

uint64_t sub_1BB61ADCC()
{
  return 0x7964756F6C63;
}

uint64_t sub_1BB61ADE0()
{
  return 7630696;
}

uint64_t sub_1BB61ADF0()
{
  return 0x646967697266;
}

uint64_t sub_1BB61AE04()
{
  return 2038063464;
}

uint64_t sub_1BB61AE14()
{
  return 1953723748;
}

uint64_t sub_1BB61AE24()
{
  return 6778726;
}

uint64_t sub_1BB61AE34()
{
  return 0x797A65657262;
}

uint64_t sub_1BB61AE48()
{
  return 0x6C616369706F7274;
}

uint64_t sub_1BB61AE6C()
{
  return 0x6E61636972727568;
}

uint64_t sub_1BB61AE88()
{
  return 0x656C7A7A697264;
}

uint64_t sub_1BB61AEA0()
{
  return 1852399986;
}

uint64_t sub_1BB61AEB0()
{
  return 0x6961527976616568;
}

unint64_t sub_1BB61AED0()
{
  return 0xD000000000000016;
}

uint64_t sub_1BB61B014(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB61AD78(*a1);
  v5 = v4;
  if (v3 == sub_1BB61AD78(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB61B09C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB61AD78(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB61B0FC()
{
  unsigned __int8 *v0;

  sub_1BB61AD78(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB61B13C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB61AD78(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB61B198@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB61B30C();
  *a1 = result;
  return result;
}

uint64_t sub_1BB61B1C4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB61AD78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB61B1EC()
{
  sub_1BB1AFFDC();
  return sub_1BB872CDC();
}

uint64_t sub_1BB61B22C()
{
  sub_1BB1AFFDC();
  return sub_1BB872CD0();
}

uint64_t sub_1BB61B274()
{
  sub_1BB1AFFDC();
  return sub_1BB872CC4();
}

void sub_1BB61B2B4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72513E8;
}

unint64_t sub_1BB61B2C8()
{
  unint64_t result;

  result = qword_1EF2C91E8;
  if (!qword_1EF2C91E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934B60, &type metadata for DebugFormatWeather);
    atomic_store(result, (unint64_t *)&qword_1EF2C91E8);
  }
  return result;
}

uint64_t sub_1BB61B30C()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A)
    return 26;
  else
    return v0;
}

uint64_t dispatch thunk of IssuesFetchOperationFactoryType.createIssuesFetchOperation(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of IssuesFetchOperationFactoryType.createIssuesFetchOperation(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for IssuesFetchOperationFactory()
{
  return objc_opt_self();
}

id sub_1BB61B38C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  sub_1BA6EA07C();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  v7 = objc_allocWithZone(MEMORY[0x1E0D58C48]);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithContext_issueIDs_, v5, v8);

  swift_unknownObjectRelease();
  return v9;
}

id sub_1BB61B44C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v2 = objc_allocWithZone(MEMORY[0x1E0D58C48]);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithContext_issueIDs_, v1, v3);

  swift_unknownObjectRelease();
  return v4;
}

uint64_t destroy for DebugFormatGroupSection(uint64_t a1)
{
  sub_1BB1827CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugFormatGroupSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1BB1827B4(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatGroupSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1BB1827B4(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1BB1827CC(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugFormatGroupSection(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1BB1827CC(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatGroupSection()
{
  return &type metadata for DebugFormatGroupSection;
}

uint64_t sub_1BB61B648(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v3 = a1;
  if (a3)
  {
    if (a3 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else if (a1 | a2)
    {
      return 0x6D6F6F727377654ELL;
    }
    else
    {
      return 0x6567616B636150;
    }
  }
  else
  {
    v6 = sub_1BB87420C();
    sub_1BB872AFC(v4);
    return v6;
  }
  return v3;
}

char *sub_1BB61B710(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v7;
        v8 = *((_QWORD *)a2 + 2);
        v9 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = v8;
        *((_QWORD *)a1 + 3) = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v15 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v15;
        v16 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v16;
        v17 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v17;
        a1[48] = a2[48];
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        v18 = a2 + 64;
        v19 = *((_QWORD *)a2 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19 <= 2)
        {
          *((_OWORD *)a1 + 4) = *v18;
        }
        else
        {
          a1[64] = *(_BYTE *)v18;
          *((_QWORD *)a1 + 9) = v19;
          swift_bridgeObjectRetain();
        }
        v26 = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = v26;
        v27 = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = v27;
        v28 = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 15) = v28;
        a1[128] = a2[128];
        *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v12 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v12;
        v13 = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v13)
        {
          v14 = *((_QWORD *)a2 + 4);
          *((_QWORD *)a1 + 3) = v13;
          *((_QWORD *)a1 + 4) = v14;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        v20 = *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
        v21 = &a1[v20];
        v22 = &a2[v20];
        v23 = sub_1BB86E710();
        v24 = *(_QWORD *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1BA74E57C();
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB61B9EC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2:
LABEL_6:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 24))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v3 = a1 + *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
      v4 = sub_1BB86E710();
      v5 = *(_QWORD *)(v4 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
      if (!(_DWORD)result)
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1BB61BB3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v6;
      v7 = *((_QWORD *)a2 + 2);
      v8 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = v7;
      *((_QWORD *)a1 + 3) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 1u:
      v12 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v12;
      v13 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v13;
      v14 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v14;
      a1[48] = a2[48];
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      v15 = a2 + 64;
      v16 = *((_QWORD *)a2 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16 <= 2)
      {
        *((_OWORD *)a1 + 4) = *v15;
      }
      else
      {
        a1[64] = *(_BYTE *)v15;
        *((_QWORD *)a1 + 9) = v16;
        swift_bridgeObjectRetain();
      }
      v23 = *((_QWORD *)a2 + 11);
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      *((_QWORD *)a1 + 11) = v23;
      v24 = *((_QWORD *)a2 + 13);
      *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
      *((_QWORD *)a1 + 13) = v24;
      v25 = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
      *((_QWORD *)a1 + 15) = v25;
      a1[128] = a2[128];
      *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 2u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 3u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v9 = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 2) = v9;
      v10 = *((_QWORD *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10)
      {
        v11 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = v10;
        *((_QWORD *)a1 + 4) = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      }
      v17 = *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_1BB86E710();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_1BA74E57C();
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
LABEL_15:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1BB61BDE4(char *a1, char *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_1BB61C0F0((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        v6 = *((_QWORD *)a2 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v6 <= 2)
        {
          *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        }
        else
        {
          a1[64] = a2[64];
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          swift_bridgeObjectRetain();
        }
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        a1[128] = a2[128];
        *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 3u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v7 = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7)
        {
          *((_QWORD *)a1 + 3) = v7;
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        v8 = *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_1BB86E710();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_1BA74E57C();
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB61C0F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatGroupItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatGroupItem()
{
  uint64_t result;

  result = qword_1EF2C9260;
  if (!qword_1EF2C9260)
    return swift_getSingletonMetadata();
  return result;
}

char *sub_1BB61C168(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    v6 = *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
    v7 = &a1[v6];
    v8 = &a2[v6];
    v9 = sub_1BB86E710();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1BA74E57C();
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1BB61C27C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1BB61C0F0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      v6 = *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = sub_1BB86E710();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_1BA74E57C();
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BB61C3A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatSlotDefinitionItemSet();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for DebugFormatGroupSectionDescriptor(uint64_t a1)
{
  return sub_1BB1827CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed33DebugFormatGroupSectionDescriptorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BB1827B4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugFormatGroupSectionDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BB1827B4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BB1827CC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugFormatGroupSectionDescriptor(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BB1827CC(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatGroupSectionDescriptor()
{
  return &type metadata for DebugFormatGroupSectionDescriptor;
}

uint64_t sub_1BB61C530@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.DateTime.init(from:)(a1, a2);
}

void sub_1BB61C544(_QWORD *a1)
{
  FormatGroupBinding.DateTime.encode(to:)(a1);
}

uint64_t _s8NewsFeed18FormatGroupBindingV8DateTimeO2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BB61C580 + 4 * byte_1BB934CB4[*a1 >> 5]))();
}

BOOL sub_1BB61C580@<W0>(unsigned int a1@<W8>)
{
  return a1 < 0x20;
}

unint64_t sub_1BB61C5EC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB61C610();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB61C610()
{
  unint64_t result;

  result = qword_1EF2C9298;
  if (!qword_1EF2C9298)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.DateTime, &type metadata for FormatGroupBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2C9298);
  }
  return result;
}

unint64_t sub_1BB61C654(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8EC10();
  a1[2] = sub_1BAEF3E94();
  result = sub_1BB61C688();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB61C688()
{
  unint64_t result;

  result = qword_1EF2C92A0;
  if (!qword_1EF2C92A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.DateTime, &type metadata for FormatGroupBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2C92A0);
  }
  return result;
}

uint64_t _s8DateTimeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x1C)
    goto LABEL_17;
  if (a2 + 228 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 228) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 228;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 228;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 228;
  }
LABEL_17:
  v6 = (*a1 & 0x18 | (*a1 >> 5)) ^ 0x1F;
  if (v6 >= 0x1B)
    v6 = -1;
  return v6 + 1;
}

uint64_t _s8DateTimeOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 228 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 228) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1C)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1B)
    return ((uint64_t (*)(void))((char *)&loc_1BB61C7B4 + 4 * byte_1BB934CBE[v4]))();
  *a1 = a2 - 28;
  return ((uint64_t (*)(void))((char *)sub_1BB61C7E8 + 4 * byte_1BB934CB9[v4]))();
}

uint64_t sub_1BB61C7E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB61C7F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB61C7F8);
  return result;
}

uint64_t sub_1BB61C810(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB61C818);
  *(_BYTE *)result = 8 * (((-a2 >> 3) & 3) - 4 * a2);
  return result;
}

uint64_t sub_1BB61C81C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB61C824(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB61C830(unsigned __int8 *a1)
{
  return *a1 >> 5;
}

_BYTE *sub_1BB61C83C(_BYTE *result, char a2)
{
  *result = *result & 7 | (32 * a2);
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.DateTime()
{
  return &type metadata for FormatGroupBinding.DateTime;
}

_QWORD *sub_1BB61C860(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t *v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD v56[3];
  __int128 v57;
  _BYTE v58[48];

  v2 = type metadata accessor for FormatInspectionItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  v52 = v3;
  MEMORY[0x1E0C80A78](v2);
  v50 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v43 = (uint64_t)&v42 - v6;
  sub_1BA8C88C8(0);
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v47 = (uint64_t)&v42 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v11)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_22;
  }
  v46 = v9;
  swift_bridgeObjectRetain();
  v42 = a1;
  v13 = v12;
  v14 = (uint64_t *)(a1 + 40);
  v53 = xmmword_1BB8A1A10;
  v15 = sub_1BA8C88C8;
  v45 = xmmword_1BB87CE70;
  v44 = xmmword_1BB8D4900;
  do
  {
    v16 = *v14;
    if ((*v14 & 0x8000000000000000) == 0)
    {
      memset(v56, 0, sizeof(v56));
      v57 = v53;
LABEL_4:
      sub_1BA4A2E80((uint64_t)v56, (uint64_t (*)(_QWORD))sub_1BB61CDA0);
      goto LABEL_5;
    }
    v55 = v13;
    v17 = *(v14 - 1);
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v45;
    v20 = v19 + v18;
    v54 = v17;
    sub_1BB61CDBC(v17, v16);
    v21 = (id)(v16 & 0x7FFFFFFFFFFFFFFFLL);
    v22 = sub_1BA907794((void *)(v16 & 0x7FFFFFFFFFFFFFFFLL));
    v23 = v51;
    v24 = (uint64_t *)(v20 + *(int *)(v51 + 24));
    *v24 = v22;
    v24[1] = v25;
    v26 = v15;
    v27 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v24, 0, 1, v27);
    *(_OWORD *)v20 = v44;
    *(_QWORD *)(v20 + 16) = 0;
    *(_QWORD *)(v20 + 24) = 0;
    v28 = v20 + *(int *)(v23 + 28);
    *(_QWORD *)v28 = 0;
    *(_QWORD *)(v28 + 8) = 0;
    *(_BYTE *)(v28 + 16) = -1;
    v29 = v52;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v20, 0, 1, v23);
    v30 = v47;
    sub_1BAF892E4(v20, v47);
    v31 = v30;
    v32 = v46;
    sub_1BA5193C4(v31, v46, (uint64_t (*)(_QWORD))v26);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v32, 1, v23) == 1)
    {
      sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))v26);
      v33 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v34 = v43;
      sub_1BA5193C4(v32, v43, type metadata accessor for FormatInspectionItem);
      sub_1BA5193C4(v34, v50, type metadata accessor for FormatInspectionItem);
      v33 = MEMORY[0x1E0DEE9D8];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_1BB38C7D4(0, *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16) + 1, 1, MEMORY[0x1E0DEE9D8]);
      v36 = *(_QWORD *)(v33 + 16);
      v35 = *(_QWORD *)(v33 + 24);
      if (v36 >= v35 >> 1)
        v33 = sub_1BB38C7D4(v35 > 1, v36 + 1, 1, v33);
      *(_QWORD *)(v33 + 16) = v36 + 1;
      sub_1BA5193C4(v50, v33+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v36, type metadata accessor for FormatInspectionItem);
    }
    v15 = v26;
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(_QWORD *)&v57 = &type metadata for FormatInspectionGroup;
    *((_QWORD *)&v57 + 1) = &off_1E72D2F60;
    v37 = (_QWORD *)swift_allocObject();
    v56[0] = v37;
    v37[2] = 0x726F727245;
    v37[3] = 0xE500000000000000;
    v37[4] = 0;
    v37[5] = 0;
    v37[6] = v33;

    sub_1BB61CE1C(v54, v16);
    v13 = v55;
    if ((_QWORD)v57 == 1)
      goto LABEL_4;
    sub_1BA5193C4((uint64_t)v56, (uint64_t)v58, (uint64_t (*)(_QWORD))sub_1BA89EA04);
    sub_1BA5193C4((uint64_t)v58, (uint64_t)v56, (uint64_t (*)(_QWORD))sub_1BA89EA04);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1BB38F5E0(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_1BB38F5E0((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    sub_1BA5193C4((uint64_t)v56, (uint64_t)&v13[5 * v39 + 4], (uint64_t (*)(_QWORD))sub_1BA89EA04);
LABEL_5:
    v14 += 2;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
LABEL_22:
  v40 = sub_1BB6DF010((uint64_t)v13);
  swift_bridgeObjectRelease();
  return v40;
}

void sub_1BB61CDA0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C92A8, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

id sub_1BB61CDBC(uint64_t a1, uint64_t a2)
{
  void *v3;

  if ((a2 & 0x8000000000000000) == 0)
    return (id)swift_retain();
  v3 = (void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  swift_retain();
  return v3;
}

uint64_t sub_1BB61CDE8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB61CE1C(uint64_t a1, uint64_t a2)
{
  void *v2;

  if (a2 < 0)
  {
    v2 = (void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
    swift_release();

  }
  else
  {
    swift_release();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for DebugFormatUploadEntryResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1BB61CDBC(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

void destroy for DebugFormatUploadEntryResult(uint64_t *a1)
{
  sub_1BB61CE1C(*a1, a1[1]);
}

uint64_t *assignWithCopy for DebugFormatUploadEntryResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1BB61CDBC(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1BB61CE1C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for DebugFormatUploadEntryResult(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1BB61CE1C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatUploadEntryResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x3FFF);
  v3 = (((*(_QWORD *)(a1 + 8) >> 50) >> 13) | (2
                                                           * ((*(_QWORD *)(a1 + 8) >> 50) & 0x1C00 | ((*(_QWORD *)(a1 + 8) & 7) << 7) | (*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFE)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DebugFormatUploadEntryResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x3FFE)
  {
    *(_QWORD *)result = a2 - 0x3FFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

_QWORD *sub_1BB61CFF0(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *result &= 0xFFFFFFFFFFFFFF8uLL;
  result[1] = v2;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadEntryResult()
{
  return &type metadata for DebugFormatUploadEntryResult;
}

void __swiftcall PuzzleComponentAccessoryViewEvent.init(identifier:item:target:)(NewsFeed::PuzzleComponentAccessoryViewEvent *__return_ptr retstr, Swift::String identifier, Swift::String item, NewsFeed::PuzzleComponentEventTarget target)
{
  NewsFeed::PuzzleComponentEventTarget v4;

  v4 = *(_BYTE *)target;
  retstr->identifier = identifier;
  retstr->item = item;
  retstr->target = v4;
}

uint64_t PuzzleComponentAccessoryViewEvent.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleComponentAccessoryViewEvent.item.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void PuzzleComponentAccessoryViewEvent.target.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

BOOL static PuzzleComponentEventTarget.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PuzzleComponentEventTarget.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t PuzzleComponentEventTarget.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t PuzzleComponentAccessoryViewEvent.scriptId.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t PuzzleComponentAccessoryViewEvent.scriptEventName.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t PuzzleComponentAccessoryViewEvent.scriptEventDetail.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1BA6D24F0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  *(_QWORD *)(inited + 32) = 25705;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 0x64695F6D657469;
  *(_QWORD *)(inited + 120) = v6;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  *(_QWORD *)(inited + 96) = v4;
  *(_QWORD *)(inited + 104) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA76E994(inited);
}

unint64_t sub_1BB61D200()
{
  unint64_t result;

  result = qword_1EF2C92B0;
  if (!qword_1EF2C92B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleComponentEventTarget, &type metadata for PuzzleComponentEventTarget);
    atomic_store(result, (unint64_t *)&qword_1EF2C92B0);
  }
  return result;
}

unint64_t sub_1BB61D244()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1BB61D260()
{
  return 0xD00000000000001FLL;
}

ValueMetadata *type metadata accessor for PuzzleComponentAccessoryViewEvent()
{
  return &type metadata for PuzzleComponentAccessoryViewEvent;
}

uint64_t storeEnumTagSinglePayload for PuzzleComponentEventTarget(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB61D2DC + 4 * byte_1BB934E05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB61D310 + 4 * byte_1BB934E00[v4]))();
}

uint64_t sub_1BB61D310(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB61D318(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB61D320);
  return result;
}

uint64_t sub_1BB61D32C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB61D334);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB61D338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB61D340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleComponentEventTarget()
{
  return &type metadata for PuzzleComponentEventTarget;
}

uint64_t sub_1BB61D35C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A0F0(0, v1, 0);
    v2 = v11;
    v4 = *(_QWORD *)(type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota() - 8);
    v5 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = *v5;
      v9 = *(_QWORD *)(v11 + 16);
      v8 = *(_QWORD *)(v11 + 24);
      if (v9 >= v8 >> 1)
        sub_1BAC7A0F0(v8 > 1, v9 + 1, 1);
      v5 = (uint64_t *)((char *)v5 + v6);
      *(_QWORD *)(v11 + 16) = v9 + 1;
      *(_QWORD *)(v11 + 8 * v9 + 32) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB61D444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_1BB873EA0();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = sub_1BB86D078();
      v5 = sub_1BB872E74();
      *(_QWORD *)(v5 + 16) = a2;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
      v8(v5 + v7, a1, v4);
      v9 = a2 - 1;
      if (a2 != 1)
      {
        v10 = *(_QWORD *)(v6 + 72);
        v11 = v5 + v10 + v7;
        do
        {
          v8(v11, a1, v4);
          v11 += v10;
          --v9;
        }
        while (v9);
      }
    }
    else
    {
      v5 = MEMORY[0x1E0DEE9D8];
    }
    v12 = sub_1BB86D078();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
    return v5;
  }
  return result;
}

uint64_t sub_1BB61D574(unint64_t a1, double a2)
{
  uint64_t result;
  double *v4;
  unint64_t v5;
  double v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x1E0DEE9D8];
  result = sub_1BB872E74();
  *(_QWORD *)(result + 16) = a1;
  v4 = (double *)(result + 32);
  if (a1 < 4)
  {
    v5 = 0;
    v6 = a2;
LABEL_9:
    v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  v6 = a2;
  v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  v8 = (int64x2_t *)(result + 48);
  v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_1BB61D664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t v23;
  char *v24;

  v0 = sub_1BB86D078();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v24 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - v4;
  v6 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB61E394(0, (unint64_t *)&qword_1ED3A2500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v23 - v16;
  __swift_allocate_value_buffer(v6, qword_1ED3A5178);
  v23 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED3A5178);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v17, 1, 1, v0);
  v18 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = v18;
  sub_1BB3A0708((uint64_t)v17, (uint64_t)v14);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48);
  if (v19(v14, 1, v0) == 1)
  {
    sub_1BB86D06C();
    sub_1BB61DA7C((uint64_t)v14);
    v20 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
  }
  else
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
    v20(v5, v14, v0);
  }
  v20(&v8[*(int *)(v6 + 24)], v5, v0);
  sub_1BB3A0708((uint64_t)v17, (uint64_t)v11);
  if (v19(v11, 1, v0) == 1)
  {
    v21 = v24;
    sub_1BB86D06C();
    sub_1BB61DA7C((uint64_t)v11);
  }
  else
  {
    v21 = v24;
    v20(v24, v11, v0);
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v21, v0);
  sub_1BB61DA7C((uint64_t)v17);
  *(_QWORD *)&v8[*(int *)(v6 + 28)] = MEMORY[0x1E0DEE9D8];
  return sub_1BB61E3EC((uint64_t)v8, v23);
}

uint64_t FeedGroupBundleArticleQuotas.init(defaultRatio:slottedRatios:defaultRatioDepthTransform:slottedRatiosDepthTransforms:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  sub_1BB61E394(0, (unint64_t *)&qword_1ED3A2500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - v11;
  v13 = sub_1BB86D078();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)a4 = a5;
  v17 = MEMORY[0x1E0DEE9D8];
  if (a1)
    v17 = a1;
  *(_QWORD *)(a4 + 8) = v17;
  sub_1BB3A0708(a2, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1BB86D06C();
    sub_1BB61DA7C((uint64_t)v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    swift_bridgeObjectRetain();
  }
  v18 = type metadata accessor for FeedGroupBundleArticleQuotas();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a4 + *(int *)(v18 + 24), v16, v13);
  v19 = sub_1BB61DBAC(a3, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1BB61DA7C(a2);
  *(_QWORD *)(a4 + *(int *)(v18 + 28)) = v19;
  return result;
}

uint64_t sub_1BB61DA7C(uint64_t a1)
{
  uint64_t v2;

  sub_1BB61E394(0, (unint64_t *)&qword_1ED3A2500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static FeedGroupBundleArticleQuotas.zero.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3A5190 != -1)
    swift_once();
  v2 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3A5178);
  return sub_1BA4C2DD8(v3, a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
}

double FeedGroupBundleArticleQuotas.defaultRatio.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t FeedGroupBundleArticleQuotas.slottedRatios.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupBundleArticleQuotas.defaultRatioDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupBundleArticleQuotas() + 24);
  v4 = sub_1BB86D078();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupBundleArticleQuotas.slottedRatiosDepthTransforms.getter()
{
  type metadata accessor for FeedGroupBundleArticleQuotas();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB61DBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];

  sub_1BB61E394(0, (unint64_t *)&qword_1ED3A2500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v31 - v10;
  v12 = sub_1BB86D078();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v31 - v17;
  if (!a1)
  {
    sub_1BB3A0708(a3, (uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_1BB86D06C();
      sub_1BB61DA7C((uint64_t)v11);
      if (a2)
      {
LABEL_6:
        v20 = *(_QWORD *)(a2 + 16);
LABEL_16:
        v29 = (uint64_t)v18;
        return sub_1BB61D444(v29, v20);
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
      if (a2)
        goto LABEL_6;
    }
    v20 = 0;
    goto LABEL_16;
  }
  if (a2)
    v19 = *(_QWORD *)(a2 + 16);
  else
    v19 = 0;
  v21 = *(_QWORD *)(a1 + 16);
  if (v19 != v21)
  {
    v22 = qword_1ED3BA7F8;
    swift_bridgeObjectRetain();
    if (v22 != -1)
      swift_once();
    v23 = (void *)qword_1ED476860;
    sub_1BA7AA598();
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BB87A390;
    v25 = v23;
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x1E0DEB418];
    v27 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v24 + 64) = v27;
    *(_QWORD *)(v24 + 32) = v21;
    if (a2)
      v28 = *(_QWORD *)(a2 + 16);
    else
      v28 = 0;
    *(_QWORD *)(v24 + 96) = v26;
    *(_QWORD *)(v24 + 104) = v27;
    *(_QWORD *)(v24 + 72) = v28;
    sub_1BB87330C();
    sub_1BB86EF44("Provided slottedRatiosDepthTransforms whos count %ld doesn't match slottedRatios count %ld. Using identity function for all slotted ratios", v31[0], v31[1]);

    swift_bridgeObjectRelease();
    sub_1BB3A0708(a3, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
    {
      sub_1BB86D06C();
      sub_1BB61DA7C((uint64_t)v8);
      if (a2)
      {
LABEL_20:
        v20 = *(_QWORD *)(a2 + 16);
LABEL_23:
        v29 = (uint64_t)v15;
        return sub_1BB61D444(v29, v20);
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v8, v12);
      if (a2)
        goto LABEL_20;
    }
    v20 = 0;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t FeedGroupBundleArticleQuotas.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char v50;
  uint64_t v51;

  v42 = a2;
  v47 = sub_1BB86D078();
  v44 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v45 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB61E394(0, (unint64_t *)&qword_1ED3A2500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - v9;
  sub_1BB61E7AC(0, &qword_1ED3AB3D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v38 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB61E2FC();
  v48 = v15;
  v16 = (uint64_t)v49;
  sub_1BB87468C();
  if (v16)
  {
    v24 = (uint64_t)a1;
  }
  else
  {
    v41 = v7;
    v49 = v10;
    v17 = v13;
    v18 = v46;
    v19 = v47;
    sub_1BB61E340();
    v50 = 1;
    sub_1BB61E808((unint64_t *)&qword_1ED3B9600, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
    sub_1BB874068();
    v20 = v12;
    if (v51)
      v21 = v51;
    else
      v21 = MEMORY[0x1E0DEE9D8];
    LOBYTE(v51) = 0;
    sub_1BB8740B0();
    v23 = v22;
    LOBYTE(v51) = 2;
    sub_1BA4A2870(&qword_1ED3A24F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA848], MEMORY[0x1E0DDA868]);
    sub_1BB874068();
    sub_1BB61E394(0, &qword_1ED3A2ED0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v50 = 3;
    sub_1BB61E864(&qword_1ED3A2EE0, &qword_1ED3A24F8, MEMORY[0x1E0DDA868], MEMORY[0x1E0DEAF40]);
    sub_1BB874068();
    v39 = v51;
    v40 = v20;
    v26 = v21;
    v27 = (uint64_t)v18;
    *v18 = v23;
    v28 = v26;
    *(_QWORD *)(v27 + 8) = v26;
    v29 = (uint64_t)v41;
    sub_1BB3A0708((uint64_t)v49, (uint64_t)v41);
    v30 = v44;
    v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v29, 1, v19);
    v32 = v30;
    v33 = v43;
    v38 = a1;
    v34 = v45;
    if (v31 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BB86D06C();
      sub_1BB61DA7C(v29);
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v27 + *(int *)(v33 + 24), v34, v19);
    }
    else
    {
      v35 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 32);
      v35(v45, v29, v19);
      swift_bridgeObjectRetain();
      v35((char *)(v27 + *(int *)(v33 + 24)), (uint64_t)v34, v19);
    }
    v36 = (uint64_t)v49;
    v37 = sub_1BB61DBAC(v39, v28, (uint64_t)v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB61DA7C(v36);
    *(_QWORD *)(v27 + *(int *)(v33 + 28)) = v37;
    sub_1BB61E3EC(v27, v42);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v48, v40);
    v24 = (uint64_t)v38;
  }
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

unint64_t sub_1BB61E2FC()
{
  unint64_t result;

  result = qword_1ED3A5160;
  if (!qword_1ED3A5160)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9350C8, &type metadata for FeedGroupBundleArticleQuotas.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A5160);
  }
  return result;
}

void sub_1BB61E340()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B95F8)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B95F8);
  }
}

void sub_1BB61E394(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB86D078();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB61E3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedGroupBundleArticleQuotas();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FeedGroupBundleArticleQuotas.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v2 = v1;
  v4 = sub_1BB86D078();
  v5 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  v35 = v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  sub_1BB61E7AC(0, &qword_1ED3AB600, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB61E2FC();
  sub_1BB8746C8();
  LOBYTE(v38) = 0;
  v16 = v36;
  sub_1BB874194();
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v33 = v7;
  v18 = v35;
  v36 = v13;
  if (*(_QWORD *)(*(_QWORD *)(v2 + 8) + 16))
  {
    v38 = *(_QWORD *)(v2 + 8);
    v37 = 1;
    sub_1BB61E340();
    sub_1BB61E808(&qword_1ED39BF50, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  v31 = v12;
  v32 = v15;
  v29 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v30 = v2;
  v19 = v2 + *(int *)(v29 + 24);
  v20 = v18;
  v21 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v10, v19, v34);
  v22 = v33;
  sub_1BB86D06C();
  sub_1BA4A2870(&qword_1ED3A24F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA848], MEMORY[0x1E0DDA860]);
  v23 = sub_1BB872958();
  v24 = *(void (**)(char *, uint64_t))(v20 + 8);
  v24(v22, v21);
  v24(v10, v21);
  if ((v23 & 1) != 0)
  {
    v25 = v36;
    v26 = v31;
  }
  else
  {
    LOBYTE(v38) = 2;
    sub_1BA4A2870(&qword_1ED3A24E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA848], MEMORY[0x1E0DDA858]);
    v26 = v31;
    sub_1BB8741AC();
    v25 = v36;
  }
  if (!*(_QWORD *)(*(_QWORD *)(v30 + *(int *)(v29 + 28)) + 16))
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v32, v26);
  v38 = *(_QWORD *)(v30 + *(int *)(v29 + 28));
  v37 = 3;
  sub_1BB61E394(0, &qword_1ED3A2ED0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB61E864(&qword_1ED3A2ED8, &qword_1ED3A24E8, MEMORY[0x1E0DDA858], MEMORY[0x1E0DEAF10]);
  v27 = v32;
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v26);
}

void sub_1BB61E7AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB61E2FC();
    v7 = a3(a1, &type metadata for FeedGroupBundleArticleQuotas.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB61E808(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BB61E340();
    v8 = a2;
    result = MEMORY[0x1BCCE5B24](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB61E864(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BB61E394(255, &qword_1ED3A2ED0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA848], a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB61E8F4(char *a1)
{
  sub_1BB804DD8(*a1);
}

void sub_1BB61E900()
{
  char *v0;

  sub_1BA8D3B24(*v0);
}

void sub_1BB61E908(uint64_t a1)
{
  char *v1;

  sub_1BA9D45D4(a1, *v1);
}

void sub_1BB61E910(uint64_t a1)
{
  char *v1;

  sub_1BAB0B47C(a1, *v1);
}

uint64_t sub_1BB61E918@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB61F9C8();
  *a1 = result;
  return result;
}

uint64_t sub_1BB61E944()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB61E97C + 4 * byte_1BB934F00[*v0]))();
}

void sub_1BB61E97C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "slottedRatios");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1BB61E9A4(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000001BB95AD70;
}

void sub_1BB61E9C4(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x80000001BB95AD90;
}

uint64_t sub_1BB61E9E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB61EA20 + 4 * byte_1BB934F04[*v0]))(0x52746C7561666564, 0xEC0000006F697461);
}

uint64_t sub_1BB61EA20()
{
  return 0x52646574746F6C73;
}

unint64_t sub_1BB61EA44()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1BB61EA60()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1BB61EA80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB61F9C8();
  *a1 = result;
  return result;
}

uint64_t sub_1BB61EAA4()
{
  sub_1BB61E2FC();
  return sub_1BB874710();
}

uint64_t sub_1BB61EACC()
{
  sub_1BB61E2FC();
  return sub_1BB87471C();
}

uint64_t sub_1BB61EAF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupBundleArticleQuotas.init(from:)(a1, a2);
}

uint64_t sub_1BB61EB0C(_QWORD *a1)
{
  return FeedGroupBundleArticleQuotas.encode(to:)(a1);
}

uint64_t sub_1BB61EB24()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A5190 != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED3A5178);
  sub_1BA4C2DD8(v3, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
  sub_1BA870800();
  v4 = swift_allocObject();
  result = sub_1BB61E3EC((uint64_t)v2, v4 + *(_QWORD *)(*(_QWORD *)v4 + 112));
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120)) = MEMORY[0x1E0DEE9D8];
  qword_1ED3A5008 = v4;
  return result;
}

uint64_t static FeedGroupKnobsRuleValue<>.zero.getter()
{
  if (qword_1ED3A5018 != -1)
    swift_once();
  return swift_retain();
}

uint64_t FeedGroupBundleArticleQuotas.merge(explicitSlotBundleArticleQuotas:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  double *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = sub_1BB86D078();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1E0C80A78](v10);
  v12 = (double *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB61E394(0, (unint64_t *)&qword_1ED3A2500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v26 - v17;
  if (!a1)
    return sub_1BA4C2DD8((uint64_t)v3, a2, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
  v27 = a2;
  v19 = sub_1BB61EE94(v3, a1);
  v21 = v20;
  v22 = *v3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v18, (char *)v3 + *(int *)(v10 + 24), v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  *v12 = v22;
  *((_QWORD *)v12 + 1) = v19;
  sub_1BB3A0708((uint64_t)v18, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1BB86D06C();
    sub_1BB61DA7C((uint64_t)v15);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v12 + *(int *)(v10 + 24), v9, v6);
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v24(v9, v15, v6);
    swift_bridgeObjectRetain();
    v24((char *)v12 + *(int *)(v10 + 24), v9, v6);
  }
  v25 = sub_1BB61DBAC(v21, v19, (uint64_t)v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB61DA7C((uint64_t)v18);
  *(_QWORD *)((char *)v12 + *(int *)(v10 + 28)) = v25;
  return sub_1BB61E3EC((uint64_t)v12, v27);
}

uint64_t sub_1BB61EE94(double *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  char v23;
  uint64_t result;
  int64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)();
  uint64_t (*v38)();
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double *v49;
  char *v50;
  unint64_t v51;
  _QWORD *v52;

  v4 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB61E394(0, (unint64_t *)&qword_1ED3A2500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - v8;
  v10 = type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota();
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (unint64_t *)((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1BB86D078();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v50 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v43 - v17;
  v19 = (_QWORD *)*((_QWORD *)a1 + 1);
  v46 = v4;
  v20 = *(int *)(v4 + 28);
  v49 = a1;
  v51 = *(_QWORD *)((char *)a1 + v20);
  v52 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = a2;
  v21 = sub_1BB61D35C(a2);
  v22 = sub_1BB82CCBC(v21);
  LOBYTE(a2) = v23;
  result = swift_bridgeObjectRelease();
  v25 = 0;
  if ((a2 & 1) == 0)
  {
    v25 = v22 + 1;
    if (__OFADD__(v22, 1))
      goto LABEL_26;
  }
  v26 = v19[2];
  v27 = __OFSUB__(v25, v26);
  v28 = v25 - v26;
  if (v27)
    goto LABEL_24;
  v29 = v49;
  v30 = sub_1BB61D574(v28 & ~(v28 >> 63), *v49);
  sub_1BB3877DC(v30);
  v31 = (char *)v29 + *(int *)(v46 + 24);
  v45 = *(uint64_t (**)(char *, char *, uint64_t))(v14 + 16);
  result = v45(v18, v31, v13);
  v32 = *(_QWORD *)(v51 + 16);
  v27 = __OFSUB__(v25, v32);
  v33 = v25 - v32;
  if (!v27)
  {
    v34 = sub_1BB61D444((uint64_t)v18, v33 & ~(v33 >> 63));
    sub_1BB3877C8(v34);
    v35 = *(_QWORD *)(v44 + 16);
    if (!v35)
      return (uint64_t)v52;
    v36 = v44 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
    v47 = *(_QWORD *)(v47 + 72);
    swift_bridgeObjectRetain();
    v37 = type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota;
    while (1)
    {
      v38 = v37;
      sub_1BA4C2DD8(v36, (uint64_t)v12, (uint64_t (*)(_QWORD))v37);
      v39 = *v12;
      v40 = v12[1];
      v41 = v52;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
      {
        if ((v39 & 0x8000000000000000) != 0)
          goto LABEL_23;
      }
      else
      {
        result = (uint64_t)sub_1BAA67F50(v41);
        v41 = (_QWORD *)result;
        if ((v39 & 0x8000000000000000) != 0)
          goto LABEL_23;
      }
      if (v39 >= v41[2])
        break;
      v41[v39 + 4] = v40;
      v52 = v41;
      sub_1BB3A0708((uint64_t)v12 + *(int *)(v48 + 24), (uint64_t)v9);
      sub_1BA4C2DD8((uint64_t)v49, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
      {
        v45(v50, &v6[*(int *)(v46 + 24)], v13);
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
        sub_1BB61DA7C((uint64_t)v9);
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v50, v9, v13);
      }
      v42 = v51;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1BAA67F3C(v42);
        v42 = result;
        v51 = result;
      }
      if (v39 >= *(_QWORD *)(v42 + 16))
        goto LABEL_22;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 40))(v42+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v39, v50, v13);
      v37 = v38;
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))v38);
      v36 += v47;
      if (!--v35)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v52;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t FeedGroupBundleArticleQuotas.xavierQuotas.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v1 = sub_1BB86D078();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FeedGroupBundleArticleQuotas();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v5 + 24), v1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BB86D0B4();
}

uint64_t _s8NewsFeed0B24GroupBundleArticleQuotasV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (*(double *)a1 == *(double *)a2
    && sub_1BA892D54(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8))
    && (v4 = type metadata accessor for FeedGroupBundleArticleQuotas(),
        (MEMORY[0x1BCCDD97C](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0))
  {
    return sub_1BA893E44(*(_QWORD *)(a1 + *(int *)(v4 + 28)), *(_QWORD *)(a2 + *(int *)(v4 + 28)));
  }
  else
  {
    return 0;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedGroupBundleArticleQuotas(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86D078();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FeedGroupBundleArticleQuotas(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BB86D078();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FeedGroupBundleArticleQuotas(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86D078();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FeedGroupBundleArticleQuotas(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86D078();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FeedGroupBundleArticleQuotas(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86D078();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for FeedGroupBundleArticleQuotas(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86D078();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB61F734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86D078();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BB61F7B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86D078();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedGroupBundleArticleQuotas.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB61F870 + 4 * byte_1BB934F0D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB61F8A4 + 4 * byte_1BB934F08[v4]))();
}

uint64_t sub_1BB61F8A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB61F8AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB61F8B4);
  return result;
}

uint64_t sub_1BB61F8C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB61F8C8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB61F8CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB61F8D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupBundleArticleQuotas.CodingKeys()
{
  return &type metadata for FeedGroupBundleArticleQuotas.CodingKeys;
}

unint64_t sub_1BB61F8F4()
{
  unint64_t result;

  result = qword_1EF2C92B8;
  if (!qword_1EF2C92B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9350A0, &type metadata for FeedGroupBundleArticleQuotas.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C92B8);
  }
  return result;
}

unint64_t sub_1BB61F93C()
{
  unint64_t result;

  result = qword_1ED3A5170;
  if (!qword_1ED3A5170)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934FD8, &type metadata for FeedGroupBundleArticleQuotas.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A5170);
  }
  return result;
}

unint64_t sub_1BB61F984()
{
  unint64_t result;

  result = qword_1ED3A5168;
  if (!qword_1ED3A5168)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB935000, &type metadata for FeedGroupBundleArticleQuotas.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A5168);
  }
  return result;
}

uint64_t sub_1BB61F9C8()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t FormatServiceGroupContext.__allocating_init(emitterCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  FormatServiceGroupContext.init(emitterCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t FormatServiceGroupContext.init(emitterCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  _QWORD *v21;
  uint64_t *v22;
  int v23;
  char v25;
  _BYTE v29[248];

  v12 = *(_QWORD *)(*(_QWORD *)v7 + 80);
  v13 = *(_QWORD *)(*(_QWORD *)v7 + 88);
  type metadata accessor for FeedGroupKnobsRules(255, v12, v13, a4);
  v14 = sub_1BB873A2C();
  v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v29, a2, v14);
  v16 = *a7;
  v25 = *((_BYTE *)a7 + 8);
  v17 = *((_BYTE *)a7 + 9);
  *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 112)) = a1;
  type metadata accessor for FormatServiceGroupContext.CursorContainer(0, v12, v13, v18);
  swift_storeEnumTagMultiPayload();
  v15((_BYTE *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 136)), v29, v14);
  *(_QWORD *)(v7 + 32) = a3;
  v19 = v7 + *(_QWORD *)(*(_QWORD *)v7 + 120);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v19, a4, AssociatedTypeWitness);
  v21 = (_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 128));
  *v21 = a5;
  v21[1] = a6;
  if ((v17 & 1) != 0)
  {
    v22 = (uint64_t *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 192));
    v16 = *v22;
    v23 = *((unsigned __int8 *)v22 + 8);
    if (v23 == 1)
      v16 = v16 != 0;
    else
      LOBYTE(v23) = 0;
  }
  else
  {
    LOBYTE(v23) = v25 & 1;
  }
  *(_QWORD *)(v7 + 16) = v16;
  *(_BYTE *)(v7 + 24) = v23;
  return v7;
}

uint64_t type metadata accessor for FormatServiceGroupContext.CursorContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatServiceGroupContext.CursorContainer);
}

uint64_t FormatServiceGroupContext.__allocating_init(initialCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  FormatServiceGroupContext.init(initialCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t FormatServiceGroupContext.init(initialCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  char v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(void);
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[21];

  v8 = v7;
  v45 = a6;
  v44 = a5;
  v43 = a4;
  v39 = a3;
  v12 = *(_QWORD *)(*(_QWORD *)v8 + 80);
  v13 = *(_QWORD *)(*(_QWORD *)v8 + 88);
  v14 = type metadata accessor for FeedGroupEmitterInitialCursorContext(0, v12, v13, a4);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v37 - v16;
  type metadata accessor for FeedGroupKnobsRules(255, v12, v13, v17);
  v18 = sub_1BB873A2C();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19((char *)v47 + 1, a2, v18);
  v38 = *(_QWORD *)a7;
  HIDWORD(v37) = *(unsigned __int8 *)(a7 + 8);
  v41 = *(unsigned __int8 *)(a7 + 9);
  v20 = v8 + *(_QWORD *)(*(_QWORD *)v8 + 112);
  v46 = v15;
  v40 = *(void (**)(void))(v15 + 16);
  v21 = a1;
  ((void (*)(uint64_t, uint64_t, uint64_t))v40)(v20, a1, v14);
  type metadata accessor for FormatServiceGroupContext.CursorContainer(0, v12, v13, v22);
  swift_storeEnumTagMultiPayload();
  v19((char *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 136)), (uint64_t)v47 + 1, v18);
  *(_QWORD *)(v8 + 32) = v39;
  v23 = v8 + *(_QWORD *)(*(_QWORD *)v8 + 120);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v24 = v21;
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v27 = v23;
  v28 = v43;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v27, v43, AssociatedTypeWitness);
  v29 = (_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 128));
  v30 = v45;
  *v29 = v44;
  v29[1] = v30;
  v31 = v42;
  v40();
  if ((v41 & 1) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v13 + 72))(v47, v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, AssociatedTypeWitness);
    v32 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v32(v24, v14);
    v32((uint64_t)v31, v14);
    v33 = LOBYTE(v47[0]);
    if (LOBYTE(v47[0]))
    {
      if (LOBYTE(v47[0]) == 1)
      {
        v33 = 1;
        v34 = 1;
      }
      else
      {
        v34 = 0;
        v33 = 0x4122750000000000;
      }
    }
    else
    {
      v34 = 1;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, AssociatedTypeWitness);
    v35 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v35(v24, v14);
    v35((uint64_t)v31, v14);
    v34 = BYTE4(v37) & 1;
    v33 = v38;
  }
  *(_QWORD *)(v8 + 16) = v33;
  *(_BYTE *)(v8 + 24) = v34;
  return v8;
}

Swift::Int __swiftcall FormatServiceGroupContext.countPriorGroups(kind:)(Swift::String kind)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  v5 = type metadata accessor for FormatServiceGroupContext.CursorContainer(0, v3, v4, v1);
  sub_1BB620180(v5);
  type metadata accessor for FeedCursorGroup(0, v3, v4, v6);
  v7 = sub_1BB872DD8();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BB620180(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v2 + 16))(v5, v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for FeedCursorGroup(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v6);
    v7 = sub_1BB872E68();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  }
  else
  {
    v7 = *(_QWORD *)(*(_QWORD *)v5 + *(_QWORD *)(**(_QWORD **)v5 + 136));
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v7;
}

uint64_t sub_1BB620250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(void);
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v17 - v11;
  type metadata accessor for FeedCursorGroup(0, a4, a5, v13);
  v14 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v14();
  swift_getAssociatedConformanceWitness();
  sub_1BB872CF4();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  if (v19 == v18 && v20 == a3)
    v15 = 1;
  else
    v15 = sub_1BB874398();
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t sub_1BB620440(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB620250(a1, v1[4], v1[5], v1[2], v1[3]);
}

Swift::Bool __swiftcall FormatServiceGroupContext.isPriorEmittedGroup(kind:)(Swift::String kind)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t AssociatedConformanceWitness;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  void *v32;

  v30 = kind;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v29 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v26 = (char *)&v24 - v5;
  v6 = swift_checkMetadataState();
  v25 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  v10 = type metadata accessor for FeedCursorGroup(255, v3, v2, v9);
  v11 = sub_1BB873A2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - v13;
  v16 = type metadata accessor for FormatServiceGroupContext.CursorContainer(0, v3, v2, v15);
  v31 = sub_1BB620180(v16);
  v17 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF20], v17);
  sub_1BB8728E0();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v19 = 0;
  }
  else
  {
    v20 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v8, &v14[*(int *)(v10 + 36)], v6);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v14, v10);
    v21 = v26;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v6, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
    v22 = v29;
    swift_getAssociatedConformanceWitness();
    sub_1BB872CF4();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v22);
    if (v31 == v30._countAndFlagsBits && v32 == v30._object)
    {
      swift_bridgeObjectRelease();
      v19 = 1;
    }
    else
    {
      v19 = sub_1BB874398();
      swift_bridgeObjectRelease();
    }
  }
  return v19 & 1;
}

uint64_t FormatServiceGroupContext.selectors(content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _BYTE v51[80];
  uint64_t v52[30];
  uint64_t v53[31];

  v5 = v4;
  v6 = (char *)v4 + *(_QWORD *)(*v4 + 136);
  v7 = *(_QWORD *)(*v4 + 80);
  v8 = *(_QWORD *)(*v4 + 88);
  type metadata accessor for FeedGroupKnobsRules(255, v7, v8, a4);
  v9 = sub_1BB873A2C();
  v10 = *(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v52, v6, v9);
  v10(v53, (char *)v52, v9);
  if (sub_1BA896370(v53) == 1 || !v53[3])
  {
    v42 = MEMORY[0x1E0DEE9E8];
  }
  else
  {
    v12 = type metadata accessor for FormatServiceGroupContext.CursorContainer(0, v7, v8, v11);
    swift_retain();
    sub_1BB620C7C(v12, v13, (uint64_t)v51);
    v42 = sub_1BAAA2BC0(v51);
    swift_release();
    sub_1BA4CBDD0((uint64_t)v51);
  }
  v43 = type metadata accessor for FormatServiceGroupContext.CursorContainer(0, v7, v8, v11);
  sub_1BB620C7C(v43, v14, (uint64_t)&v44);
  v15 = (void *)v44;
  v16 = v46;
  v17 = v47;
  v18 = v48;
  v19 = v49;
  swift_bridgeObjectRelease();

  sub_1BA6DB13C(v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v50 = sub_1BA6E4124(v42, v16);
  v44 = 0x696B2D70756F7267;
  v45 = 0xEB000000002D646ELL;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1BB872CF4();
  sub_1BB872AFC(v20);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC(&v44, v44, v45);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)((char *)v5 + *(_QWORD *)(*v5 + 128) + 8))
  {
    v44 = 0;
    v45 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v44 = 0xD000000000000013;
    v45 = 0x80000001BB994830;
    sub_1BB872AFC((_QWORD *)0x80000001BB994830);
    sub_1BA6EE5AC(&v44, v44, v45);
    swift_bridgeObjectRelease();
  }
  v24 = (void *)v5[4];
  if (v24)
  {
    v25 = v24;
    v26 = sub_1BB620ED0(0x7365642D64656566, 0xEF726F7470697263);
    sub_1BA6E3FB8(v26);
    v27 = objc_msgSend(v25, sel_alternativeFeedDescriptor);
    if (v27)
    {
      v28 = v27;
      v29 = sub_1BB620ED0(0xD000000000000013, 0x80000001BB994810);
      sub_1BA6E3FB8(v29);

    }
    v30 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 24));
    v31 = v30[1];
    if (v31)
    {
      v32 = *v30;
      v33 = objc_msgSend(objc_msgSend(v25, sel_backingTag), sel_identifier);
      swift_unknownObjectRelease();
      v34 = sub_1BB8729A0();
      v36 = v35;

      if (v32 == v34 && v31 == v36)
      {
        swift_bridgeObjectRelease();
LABEL_15:
        sub_1BA6EE5AC(&v44, 0xD000000000000025, 0x80000001BB9947E0);

        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      v37 = sub_1BB874398();
      swift_bridgeObjectRelease();
      if ((v37 & 1) != 0)
        goto LABEL_15;
    }

  }
LABEL_17:
  sub_1BB621104(v43, v21, v22, v23);
  v38 = FeedKind.selector.getter();
  if (v39)
  {
    sub_1BA6EE5AC(&v44, v38, v39);
    swift_bridgeObjectRelease();
  }
  return v50;
}

uint64_t sub_1BB620C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t);
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t result;
  char v33;
  uint64_t v34;
  void *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  int v43;
  id v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;

  v4 = v3;
  v7 = type metadata accessor for FeedGroupEmitterInitialCursorContext(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - v9;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v14, v4, a1, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
    v16 = (void *)*((_QWORD *)v10 + 1);
    v43 = v10[16];
    v17 = v10[17];
    v18 = v10[18];
    v48 = v10[19];
    v49 = v18;
    v19 = *((_QWORD *)v10 + 3);
    v42 = *((_QWORD *)v10 + 4);
    v21 = *((_QWORD *)v10 + 5);
    v20 = *((_QWORD *)v10 + 6);
    v22 = v10[56];
    v45 = v17;
    v46 = v22;
    v24 = (void *)*((_QWORD *)v10 + 8);
    v23 = *((_QWORD *)v10 + 9);
    v25 = *((_QWORD *)v10 + 10);
    v44 = v16;
    v47 = v19;
    v26 = v23;
    swift_bridgeObjectRetain();
    v27 = v42;
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v21, v20);
    v28 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    v29 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v10;
    v31 = v27;
    result = v28(v30, v7);
    v33 = v43;
  }
  else
  {
    v34 = *(_QWORD *)v14 + *(_QWORD *)(**(_QWORD **)v14 + 184);
    v35 = *(void **)v34;
    v33 = *(_BYTE *)(v34 + 8);
    v36 = *(unsigned __int8 *)(v34 + 9);
    v49 = *(unsigned __int8 *)(v34 + 10);
    v48 = *(unsigned __int8 *)(v34 + 11);
    v38 = *(_QWORD *)(v34 + 16);
    v37 = *(_QWORD *)(v34 + 24);
    v21 = *(_QWORD *)(v34 + 32);
    v20 = *(_QWORD *)(v34 + 40);
    v39 = *(unsigned __int8 *)(v34 + 48);
    v45 = v36;
    v46 = v39;
    v24 = *(void **)(v34 + 56);
    v40 = *(_QWORD *)(v34 + 64);
    v25 = *(_QWORD *)(v34 + 72);
    v44 = v35;
    v47 = v38;
    v31 = v37;
    v26 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v21, v20);
    v41 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = swift_release();
  }
  *(_QWORD *)a3 = v44;
  *(_BYTE *)(a3 + 8) = v33;
  *(_BYTE *)(a3 + 9) = v45;
  *(_BYTE *)(a3 + 10) = v49;
  *(_BYTE *)(a3 + 11) = v48;
  *(_QWORD *)(a3 + 16) = v47;
  *(_QWORD *)(a3 + 24) = v31;
  *(_QWORD *)(a3 + 32) = v21;
  *(_QWORD *)(a3 + 40) = v20;
  *(_BYTE *)(a3 + 48) = v46;
  *(_QWORD *)(a3 + 56) = v24;
  *(_QWORD *)(a3 + 64) = v26;
  *(_QWORD *)(a3 + 72) = v25;
  return result;
}

uint64_t sub_1BB620ED0(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  id v8;
  _QWORD *v9;
  id v10;
  void *v11;
  _QWORD *v12;
  id v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a2;
  v18 = MEMORY[0x1E0DEE9E8];
  v16 = a1;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v5);
  FCFeedDescriptorConfiguration.description.getter((uint64_t)objc_msgSend(v2, sel_feedConfiguration));
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC(&v16, v16, v17);
  swift_bridgeObjectRelease();
  v16 = a1;
  v17 = a2;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v7);
  v8 = objc_msgSend(objc_msgSend(v2, sel_backingTag), sel_identifier);
  swift_unknownObjectRelease();
  sub_1BB8729A0();

  sub_1BB872AFC(v9);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC(&v16, v16, v17);
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v2, sel_backingChannel);
  if (v10)
  {
    v11 = v10;
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v16 = a1;
    v17 = a2;
    sub_1BB872AFC(v12);
    v13 = objc_msgSend(v11, sel_identifier);
    sub_1BB8729A0();

    sub_1BB872AFC(v14);
    swift_bridgeObjectRelease();
    sub_1BA6EE5AC(&v16, v16, v17);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t sub_1BB621104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = type metadata accessor for FeedGroupEmitterInitialCursorContext(0, v6, v7, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - v10;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v15, v4, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v15, v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 128))(v6, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 128))(v6, v7);
    return swift_release();
  }
}

id *FormatServiceGroupContext.deinit()
{
  id *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedTypeWitness;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[31];

  v1 = *v0;

  v2 = (char *)v0 + *((_QWORD *)*v0 + 14);
  v3 = v1[10];
  v4 = v1[11];
  v6 = type metadata accessor for FormatServiceGroupContext.CursorContainer(0, v3, v4, v5);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2, v6);
  v7 = (char *)v0 + *((_QWORD *)*v0 + 15);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v7, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  v9 = (char *)v0 + *((_QWORD *)*v0 + 17);
  type metadata accessor for FeedGroupKnobsRules(255, v3, v4, v10);
  v11 = sub_1BB873A2C();
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v13, v9, v11);
  sub_1BB62147C(v13);
  return v0;
}

uint64_t FormatServiceGroupContext.__deallocating_deinit()
{
  FormatServiceGroupContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB621418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FormatServiceGroupContext.selectors(content:)(a1, a2, a3, a4);
}

Swift::Int sub_1BB621438(uint64_t a1, uint64_t a2)
{
  return FormatServiceGroupContext.countPriorGroups(kind:)(*(Swift::String *)&a1);
}

BOOL sub_1BB621458(uint64_t a1, uint64_t a2)
{
  return FormatServiceGroupContext.isPriorEmittedGroup(kind:)(*(Swift::String *)&a1);
}

uint64_t *sub_1BB62147C(uint64_t *a1)
{
  sub_1BB6214EC(*a1);
  return a1;
}

uint64_t sub_1BB6214EC(uint64_t result)
{
  if (result != 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t dispatch thunk of FormatServiceGroupContextType.selectors(content:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FormatServiceGroupContextType.countPriorGroups(kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FormatServiceGroupContextType.isPriorEmittedGroup(kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1BB6216EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for FormatServiceGroupContext.CursorContainer(319, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a4);
  if (v5 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    result = swift_getAssociatedTypeWitness();
    if (v6 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return result;
}

uint64_t type metadata accessor for FormatServiceGroupContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatServiceGroupContext);
}

uint64_t method lookup function for FormatServiceGroupContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatServiceGroupContext.__allocating_init(emitterCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of FormatServiceGroupContext.__allocating_init(initialCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1BB621880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for FeedGroupEmitterInitialCursorContext(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v5 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1BB6218F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  unint64_t v18;
  id v19;
  void *v20;
  void (*v21)(unint64_t, unint64_t, uint64_t);
  id v22;
  uint64_t v24;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (((v7 + 88) & (unint64_t)~v7) + *(_QWORD *)(v5 + 64) <= 8)
    v8 = 8;
  else
    v8 = ((v6 + 88) & ~(unint64_t)v6) + *(_QWORD *)(v5 + 64);
  v9 = v6 & 0x100000;
  if (v7 > 7 || v9 != 0 || v8 + 1 > 0x18)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
LABEL_22:
    swift_retain();
    return v3;
  }
  v13 = *((unsigned __int8 *)a2 + v8);
  if (v13 >= 2)
  {
    if (v8 <= 3)
      v14 = v8;
    else
      v14 = 4;
    __asm { BR              X12 }
  }
  *a1 = *a2;
  if (v13 != 1)
  {
    *((_BYTE *)a1 + v8) = 0;
    goto LABEL_22;
  }
  v24 = v4;
  v15 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(void **)v16;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_BYTE *)(v15 + 9) = *(_BYTE *)(v16 + 9);
  *(_BYTE *)(v15 + 10) = *(_BYTE *)(v16 + 10);
  *(_BYTE *)(v15 + 11) = *(_BYTE *)(v16 + 11);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
  v18 = *(_QWORD *)(v16 + 40) - 1;
  swift_retain();
  v19 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18 >= 3)
  {
    *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
    *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  }
  *(_BYTE *)(v15 + 48) = *(_BYTE *)(v16 + 48);
  v20 = *(void **)(v16 + 56);
  *(_QWORD *)(v15 + 56) = v20;
  *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
  *(_QWORD *)(v15 + 72) = *(_QWORD *)(v16 + 72);
  v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
  v22 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21((v15 + v7 + 80) & ~v7, (v16 + v7 + 80) & ~v7, v24);
  *((_BYTE *)v3 + v8) = 1;
  return v3;
}

uint64_t sub_1BB621B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((v5 + 88) & ~v5) + *(_QWORD *)(v4 + 64);
  if (v6 <= 8)
    v6 = 8;
  v7 = *(unsigned __int8 *)(a1 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X12 }
  }
  result = swift_release();
  if (v7 == 1)
  {
    v10 = (a1 + 15) & 0xFFFFFFFFFFFFFFF8;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v10 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(unint64_t, uint64_t))(v4 + 8))((v10 + v5 + 80) & ~v5, v3);
  }
  return result;
}

_QWORD *sub_1BB621C88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  unint64_t v13;
  id v14;
  void *v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  id v17;
  uint64_t v19;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  if (((v6 + 88) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) <= 8)
    v7 = 8;
  else
    v7 = ((v6 + 88) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *((unsigned __int8 *)a2 + v7);
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X12 }
  }
  *a1 = *a2;
  if (v8 == 1)
  {
    v19 = v4;
    v10 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(void **)v11;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
    *(_BYTE *)(v10 + 9) = *(_BYTE *)(v11 + 9);
    *(_BYTE *)(v10 + 10) = *(_BYTE *)(v11 + 10);
    *(_BYTE *)(v10 + 11) = *(_BYTE *)(v11 + 11);
    *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
    *(_QWORD *)(v10 + 24) = *(_QWORD *)(v11 + 24);
    v13 = *(_QWORD *)(v11 + 40) - 1;
    swift_retain();
    v14 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13 >= 3)
    {
      *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
      *(_QWORD *)(v10 + 40) = *(_QWORD *)(v11 + 40);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
    }
    *(_BYTE *)(v10 + 48) = *(_BYTE *)(v11 + 48);
    v15 = *(void **)(v11 + 56);
    *(_QWORD *)(v10 + 56) = v15;
    *(_QWORD *)(v10 + 64) = *(_QWORD *)(v11 + 64);
    *(_QWORD *)(v10 + 72) = *(_QWORD *)(v11 + 72);
    v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    v17 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16((v10 + v6 + 80) & ~v6, (v11 + v6 + 80) & ~v6, v19);
    *((_BYTE *)a1 + v7) = 1;
  }
  else
  {
    *((_BYTE *)a1 + v7) = 0;
    swift_retain();
  }
  return a1;
}

_QWORD *sub_1BB621E90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  unint64_t v17;
  id v18;
  void *v19;
  void (*v20)(unint64_t, unint64_t, uint64_t);
  id v21;
  uint64_t v23;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    if (((v7 + 88) & (unint64_t)~v7) + *(_QWORD *)(v6 + 64) <= 8)
      v8 = 8;
    else
      v8 = ((v7 + 88) & ~v7) + *(_QWORD *)(v6 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    swift_release();
    if (v9 == 1)
    {
      v11 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((unint64_t)(*(_QWORD *)(v11 + 40) - 1) >= 3)
        swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((v11 + v7 + 80) & ~v7, v5);
    }
    v12 = *((unsigned __int8 *)a2 + v8);
    if (v12 >= 2)
    {
      if (v8 <= 3)
        v13 = v8;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    *a1 = *a2;
    if (v12 == 1)
    {
      v23 = v5;
      v14 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
      v15 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
      v16 = *(void **)v15;
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
      *(_BYTE *)(v14 + 9) = *(_BYTE *)(v15 + 9);
      *(_BYTE *)(v14 + 10) = *(_BYTE *)(v15 + 10);
      *(_BYTE *)(v14 + 11) = *(_BYTE *)(v15 + 11);
      *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
      *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
      v17 = *(_QWORD *)(v15 + 40) - 1;
      swift_retain();
      v18 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17 >= 3)
      {
        *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
        *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
      }
      *(_BYTE *)(v14 + 48) = *(_BYTE *)(v15 + 48);
      v19 = *(void **)(v15 + 56);
      *(_QWORD *)(v14 + 56) = v19;
      *(_QWORD *)(v14 + 64) = *(_QWORD *)(v15 + 64);
      *(_QWORD *)(v14 + 72) = *(_QWORD *)(v15 + 72);
      v20 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
      v21 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20((v14 + v7 + 80) & ~v7, (v15 + v7 + 80) & ~v7, v23);
      *((_BYTE *)a1 + v8) = 1;
    }
    else
    {
      *((_BYTE *)a1 + v8) = 0;
      swift_retain();
    }
  }
  return a1;
}

_QWORD *sub_1BB622188(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  if (((v5 + 88) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) <= 8)
    v6 = 8;
  else
    v6 = ((v5 + 88) & ~v5) + *(_QWORD *)(v4 + 64);
  v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X14 }
  }
  *a1 = *a2;
  if (v7 == 1)
  {
    v9 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v10 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v9 = *v10;
    v11 = v10[1];
    v12 = v10[2];
    v13 = v10[4];
    v9[3] = v10[3];
    v9[4] = v13;
    v9[1] = v11;
    v9[2] = v12;
    (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)v9 + v5 + 80) & ~v5, ((unint64_t)v10 + v5 + 80) & ~v5);
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  *((_BYTE *)a1 + v6) = v14;
  return a1;
}

_QWORD *sub_1BB6222AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    if (((v7 + 88) & (unint64_t)~v7) + *(_QWORD *)(v6 + 64) <= 8)
      v8 = 8;
    else
      v8 = ((v7 + 88) & ~v7) + *(_QWORD *)(v6 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    v11 = ~v7;
    swift_release();
    if (v9 == 1)
    {
      v12 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((unint64_t)(*(_QWORD *)(v12 + 40) - 1) >= 3)
        swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((v12 + v7 + 80) & v11, v5);
    }
    v13 = *((unsigned __int8 *)a2 + v8);
    if (v13 >= 2)
    {
      if (v8 <= 3)
        v14 = v8;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    *a1 = *a2;
    if (v13 == 1)
    {
      v15 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      v16 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v15 = *v16;
      v17 = v16[1];
      v18 = v16[2];
      v19 = v16[4];
      v15[3] = v16[3];
      v15[4] = v19;
      v15[1] = v17;
      v15[2] = v18;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v15 + v7 + 80) & v11, ((unint64_t)v16 + v7 + 80) & v11, v5);
      v20 = 1;
    }
    else
    {
      v20 = 0;
    }
    *((_BYTE *)a1 + v8) = v20;
  }
  return a1;
}

uint64_t sub_1BB6224DC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8)
    v3 = ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB6225B0 + 4 * byte_1BB935148[(v4 - 1)]))();
}

void sub_1BB6225FC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1BB6227B4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8)
    v2 = ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB62280C + 4 * byte_1BB935156[v3]))();
}

void sub_1BB622854(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  v4 = ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    if (v4 <= 8)
      v5 = 8;
    else
      v5 = ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
         + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    v6 = a2 - 2;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    if (v4 <= 8)
      v4 = 8;
    a1[v4] = a2;
  }
}

uint64_t sub_1BB622938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  double *v26;
  uint64_t (*v27)(void);
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = &v29[-v20];
  v33 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v18 + 104))(&v29[-v20], *MEMORY[0x1E0DB63C0], v17, v19);
  sub_1BA656FEC();
  sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
  v26 = (double *)(v25 + v24);
  *v26 = a5;
  v26[1] = a6;
  v26[2] = a7;
  v26[3] = a8;
  (*(void (**)(void))(v23 + 104))();
  v30 = a2;
  v31 = a3;
  v32 = a4;
  v27 = MEMORY[0x1E0DB5DD0];
  sub_1BA65781C(0, &qword_1ED3B0690, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA657898(&qword_1ED3B0688, &qword_1ED3B0690, (uint64_t (*)(uint64_t, _QWORD *))v27, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v21, v17);
}

uint64_t sub_1BB622B20(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t (*v25)(uint64_t, _QWORD *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t *);
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t result;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _BYTE *v55;
  void (*v56)(_QWORD *, _QWORD, uint64_t);
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t *);
  id v71;
  void (*v72)(uint64_t *, uint64_t);
  uint64_t v73;
  id v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  unsigned int v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _BYTE *v97;
  void (*v98)(uint64_t *);
  void (*v99)(uint64_t *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v97 = a4;
  v6 = type metadata accessor for HeadlineViewLayout.Context(0);
  v94 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v95 = v7;
  v93 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6577C0(0, &qword_1ED3B0630, MEMORY[0x1E0DB5B40]);
  v100 = v8;
  v92 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v96 = (char *)&v86 - v9;
  v91 = sub_1BB8726B8();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v89 = (uint64_t *)((char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v106 = v11;
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v86 - v16;
  v105 = a1;
  v109 = a1;
  swift_getKeyPath();
  sub_1BB86D930();
  v19 = round(v18 * 56.0 * 0.25);
  if (byte_1EF3D0978)
    v20 = v19;
  else
    v20 = 14.0;
  v103 = v6;
  v21 = *(int *)(v6 + 20);
  v107 = a3;
  v22 = objc_msgSend(*(id *)(a3 + v21 + 40), sel_sourceChannel);
  if (v22)
  {
    v23 = objc_msgSend(v22, sel_theme);
    swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v24 = objc_msgSend((id)objc_opt_self(), sel_defaultMetrics);
  sub_1BA6578EC(v23, v24, (uint64_t)v17, v20);

  swift_unknownObjectRelease();
  v25 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  v27 = v26;
  v28 = sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v25, MEMORY[0x1E0DB5A18]);
  v101 = sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30 = v106;
  v29(v17, v106);
  v31 = v105;
  v109 = v105;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = 0x4020000000000000;
  *v14 = v32;
  v33 = *(void (**)(uint64_t *))(v12 + 104);
  v88 = *MEMORY[0x1E0DB63F0];
  v33(v14);
  sub_1BB86D4EC();
  v34 = ((uint64_t (*)(uint64_t *, uint64_t))v29)(v14, v30);
  v109 = v31;
  v35 = MEMORY[0x1E0C80A78](v34);
  v36 = v107;
  v84 = v107;
  v37 = *MEMORY[0x1E0DB63C0];
  v98 = v33;
  ((void (*)(uint64_t *, uint64_t, uint64_t, double))v33)(v14, v37, v30, v35);
  v102 = v28;
  v85 = v28;
  v104 = v27;
  v83[1] = v83;
  v84 = v27;
  v83[0] = sub_1BB623700;
  sub_1BB86D540();
  v99 = (void (*)(uint64_t *, uint64_t))v29;
  v29((char *)v14, v30);
  v108 = v31;
  swift_getKeyPath();
  v38 = *(_QWORD *)(v36 + *(int *)(v103 + 28));
  if ((*(_BYTE *)(v38 + qword_1ED3B2F88) & 1) != 0)
    goto LABEL_9;
  sub_1BA657D64();
  v39 = sub_1BB87345C();
  v40 = v89;
  *v89 = v39;
  v41 = v90;
  v42 = v91;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v90 + 104))(v40, *MEMORY[0x1E0DEF738], v91);
  v43 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v41 + 8))(v40, v42);
  if ((v43 & 1) != 0)
  {
LABEL_9:
    v45 = swift_allocObject();
    v46 = *(void **)(v38 + *(_QWORD *)(*(_QWORD *)v38 + 136));
    *(_QWORD *)(v45 + 16) = v46;
    *v14 = v45;
    v87 = *MEMORY[0x1E0DB6398];
    v47 = v106;
    v98(v14);
    sub_1BA656FEC();
    sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v49 = v48;
    v50 = *(_QWORD *)(v48 - 8);
    v51 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_1BB87CE70;
    v53 = (_QWORD *)(v52 + v51);
    v54 = type metadata accessor for HeadlineViewLayout.Options(0);
    v55 = v97;
    *v53 = *(_QWORD *)&v97[*(int *)(v54 + 24)];
    v56 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v50 + 104);
    v57 = v107;
    v58 = v100;
    v56(v53, *MEMORY[0x1E0DB5BB8], v49);
    v59 = v46;
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    v99(v14, v47);
    if ((*v55 & 1) == 0)
      goto LABEL_14;
    v60 = *(_QWORD *)(v57 + *(int *)(v103 + 32));
    if (!v60)
      goto LABEL_14;
    if ((*(_BYTE *)(v60 + qword_1ED3B2F88) & 1) != 0)
      goto LABEL_13;
    sub_1BA657D64();
    v61 = sub_1BB87345C();
    v62 = v89;
    *v89 = v61;
    v63 = v90;
    v64 = v91;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v90 + 104))(v62, *MEMORY[0x1E0DEF738], v91);
    v65 = sub_1BB8726D0();
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v63 + 8))(v62, v64);
    if ((v65 & 1) != 0)
    {
LABEL_13:
      v66 = *(void **)(v60 + *(_QWORD *)(*(_QWORD *)v60 + 136));
      v67 = v105;
      v108 = v105;
      v68 = swift_allocObject();
      *(_QWORD *)(v68 + 16) = 0x4014000000000000;
      *v14 = v68;
      v69 = v106;
      v70 = v98;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v98)(v14, v88, v106);
      v71 = v66;
      sub_1BB86D4EC();
      v72 = v99;
      v99(v14, v69);
      v108 = v67;
      swift_getKeyPath();
      v73 = swift_allocObject();
      *(_QWORD *)(v73 + 16) = v71;
      *v14 = v73;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v70)(v14, v87, v69);
      v74 = v71;
      sub_1BB86D4E0();

      swift_release();
      v72(v14, v69);
      v57 = v107;
      v58 = v100;
LABEL_14:
      v109 = v105;
      v75 = v92;
      v76 = v96;
      (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v96, *MEMORY[0x1E0DB5B38], v58);
      v77 = v57;
      v78 = v93;
      sub_1BB623948(v77, v93);
      v79 = v58;
      v80 = (*(unsigned __int8 *)(v94 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
      v81 = swift_allocObject();
      sub_1BA656690(v78, v81 + v80);
      sub_1BB86D48C();
      swift_release();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v79);
      sub_1BB623948(v107, v78);
      v82 = swift_allocObject();
      sub_1BA656690(v78, v82 + v80);
      sub_1BB86DBF4();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB623424(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB622B20(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE **)(v1 + 32));
}

uint64_t sub_1BB623430()
{
  return swift_deallocObject();
}

uint64_t sub_1BB623440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, _QWORD *);
  id v23;
  _QWORD v24[2];

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v24 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 36));
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6340], v5);
    sub_1BA656FEC();
    sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v21 + v20) = 1;
    (*(void (**)(void))(v19 + 104))();
    v22 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
    sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v22, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v23 = v17;
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB623700(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB623440(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB623708()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB62372C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  void (*v20)(uint64_t *, uint64_t, uint64_t);
  uint64_t v21;

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v19 - v7);
  v21 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0x4034000000000000;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F0];
  v20 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v20(v8, v10, v5);
  v11 = MEMORY[0x1E0DB5B80];
  sub_1BA65781C(0, &qword_1ED3B0648, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5B80]);
  v19[1] = v12;
  sub_1BA657898(&qword_1ED3B0640, &qword_1ED3B0648, (uint64_t (*)(uint64_t, _QWORD *))v11, MEMORY[0x1E0DB5B88]);
  sub_1BB86D4EC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v21 = a1;
  swift_getKeyPath();
  v14 = swift_allocObject();
  v15 = (_QWORD *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 24));
  v16 = v15[3];
  v17 = v15[4];
  __swift_project_boxed_opaque_existential_1(v15, v16);
  *(double *)(v14 + 16) = (*(double (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  *v8 = v14;
  v20(v8, v10, v5);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BB623948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeadlineViewLayout.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB623990(uint64_t a1)
{
  return sub_1BB623C60(a1, sub_1BB62372C);
}

uint64_t sub_1BB62399C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(void);
  uint64_t v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[5];
  uint64_t v29;

  v28[0] = a2;
  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v28 - v7);
  v29 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0x4020000000000000;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F0];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v12 = MEMORY[0x1E0DB5B80];
  sub_1BA65781C(0, &qword_1ED3B0648, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5B80]);
  v28[1] = v13;
  sub_1BA657898(&qword_1ED3B0640, &qword_1ED3B0648, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5B88]);
  sub_1BB86D4EC();
  v14 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v14(v8, v5);
  v29 = a1;
  v15 = swift_allocObject();
  v16 = (_QWORD *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 24));
  v17 = v16[3];
  v18 = v16[4];
  __swift_project_boxed_opaque_existential_1(v16, v17);
  *(double *)(v15 + 16) = (*(double (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
  *v8 = v15;
  v11(v8, v10, v5);
  sub_1BA656FEC();
  sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v20 = v19;
  v21 = *(_QWORD *)(v19 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BB87CE70;
  v24 = v23 + v22;
  v25 = *MEMORY[0x1E0DB5C30];
  sub_1BA6577C0(0, &qword_1ED3B0658, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v24, v25, v26);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v21 + 104))(v24, *MEMORY[0x1E0DB5C68], v20);
  v28[4] = v28[0];
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v14)(v8, v5);
}

uint64_t sub_1BB623C54(uint64_t a1)
{
  return sub_1BB623C60(a1, sub_1BB62399C);
}

uint64_t sub_1BB623C60(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_1BB623CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v15)(uint64_t, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a2;
  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v37 - v7);
  v39 = a1;
  v44 = a1;
  swift_getKeyPath();
  v9 = swift_allocObject();
  v10 = type metadata accessor for HeadlineViewLayout.Context(0);
  v11 = (_QWORD *)(a2 + *(int *)(v10 + 24));
  v12 = v11[3];
  v13 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  *(double *)(v9 + 16) = (*(double (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  *v8 = v9;
  v14 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104);
  v14(v8, *MEMORY[0x1E0DB63F0], v5);
  v15 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  v18 = sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v15, MEMORY[0x1E0DB5A18]);
  v19 = sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  v41 = v18;
  v42 = v17;
  v40 = v19;
  sub_1BB86D4E0();
  swift_release();
  v20 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v21 = v5;
  v20(v8, v5);
  v22 = v43 + *(int *)(v10 + 20);
  result = type metadata accessor for FeedHeadline(0);
  v24 = (unsigned __int8 *)(v22 + *(int *)(result + 40));
  if (v24[1] != 1 || *v24 <= 1u)
  {
    v25 = v39;
    v44 = v39;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = 0x4010000000000000;
    *v8 = v26;
    v14(v8, *MEMORY[0x1E0DB63E8], v5);
    v38 = (uint64_t (*)(uint64_t *, uint64_t))v20;
    sub_1BB86D4EC();
    v20(v8, v5);
    v44 = v25;
    swift_getKeyPath();
    v27 = v11[3];
    v28 = v11[4];
    __swift_project_boxed_opaque_existential_1(v11, v27);
    (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
    sub_1BA657B44();
    sub_1BB86DB70();
    sub_1BA656FEC();
    sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v30 = v29;
    v31 = *(_QWORD *)(v29 - 8);
    v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
    v34 = v33 + v32;
    v35 = *MEMORY[0x1E0DB5C58];
    sub_1BA6577C0(0, &qword_1ED3B0658, MEMORY[0x1E0DB5C60]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v34, v35, v36);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v31 + 104))(v34, *MEMORY[0x1E0DB5C68], v30);
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return v38(v8, v21);
  }
  return result;
}

uint64_t sub_1BB624090(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB623CAC(a1, *(_QWORD *)(v1 + 16));
}

char *sub_1BB624098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_timeInMilliseconds] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_totalTimeInMilliseconds] = 0;
  v8 = OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_titleLabel;
  v9 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v10 = v4;
  *(_QWORD *)&v4[v8] = objc_msgSend(v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v11 = OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_barView;
  *(_QWORD *)&v10[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  if (a3)
  {
    v12 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v19.receiver = v10;
  v19.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v19, sel_initWithStyle_reuseIdentifier_, a1, v12);

  v14 = (char *)v13;
  v15 = objc_msgSend(v14, sel_contentView);
  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_titleLabel]);

  v16 = objc_msgSend(v14, sel_contentView);
  v17 = *(id *)&v14[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_barView];
  objc_msgSend(v16, sel_addSubview_, v17);

  return v14;
}

id sub_1BB6242B8()
{
  char *v0;
  id result;
  uint64_t v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Width;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  void *v17;
  double v18;
  CGFloat v19;
  id v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  void *v29;
  double v30;
  CGFloat v31;
  id v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  double v42;
  double v43;
  double v44;
  objc_super v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;

  v45.receiver = v0;
  v45.super_class = (Class)swift_getObjectType();
  result = objc_msgSendSuper2(&v45, sel_layoutSubviews);
  v2 = OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_totalTimeInMilliseconds;
  if (*(double *)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_totalTimeInMilliseconds] > 0.0)
  {
    v3 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v3, sel_bounds);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v46.origin.x = v5;
    v46.origin.y = v7;
    v46.size.width = v9;
    v46.size.height = v11;
    Width = CGRectGetWidth(v46);
    objc_msgSend(v0, sel_layoutMargins);
    v14 = Width - v13;
    objc_msgSend(v0, sel_layoutMargins);
    v16 = (v14 - v15)
        / *(double *)&v0[v2]
        * *(double *)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_timeInMilliseconds];
    v17 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_barView];
    objc_msgSend(v0, sel_layoutMargins);
    v19 = v18;
    v20 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v20, sel_bounds);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v28 = v27;

    v47.origin.x = v22;
    v47.origin.y = v24;
    v47.size.width = v26;
    v47.size.height = v28;
    v48.origin.y = CGRectGetHeight(v47) + -8.0 + -10.0;
    v48.size.height = 10.0;
    v48.origin.x = v19;
    v48.size.width = v16;
    v49 = CGRectIntegral(v48);
    objc_msgSend(v17, sel_setFrame_, v49.origin.x, v49.origin.y, v49.size.width, v49.size.height);
    v29 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_titleLabel];
    objc_msgSend(v0, sel_layoutMargins);
    v31 = v30;
    v32 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v32, sel_bounds);
    v34 = v33;
    v36 = v35;
    v38 = v37;
    v40 = v39;

    v50.origin.x = v34;
    v50.origin.y = v36;
    v50.size.width = v38;
    v50.size.height = v40;
    v41 = CGRectGetWidth(v50);
    objc_msgSend(v0, sel_layoutMargins);
    v43 = v41 - v42;
    objc_msgSend(v0, sel_layoutMargins);
    v51.size.width = v43 - v44;
    v51.origin.y = 8.0;
    v51.size.height = 10.0;
    v51.origin.x = v31;
    v52 = CGRectIntegral(v51);
    return objc_msgSend(v29, sel_setFrame_, v52.origin.x, v52.origin.y, v52.size.width, v52.size.height);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatHistoryMeasurementCell()
{
  return objc_opt_self();
}

void sub_1BB62458C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_timeInMilliseconds] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_totalTimeInMilliseconds] = 0;
  v1 = OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_titleLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_barView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB62466C(uint64_t a1, void *aBlock, uint64_t ObjCClassMetadata, uint64_t a4)
{
  void (*v6)(void *, uint64_t, uint64_t, uint64_t);
  void *v7;
  uint64_t v8;

  v6 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  v7 = _Block_copy(aBlock);
  if (v7)
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v7;
    v7 = sub_1BB625620;
    if (!ObjCClassMetadata)
      goto LABEL_4;
    goto LABEL_3;
  }
  v8 = 0;
  if (ObjCClassMetadata)
LABEL_3:
    ObjCClassMetadata = swift_getObjCClassMetadata();
LABEL_4:
  if (a4)
    a4 = sub_1BB87276C();
  swift_retain();
  v6(v7, v8, ObjCClassMetadata, a4);
  swift_bridgeObjectRelease();
  sub_1BA49EBE0((uint64_t)v7);
  return swift_release();
}

void sub_1BB624750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1BB86C478();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

id sub_1BB6247D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  _QWORD *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  _QWORD v27[2];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v27 - v5;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzle);
  v8 = sub_1BB62547C(v7);
  v10 = v9;
  v11 = objc_msgSend(objc_msgSend(v7, sel_puzzleType), sel_nameForSharing);
  swift_unknownObjectRelease();
  sub_1BB8729A0();

  v27[0] = v8;
  v27[1] = v10;
  sub_1BB872AFC(v12);
  sub_1BB872AFC(v13);
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v7, sel_identifier);
  if (!v14)
  {
    sub_1BB8729A0();
    v14 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v15 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForPuzzleID_, v14);

  if (v15)
  {
    sub_1BB86C5EC();

    v16 = sub_1BB86C67C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 0, 1, v16);
  }
  else
  {
    v16 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  }
  v17 = sub_1BB624B00((uint64_t)v7);
  v18 = sub_1BB624C8C((uint64_t)v7);
  sub_1BA57B488((uint64_t)v6, (uint64_t)v3, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v19 = v17;
  v20 = v18;
  v21 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  sub_1BB86C67C();
  v22 = *(_QWORD *)(v16 - 8);
  v23 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v3, 1, v16) != 1)
  {
    v23 = (void *)sub_1BB86C58C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v16);
  }
  v24 = objc_msgSend(objc_allocWithZone((Class)NELinkMetadataSource), sel_initWithTitle_url_imageProvider_iconProvider_, v21, v23, v19, v20);

  v25 = objc_msgSend(v24, sel_linkMetadata);
  sub_1BA502AD0((uint64_t)v6, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  return v25;
}

id sub_1BB624B00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v2 = sub_1BB86EF38();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36C8]), sel_init);
  sub_1BB86EF2C();
  sub_1BB86EF20();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v7 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = a1;
  aBlock[4] = sub_1BB625740;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BB62466C;
  aBlock[3] = &block_descriptor_18_4;
  v10 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v6, sel_registerItemForTypeIdentifier_loadHandler_, v7, v10);
  _Block_release(v10);

  return v6;
}

id sub_1BB624C8C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1BB86EF38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36C8]), sel_init);
  sub_1BB86EF2C();
  sub_1BB86EF20();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v9 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v2;
  *(_QWORD *)(v10 + 24) = a1;
  aBlock[4] = sub_1BB6255F4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BB62466C;
  aBlock[3] = &block_descriptor_94;
  v11 = _Block_copy(aBlock);
  v12 = v2;
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v8, sel_registerItemForTypeIdentifier_loadHandler_, v9, v11);
  _Block_release(v11);

  return v8;
}

uint64_t sub_1BB624DF8(uint64_t (*a1)(_QWORD, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  sub_1BA4A3FB4(0, &qword_1ED3C1DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - v11;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](a5 + 16);
  if (result)
  {
    v14 = result;
    v15 = sub_1BB872F94();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v14;
    v16[5] = a6;
    v16[6] = a1;
    v16[7] = a2;
    swift_unknownObjectRetain();
    sub_1BA4BEB58((uint64_t)a1);
    sub_1BB1B6AEC((uint64_t)v12, (uint64_t)&unk_1EF2C93D0, (uint64_t)v16);
    return swift_release();
  }
  else if (a1)
  {
    return a1(0, 0);
  }
  return result;
}

uint64_t sub_1BB624F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return swift_task_switch();
}

uint64_t sub_1BB624F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void (*v5)(_QWORD, _QWORD);
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  sub_1BA57B488(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzleImageShareAttributeProvider, v0 + 16, &qword_1ED3C0B10, (void (*)(uint64_t))sub_1BB62569C);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v2 + 8) + *(_QWORD *)(v2 + 8));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_1BB625040;
    return v6(*(_QWORD *)(v0 + 64), v1, v2);
  }
  else
  {
    sub_1BA502AD0(v0 + 16, &qword_1ED3C0B10, (void (*)(uint64_t))sub_1BB62569C);
    v5 = *(void (**)(_QWORD, _QWORD))(v0 + 72);
    if (v5)
      v5(0, 0);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BB625040(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB62509C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v17;

  sub_1BA4A3FB4(0, &qword_1ED3C1DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - v11;
  v13 = sub_1BB872F94();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a1;
  v14[7] = a2;
  v15 = a5;
  swift_unknownObjectRetain();
  sub_1BA4BEB58(a1);
  sub_1BB1B6AEC((uint64_t)v12, (uint64_t)&unk_1EF2C93C0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1BB625190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return swift_task_switch();
}

uint64_t sub_1BB6251AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void (*v5)(_QWORD, _QWORD);
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  sub_1BA57B488(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzleImageShareAttributeProvider, v0 + 16, &qword_1ED3C0B10, (void (*)(uint64_t))sub_1BB62569C);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_1BB6252A8;
    return v6(*(_QWORD *)(v0 + 64), v1, v2);
  }
  else
  {
    sub_1BA502AD0(v0 + 16, &qword_1ED3C0B10, (void (*)(uint64_t))sub_1BB62569C);
    v5 = *(void (**)(_QWORD, _QWORD))(v0 + 72);
    if (v5)
      v5(0, 0);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BB6252A8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB625304()
{
  uint64_t v0;
  uint64_t v1;
  NSData *v2;
  NSData *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  void (*v9)(void *, _QWORD);
  id v10;

  v1 = *(_QWORD *)(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (v1)
  {
    v2 = UIImagePNGRepresentation(*(UIImage **)(v0 + 96));
    if (v2)
    {
      v3 = v2;
      v4 = sub_1BB86C6E8();
      v6 = v5;

      v7 = (void *)sub_1BB86C6DC();
      sub_1BA69D314(v4, v6);
    }
    else
    {
      v7 = 0;
    }
    v8 = *(void **)(v0 + 96);
    v9 = *(void (**)(void *, _QWORD))(v0 + 72);
    if (v9)
      goto LABEL_8;
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = *(void (**)(void *, _QWORD))(v0 + 72);
    if (v9)
    {
LABEL_8:
      v10 = v7;
      v9(v7, 0);

      goto LABEL_9;
    }
  }
  v10 = v8;
  v8 = v7;
LABEL_9:

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for PuzzleLinkPresentationSource()
{
  return objc_opt_self();
}

uint64_t sub_1BB62547C(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  void *v17;

  v2 = objc_msgSend(a1, sel_publishDateString);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1BB8729A0();
    v6 = v5;

    v7 = objc_msgSend(a1, sel_subtitle);
    if (v7)
    {
      v8 = v7;
      v9 = sub_1BB8729A0();
      v11 = v10;

      v12 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0)
        v12 = v4 & 0xFFFFFFFFFFFFLL;
      if (v12)
      {
        v13 = (_QWORD *)(HIBYTE(v11) & 0xF);
        if ((v11 & 0x2000000000000000) == 0)
          v13 = (_QWORD *)(v9 & 0xFFFFFFFFFFFFLL);
        if (v13)
        {
          sub_1BB872AFC(v13);
          sub_1BB872AFC(v14);
          swift_bridgeObjectRelease();
          return v4;
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  v16 = objc_msgSend(a1, sel_publishDateString);
  if (!v16)
    return 0;
  v17 = v16;
  v15 = sub_1BB8729A0();

  return v15;
}

uint64_t sub_1BB6255C8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB6255F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB62509C(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1BB6255FC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1BB625620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BB624750(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1BB62562C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1BA4B0D38;
  *(_QWORD *)(v4 + 72) = v2;
  *(_QWORD *)(v4 + 80) = v3;
  *(_OWORD *)(v4 + 56) = v5;
  return swift_task_switch();
}

unint64_t sub_1BB62569C()
{
  unint64_t result;

  result = qword_1ED3C4370;
  if (!qword_1ED3C4370)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3C4370);
  }
  return result;
}

uint64_t sub_1BB6256F0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB625714()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB625740(uint64_t (*a1)(_QWORD, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB624DF8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1BB62574C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1BA8195A4;
  *(_QWORD *)(v4 + 72) = v2;
  *(_QWORD *)(v4 + 80) = v3;
  *(_OWORD *)(v4 + 56) = v5;
  return swift_task_switch();
}

uint64_t FormatTransformData.init(knobs:policies:consumedArticleIDs:consumedIssueIDs:headlineScoringContext:issueScoringContext:clusteringRules:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v14 = *a5;
  v15 = *a6;
  sub_1BA82C56C(a1, a8);
  v16 = MEMORY[0x1E0DEE9E8];
  if (a2)
    v17 = a2;
  else
    v17 = MEMORY[0x1E0DEE9E8];
  if (a3)
    v18 = a3;
  else
    v18 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(a8 + 120) = v17;
  *(_QWORD *)(a8 + 128) = v18;
  if (!a4)
    a4 = v16;
  sub_1BA82C530(a1, (unint64_t *)&qword_1ED3BE8A8);
  *(_QWORD *)(a8 + 136) = a4;
  *(_BYTE *)(a8 + 144) = v14;
  *(_BYTE *)(a8 + 145) = v15;
  v19 = a8 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  return sub_1BA839080(a7, v19);
}

char *initializeBufferWithCopyOfBuffer for FormatTransformData(char *a1, char **a2, uint64_t a3)
{
  char *v4;
  int v5;
  char *v7;
  char *v8;
  _QWORD *v9;
  char *v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  void (*v20)(char *, char **, uint64_t);
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  int *v26;
  uint64_t v27;
  unsigned int (*v28)(_QWORD *, uint64_t, int *);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  __int128 v53;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  char *v57;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = *a2;
    if (*a2)
    {
      *(_QWORD *)a1 = v7;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      v8 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v8;
      v9 = a2 + 4;
      v10 = a2[5];
      v11 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((unint64_t)(v10 - 1) >= 3)
      {
        *((_QWORD *)v4 + 4) = *v9;
        *((_QWORD *)v4 + 5) = v10;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v4 + 2) = *(_OWORD *)v9;
      }
      v4[48] = *((_BYTE *)a2 + 48);
      v16 = a2[7];
      v17 = a2[8];
      *((_QWORD *)v4 + 7) = v16;
      *((_QWORD *)v4 + 8) = v17;
      *((_QWORD *)v4 + 9) = a2[9];
      v18 = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(v4 + 104) = v18;
      v19 = v18;
      v20 = **(void (***)(char *, char **, uint64_t))(v18 - 8);
      v21 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v4 + 80, a2 + 10, v19);
    }
    else
    {
      v13 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v13;
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      *((_QWORD *)a1 + 14) = a2[14];
      v14 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v14;
      v15 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v15;
    }
    v22 = a2[16];
    *((_QWORD *)v4 + 15) = a2[15];
    *((_QWORD *)v4 + 16) = v22;
    *((_QWORD *)v4 + 17) = a2[17];
    *((_WORD *)v4 + 72) = *((_WORD *)a2 + 72);
    v23 = *(int *)(a3 + 40);
    v24 = &v4[v23];
    v25 = (char **)((char *)a2 + v23);
    v26 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
    v27 = *((_QWORD *)v26 - 1);
    v28 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v25, 1, v26))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v24 = *v25;
      v24[8] = *((_BYTE *)v25 + 8);
      *((_QWORD *)v24 + 2) = v25[2];
      v24[24] = *((_BYTE *)v25 + 24);
      v30 = v26[6];
      v31 = &v24[v30];
      v32 = (_QWORD *)((char *)v25 + v30);
      v33 = type metadata accessor for FeedGroupBundleArticleQuotas();
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v36 = v32[1];
        *(_QWORD *)v31 = *v32;
        *((_QWORD *)v31 + 1) = v36;
        v37 = *(int *)(v33 + 24);
        v56 = (char *)v32 + v37;
        v57 = &v31[v37];
        v38 = sub_1BB86D078();
        v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v55(v57, v56, v38);
        *(_QWORD *)&v31[*(int *)(v33 + 28)] = *(_QWORD *)((char *)v32 + *(int *)(v33 + 28));
        v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
        swift_bridgeObjectRetain();
        v39(v31, 0, 1, v33);
      }
      v40 = v26[7];
      v41 = &v24[v40];
      v42 = (char *)v25 + v40;
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v41[8] = v42[8];
      v43 = v26[8];
      v44 = &v24[v43];
      v45 = (char *)v25 + v43;
      v44[8] = v45[8];
      *(_QWORD *)v44 = *(_QWORD *)v45;
      v46 = v26[9];
      v47 = &v24[v46];
      v48 = (char *)v25 + v46;
      *(_QWORD *)v47 = *(_QWORD *)v48;
      v47[8] = v48[8];
      v49 = v26[10];
      v50 = &v24[v49];
      v51 = (char *)v25 + v49;
      v52 = *((_QWORD *)v51 + 4);
      if (v52 == 1)
      {
        v53 = *((_OWORD *)v51 + 1);
        *(_OWORD *)v50 = *(_OWORD *)v51;
        *((_OWORD *)v50 + 1) = v53;
        *((_QWORD *)v50 + 4) = *((_QWORD *)v51 + 4);
      }
      else
      {
        *(_QWORD *)v50 = *(_QWORD *)v51;
        v50[8] = v51[8];
        *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);
        v50[24] = v51[24];
        *((_QWORD *)v50 + 4) = v52;
        swift_bridgeObjectRetain();
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
    }
  }
  return v4;
}

uint64_t destroy for FormatTransformData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)a1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for FeedPersonalizationClusteringRules();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = v4 + *(int *)(v5 + 24);
    v8 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      v9 = v7 + *(int *)(v8 + 24);
      v10 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      swift_bridgeObjectRelease();
    }
    result = *(_QWORD *)(v4 + *(int *)(v5 + 40) + 32);
    if (result != 1)
      return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t assignWithCopy for FormatTransformData(uint64_t a1, __int128 *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  uint64_t v25;
  void (*v26)(uint64_t, __int128 *, uint64_t);
  id v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  int *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t *, uint64_t, int *);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(_QWORD *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  void (*v114)(char *, char *, uint64_t);
  char *v115;
  char *v116;
  char *v117;
  char *v118;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (!v7)
    {
      sub_1BAFD9668(a1);
      v12 = a2[3];
      v14 = *a2;
      v13 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v12;
      *(_OWORD *)a1 = v14;
      *(_OWORD *)(a1 + 16) = v13;
      v16 = a2[5];
      v15 = a2[6];
      v17 = a2[4];
      *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
      *(_OWORD *)(a1 + 80) = v16;
      *(_OWORD *)(a1 + 96) = v15;
      *(_OWORD *)(a1 + 64) = v17;
      goto LABEL_18;
    }
    *(_QWORD *)a1 = v7;
    v8 = v7;

    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
    *(_BYTE *)(a1 + 10) = *((_BYTE *)a2 + 10);
    *(_BYTE *)(a1 + 11) = *((_BYTE *)a2 + 11);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v9 = *((_QWORD *)a2 + 5) - 1;
    if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 3)
    {
      if (v9 >= 3)
      {
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      sub_1BA82C530(a1 + 32, (unint64_t *)&qword_1ED3B9200);
    }
    else if (v9 >= 3)
    {
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
LABEL_17:
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      v28 = *(void **)(a1 + 56);
      v29 = (void *)*((_QWORD *)a2 + 7);
      *(_QWORD *)(a1 + 56) = v29;
      v30 = v29;

      *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)a2 + 10);
      goto LABEL_18;
    }
    *(_OWORD *)(a1 + 32) = a2[2];
    goto LABEL_17;
  }
  if (v7)
  {
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
    *(_BYTE *)(a1 + 10) = *((_BYTE *)a2 + 10);
    *(_BYTE *)(a1 + 11) = *((_BYTE *)a2 + 11);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    v10 = *((_QWORD *)a2 + 5) - 1;
    v11 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 >= 3)
    {
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = a2[2];
    }
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v24 = (void *)*((_QWORD *)a2 + 7);
    *(_QWORD *)(a1 + 56) = v24;
    *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    v25 = *((_QWORD *)a2 + 13);
    *(_QWORD *)(a1 + 104) = v25;
    *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
    v26 = **(void (***)(uint64_t, __int128 *, uint64_t))(v25 - 8);
    v27 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(a1 + 80, a2 + 5, v25);
  }
  else
  {
    v18 = *a2;
    v19 = a2[1];
    v20 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v20;
    *(_OWORD *)a1 = v18;
    *(_OWORD *)(a1 + 16) = v19;
    v21 = a2[4];
    v22 = a2[5];
    v23 = a2[6];
    *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
    *(_OWORD *)(a1 + 80) = v22;
    *(_OWORD *)(a1 + 96) = v23;
    *(_OWORD *)(a1 + 64) = v21;
  }
LABEL_18:
  *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *((_QWORD *)a2 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
  *(_BYTE *)(a1 + 145) = *((_BYTE *)a2 + 145);
  v31 = *(int *)(a3 + 40);
  v32 = (uint64_t *)(a1 + v31);
  v33 = (uint64_t *)((char *)a2 + v31);
  v34 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v35 = *((_QWORD *)v34 - 1);
  v36 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (v38)
    {
      sub_1BA4A2E80((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FeedPersonalizationClusteringRules);
LABEL_23:
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      return a1;
    }
    v48 = *v33;
    *((_BYTE *)v32 + 8) = *((_BYTE *)v33 + 8);
    *v32 = v48;
    v49 = v33[2];
    *((_BYTE *)v32 + 24) = *((_BYTE *)v33 + 24);
    v32[2] = v49;
    v50 = v34[6];
    v51 = (uint64_t *)((char *)v32 + v50);
    v52 = (uint64_t *)((char *)v33 + v50);
    v53 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v54 = *(_QWORD *)(v53 - 8);
    v55 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v54 + 48);
    v56 = v55(v51, 1, v53);
    v57 = v55(v52, 1, v53);
    if (v56)
    {
      if (v57)
        goto LABEL_37;
      *v51 = *v52;
      v51[1] = v52[1];
      v82 = *(int *)(v53 + 24);
      v116 = (char *)v52 + v82;
      v118 = (char *)v51 + v82;
      v83 = sub_1BB86D078();
      v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
      swift_bridgeObjectRetain();
      v114(v118, v116, v83);
      *(_QWORD *)((char *)v51 + *(int *)(v53 + 28)) = *(_QWORD *)((char *)v52 + *(int *)(v53 + 28));
      v84 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v54 + 56);
      swift_bridgeObjectRetain();
      v84(v51, 0, 1, v53);
    }
    else
    {
      if (v57)
      {
        sub_1BA4A2E80((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_37:
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        goto LABEL_40;
      }
      *v51 = *v52;
      v51[1] = v52[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v85 = *(int *)(v53 + 24);
      v86 = (char *)v51 + v85;
      v87 = (char *)v52 + v85;
      v88 = sub_1BB86D078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 24))(v86, v87, v88);
      *(_QWORD *)((char *)v51 + *(int *)(v53 + 28)) = *(_QWORD *)((char *)v52 + *(int *)(v53 + 28));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
LABEL_40:
    v89 = v34[7];
    v90 = (char *)v32 + v89;
    v91 = (char *)v33 + v89;
    v92 = *(_QWORD *)v91;
    v90[8] = v91[8];
    *(_QWORD *)v90 = v92;
    v93 = v34[8];
    v94 = (char *)v32 + v93;
    v95 = (char *)v33 + v93;
    v96 = *(_QWORD *)v95;
    v94[8] = v95[8];
    *(_QWORD *)v94 = v96;
    v97 = v34[9];
    v98 = (char *)v32 + v97;
    v99 = (char *)v33 + v97;
    v100 = *(_QWORD *)v99;
    v98[8] = v99[8];
    *(_QWORD *)v98 = v100;
    v101 = v34[10];
    v102 = (uint64_t)v32 + v101;
    v103 = (char *)v33 + v101;
    v104 = *(uint64_t *)((char *)v33 + v101 + 32);
    if (*(_QWORD *)(v102 + 32) == 1)
    {
      if (v104 == 1)
      {
        v105 = *(_OWORD *)v103;
        v106 = *((_OWORD *)v103 + 1);
        *(_QWORD *)(v102 + 32) = *((_QWORD *)v103 + 4);
        *(_OWORD *)v102 = v105;
        *(_OWORD *)(v102 + 16) = v106;
      }
      else
      {
        v109 = *(_QWORD *)v103;
        *(_BYTE *)(v102 + 8) = v103[8];
        *(_QWORD *)v102 = v109;
        v110 = *((_QWORD *)v103 + 2);
        *(_BYTE *)(v102 + 24) = v103[24];
        *(_QWORD *)(v102 + 16) = v110;
        *(_QWORD *)(v102 + 32) = *((_QWORD *)v103 + 4);
        swift_bridgeObjectRetain();
      }
    }
    else if (v104 == 1)
    {
      sub_1BAF10C4C(v102);
      v107 = *((_QWORD *)v103 + 4);
      v108 = *((_OWORD *)v103 + 1);
      *(_OWORD *)v102 = *(_OWORD *)v103;
      *(_OWORD *)(v102 + 16) = v108;
      *(_QWORD *)(v102 + 32) = v107;
    }
    else
    {
      v111 = *(_QWORD *)v103;
      *(_BYTE *)(v102 + 8) = v103[8];
      *(_QWORD *)v102 = v111;
      v112 = *((_QWORD *)v103 + 2);
      *(_BYTE *)(v102 + 24) = v103[24];
      *(_QWORD *)(v102 + 16) = v112;
      *(_QWORD *)(v102 + 32) = *((_QWORD *)v103 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    return a1;
  }
  if (v38)
    goto LABEL_23;
  v40 = *v33;
  *((_BYTE *)v32 + 8) = *((_BYTE *)v33 + 8);
  *v32 = v40;
  v41 = v33[2];
  *((_BYTE *)v32 + 24) = *((_BYTE *)v33 + 24);
  v32[2] = v41;
  v42 = v34[6];
  v43 = (uint64_t *)((char *)v32 + v42);
  v44 = (uint64_t *)((char *)v33 + v42);
  v45 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    *v43 = *v44;
    v43[1] = v44[1];
    v58 = *(int *)(v45 + 24);
    v115 = (char *)v44 + v58;
    v117 = (char *)v43 + v58;
    v59 = sub_1BB86D078();
    v113 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
    swift_bridgeObjectRetain();
    v113(v117, v115, v59);
    *(_QWORD *)((char *)v43 + *(int *)(v45 + 28)) = *(_QWORD *)((char *)v44 + *(int *)(v45 + 28));
    v60 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56);
    swift_bridgeObjectRetain();
    v60(v43, 0, 1, v45);
  }
  v61 = v34[7];
  v62 = (char *)v32 + v61;
  v63 = (char *)v33 + v61;
  v64 = *(_QWORD *)v63;
  v62[8] = v63[8];
  *(_QWORD *)v62 = v64;
  v65 = v34[8];
  v66 = (char *)v32 + v65;
  v67 = (char *)v33 + v65;
  v68 = *(_QWORD *)v67;
  v66[8] = v67[8];
  *(_QWORD *)v66 = v68;
  v69 = v34[9];
  v70 = (char *)v32 + v69;
  v71 = (char *)v33 + v69;
  v72 = *(_QWORD *)v71;
  v70[8] = v71[8];
  *(_QWORD *)v70 = v72;
  v73 = v34[10];
  v74 = (char *)v32 + v73;
  v75 = (char *)v33 + v73;
  if (*((_QWORD *)v75 + 4) == 1)
  {
    v76 = *(_OWORD *)v75;
    v77 = *((_OWORD *)v75 + 1);
    *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
    *(_OWORD *)v74 = v76;
    *((_OWORD *)v74 + 1) = v77;
  }
  else
  {
    v78 = *(_QWORD *)v75;
    v74[8] = v75[8];
    *(_QWORD *)v74 = v78;
    v79 = *((_QWORD *)v75 + 2);
    v74[24] = v75[24];
    *((_QWORD *)v74 + 2) = v79;
    *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v35 + 56))(v32, 0, 1, v34);
  return a1;
}

uint64_t initializeWithTake for FormatTransformData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  char *v36;

  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v7 = *(int *)(a3 + 40);
  v8 = (_QWORD *)(a2 + v7);
  v9 = (_QWORD *)(a1 + v7);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  v10 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48))(v8, 1, v10))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v9, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v9 = *v8;
    *((_BYTE *)v9 + 8) = *((_BYTE *)v8 + 8);
    v9[2] = v8[2];
    *((_BYTE *)v9 + 24) = *((_BYTE *)v8 + 24);
    v13 = v10[6];
    v14 = (_OWORD *)((char *)v9 + v13);
    v15 = (_OWORD *)((char *)v8 + v13);
    v16 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v19 = *(int *)(v16 + 24);
      v36 = (char *)v14 + v19;
      v20 = (char *)v15 + v19;
      v21 = sub_1BB86D078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v36, v20, v21);
      *(_QWORD *)((char *)v14 + *(int *)(v16 + 28)) = *(_QWORD *)((char *)v15 + *(int *)(v16 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v22 = v10[7];
    v23 = (char *)v9 + v22;
    v24 = (char *)v8 + v22;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v25 = v10[8];
    v26 = (char *)v9 + v25;
    v27 = (char *)v8 + v25;
    v26[8] = v27[8];
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v28 = v10[9];
    v29 = (char *)v9 + v28;
    v30 = (char *)v8 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v10[10];
    v32 = (char *)v9 + v31;
    v33 = (char *)v8 + v31;
    v34 = *((_OWORD *)v33 + 1);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *((_OWORD *)v32 + 1) = v34;
    *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for FormatTransformData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *, uint64_t, int *);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  char *v77;

  v6 = *(void **)a1;
  if (!*(_QWORD *)a1)
    goto LABEL_8;
  if (!*(_QWORD *)a2)
  {
    sub_1BAFD9668(a1);
LABEL_8:
    v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v11;
    goto LABEL_11;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(a2 + 32);
  if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 3)
  {
    v8 = *(_QWORD *)(a2 + 40);
    if ((unint64_t)(v8 - 1) >= 3)
    {
      *(_QWORD *)(a1 + 32) = *v7;
      *(_QWORD *)(a1 + 40) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1BA82C530(a1 + 32, (unint64_t *)&qword_1ED3B9200);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v7;
LABEL_10:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v12 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  v13 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v13;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
LABEL_11:
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  v14 = *(int *)(a3 + 40);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FeedPersonalizationClusteringRules);
LABEL_16:
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      return a1;
    }
    *v15 = *v16;
    *((_BYTE *)v15 + 8) = *((_BYTE *)v16 + 8);
    v15[2] = v16[2];
    *((_BYTE *)v15 + 24) = *((_BYTE *)v16 + 24);
    v29 = v17[6];
    v30 = (char *)v15 + v29;
    v31 = (char *)v16 + v29;
    v32 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
    v35 = v34(v30, 1, v32);
    v36 = v34(v31, 1, v32);
    if (v35)
    {
      if (!v36)
      {
        *(_OWORD *)v30 = *(_OWORD *)v31;
        v54 = *(int *)(v32 + 24);
        v55 = &v30[v54];
        v56 = &v31[v54];
        v57 = sub_1BB86D078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
        *(_QWORD *)&v30[*(int *)(v32 + 28)] = *(_QWORD *)&v31[*(int *)(v32 + 28)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        goto LABEL_29;
      }
    }
    else
    {
      if (!v36)
      {
        *(_QWORD *)v30 = *(_QWORD *)v31;
        *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
        swift_bridgeObjectRelease();
        v58 = *(int *)(v32 + 24);
        v59 = &v30[v58];
        v60 = &v31[v58];
        v61 = sub_1BB86D078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 40))(v59, v60, v61);
        *(_QWORD *)&v30[*(int *)(v32 + 28)] = *(_QWORD *)&v31[*(int *)(v32 + 28)];
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
LABEL_29:
    v62 = v17[7];
    v63 = (char *)v15 + v62;
    v64 = (char *)v16 + v62;
    *(_QWORD *)v63 = *(_QWORD *)v64;
    v63[8] = v64[8];
    v65 = v17[8];
    v66 = (char *)v15 + v65;
    v67 = (char *)v16 + v65;
    v66[8] = v67[8];
    *(_QWORD *)v66 = *(_QWORD *)v67;
    v68 = v17[9];
    v69 = (char *)v15 + v68;
    v70 = (char *)v16 + v68;
    *(_QWORD *)v69 = *(_QWORD *)v70;
    v69[8] = v70[8];
    v71 = v17[10];
    v72 = (uint64_t)v15 + v71;
    v73 = (char *)v16 + v71;
    if (*(_QWORD *)(v72 + 32) != 1)
    {
      v74 = *((_QWORD *)v73 + 4);
      if (v74 != 1)
      {
        *(_QWORD *)v72 = *(_QWORD *)v73;
        *(_BYTE *)(v72 + 8) = v73[8];
        *(_QWORD *)(v72 + 16) = *((_QWORD *)v73 + 2);
        *(_BYTE *)(v72 + 24) = v73[24];
        *(_QWORD *)(v72 + 32) = v74;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_1BAF10C4C(v72);
    }
    v75 = *((_OWORD *)v73 + 1);
    *(_OWORD *)v72 = *(_OWORD *)v73;
    *(_OWORD *)(v72 + 16) = v75;
    *(_QWORD *)(v72 + 32) = *((_QWORD *)v73 + 4);
    return a1;
  }
  if (v21)
    goto LABEL_16;
  *v15 = *v16;
  *((_BYTE *)v15 + 8) = *((_BYTE *)v16 + 8);
  v15[2] = v16[2];
  *((_BYTE *)v15 + 24) = *((_BYTE *)v16 + 24);
  v23 = v17[6];
  v24 = (_OWORD *)((char *)v15 + v23);
  v25 = (_OWORD *)((char *)v16 + v23);
  v26 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    v37 = *(int *)(v26 + 24);
    v77 = (char *)v24 + v37;
    v38 = (char *)v25 + v37;
    v39 = sub_1BB86D078();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v77, v38, v39);
    *(_QWORD *)((char *)v24 + *(int *)(v26 + 28)) = *(_QWORD *)((char *)v25 + *(int *)(v26 + 28));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v40 = v17[7];
  v41 = (char *)v15 + v40;
  v42 = (char *)v16 + v40;
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v41[8] = v42[8];
  v43 = v17[8];
  v44 = (char *)v15 + v43;
  v45 = (char *)v16 + v43;
  v44[8] = v45[8];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  v46 = v17[9];
  v47 = (char *)v15 + v46;
  v48 = (char *)v16 + v46;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v47[8] = v48[8];
  v49 = v17[10];
  v50 = (char *)v15 + v49;
  v51 = (char *)v16 + v49;
  v52 = *((_OWORD *)v51 + 1);
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v52;
  *((_QWORD *)v50 + 4) = *((_QWORD *)v51 + 4);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatTransformData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB626E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 120);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FormatTransformData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB626EF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 120) = (a2 - 1);
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void sub_1BB626F78(_QWORD **a1, char a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7[2];

  v4 = *(_QWORD *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
  v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = (_QWORD *)sub_1BACAB9C4(v5);
  v6 = v5[2];
  v7[0] = (uint64_t)v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v7[1] = v6;
  sub_1BB627008(v7, a2 & 1);
  *a1 = v5;
}

void sub_1BB627008(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  char *v221;
  char *v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  BOOL v234;
  unint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  BOOL v244;
  uint64_t v245;
  char v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  BOOL v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  unint64_t v280;
  _QWORD v281[2];
  uint64_t v282;
  char *v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  char *v302;
  char *v303;
  char *v304;
  char *v305;
  char *v306;
  char *v307;
  char *v308;
  char *v309;
  char *v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  char *v320;
  char *v321;
  char *v322;
  char *v323;
  char *v324;
  char *v325;
  char *v326;
  uint64_t v327;
  char *v328;
  char *v329;
  uint64_t v330;
  char *v331;
  char *v332;
  char *v333;
  char *v334;
  char *v335;
  char *v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t *v348;
  int v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  char *v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;

  v349 = a2 & 1;
  sub_1BA4A3FB4(0, &qword_1ED3C2120, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v281 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v281 - v7;
  MEMORY[0x1E0C80A78](v9);
  v288 = (char *)v281 - v10;
  MEMORY[0x1E0C80A78](v11);
  v290 = (char *)v281 - v12;
  MEMORY[0x1E0C80A78](v13);
  v284 = (char *)v281 - v14;
  MEMORY[0x1E0C80A78](v15);
  v283 = (char *)v281 - v16;
  MEMORY[0x1E0C80A78](v17);
  v287 = (char *)v281 - v18;
  MEMORY[0x1E0C80A78](v19);
  v289 = (char *)v281 - v20;
  v317 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  MEMORY[0x1E0C80A78](v317);
  v316 = (char *)v281 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v336 = (char *)v281 - v23;
  MEMORY[0x1E0C80A78](v24);
  v315 = (char *)v281 - v25;
  MEMORY[0x1E0C80A78](v26);
  v335 = (char *)v281 - v27;
  v330 = type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1E0C80A78](v330);
  v329 = (char *)v281 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v281 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v311 = (char *)v281 - v33;
  MEMORY[0x1E0C80A78](v34);
  v334 = (char *)v281 - v35;
  MEMORY[0x1E0C80A78](v36);
  v310 = (char *)v281 - v37;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)v281 - v39;
  MEMORY[0x1E0C80A78](v41);
  v309 = (char *)v281 - v42;
  MEMORY[0x1E0C80A78](v43);
  v333 = (char *)v281 - v44;
  MEMORY[0x1E0C80A78](v45);
  v308 = (char *)v281 - v46;
  v47 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)v281 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)v281 - v51;
  MEMORY[0x1E0C80A78](v53);
  v307 = (char *)v281 - v54;
  MEMORY[0x1E0C80A78](v55);
  v306 = (char *)v281 - v56;
  MEMORY[0x1E0C80A78](v57);
  v332 = (char *)v281 - v58;
  MEMORY[0x1E0C80A78](v59);
  v324 = (char *)v281 - v60;
  MEMORY[0x1E0C80A78](v61);
  v303 = (char *)v281 - v62;
  MEMORY[0x1E0C80A78](v63);
  v328 = (char *)v281 - v64;
  MEMORY[0x1E0C80A78](v65);
  v305 = (char *)v281 - v66;
  MEMORY[0x1E0C80A78](v67);
  v304 = (char *)v281 - v68;
  MEMORY[0x1E0C80A78](v69);
  v331 = (char *)v281 - v70;
  MEMORY[0x1E0C80A78](v71);
  v323 = (char *)v281 - v72;
  v73 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1E0C80A78](v73);
  v322 = (char *)v281 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v75);
  v321 = (char *)v281 - v76;
  sub_1BB62AA40();
  v346 = v77;
  MEMORY[0x1E0C80A78](v77);
  v345 = (uint64_t)v281 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v79);
  v344 = (uint64_t)v281 - v80;
  v357 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v357);
  v352 = (uint64_t)v281 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v82);
  v355 = (uint64_t)v281 - v83;
  MEMORY[0x1E0C80A78](v84);
  v314 = (uint64_t)v281 - v85;
  MEMORY[0x1E0C80A78](v86);
  v320 = (char *)v281 - v87;
  MEMORY[0x1E0C80A78](v88);
  v339 = (char *)v281 - v89;
  MEMORY[0x1E0C80A78](v90);
  v293 = (uint64_t)v281 - v91;
  v347 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v347);
  v343 = (uint64_t)v281 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v93);
  v351 = (uint64_t)v281 - v94;
  MEMORY[0x1E0C80A78](v95);
  v350 = (uint64_t)v281 - v96;
  MEMORY[0x1E0C80A78](v97);
  v358 = (char *)v281 - v98;
  MEMORY[0x1E0C80A78](v99);
  v298 = (uint64_t)v281 - v100;
  MEMORY[0x1E0C80A78](v101);
  v297 = (uint64_t)v281 - v102;
  MEMORY[0x1E0C80A78](v103);
  v313 = (uint64_t)v281 - v104;
  MEMORY[0x1E0C80A78](v105);
  v312 = (uint64_t)v281 - v106;
  MEMORY[0x1E0C80A78](v107);
  v286 = (uint64_t)v281 - v108;
  MEMORY[0x1E0C80A78](v109);
  v285 = (uint64_t)v281 - v110;
  MEMORY[0x1E0C80A78](v111);
  v292 = (uint64_t)v281 - v112;
  MEMORY[0x1E0C80A78](v113);
  v291 = (uint64_t)v281 - v114;
  v353 = type metadata accessor for FormatContentSlotItemResolution();
  v341 = *(_QWORD *)(v353 - 8);
  MEMORY[0x1E0C80A78](v353);
  v337 = (uint64_t)v281 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v116);
  v362 = (uint64_t)v281 - v117;
  MEMORY[0x1E0C80A78](v118);
  v364 = (uint64_t)v281 - v119;
  MEMORY[0x1E0C80A78](v120);
  v363 = (uint64_t)v281 - v121;
  MEMORY[0x1E0C80A78](v122);
  v319 = (char *)v281 - v123;
  MEMORY[0x1E0C80A78](v124);
  v326 = (char *)v281 - v125;
  MEMORY[0x1E0C80A78](v126);
  v296 = (uint64_t)v281 - v127;
  MEMORY[0x1E0C80A78](v128);
  v295 = (uint64_t)v281 - v129;
  v348 = a1;
  v130 = a1[1];
  v299 = sub_1BB8741F4();
  if (v299 >= v130)
  {
    if ((v130 & 0x8000000000000000) == 0)
    {
      if (v130)
        sub_1BB6298D4(0, v130, 1, v348, v349);
      return;
    }
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
LABEL_175:
    sub_1BB873EA0();
    __break(1u);
    JUMPOUT(0x1BB6298B4);
  }
  if (v130 >= 0)
    v131 = v130;
  else
    v131 = v130 + 1;
  if (v130 < -1)
    goto LABEL_175;
  v281[1] = v5;
  if (v130 < 2)
  {
    v340 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v341 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v341 + 80));
    v282 = MEMORY[0x1E0DEE9D8];
    if (v130 != 1)
    {
      v142 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v138 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_131:
      if (v142 < 2)
      {
        v271 = v282;
        goto LABEL_144;
      }
      v272 = *v348;
      v271 = v282;
      while (1)
      {
        v273 = v142 - 2;
        if (v142 < 2)
          goto LABEL_162;
        if (!v272)
          goto LABEL_174;
        v274 = v138;
        v275 = v138 + 32;
        v276 = *(_QWORD *)&v138[16 * v273 + 32];
        v277 = *(_QWORD *)&v138[16 * v142 + 24];
        v278 = v342;
        sub_1BB629D6C(v272 + *(_QWORD *)(v341 + 72) * v276, v272 + *(_QWORD *)(v341 + 72) * *(_QWORD *)&v275[16 * v142 - 16], v272 + *(_QWORD *)(v341 + 72) * v277, v340, v349);
        v342 = v278;
        if (v278)
          goto LABEL_144;
        if (v277 < v276)
          goto LABEL_163;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v274 = sub_1BACAB464((uint64_t)v274);
        if (v273 >= *((_QWORD *)v274 + 2))
          goto LABEL_164;
        v279 = &v274[16 * v273 + 32];
        *(_QWORD *)v279 = v276;
        *((_QWORD *)v279 + 1) = v277;
        v280 = *((_QWORD *)v274 + 2);
        if (v142 > v280)
          goto LABEL_165;
        v138 = v274;
        memmove(&v274[16 * v142 + 16], &v274[16 * v142 + 32], 16 * (v280 - v142));
        *((_QWORD *)v274 + 2) = v280 - 1;
        v142 = v280 - 1;
        if (v280 <= 2)
          goto LABEL_144;
      }
    }
    v133 = 1;
    v132 = v31;
    v281[0] = v8;
  }
  else
  {
    v132 = v31;
    v133 = v130;
    v281[0] = v8;
    v134 = v131 >> 1;
    v135 = sub_1BB872E74();
    *(_QWORD *)(v135 + 16) = v134;
    v136 = *(unsigned __int8 *)(v341 + 80);
    v282 = v135;
    v340 = v135 + ((v136 + 32) & ~v136);
  }
  v302 = v132;
  v301 = v40;
  v137 = 0;
  v318 = v47;
  v300 = v49;
  v138 = (char *)MEMORY[0x1E0DEE9D8];
  v325 = v52;
  v139 = (uint64_t)v339;
  v140 = (uint64_t)v326;
  v141 = v133;
  while (1)
  {
    v143 = v137++;
    v338 = v143;
    if (v137 >= v141)
    {
      v163 = v299;
    }
    else
    {
      v356 = v141;
      v294 = v138;
      v144 = *v348;
      v145 = *(_QWORD *)(v341 + 72);
      v146 = v295;
      sub_1BA4C2DD8(*v348 + v145 * v137, v295, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      v354 = v144;
      v147 = v144 + v145 * v143;
      v148 = v145;
      v149 = v296;
      sub_1BA4C2DD8(v147, v296, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      v150 = v293;
      sub_1BA4C2DD8(v146, v293, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        v151 = v292;
        sub_1BA5193C4(v150, v292, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
        v152 = v151;
        v153 = v291;
        sub_1BA5193C4(v152, v291, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
        sub_1BA4C2DD8(v149, v139, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          v154 = v153;
          v155 = v286;
          sub_1BA5193C4(v139, v286, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
          v156 = v155;
          v157 = v285;
          sub_1BA5193C4(v156, v285, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
          v158 = *(int *)(v347 + 20);
          v159 = v154 + v158;
          v160 = v157 + v158;
          v161 = (uint64_t)v320;
          if (v349)
          {
            v162 = v159;
            v159 = v160;
          }
          else
          {
            v162 = v160;
          }
          _s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(v162, v159);
          LODWORD(v361) = v164 ^ 1;
          sub_1BA4A2E80(v157, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
          sub_1BA4A2E80(v154, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
        }
        else
        {
          sub_1BA4A2E80(v139, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          sub_1BA4A2E80(v153, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
          LODWORD(v361) = 1;
          v161 = (uint64_t)v320;
        }
        v140 = (uint64_t)v326;
      }
      else
      {
        sub_1BA4A2E80(v150, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
        LODWORD(v361) = 1;
        v161 = (uint64_t)v320;
      }
      sub_1BA4A2E80(v296, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      sub_1BA4A2E80(v295, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      v141 = v356;
      v365 = v148;
      if (v143 + 2 >= v356)
      {
        v138 = v294;
        v137 = v143 + 2;
      }
      else
      {
        v165 = v354;
        v359 = v148 * (v143 + 2);
        v360 = v148 * v137;
        v137 = v143 + 2;
        v166 = (uint64_t)v319;
        while (1)
        {
          v167 = v141;
          sub_1BA4C2DD8(v165 + v359, v140, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
          sub_1BA4C2DD8(v165 + v360, v166, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
          sub_1BA4C2DD8(v140, v161, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 6)
          {
            v168 = v161;
            v169 = v313;
            sub_1BA5193C4(v168, v313, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
            v170 = v312;
            sub_1BA5193C4(v169, v312, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
            v171 = v314;
            sub_1BA4C2DD8(v166, v314, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
            if (swift_getEnumCaseMultiPayload() == 6)
            {
              v172 = v171;
              v173 = v298;
              sub_1BA5193C4(v172, v298, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
              v174 = v173;
              v175 = v297;
              sub_1BA5193C4(v174, v297, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
              v176 = *(int *)(v347 + 20);
              v177 = v170 + v176;
              v178 = v175 + v176;
              if (v349)
              {
                v179 = v177;
                v177 = v178;
              }
              else
              {
                v179 = v178;
              }
              _s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(v179, v177);
              v180 = v181 ^ 1;
              sub_1BA4A2E80(v175, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
              sub_1BA4A2E80(v170, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
            }
            else
            {
              sub_1BA4A2E80(v171, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
              sub_1BA4A2E80(v170, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
              v180 = 1;
            }
            v161 = (uint64_t)v320;
            v140 = (uint64_t)v326;
            v166 = (uint64_t)v319;
            v167 = v356;
          }
          else
          {
            sub_1BA4A2E80(v161, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
            v180 = 1;
          }
          sub_1BA4A2E80(v166, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
          sub_1BA4A2E80(v140, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
          if (((v361 ^ v180) & 1) != 0)
            break;
          ++v137;
          v165 += v365;
          v141 = v167;
          if (v167 == v137)
          {
            v137 = v167;
            v139 = (uint64_t)v339;
            v138 = v294;
            v143 = v338;
            goto LABEL_43;
          }
        }
        v139 = (uint64_t)v339;
        v138 = v294;
        v143 = v338;
        v141 = v167;
LABEL_43:
        v148 = v365;
      }
      v163 = v299;
      if ((v361 & 1) != 0)
      {
        if (v137 < v143)
          goto LABEL_168;
        if (v143 < v137)
        {
          v182 = v137;
          v183 = 0;
          v184 = v148 * (v182 - 1);
          v185 = v182 * v148;
          v186 = v143 * v148;
          do
          {
            v187 = v182;
            if (v143 != v182 + v183 - 1)
            {
              v188 = v354;
              if (!v354)
                goto LABEL_173;
              v189 = v354 + v186;
              v190 = v354 + v184;
              sub_1BA5193C4(v354 + v186, v337, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
              if (v186 < v184 || v189 >= v188 + v185)
              {
                swift_arrayInitWithTakeFrontToBack();
                v148 = v365;
              }
              else
              {
                v148 = v365;
                if (v186 != v184)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1BA5193C4(v337, v190, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
            }
            ++v143;
            --v183;
            v182 = v187;
            v184 -= v148;
            v185 -= v148;
            v186 += v148;
          }
          while (v143 < v187 + v183);
          v139 = (uint64_t)v339;
          v138 = v294;
          v163 = v299;
          v137 = v187;
          v143 = v338;
          v141 = v356;
        }
      }
    }
    if (v137 < v141)
    {
      if (__OFSUB__(v137, v143))
        goto LABEL_166;
      if (v137 - v143 < v163)
      {
        if (__OFADD__(v143, v163))
          goto LABEL_169;
        if (v143 + v163 >= v141)
          v191 = v141;
        else
          v191 = v143 + v163;
        if (v191 < v143)
          goto LABEL_170;
        if (v137 != v191)
        {
          v294 = v138;
          v192 = *(_QWORD *)(v341 + 72);
          v354 = v192 * (v137 - 1);
          v356 = v192;
          v365 = v137 * v192;
          v193 = (uint64_t)v358;
          v194 = v348;
          v327 = v191;
          do
          {
            v195 = 0;
            v196 = v143;
            v197 = v354;
            do
            {
              v359 = v196;
              v198 = *v194;
              v361 = v365 + v195;
              v199 = v363;
              sub_1BA4C2DD8(v365 + v195 + v198, v363, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
              v360 = v197 + v195;
              v200 = v364;
              sub_1BA4C2DD8(v197 + v195 + v198, v364, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
              v201 = v355;
              sub_1BA4C2DD8(v199, v355, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
              if (swift_getEnumCaseMultiPayload() == 6)
              {
                v202 = v201;
                v203 = v350;
                sub_1BA5193C4(v202, v350, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
                sub_1BA5193C4(v203, v193, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
                v204 = v352;
                sub_1BA4C2DD8(v200, v352, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
                if (swift_getEnumCaseMultiPayload() == 6)
                {
                  v205 = v204;
                  v206 = v343;
                  sub_1BA5193C4(v205, v343, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
                  v207 = v206;
                  v208 = v351;
                  sub_1BA5193C4(v207, v351, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
                  v209 = *(int *)(v347 + 20);
                  v210 = v193 + v209;
                  v211 = v208 + v209;
                  v212 = *(int *)(v346 + 48);
                  if (!v349)
                  {
                    v213 = v344 + v212;
                    sub_1BA4C2DD8(v211, v344, type metadata accessor for PuzzleStatisticCategory);
                    sub_1BA4C2DD8(v210, v213, type metadata accessor for PuzzleStatisticCategory);
                    type metadata accessor for PuzzleStatisticCategory(0);
                    v214 = (char *)&loc_1BB62839C + dword_1BB6298C4[swift_getEnumCaseMultiPayload()];
                    __asm { BR              X9 }
                  }
                  v215 = v345 + v212;
                  sub_1BA4C2DD8(v210, v345, type metadata accessor for PuzzleStatisticCategory);
                  sub_1BA4C2DD8(v211, v215, type metadata accessor for PuzzleStatisticCategory);
                  type metadata accessor for PuzzleStatisticCategory(0);
                  v216 = (char *)&loc_1BB62846C + dword_1BB6298B4[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X9 }
                }
                sub_1BA4A2E80(v204, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
                sub_1BA4A2E80(v193, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
                v197 = v354;
              }
              else
              {
                sub_1BA4A2E80(v201, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
              }
              sub_1BA4A2E80(v364, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
              sub_1BA4A2E80(v363, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
              v217 = *v194;
              if (!*v194)
                goto LABEL_171;
              v218 = v217 + v197 + v195;
              sub_1BA5193C4(v217 + v365 + v195, v362, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
              swift_arrayInitWithTakeFrontToBack();
              sub_1BA5193C4(v362, v218, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
              v195 -= v356;
              v193 = (uint64_t)v358;
              v196 = v359 + 1;
            }
            while (v137 != v359 + 1);
            ++v137;
            v354 = v197 + v356;
            v365 += v356;
            v143 = v338;
          }
          while (v137 != v327);
          v137 = v327;
          v139 = (uint64_t)v339;
          v138 = v294;
        }
      }
    }
    if (v137 < v143)
      goto LABEL_161;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v138 = sub_1BACAA368(0, *((_QWORD *)v138 + 2) + 1, 1, v138);
    v220 = *((_QWORD *)v138 + 2);
    v219 = *((_QWORD *)v138 + 3);
    v142 = v220 + 1;
    if (v220 >= v219 >> 1)
      v138 = sub_1BACAA368((char *)(v219 > 1), v220 + 1, 1, v138);
    *((_QWORD *)v138 + 2) = v142;
    v221 = v138 + 32;
    v222 = &v138[16 * v220 + 32];
    *(_QWORD *)v222 = v143;
    *((_QWORD *)v222 + 1) = v137;
    if (v220)
      break;
    v142 = 1;
LABEL_15:
    v141 = v348[1];
    v140 = (uint64_t)v326;
    if (v137 >= v141)
      goto LABEL_131;
  }
  while (1)
  {
    v223 = v142 - 1;
    if (v142 >= 4)
    {
      v228 = &v221[16 * v142];
      v229 = *((_QWORD *)v228 - 8);
      v230 = *((_QWORD *)v228 - 7);
      v234 = __OFSUB__(v230, v229);
      v231 = v230 - v229;
      if (v234)
        goto LABEL_150;
      v233 = *((_QWORD *)v228 - 6);
      v232 = *((_QWORD *)v228 - 5);
      v234 = __OFSUB__(v232, v233);
      v226 = v232 - v233;
      v227 = v234;
      if (v234)
        goto LABEL_151;
      v235 = v142 - 2;
      v236 = &v221[16 * v142 - 32];
      v238 = *(_QWORD *)v236;
      v237 = *((_QWORD *)v236 + 1);
      v234 = __OFSUB__(v237, v238);
      v239 = v237 - v238;
      if (v234)
        goto LABEL_153;
      v234 = __OFADD__(v226, v239);
      v240 = v226 + v239;
      if (v234)
        goto LABEL_156;
      if (v240 >= v231)
      {
        v258 = &v221[16 * v223];
        v260 = *(_QWORD *)v258;
        v259 = *((_QWORD *)v258 + 1);
        v234 = __OFSUB__(v259, v260);
        v261 = v259 - v260;
        if (v234)
          goto LABEL_160;
        v251 = v226 < v261;
        goto LABEL_118;
      }
    }
    else
    {
      if (v142 != 3)
      {
        v252 = *((_QWORD *)v138 + 4);
        v253 = *((_QWORD *)v138 + 5);
        v234 = __OFSUB__(v253, v252);
        v245 = v253 - v252;
        v246 = v234;
        goto LABEL_112;
      }
      v225 = *((_QWORD *)v138 + 4);
      v224 = *((_QWORD *)v138 + 5);
      v234 = __OFSUB__(v224, v225);
      v226 = v224 - v225;
      v227 = v234;
    }
    if ((v227 & 1) != 0)
      goto LABEL_152;
    v235 = v142 - 2;
    v241 = &v221[16 * v142 - 32];
    v243 = *(_QWORD *)v241;
    v242 = *((_QWORD *)v241 + 1);
    v244 = __OFSUB__(v242, v243);
    v245 = v242 - v243;
    v246 = v244;
    if (v244)
      goto LABEL_155;
    v247 = &v221[16 * v223];
    v249 = *(_QWORD *)v247;
    v248 = *((_QWORD *)v247 + 1);
    v234 = __OFSUB__(v248, v249);
    v250 = v248 - v249;
    if (v234)
      goto LABEL_158;
    if (__OFADD__(v245, v250))
      goto LABEL_159;
    if (v245 + v250 >= v226)
    {
      v251 = v226 < v250;
LABEL_118:
      if (v251)
        v223 = v235;
      goto LABEL_120;
    }
LABEL_112:
    if ((v246 & 1) != 0)
      goto LABEL_154;
    v254 = &v221[16 * v223];
    v256 = *(_QWORD *)v254;
    v255 = *((_QWORD *)v254 + 1);
    v234 = __OFSUB__(v255, v256);
    v257 = v255 - v256;
    if (v234)
      goto LABEL_157;
    if (v257 < v245)
      goto LABEL_15;
LABEL_120:
    v262 = v137;
    v263 = v223 - 1;
    if (v223 - 1 >= v142)
    {
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    if (!*v348)
      goto LABEL_172;
    v264 = v138;
    v265 = &v221[16 * v263];
    v266 = *(_QWORD *)v265;
    v267 = &v221[16 * v223];
    v268 = *((_QWORD *)v267 + 1);
    v269 = v342;
    sub_1BB629D6C(*v348 + *(_QWORD *)(v341 + 72) * *(_QWORD *)v265, *v348 + *(_QWORD *)(v341 + 72) * *(_QWORD *)v267, *v348 + *(_QWORD *)(v341 + 72) * v268, v340, v349);
    v342 = v269;
    if (v269)
      break;
    if (v268 < v266)
      goto LABEL_147;
    if (v223 > *((_QWORD *)v264 + 2))
      goto LABEL_148;
    *(_QWORD *)v265 = v266;
    *(_QWORD *)&v221[16 * v263 + 8] = v268;
    v270 = *((_QWORD *)v264 + 2);
    if (v223 >= v270)
      goto LABEL_149;
    v138 = v264;
    v142 = v270 - 1;
    memmove(&v221[16 * v223], v267 + 16, 16 * (v270 - 1 - v223));
    *((_QWORD *)v264 + 2) = v270 - 1;
    v251 = v270 > 2;
    v139 = (uint64_t)v339;
    v137 = v262;
    if (!v251)
      goto LABEL_15;
  }
  v271 = v282;
LABEL_144:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v271 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1BB6298D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v57 = a5;
  v70 = a4;
  v54 = a1;
  v66 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v66);
  v62 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v65 = (uint64_t)&v52 - v9;
  v56 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v56);
  v55 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v60 = (uint64_t)&v52 - v12;
  MEMORY[0x1E0C80A78](v13);
  v61 = (uint64_t)&v52 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v52 - v16;
  v58 = type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1E0C80A78](v58);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v72 = (uint64_t)&v52 - v21;
  MEMORY[0x1E0C80A78](v22);
  v71 = (uint64_t)&v52 - v24;
  v68 = a3;
  v53 = a2;
  if (a3 != a2)
  {
    v25 = *(_QWORD *)(v23 + 72);
    v26 = v25 * (v68 - 1);
    v67 = v25;
    v73 = v25 * v68;
    v59 = v19;
    v63 = v17;
LABEL_5:
    v27 = 0;
    v28 = v54;
    while (1)
    {
      v29 = v71;
      v30 = *v70;
      v31 = v73 + v27;
      sub_1BA4C2DD8(v73 + v27 + *v70, v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      v32 = v26;
      v69 = v26 + v27;
      v33 = v26 + v27 + v30;
      v34 = v72;
      sub_1BA4C2DD8(v33, v72, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      v35 = v29;
      v36 = v65;
      sub_1BA4C2DD8(v35, v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() != 6)
        break;
      v64 = v31;
      v37 = v36;
      v38 = v61;
      sub_1BA5193C4(v37, v61, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      v39 = (uint64_t)v63;
      sub_1BA5193C4(v38, (uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      v40 = v62;
      sub_1BA4C2DD8(v34, v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
        sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
        v19 = v59;
        v26 = v32;
        goto LABEL_13;
      }
      v41 = v55;
      sub_1BA5193C4(v40, v55, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      v42 = v41;
      v43 = v60;
      sub_1BA5193C4(v42, v60, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      v44 = *(int *)(v56 + 20);
      v45 = v39 + v44;
      v46 = v43 + v44;
      v26 = v32;
      if ((v57 & 1) != 0)
      {
        v47 = v45;
        v45 = v46;
      }
      else
      {
        v47 = v46;
      }
      _s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(v47, v45);
      v49 = v48;
      v19 = v59;
      sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      sub_1BA4A2E80((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      sub_1BA4A2E80(v72, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      if ((v49 & 1) != 0)
      {
LABEL_4:
        v26 += v67;
        v73 += v67;
        if (++v68 == v53)
          return;
        goto LABEL_5;
      }
LABEL_16:
      v50 = *v70;
      if (!*v70)
      {
        __break(1u);
        return;
      }
      v51 = v50 + v26 + v27;
      sub_1BA5193C4(v50 + v73 + v27, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      swift_arrayInitWithTakeFrontToBack();
      sub_1BA5193C4((uint64_t)v19, v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      v27 -= v67;
      if (v68 == ++v28)
        goto LABEL_4;
    }
    sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    v26 = v32;
LABEL_13:
    sub_1BA4A2E80(v72, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
    sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
    goto LABEL_16;
  }
}

uint64_t sub_1BB629D6C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t result;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  char *v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;

  v106 = a5;
  v113 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v113);
  v104 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v110 = (uint64_t)&v93 - v11;
  MEMORY[0x1E0C80A78](v12);
  v108 = (unint64_t)&v93 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v93 - v15;
  v105 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v105);
  v96 = (uint64_t)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v95 = (uint64_t)&v93 - v19;
  MEMORY[0x1E0C80A78](v20);
  v103 = (uint64_t)&v93 - v21;
  MEMORY[0x1E0C80A78](v22);
  v102 = (uint64_t)&v93 - v23;
  MEMORY[0x1E0C80A78](v24);
  v94 = (uint64_t)&v93 - v25;
  MEMORY[0x1E0C80A78](v26);
  v101 = (uint64_t)&v93 - v27;
  MEMORY[0x1E0C80A78](v28);
  v100 = (uint64_t)&v93 - v29;
  MEMORY[0x1E0C80A78](v30);
  v109 = (unint64_t)&v93 - v31;
  v111 = type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1E0C80A78](v111);
  v107 = (char *)&v93 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v112 = (unint64_t)&v93 - v34;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v93 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v93 - v39;
  v42 = *(_QWORD *)(v41 + 72);
  if (!v42)
  {
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v43 = a1;
  if (a2 - a1 == 0x8000000000000000 && v42 == -1)
    goto LABEL_79;
  v44 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v42 == -1)
    goto LABEL_80;
  v45 = (uint64_t)(a2 - a1) / v42;
  v116 = a1;
  v115 = a4;
  v46 = v44 / v42;
  if (v45 >= v44 / v42)
  {
    if ((v46 & 0x8000000000000000) == 0)
    {
      v109 = a1;
      v48 = v46 * v42;
      v49 = (uint64_t)v107;
      if (a4 < a2 || a2 + v48 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v69 = a4 + v48;
      v114 = a4 + v48;
      v116 = a2;
      if (v48 >= 1 && v109 < a2)
      {
        v71 = -v42;
        do
        {
          v72 = v112;
          sub_1BA4C2DD8(v69 + v71, v112, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
          v73 = a2 + v71;
          sub_1BA4C2DD8(a2 + v71, v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
          v74 = v110;
          sub_1BA4C2DD8(v72, v110, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 6)
          {
            v108 = a3;
            v75 = v74;
            v76 = v103;
            sub_1BA5193C4(v75, v103, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
            v77 = v76;
            v78 = v49;
            v79 = v102;
            sub_1BA5193C4(v77, v102, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
            v80 = v78;
            v81 = v104;
            sub_1BA4C2DD8(v80, v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
            if (swift_getEnumCaseMultiPayload() == 6)
            {
              v82 = v96;
              sub_1BA5193C4(v81, v96, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
              v83 = v95;
              sub_1BA5193C4(v82, v95, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
              v84 = *(int *)(v105 + 20);
              v85 = v79 + v84;
              v86 = v83 + v84;
              if ((v106 & 1) != 0)
              {
                v87 = v85;
                v85 = v86;
              }
              else
              {
                v87 = v86;
              }
              _s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(v87, v85);
              v88 = v89 ^ 1;
              sub_1BA4A2E80(v83, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
              sub_1BA4A2E80(v79, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
            }
            else
            {
              sub_1BA4A2E80(v81, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
              sub_1BA4A2E80(v79, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
              v88 = 1;
            }
            v49 = (uint64_t)v107;
            a3 = v108;
          }
          else
          {
            sub_1BA4A2E80(v74, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
            v88 = 1;
          }
          v90 = a3 + v71;
          sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
          sub_1BA4A2E80(v112, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
          if ((v88 & 1) != 0)
          {
            if (a3 < a2 || v90 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v116 += v71;
          }
          else
          {
            v91 = v114;
            v114 += v71;
            if (a3 < v91 || v90 >= v91)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v91)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v73 = a2;
          }
          v69 = v114;
          if (v114 <= a4)
            break;
          a2 = v73;
          a3 += v71;
        }
        while (v73 > v109);
      }
LABEL_77:
      sub_1BACAB2C0(&v116, &v115, (uint64_t *)&v114);
      return 1;
    }
  }
  else if ((v45 & 0x8000000000000000) == 0)
  {
    v47 = v45 * v42;
    if (a4 < v43 || v43 + v47 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v43)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v50 = a4 + v47;
    v114 = a4 + v47;
    if (v47 >= 1 && a2 < a3)
    {
      v112 = a4 + v47;
      v98 = v16;
      v99 = v40;
      v97 = v37;
      while (1)
      {
        sub_1BA4C2DD8(a2, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
        sub_1BA4C2DD8(a4, (uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
        sub_1BA4C2DD8((uint64_t)v40, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
        if (swift_getEnumCaseMultiPayload() != 6)
          break;
        v52 = (uint64_t)v16;
        v53 = v42;
        v54 = v100;
        sub_1BA5193C4(v52, v100, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
        v55 = v109;
        sub_1BA5193C4(v54, v109, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
        v56 = v108;
        sub_1BA4C2DD8((uint64_t)v37, v108, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
        if (swift_getEnumCaseMultiPayload() != 6)
        {
          sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
          v42 = v53;
          v37 = v97;
          v16 = v98;
          v50 = v112;
          v40 = v99;
          goto LABEL_29;
        }
        v57 = v94;
        sub_1BA5193C4(v56, v94, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
        v58 = v57;
        v59 = v101;
        sub_1BA5193C4(v58, v101, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
        v60 = *(int *)(v105 + 20);
        v61 = v55 + v60;
        v62 = v59 + v60;
        if ((v106 & 1) != 0)
        {
          v63 = v61;
          v61 = v62;
        }
        else
        {
          v63 = v62;
        }
        _s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(v63, v61);
        v67 = v66;
        v42 = v53;
        sub_1BA4A2E80(v101, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
        sub_1BA4A2E80(v109, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
        v37 = v97;
        sub_1BA4A2E80((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
        v40 = v99;
        sub_1BA4A2E80((uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
        v16 = v98;
        v50 = v112;
        if ((v67 & 1) != 0)
        {
          v64 = v116;
          v68 = v115 + v42;
          if (v116 < v115 || v116 >= v68)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v116 != v115)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v115 = v68;
          v65 = a2;
          goto LABEL_44;
        }
LABEL_30:
        v64 = v116;
        v65 = a2 + v42;
        if (v116 < a2 || v116 >= v65)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v116 == a2)
        {
          v64 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_44:
        v116 = v64 + v42;
        a4 = v115;
        if (v115 < v50)
        {
          a2 = v65;
          if (v65 < a3)
            continue;
        }
        goto LABEL_77;
      }
      sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
LABEL_29:
      sub_1BA4A2E80((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      sub_1BA4A2E80((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      goto LABEL_30;
    }
    goto LABEL_77;
  }
LABEL_81:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

_QWORD *sub_1BB62A694(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *result;
  _DWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;

  v3 = v2;
  v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3C4198, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for FormatContentSlotItemResolution();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v27 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v22 - v14;
  v16 = *a2;
  v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v18 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v18)
  {
    v22[1] = v16;
    v23 = a1;
    v24 = v3;
    v25 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v26 = v6;
    sub_1BA4C2DD8(a1 + v25, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
    sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    v19 = (char *)&loc_1BB62A7E4 + 4 * byte_1BB9353C0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  if (v16 == 2)
  {
    v20 = sub_1BB107714((uint64_t)v17);
    swift_release();
    return (_QWORD *)v20;
  }
  v28 = v17;
  swift_bridgeObjectRetain();
  sub_1BB626F78(&v28, v16 & 1);
  if (!v3)
  {
    swift_release();
    return v28;
  }
  result = (_QWORD *)swift_release();
  __break(1u);
  return result;
}

void sub_1BB62AA40()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AD790)
  {
    type metadata accessor for PuzzleStatisticCategory(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AD790);
  }
}

uint64_t sub_1BB62AAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3C2120, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB62AAF4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v6 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, (uint64_t)(a2 + 1));
    v7 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v7;
    v8 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v8;
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 96) = a2[12];
    v9 = (int *)type metadata accessor for GroupLayoutBindingContext();
    v10 = v9[13];
    v24 = (uint64_t)a2 + v10;
    v25 = a1 + v10;
    v11 = sub_1BB86D8A0();
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v25, v24, v11);
    *(_QWORD *)(a1 + v9[14]) = *(uint64_t *)((char *)a2 + v9[14]);
    *(_QWORD *)(a1 + v9[15]) = *(uint64_t *)((char *)a2 + v9[15]);
    *(_BYTE *)(a1 + v9[16]) = *((_BYTE *)a2 + v9[16]);
    *(_QWORD *)(a1 + v9[17]) = *(uint64_t *)((char *)a2 + v9[17]);
    *(_QWORD *)(a1 + v9[18]) = *(uint64_t *)((char *)a2 + v9[18]);
    *(_QWORD *)(a1 + v9[19]) = *(uint64_t *)((char *)a2 + v9[19]);
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BACD5EAC();
      v13 = *(int *)(v12 + 48);
      v14 = *(void **)((char *)a2 + v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = v14;
      *(_QWORD *)(a1 + v13) = v14;
    }
    else
    {
      sub_1BACD5F2C();
      v18 = *(int *)(v17 + 48);
      v19 = a1 + v18;
      v20 = (uint64_t)a2 + v18;
      *(_BYTE *)v19 = *(_BYTE *)v20;
      *(_OWORD *)(v19 + 24) = *(_OWORD *)(v20 + 24);
      *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
      v21 = *(_QWORD *)(v20 + 48);
      *(_QWORD *)(v19 + 40) = *(_QWORD *)(v20 + 40);
      *(_QWORD *)(v19 + 48) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1BB62AD40(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = a1 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  v4 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BACD5EAC();

  }
  else
  {
    sub_1BACD5F2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB62AE30(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v7 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v8 = v7[13];
  v21 = a2 + v8;
  v22 = a1 + v8;
  v9 = sub_1BB86D8A0();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v22, v21, v9);
  *(_QWORD *)(a1 + v7[14]) = *(_QWORD *)(a2 + v7[14]);
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(a2 + v7[16]);
  *(_QWORD *)(a1 + v7[17]) = *(_QWORD *)(a2 + v7[17]);
  *(_QWORD *)(a1 + v7[18]) = *(_QWORD *)(a2 + v7[18]);
  *(_QWORD *)(a1 + v7[19]) = *(_QWORD *)(a2 + v7[19]);
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BACD5EAC();
    v11 = *(int *)(v10 + 48);
    v12 = *(void **)(a2 + v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = v12;
    *(_QWORD *)(a1 + v11) = v12;
  }
  else
  {
    sub_1BACD5F2C();
    v15 = *(int *)(v14 + 48);
    v16 = a1 + v15;
    v17 = a2 + v15;
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_OWORD *)(v16 + 24) = *(_OWORD *)(v17 + 24);
    *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
    v18 = *(_QWORD *)(v17 + 48);
    *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
    *(_QWORD *)(v16 + 48) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BB62B040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;

  if (a1 != a2)
  {
    sub_1BB62B280(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v4;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v5 = (int *)type metadata accessor for GroupLayoutBindingContext();
    v6 = v5[13];
    v19 = a2 + v6;
    v20 = a1 + v6;
    v7 = sub_1BB86D8A0();
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v20, v19, v7);
    *(_QWORD *)(a1 + v5[14]) = *(_QWORD *)(a2 + v5[14]);
    *(_QWORD *)(a1 + v5[15]) = *(_QWORD *)(a2 + v5[15]);
    *(_BYTE *)(a1 + v5[16]) = *(_BYTE *)(a2 + v5[16]);
    *(_QWORD *)(a1 + v5[17]) = *(_QWORD *)(a2 + v5[17]);
    *(_QWORD *)(a1 + v5[18]) = *(_QWORD *)(a2 + v5[18]);
    *(_QWORD *)(a1 + v5[19]) = *(_QWORD *)(a2 + v5[19]);
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BACD5EAC();
      v9 = *(int *)(v8 + 48);
      v10 = *(void **)(a2 + v9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = v10;
      *(_QWORD *)(a1 + v9) = v10;
    }
    else
    {
      sub_1BACD5F2C();
      v13 = *(int *)(v12 + 48);
      v14 = a1 + v13;
      v15 = a2 + v13;
      *(_BYTE *)v14 = *(_BYTE *)v15;
      v16 = *(_OWORD *)(v15 + 8);
      *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
      *(_OWORD *)(v14 + 8) = v16;
      *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
      *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB62B280(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugInspectViewResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugInspectViewResult()
{
  uint64_t result;

  result = qword_1EF2C9450;
  if (!qword_1EF2C9450)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB62B2F8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  __int128 v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v6 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v7 = v6[13];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + v6[14]) = *(_QWORD *)(a2 + v6[14]);
  *(_QWORD *)(a1 + v6[15]) = *(_QWORD *)(a2 + v6[15]);
  *(_BYTE *)(a1 + v6[16]) = *(_BYTE *)(a2 + v6[16]);
  *(_QWORD *)(a1 + v6[17]) = *(_QWORD *)(a2 + v6[17]);
  *(_QWORD *)(a1 + v6[18]) = *(_QWORD *)(a2 + v6[18]);
  *(_QWORD *)(a1 + v6[19]) = *(_QWORD *)(a2 + v6[19]);
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BACD5EAC();
    *(_QWORD *)(a1 + *(int *)(v11 + 48)) = *(_QWORD *)(a2 + *(int *)(v11 + 48));
  }
  else
  {
    sub_1BACD5F2C();
    v13 = *(int *)(v12 + 48);
    v14 = a1 + v13;
    v15 = a2 + v13;
    v16 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v16;
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
    *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BB62B468(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  __int128 v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  if (a1 != a2)
  {
    sub_1BB62B280(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v5 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v5;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v6 = (int *)type metadata accessor for GroupLayoutBindingContext();
    v7 = v6[13];
    v8 = a1 + v7;
    v9 = a2 + v7;
    v10 = sub_1BB86D8A0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    *(_QWORD *)(a1 + v6[14]) = *(_QWORD *)(a2 + v6[14]);
    *(_QWORD *)(a1 + v6[15]) = *(_QWORD *)(a2 + v6[15]);
    *(_BYTE *)(a1 + v6[16]) = *(_BYTE *)(a2 + v6[16]);
    *(_QWORD *)(a1 + v6[17]) = *(_QWORD *)(a2 + v6[17]);
    *(_QWORD *)(a1 + v6[18]) = *(_QWORD *)(a2 + v6[18]);
    *(_QWORD *)(a1 + v6[19]) = *(_QWORD *)(a2 + v6[19]);
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BACD5EAC();
      *(_QWORD *)(a1 + *(int *)(v11 + 48)) = *(_QWORD *)(a2 + *(int *)(v11 + 48));
    }
    else
    {
      sub_1BACD5F2C();
      v13 = *(int *)(v12 + 48);
      v14 = a1 + v13;
      v15 = a2 + v13;
      v16 = *(_OWORD *)(v15 + 16);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v16;
      *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
      *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB62B5E8()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  char v3;
  char *v4;
  uint64_t *v5;

  result = type metadata accessor for GroupLayoutBindingContext();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v4 = &v3;
    swift_getTupleTypeLayout2();
    v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BB62B688(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  _QWORD v13[3];
  uint64_t v14;
  char *v15;
  uint64_t v16;

  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v14);
  v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(a1 + 16))
  {
    v13[0] = a1;
    v13[1] = v1;
    v11 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    swift_bridgeObjectRetain();
    v15 = v5;
    v13[2] = v6;
    sub_1BA4C2DD8(v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    v12 = (char *)&loc_1BB62B7B0 + 4 * byte_1BB935418[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1BB62B97C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12;

  v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v11[0] = a1;
    v11[1] = v1;
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1BB62BAD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12;

  v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v11[0] = a1;
    v11[1] = v1;
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

unint64_t sub_1BB62BC34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatWebEmbed.Resolved();
  v23 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v24 = (uint64_t)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v22 = (uint64_t)v21 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v21 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v21[1] = a1;
  v21[2] = v1;
  v14 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v15 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1BA4C2DD8(v14, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v17 = v22;
      sub_1BA5193C4((uint64_t)v5, v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      sub_1BA5193C4(v17, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      sub_1BA5193C4((uint64_t)v12, v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1BA6C1FFC(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      if (v19 >= v18 >> 1)
        v16 = sub_1BA6C1FFC(v18 > 1, v19 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v19 + 1;
      sub_1BA5193C4(v24, v16+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    }
    v14 += v15;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BB62BE90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12;

  v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v11[0] = a1;
    v11[1] = v1;
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1BB62BFEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12;

  v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v11[0] = a1;
    v11[1] = v1;
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

unint64_t sub_1BB62C148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PuzzleStatistic();
  v23 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v24 = (uint64_t)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v22 = (uint64_t)v21 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v21 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v21[1] = a1;
  v21[2] = v1;
  v14 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v15 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1BA4C2DD8(v14, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      v17 = v22;
      sub_1BA5193C4((uint64_t)v5, v22, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      sub_1BA5193C4(v17, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      sub_1BA5193C4((uint64_t)v12, v24, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1BB38D310(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      if (v19 >= v18 >> 1)
        v16 = sub_1BB38D310(v18 > 1, v19 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v19 + 1;
      sub_1BA5193C4(v24, v16+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v19, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    }
    v14 += v15;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_1BB62C3A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatCustomItem.Resolved();
  v23 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v24 = (uint64_t)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v22 = (uint64_t)v21 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v21 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v21[1] = a1;
  v21[2] = v1;
  v14 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v15 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1BA4C2DD8(v14, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      v17 = v22;
      sub_1BA5193C4((uint64_t)v5, v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
      sub_1BA5193C4(v17, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
      sub_1BA5193C4((uint64_t)v12, v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1BB392D88(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      if (v19 >= v18 >> 1)
        v16 = sub_1BB392D88(v18 > 1, v19 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v19 + 1;
      sub_1BA5193C4(v24, v16+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    }
    v14 += v15;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v16;
}

_QWORD *sub_1BB62C600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v18[1] = a1;
  v18[2] = v1;
  v8 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v9 = *(_QWORD *)(v4 + 72);
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v19 = v9;
  v20 = v3;
  do
  {
    sub_1BA4C2DD8(v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    if (swift_getEnumCaseMultiPayload() <= 7)
    {
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    }
    else
    {
      v11 = *(_QWORD *)v6;
      v12 = *((_QWORD *)v6 + 1);
      v13 = v6[16];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1BB38F5F4(0, v10[2] + 1, 1, v10);
      v15 = v10[2];
      v14 = v10[3];
      if (v15 >= v14 >> 1)
        v10 = sub_1BB38F5F4((_QWORD *)(v14 > 1), v15 + 1, 1, v10);
      v10[2] = v15 + 1;
      v16 = &v10[3 * v15];
      v16[4] = v11;
      v16[5] = v12;
      *((_BYTE *)v16 + 48) = v13;
      v9 = v19;
    }
    v8 += v9;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t FormatContentSlot.Resolved.headlines.getter()
{
  return sub_1BB62C83C(sub_1BB62B688);
}

uint64_t FormatContentSlot.Resolved.issues.getter()
{
  return sub_1BB62C83C(sub_1BB62B97C);
}

uint64_t FormatContentSlot.Resolved.tags.getter()
{
  return sub_1BB62C83C(sub_1BB62BAD8);
}

uint64_t FormatContentSlot.Resolved.webEmbeds.getter()
{
  return sub_1BB62C83C((uint64_t (*)(uint64_t))sub_1BB62BC34);
}

uint64_t FormatContentSlot.Resolved.puzzles.getter()
{
  return sub_1BB62C83C(sub_1BB62BE90);
}

uint64_t FormatContentSlot.Resolved.puzzleTypes.getter()
{
  return sub_1BB62C83C(sub_1BB62BFEC);
}

uint64_t FormatContentSlot.Resolved.puzzleStatistics.getter()
{
  return sub_1BB62C83C((uint64_t (*)(uint64_t))sub_1BB62C148);
}

uint64_t FormatContentSlot.Resolved.customItems.getter()
{
  return sub_1BB62C83C((uint64_t (*)(uint64_t))sub_1BB62C3A4);
}

uint64_t FormatContentSlot.Resolved.placeholders.getter()
{
  return sub_1BB62C83C((uint64_t (*)(uint64_t))sub_1BB62C600);
}

uint64_t sub_1BB62C83C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_bridgeObjectRetain();
  v3 = a1(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t FormatContentSlot.Resolved.init(slot:options:selectors:items:itemSelectors:itemOptions:itemAuxiliaries:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t FormatContentSlot.Resolved.slot.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentSlot.Resolved.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlot.Resolved.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlot.Resolved.itemSelectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlot.Resolved.itemOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB62C8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB62CC74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB62C910()
{
  sub_1BA583F4C();
  return sub_1BB874710();
}

uint64_t sub_1BB62C938()
{
  sub_1BA583F4C();
  return sub_1BB87471C();
}

void sub_1BB62C960(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3D2040, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB62C97C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A07C8)
  {
    sub_1BA6BCC84();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A07C8);
  }
}

void sub_1BB62C9E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A0798)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A0798);
  }
}

uint64_t sub_1BB62CA5C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    v7 = a3();
    v8[0] = MEMORY[0x1E0DEA970];
    v8[1] = v7;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0B8], v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB62CAC8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, &qword_1ED3AAF70, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject.Resolved, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8ResolvedV10CodingKeysOwst_3(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB62CBAC + 4 * byte_1BB93542D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB62CBE0 + 4 * byte_1BB935428[v4]))();
}

uint64_t sub_1BB62CBE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB62CBE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB62CBF0);
  return result;
}

uint64_t sub_1BB62CBFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB62CC04);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB62CC08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB62CC10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8ResolvedV10CodingKeysOMa_3()
{
  return &_s8ResolvedV10CodingKeysON_3;
}

unint64_t sub_1BB62CC30()
{
  unint64_t result;

  result = qword_1EF2C9490;
  if (!qword_1EF2C9490)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB935548, &_s8ResolvedV10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_1EF2C9490);
  }
  return result;
}

uint64_t sub_1BB62CC74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1953459315 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C65536D657469 && a2 == 0xED000073726F7463 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6974704F6D657469 && a2 == 0xEB00000000736E6FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x697875416D657469 && a2 == 0xEF7365697261696CLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

BOOL _s8NewsFeed23FormatGradientDirectionV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
    return 0;
  if (a1[3] == a2[3])
    return a1[2] == a2[2];
  return 0;
}

unint64_t sub_1BB62CFEC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB62D010();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB62D010()
{
  unint64_t result;

  result = qword_1EF2C9498;
  if (!qword_1EF2C9498)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGradientDirection, &type metadata for FormatGradientDirection);
    atomic_store(result, (unint64_t *)&qword_1EF2C9498);
  }
  return result;
}

unint64_t sub_1BB62D054(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA599700();
  a1[2] = sub_1BA5DCBDC();
  result = sub_1BB62D088();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB62D088()
{
  unint64_t result;

  result = qword_1EF2C94A0;
  if (!qword_1EF2C94A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGradientDirection, &type metadata for FormatGradientDirection);
    atomic_store(result, (unint64_t *)&qword_1EF2C94A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGradientDirection()
{
  return &type metadata for FormatGradientDirection;
}

uint64_t sub_1BB62D0E0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BB62D130@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BB62D184()
{
  sub_1BA6B5EAC();
  return sub_1BB874710();
}

uint64_t sub_1BB62D1AC()
{
  sub_1BA6B5EAC();
  return sub_1BB87471C();
}

uint64_t FormatSourceMapNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BB57F380();
  v1 = v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*sub_1BB62D220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10))(void *a1)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[4];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;

  v47 = a1;
  v58 = a4;
  v45 = a10;
  v50 = a2;
  v51 = a9;
  v15 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = a4;
  v54 = a5;
  v55 = a6;
  v56 = a7;
  v18 = a6;
  swift_bridgeObjectRetain();
  v19 = sub_1BB29E7C4(&v53);
  swift_bridgeObjectRelease();
  v20 = *a8;
  v21 = (uint64_t *)((char *)v17 + *(int *)(v15 + 24));
  sub_1BACCA574();
  v23 = (char *)v21 + *(int *)(v22 + 48);
  *v21 = v19;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6450]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v23, v50, v24);
  type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  swift_storeEnumTagMultiPayload();
  v25 = v58;
  *v17 = v20;
  v17[1] = v25;
  v17[2] = a5;
  v17[3] = v18;
  v17[4] = a7;
  v43 = v20 & 0xFFFFFFFFFFFFFF9;
  v44 = v20;
  swift_retain();
  swift_bridgeObjectRetain();
  v48 = v19;
  swift_retain();
  sub_1BB86DD20();
  swift_beginAccess();
  sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  sub_1BB86E80C();
  swift_endAccess();
  sub_1BB86DD2C();
  v52[0] = v58;
  v52[1] = a5;
  v49 = v18;
  v50 = a5;
  v52[2] = v18;
  v52[3] = a7;
  v26 = a7;
  sub_1BB47F030(v52, 1, &v53);
  v27 = v54;
  if (v54)
  {
    v29 = v56;
    v28 = v57;
    v30 = v55;
    v31 = v53;
    sub_1BB47DFBC(&v53);
    v32 = v29;
    v26 = a7;
    sub_1BB62DCB0(v31, v27, v30, v32, v28);
  }
  swift_retain();
  v33 = v47;
  v34 = v48;
  v35 = v46;
  sub_1BA708AD0(v47, v48, v45, v44);
  swift_release();
  if (v35)
  {
    v36 = *(_QWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    v53 = v58;
    v54 = v50;
    v55 = v49;
    v56 = v26;
    sub_1BB62DA9C(v36, &v53, v35, v51);
    swift_willThrow();

    swift_release();
    return (uint64_t (*)(void *))sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatDebuggerCallStackFrame);
  }
  else
  {
    v53 = v33;
    sub_1BA7099D4();
    sub_1BA4A2870(&qword_1ED3C4560, (uint64_t (*)(uint64_t))sub_1BA7099D4, MEMORY[0x1E0DB5B88]);
    v38 = v51;
    swift_retain();
    sub_1BB86D504();
    swift_release();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatDebuggerCallStackFrame);
    v39 = *(_QWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    swift_retain();
    swift_release();
    v40 = (_QWORD *)swift_allocObject();
    v41 = v58;
    v40[2] = v39;
    v40[3] = v41;
    v42 = v49;
    v40[4] = v50;
    v40[5] = v42;
    v40[6] = v26;
    v40[7] = v38;
    swift_bridgeObjectRetain();
    swift_retain();
    return sub_1BB62DFA8;
  }
}

uint64_t sub_1BB62D5FC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3C0AD8, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v4 - v1;
  sub_1BB86DD20();
  swift_beginAccess();
  sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  sub_1BB86E7F4();
  swift_endAccess();
  sub_1BA5C699C((uint64_t)v2, &qword_1ED3C0AD8, type metadata accessor for FormatDebuggerCallStackFrame);
  return sub_1BB86DD2C();
}

uint64_t (*sub_1BB62D708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *a1), uint64_t a7, uint64_t *a8, uint64_t a9))(void *a1)
{
  void *v9;
  void *v10;
  uint64_t (*v12)(void *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *);
  uint64_t v25;
  uint64_t v26;

  v10 = v9;
  v12 = a6;
  v22 = a4;
  v23 = a5;
  v24 = a6;
  v25 = a7;
  v26 = a7;
  swift_bridgeObjectRetain();
  v16 = sub_1BB29E7C4(&v22);
  swift_bridgeObjectRelease();
  v17 = *a8;
  swift_retain();
  sub_1BA708AD0(a1, v16, a9, v17);
  swift_release();
  if (v10)
  {
    v18 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    v22 = a4;
    v23 = a5;
    v24 = v12;
    v25 = v26;
    sub_1BB62DA9C(v18, &v22, v10, 0);
    swift_willThrow();

    swift_release();
  }
  else
  {
    v19 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    swift_retain();
    swift_release();
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = v19;
    v20[3] = a4;
    v20[4] = a5;
    v20[5] = v12;
    v12 = sub_1BB62DFA8;
    v20[6] = v26;
    v20[7] = 0;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_1BB62D884()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BB57F380();
  v1 = v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB62D8CC(uint64_t a1, uint64_t a2)
{
  return FormatSourceMapNode.bind(binder:context:)(a1, a2);
}

void sub_1BB62D8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3[2];
  __int128 v4;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    v3[0] = *(_QWORD *)(v0 + 8);
    v3[1] = v2;
    v4 = *(_OWORD *)(v0 + 24);
    sub_1BB3D91E0(v3);
  }
  v3[0] = v1;
  sub_1BAC46704();
}

void sub_1BB62D94C()
{
  sub_1BA6F84BC();
}

uint64_t _s8NewsFeed19FormatSourceMapNodeV2eeoiySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;
  uint64_t v13;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v13 = *a1;
  static FormatNode.== infix(_:_:)((uint64_t)&v13);
  if ((v10 & 1) == 0)
    return 0;
  if (!v3)
  {
    if (!v7)
      return 1;
    goto LABEL_11;
  }
  if (!v7)
  {
    swift_bridgeObjectRetain();
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v2 == v6 && v3 == v7)
  {
    if (v4 == v8)
      return v5 == v9;
    return 0;
  }
  v12 = sub_1BB874398();
  result = 0;
  if ((v12 & 1) != 0 && v4 == v8)
    return v5 == v9;
  return result;
}

uint64_t sub_1BB62DA9C(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  int v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  void *v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  id v23;
  uint64_t v26[5];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39B410, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26[-1] - v9;
  v12 = *a2;
  v11 = a2[1];
  v13 = a2[2];
  v14 = a2[3];
  v26[0] = (uint64_t)a3;
  v15 = a3;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v16 = type metadata accessor for FormatLayoutError();
  v17 = swift_dynamicCast();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  if (!v17)
  {
    v18(v10, 1, 1, v16);
    sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED39B410, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError);
    if (!a4)
    {
LABEL_6:
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      v20 = swift_allocError();
      *v22 = *(_QWORD *)(a1 + 48);
      v22[1] = a3;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
LABEL_5:
    v26[0] = v12;
    v26[1] = v11;
    v26[2] = v13;
    v26[3] = v14;
    v26[4] = (uint64_t)a3;
    v21 = a3;
    swift_bridgeObjectRetain();
    sub_1BB47DFBC(v26);
    swift_bridgeObjectRelease();
    sub_1BB445724(a3);
    goto LABEL_6;
  }
  v18(v10, 0, 1, v16);
  if (swift_getEnumCaseMultiPayload() != 64)
  {
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    if (!a4)
      goto LABEL_6;
    goto LABEL_5;
  }
  v19 = (void *)*((_QWORD *)v10 + 1);
  swift_bridgeObjectRelease();

  v20 = (uint64_t)a3;
LABEL_7:
  v23 = a3;
  return v20;
}

void sub_1BB62DCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1BB445724(a5);
  }
}

unint64_t sub_1BB62DCE0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82E430();
  a1[2] = sub_1BA49B0D0();
  result = sub_1BB62DD14();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB62DD14()
{
  unint64_t result;

  result = qword_1EF2C94A8;
  if (!qword_1EF2C94A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceMapNode, &type metadata for FormatSourceMapNode);
    atomic_store(result, (unint64_t *)&qword_1EF2C94A8);
  }
  return result;
}

unint64_t sub_1BB62DD58(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB62DD7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB62DD7C()
{
  unint64_t result;

  result = qword_1EF2C94B0;
  if (!qword_1EF2C94B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceMapNode, &type metadata for FormatSourceMapNode);
    atomic_store(result, (unint64_t *)&qword_1EF2C94B0);
  }
  return result;
}

_QWORD *assignWithCopy for FormatSourceMapNode(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for FormatSourceMapNode(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSourceMapNode()
{
  return &type metadata for FormatSourceMapNode;
}

uint64_t storeEnumTagSinglePayload for FormatSourceMapNode.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB62DEE8 + 4 * asc_1BB935690[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB62DF08 + 4 * byte_1BB935695[v4]))();
}

_BYTE *sub_1BB62DEE8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB62DF08(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB62DF10(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB62DF18(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB62DF20(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB62DF28(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatSourceMapNode.CodingKeys()
{
  return &type metadata for FormatSourceMapNode.CodingKeys;
}

unint64_t sub_1BB62DF48()
{
  unint64_t result;

  result = qword_1EF2C94B8;
  if (!qword_1EF2C94B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB935898, &type metadata for FormatSourceMapNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C94B8);
  }
  return result;
}

uint64_t sub_1BB62DF8C()
{
  return sub_1BB62D5FC();
}

uint64_t sub_1BB62DFA8(void *a1)
{
  return sub_1BB62DFC0(a1);
}

uint64_t sub_1BB62DFC0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];
  __int128 v8;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 56);
  v7[0] = *(_QWORD *)(v1 + 24);
  v7[1] = v4;
  v8 = *(_OWORD *)(v1 + 40);
  return sub_1BB62DA9C(v3, v7, a1, v5);
}

uint64_t sub_1BB62E00C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = type metadata accessor for FormatScopedOption();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    return v7;
  v8 = (uint64_t)v5;
  v26 = v1;
  v32 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7A180(0, v6, 0);
  v7 = v32;
  result = sub_1BA6AFD6C(a1);
  v11 = result;
  v12 = 0;
  v13 = a1 + 64;
  v25 = a1 + 88;
  v27 = v6;
  v28 = v10;
  v29 = a1 + 64;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(a1 + 32))
  {
    v16 = (unint64_t)v11 >> 6;
    if ((*(_QWORD *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v10)
      goto LABEL_26;
    sub_1BA6E9B50(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v11) + 16));
    swift_storeEnumTagMultiPayload();
    v32 = v7;
    v18 = *(_QWORD *)(v7 + 16);
    v17 = *(_QWORD *)(v7 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_1BAC7A180(v17 > 1, v18 + 1, 1);
      v7 = v32;
    }
    *(_QWORD *)(v7 + 16) = v18 + 1;
    result = sub_1BA5193C4(v8, v7+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatScopedOption);
    v14 = 1 << *(_BYTE *)(a1 + 32);
    if (v11 >= v14)
      goto LABEL_27;
    v13 = v29;
    v19 = *(_QWORD *)(v29 + 8 * v16);
    if ((v19 & (1 << v11)) == 0)
      goto LABEL_28;
    LODWORD(v10) = v28;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v28)
      goto LABEL_29;
    v20 = v19 & (-2 << (v11 & 0x3F));
    if (v20)
    {
      v14 = __clz(__rbit64(v20)) | v11 & 0xFFFFFFFFFFFFFFC0;
      v15 = v27;
    }
    else
    {
      v21 = v16 + 1;
      v22 = (unint64_t)(v14 + 63) >> 6;
      v15 = v27;
      if (v16 + 1 < v22)
      {
        v23 = *(_QWORD *)(v29 + 8 * v21);
        if (!v23)
        {
          v21 = v16 + 2;
          if (v16 + 2 >= v22)
            goto LABEL_4;
          v23 = *(_QWORD *)(v29 + 8 * v21);
          if (!v23)
          {
            while (v22 - 3 != v16)
            {
              v23 = *(_QWORD *)(v25 + 8 * v16++);
              if (v23)
              {
                v21 = v16 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        v14 = __clz(__rbit64(v23)) + (v21 << 6);
      }
    }
LABEL_4:
    ++v12;
    v11 = v14;
    if (v12 == v15)
      return v7;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BB62E2A4(unint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BB62E2C8 + 4
                                                    * byte_1BB935928[(a1 >> 59) & 0x1E | (a1 >> 2) & 1]))();
}

uint64_t sub_1BB62E2C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = (_QWORD *)(a1 & 0xFFFFFFFFFFFFFFBLL);
  v3 = v2[8];
  v4 = v2[9];
  v5 = v2[6];
  v6 = v2[7];
  v7 = v2[4];
  v8 = v2[5];
  v11 = v2 + 2;
  v9 = v2[2];
  v10 = v11[1];
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v5;
  a2[5] = v6;
  a2[6] = v3;
  a2[7] = v4;
  return sub_1BA76B724(v9, v10, v7, v8, v5, v6, v3);
}

void sub_1BB62E2F4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB62E330()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  type metadata accessor for FormatOption();
  v2 = swift_allocBox();
  result = sub_1BA4C2DD8(v1, v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  *v0 = v2;
  return result;
}

uint64_t sub_1BB62E78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)();
  int isUniquelyReferenced_nonNull_native;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  uint64_t *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t i;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char v68;
  unint64_t v69;
  uint64_t v70;
  _BOOL8 v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  char v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  size_t v88;
  uint64_t result;
  _QWORD v90[2];
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;

  v1 = v0;
  sub_1BA4A3FB4(0, &qword_1EF2C9500, (void (*)(uint64_t))type metadata accessor for FormatScopedOption);
  MEMORY[0x1E0C80A78](v2);
  v92 = (char *)v90 - v3;
  v4 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v4);
  v94 = (_QWORD *)((char *)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v90 - v7);
  MEMORY[0x1E0C80A78](v9);
  v98 = (_QWORD *)((char *)v90 - v10);
  v96 = type metadata accessor for FormatScopedOption();
  v11 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v97 = (uint64_t)v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v93 = (char *)v90 - v14;
  MEMORY[0x1E0C80A78](v15);
  v101 = (uint64_t)v90 - v16;
  MEMORY[0x1E0C80A78](v17);
  v99 = (uint64_t)v90 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v90 - v20;
  swift_beginAccess();
  v22 = swift_bridgeObjectRetain();
  v23 = sub_1BB62E00C(v22);
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v23 + 16);
  v95 = v8;
  v102 = v11;
  if (v24)
  {
    v91 = v1;
    v25 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v90[1] = v23;
    v26 = v23 + v25;
    v27 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v28 = *(_QWORD *)(v11 + 72);
    v29 = type metadata accessor for FormatScopedOption;
    while (1)
    {
      v100 = v24;
      sub_1BA4C2DD8(v26, (uint64_t)v21, (uint64_t (*)(_QWORD))v29);
      v30 = v99;
      sub_1BA4C2DD8((uint64_t)v21, v99, (uint64_t (*)(_QWORD))v29);
      v31 = v30;
      v32 = v98;
      sub_1BA5193C4(v31, (uint64_t)v98, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v34 = *v32;
      v33 = v32[1];
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v35 = (uint64_t)v21;
      v36 = (uint64_t)v21;
      v37 = v29;
      sub_1BA4C2DD8(v36, v101, (uint64_t (*)(_QWORD))v29);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v104 = v27;
      v40 = sub_1BA6E35A8(v34, v33);
      v41 = v27[2];
      v42 = (v39 & 1) == 0;
      v43 = v41 + v42;
      if (__OFADD__(v41, v42))
        break;
      v44 = v39;
      if (v27[3] >= v43)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C3088();
      }
      else
      {
        sub_1BB4AF8D0(v43, isUniquelyReferenced_nonNull_native);
        v45 = sub_1BA6E35A8(v34, v33);
        if ((v44 & 1) != (v46 & 1))
          goto LABEL_61;
        v40 = v45;
      }
      v29 = v37;
      v27 = v104;
      v21 = (char *)v35;
      if ((v44 & 1) != 0)
      {
        sub_1BB62F838(v101, v104[7] + v40 * v28);
      }
      else
      {
        v104[(v40 >> 6) + 8] |= 1 << v40;
        v47 = (uint64_t *)(v27[6] + 16 * v40);
        *v47 = v34;
        v47[1] = v33;
        sub_1BA5193C4(v101, v27[7] + v40 * v28, (uint64_t (*)(_QWORD))v29);
        v48 = v27[2];
        v49 = __OFADD__(v48, 1);
        v50 = v48 + 1;
        if (v49)
          goto LABEL_57;
        v27[2] = v50;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))v29);
      v26 += v28;
      v24 = v100 - 1;
      if (v100 == 1)
      {
        swift_bridgeObjectRelease();
        v8 = v95;
        v1 = v91;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  swift_bridgeObjectRelease();
  v27 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_16:
  swift_beginAccess();
  v51 = *(_QWORD *)(v1 + 24);
  v52 = *(_QWORD *)(v51 + 64);
  v100 = v51 + 64;
  v53 = 1 << *(_BYTE *)(v51 + 32);
  v54 = -1;
  if (v53 < 64)
    v54 = ~(-1 << v53);
  v55 = v54 & v52;
  v101 = (unint64_t)(v53 + 63) >> 6;
  swift_bridgeObjectRetain();
  v56 = 0;
  v57 = (uint64_t)v92;
  v58 = v96;
  if (v55)
    goto LABEL_23;
LABEL_35:
  v79 = v56 + 1;
  if (__OFADD__(v56, 1))
    goto LABEL_56;
  if (v79 >= v101)
    goto LABEL_54;
  v80 = *(_QWORD *)(v100 + 8 * v79);
  ++v56;
  if (v80)
  {
LABEL_50:
    v55 = (v80 - 1) & v80;
    for (i = __clz(__rbit64(v80)) + (v56 << 6); ; i = v61 | (v56 << 6))
    {
      v82 = *(_QWORD *)(*(_QWORD *)(v51 + 56) + 8 * i);
      sub_1BA6E9B50(*(_QWORD *)(v82 + 16));
      v83 = *v8;
      v84 = v8[1];
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      if (v27[2] && (v85 = sub_1BA6E35A8(v83, v84), (v86 & 1) != 0))
      {
        sub_1BA4C2DD8(v27[7] + *(_QWORD *)(v102 + 72) * v85, v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatScopedOption);
        v59 = 0;
      }
      else
      {
        v59 = 1;
      }
      v60 = v102;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56))(v57, v59, 1, v58);
      swift_bridgeObjectRelease();
      LODWORD(v60) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v57, 1, v58);
      sub_1BA502AD0(v57, &qword_1EF2C9500, (void (*)(uint64_t))type metadata accessor for FormatScopedOption);
      if ((_DWORD)v60 == 1)
      {
        v63 = v94;
        sub_1BA6E9B50(*(_QWORD *)(v82 + 16));
        v65 = *v63;
        v64 = v63[1];
        swift_bridgeObjectRetain();
        sub_1BA4A2E80((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v66 = (uint64_t)v93;
        sub_1BA6E9B50(*(_QWORD *)(v82 + 16));
        swift_storeEnumTagMultiPayload();
        sub_1BA5193C4(v66, v97, (uint64_t (*)(_QWORD))type metadata accessor for FormatScopedOption);
        v67 = swift_isUniquelyReferenced_nonNull_native();
        v103 = v27;
        v99 = v65;
        v69 = sub_1BA6E35A8(v65, v64);
        v70 = v27[2];
        v71 = (v68 & 1) == 0;
        v72 = v70 + v71;
        if (__OFADD__(v70, v71))
          goto LABEL_59;
        v73 = v68;
        if (v27[3] >= v72)
        {
          if ((v67 & 1) == 0)
            sub_1BB4C3088();
        }
        else
        {
          sub_1BB4AF8D0(v72, v67);
          v74 = sub_1BA6E35A8(v99, v64);
          if ((v73 & 1) != (v75 & 1))
            goto LABEL_61;
          v69 = v74;
        }
        v58 = v96;
        v27 = v103;
        if ((v73 & 1) != 0)
        {
          sub_1BB62F838(v97, v103[7] + *(_QWORD *)(v102 + 72) * v69);
        }
        else
        {
          v103[(v69 >> 6) + 8] |= 1 << v69;
          v76 = (_QWORD *)(v27[6] + 16 * v69);
          *v76 = v99;
          v76[1] = v64;
          sub_1BA5193C4(v97, v27[7] + *(_QWORD *)(v102 + 72) * v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatScopedOption);
          v77 = v27[2];
          v49 = __OFADD__(v77, 1);
          v78 = v77 + 1;
          if (v49)
            goto LABEL_60;
          v27[2] = v78;
          swift_bridgeObjectRetain();
        }
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = v95;
        if (!v55)
          goto LABEL_35;
      }
      else
      {
        swift_release();
        if (!v55)
          goto LABEL_35;
      }
LABEL_23:
      v61 = __clz(__rbit64(v55));
      v55 &= v55 - 1;
    }
  }
  v56 = v79 + 1;
  if (v79 + 1 >= v101)
  {
LABEL_54:
    swift_release();
    v87 = swift_bridgeObjectRetain();
    v88 = sub_1BA85CB20(v87);
    swift_bridgeObjectRelease_n();
    return v88;
  }
  v80 = *(_QWORD *)(v100 + 8 * v56);
  if (v80)
    goto LABEL_50;
  v56 = v79 + 2;
  if (v79 + 2 >= v101)
    goto LABEL_54;
  v80 = *(_QWORD *)(v100 + 8 * v56);
  if (v80)
    goto LABEL_50;
  v56 = v79 + 3;
  if (v79 + 3 >= v101)
    goto LABEL_54;
  v80 = *(_QWORD *)(v100 + 8 * v56);
  if (v80)
    goto LABEL_50;
  v81 = v79 + 4;
  if (v81 >= v101)
    goto LABEL_54;
  v80 = *(_QWORD *)(v100 + 8 * v81);
  if (v80)
  {
    v56 = v81;
    goto LABEL_50;
  }
  while (1)
  {
    v56 = v81 + 1;
    if (__OFADD__(v81, 1))
      break;
    if (v56 >= v101)
      goto LABEL_54;
    v80 = *(_QWORD *)(v100 + 8 * v56);
    ++v81;
    if (v80)
      goto LABEL_50;
  }
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB62EFA8()
{
  _BYTE *v0;

  if (*v0)
    return 7364973;
  else
    return 0x656C626169726176;
}

uint64_t sub_1BB62EFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB62F718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB62F004()
{
  sub_1BB62F4B0();
  return sub_1BB874710();
}

uint64_t sub_1BB62F02C()
{
  sub_1BB62F4B0();
  return sub_1BB87471C();
}

uint64_t FormatOptionCollection.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatOptionCollection.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  sub_1BB62F4F4(0, &qword_1EF2C94C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB62F4B0();
  sub_1BB8746C8();
  v13 = *(_QWORD *)(v3 + 16);
  LOBYTE(v12) = 0;
  type metadata accessor for FormatVariableCollection();
  sub_1BA4A2870(&qword_1EF2C94D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatVariableCollection, (uint64_t)&protocol conformance descriptor for FormatVariableCollection);
  sub_1BB8741AC();
  if (!v2)
  {
    swift_beginAccess();
    v12 = *(_QWORD *)(v3 + 24);
    v11[15] = 1;
    sub_1BA90055C();
    sub_1BA9005C0();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatOptionCollection.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatOptionCollection.init(from:)(a1);
  return v2;
}

uint64_t FormatOptionCollection.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1BB62F4F4(0, &qword_1EF2C94D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v11 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB62F4B0();
  sub_1BB87468C();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v5;
    type metadata accessor for FormatVariableCollection();
    v12 = 0;
    sub_1BA4A2870(&qword_1EF2C94E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatVariableCollection, (uint64_t)&protocol conformance descriptor for FormatVariableCollection);
    v9 = v11;
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 16) = v13;
    sub_1BA90055C();
    v12 = 1;
    sub_1BA90086C();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    *(_QWORD *)(v1 + 24) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1BB62F43C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatOptionCollection.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB62F490(_QWORD *a1)
{
  return FormatOptionCollection.encode(to:)(a1);
}

unint64_t sub_1BB62F4B0()
{
  unint64_t result;

  result = qword_1EF2C94C8;
  if (!qword_1EF2C94C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB935ACC, &type metadata for FormatOptionCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C94C8);
  }
  return result;
}

void sub_1BB62F4F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB62F4B0();
    v7 = a3(a1, &type metadata for FormatOptionCollection.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t method lookup function for FormatOptionCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatOptionCollection.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for FormatOptionCollection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB62F5C0 + 4 * byte_1BB935975[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB62F5F4 + 4 * byte_1BB935970[v4]))();
}

uint64_t sub_1BB62F5F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB62F5FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB62F604);
  return result;
}

uint64_t sub_1BB62F610(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB62F618);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB62F61C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB62F624(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionCollection.CodingKeys()
{
  return &type metadata for FormatOptionCollection.CodingKeys;
}

unint64_t sub_1BB62F644()
{
  unint64_t result;

  result = qword_1EF2C94E8;
  if (!qword_1EF2C94E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB935AA4, &type metadata for FormatOptionCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C94E8);
  }
  return result;
}

unint64_t sub_1BB62F68C()
{
  unint64_t result;

  result = qword_1EF2C94F0;
  if (!qword_1EF2C94F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB935A14, &type metadata for FormatOptionCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C94F0);
  }
  return result;
}

unint64_t sub_1BB62F6D4()
{
  unint64_t result;

  result = qword_1EF2C94F8;
  if (!qword_1EF2C94F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB935A3C, &type metadata for FormatOptionCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C94F8);
  }
  return result;
}

uint64_t sub_1BB62F718(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C626169726176 && a2 == 0xE900000000000073;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BB62F804()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB62F838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatScopedOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_BYTE *FormatPackageDirectionHorizontal.init(scroll:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL static FormatPackageDirectionHorizontal.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void FormatPackageDirectionHorizontal.scroll.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *FormatPackageDirectionHorizontal.scroll.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*FormatPackageDirectionHorizontal.scroll.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t sub_1BB62F8C4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB62F8E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB62F8E8()
{
  unint64_t result;

  result = qword_1EF2C9508;
  if (!qword_1EF2C9508)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageDirectionHorizontal, &type metadata for FormatPackageDirectionHorizontal);
    atomic_store(result, (unint64_t *)&qword_1EF2C9508);
  }
  return result;
}

unint64_t sub_1BB62F92C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAB26F04();
  a1[2] = sub_1BAEF7C34();
  result = sub_1BB62F960();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB62F960()
{
  unint64_t result;

  result = qword_1EF2C9510;
  if (!qword_1EF2C9510)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageDirectionHorizontal, &type metadata for FormatPackageDirectionHorizontal);
    atomic_store(result, (unint64_t *)&qword_1EF2C9510);
  }
  return result;
}

uint64_t sub_1BB62F9A4@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return FormatPackageDirectionHorizontal.init(from:)(a1, a2);
}

uint64_t sub_1BB62F9B8(_QWORD *a1)
{
  return FormatPackageDirectionHorizontal.encode(to:)(a1);
}

_BYTE *sub_1BB62F9CC@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_BYTE *sub_1BB62F9D8(_BYTE *result, _BYTE *a2)
{
  *a2 = *result;
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatPackageDirectionHorizontal(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB62FA30 + 4 * byte_1BB935BC5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB62FA64 + 4 * byte_1BB935BC0[v4]))();
}

uint64_t sub_1BB62FA64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB62FA6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB62FA74);
  return result;
}

uint64_t sub_1BB62FA80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB62FA88);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB62FA8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB62FA94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPackageDirectionHorizontal()
{
  return &type metadata for FormatPackageDirectionHorizontal;
}

uint64_t sub_1BB62FAB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t result;
  _QWORD v25[4];
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v30 = a2;
  v3 = sub_1BB86F2BC();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1BB86F148();
  v25[1] = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25[3] = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v25 - v11;
  v13 = sub_1BB86F310();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25[2] = sub_1BB86F31C();
  v17 = objc_msgSend(a1, sel_contentDirectory);
  sub_1BB8729A0();

  sub_1BB86C55C();
  swift_bridgeObjectRelease();
  sub_1BB86C5B0();
  v18 = sub_1BB86C610();
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21(v9, v6);
  v21(v12, v6);
  *v16 = v18;
  v16[1] = v20;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DB2DF0], v13);
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2B10];
  sub_1BA4B07F0(0, &qword_1ED3ACAC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2B10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BB87CE70;
  sub_1BB86F13C();
  v31 = v23;
  sub_1BA4A2870((unint64_t *)&qword_1ED3AD1E8, v22, MEMORY[0x1E0DB2B28]);
  sub_1BA4B07F0(0, &qword_1ED3AE450, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3AE458, &qword_1ED3AE450, v22);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v27, *MEMORY[0x1E0DB2D88], v29);
  result = sub_1BB86F2C8();
  *v30 = result;
  return result;
}

uint64_t sub_1BB62FDD4(_QWORD *a1)
{
  return sub_1BB62FDE8(a1);
}

uint64_t sub_1BB62FDE8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  v2 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA81D354();
  result = sub_1BB86DF3C();
  if (result)
  {
    v4 = result;
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
    sub_1BA4B07F0(0, &qword_1ED3C1DE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
    sub_1BB86DE70();
    sub_1BA4A2870(&qword_1ED3B07A0, v5, MEMORY[0x1E0DB33D8]);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3B9240, (unint64_t *)&qword_1ED3B9230, v5);
    sub_1BB873BC4();
    *(_QWORD *)(swift_allocObject() + 16) = v4;
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3D51A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
    swift_allocObject();
    return sub_1BB86E740();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB62FFD0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t result;
  _QWORD v25[4];
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v30 = a2;
  v3 = sub_1BB86F2BC();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1BB86F148();
  v25[1] = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25[3] = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v25 - v11;
  v13 = sub_1BB86F310();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25[2] = sub_1BB86F31C();
  v17 = objc_msgSend(a1, sel_contentDirectory);
  sub_1BB8729A0();

  sub_1BB86C55C();
  swift_bridgeObjectRelease();
  sub_1BB86C5B0();
  v18 = sub_1BB86C610();
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21(v9, v6);
  v21(v12, v6);
  *v16 = v18;
  v16[1] = v20;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DB2DF0], v13);
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2B10];
  sub_1BA4B07F0(0, &qword_1ED3ACAC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2B10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BB87CE70;
  sub_1BB86F13C();
  v31 = v23;
  sub_1BA4A2870((unint64_t *)&qword_1ED3AD1E8, v22, MEMORY[0x1E0DB2B28]);
  sub_1BA4B07F0(0, &qword_1ED3AE450, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3AE458, &qword_1ED3AE450, v22);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v27, *MEMORY[0x1E0DB2D88], v29);
  result = sub_1BB86F2C8();
  *v30 = result;
  return result;
}

uint64_t sub_1BB6302F4()
{
  sub_1BB86E104();
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3D51A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BB86E5D8();
  swift_release();
  return swift_release();
}

uint64_t sub_1BB6303C8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB6303EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB62FFD0(*(void **)(v1 + 16), a1);
}

uint64_t sub_1BB6303F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB62FAB0(*(void **)(v1 + 16), a1);
}

uint64_t DispatchQoS.QoSClass.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;

  switch(a1)
  {
    case 9:
      v3 = (unsigned int *)MEMORY[0x1E0DEF520];
      break;
    case 17:
      v3 = (unsigned int *)MEMORY[0x1E0DEF548];
      break;
    case 25:
      v3 = (unsigned int *)MEMORY[0x1E0DEF530];
      break;
    case 33:
      v3 = (unsigned int *)MEMORY[0x1E0DEF538];
      break;
    default:
      v3 = (unsigned int *)MEMORY[0x1E0DEF540];
      break;
  }
  v4 = *v3;
  v5 = sub_1BB87261C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
}

uint64_t _sSo17OS_dispatch_queueC8NewsFeedE6global16qualityOfServiceABSo09NSQualityhI0V_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v13;

  v2 = sub_1BB87261C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7.n128_f64[0] = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - v8;
  v10 = (unsigned int *)MEMORY[0x1E0DEF520];
  switch(a1)
  {
    case 9:
      break;
    case 17:
      v10 = (unsigned int *)MEMORY[0x1E0DEF548];
      break;
    case 25:
      v10 = (unsigned int *)MEMORY[0x1E0DEF530];
      break;
    case 33:
      v10 = (unsigned int *)MEMORY[0x1E0DEF538];
      break;
    default:
      v10 = (unsigned int *)MEMORY[0x1E0DEF540];
      break;
  }
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v5, *v10, v2, v7);
  sub_1BA657D64();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
  v11 = sub_1BB873498();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  return v11;
}

uint64_t destroy for LayeredMediaVideoVariant(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayeredMediaVideoVariant(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMediaVideoVariant(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LayeredMediaVideoVariant(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMediaVideoVariant()
{
  return &type metadata for LayeredMediaVideoVariant;
}

uint64_t PuzzleStatsInfo.__allocating_init(statistics:)(uint64_t a1)
{
  swift_allocObject();
  return PuzzleStatsInfo.init(statistics:)(a1);
}

uint64_t sub_1BB630740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _OWORD v25[2];
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];
  _BYTE v30[16];
  _BYTE v31[16];
  _BYTE v32[16];
  _BYTE v33[16];
  _BYTE v34[16];
  _BYTE v35[16];
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9E0];
  v28 = MEMORY[0x1E0DEE9E0];
  v3 = MEMORY[0x1E0DEB070];
  sub_1BA744E38(v1, (uint64_t)v35, &qword_1ED3CF878);
  sub_1BA744E38((uint64_t)v35, (uint64_t)&v36, &qword_1ED3CF878);
  if ((v37 & 1) != 0)
  {
    sub_1BAA48D9C(0x74615265766C6F73, 0xE900000000000065, &v26);
    sub_1BA6EDA74((uint64_t)&v26);
  }
  else
  {
    v27 = v3;
    *(_QWORD *)&v26 = v36;
    sub_1BA76EAE0(&v26, v25);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v48 = v2;
    sub_1BA785F30(v25, 0x74615265766C6F73, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
    v28 = v48;
    swift_bridgeObjectRelease();
  }
  v5 = MEMORY[0x1E0DEB418];
  sub_1BA744E38(v1 + 16, (uint64_t)v34, &qword_1ED3B9740);
  sub_1BA744E38((uint64_t)v34, (uint64_t)&v38, &qword_1ED3B9740);
  if ((v39 & 1) != 0)
  {
    sub_1BAA48D9C(0x6C6F536C61746F74, 0xEB00000000646576, &v26);
    sub_1BA6EDA74((uint64_t)&v26);
  }
  else
  {
    v27 = v5;
    *(_QWORD *)&v26 = v38;
    sub_1BA76EAE0(&v26, v25);
    v6 = v28;
    v7 = swift_isUniquelyReferenced_nonNull_native();
    v48 = v6;
    sub_1BA785F30(v25, 0x6C6F536C61746F74, 0xEB00000000646576, v7);
    v28 = v48;
    swift_bridgeObjectRelease();
  }
  v8 = MEMORY[0x1E0DEB418];
  sub_1BA744E38(v1 + 32, (uint64_t)v33, &qword_1ED3B9740);
  sub_1BA744E38((uint64_t)v33, (uint64_t)&v40, &qword_1ED3B9740);
  if ((v41 & 1) != 0)
  {
    sub_1BAA48D9C(0x5474736574736166, 0xEB00000000656D69, &v26);
    sub_1BA6EDA74((uint64_t)&v26);
  }
  else
  {
    v27 = v8;
    *(_QWORD *)&v26 = v40;
    sub_1BA76EAE0(&v26, v25);
    v9 = v28;
    v10 = swift_isUniquelyReferenced_nonNull_native();
    v48 = v9;
    sub_1BA785F30(v25, 0x5474736574736166, 0xEB00000000656D69, v10);
    v28 = v48;
    swift_bridgeObjectRelease();
  }
  v11 = MEMORY[0x1E0DEB070];
  sub_1BA744E38(v1 + 48, (uint64_t)v32, &qword_1ED3CF878);
  sub_1BA744E38((uint64_t)v32, (uint64_t)&v42, &qword_1ED3CF878);
  if ((v43 & 1) != 0)
  {
    sub_1BAA48D9C(0x5465676172657661, 0xEB00000000656D69, &v26);
    sub_1BA6EDA74((uint64_t)&v26);
  }
  else
  {
    v27 = v11;
    *(_QWORD *)&v26 = v42;
    sub_1BA76EAE0(&v26, v25);
    v12 = v28;
    v13 = swift_isUniquelyReferenced_nonNull_native();
    v48 = v12;
    sub_1BA785F30(v25, 0x5465676172657661, 0xEB00000000656D69, v13);
    v28 = v48;
    swift_bridgeObjectRelease();
  }
  v14 = MEMORY[0x1E0DEB418];
  sub_1BA744E38(v1 + 64, (uint64_t)v31, &qword_1ED3B9740);
  sub_1BA744E38((uint64_t)v31, (uint64_t)&v44, &qword_1ED3B9740);
  if ((v45 & 1) != 0)
  {
    sub_1BAA48D9C(0x53747365676E6F6CLL, 0xED00006B61657274, &v26);
    sub_1BA6EDA74((uint64_t)&v26);
  }
  else
  {
    v27 = v14;
    *(_QWORD *)&v26 = v44;
    sub_1BA76EAE0(&v26, v25);
    v15 = v28;
    v16 = swift_isUniquelyReferenced_nonNull_native();
    v48 = v15;
    sub_1BA785F30(v25, 0x53747365676E6F6CLL, 0xED00006B61657274, v16);
    v28 = v48;
    swift_bridgeObjectRelease();
  }
  v17 = MEMORY[0x1E0DEB418];
  sub_1BA744E38(v1 + 80, (uint64_t)v30, &qword_1ED3B9740);
  sub_1BA744E38((uint64_t)v30, (uint64_t)&v46, &qword_1ED3B9740);
  if ((v47 & 1) != 0)
  {
    sub_1BAA48D9C(0x53746E6572727563, 0xED00006B61657274, &v26);
    sub_1BA6EDA74((uint64_t)&v26);
  }
  else
  {
    v27 = v17;
    *(_QWORD *)&v26 = v46;
    sub_1BA76EAE0(&v26, v25);
    v18 = v28;
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v48 = v18;
    sub_1BA785F30(v25, 0x53746E6572727563, 0xED00006B61657274, v19);
    v28 = v48;
    swift_bridgeObjectRelease();
  }
  v20 = v1 + 96;
  v21 = MEMORY[0x1E0DEB418];
  sub_1BA744E38(v20, (uint64_t)v29, &qword_1ED3B9740);
  sub_1BA744E38((uint64_t)v29, (uint64_t)&v48, &qword_1ED3B9740);
  if ((v49 & 1) != 0)
  {
    sub_1BAA48D9C(0x5374736568676968, 0xEC00000065726F63, &v26);
    sub_1BA6EDA74((uint64_t)&v26);
    return v28;
  }
  else
  {
    v27 = v21;
    *(_QWORD *)&v26 = v48;
    sub_1BA76EAE0(&v26, v25);
    v22 = v28;
    v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BA785F30(v25, 0x5374736568676968, 0xEC00000065726F63, v23);
    swift_bridgeObjectRelease();
  }
  return v22;
}

uint64_t PuzzleStatsInfo.init(statistics:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  char *v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[2];

  v81 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1E0C80A78](v81);
  v79 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAA28D4C(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v59 - v8;
  MEMORY[0x1E0C80A78](v10);
  v78 = (char *)&v59 - v11;
  MEMORY[0x1E0C80A78](v12);
  v77 = (char *)&v59 - v13;
  v80 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1E0C80A78](v80);
  v83 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v84 = (uint64_t)&v59 - v16;
  v82 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v82);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v59 - v20;
  v22 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v22);
  v87 = (uint64_t)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88[0] = MEMORY[0x1E0DEE9E0];
  if (a1)
    v26 = a1;
  else
    v26 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v61 = v9;
    v62 = v6;
    v60 = v1;
    v64 = 0;
    v71 = 0;
    v72 = 0;
    v75 = 0;
    v76 = 0;
    v73 = 0;
    v74 = 0;
    v86 = v87 + *(int *)(v23 + 20);
    v28 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v59 = v26;
    v29 = v26 + v28;
    v85 = *(_QWORD *)(v24 + 72);
    v63 = 1;
    v30 = type metadata accessor for PuzzleStatisticCategory;
    v65 = 1;
    v66 = 1;
    v69 = 1;
    v70 = 1;
    v67 = 1;
    v68 = 1;
    v31 = v77;
    do
    {
      v32 = v87;
      sub_1BA4C2DD8(v29, v87, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      sub_1BA4C2DD8(v86, (uint64_t)v21, v30);
      sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v18, v30);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 2) < 2)
      {
        sub_1BA4A2E80((uint64_t)v21, v30);
        sub_1BA4A2E80((uint64_t)v18, v30);
      }
      else
      {
        v34 = v31;
        if (!EnumCaseMultiPayload)
        {
          v35 = v84;
          sub_1BA5193C4((uint64_t)v18, v84, type metadata accessor for PuzzleStatisticValue);
          sub_1BA4C2DD8(v35, v83, type metadata accessor for PuzzleStatisticValue);
          v36 = (char *)&loc_1BB6310DC + 4 * byte_1BB935D70[swift_getEnumCaseMultiPayload()];
          __asm { BR              X9 }
        }
        v37 = (uint64_t)v21;
        v38 = v79;
        sub_1BA5193C4((uint64_t)v18, v79, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        sub_1BB6318CC(v88, v38, 0);
        v39 = v30;
        v40 = v81;
        sub_1BB6318CC(v88, v38 + *(int *)(v81 + 20), 1);
        v41 = *(int *)(v40 + 24);
        v30 = v39;
        sub_1BB6318CC(v88, v38 + v41, 2);
        v42 = v38;
        v21 = (char *)v37;
        sub_1BA4A2E80(v42, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        sub_1BA4A2E80(v37, v39);
        v31 = v34;
      }
      v29 += v85;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    v43 = v88[0];
    v1 = v60;
    v44 = v64;
    v46 = v75;
    v45 = v76;
    v47 = v73;
    v48 = v74;
    v49 = v63;
    v51 = v71;
    v50 = v72;
    v52 = v69;
    v53 = v70;
    v55 = v67;
    v54 = v68;
    v57 = v65;
    v56 = v66;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = 0;
    v50 = 0;
    v51 = 0;
    v45 = 0;
    v46 = 0;
    v48 = 0;
    v47 = 0;
    v49 = 1;
    v43 = MEMORY[0x1E0DEE9E0];
    v56 = 1;
    v57 = 1;
    v53 = 1;
    v52 = 1;
    v54 = 1;
    v55 = 1;
  }
  *(_QWORD *)(v1 + 16) = v47;
  *(_BYTE *)(v1 + 24) = v55 & 1;
  *(_QWORD *)(v1 + 32) = v48;
  *(_BYTE *)(v1 + 40) = v54 & 1;
  *(_QWORD *)(v1 + 48) = v46;
  *(_BYTE *)(v1 + 56) = v52 & 1;
  *(_QWORD *)(v1 + 64) = v45;
  *(_BYTE *)(v1 + 72) = v53 & 1;
  *(_QWORD *)(v1 + 80) = v51;
  *(_BYTE *)(v1 + 88) = v57 & 1;
  *(_QWORD *)(v1 + 96) = v50;
  *(_BYTE *)(v1 + 104) = v56 & 1;
  *(_QWORD *)(v1 + 112) = v44;
  *(_BYTE *)(v1 + 120) = v49 & 1;
  *(_QWORD *)(v1 + 128) = v43;
  return v1;
}

uint64_t sub_1BB631564()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _OWORD v58[3];

  v1 = *(_OWORD *)(v0 + 96);
  v57 = *(_OWORD *)(v0 + 80);
  v58[0] = v1;
  *(_OWORD *)((char *)v58 + 9) = *(_OWORD *)(v0 + 105);
  v2 = *(_OWORD *)(v0 + 32);
  v53 = *(_OWORD *)(v0 + 16);
  v54 = v2;
  v3 = *(_OWORD *)(v0 + 64);
  v55 = *(_OWORD *)(v0 + 48);
  v56 = v3;
  v26 = sub_1BB630740();
  v4 = 0;
  v5 = *(_QWORD *)(v0 + 128);
  do
  {
    v6 = byte_1E7254DA0[v4 + 32];
    if (v6 == 1)
      v7 = 0x6574617265646F6DLL;
    else
      v7 = 0x676E656C6C616863;
    v8 = 0xE800000000000000;
    if (v6 != 1)
      v8 = 0xEB00000000676E69;
    if (byte_1E7254DA0[v4 + 32])
      v9 = v7;
    else
      v9 = 2037604709;
    if (byte_1E7254DA0[v4 + 32])
      v10 = v8;
    else
      v10 = 0xE400000000000000;
    if (!*(_QWORD *)(v5 + 16))
      goto LABEL_2;
    v11 = sub_1BA6E35A8(v9, v10);
    if ((v12 & 1) == 0)
      goto LABEL_2;
    v13 = *(_QWORD *)(v5 + 56) + 112 * v11;
    v15 = *(_QWORD *)v13;
    v14 = *(_QWORD *)(v13 + 8);
    v17 = *(_QWORD *)(v13 + 16);
    v16 = *(_QWORD *)(v13 + 24);
    v18 = *(_QWORD *)(v13 + 32);
    v27 = *(_QWORD *)(v13 + 40);
    v28 = *(_QWORD *)(v13 + 48);
    v29 = *(_QWORD *)(v13 + 56);
    v30 = *(_QWORD *)(v13 + 64);
    v31 = *(_QWORD *)(v13 + 72);
    v32 = *(_QWORD *)(v13 + 80);
    v33 = *(_QWORD *)(v13 + 88);
    v35 = *(_QWORD *)(v13 + 96);
    v34 = *(_BYTE *)(v13 + 104);
    v19 = *(_BYTE *)(v13 + 105);
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      v39 = v15;
      v40 = v14 & 1;
      v41 = v17;
      v42 = v16 & 1;
      v43 = v18;
      v44 = v27 & 1;
      v45 = v28;
      v46 = v29 & 1;
      v47 = v30;
      v48 = v31 & 1;
      v49 = v32;
      v50 = v33 & 1;
      v51 = v35;
      v52 = v34 & 1;
      v20 = sub_1BB630740();
      if (*(_QWORD *)(v20 + 16))
      {
        if (v6)
        {
          if (v6 == 1)
          {
            v21 = 0xE800000000000000;
            v22 = 0x6574617265646F6DLL;
          }
          else
          {
            v22 = 0x676E656C6C616863;
            v21 = 0xEB00000000676E69;
          }
        }
        else
        {
          v21 = 0xE400000000000000;
          v22 = 2037604709;
        }
        sub_1BA78647C();
        v38 = v23;
        *(_QWORD *)&v37 = v20;
        sub_1BA76EAE0(&v37, v36);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1BA785F30(v36, v22, v21, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
      }
LABEL_2:
      swift_bridgeObjectRelease();
    }
    ++v4;
  }
  while (v4 != 3);
  return v26;
}

uint64_t PuzzleStatsInfo.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PuzzleStatsInfo.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1BB6318CC(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  int v27;
  char *v28;
  _QWORD v29[6];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;

  v42 = 2037604709;
  sub_1BAA28D4C(0);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v29 - v8;
  MEMORY[0x1E0C80A78](v10);
  v29[5] = (char *)v29 - v11;
  MEMORY[0x1E0C80A78](v12);
  v29[4] = (char *)v29 - v13;
  v14 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[3] = v9;
  v39 = a2;
  if ((_BYTE)a3)
  {
    if (a3 == 1)
      v17 = 0x6574617265646F6DLL;
    else
      v17 = 0x676E656C6C616863;
    if (a3 == 1)
      v18 = 0xE800000000000000;
    else
      v18 = 0xEB00000000676E69;
  }
  else
  {
    v18 = 0xE400000000000000;
    v17 = 2037604709;
  }
  v19 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v20 = sub_1BA6E35A8(v17, v18), (v21 & 1) != 0))
  {
    v22 = *(_QWORD *)(v19 + 56) + 112 * v20;
    v33 = *(_QWORD *)v22;
    v34 = *(_DWORD *)(v22 + 8);
    v30 = *(_QWORD *)(v22 + 16);
    v29[2] = *(_QWORD *)(v22 + 24);
    v41 = *(_QWORD *)(v22 + 32);
    v40 = a3;
    v31 = *(_QWORD *)(v22 + 48);
    v29[1] = *(_QWORD *)(v22 + 56);
    v23 = *(_QWORD *)(v22 + 64);
    v24 = *(_DWORD *)(v22 + 72);
    v37 = *(_QWORD *)(v22 + 80);
    v38 = v23;
    v25 = *(_DWORD *)(v22 + 88);
    v36 = *(_QWORD *)(v22 + 96);
    v26 = *(_BYTE *)(v22 + 104);
    swift_bridgeObjectRelease();
    v35 = v26 & 1;
    v32 = v34 & 1;
    v27 = v24 & 1;
    v34 = v25 & 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v33 = 0;
    v30 = 0;
    v41 = 0;
    v31 = 0;
    v37 = 0;
    v38 = 0;
    v36 = 0;
    v32 = 1;
    v27 = 1;
    v34 = 1;
    v35 = 1;
  }
  sub_1BA4C2DD8(v39, (uint64_t)v16, type metadata accessor for PuzzleStatisticValue);
  v28 = (char *)sub_1BB631C30 + 4 * byte_1BB935D77[swift_getEnumCaseMultiPayload()];
  v40 = v27;
  __asm { BR              X10 }
}

uint64_t sub_1BB631C30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned __int8 v4;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;

  if ((v5[1] & 1) != 0)
  {
    v15 = *(_QWORD *)(v7 - 256);
    v14 = *(_QWORD *)(v7 - 248);
    v16 = *(_QWORD *)(v7 - 264);
    v17 = *(_DWORD *)(v7 - 268);
    v18 = *(_DWORD *)(v7 - 272);
    v12 = *(_QWORD *)(v7 - 296);
    v10 = *(_QWORD *)(v7 - 304);
    v9 = *(_QWORD *)(v7 - 280);
    if (v6)
      v9 = 0;
    v8 = v6 | *(_QWORD *)(v7 - 288);
    if (v6)
    {
      v10 = 0;
      v11 = 1;
    }
    else
    {
      v11 = v2;
    }
    if (v6)
    {
      v12 = 0;
      v13 = 1;
    }
    else
    {
      v13 = v1;
    }
    v19 = v4;
    if (!v4)
      goto LABEL_27;
LABEL_23:
    if (v19 == 1)
    {
      v20 = 0xE800000000000000;
      *(_QWORD *)(v7 - 216) = 0x6574617265646F6DLL;
    }
    else
    {
      *(_QWORD *)(v7 - 216) = 0x676E656C6C616863;
      v20 = 0xEB00000000676E69;
    }
    goto LABEL_28;
  }
  v8 = 0;
  v9 = *v5;
  if (v6)
    v10 = 0;
  else
    v10 = *(_QWORD *)(v7 - 304);
  if (v6)
    v11 = 1;
  else
    v11 = v2;
  if (v6)
    v12 = 0;
  else
    v12 = *(_QWORD *)(v7 - 296);
  if (v6)
    v13 = 1;
  else
    v13 = v1;
  v15 = *(_QWORD *)(v7 - 256);
  v14 = *(_QWORD *)(v7 - 248);
  v16 = *(_QWORD *)(v7 - 264);
  v17 = *(_DWORD *)(v7 - 268);
  v18 = *(_DWORD *)(v7 - 272);
  v19 = v4;
  if (v4)
    goto LABEL_23;
LABEL_27:
  v20 = 0xE400000000000000;
LABEL_28:
  *(_QWORD *)(v7 - 200) = v9;
  *(_QWORD *)(v7 - 192) = v8;
  if (v6)
    v21 = 0;
  else
    v21 = v16;
  if (v6)
    v22 = 0;
  else
    v22 = v15;
  if (v6)
    v23 = 0;
  else
    v23 = v14;
  v24 = *(_QWORD *)(v7 - 224);
  if (v6)
    v24 = 0;
  *(_QWORD *)(v7 - 184) = v10;
  *(_QWORD *)(v7 - 176) = v11;
  *(_QWORD *)(v7 - 168) = v24;
  *(_QWORD *)(v7 - 160) = (v6 | v3) & 1;
  *(_QWORD *)(v7 - 152) = v12;
  *(_QWORD *)(v7 - 144) = v13;
  v25 = (v6 | *(_DWORD *)(v7 - 228)) & 1;
  *(_QWORD *)(v7 - 136) = v23;
  *(_QWORD *)(v7 - 128) = v25;
  *(_QWORD *)(v7 - 120) = v22;
  *(_QWORD *)(v7 - 112) = (v6 | v18) & 1;
  *(_QWORD *)(v7 - 104) = v21;
  *(_WORD *)(v7 - 96) = (v6 | v17) & 1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v7 - 208) = *v0;
  *v0 = 0x8000000000000000;
  sub_1BB4BE9D0(v7 - 200, *(_QWORD *)(v7 - 216), v20, isUniquelyReferenced_nonNull_native);
  *v0 = *(_QWORD *)(v7 - 208);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for PuzzleStatsInfo()
{
  return objc_opt_self();
}

uint64_t method lookup function for PuzzleStatsInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PuzzleStatsInfo.__allocating_init(statistics:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t getEnumTagSinglePayload for PuzzleStatsInfo.StatValue(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 105))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PuzzleStatsInfo.StatValue(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 105) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatsInfo.StatValue()
{
  return &type metadata for PuzzleStatsInfo.StatValue;
}

BOOL static FeedRequestType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedRequestType.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FeedRequestType.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t FeedRequestType.identifier.getter()
{
  _BYTE *v0;

  if (*v0)
    return 7368564;
  else
    return 0x746E65636572;
}

unint64_t sub_1BB632270()
{
  unint64_t result;

  result = qword_1EF2C95C8;
  if (!qword_1EF2C95C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedRequestType, &type metadata for FeedRequestType);
    atomic_store(result, (unint64_t *)&qword_1EF2C95C8);
  }
  return result;
}

uint64_t sub_1BB6322B4()
{
  _BYTE *v0;

  if (*v0)
    return 7368564;
  else
    return 0x746E65636572;
}

uint64_t storeEnumTagSinglePayload for FeedRequestType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB632330 + 4 * byte_1BB935DC9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB632364 + 4 * asc_1BB935DC4[v4]))();
}

uint64_t sub_1BB632364(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB63236C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB632374);
  return result;
}

uint64_t sub_1BB632380(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB632388);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB63238C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB632394(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedRequestType()
{
  return &type metadata for FeedRequestType;
}

void sub_1BB6323B0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char **v7;
  int v8;
  id *v9;
  unint64_t *v10;
  unint64_t *v11;
  unint64_t *v12;
  uint64_t v13;
  id v14;
  char **v15;
  _QWORD *v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  void *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  _BYTE v30[144];
  _BYTE v31[152];

  if (*(_QWORD *)&v1[qword_1ED3AC1D0] == a1)
  {
    v2 = *(_QWORD *)(a1 + 32);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v26 = a1;
      v27 = v1;
      v4 = *(char **)&v1[qword_1ED3AC1C8];
      v29 = &v4[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms];
      v5 = v2 + 32;
      swift_bridgeObjectRetain();
      v6 = v3 - 1;
      v7 = &selRef_backgroundColor;
      v28 = v4;
      while (1)
      {
        sub_1BA8FB494(v5, (uint64_t)v30);
        sub_1BA8FB494((uint64_t)v30, (uint64_t)v31);
        v8 = sub_1BB101970((uint64_t)v31);
        v9 = (id *)sub_1BB10197C((uint64_t)v31);
        if (v8 == 1)
        {
          v10 = (unint64_t *)&unk_1ED3AC180;
          v11 = (unint64_t *)&unk_1ED39C3A8;
          v12 = (unint64_t *)&qword_1ED39DA68;
        }
        else
        {
          v10 = (unint64_t *)&unk_1EF2BB7A8;
          v11 = (unint64_t *)&unk_1ED39C3A0;
          v12 = (unint64_t *)&unk_1ED39DA58;
        }
        v13 = sub_1BB1019E4(v10, v11, v12);
        v14 = *v9;
        swift_getObjectType();
        sub_1BA8966F8((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BB63467C);
        if ((sub_1BB8702E8() & 1) != 0)
        {
          v15 = v7;
          sub_1BB870300();
          sub_1BB8702F4();
          swift_beginAccess();
          v16 = *(_QWORD **)v29;
          v17 = v14;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v29 = v16;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v16 = sub_1BB38C818(0, v16[2] + 1, 1, v16);
            *(_QWORD *)v29 = v16;
          }
          v20 = v16[2];
          v19 = v16[3];
          if (v20 >= v19 >> 1)
          {
            v16 = sub_1BB38C818((_QWORD *)(v19 > 1), v20 + 1, 1, v16);
            *(_QWORD *)v29 = v16;
          }
          v16[2] = v20 + 1;
          v21 = &v16[2 * v20];
          v21[4] = v17;
          v21[5] = v13;
          swift_endAccess();
          v7 = v15;
          v4 = v28;
        }
        objc_msgSend(v4, v7[345], v14);

        sub_1BA8966F8((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BB634700);
        if (!v6)
          break;
        --v6;
        v5 += 144;
      }
      swift_bridgeObjectRelease();
      a1 = v26;
      v1 = v27;
    }
    if (*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16))
    {
      v22 = *(void **)&v1[qword_1ED3AC1C8];
      v23 = v1;
      v24 = swift_bridgeObjectRetain();
      sub_1BB6343CC(v24, v23);
      swift_bridgeObjectRelease();

      v25 = (void *)sub_1BB872D9C();
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_setFilters_, v25);

    }
    sub_1BB632DB4();
  }
}

char *sub_1BB6326D0(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = qword_1ED3AF858;
  type metadata accessor for LayeredMediaViewDisplayStateCoordinator();
  swift_allocObject();
  v5 = v1;
  *(_QWORD *)&v1[v4] = LayeredMediaViewDisplayStateCoordinator.init()();
  v6 = qword_1ED3AC1C8;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LayeredMediaContainerLayer(0)), sel_init);
  *(_QWORD *)&v5[qword_1ED3AC1D0] = a1;
  swift_retain();

  v17.receiver = v5;
  v17.super_class = ObjectType;
  v7 = (char *)objc_msgSendSuper2(&v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = *(void **)&v7[qword_1ED3AC1C8];
  sub_1BA4A2870(&qword_1ED3AC2F8, type metadata accessor for LayeredMediaContainerLayer, (uint64_t)&unk_1BB935F08);
  v9 = v7;
  v10 = v8;
  sub_1BB8702C4();

  v11 = *(_QWORD *)&v9[qword_1ED3AF858];
  swift_beginAccess();
  v12 = *(_BYTE *)(v11 + 16);
  *(_BYTE *)(v11 + 16) = 0;
  if ((v12 & 1) != 0)
    *(_WORD *)(v11 + 56) = 2;
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v14 = *(_QWORD *)(v11 + 24);
  *(_QWORD *)(v11 + 24) = sub_1BB634674;
  *(_QWORD *)(v11 + 32) = v13;
  v15 = v9;
  swift_retain();
  swift_retain();
  sub_1BA49EBE0(v14);
  swift_release();
  swift_release();

  swift_release();
  return v15;
}

void sub_1BB6328C0(char *a1, uint64_t a2)
{
  char v2;
  char v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t i;
  int v12;
  uint64_t v13;
  void *v14;
  _BYTE v15[144];
  _BYTE v16[144];

  v2 = *a1;
  v3 = a1[1];
  v4 = a2 + 16;
  swift_beginAccess();
  v5 = (char *)MEMORY[0x1BCCE5D40](v4);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)(*(_QWORD *)&v5[qword_1ED3AC1D0] + 32);
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      v9 = v7 + 32;
      v10 = v2 ^ 1 | v3;
      swift_bridgeObjectRetain();
      for (i = v8 - 1; ; --i)
      {
        sub_1BA8FB494(v9, (uint64_t)v15);
        sub_1BA8FB494((uint64_t)v15, (uint64_t)v16);
        v12 = sub_1BB101970((uint64_t)v16);
        v13 = sub_1BB10197C((uint64_t)v16);
        if (v12 != 1)
          goto LABEL_7;
        v14 = *(void **)(v13 + 8);
        if ((v10 & 1) != 0)
          break;
        objc_msgSend(v14, sel_playWithPlaybackKind_looping_, 0, 1);
        if (!i)
        {
LABEL_10:

          swift_bridgeObjectRelease();
          return;
        }
LABEL_8:
        v9 += 144;
      }
      objc_msgSend(v14, sel_pause);
LABEL_7:
      if (!i)
        goto LABEL_10;
      goto LABEL_8;
    }

  }
}

void sub_1BB6329E4(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  uint64_t v7;

  v5 = qword_1ED3AF858;
  type metadata accessor for LayeredMediaViewDisplayStateCoordinator();
  swift_allocObject();
  v6 = a3;
  *(_QWORD *)&a1[v5] = LayeredMediaViewDisplayStateCoordinator.init()();
  v7 = qword_1ED3AC1C8;
  *(_QWORD *)&a1[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LayeredMediaContainerLayer(0)), sel_init);

  sub_1BB873EAC();
  __break(1u);
}

Swift::Void __swiftcall LayeredMediaView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  Class isa;
  id v3;
  void *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  objc_super v8;

  isa = a1.value.super.isa;
  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, isa);
  v3 = objc_msgSend(v1, sel_traitCollection);
  LODWORD(isa) = objc_msgSend(v3, sel_hasDifferentColorAppearanceComparedToTraitCollection_, isa);

  if ((_DWORD)isa)
  {
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v1[qword_1ED3AC1D0] + 40) + 16))
    {
      v4 = *(void **)&v1[qword_1ED3AC1C8];
      v5 = v1;
      v6 = swift_bridgeObjectRetain();
      sub_1BB6343CC(v6, v5);
      swift_bridgeObjectRelease();

      v7 = (void *)sub_1BB872D9C();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setFilters_, v7);

    }
  }
}

void sub_1BB632BB4()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  void *v4;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v0[qword_1ED3AC1D0] + 40) + 16))
  {
    v1 = *(void **)&v0[qword_1ED3AC1C8];
    v2 = v0;
    v3 = swift_bridgeObjectRetain();
    sub_1BB6343CC(v3, v2);
    swift_bridgeObjectRelease();

    v4 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setFilters_, v4);

  }
}

void sub_1BB632C68(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  unsigned int v7;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)swift_getObjectType();
  v4 = a3;
  v5 = v8.receiver;
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, v4);
  v6 = objc_msgSend(v5, sel_traitCollection, v8.receiver, v8.super_class);
  v7 = objc_msgSend(v6, sel_hasDifferentColorAppearanceComparedToTraitCollection_, v4);

  if (v7)
    sub_1BB632BB4();

}

Swift::Void __swiftcall LayeredMediaView.didMoveToWindow()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_didMoveToWindow);
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
}

void sub_1BB632D58(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_didMoveToWindow);
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();

}

void sub_1BB632DB4()
{
  void *v0;
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;

  objc_msgSend(v0, sel_setNeedsLayout);
  v1 = objc_msgSend(v0, sel_sublayers);
  if (!v1)
    return;
  v2 = v1;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9960);
  v3 = sub_1BB872DB4();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_4;
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    goto LABEL_12;
LABEL_4:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1BCCE4630](i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      sub_1BB632DB4();

    }
    goto LABEL_12;
  }
  __break(1u);
}

id LayeredMediaView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void LayeredMediaView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BB632F5C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BB632F88()
{
  uint64_t v0;

  swift_release();
  swift_release();

}

void sub_1BB632FC8(uint64_t a1)
{
  swift_release();
  swift_release();

}

uint64_t LayeredMediaView.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + qword_1ED3AC1D0) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB633048()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(*v0 + qword_1ED3AC1D0) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB633084(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v2 = v1;
  v4 = sub_1BB86FC10();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7918];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - v10;
  v12 = v2 + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransform;
  swift_beginAccess();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13(v11, v12, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 24))(v12, a1, v4);
  swift_endAccess();
  v13(v8, v12, v4);
  sub_1BA4A2870(&qword_1EF2C95F8, v5, MEMORY[0x1E0DB7928]);
  LOBYTE(v5) = sub_1BB872958();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v4);
  if ((v5 & 1) == 0)
  {
    v15 = v2
        + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
    swift_beginAccess();
    v16 = *(_QWORD *)(*(_QWORD *)v15 + 16);
    if (v16)
    {
      v21 = v11;
      v22 = a1;
      v20 = swift_bridgeObjectRetain();
      v17 = v20 + 40;
      do
      {
        swift_getObjectType();
        v13(v8, v12, v4);
        swift_unknownObjectRetain();
        sub_1BB87030C();
        swift_unknownObjectRelease();
        v17 += 16;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      v11 = v21;
      a1 = v22;
    }
  }
  v14(a1, v4);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v4);
}

void (*sub_1BB633290(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t, uint64_t);

  v3 = malloc(0xC8uLL);
  *a1 = v3;
  v3[15] = v1;
  v4 = sub_1BB86FC10();
  v3[16] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[17] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[18] = malloc(v6);
  v3[19] = malloc(v6);
  v3[20] = malloc(v6);
  v3[21] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransform;
  v3[22] = v7;
  v3[23] = v8;
  v9 = v1 + v8;
  swift_beginAccess();
  v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 16);
  v3[24] = v10;
  v10(v7, v9, v4);
  return sub_1BB633370;
}

void sub_1BB633370(uint64_t a1, char a2)
{
  sub_1BB6336A4(a1, a2, &qword_1EF2C95F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7918], MEMORY[0x1E0DB7928], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8A40]);
}

uint64_t sub_1BB633394(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v2 = v1;
  v4 = sub_1BB870870();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9C78];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - v10;
  v12 = v2
      + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionDisabledTransform;
  swift_beginAccess();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13(v11, v12, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 24))(v12, a1, v4);
  swift_endAccess();
  v13(v8, v12, v4);
  sub_1BA4A2870(&qword_1EF2C95F0, v5, MEMORY[0x1E0DB9C88]);
  LOBYTE(v5) = sub_1BB872958();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v4);
  if ((v5 & 1) == 0)
  {
    v15 = v2
        + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
    swift_beginAccess();
    v16 = *(_QWORD *)(*(_QWORD *)v15 + 16);
    if (v16)
    {
      v21 = v11;
      v22 = a1;
      v20 = swift_bridgeObjectRetain();
      v17 = v20 + 40;
      do
      {
        swift_getObjectType();
        v13(v8, v12, v4);
        swift_unknownObjectRetain();
        sub_1BB870318();
        swift_unknownObjectRelease();
        v17 += 16;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      v11 = v21;
      a1 = v22;
    }
  }
  v14(a1, v4);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v4);
}

void (*sub_1BB6335A0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t, uint64_t);

  v3 = malloc(0xC8uLL);
  *a1 = v3;
  v3[15] = v1;
  v4 = sub_1BB870870();
  v3[16] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[17] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[18] = malloc(v6);
  v3[19] = malloc(v6);
  v3[20] = malloc(v6);
  v3[21] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionDisabledTransform;
  v3[22] = v7;
  v3[23] = v8;
  v9 = v1 + v8;
  swift_beginAccess();
  v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 16);
  v3[24] = v10;
  v10(v7, v9, v4);
  return sub_1BB633680;
}

void sub_1BB633680(uint64_t a1, char a2)
{
  sub_1BB6336A4(a1, a2, &qword_1EF2C95F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9C78], MEMORY[0x1E0DB9C88], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8A48]);
}

void sub_1BB6336A4(uint64_t a1, char a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v52)(uint64_t, uint64_t);
  void (*v53)(uint64_t, uint64_t);

  v6 = *(_QWORD **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 184);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 192);
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 176);
  if ((a2 & 1) != 0)
  {
    v11 = v6[19];
    v10 = v6[20];
    v12 = v6[17];
    v13 = v6[18];
    v14 = v6[16];
    v15 = v6[15] + v7;
    v8(v11, *(_QWORD *)(*(_QWORD *)a1 + 176), v14);
    v8(v13, v15, v14);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v15, v11, v14);
    swift_endAccess();
    v8(v10, v15, v14);
    sub_1BA4A2870(a3, a4, a5);
    v17 = sub_1BB872958();
    v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v18(v10, v14);
    if ((v17 & 1) == 0)
    {
      v19 = v6[15]
          + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
      swift_beginAccess();
      v20 = *(_QWORD *)(*(_QWORD *)v19 + 16);
      if (v20)
      {
        v52 = v18;
        v21 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
        do
        {
          v22 = (void (*)(uint64_t, uint64_t, uint64_t))v6[24];
          v23 = v6[20];
          v24 = v6[16];
          v25 = v6[15] + v6[23];
          v26 = *v21;
          ObjectType = swift_getObjectType();
          v22(v23, v25, v24);
          swift_unknownObjectRetain();
          a6(v23, ObjectType, v26);
          swift_unknownObjectRelease();
          v21 += 2;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
        v18 = v52;
      }
    }
    v29 = (void *)v6[21];
    v28 = (void *)v6[22];
    v31 = (void *)v6[19];
    v30 = (void *)v6[20];
    v32 = (void *)v6[18];
    v33 = v6[16];
    v18((uint64_t)v31, v33);
    v18((uint64_t)v32, v33);
    v34 = (uint64_t)v28;
  }
  else
  {
    v35 = v6[20];
    v37 = v6[16];
    v36 = v6[17];
    v38 = v6[15] + v7;
    v8(v6[21], v38, v37);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 24))(v38, v9, v37);
    swift_endAccess();
    v8(v35, v38, v37);
    sub_1BA4A2870(a3, a4, a5);
    LOBYTE(v38) = sub_1BB872958();
    v18 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v18(v35, v37);
    if ((v38 & 1) == 0)
    {
      v40 = v6[15]
          + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
      swift_beginAccess();
      v41 = *(_QWORD *)(*(_QWORD *)v40 + 16);
      if (v41)
      {
        v53 = v18;
        v42 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
        do
        {
          v43 = (void (*)(uint64_t, uint64_t, uint64_t))v6[24];
          v44 = v6[20];
          v45 = v6[16];
          v46 = v6[15] + v6[23];
          v47 = *v42;
          v48 = swift_getObjectType();
          v43(v44, v46, v45);
          swift_unknownObjectRetain();
          a6(v44, v48, v47);
          swift_unknownObjectRelease();
          v42 += 2;
          --v41;
        }
        while (v41);
        swift_bridgeObjectRelease();
        v18 = v53;
      }
    }
    v29 = (void *)v6[21];
    v28 = (void *)v6[22];
    v31 = (void *)v6[19];
    v30 = (void *)v6[20];
    v32 = (void *)v6[18];
    v33 = v6[16];
    v18((uint64_t)v28, v33);
    v34 = (uint64_t)v29;
  }
  v18(v34, v33);
  free(v28);
  free(v29);
  free(v30);
  free(v31);
  free(v32);
  free(v6);
}

void (*sub_1BB633A3C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionEnabled;
  v3[6] = v1;
  v3[7] = v4;
  *((_BYTE *)v3 + 64) = *(_BYTE *)(v1 + v4);
  return sub_1BB633A84;
}

void sub_1BB633A84(uint64_t a1, char a2)
{
  sub_1BB633BC4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8A38]);
}

uint64_t sub_1BB633A90(uint64_t result, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;

  v4 = *a2;
  v5 = *(unsigned __int8 *)(v3 + *a2);
  *(_BYTE *)(v3 + *a2) = result;
  if (v5 != (result & 1))
  {
    v7 = v3;
    v8 = (uint64_t *)(v3
                   + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms);
    result = swift_beginAccess();
    v9 = *v8;
    v10 = *(_QWORD *)(*v8 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      v11 = (uint64_t *)(v9 + 40);
      do
      {
        v12 = *v11;
        ObjectType = swift_getObjectType();
        v14 = *(unsigned __int8 *)(v7 + v4);
        swift_unknownObjectRetain();
        a3(v14, ObjectType, v12);
        swift_unknownObjectRelease();
        v11 += 2;
        --v10;
      }
      while (v10);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void (*sub_1BB633B70(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionAllowed;
  v3[6] = v1;
  v3[7] = v4;
  *((_BYTE *)v3 + 64) = *(_BYTE *)(v1 + v4);
  return sub_1BB633BB8;
}

void sub_1BB633BB8(uint64_t a1, char a2)
{
  sub_1BB633BC4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8A30]);
}

void sub_1BB633BC4(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD **)a1;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v7 = *(_BYTE *)(*(_QWORD *)a1 + 64);
  v8 = *(_BYTE *)(v6 + v5);
  *(_BYTE *)(v6 + v5) = v7;
  if ((a2 & 1) != 0)
  {
    if (((v7 ^ v8) & 1) != 0)
    {
      v9 = v4[6]
         + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
      swift_beginAccess();
      v10 = *(_QWORD *)v9;
      v11 = *(_QWORD *)(*(_QWORD *)v9 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain();
        v12 = (uint64_t *)(v10 + 40);
        do
        {
          v14 = v4[6];
          v13 = v4[7];
          v15 = *v12;
          ObjectType = swift_getObjectType();
          v17 = *(unsigned __int8 *)(v14 + v13);
          swift_unknownObjectRetain();
          a3(v17, ObjectType, v15);
          swift_unknownObjectRelease();
          v12 += 2;
          --v11;
        }
        while (v11);
LABEL_11:
        swift_bridgeObjectRelease();
      }
    }
  }
  else if (((v7 ^ v8) & 1) != 0)
  {
    v18 = v4[6]
        + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
    swift_beginAccess();
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(*(_QWORD *)v18 + 16);
    if (v20)
    {
      swift_bridgeObjectRetain();
      v21 = (uint64_t *)(v19 + 40);
      do
      {
        v23 = v4[6];
        v22 = v4[7];
        v24 = *v21;
        v25 = swift_getObjectType();
        v26 = *(unsigned __int8 *)(v23 + v22);
        swift_unknownObjectRetain();
        a3(v26, v25, v24);
        swift_unknownObjectRelease();
        v21 += 2;
        --v20;
      }
      while (v20);
      goto LABEL_11;
    }
  }
  free(v4);
}

uint64_t sub_1BB633D38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms);
  result = swift_beginAccess();
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v3 + 40;
    do
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1BB870324();
      swift_unknownObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1BB634014(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms] = MEMORY[0x1E0DEE9D8];
  v4 = &v1[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransform];
  v5 = *MEMORY[0x1E0DB7900];
  v6 = sub_1BB86FC10();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v7 = &v1[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionDisabledTransform];
  v8 = *MEMORY[0x1E0DB9C68];
  v9 = sub_1BB870870();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v1[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionEnabled] = 1;
  v1[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionAllowed] = 1;
  v12.receiver = v1;
  v12.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

uint64_t sub_1BB6341B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB634224(&OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransform, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB7918], a1);
}

uint64_t (*sub_1BB6341CC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BB633290(v2);
  return sub_1BAB42824;
}

uint64_t sub_1BB634210@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB634224(&OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionDisabledTransform, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB9C78], a1);
}

uint64_t sub_1BB634224@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *a1;
  swift_beginAccess();
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t (*sub_1BB634294(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BB6335A0(v2);
  return sub_1BAB42824;
}

uint64_t sub_1BB6342D8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionEnabled);
}

uint64_t sub_1BB6342E8(uint64_t a1)
{
  return sub_1BB633A90(a1, &OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionEnabled, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8A38]);
}

uint64_t (*sub_1BB63430C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BB633A3C(v2);
  return sub_1BAB42824;
}

uint64_t sub_1BB634350()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionAllowed);
}

uint64_t sub_1BB634360(uint64_t a1)
{
  return sub_1BB633A90(a1, &OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionAllowed, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8A30]);
}

uint64_t (*sub_1BB634384(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BB633B70(v2);
  return sub_1BAB42824;
}

uint64_t sub_1BB6343CC(uint64_t a1, void *a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(void);
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BA57F544(0, v2, 0);
    v3 = v15;
    v6 = a1 + 40;
    do
    {
      v7 = *(uint64_t (**)(void))(v6 - 8);
      swift_retain();
      v8 = objc_msgSend(a2, sel_traitCollection);
      v9 = v7();

      v14 = sub_1BA49A224(0, &qword_1EF2C9600);
      swift_release();
      *(_QWORD *)&v13 = v9;
      v15 = v3;
      v11 = *(_QWORD *)(v3 + 16);
      v10 = *(_QWORD *)(v3 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BA57F544(v10 > 1, v11 + 1, 1);
        v3 = v15;
      }
      *(_QWORD *)(v3 + 16) = v11 + 1;
      sub_1BA76EAE0(&v13, (_OWORD *)(v3 + 32 * v11 + 32));
      v6 += 16;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t type metadata accessor for LayeredMediaView(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED39CC50);
}

uint64_t sub_1BB634520()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for LayeredMediaView()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB634588()
{
  return type metadata accessor for LayeredMediaView(0);
}

uint64_t sub_1BB634590()
{
  return type metadata accessor for LayeredMediaContainerLayer(0);
}

uint64_t type metadata accessor for LayeredMediaContainerLayer(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3AC300);
}

uint64_t sub_1BB6345AC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB86FC10();
  if (v1 <= 0x3F)
  {
    result = sub_1BB870870();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1BB634650()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB634674(char *a1)
{
  uint64_t v1;

  sub_1BB6328C0(a1, v1);
}

uint64_t sub_1BB63467C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  id v20;
  id v21;

  swift_bridgeObjectRetain();
  v20 = a1;
  v21 = a2;
  if (a18 < 0)
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB634700(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{

  swift_bridgeObjectRelease();
  if (a18 < 0)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ViewAutomation.type.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ViewAutomation.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t ViewAutomation.init(data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;

  *a4 = sub_1BB86F8B0();
  a4[1] = v8;
  v10 = (char *)a4 + *(int *)(type metadata accessor for ViewAutomation(0, a2, a3, v9) + 36);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v10, a1, a2);
}

uint64_t ViewAutomation.automationType.getter()
{
  return 2003134838;
}

uint64_t sub_1BB634838(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB936310, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB63486C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB936310, a1);
  return sub_1BB87471C();
}

uint64_t ViewAutomation.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14[4];
  char v15;
  char v16;

  v6 = *(_QWORD *)(a2 + 16);
  v14[0] = *(_QWORD *)(a2 + 24);
  v14[1] = v6;
  v7 = type metadata accessor for ViewAutomation.CodingKeys(255, v6, v14[0], a4);
  MEMORY[0x1BCCE5B24](&unk_1BB936310, v7);
  v8 = sub_1BB8741D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746C8();
  v16 = 0;
  v12 = v14[3];
  sub_1BB87417C();
  if (!v12)
  {
    v15 = 1;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t type metadata accessor for ViewAutomation.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ViewAutomation.CodingKeys);
}

uint64_t ViewAutomation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  char v36;
  char v37;

  v28 = a4;
  v27 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v30 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ViewAutomation.CodingKeys(255, v8, v9, v10);
  MEMORY[0x1BCCE5B24](&unk_1BB936310, v11);
  v34 = sub_1BB874104();
  v29 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v13 = (char *)&v26 - v12;
  v31 = a2;
  v32 = a3;
  v15 = type metadata accessor for ViewAutomation(0, a2, a3, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v26 - v17);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v33 = v13;
  v19 = (uint64_t)v35;
  sub_1BB87468C();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = v29;
  v21 = v30;
  v26 = v16;
  v22 = v31;
  v35 = a1;
  v37 = 0;
  *v18 = sub_1BB874098();
  v18[1] = v23;
  v36 = 1;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v33, v34);
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v18 + *(int *)(v15 + 36), v21, v22);
  v24 = v26;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v26 + 16))(v28, v18, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v24 + 8))(v18, v15);
}

uint64_t sub_1BB634C64()
{
  return 2003134838;
}

uint64_t sub_1BB634C74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ViewAutomation.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1BB634C90(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ViewAutomation.encode(to:)(a1, a2, a3, a4);
}

uint64_t BasicViewAutomation.type.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

NewsFeed::BasicViewAutomation __swiftcall BasicViewAutomation.init(type:)(NewsFeed::BasicViewAutomation type)
{
  NewsFeed::BasicViewAutomation *v1;

  *v1 = type;
  return type;
}

uint64_t BasicViewAutomation.automationType.getter()
{
  return 2003134838;
}

uint64_t sub_1BB634CE8()
{
  sub_1BB634E2C();
  return sub_1BB874710();
}

uint64_t sub_1BB634D10()
{
  sub_1BB634E2C();
  return sub_1BB87471C();
}

uint64_t BasicViewAutomation.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB634F94(0, &qword_1EF2C9608, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB634E2C();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BB634E2C()
{
  unint64_t result;

  result = qword_1EF2C9610;
  if (!qword_1EF2C9610)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9362C0, &type metadata for BasicViewAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9610);
  }
  return result;
}

uint64_t BasicViewAutomation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BB634F94(0, qword_1EF2C9618, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB634E2C();
  sub_1BB87468C();
  if (!v2)
  {
    v10 = sub_1BB874098();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB634F94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB634E2C();
    v7 = a3(a1, &type metadata for BasicViewAutomation.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB634FF4()
{
  unint64_t result;

  result = qword_1ED3ABB00;
  if (!qword_1ED3ABB00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for BasicViewAutomation, &type metadata for BasicViewAutomation);
    atomic_store(result, (unint64_t *)&qword_1ED3ABB00);
  }
  return result;
}

unint64_t sub_1BB63503C()
{
  unint64_t result;

  result = qword_1ED3ABAF8;
  if (!qword_1ED3ABAF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for BasicViewAutomation, &type metadata for BasicViewAutomation);
    atomic_store(result, (unint64_t *)&qword_1ED3ABAF8);
  }
  return result;
}

uint64_t sub_1BB635080@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return BasicViewAutomation.init(from:)(a1, a2);
}

uint64_t sub_1BB635094(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB634F94(0, &qword_1EF2C9608, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB634E2C();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BB635188(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 16) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB63525C + 4 * byte_1BB935F90[(v9 - 1)]))();
}

void sub_1BB6352CC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

ValueMetadata *type metadata accessor for BasicViewAutomation()
{
  return &type metadata for BasicViewAutomation;
}

uint64_t storeEnumTagSinglePayload for BasicViewAutomation.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB635514 + 4 * byte_1BB935F9E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB635534 + 4 * byte_1BB935FA3[v4]))();
}

_BYTE *sub_1BB635514(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB635534(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB63553C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB635544(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB63554C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB635554(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BasicViewAutomation.CodingKeys()
{
  return &type metadata for BasicViewAutomation.CodingKeys;
}

uint64_t sub_1BB635570(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB6355BC + 4 * byte_1BB935FAD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB6355F0 + 4 * byte_1BB935FA8[v4]))();
}

uint64_t sub_1BB6355F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6355F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB635600);
  return result;
}

uint64_t sub_1BB63560C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB635614);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB635618(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB635620(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BB63562C()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BB635640()
{
  unint64_t result;

  result = qword_1EF2C96A0;
  if (!qword_1EF2C96A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936298, &type metadata for BasicViewAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C96A0);
  }
  return result;
}

unint64_t sub_1BB635688()
{
  unint64_t result;

  result = qword_1EF2C96A8;
  if (!qword_1EF2C96A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936208, &type metadata for BasicViewAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C96A8);
  }
  return result;
}

unint64_t sub_1BB6356D0()
{
  unint64_t result;

  result = qword_1EF2C96B0;
  if (!qword_1EF2C96B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936230, &type metadata for BasicViewAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C96B0);
  }
  return result;
}

void sub_1BB635714()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB635724()
{
  JUMPOUT(0x1BCCE5B24);
}

void FeedAdGroupDataProvider.groupData(for:includeAdjacentGroups:)(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _BYTE v24[4];
  int v25;
  _QWORD *v26;
  _BYTE *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v25 = a2;
  v31 = a3;
  v32 = a1;
  v4 = (_QWORD *)*v3;
  v5 = sub_1BB871C50();
  MEMORY[0x1E0C80A78](v5);
  v27 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = v4[10];
  MEMORY[0x1E0C80A78](v8);
  v9 = v4[11];
  v10 = v4[14];
  v11 = v4[15];
  *(_QWORD *)&v33 = v7;
  *((_QWORD *)&v33 + 1) = v9;
  *(_QWORD *)&v34 = v10;
  *((_QWORD *)&v34 + 1) = v11;
  v12 = sub_1BB86FD0C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v24[-v14];
  v28 = v4;
  v26 = v3;
  sub_1BB86CBD4();
  *(_QWORD *)&v33 = v7;
  *((_QWORD *)&v33 + 1) = v9;
  v29 = v9;
  v30 = v10;
  *(_QWORD *)&v34 = v10;
  *((_QWORD *)&v34 + 1) = v11;
  v16 = v11;
  sub_1BB871680();
  sub_1BB8716A4();
  sub_1BB86FCB8();
  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
  sub_1BA4D9CE8(0, &qword_1ED3B2468);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(&v33, (uint64_t)v38);
    v17 = v39;
    v18 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    sub_1BA76A2E4(v32, 2, (v25 & 1) == 0);
    v19 = v39;
    v20 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
    v21 = v39;
    v22 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    (*(void (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
    sub_1BB871C5C();
    sub_1BB871C80();
    *(_QWORD *)&v33 = v7;
    *((_QWORD *)&v33 + 1) = v29;
    v34 = *((_OWORD *)v28 + 6);
    v35 = v30;
    v36 = v11;
    v37 = *((_OWORD *)v28 + 8);
    type metadata accessor for FeedAdGroupDataProvider.FailureReason();
  }
  v35 = 0;
  v33 = 0u;
  v34 = 0u;
  sub_1BA65DBBC((uint64_t)&v33, qword_1ED3BC760, &qword_1ED3B2468, (uint64_t)&protocol descriptor for FeedAdGroupDataProviding);
  sub_1BB871C80();
  v23 = v31;
  *v31 = 0;
  v23[1] = 0;
  *(_QWORD *)&v33 = v7;
  *((_QWORD *)&v33 + 1) = v29;
  v34 = *((_OWORD *)v28 + 6);
  v35 = v30;
  v36 = v16;
  v37 = *((_OWORD *)v28 + 8);
  type metadata accessor for FeedAdGroupDataProvider.FailureReason();
}

void sub_1BB635A58(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedAdGroupDataProvider<A, B, C, D>.FailureReason, a1);
  sub_1BB874650();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB635A90);
}

uint64_t method lookup function for FeedAdGroupDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedAdGroupDataProvider.__allocating_init(blueprint:layoutBlueprint:layoutCollection:adjacentDistance:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1BB635AC4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB635AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)();
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v39 = a4;
  v43 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v43);
  v40 = (uint64_t *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v41);
  v9 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FormatOption();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a2;
  v18 = a2;
  v19 = a3;
  v44 = a1;
  sub_1BA7E8004(v18, a3, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA856968);
    *v9 = v17;
    v9[1] = a3;
    v42 = v9;
    swift_storeEnumTagMultiPayload();
    v20 = v40;
    sub_1BA4C2DD8(v44, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v22 = *v20;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA75BF9C();
      v24 = (char *)v20 + *(int *)(v23 + 48);
      v25 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
      v26 = *(void **)(v22 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA70A884(v25, v26);
      swift_release();
      sub_1BA75C00C();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v24, v27);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      v25 = *(_QWORD *)(v22 + 72);
      v26 = *(void **)(v22 + 80);
      swift_bridgeObjectRetain();
      sub_1BA70A884(v25, v26);
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_1BA70AB94(v25, v26);
    sub_1BA689E84();
    swift_allocError();
    v30 = (uint64_t)v42;
    sub_1BA4C2DD8((uint64_t)v42, v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    swift_willThrow();
    v35 = v30;
    v34 = type metadata accessor for FormatLayoutError;
  }
  else
  {
    v28 = v39;
    sub_1BA8569CC((uint64_t)v12, (uint64_t)v16);
    v29 = *((_QWORD *)v16 + 2);
    v30 = v29 & 0xFFFFFFFFFFFFFFFLL;
    swift_retain();
    v31 = v44;
    v32 = v29;
    v33 = (uint64_t)v42;
    sub_1BA7EB598(v44, v32);
    swift_release();
    if (!v33)
    {
      sub_1BA7E7060(v45, v17, v19, v28, v31);
      v30 = v38;
      swift_release();
      sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return v30;
    }
    v34 = type metadata accessor for FormatOption;
    v35 = (uint64_t)v16;
  }
  sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))v34);
  return v30;
}

uint64_t sub_1BB635E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;

  v33 = a5;
  v34 = a4;
  v36 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v36);
  v35 = (uint64_t *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v38);
  v10 = (uint64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatOption();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7E8004(a2, a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA856968);
    *v10 = a2;
    v10[1] = a3;
    v18 = (uint64_t)v10;
    swift_storeEnumTagMultiPayload();
    v19 = v35;
    sub_1BA4C2DD8(a1, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v21 = *v19;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA75BF9C();
      v37 = (char *)v19 + *(int *)(v22 + 48);
      v23 = *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
      v24 = *(void **)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA70A884(v23, v24);
      swift_release();
      sub_1BA75C00C();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v37, v25);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      v23 = *(_QWORD *)(v21 + 72);
      v24 = *(void **)(v21 + 80);
      swift_bridgeObjectRetain();
      sub_1BA70A884(v23, v24);
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_1BA70AB94(v23, v24);
    sub_1BA689E84();
    swift_allocError();
    sub_1BA4C2DD8(v18, v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    swift_willThrow();
    v30 = v18;
    v29 = type metadata accessor for FormatLayoutError;
  }
  else
  {
    sub_1BA8569CC((uint64_t)v13, (uint64_t)v17);
    v26 = *((_QWORD *)v17 + 2);
    swift_retain();
    v27 = v26;
    v28 = v37;
    sub_1BA7EB598(a1, v27);
    swift_release();
    if (!v28)
    {
      sub_1BB316CEC(v39, a2, a3, v34, a1, v33);
      swift_release();
    }
    v29 = type metadata accessor for FormatOption;
    v30 = (uint64_t)v17;
  }
  return sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))v29);
}

void sub_1BB63620C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v38 = a4;
  v39 = a5;
  v42 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v42);
  v40 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v41);
  v10 = (uint64_t *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatOption();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  v44 = a1;
  sub_1BA7E8004(a2, a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA856968);
    *v10 = a2;
    v10[1] = a3;
    swift_storeEnumTagMultiPayload();
    v19 = v40;
    sub_1BA4C2DD8(v44, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v21 = *v19;
    v37 = v10;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA75BF9C();
      v44 = (uint64_t)v19 + *(int *)(v22 + 48);
      v23 = *(unsigned __int8 *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
      v24 = *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
      v25 = *(void **)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA70A884(v24, v25);
      swift_release();
      sub_1BA75C00C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v44, v26);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      v23 = *(unsigned __int8 *)(v21 + 48);
      v24 = *(_QWORD *)(v21 + 72);
      v25 = *(void **)(v21 + 80);
      swift_bridgeObjectRetain();
      sub_1BA70A884(v24, v25);
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_1BA70AB94(v24, v25);
    sub_1BA689E84();
    v33 = (void *)swift_allocError();
    v34 = (uint64_t)v37;
    sub_1BA4C2DD8((uint64_t)v37, v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    if (v23)
    {
      v36 = swift_allocObject();
      *(_BYTE *)(v36 + 16) = 2;
      *(_QWORD *)(v36 + 24) = 0x3FF0000000000000;
      *(_BYTE *)(v36 + 32) = 0;
      *v39 = v36 | 0x1000000000000000;
      sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);

      return;
    }
    swift_willThrow();
    v31 = type metadata accessor for FormatLayoutError;
    v32 = v34;
    goto LABEL_10;
  }
  sub_1BA8569CC((uint64_t)v13, (uint64_t)v17);
  v27 = *((_QWORD *)v17 + 2);
  swift_retain();
  v28 = v44;
  v29 = v27;
  v30 = v43;
  sub_1BA7EB598(v44, v29);
  swift_release();
  if (v30)
  {
    v31 = type metadata accessor for FormatOption;
    v32 = (uint64_t)v17;
LABEL_10:
    sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))v31);
    return;
  }
  sub_1BB316D48(v45, v18, a3, v38, v28, (uint64_t)v39);
  swift_release();
  sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
}

void sub_1BB636614(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  void *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t (*v31)();
  uint64_t v32;
  int v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v38 = a5;
  v39 = a4;
  v41 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v41);
  v40 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v43);
  v10 = (uint64_t *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatOption();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a1;
  sub_1BA7E8004(a2, a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA856968);
    *v10 = a2;
    v10[1] = a3;
    v42 = v10;
    swift_storeEnumTagMultiPayload();
    v18 = v40;
    sub_1BA4C2DD8(v44, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v20 = *v18;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA75BF9C();
      v44 = (uint64_t)v18 + *(int *)(v21 + 48);
      v22 = *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
      v23 = *(_QWORD *)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
      v24 = *(void **)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA70A884(v23, v24);
      v25 = v22;
      swift_release();
      sub_1BA75C00C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v44, v26);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      v33 = *(unsigned __int8 *)(v20 + 48);
      v23 = *(_QWORD *)(v20 + 72);
      v24 = *(void **)(v20 + 80);
      swift_bridgeObjectRetain();
      sub_1BA70A884(v23, v24);
      v25 = v33;
      swift_release();
    }
    v34 = (uint64_t)v42;
    swift_bridgeObjectRelease();
    sub_1BA70AB94(v23, v24);
    sub_1BA689E84();
    v35 = (void *)swift_allocError();
    sub_1BA4C2DD8(v34, v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    if (v25)
    {
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);

      return;
    }
    swift_willThrow();
    v31 = type metadata accessor for FormatLayoutError;
    v32 = v34;
  }
  else
  {
    sub_1BA8569CC((uint64_t)v13, (uint64_t)v17);
    v27 = *((_QWORD *)v17 + 2);
    swift_retain();
    v28 = v44;
    v29 = v27;
    v30 = v42;
    sub_1BA7EB598(v44, v29);
    swift_release();
    if (!v30)
    {
      sub_1BB316DA8(v45, a2, a3, v39, v28, v38);
      swift_release();
    }
    v31 = type metadata accessor for FormatOption;
    v32 = (uint64_t)v17;
  }
  sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))v31);
}

uint64_t sub_1BB636A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;

  v33 = a5;
  v34 = a4;
  v36 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v36);
  v35 = (uint64_t *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v38);
  v10 = (uint64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatOption();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7E8004(a2, a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA856968);
    *v10 = a2;
    v10[1] = a3;
    v18 = (uint64_t)v10;
    swift_storeEnumTagMultiPayload();
    v19 = v35;
    sub_1BA4C2DD8(a1, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v21 = *v19;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA75BF9C();
      v37 = (char *)v19 + *(int *)(v22 + 48);
      v23 = *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
      v24 = *(void **)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA70A884(v23, v24);
      swift_release();
      sub_1BA75C00C();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v37, v25);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      v23 = *(_QWORD *)(v21 + 72);
      v24 = *(void **)(v21 + 80);
      swift_bridgeObjectRetain();
      sub_1BA70A884(v23, v24);
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_1BA70AB94(v23, v24);
    sub_1BA689E84();
    swift_allocError();
    sub_1BA4C2DD8(v18, v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    swift_willThrow();
    v30 = v18;
    v29 = type metadata accessor for FormatLayoutError;
  }
  else
  {
    sub_1BA8569CC((uint64_t)v13, (uint64_t)v17);
    v26 = *((_QWORD *)v17 + 2);
    swift_retain();
    v27 = v26;
    v28 = v37;
    sub_1BA7EB598(a1, v27);
    swift_release();
    if (!v28)
    {
      sub_1BB317F34(v39, a2, a3, v34, a1, v33);
      swift_release();
    }
    v29 = type metadata accessor for FormatOption;
    v30 = (uint64_t)v17;
  }
  return sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))v29);
}

uint64_t FormatOptionBinding.modifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatOptionBinding.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionBinding.modifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatOptionBinding.modifiers.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB636DEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v0;
  v1 = v0[1];
  sub_1BA6EA07C();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t _s8NewsFeed19FormatOptionBindingV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1BB874398() & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1BA8869D0(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1BB636ED4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB636EF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB636EF8()
{
  unint64_t result;

  result = qword_1EF2C96B8;
  if (!qword_1EF2C96B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionBinding, &type metadata for FormatOptionBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C96B8);
  }
  return result;
}

unint64_t sub_1BB636F3C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA64437C();
  a1[2] = sub_1BA624828();
  result = sub_1BB636F70();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB636F70()
{
  unint64_t result;

  result = qword_1EF2C96C0;
  if (!qword_1EF2C96C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionBinding, &type metadata for FormatOptionBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C96C0);
  }
  return result;
}

uint64_t sub_1BB636FB4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB636FC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionBinding()
{
  return &type metadata for FormatOptionBinding;
}

uint64_t sub_1BB637010()
{
  return swift_deallocObject();
}

uint64_t FeedCursor.unwrappedFeedPool.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_getAssociatedTypeWitness();
  sub_1BB873A2C();
  sub_1BB86EC14();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v5;
}

uint64_t *FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  int v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  id v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  unint64_t v68;
  char v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  void *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 *v85;
  unsigned __int8 *v86;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  int v101;
  unsigned __int8 *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned __int8 *v145;
  unsigned __int8 *v146;
  unsigned __int8 v147;
  _QWORD v148[3];
  id v149;
  char v150;
  char v151;
  char v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  unsigned __int8 v162;

  v28 = v27;
  v139 = a8;
  v118 = a7;
  v115 = a6;
  v145 = a5;
  v117 = a4;
  v122 = a3;
  v120 = a2;
  v127 = a1;
  v29 = *(_QWORD *)v27;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v31 = MEMORY[0x1E0C80A78](v30);
  v119 = (uint64_t)&v97 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v97 - v33;
  v35 = sub_1BB86C8B0();
  v116 = *(_QWORD *)(v35 - 8);
  v36 = MEMORY[0x1E0C80A78](v35);
  v142 = (uint64_t)&v97 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v141 = (uint64_t)&v97 - v38;
  v126 = v29;
  v39 = *(_QWORD *)(v29 + 80);
  v40 = sub_1BB873A2C();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = MEMORY[0x1E0C80A78](v40);
  v44 = (char *)&v97 - v43;
  v144 = v39;
  v143 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v42);
  v140 = (uint64_t)&v97 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = *v145;
  v138 = *(void **)a22;
  v136 = *(_QWORD *)(a22 + 8);
  v131 = *(_QWORD *)(a22 + 16);
  v130 = *(_QWORD *)(a22 + 24);
  v135 = *(_QWORD *)(a22 + 32);
  v134 = *(_QWORD *)(a22 + 40);
  v133 = *(_QWORD *)(a22 + 48);
  v132 = *(void **)(a22 + 56);
  v129 = *(_QWORD *)(a22 + 64);
  v128 = *(_QWORD *)(a22 + 72);
  v124 = *a23;
  v123 = a23[1];
  v137 = a23[2];
  v47 = *(unsigned __int8 **)a24;
  v101 = *(unsigned __int8 *)(a24 + 8);
  v121 = *(unsigned __int8 *)(a24 + 9);
  v145 = v28;
  v102 = v47;
  if (v120)
  {
    v125 = v120;
  }
  else
  {
    v48 = *((_QWORD *)v28 + 3);
    v127 = *((_QWORD *)v28 + 2);
    v125 = v48;
    swift_bridgeObjectRetain();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v44, v122, v40);
  v49 = v143;
  v50 = v144;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))(v44, 1, v144) == 1)
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v49 + 16))(v140, &v145[*(_QWORD *)(*(_QWORD *)v145 + 248)], v50);
    v51 = *(void (**)(char *, uint64_t))(v41 + 8);
    swift_bridgeObjectRetain();
    v51(v44, v40);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v140, v44, v50);
    swift_bridgeObjectRetain();
  }
  v52 = v138;
  v53 = v116;
  v54 = v115;
  if (v117)
  {
    v122 = v117;
    v55 = v145;
    if (v46 != 7)
      goto LABEL_10;
    goto LABEL_9;
  }
  v55 = v145;
  v122 = *(_QWORD *)&v55[*(_QWORD *)(*(_QWORD *)v55 + 256)];
  swift_retain();
  if (v46 == 7)
LABEL_9:
    LOBYTE(v46) = v55[32];
LABEL_10:
  v162 = v46;
  sub_1BA76D70C(v54, (uint64_t)v34);
  v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  if (v56(v34, 1, v35) == 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v53 + 16))(v141, &v55[qword_1ED4767C0], v35);
    swift_retain();
    sub_1BA76D750((uint64_t)v34);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v141, v34, v35);
    swift_retain();
  }
  v57 = v119;
  sub_1BA76D70C(v118, v119);
  if (v56((char *)v57, 1, v35) == 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v53 + 16))(v142, &v55[qword_1ED476780], v35);
    sub_1BA76D750(v57);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v142, v57, v35);
  }
  if (v139)
  {
    v120 = v139;
    v58 = a10;
    if (a9)
      goto LABEL_18;
  }
  else
  {
    v120 = *(_QWORD *)&v55[qword_1ED4767C8];
    swift_bridgeObjectRetain();
    v58 = a10;
    if (a9)
    {
LABEL_18:
      v119 = a9;
      v59 = a11;
      if (v58)
        goto LABEL_19;
LABEL_25:
      v118 = *(_QWORD *)&v55[qword_1ED476898];
      swift_bridgeObjectRetain();
      v60 = a12;
      if (v59)
        goto LABEL_20;
      goto LABEL_26;
    }
  }
  v119 = *(_QWORD *)&v55[qword_1ED4767E0];
  swift_bridgeObjectRetain();
  v59 = a11;
  if (!v58)
    goto LABEL_25;
LABEL_19:
  v118 = v58;
  v60 = a12;
  if (v59)
  {
LABEL_20:
    v117 = v59;
    goto LABEL_27;
  }
LABEL_26:
  v117 = *(_QWORD *)&v55[qword_1ED4769B0];
  swift_bridgeObjectRetain();
LABEL_27:
  v114 = a9;
  v112 = v58;
  if (v60)
  {
    v116 = v60;
  }
  else
  {
    v116 = *(_QWORD *)&v55[qword_1ED4767D0];
    swift_bridgeObjectRetain();
  }
  v109 = v60;
  if (a13)
  {
    v113 = a13;
  }
  else
  {
    v113 = *(_QWORD *)&v55[qword_1ED4768A0];
    swift_bridgeObjectRetain();
  }
  if ((a15 & 1) != 0)
    a14 = *(_QWORD *)&v55[qword_1ED4767F0];
  if ((a17 & 1) != 0)
  {
    a16 = *(_QWORD *)&v55[qword_1ED476770];
    v64 = a20;
    if ((a19 & 1) == 0)
    {
LABEL_37:
      v65 = a21;
      if (v64)
        goto LABEL_38;
LABEL_42:
      v105 = *(_QWORD *)&v55[qword_1ED4767D8];
      swift_bridgeObjectRetain();
      if (v65)
        goto LABEL_39;
      goto LABEL_43;
    }
  }
  else
  {
    v64 = a20;
    if ((a19 & 1) == 0)
      goto LABEL_37;
  }
  a18 = *(_QWORD *)&v55[qword_1ED476798];
  v65 = a21;
  if (!v64)
    goto LABEL_42;
LABEL_38:
  v105 = v64;
  if (v65)
  {
LABEL_39:
    v106 = v65;
    goto LABEL_44;
  }
LABEL_43:
  v106 = *(_QWORD *)&v55[qword_1ED4767F8];
  swift_retain();
LABEL_44:
  v103 = v65;
  v104 = v64;
  v107 = a13;
  v108 = a18;
  v110 = a16;
  v111 = v59;
  v115 = a14;
  if (v52)
  {
    v66 = v136 & 1;
    v67 = (v136 >> 8) & 1;
    v68 = (v136 >> 16) & 1;
    v69 = v133 & 1;
    v70 = (v136 >> 24) & 1;
    v71 = v131;
    v72 = v130;
    v73 = v135;
    v74 = v134;
    v75 = v132;
    v76 = v129;
    v77 = v128;
  }
  else
  {
    v78 = &v55[qword_1ED476788];
    v79 = *(void **)&v55[qword_1ED476788];
    v100 = v55[qword_1ED476788 + 8];
    v99 = v55[qword_1ED476788 + 9];
    v98 = v55[qword_1ED476788 + 10];
    LOBYTE(v70) = v55[qword_1ED476788 + 11];
    v71 = *(_QWORD *)&v55[qword_1ED476788 + 16];
    v72 = *(_QWORD *)&v55[qword_1ED476788 + 24];
    v73 = *(_QWORD *)&v55[qword_1ED476788 + 32];
    v74 = *(_QWORD *)&v55[qword_1ED476788 + 40];
    v69 = v55[qword_1ED476788 + 48];
    v75 = (void *)v78[7];
    v76 = v78[8];
    v77 = v78[9];
    v52 = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v73, v74);
    v80 = v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v68) = v98;
    LOBYTE(v67) = v99;
    v66 = v100;
  }
  v149 = v52;
  v150 = v66;
  v151 = v67;
  v152 = v68;
  v153 = v70;
  v154 = v71;
  v155 = v72;
  v156 = v73;
  v157 = v74;
  v158 = v69;
  v159 = v75;
  v160 = v76;
  v161 = v77;
  v81 = v124;
  if (v124)
  {
    v82 = v124;
    v83 = v123;
    v84 = v137;
    v85 = v145;
  }
  else
  {
    v85 = v145;
    v82 = *(_QWORD *)&v145[qword_1ED476790];
    v83 = *(_QWORD *)&v145[qword_1ED476790 + 8];
    v84 = *(_QWORD *)&v145[qword_1ED476790 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v148[0] = v82;
  v148[1] = v83;
  v148[2] = v84;
  if ((v121 & 1) != 0)
  {
    v86 = *(unsigned __int8 **)&v85[qword_1ED476778];
    v87 = v85[qword_1ED476778 + 8];
  }
  else
  {
    v87 = v101 & 1;
    v86 = v102;
  }
  v146 = v86;
  v147 = v87;
  if (a25)
  {
    v88 = a25;
    v89 = a27;
    if (a26)
      goto LABEL_55;
LABEL_59:
    v90 = *(_QWORD *)&v85[*(_QWORD *)(*(_QWORD *)v85 + 280)];
    swift_bridgeObjectRetain();
    v91 = v89;
    if (v89)
      goto LABEL_57;
    goto LABEL_56;
  }
  v88 = *(_QWORD *)&v85[*(_QWORD *)(*(_QWORD *)v85 + 272)];
  swift_retain();
  v89 = a27;
  if (!a26)
    goto LABEL_59;
LABEL_55:
  v90 = a26;
  v91 = v89;
  if (!v89)
  {
LABEL_56:
    v92 = (uint64_t *)&v85[*(_QWORD *)(*(_QWORD *)v85 + 264)];
    swift_beginAccess();
    v91 = *v92;
    swift_retain();
  }
LABEL_57:
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA66B198(v138, v136, v131, v130, v135, v134, v133, v132);
  sub_1BA66CF64(v81);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v93 = sub_1BB6386BC();
  swift_allocObject();
  v94 = v140;
  v95 = sub_1BB63B86C(v127, v125, v140, v122, &v162, v141, v142, v120, v119, v118, v117, v116, v113, v115, v110, v108, v105, v106, (uint64_t *)&v149,
          (uint64_t)v148,
          &v146,
          v88,
          v90,
          v91,
          v93);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v94, v144);
  return v95;
}

{
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int v45;
  unsigned __int8 *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  id v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  unint64_t v67;
  char v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t **v84;
  unsigned __int8 *v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  int v100;
  unsigned __int8 *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unsigned __int8 *v144;
  unsigned __int8 *v145;
  char v146;
  _QWORD v147[3];
  id v148;
  char v149;
  char v150;
  char v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  unsigned __int8 v161;

  v138 = a8;
  v117 = a7;
  v114 = a6;
  v144 = a5;
  v116 = a4;
  v121 = a3;
  v119 = a2;
  v127 = a1;
  v28 = *(_QWORD *)v27;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v30 = MEMORY[0x1E0C80A78](v29);
  v118 = (uint64_t)&v97 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v97 - v32;
  v34 = sub_1BB86C8B0();
  v115 = *(_QWORD *)(v34 - 8);
  v35 = MEMORY[0x1E0C80A78](v34);
  v141 = (uint64_t)&v97 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v140 = (uint64_t)&v97 - v37;
  v126 = v28;
  v38 = *(_QWORD *)(v28 + 80);
  v39 = sub_1BB873A2C();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = MEMORY[0x1E0C80A78](v39);
  v43 = (char *)&v97 - v42;
  v142 = *(_QWORD *)(v38 - 8);
  v143 = v38;
  MEMORY[0x1E0C80A78](v41);
  v139 = (uint64_t)&v97 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *v144;
  v137 = *(void **)a22;
  v136 = *(_QWORD *)(a22 + 8);
  v131 = *(_QWORD *)(a22 + 16);
  v130 = *(_QWORD *)(a22 + 24);
  v135 = *(_QWORD *)(a22 + 32);
  v134 = *(_QWORD *)(a22 + 40);
  v133 = *(_QWORD *)(a22 + 48);
  v132 = *(void **)(a22 + 56);
  v129 = *(_QWORD *)(a22 + 64);
  v128 = *(_QWORD *)(a22 + 72);
  v124 = *a23;
  v123 = a23[1];
  v122 = a23[2];
  v46 = *(unsigned __int8 **)a24;
  v100 = *(unsigned __int8 *)(a24 + 8);
  v120 = *(unsigned __int8 *)(a24 + 9);
  v144 = v27;
  v101 = v46;
  if (v119)
  {
    v125 = v119;
  }
  else
  {
    v47 = *((_QWORD *)v27 + 3);
    v127 = *((_QWORD *)v27 + 2);
    v125 = v47;
    swift_bridgeObjectRetain();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v43, v121, v39);
  v49 = v142;
  v48 = v143;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v43, 1, v143) == 1)
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v49 + 16))(v139, &v144[*(_QWORD *)(*(_QWORD *)v144 + 248)], v48);
    v50 = *(void (**)(char *, uint64_t))(v40 + 8);
    swift_bridgeObjectRetain();
    v50(v43, v39);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v139, v43, v48);
    swift_bridgeObjectRetain();
  }
  v51 = v137;
  v52 = v115;
  v53 = v114;
  if (v116)
  {
    v121 = v116;
    v54 = v144;
    if (v45 != 7)
      goto LABEL_10;
    goto LABEL_9;
  }
  v54 = v144;
  v121 = *(_QWORD *)&v54[*(_QWORD *)(*(_QWORD *)v54 + 256)];
  swift_retain();
  if (v45 == 7)
LABEL_9:
    LOBYTE(v45) = v54[32];
LABEL_10:
  v161 = v45;
  sub_1BA76D70C(v53, (uint64_t)v33);
  v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
  if (v55(v33, 1, v34) == 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v52 + 16))(v140, &v54[qword_1ED4767C0], v34);
    swift_retain();
    sub_1BA76D750((uint64_t)v33);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v140, v33, v34);
    swift_retain();
  }
  v56 = v118;
  sub_1BA76D70C(v117, v118);
  if (v55((char *)v56, 1, v34) == 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v52 + 16))(v141, &v54[qword_1ED476780], v34);
    sub_1BA76D750(v56);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v141, v56, v34);
  }
  if (v138)
  {
    v119 = v138;
    v57 = a10;
    if (a9)
      goto LABEL_18;
  }
  else
  {
    v119 = *(_QWORD *)&v54[qword_1ED4767C8];
    swift_bridgeObjectRetain();
    v57 = a10;
    if (a9)
    {
LABEL_18:
      v118 = a9;
      v58 = a11;
      if (v57)
        goto LABEL_19;
LABEL_25:
      v117 = *(_QWORD *)&v54[qword_1ED476898];
      swift_bridgeObjectRetain();
      v59 = a12;
      if (v58)
        goto LABEL_20;
      goto LABEL_26;
    }
  }
  v118 = *(_QWORD *)&v54[qword_1ED4767E0];
  swift_bridgeObjectRetain();
  v58 = a11;
  if (!v57)
    goto LABEL_25;
LABEL_19:
  v117 = v57;
  v59 = a12;
  if (v58)
  {
LABEL_20:
    v116 = v58;
    goto LABEL_27;
  }
LABEL_26:
  v116 = *(_QWORD *)&v54[qword_1ED4769B0];
  swift_bridgeObjectRetain();
LABEL_27:
  v113 = a9;
  v111 = v57;
  if (v59)
  {
    v115 = v59;
  }
  else
  {
    v115 = *(_QWORD *)&v54[qword_1ED4767D0];
    swift_bridgeObjectRetain();
  }
  v108 = v59;
  if (a13)
  {
    v112 = a13;
  }
  else
  {
    v112 = *(_QWORD *)&v54[qword_1ED4768A0];
    swift_bridgeObjectRetain();
  }
  if ((a15 & 1) != 0)
    a14 = *(_QWORD *)&v54[qword_1ED4767F0];
  if ((a17 & 1) != 0)
  {
    a16 = *(_QWORD *)&v54[qword_1ED476770];
    v63 = a20;
    if ((a19 & 1) == 0)
    {
LABEL_37:
      v64 = a21;
      if (v63)
        goto LABEL_38;
LABEL_42:
      v104 = *(_QWORD *)&v54[qword_1ED4767D8];
      swift_bridgeObjectRetain();
      if (v64)
        goto LABEL_39;
      goto LABEL_43;
    }
  }
  else
  {
    v63 = a20;
    if ((a19 & 1) == 0)
      goto LABEL_37;
  }
  a18 = *(_QWORD *)&v54[qword_1ED476798];
  v64 = a21;
  if (!v63)
    goto LABEL_42;
LABEL_38:
  v104 = v63;
  if (v64)
  {
LABEL_39:
    v105 = v64;
    goto LABEL_44;
  }
LABEL_43:
  v105 = *(_QWORD *)&v54[qword_1ED4767F8];
  swift_retain();
LABEL_44:
  v102 = v64;
  v103 = v63;
  v106 = a13;
  v107 = a18;
  v109 = a16;
  v110 = v58;
  v114 = a14;
  if (v51)
  {
    v65 = v136 & 1;
    v66 = (v136 >> 8) & 1;
    v67 = (v136 >> 16) & 1;
    v68 = v133 & 1;
    v69 = (v136 >> 24) & 1;
    v70 = v131;
    v71 = v130;
    v72 = v135;
    v73 = v134;
    v74 = v132;
    v75 = v129;
    v76 = v128;
  }
  else
  {
    v77 = &v54[qword_1ED476788];
    v78 = *(void **)&v54[qword_1ED476788];
    v99 = v54[qword_1ED476788 + 8];
    v98 = v54[qword_1ED476788 + 9];
    v97 = v54[qword_1ED476788 + 10];
    LOBYTE(v69) = v54[qword_1ED476788 + 11];
    v70 = *(_QWORD *)&v54[qword_1ED476788 + 16];
    v71 = *(_QWORD *)&v54[qword_1ED476788 + 24];
    v72 = *(_QWORD *)&v54[qword_1ED476788 + 32];
    v73 = *(_QWORD *)&v54[qword_1ED476788 + 40];
    v68 = v54[qword_1ED476788 + 48];
    v74 = *(void **)&v54[qword_1ED476788 + 56];
    v75 = *((_QWORD *)v77 + 8);
    v76 = *((_QWORD *)v77 + 9);
    v51 = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v72, v73);
    v79 = v74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v67) = v97;
    LOBYTE(v66) = v98;
    v65 = v99;
  }
  v148 = v51;
  v149 = v65;
  v150 = v66;
  v151 = v67;
  v152 = v69;
  v153 = v70;
  v154 = v71;
  v155 = v72;
  v156 = v73;
  v157 = v68;
  v158 = v74;
  v159 = v75;
  v160 = v76;
  v80 = v124;
  if (v124)
  {
    v81 = v124;
    v82 = v123;
    v83 = v122;
    v84 = (uint64_t **)v144;
  }
  else
  {
    v84 = (uint64_t **)v144;
    v81 = *(_QWORD *)&v144[qword_1ED476790];
    v82 = *(_QWORD *)&v144[qword_1ED476790 + 8];
    v83 = *(_QWORD *)&v144[qword_1ED476790 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v147[0] = v81;
  v147[1] = v82;
  v147[2] = v83;
  if ((v120 & 1) != 0)
  {
    v85 = *(unsigned __int8 **)((char *)v84 + qword_1ED476778);
    v86 = *((_BYTE *)v84 + qword_1ED476778 + 8);
  }
  else
  {
    v86 = v100 & 1;
    v85 = v101;
  }
  v145 = v85;
  v146 = v86;
  if (!a25)
  {
    v87 = *(uint64_t *)((char *)v84 + (*v84)[34]);
    swift_retain();
    if (a26)
      goto LABEL_55;
LABEL_57:
    v88 = *(uint64_t *)((char *)v84 + (*v84)[35]);
    swift_bridgeObjectRetain();
    goto LABEL_58;
  }
  v87 = a25;
  if (!a26)
    goto LABEL_57;
LABEL_55:
  v88 = a26;
LABEL_58:
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA66B198(v137, v136, v131, v130, v135, v134, v133, v132);
  sub_1BA66CF64(v80);
  swift_retain();
  swift_bridgeObjectRetain();
  v91 = sub_1BB63A5AC(a27, v84, v89, v90);
  v92 = sub_1BB6386BC();
  swift_allocObject();
  v96 = v91;
  v93 = v139;
  v94 = sub_1BB63B86C(v127, v125, v139, v121, &v161, v140, v141, v119, v118, v117, v116, v115, v112, v114, v109, v107, v104, v105, (uint64_t *)&v148,
          (uint64_t)v147,
          &v145,
          v87,
          v88,
          v96,
          v92);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v93, v143);
  return v94;
}

uint64_t FeedCursor.canExpand.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v6 = (char *)&v19 - v5;
  v7 = swift_checkMetadataState();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v19 - v10;
  v12 = v0[32];
  if (((1 << v12) & 0x67) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, double))(v1 + 64))(v2, v1, v9);
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v7, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v13 = swift_getAssociatedConformanceWitness();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 48))(AssociatedTypeWitness, v13);
    v15 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, AssociatedTypeWitness);
    v21 = v14;
    MEMORY[0x1E0C80A78](v15);
    *(&v19 - 2) = v2;
    *(&v19 - 1) = v1;
    swift_getAssociatedTypeWitness();
    v16 = sub_1BB872EE0();
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v16);
    v17 = sub_1BB872C7C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = v12 != 3;
  }
  return v17 & 1;
}

uint64_t FeedNextCursor.syncCursor.getter()
{
  uint64_t v0;

  if ((*(_QWORD *)(v0 + 16) & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_retain();
}

uint64_t static FeedCursor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v5 || (v6 = sub_1BB874398(), result = 0, (v6 & 1) != 0))
  {
    sub_1BB8062DC(*(_BYTE *)(a1 + 32));
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(v2 + 80);
      v11 = *(_QWORD *)(v2 + 88);
      v12 = type metadata accessor for FeedCursorGroup(0, v10, v11, v8);
      MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedCursorGroup<A>, v12);
      if ((sub_1BB872EEC() & 1) != 0)
      {
        v14 = type metadata accessor for FeedDatabaseGroup(0, v10, v11, v13);
        MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedDatabaseGroup<A>, v14);
        if ((sub_1BB872EEC() & 1) != 0)
        {
          v16 = type metadata accessor for FeedGroupEmitter(255, v10, v11, v15);
          v17 = sub_1BB872EE0();
          v20 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitter<A>, v16);
          MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF30], v17, &v20);
          if ((sub_1BB872820() & 1) != 0
            && (sub_1BB872EEC() & 1) != 0
            && (sub_1BB872EEC() & 1) != 0
            && (sub_1BB872EEC() & 1) != 0
            && *(_QWORD *)(a1 + qword_1ED4767E8) == *(_QWORD *)(a2 + qword_1ED4767E8)
            && *(_QWORD *)(a1 + qword_1ED4767F0) == *(_QWORD *)(a2 + qword_1ED4767F0))
          {
            v18 = *(double *)(a1 + qword_1ED476778);
            v19 = *(double *)(a2 + qword_1ED476778);
            if (*(_BYTE *)(a1 + qword_1ED476778 + 8) == 1)
            {
              if (v18 == 0.0)
              {
                if (v19 == 0.0)
                  return *(unsigned __int8 *)(a2 + qword_1ED476778 + 8);
                else
                  return 0;
              }
              else if (v19 == 0.0)
              {
                return 0;
              }
              else
              {
                return *(unsigned __int8 *)(a2 + qword_1ED476778 + 8);
              }
            }
            if ((*(_BYTE *)(a2 + qword_1ED476778 + 8) & 1) == 0)
              return v18 == v19;
          }
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BB638188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;

  if ((v4[2] & 0x8000000000000000) != 0)
  {
    swift_retain();
    sub_1BB86E71C();
    swift_release();
    return v6;
  }
  else
  {
    type metadata accessor for FeedCursor(255, *(_QWORD *)(*v4 + 80), *(_QWORD *)(*v4 + 88), a4);
    sub_1BB86EAAC();
    swift_retain();
    return sub_1BB86E9D4();
  }
}

uint64_t *sub_1BB638214()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 *v57;
  char v58;
  _QWORD v59[3];
  void *v60;
  char v61;
  char v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;

  v1 = *v0;
  v2 = sub_1BB86C8B0();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v5;
  MEMORY[0x1E0C80A78](v3);
  v47 = (uint64_t)&v34 - v6;
  v49 = v0[2];
  v56 = v0[3];
  v45 = v1;
  v7 = *(_QWORD *)(v1 + 256);
  v48 = (uint64_t)v0 + *(_QWORD *)(v1 + 248);
  v55 = *(uint64_t *)((char *)v0 + v7);
  v73 = *((_BYTE *)v0 + 32);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v9((char *)&v34 - v6, (uint64_t)v0 + qword_1ED4767C0, v2);
  v9(v5, (uint64_t)v0 + qword_1ED476780, v2);
  v41 = *(uint64_t *)((char *)v0 + qword_1ED4767C8);
  v10 = *(uint64_t *)((char *)v0 + qword_1ED476898);
  v53 = *(uint64_t *)((char *)v0 + qword_1ED4767E0);
  v54 = v10;
  v51 = *(uint64_t *)((char *)v0 + qword_1ED4769B0);
  v52 = *(uint64_t *)((char *)v0 + qword_1ED4767D0);
  v50 = *(uint64_t *)((char *)v0 + qword_1ED4768A0);
  v44 = *(uint64_t *)((char *)v0 + qword_1ED4767F0);
  v43 = *(uint64_t *)((char *)v0 + qword_1ED476770);
  v42 = *(uint64_t *)((char *)v0 + qword_1ED476798);
  v11 = *(uint64_t *)((char *)v0 + qword_1ED4767D8);
  v39 = *(uint64_t *)((char *)v0 + qword_1ED4767F8);
  v12 = *(void **)((char *)v0 + qword_1ED476788);
  v13 = *((_BYTE *)v0 + qword_1ED476788 + 8);
  v14 = *((_BYTE *)v0 + qword_1ED476788 + 9);
  v15 = *((_BYTE *)v0 + qword_1ED476788 + 10);
  v16 = *((_BYTE *)v0 + qword_1ED476788 + 11);
  v18 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 16);
  v17 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 24);
  v19 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 32);
  v20 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 40);
  v21 = *((_BYTE *)v0 + qword_1ED476788 + 48);
  v34 = *(id *)((char *)v0 + qword_1ED476788 + 56);
  v22 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 72);
  v36 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 64);
  v38 = v22;
  v60 = v12;
  v61 = v13;
  v62 = v14;
  v63 = v15;
  v64 = v16;
  v65 = v18;
  v66 = v17;
  v67 = v19;
  v68 = v20;
  v69 = v21;
  v70 = v34;
  v71 = v36;
  v72 = v22;
  v23 = *(uint64_t *)((char *)v0 + qword_1ED476790);
  v24 = *(uint64_t *)((char *)v0 + qword_1ED476790 + 8);
  v40 = *(uint64_t *)((char *)v0 + qword_1ED476790 + 16);
  v59[0] = v23;
  v59[1] = v24;
  v59[2] = v40;
  LOBYTE(v22) = *((_BYTE *)v0 + qword_1ED476778 + 8);
  v57 = *(unsigned __int8 **)((char *)v0 + qword_1ED476778);
  v58 = v22;
  v25 = *(_QWORD *)(*v0 + 280);
  v35 = *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 272));
  v37 = *(uint64_t *)((char *)v0 + v25);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v39;
  swift_retain();
  v27 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v19, v20);
  v28 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v35;
  swift_retain();
  v30 = v37;
  swift_bridgeObjectRetain();
  v31 = sub_1BB6386BC();
  swift_allocObject();
  v32 = sub_1BB63B86C(v49, v56, v48, v55, &v73, v47, (uint64_t)v46, v41, v53, v54, v51, v52, v50, v44, v43, v42, v11, v26, (uint64_t *)&v60,
          (uint64_t)v59,
          &v57,
          v29,
          v30,
          0,
          v31);
  swift_release();
  swift_release();
  return v32;
}

uint64_t FeedCursor.feedMode.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return FeedServiceConfigType.feedMode.getter(*(_QWORD *)(*(_QWORD *)v1 + 80), *(_QWORD *)(*(_QWORD *)v1 + 88), a1);
}

uint64_t sub_1BB6386BC()
{
  uint64_t Strong;

  sub_1BB86DD20();
  Strong = swift_weakLoadStrong();
  sub_1BB86DD2C();
  return Strong;
}

uint64_t FeedNextCursor.identifier.getter()
{
  uint64_t v0;

  v0 = sub_1BB63B804();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BB63925C(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BA631958(a1);
  return v2;
}

uint64_t sub_1BB639298(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t AssociatedTypeWitness;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  _QWORD v67[19];
  uint64_t v68;
  __int16 v69;
  uint64_t v70[3];
  _QWORD v71[3];
  _OWORD v72[5];
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75[9];

  v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v59 = sub_1BB873A2C();
  MEMORY[0x1E0C80A78](v59);
  v58 = (char *)&v49 - v6;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v49 - v12;
  v62 = (uint64_t)&v49 - v12;
  v14 = sub_1BB873A2C();
  v63 = *(_QWORD *)(v14 - 8);
  v64 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v66 = (uint64_t)&v49 - v16;
  (*(void (**)(double))(*(_QWORD *)(v4 - 8) + 56))(v15);
  v75[0] = 0x2020403020102uLL >> (8 * v1[32]);
  v17 = sub_1BB86C8B0();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v13, 1, 1, v17);
  v18(v10, 1, 1, v17);
  type metadata accessor for FeedGroupEmitter(0, v4, v5, v19);
  v57 = sub_1BB872E68();
  sub_1BB872EE0();
  swift_getTupleTypeMetadata2();
  sub_1BB872E68();
  v56 = sub_1BB8727CC();
  v55 = sub_1BB872E68();
  v74 = *(_QWORD *)&v3[qword_1ED4767D0];
  v67[14] = v4;
  v67[15] = v5;
  v67[16] = a1;
  type metadata accessor for FeedCursorGroup(255, v4, v5, v20);
  v21 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v21);
  v51 = v21;
  v54 = sub_1BB873DA4();
  v22 = *(_QWORD *)&v3[qword_1ED4768A0];
  v65 = v3;
  v73 = v22;
  v67[8] = v4;
  v67[9] = v5;
  v67[10] = a1;
  type metadata accessor for FeedDatabaseGroup(255, v4, v5, v23);
  v24 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v24);
  v25 = sub_1BB873DA4();
  v53 = v25;
  sub_1BB86EAAC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v58, 1, 1);
  v26 = sub_1BB86E9D4();
  AssociatedTypeWitness = v26;
  memset(v72, 0, sizeof(v72));
  v27 = *(_QWORD *)&v3[qword_1ED476790];
  v67[2] = v4;
  v67[3] = v5;
  v49 = a1;
  v67[4] = a1;
  swift_bridgeObjectRetain();
  v28 = sub_1BAC9CA44((unint64_t)sub_1BB63C220, (uint64_t)v67, v27);
  v52 = v4;
  v58 = (char *)v5;
  FeedJournal.init(entries:)(v28, v71);
  v59 = v71[0];
  v70[0] = v71[0];
  v70[1] = v71[1];
  v70[2] = v71[2];
  v68 = 0;
  v69 = 256;
  v30 = (uint64_t)v61;
  v29 = v62;
  v50 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v66, 0, v75, v62, (uint64_t)v61, v57, v56, 0, v55, v54, v25, 0, 1, 0, 1, 0, 1,
          0,
          v26,
          (uint64_t)v72,
          v70,
          (uint64_t)&v68,
          0,
          0,
          0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA76D750(v30);
  sub_1BA76D750(v29);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v66, v64);
  v31 = &v65[*(_QWORD *)(*(_QWORD *)v65 + 264)];
  swift_beginAccess();
  if (*v31)
  {
    swift_retain();
    v32 = sub_1BB63A9B0(v49);
    swift_release();
  }
  else
  {
    v32 = 0;
  }
  v33 = (uint64_t)v58;
  v35 = v51;
  v34 = v52;
  v36 = (uint64_t *)((char *)v50 + *(_QWORD *)(*v50 + 264));
  swift_beginAccess();
  *v36 = v32;
  swift_release();
  if (*v36)
  {
    swift_retain();
    swift_retain();
    swift_weakAssign();
    sub_1BA631F44();
    swift_release();
    swift_release();
  }
  type metadata accessor for FeedNextCursor(0, v34, v33, v37);
  v38 = swift_allocObject();
  v39 = swift_retain();
  sub_1BA631958(v39);
  v40 = *(_QWORD *)(v38 + 16);
  swift_retain();
  if (v40 < 0)
  {
    v42 = v38;
  }
  else
  {
    v41 = MEMORY[0x1E0DEAF50];
    v42 = v38;
    do
    {
      swift_retain();
      if (!v40)
        break;
      v67[18] = *(_QWORD *)(v40 + qword_1ED4767D0);
      MEMORY[0x1BCCE5B24](v41, v35);
      v43 = sub_1BB873168();
      if ((v43 & 1) == 0)
      {
        swift_release();
        break;
      }
      v47 = FeedCursor.reachedEnd.getter(v43, v44, v45, v46);
      swift_release();
      if ((v47 & 1) == 0)
        break;
      swift_release();
      v42 = sub_1BA6319D0();
      swift_release();
      if (!v42)
        goto LABEL_17;
      v40 = *(_QWORD *)(v42 + 16);
      swift_retain();
    }
    while ((v40 & 0x8000000000000000) == 0);
  }
  swift_release();
LABEL_17:
  swift_release();
  return v42;
}

uint64_t sub_1BB63997C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 264));
  swift_retain();
  while (1)
  {
    swift_beginAccess();
    v2 = *v1;
    if (!v2)
      break;
    swift_retain();
    swift_retain();
    swift_weakAssign();
    sub_1BA631F44();
    swift_release_n();
    v3 = *(_QWORD *)(v2 + 16);
    if (v3 < 0)
      break;
    swift_retain();
    result = swift_release();
    if (!v3)
      return result;
    v1 = (uint64_t *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 264));
  }
  return swift_release();
}

uint64_t sub_1BB639A40()
{
  uint64_t v0;

  if ((*(_QWORD *)(v0 + 16) & 0x8000000000000000) != 0)
    return swift_retain();
  else
    return 0;
}

uint64_t FeedCursor.identifier.getter()
{
  uint64_t v0;

  v0 = sub_1BA653870();
  swift_bridgeObjectRetain();
  return v0;
}

void FeedCursor.kind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t FeedCursor.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB639AC4(&qword_1ED4767C0, a1);
}

uint64_t FeedCursor.createdDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB639AC4(&qword_1ED476780, a1);
}

uint64_t sub_1BB639AC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a1;
  v5 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t FeedCursor.totalGroupCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1ED4767E8);
}

uint64_t FeedCursor.openEmitters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.slottedEmitters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.stagedEmitters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.expandEmitters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.emittedGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.skippedSlotCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1ED4767F0);
}

uint64_t FeedCursor.slotOffset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1ED476770);
}

uint64_t FeedCursor.slotAdjustment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1ED476798);
}

uint64_t FeedCursor.emitterCursors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.feedPool.getter()
{
  return swift_retain();
}

uint64_t FeedCursor.feedContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;

  v2 = v1 + qword_1ED476788;
  v3 = *(void **)(v1 + qword_1ED476788);
  v4 = *(_BYTE *)(v1 + qword_1ED476788 + 8);
  v5 = *(_BYTE *)(v1 + qword_1ED476788 + 9);
  v6 = *(_BYTE *)(v1 + qword_1ED476788 + 10);
  v7 = *(_BYTE *)(v1 + qword_1ED476788 + 11);
  v8 = *(_QWORD *)(v1 + qword_1ED476788 + 16);
  v9 = *(_QWORD *)(v1 + qword_1ED476788 + 24);
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 40);
  v12 = *(_BYTE *)(v2 + 48);
  v14 = *(void **)(v2 + 56);
  v13 = *(_QWORD *)(v2 + 64);
  v15 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 9) = v5;
  *(_BYTE *)(a1 + 10) = v6;
  *(_BYTE *)(a1 + 11) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v15;
  v16 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v10, v11);
  v17 = v14;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.feedJournal.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + qword_1ED476790);
  v3 = *(_QWORD *)(v1 + qword_1ED476790 + 8);
  v4 = *(_QWORD *)(v1 + qword_1ED476790 + 16);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void FeedCursor.cachePolicy.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + qword_1ED476778 + 8);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + qword_1ED476778);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FeedCursor.serviceState.getter()
{
  return swift_retain();
}

uint64_t FeedCursor.nextCursor.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t FeedCursor.tracker.getter()
{
  return swift_retain();
}

uint64_t FeedCursor.sidecars.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t *FeedCursor.__allocating_init(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:parentCursor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t *a19, uint64_t a20,unsigned __int8 **a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t *v27;

  v27 = sub_1BB63BF98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23,
          a24,
          a25);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v25 + 80) - 8) + 8))(a3);
  return v27;
}

uint64_t *FeedCursor.init(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:parentCursor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t *a19, uint64_t a20,unsigned __int8 **a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t *v25;
  uint64_t v27;
  uint64_t *v28;

  v27 = *v25;
  v28 = sub_1BB63B86C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23,
          a24,
          a25);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v27 + 80) - 8) + 8))(a3);
  return v28;
}

uint64_t sub_1BB639E80()
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48);
  v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness) & 1;
}

uint64_t FeedCursor.activeEmitters.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for FeedGroupEmitter(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v5 = sub_1BB872EE0();
  v6 = sub_1BB8727F0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DE9F98], v6);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v5);
  sub_1BB872C64();
  swift_bridgeObjectRelease();
  v7 = sub_1BB872E5C();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t FeedCursor.allEmittedGroups.getter()
{
  return sub_1BB63A104((uint64_t)&qword_1ED4767D0, (void (*)(uint64_t))FeedCursor.allEmittedGroups.getter, (void (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedCursorGroup);
}

uint64_t sub_1BB63A0E8()
{
  return sub_1BB63A104((uint64_t)&qword_1ED4768A0, (void (*)(uint64_t))sub_1BB63A0E8, (void (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedDatabaseGroup);
}

uint64_t sub_1BB63A104(uint64_t a1, void (*a2)(uint64_t), void (*a3)(_QWORD, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *v3;
  v7 = (uint64_t)v3 + *(_QWORD *)(*v3 + 264);
  swift_beginAccess();
  if (*(_QWORD *)v7
    && (v8 = *(_QWORD *)(*(_QWORD *)v7 + 16), (v8 & 0x8000000000000000) == 0)
    && (v9 = swift_retain(), v8))
  {
    a2(v9);
    swift_release();
    v10 = *(_QWORD *)(v6 + 80);
    v11 = *(_QWORD *)(v6 + 88);
  }
  else
  {
    v10 = *(_QWORD *)(v6 + 80);
    v11 = *(_QWORD *)(v6 + 88);
    a3(0, v10, v11);
    sub_1BB872E68();
  }
  a3(0, v10, v11);
  v12 = sub_1BB872E5C();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BB63A1F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  sub_1BA6325A8(v1, v1);
  v2 = *(_QWORD *)(v1 - 8);
  swift_allocObject();
  v3 = sub_1BB872E2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(_QWORD *)(*(_QWORD *)v0 + 248), v1);
  v5 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 264);
  swift_beginAccess();
  if (*(_QWORD *)v5
    && (v6 = *(_QWORD *)(*(_QWORD *)v5 + 16), (v6 & 0x8000000000000000) == 0)
    && (v7 = swift_retain(), v6))
  {
    sub_1BB63A1F0(v7);
    swift_release();
  }
  else
  {
    sub_1BB872E68();
  }
  sub_1BA69C794(v3);
  v8 = sub_1BB872E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BB63A314@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;

  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v5)
  {
    sub_1BB86F340();
    swift_release();
    sub_1BB86F100();
    if (v1)
    {

      swift_release();
LABEL_5:
      result = FeedDatabaseGroup.identifier.getter();
      *a1 = result;
      a1[1] = v4;
      return result;
    }
    result = swift_release();
    if ((v6 & 0xFE) == 2)
      goto LABEL_5;
    *a1 = 0;
    a1[1] = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB63A3E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1BB63C600(a1);
  if (!v1)
    return swift_retain();
  return result;
}

uint64_t sub_1BB63A40C()
{
  uint64_t v0;

  return sub_1BB63A3E8(v0);
}

uint64_t sub_1BB63A424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_1BB873A2C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v19 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)v19 - v12, a1, v9, v11);
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a4, v13, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v16 = type metadata accessor for FeedServiceError(0, a2, a3, v15);
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceError<A>, v16);
  swift_allocError();
  *(_QWORD *)v17 = 6;
  *(_QWORD *)(v17 + 8) = 0;
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  *(_BYTE *)(v17 + 32) = 6;
  return swift_willThrow();
}

uint64_t sub_1BB63A584()
{
  return swift_deallocObject();
}

uint64_t sub_1BB63A594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB63A424(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BB63A5AC(uint64_t a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  v4 = *a2;
  if (a1)
  {
    type metadata accessor for FeedNextCursor(0, v4[10], v4[11], a4);
    v5 = swift_allocObject();
    v6 = swift_retain();
    sub_1BA631958(v6);
  }
  else
  {
    v7 = (uint64_t *)((char *)a2 + v4[33]);
    swift_beginAccess();
    v5 = *v7;
    swift_retain();
  }
  return v5;
}

uint64_t sub_1BB63A630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedConformanceWitness;
  void (*v7)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  type metadata accessor for FeedCursorGroup(0, a3, a4, a4);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 88);
  v8 = swift_checkMetadataState();
  v7(&v15, v8, AssociatedConformanceWitness);
  if ((v15 & 0xFE) != 2)
    return 0;
  v9 = FeedCursorGroup.identifier.getter();
  v11 = v10;
  type metadata accessor for FeedCursorTrackerSnapshot(0, a3, a4, v12);
  v13._countAndFlagsBits = v9;
  v13._object = v11;
  LOBYTE(v9) = FeedCursorTrackerSnapshot.contains(identifier:)(v13);
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1BB63A7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t result;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  Swift::String v12;
  Swift::Bool v13;
  uint64_t v14;
  char v15;

  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v14)
  {
    sub_1BB86F340();
    swift_release();
    sub_1BB86F100();
    if (v4)
    {

      swift_release();
    }
    else
    {
      swift_release();
      if ((v15 & 0xFE) != 2)
        return 0;
    }
    v8 = FeedDatabaseGroup.identifier.getter();
    v10 = v9;
    type metadata accessor for FeedCursorTrackerSnapshot(0, a3, a4, v11);
    v12._countAndFlagsBits = v8;
    v12._object = v10;
    v13 = FeedCursorTrackerSnapshot.contains(identifier:)(v12);
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1BB63A8C4(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  Swift::String v11;
  Swift::Bool v12;
  _QWORD v13[31];
  char v14;

  v4 = *result;
  if (*(_QWORD *)(*result + 16))
  {
    v7 = v4 + 32;
    sub_1BA670450(v4 + 32, (uint64_t)v13);
    FeedJournalGroupResult.repooling.getter();
    sub_1BA67036C((uint64_t)v13);
    if ((v14 & 0xFE) == 2)
    {
      sub_1BA670450(v7, (uint64_t)v13);
      v8 = v13[0];
      v9 = (void *)v13[1];
      swift_bridgeObjectRetain();
      sub_1BA67036C((uint64_t)v13);
      type metadata accessor for FeedCursorTrackerSnapshot(0, a3, a4, v10);
      v11._countAndFlagsBits = v8;
      v11._object = v9;
      v12 = FeedCursorTrackerSnapshot.contains(identifier:)(v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
    return (uint64_t *)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB63A9B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  if ((*(_QWORD *)(v1 + 16) & 0x8000000000000000) != 0)
    return swift_retain();
  swift_retain();
  v3 = sub_1BB639298(a1);
  swift_release();
  return v3;
}

uint64_t sub_1BB63AA14(uint64_t *a1, uint64_t *a2)
{
  return static FeedCursor.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BB63AA20(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BB63AA5C(a1);
  return v2;
}

uint64_t sub_1BB63AA5C(uint64_t a1)
{
  uint64_t v1;

  swift_weakInit();
  *(_QWORD *)(v1 + 16) = a1 | 0x8000000000000000;
  swift_weakLoadStrong();
  swift_weakAssign();
  swift_release();
  return v1;
}

_QWORD *sub_1BB63AABC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  char v10;

  v1 = *v0;
  v2 = v0[2];
  v3 = v0[3];
  v10 = *((_BYTE *)v0 + 32);
  v4 = v0[5];
  v6 = v0[7];
  v5 = v0[8];
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = *(_QWORD *)(v1 + 80);
  v7[3] = *(_QWORD *)(v1 + 88);
  v7[4] = v6;
  v7[5] = v5;
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v8 = sub_1BB63C240(v2, v3, &v10, v4, 0, (uint64_t)sub_1BB63C5BC, (uint64_t)v7);
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_1BB63ABA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;

  if (a1 < 0)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FD0, (uint64_t (*)(uint64_t))sub_1BA81E0F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
    v13 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 32) = 0x656E6961746E6F63;
    *(_QWORD *)(inited + 40) = 0xE900000000000072;
    *(_QWORD *)(inited + 48) = 0x727543636E797361;
    *(_QWORD *)(inited + 56) = 0xEB00000000726F73;
    *(_QWORD *)(inited + 72) = v13;
    *(_QWORD *)(inited + 80) = 1684957547;
    *(_QWORD *)(inited + 88) = 0xE400000000000000;
    __asm { BR              X13 }
  }
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FD0, (uint64_t (*)(uint64_t))sub_1BA81E0F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v8 + 32) = 0x656E6961746E6F63;
  *(_QWORD *)(v8 + 40) = 0xE900000000000072;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 48) = 0x726F73727563;
  *(_QWORD *)(v8 + 56) = 0xE600000000000000;
  *(_QWORD *)(v8 + 72) = v9;
  *(_QWORD *)(v8 + 80) = 1684957547;
  *(_QWORD *)(v8 + 88) = 0xE400000000000000;
  LOBYTE(v9) = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(v8 + 120) = &type metadata for FeedCursorKind;
  *(_BYTE *)(v8 + 96) = v9;
  swift_retain();
  sub_1BA76E994(v8);
  type metadata accessor for FeedNextCursor(255, a2, a3, v10);
  v11 = sub_1BB86E320();
  a4[3] = v11;
  a4[4] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3C80], v11);
  __swift_allocate_boxed_opaque_existential_0(a4);
  sub_1BB86E314();
  return swift_release();
}

void sub_1BB63AEB8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = a1;
  *(_QWORD *)(v1 + 96) = 0x6E776F6E6B6E55;
  JUMPOUT(0x1BB63AE24);
}

uint64_t sub_1BB63AED8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BB63ABA4(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1BB63AEE8(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB936868, a1);
  return sub_1BB86E308();
}

uint64_t FeedNextCursor.deinit()
{
  uint64_t v0;

  swift_release();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1BB63AF44()
{
  uint64_t v0;

  v0 = sub_1BB63B804();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FeedNextCursor.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *v1;
  v4 = sub_1BA6319D0();
  if (v4)
  {
    v5 = v4;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FD0, (uint64_t (*)(uint64_t))sub_1BA81E0F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
    *(_QWORD *)(inited + 32) = 0x696669746E656469;
    *(_QWORD *)(inited + 40) = 0xEA00000000007265;
    v7 = *(_QWORD *)(v1[2] + 24);
    v8 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = *(_QWORD *)(v1[2] + 16);
    *(_QWORD *)(inited + 56) = v7;
    *(_QWORD *)(inited + 72) = v8;
    *(_QWORD *)(inited + 80) = 0x656E6961746E6F63;
    *(_QWORD *)(inited + 88) = 0xE900000000000072;
    v9 = v1[2];
    v11 = type metadata accessor for FeedNextCursor.Container(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v10);
    *(_QWORD *)(inited + 96) = v9;
    *(_QWORD *)(inited + 120) = v11;
    *(_QWORD *)(inited + 128) = 0x737275437478656ELL;
    *(_QWORD *)(inited + 168) = v3;
    *(_QWORD *)(inited + 136) = 0xEA0000000000726FLL;
    *(_QWORD *)(inited + 144) = v5;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA76E994(inited);
    v12 = sub_1BB86E320();
    a1[3] = v12;
    a1[4] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3C80], v12);
    __swift_allocate_boxed_opaque_existential_0(a1);
    sub_1BB86E314();
    return swift_release();
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FD0, (uint64_t (*)(uint64_t))sub_1BA81E0F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87A390;
    *(_QWORD *)(v14 + 32) = 0x696669746E656469;
    *(_QWORD *)(v14 + 40) = 0xEA00000000007265;
    v15 = *(_QWORD *)(v1[2] + 24);
    v16 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 48) = *(_QWORD *)(v1[2] + 16);
    *(_QWORD *)(v14 + 56) = v15;
    *(_QWORD *)(v14 + 72) = v16;
    *(_QWORD *)(v14 + 80) = 0x656E6961746E6F63;
    *(_QWORD *)(v14 + 88) = 0xE900000000000072;
    v17 = v1[2];
    *(_QWORD *)(v14 + 120) = type metadata accessor for FeedNextCursor.Container(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v18);
    *(_QWORD *)(v14 + 96) = v17;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA76E994(v14);
    v19 = sub_1BB86E320();
    a1[3] = v19;
    a1[4] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3C80], v19);
    __swift_allocate_boxed_opaque_existential_0(a1);
    return sub_1BB86E314();
  }
}

uint64_t sub_1BB63B1CC@<X0>(uint64_t *a1@<X8>)
{
  return FeedNextCursor.shortDescription.getter(a1);
}

uint64_t sub_1BB63B1EC(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedNextCursor<A>, a1);
  return sub_1BB86E308();
}

uint64_t sub_1BB63B220@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = a1(a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_1BB63B2A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *v0;
  v2 = swift_allocObject();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = *(_QWORD *)(v1 + 80);
  v3[3] = *(_QWORD *)(v1 + 88);
  v3[4] = v2;
  sub_1BB86E728();
  swift_release();
  return swift_release();
}

void sub_1BB63B354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  id v8;

  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = a2;
  swift_retain();
  v8 = (id)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();
  swift_release();

}

uint64_t sub_1BB63B3F0()
{
  swift_beginAccess();
  swift_weakLoadStrong();
  sub_1BB63B810();
  return swift_release();
}

uint64_t sub_1BB63B454(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  a3();
  if (v6)
  {
    type metadata accessor for FeedCursor(255, a5, a6, v9);
    sub_1BB86EAAC();
    return sub_1BB86E9BC();
  }
  else
  {
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a5;
    *(_QWORD *)(v11 + 24) = a6;
    v12 = (void *)sub_1BB86E854();
    type metadata accessor for FeedCursor(0, a5, a6, v13);
    v14 = sub_1BB86E974();
    swift_release();
    swift_release();

    return v14;
  }
}

uint64_t sub_1BB63B534@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t result;
  uint64_t **v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26[3];
  _OWORD v27[6];
  unsigned __int8 v28;

  v23 = a3;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - v9;
  v11 = sub_1BB873A2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v23 - v13;
  v15 = *a1;
  sub_1BA631AC8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v14, 1, 1, a2);
  v28 = 7;
  v16 = sub_1BB86C8B0();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  memset(v27, 0, 80);
  memset(v26, 0, sizeof(v26));
  v24 = 0;
  v25 = 256;
  v18 = (_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 264));
  swift_beginAccess();
  if (*v18)
  {
    v19 = swift_retain();
    v20 = sub_1BA631A28(v19);
    swift_release();
  }
  else
  {
    v20 = 0;
  }
  v21 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, (uint64_t)v14, 0, &v28, (uint64_t)v10, (uint64_t)v7, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          (uint64_t)v27,
          v26,
          (uint64_t)&v24,
          0,
          0,
          v20);
  swift_release();
  swift_release();
  sub_1BA76D750((uint64_t)v7);
  sub_1BA76D750((uint64_t)v10);
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *v23 = v21;
  return result;
}

uint64_t sub_1BB63B7A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1BB63B7E4()
{
  sub_1BB63B7A8();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB63B804()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t sub_1BB63B810()
{
  sub_1BB86DD20();
  swift_weakAssign();
  return sub_1BB86DD2C();
}

uint64_t *sub_1BB63B86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t *a19, uint64_t a20,unsigned __int8 **a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  uint64_t AssociatedConformanceWitness;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t AssociatedTypeWitness;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  unsigned __int8 *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v26 = v25;
  v91 = a8;
  v98 = a7;
  v77 = a6;
  v80 = a5;
  v65 = a4;
  v64 = a3;
  v81 = a1;
  v83 = a24;
  v84 = a2;
  v96 = a23;
  v97 = a25;
  v94 = a17;
  v95 = a18;
  v92 = a15;
  v93 = a16;
  v89 = a13;
  v90 = a14;
  v87 = a11;
  v88 = a12;
  v85 = a9;
  v86 = a10;
  v82 = a22;
  *(_QWORD *)&v59 = a20;
  v27 = *v25;
  v28 = *(_QWORD *)(*v25 + 80);
  v63 = *(_QWORD *)(*v25 + 88);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v67 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v61 = (char *)&v57 - v29;
  v30 = swift_checkMetadataState();
  v60 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v57 - v31;
  v33 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v33);
  LODWORD(v58) = *v80;
  v72 = *a19;
  v71 = *((unsigned __int8 *)a19 + 8);
  v70 = *((unsigned __int8 *)a19 + 9);
  v69 = *((unsigned __int8 *)a19 + 10);
  v68 = *((unsigned __int8 *)a19 + 11);
  v76 = a19[4];
  v75 = a19[5];
  v74 = *((unsigned __int8 *)a19 + 48);
  v73 = a19[7];
  v78 = *(_QWORD *)(a20 + 16);
  v80 = *a21;
  v79 = *((unsigned __int8 *)a21 + 8);
  *(uint64_t *)((char *)v25 + *(_QWORD *)(v27 + 264)) = 0;
  v34 = *(_QWORD *)(*v25 + 288);
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  *(uint64_t *)((char *)v25 + v34) = sub_1BB86DD50();
  swift_weakInit();
  v35 = v84;
  v25[2] = v81;
  v25[3] = v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))((uint64_t)v26 + *(_QWORD *)(*v26 + 248), v64, v28);
  *(uint64_t *)((char *)v25 + *(_QWORD *)(*v25 + 256)) = v65;
  *((_BYTE *)v25 + 32) = v58;
  v36 = (uint64_t)v25 + qword_1ED4767C0;
  v37 = sub_1BB86C8B0();
  v84 = *(_QWORD *)(v37 - 8);
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16);
  v59 = *(_OWORD *)v59;
  v57 = *((_OWORD *)a19 + 1);
  v58 = *((_OWORD *)a19 + 4);
  v39 = v77;
  v38(v36, v77, v37);
  v81 = v37;
  v38((uint64_t)v26 + qword_1ED476780, v98, v37);
  v40 = v63;
  v41 = *(void (**)(uint64_t, uint64_t))(v63 + 64);
  swift_retain();
  v41(v28, v40);
  v42 = v61;
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(v30, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v32, v30);
  v44 = v82;
  v43 = v83;
  v45 = AssociatedTypeWitness;
  v46 = swift_getAssociatedConformanceWitness();
  v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 16))(v45, v46);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v42, v45);
  *(uint64_t *)((char *)v26 + qword_1ED4767E8) = v47;
  *(uint64_t *)((char *)v26 + qword_1ED4767C8) = v91;
  *(uint64_t *)((char *)v26 + qword_1ED4767E0) = v85;
  *(uint64_t *)((char *)v26 + qword_1ED476898) = v86;
  *(uint64_t *)((char *)v26 + qword_1ED4769B0) = v87;
  *(uint64_t *)((char *)v26 + qword_1ED4767D0) = v88;
  *(uint64_t *)((char *)v26 + qword_1ED4768A0) = v89;
  *(uint64_t *)((char *)v26 + qword_1ED4767F0) = v90;
  *(uint64_t *)((char *)v26 + qword_1ED476770) = v92;
  *(uint64_t *)((char *)v26 + qword_1ED476798) = v93;
  v48 = v95;
  *(uint64_t *)((char *)v26 + qword_1ED4767D8) = v94;
  *(uint64_t *)((char *)v26 + qword_1ED4767F8) = v48;
  v49 = (uint64_t)v26 + qword_1ED476788;
  *(_QWORD *)v49 = v72;
  *(_BYTE *)(v49 + 8) = v71;
  *(_BYTE *)(v49 + 9) = v70;
  *(_BYTE *)(v49 + 10) = v69;
  *(_BYTE *)(v49 + 11) = v68;
  *(_OWORD *)(v49 + 16) = v57;
  v50 = v75;
  *(_QWORD *)(v49 + 32) = v76;
  *(_QWORD *)(v49 + 40) = v50;
  *(_BYTE *)(v49 + 48) = v74;
  *(_QWORD *)(v49 + 56) = v73;
  *(_OWORD *)(v49 + 64) = v58;
  v51 = (uint64_t)v26 + qword_1ED476790;
  *(_OWORD *)v51 = v59;
  *(_QWORD *)(v51 + 16) = v78;
  v52 = (uint64_t)v26 + qword_1ED476778;
  *(_QWORD *)v52 = v80;
  *(_BYTE *)(v52 + 8) = v79;
  *(uint64_t *)((char *)v26 + *(_QWORD *)(*v26 + 272)) = v44;
  *(uint64_t *)((char *)v26 + *(_QWORD *)(*v26 + 280)) = v96;
  v53 = (uint64_t *)((char *)v26 + *(_QWORD *)(*v26 + 264));
  swift_beginAccess();
  *v53 = v43;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_retain();
  sub_1BB63B810();
  swift_release();
  if (v43)
  {
    swift_retain();
    swift_retain();
    swift_weakAssign();
    sub_1BA631F44();
    swift_release();
    swift_release();
    swift_release_n();
  }
  else
  {
    swift_release();
  }
  swift_release();
  v54 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  v55 = v81;
  v54(v98, v81);
  v54(v39, v55);
  return v26;
}

uint64_t *sub_1BB63BF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t *a19, uint64_t a20,unsigned __int8 **a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  swift_allocObject();
  return sub_1BB63B86C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1BB63C0AC()
{
  return sub_1BB639E80() & 1;
}

uint64_t type metadata accessor for FeedNextCursor.Container(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedNextCursor.Container);
}

void sub_1BB63C0D4()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t method lookup function for FeedCursor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedCursor.__allocating_init(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:parentCursor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t method lookup function for FeedNextCursor()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB63C154()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedAsyncCursor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedAsyncCursor);
}

void sub_1BB63C1D0()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BB63C1E0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB63A630(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t sub_1BB63C200(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB63A7A8(a1, v1[4], v1[2], v1[3]) & 1;
}

unint64_t sub_1BB63C220(uint64_t *a1)
{
  uint64_t *v1;

  return (unint64_t)sub_1BB63A8C4(a1, v1[4], v1[2], v1[3]) & 1;
}

_QWORD *sub_1BB63C240(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v8 = v7;
  v15 = *v7;
  v16 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v16);
  v17 = *a3;
  swift_weakInit();
  v8[2] = a1;
  v8[3] = a2;
  *((_BYTE *)v8 + 32) = v17;
  v8[5] = a4;
  v8[7] = a6;
  v8[8] = a7;
  v19 = *(_QWORD *)(v15 + 80);
  v18 = *(_QWORD *)(v15 + 88);
  type metadata accessor for FeedCursor(255, v19, v18, v20);
  sub_1BB86EAAC();
  sub_1BB86E74C();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v19;
  v21[3] = v18;
  v21[4] = a6;
  v21[5] = a7;
  v21[6] = a1;
  v21[7] = a2;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BA5D1A70();
  v8[6] = sub_1BB86E734();
  swift_weakAssign();
  return v8;
}

uint64_t *sub_1BB63C3A8(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v17;

  v7 = v6;
  v13 = *v7;
  v14 = *a3;
  swift_weakInit();
  type metadata accessor for FeedAsyncCursor(0, *(_QWORD *)(v13 + 80), *(_QWORD *)(v13 + 88), v15);
  v17 = v14;
  swift_allocObject();
  v7[2] = (unint64_t)sub_1BB63C240(a1, a2, &v17, a4, 0, a5, a6) | 0x8000000000000000;
  return v7;
}

uint64_t *sub_1BB63C45C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_allocObject();
  return sub_1BB63C3A8(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1BB63C4D4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB63C500@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB63B220(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), a1);
}

uint64_t sub_1BB63C510@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BB63A314(a1);
}

uint64_t sub_1BB63C528()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1BB63C54C(uint64_t a1)
{
  uint64_t *v1;

  sub_1BB63B354(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1BB63C558()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB63C57C()
{
  return sub_1BB63B3F0();
}

uint64_t sub_1BB63C598()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB63C5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB63B454(a1, a2, *(void (**)(void))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BB63C5D8()
{
  return swift_deallocObject();
}

uint64_t sub_1BB63C5E8@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v2;

  return sub_1BB63B534(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB63C600(uint64_t a1)
{
  return *(_QWORD *)(a1 + qword_1ED4767F8);
}

uint64_t FormatAuxiliaryNode.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatAuxiliaryNode.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void FormatAuxiliaryNode.bind(binder:context:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[4];
  _OWORD v79[2];
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;

  v3 = (_QWORD *)v1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v60 - v10;
  v12 = sub_1BB375CB8();
  if (v2)
  {
    swift_beginAccess();
    if (*(_BYTE *)(v1 + 56) == 1)
      swift_willThrow();
    else

  }
  else
  {
    v13 = v12;
    v76 = v5;
    v14 = (uint64_t *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
    v15 = *(unsigned __int8 *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
    if (v15 == 255 || (v15 & 1) == 0)
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA50AD30((unint64_t *)&qword_1ED3B4C10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    else
    {
      v62 = v8;
      v77 = a1;
      v68 = 0;
      v17 = *v14;
      v75 = v14[1];
      v18 = v14[3];
      v74 = v14[2];
      v19 = v14[4];
      v73 = v14[5];
      swift_beginAccess();
      v63 = v3[2];
      v72 = v3[3];
      v61 = v3 + 6;
      swift_beginAccess();
      v67 = v3;
      v20 = v3[6];
      v21 = *(_QWORD *)(v20 + 16);
      v22 = v6;
      v70 = v6;
      v64 = v19;
      v71 = v13;
      v66 = v15;
      v69 = v18;
      v65 = v17;
      if (v21)
      {
        v23 = v15;
        v24 = MEMORY[0x1E0DEE9D8];
        v25 = v20;
        swift_retain();
        sub_1BA7066DC(v17, v75, v74, v18, v19, v73, v23);
        *(_QWORD *)&v81 = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA76B828(0, v21, 0);
        v26 = v81;
        v27 = *(unsigned __int8 *)(v22 + 80);
        v84 = v25;
        v28 = v25 + ((v27 + 32) & ~v27);
        v29 = *(_QWORD *)(v22 + 72);
        do
        {
          sub_1BA900B30(v28, (uint64_t)v11);
          v30 = swift_allocBox();
          sub_1BA8569CC((uint64_t)v11, v31);
          *(_QWORD *)&v81 = v26;
          v33 = *(_QWORD *)(v26 + 16);
          v32 = *(_QWORD *)(v26 + 24);
          if (v33 >= v32 >> 1)
          {
            sub_1BA76B828(v32 > 1, v33 + 1, 1);
            v26 = v81;
          }
          *(_QWORD *)(v26 + 16) = v33 + 1;
          *(_QWORD *)(v26 + 8 * v33 + 32) = v30 | 0x6000000000000000;
          v28 += v29;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease();
        v22 = v70;
        v18 = v69;
      }
      else
      {
        swift_retain();
        sub_1BA7066DC(v17, v75, v74, v18, v19, v73, v15);
        swift_bridgeObjectRetain();
        v26 = MEMORY[0x1E0DEE9D8];
      }
      v34 = *(_QWORD *)(v18 + 16);
      v35 = MEMORY[0x1E0DEE9D8];
      if (v34)
      {
        *(_QWORD *)&v81 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1BA76B828(0, v34, 0);
        v35 = v81;
        v36 = v18 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
        v84 = *(_QWORD *)(v22 + 72);
        do
        {
          sub_1BA900B30(v36, (uint64_t)v11);
          v37 = swift_allocBox();
          sub_1BA8569CC((uint64_t)v11, v38);
          *(_QWORD *)&v81 = v35;
          v40 = *(_QWORD *)(v35 + 16);
          v39 = *(_QWORD *)(v35 + 24);
          if (v40 >= v39 >> 1)
          {
            sub_1BA76B828(v39 > 1, v40 + 1, 1);
            v35 = v81;
          }
          *(_QWORD *)(v35 + 16) = v40 + 1;
          *(_QWORD *)(v35 + 8 * v40 + 32) = v37 | 0x2000000000000000;
          v36 += v84;
          --v34;
        }
        while (v34);
        v41 = v69;
        swift_bridgeObjectRelease();
      }
      else
      {
        v41 = v18;
      }
      *(_QWORD *)&v81 = v26;
      sub_1BA7082C0(v35);
      v42 = v81;
      v43 = v67;
      swift_beginAccess();
      v44 = v43[5];
      v82 = 0u;
      v83 = 0u;
      v81 = 0u;
      v80 = 0;
      memset(v79, 0, sizeof(v79));
      memset(v78, 0, sizeof(v78));
      swift_bridgeObjectRetain();
      v45 = sub_1BA706104(v63, v72, v42, v44, 0, 0, 0, MEMORY[0x1E0DEE9D8], (uint64_t *)&v81, (uint64_t)v79, v78);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v79, (uint64_t (*)(_QWORD))sub_1BB179EB4);
      v46 = v65;
      v47 = v75;
      *(_QWORD *)&v81 = v65;
      *((_QWORD *)&v81 + 1) = v75;
      v48 = v74;
      *(_QWORD *)&v82 = v74;
      *((_QWORD *)&v82 + 1) = v41;
      v49 = v64;
      v50 = v73;
      *(_QWORD *)&v83 = v64;
      *((_QWORD *)&v83 + 1) = v73;
      sub_1BAB19384((uint64_t *)&v81);
      sub_1BA63333C(v46, v47, v48, v41, v49, v50, v66);
      swift_beginAccess();
      v51 = v43[4];
      v52 = *(_QWORD *)(v51 + 16);
      if (v52)
      {
        swift_bridgeObjectRetain_n();
        v53 = (_QWORD *)(v51 + 64);
        v54 = v68;
        while (1)
        {
          v55 = *v53;
          v81 = *((_OWORD *)v53 - 2);
          v82 = *((_OWORD *)v53 - 1);
          *(_QWORD *)&v83 = v55;
          swift_bridgeObjectRetain();
          swift_retain();
          FormatSourceMapNode.bind(binder:context:)(v77, v45);
          if (v54)
            break;
          v53 += 5;
          swift_bridgeObjectRelease();
          swift_release();
          if (!--v52)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_31;
          }
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        v54 = v68;
LABEL_31:
        v56 = *(_QWORD *)(*v61 + 16);
        v57 = (uint64_t)v62;
        if (v56)
        {
          v58 = *v61 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
          v59 = *(_QWORD *)(v70 + 72);
          v84 = *v61;
          swift_bridgeObjectRetain_n();
          while (1)
          {
            sub_1BA900B30(v58, v57);
            *(_QWORD *)&v81 = *(_QWORD *)(v57 + 16);
            swift_retain();
            FormatOptionValue.bind(binder:context:)(v77, v45);
            if (v54)
              break;
            swift_release();
            sub_1BA4A2E80(v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v58 += v59;
            if (!--v56)
            {
              swift_release();
              swift_bridgeObjectRelease_n();
              goto LABEL_38;
            }
          }
          swift_release();
          sub_1BA4A2E80(v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_release();
LABEL_38:
          swift_release();
        }
      }
    }
    swift_release();
  }
}

uint64_t FormatAuxiliaryNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatAuxiliaryNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatAuxiliaryNode.throws.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t FormatAuxiliaryNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAuxiliaryNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatAuxiliaryNode.children.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAuxiliaryNode.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatAuxiliaryNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAuxiliaryNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatAuxiliaryNode.options.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAuxiliaryNode.options.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatAuxiliaryNode.throws.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatAuxiliaryNode.throws.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatAuxiliaryNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatAuxiliaryNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB63D248(_QWORD *a1)
{
  return FormatAuxiliaryNode.encode(to:)(a1);
}

uint64_t sub_1BB63D268(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed19FormatAuxiliaryNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

void sub_1BB63D274(uint64_t a1)
{
  FormatAuxiliaryNode.bind(binder:context:)(a1);
}

uint64_t sub_1BB63D294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[10];

  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(a2 + 48);
  swift_beginAccess();
  v10 = swift_bridgeObjectRetain();
  sub_1BB3D81F8(v10);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_beginAccess();
    v12 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    sub_1BABEBCF0(a1, v12);
    swift_bridgeObjectRelease();
    result = *v9;
    v13 = *(_QWORD *)(*v9 + 16);
    if (v13)
    {
      v14 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v15 = *(_QWORD *)(v6 + 72);
      v16[1] = result;
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1BA900B30(v14, (uint64_t)v8);
        v16[9] = *((_QWORD *)v8 + 2);
        swift_retain();
        sub_1BAC49F9C();
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v14 += v15;
        --v13;
      }
      while (v13);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BB63D448(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _OWORD v5[2];
  uint64_t v6;
  int v7;
  __int16 v8;

  v3 = *v1;
  memset(v5, 0, sizeof(v5));
  v6 = 0;
  v7 = 0;
  v8 = -16384;
  swift_retain();
  sub_1BB3D9EB0((uint64_t)v5, a1, v3);
  return swift_release();
}

uint64_t sub_1BB63D4B0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C96C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode, (uint64_t)&protocol conformance descriptor for FormatAuxiliaryNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB63D4EC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3C8100, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode, (uint64_t)&protocol conformance descriptor for FormatAuxiliaryNode);
  a1[2] = sub_1BA50AD30(&qword_1ED3A65D0, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode, (uint64_t)&protocol conformance descriptor for FormatAuxiliaryNode);
  result = sub_1BA50AD30(&qword_1EF2C96D0, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode, (uint64_t)&protocol conformance descriptor for FormatAuxiliaryNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB63D564(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C96D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode, (uint64_t)&protocol conformance descriptor for FormatAuxiliaryNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB63D5A0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB63D5EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB63D638@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB63D684@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB63D6D0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 56);
  return result;
}

uint64_t sub_1BB63D714(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 56) = v2;
  return result;
}

uint64_t method lookup function for FormatAuxiliaryNode()
{
  return swift_lookUpClassMethod();
}

void sub_1BB63D760(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for ColorPalette;
  *(_QWORD *)(a1 + 32) = &protocol witness table for ColorPalette;
}

uint64_t sub_1BB63D778()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB63D784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BB63D800()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB63D80C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BB86C67C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SportsDataServiceBatchRequest(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3A8920);
}

uint64_t *sub_1BB63D898(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C67C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    v9 = a3[7];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    if (*(uint64_t *)((char *)a2 + v9 + 24))
    {
      v12 = *v11;
      v13 = v11[1];
      sub_1BA69D44C(*v11, v13);
      *v10 = v12;
      v10[1] = v13;
      v14 = v11[3];
      v10[2] = v11[2];
      v10[3] = v14;
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v16;
    }
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BB63D9A8(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t *v6;

  v4 = sub_1BB86C67C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  v6 = (uint64_t *)(a1 + a2[7]);
  if (v6[3])
  {
    sub_1BA69D314(*v6, v6[1]);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB63DA3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_1BB86C67C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  if (*(_QWORD *)(a2 + v8 + 24))
  {
    v11 = *v10;
    v12 = v10[1];
    sub_1BA69D44C(*v10, v12);
    *v9 = v11;
    v9[1] = v12;
    v13 = v10[3];
    v9[2] = v10[2];
    v9[3] = v13;
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v14;
  }
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB63DB20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v6 = sub_1BB86C67C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = *(_QWORD *)(a1 + v8 + 24);
  v12 = *(_QWORD *)(a2 + v8 + 24);
  if (v11)
  {
    if (v12)
    {
      v13 = *v10;
      v14 = v10[1];
      sub_1BA69D44C(*v10, v14);
      v15 = *v9;
      v16 = v9[1];
      *v9 = v13;
      v9[1] = v14;
      sub_1BA69D314(v15, v16);
      v9[2] = v10[2];
      v9[3] = v10[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB63DC88);
      v19 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v19;
    }
  }
  else if (v12)
  {
    v17 = *v10;
    v18 = v10[1];
    sub_1BA69D44C(*v10, v18);
    *v9 = v17;
    v9[1] = v18;
    v9[2] = v10[2];
    v9[3] = v10[3];
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v20;
  }
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BB63DC88()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C96E0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C96E0);
  }
}

uint64_t sub_1BB63DCF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;

  v6 = sub_1BB86C67C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = a3[8];
  v10 = (_OWORD *)(a1 + v8);
  v11 = (_OWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t sub_1BB63DD90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1BB86C67C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  if (!*(_QWORD *)(a1 + v8 + 24))
    goto LABEL_5;
  if (!*(_QWORD *)(v10 + 24))
  {
    sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))sub_1BB63DC88);
LABEL_5:
    v14 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v14;
    goto LABEL_6;
  }
  v11 = *(_QWORD *)v9;
  v12 = *(_QWORD *)(v9 + 8);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  sub_1BA69D314(v11, v12);
  v13 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v13;
  swift_bridgeObjectRelease();
LABEL_6:
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB63DE88()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB63DE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BB63DF14()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB63DF20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BB86C67C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SportsDataServiceURLRequest(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3A80F0);
}

uint64_t sub_1BB63DFB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BB63E030(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB86DDB0();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1BB63E124();
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

void sub_1BB63E124()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C2210)
  {
    sub_1BB86DDB0();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C2210);
  }
}

uint64_t sub_1BB63E178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86DDB0();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_1BB63E1F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86DDB0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1BB63E124();
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_1BB63E2BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86DDB0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BB63E124();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1BB63E3E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86DDB0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BB63E124();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_1BB63E498(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86DDB0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BB63E124();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1BB63E5AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB63E5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BB63E124();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB63E634()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB63E640(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BB63E124();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataServiceResourceRequest(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3A95A0);
}

void sub_1BB63E6C8()
{
  sub_1BB63F8B0();
}

uint64_t *sub_1BB63E6D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t *, uint64_t);
  int *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1BB86DDB0();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      if (v15(v12, 1, v13))
      {
        sub_1BB63E124();
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_1BB86C67C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      v17 = sub_1BB86C67C();
      v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      v18(a1, a2, v17);
      v19 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
      v18((uint64_t *)((char *)a1 + v19[5]), (uint64_t *)((char *)a2 + v19[5]), v17);
      v18((uint64_t *)((char *)a1 + v19[6]), (uint64_t *)((char *)a2 + v19[6]), v17);
      v20 = v19[7];
      v21 = (uint64_t *)((char *)a1 + v20);
      v22 = (uint64_t *)((char *)a2 + v20);
      if (*(uint64_t *)((char *)a2 + v20 + 24))
      {
        v23 = *v22;
        v24 = v22[1];
        sub_1BA69D44C(*v22, v24);
        *v21 = v23;
        v21[1] = v24;
        v25 = v22[3];
        v21[2] = v22[2];
        v21[3] = v25;
        swift_bridgeObjectRetain();
      }
      else
      {
        v26 = *((_OWORD *)v22 + 1);
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v26;
      }
      v27 = v19[8];
      v28 = (uint64_t *)((char *)a1 + v27);
      v29 = (uint64_t *)((char *)a2 + v27);
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB63E8F4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  int *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      swift_bridgeObjectRelease();
      v7 = a1 + *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
      v8 = sub_1BB86DDB0();
      v9 = *(_QWORD *)(v8 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
      if ((_DWORD)result)
        return result;
      v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
      v12 = v7;
      v10 = v8;
      return v11(v12, v10);
    case 1:
      v10 = sub_1BB86C67C();
      v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
      v12 = a1;
      return v11(v12, v10);
    case 0:
      v3 = sub_1BB86C67C();
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v4(a1, v3);
      v5 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
      v4(a1 + v5[5], v3);
      v4(a1 + v5[6], v3);
      v6 = (uint64_t *)(a1 + v5[7]);
      if (v6[3])
      {
        sub_1BA69D314(*v6, v6[1]);
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1BB63EA30(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *, _QWORD *, uint64_t);
  int *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86DDB0();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_1BB63E124();
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_1BB86C67C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    v14 = sub_1BB86C67C();
    v15 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(a1, a2, v14);
    v16 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
    v15((_QWORD *)((char *)a1 + v16[5]), (_QWORD *)((char *)a2 + v16[5]), v14);
    v15((_QWORD *)((char *)a1 + v16[6]), (_QWORD *)((char *)a2 + v16[6]), v14);
    v17 = v16[7];
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    if (*(_QWORD *)((char *)a2 + v17 + 24))
    {
      v20 = *v19;
      v21 = v19[1];
      sub_1BA69D44C(*v19, v21);
      *v18 = v20;
      v18[1] = v21;
      v22 = v19[3];
      v18[2] = v19[2];
      v18[3] = v22;
      swift_bridgeObjectRetain();
    }
    else
    {
      v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
    }
    v24 = v16[8];
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1BB63EC24(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD *, _QWORD *, uint64_t);
  int *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for SportsDataServiceRequest);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v6 = *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1BB86DDB0();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      if (v11(v8, 1, v9))
      {
        sub_1BB63E124();
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_1BB86C67C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      v13 = sub_1BB86C67C();
      v14 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v14(a1, a2, v13);
      v15 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
      v14((_QWORD *)((char *)a1 + v15[5]), (_QWORD *)((char *)a2 + v15[5]), v13);
      v14((_QWORD *)((char *)a1 + v15[6]), (_QWORD *)((char *)a2 + v15[6]), v13);
      v16 = v15[7];
      v17 = (_QWORD *)((char *)a1 + v16);
      v18 = (_QWORD *)((char *)a2 + v16);
      if (*(_QWORD *)((char *)a2 + v16 + 24))
      {
        v19 = *v18;
        v20 = v18[1];
        sub_1BA69D44C(*v18, v20);
        *v17 = v19;
        v17[1] = v20;
        v17[2] = v18[2];
        v17[3] = v18[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        v21 = *((_OWORD *)v18 + 1);
        *(_OWORD *)v17 = *(_OWORD *)v18;
        *((_OWORD *)v17 + 1) = v21;
      }
      v22 = v15[8];
      v23 = (_QWORD *)((char *)a1 + v22);
      v24 = (_QWORD *)((char *)a2 + v22);
      *v23 = *v24;
      v23[1] = v24[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for SportsDataServiceRequest(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3A7520);
}

_OWORD *sub_1BB63EE5C(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_OWORD *, _OWORD *, uint64_t);
  int *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB86DDB0();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1BB63E124();
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_1BB86C67C();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  }
  else
  {
    v12 = sub_1BB86C67C();
    v13 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
    v13(a1, a2, v12);
    v14 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
    v13((_OWORD *)((char *)a1 + v14[5]), (_OWORD *)((char *)a2 + v14[5]), v12);
    v13((_OWORD *)((char *)a1 + v14[6]), (_OWORD *)((char *)a2 + v14[6]), v12);
    v15 = v14[7];
    v16 = (_OWORD *)((char *)a1 + v15);
    v17 = (_OWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(_OWORD *)((char *)a1 + v14[8]) = *(_OWORD *)((char *)a2 + v14[8]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_1BB63F008(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_OWORD *, _OWORD *, uint64_t);
  int *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for SportsDataServiceRequest);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1BB86DDB0();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_1BB63E124();
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_1BB86C67C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    }
    else
    {
      v12 = sub_1BB86C67C();
      v13 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
      v13(a1, a2, v12);
      v14 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
      v13((_OWORD *)((char *)a1 + v14[5]), (_OWORD *)((char *)a2 + v14[5]), v12);
      v13((_OWORD *)((char *)a1 + v14[6]), (_OWORD *)((char *)a2 + v14[6]), v12);
      v15 = v14[7];
      v16 = (_OWORD *)((char *)a1 + v15);
      v17 = (_OWORD *)((char *)a2 + v15);
      v18 = v17[1];
      *v16 = *v17;
      v16[1] = v18;
      *(_OWORD *)((char *)a1 + v14[8]) = *(_OWORD *)((char *)a2 + v14[8]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB63F1CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for SportsDataServiceURLRequest(319);
  if (v1 <= 0x3F)
  {
    result = sub_1BB86C67C();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for SportsDataServiceResourceRequest(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1BB63F268(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB86DDB0();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1BB63E124();
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_1BB63F358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86DDB0();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_1BB63F3D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86DDB0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    sub_1BB63E124();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_1BB63F49C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86DDB0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BB63E124();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_QWORD *sub_1BB63F5B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86DDB0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BB63E124();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_1BB63F670(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86DDB0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BB63E124();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1BB63F784()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB63F790(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BB63E124();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1BB63F80C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB63F818(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1BB63E124();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataServiceBatchResourceRequest(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3AA588);
}

void sub_1BB63F8A0()
{
  sub_1BB63F8B0();
}

void sub_1BB63F8B0()
{
  unint64_t v0;

  sub_1BB63E124();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *destroy for SportsDataServiceHTTPRequestMethod(uint64_t *result)
{
  if ((unint64_t)result[3] >= 0xFFFFFFFF)
  {
    sub_1BA69D314(*result, result[1]);
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SportsDataServiceHTTPRequestMethod(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int128 v7;

  v4 = a2[3];
  if (v4 < 0xFFFFFFFF)
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    v5 = *a2;
    v6 = a2[1];
    sub_1BA69D44C(*a2, v6);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t *assignWithCopy for SportsDataServiceHTTPRequestMethod(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;

  v4 = a2[3];
  if ((unint64_t)a1[3] < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v9 = *a2;
      v10 = a2[1];
      sub_1BA69D44C(*a2, v10);
      *a1 = v9;
      a1[1] = v10;
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v11;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    sub_1BA69D314(*a1, a1[1]);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v5 = *a2;
  v6 = a2[1];
  sub_1BA69D44C(*a2, v6);
  v7 = *a1;
  v8 = a1[1];
  *a1 = v5;
  a1[1] = v6;
  sub_1BA69D314(v7, v8);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsDataServiceHTTPRequestMethod(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    sub_1BA69D314(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    swift_bridgeObjectRelease();
LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1BA69D314(v5, v6);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsDataServiceHTTPRequestMethod(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SportsDataServiceHTTPRequestMethod(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t sub_1BB63FBE0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1BB63FBF8(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[3] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataServiceHTTPRequestMethod()
{
  return &type metadata for SportsDataServiceHTTPRequestMethod;
}

BOOL sub_1BB63FC2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  v2 = a2[3];
  if (!a1[3])
    return v2 == 0;
  v3 = *a1;
  v4 = a1[1];
  v5 = *a2;
  v6 = a2[1];
  sub_1BA69D44C(*a1, v4);
  if (v2)
  {
    sub_1BA69D44C(v5, v6);
    sub_1BB50E1FC(v3, v4);
    v8 = v7;
    sub_1BA69D314(v5, v6);
    sub_1BA69D314(v3, v4);
    return v8 & 1;
  }
  else
  {
    sub_1BA69D314(v3, v4);
    return 0;
  }
}

uint64_t static CoverView.loading.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = sub_1BB870C24();
  v3 = sub_1BB870C18();
  v4 = MEMORY[0x1E0DBAB20];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v7 = sub_1BB872A24();
  v9 = v8;
  swift_bridgeObjectRelease();
  a1[5] = v7;
  a1[6] = v9;
  v10 = *MEMORY[0x1E0DBC7E0];
  v11 = sub_1BB8716BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
}

uint64_t sub_1BB63FDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = sub_1BB641638(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_release();
  return v4;
}

uint64_t sub_1BB63FE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  char v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v15 = a4;
    v16 = a5;
    swift_bridgeObjectRetain();
    v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v10 = *v9;
      swift_retain();
      swift_retain_n();
      sub_1BA710B08();
      v13 = (v12 & 1) != 0 ? v11(a2, a1) : ((uint64_t (*)(uint64_t))v11)(a2);
      sub_1BA7114E4();
      swift_release();
      if ((v13 & 1) != 0)
        break;
      v9 += 2;
      swift_release();
      swift_release();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        a5 = v16;
        a4 = v15;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    result = swift_release();
    *v16 = v10;
  }
  else
  {
LABEL_9:
    *a5 = a4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BB63FFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  char v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  _QWORD *v22;

  v7 = a5;
  v8 = a4;
  v9 = *(_QWORD *)(a3 + 16);
  if (v9)
  {
    v19 = a6;
    v22 = a7;
    swift_bridgeObjectRetain();
    v11 = (uint64_t *)(a3 + 56);
    while (1)
    {
      v13 = *(v11 - 1);
      v12 = *v11;
      v14 = *(v11 - 2);
      swift_retain();
      swift_retain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BA710B08();
      v17 = (v16 & 1) != 0 ? v15(a2, a1) : ((uint64_t (*)(uint64_t))v15)(a2);
      sub_1BA7114E4();
      swift_release();
      if ((v17 & 1) != 0)
        break;
      v11 += 4;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        a7 = v22;
        v8 = a4;
        v7 = a5;
        a6 = v19;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    result = swift_release();
    *v22 = v14;
    v22[1] = v13;
    v22[2] = v12;
  }
  else
  {
LABEL_9:
    *a7 = v8;
    a7[1] = v7;
    a7[2] = a6;
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BB640164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  char v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v15 = a4;
    v16 = a5;
    swift_bridgeObjectRetain();
    v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v10 = *v9;
      swift_retain();
      swift_retain_n();
      sub_1BA710B08();
      v13 = (v12 & 1) != 0 ? v11(a2, a1) : ((uint64_t (*)(uint64_t))v11)(a2);
      sub_1BA7114E4();
      swift_release();
      if ((v13 & 1) != 0)
        break;
      v9 += 2;
      swift_release();
      swift_release();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        a5 = v16;
        a4 = v15;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    result = swift_release();
    *v16 = v10;
  }
  else
  {
LABEL_9:
    *a5 = a4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BB6402B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  char v11;
  char v12;

  v4 = a4;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v4 = *v9;
      swift_retain();
      swift_retain_n();
      sub_1BA710B08();
      v12 = (v11 & 1) != 0 ? v10(a2, a1) : ((uint64_t (*)(uint64_t))v10)(a2);
      sub_1BA7114E4();
      swift_release();
      if ((v12 & 1) != 0)
        break;
      v9 += 2;
      swift_release();
      swift_release();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        v4 = a4;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_9:
    swift_retain();
  }
  return v4;
}

uint64_t sub_1BB6403E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_1BA71C8F4(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BA725020, (void (*)(uint64_t))sub_1BA725050, a5);
}

uint64_t sub_1BB6403FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  char v11;
  char v12;

  v4 = a4;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v4 = *v9;
      swift_retain();
      swift_retain_n();
      sub_1BA710B08();
      v12 = (v11 & 1) != 0 ? v10(a2, a1) : ((uint64_t (*)(uint64_t))v10)(a2);
      sub_1BA7114E4();
      swift_release();
      if ((v12 & 1) != 0)
        break;
      v9 += 2;
      swift_release();
      swift_release();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        v4 = a4;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_9:
    swift_retain();
  }
  return v4;
}

void static FormatAsyncImageContent.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X11 }
}

uint64_t sub_1BB6405F4@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __int128 v8;
  char v9;
  char v10;

  if (v1 >> 60)
  {
    v10 = 0;
  }
  else
  {
    v3 = *(_BYTE *)(a1 + 56);
    v4 = *(_QWORD *)(a1 + 48);
    v5 = *(_QWORD *)(v1 + 48);
    v6 = *(_BYTE *)(v1 + 56);
    v7 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v2 - 208) = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v2 - 192) = v7;
    *(_QWORD *)(v2 - 176) = v4;
    *(_BYTE *)(v2 - 168) = v3;
    v8 = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v2 - 320) = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v2 - 304) = v8;
    *(_QWORD *)(v2 - 288) = v5;
    *(_BYTE *)(v2 - 280) = v6;
    swift_retain();
    swift_retain();
    _s8NewsFeed22FormatImageNodeBindingO2eeoiySbAC_ACtFZ_0(v2 - 208);
    v10 = v9;
    swift_release();
    swift_release();
  }
  return v10 & 1;
}

_QWORD *sub_1BB640CFC(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19[3];
  char v20;
  char v21;
  uint64_t v22;

  v7 = *(_QWORD *)(a4 + 24);
  v8 = *(_QWORD *)(a4 + 32);
  v9 = *(_BYTE *)(a4 + 41);
  v10 = *(unsigned __int8 *)(a4 + 40);
  v19[0] = *(_QWORD *)(a4 + 16);
  v19[1] = v7;
  v19[2] = v8;
  v20 = v10;
  v21 = v9;
  swift_retain();
  sub_1BB6415C4(v19[0], v7, v8, v10, v9, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  sub_1BA73AA74();
  v12 = v11;
  sub_1BB6415C4(v19[0], v7, v8, v10, v9, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  result = (_QWORD *)swift_release();
  if (!v6)
  {
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1BB641778(v14, a2);
    swift_bridgeObjectRelease();
    v22 = a6;
    swift_retain();
    a2(v19, &v22);
    swift_release();
    v16 = v19[0];
    sub_1BA4AD288(0, &qword_1ED3A73E0, (uint64_t)&type metadata for FormatAccessibilityData, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatCommandActionValue);
    result = (_QWORD *)swift_allocObject();
    result[3] = v15;
    result[4] = v16;
    result[2] = v12;
  }
  return result;
}

_QWORD *sub_1BB640EB4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;

  v7 = *(_QWORD *)(a4 + 24);
  v8 = *(_QWORD *)(a4 + 32);
  v9 = *(_BYTE *)(a4 + 41);
  v10 = *(unsigned __int8 *)(a4 + 40);
  v20 = *(_QWORD *)(a4 + 16);
  v21 = v7;
  v22 = v8;
  v23 = v10;
  v24 = v9;
  swift_retain();
  sub_1BB6415C4(v20, v7, v8, v10, v9, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  sub_1BA73AA74();
  v12 = v11;
  sub_1BB6415C4(v20, v7, v8, v10, v9, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  result = (_QWORD *)swift_release();
  if (!v6)
  {
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1BB641AB8(v14, a2);
    swift_bridgeObjectRelease();
    v25 = a6;
    swift_retain();
    a2(&v20, &v25);
    swift_release();
    v16 = v20;
    v17 = v21;
    sub_1BA4AD288(0, &qword_1ED3A73E8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatCommandActionValue);
    result = (_QWORD *)swift_allocObject();
    result[4] = v16;
    result[5] = v17;
    result[2] = v12;
    result[3] = v15;
  }
  return result;
}

_QWORD *sub_1BB64106C(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19[3];
  char v20;
  char v21;
  uint64_t v22;

  v7 = *(_QWORD *)(a4 + 24);
  v8 = *(_QWORD *)(a4 + 32);
  v9 = *(_BYTE *)(a4 + 41);
  v10 = *(unsigned __int8 *)(a4 + 40);
  v19[0] = *(_QWORD *)(a4 + 16);
  v19[1] = v7;
  v19[2] = v8;
  v20 = v10;
  v21 = v9;
  swift_retain();
  sub_1BB6415C4(v19[0], v7, v8, v10, v9, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  sub_1BA73AA74();
  v12 = v11;
  sub_1BB6415C4(v19[0], v7, v8, v10, v9, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  result = (_QWORD *)swift_release();
  if (!v6)
  {
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1BB641C64(v14, a2);
    swift_bridgeObjectRelease();
    v22 = a6;
    swift_retain();
    a2(v19, &v22);
    swift_release();
    v16 = v19[0];
    sub_1BA4AD288(0, &qword_1EF2C96E8, (uint64_t)&type metadata for FormatMenuGroupableData, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatCommandActionValue);
    result = (_QWORD *)swift_allocObject();
    result[3] = v15;
    result[4] = v16;
    result[2] = v12;
  }
  return result;
}

uint64_t sub_1BB641224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1BB64129C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(__int128 *, __int128 *))static FormatCommandBinding.== infix(_:_:), sub_1BA884954, (uint64_t (*)(__int128 *, __int128 *))static FormatAccessibilityContent.== infix(_:_:)) & 1;
}

uint64_t sub_1BB641260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1BB64129C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(__int128 *, __int128 *))static FormatCommandBinding.== infix(_:_:), sub_1BA8909B0, (uint64_t (*)(__int128 *, __int128 *))static FormatSyncImageContent.== infix(_:_:)) & 1;
}

uint64_t sub_1BB64129C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(__int128 *, __int128 *), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(__int128 *, __int128 *))
{
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  __int128 v22;
  uint64_t v23;
  char v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  char v29;

  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_BYTE *)(a1 + 40);
  v16 = *(_BYTE *)(a1 + 41);
  v17 = *(_QWORD *)(a4 + 32);
  v18 = *(_BYTE *)(a4 + 40);
  v19 = *(_BYTE *)(a4 + 41);
  v26 = *(_OWORD *)(a1 + 16);
  v27 = v14;
  v28 = v15;
  v29 = v16;
  v22 = *(_OWORD *)(a4 + 16);
  v23 = v17;
  v24 = v18;
  v25 = v19;
  if ((a7(&v26, &v22) & 1) != 0 && (a8(a2, a5) & 1) != 0)
  {
    *(_QWORD *)&v26 = a3;
    *(_QWORD *)&v22 = a6;
    v20 = a9(&v26, &v22);
  }
  else
  {
    v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1BB641364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  __int128 v21;
  uint64_t v22;
  char v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  char v28;

  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_BYTE *)(a1 + 40);
  v16 = *(_BYTE *)(a1 + 41);
  v17 = *(_QWORD *)(a5 + 32);
  v18 = *(_BYTE *)(a5 + 40);
  v19 = *(_BYTE *)(a5 + 41);
  v25 = *(_OWORD *)(a1 + 16);
  v26 = v14;
  v27 = v15;
  v28 = v16;
  v21 = *(_OWORD *)(a5 + 16);
  v22 = v17;
  v23 = v18;
  v24 = v19;
  if ((static FormatCommandBinding.== infix(_:_:)(&v25, &v21) & 1) == 0 || (sub_1BA8923A8(a2, a6) & 1) == 0)
    return 0;
  if (a3 == a7 && a4 == a8)
    return 1;
  return sub_1BB874398();
}

unint64_t sub_1BB641458(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA7F6E24();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB64147C()
{
  unint64_t result;

  result = qword_1ED3D09F0;
  if (!qword_1ED3D09F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAsyncImageContent, &type metadata for FormatAsyncImageContent);
    atomic_store(result, (unint64_t *)&qword_1ED3D09F0);
  }
  return result;
}

uint64_t sub_1BB6414C0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 60;
  if (v1 <= 8)
    return v1;
  else
    return (*a1 >> 3) + 9;
}

unint64_t *sub_1BB6414DC(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 9)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 60;
  }
  else
  {
    v2 = 8 * (a2 - 9);
    v3 = 0x9000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatAsyncImageContent()
{
  return &type metadata for FormatAsyncImageContent;
}

uint64_t sub_1BB641518()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB641548()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB64157C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6415A0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB6415C4(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  int v7;

  if ((a5 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch(v7 & 0xFFFFFFFC | (a4 >> 2) & 3)
  {
    case 0u:
      result = sub_1BA856ECC(result, a2, a3, a4, a6);
      break;
    case 3u:
      result = a6();
      break;
    case 6u:
      result = sub_1BA856F00(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      result = a7(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BB641638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v20;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BA740E88(0, v4, 0);
    v5 = v20;
    v7 = a1 + 48;
    do
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v8 = sub_1BA67CC20(a2, a3, a4);
      v10 = v9;
      v12 = v11;
      swift_release();
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(v20 + 16);
      v13 = *(_QWORD *)(v20 + 24);
      if (v14 >= v13 >> 1)
        sub_1BA740E88(v13 > 1, v14 + 1, 1);
      v7 += 24;
      *(_QWORD *)(v20 + 16) = v14 + 1;
      v15 = v20 + 24 * v14;
      *(_QWORD *)(v15 + 32) = v8;
      *(_QWORD *)(v15 + 40) = v10;
      *(_BYTE *)(v15 + 48) = v12 & 1;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_1BB641778(uint64_t a1, void (*a2)(_QWORD *__return_ptr, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v18;
  _QWORD v19[3];
  char v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A7E4(0, v4, 0);
    v5 = v22;
    v7 = (_QWORD *)(a1 + 56);
    while (1)
    {
      v18 = v4;
      v8 = *(v7 - 3);
      v9 = *(v7 - 2);
      v10 = *((_BYTE *)v7 - 8);
      v11 = *v7;
      v19[1] = v8;
      v19[2] = v9;
      v20 = v10;
      v21 = v11;
      sub_1BA73B1CC(v8, v9, v10);
      swift_retain();
      sub_1BA73B1CC(v8, v9, v10);
      a2(v19, &v21);
      if (v3)
        break;
      sub_1BA73B1B8(v8, v9, v10);
      swift_release();
      v12 = v19[0];
      v22 = v5;
      v14 = *(_QWORD *)(v5 + 16);
      v13 = *(_QWORD *)(v5 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BAC7A7E4(v13 > 1, v14 + 1, 1);
        v5 = v22;
      }
      v7 += 4;
      *(_QWORD *)(v5 + 16) = v14 + 1;
      v15 = v5 + 32 * v14;
      *(_QWORD *)(v15 + 32) = v8;
      *(_QWORD *)(v15 + 40) = v9;
      *(_BYTE *)(v15 + 48) = v10;
      *(_QWORD *)(v15 + 56) = v12;
      v3 = 0;
      v4 = v18 - 1;
      if (v18 == 1)
        return v5;
    }
    sub_1BA73B1B8(v8, v9, v10);
    sub_1BA73B1B8(v8, v9, v10);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t sub_1BB641918(uint64_t a1, void (*a2)(_QWORD *__return_ptr, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v18;
  _QWORD v19[3];
  char v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BA73C338(0, v4, 0);
    v5 = v22;
    v7 = (_QWORD *)(a1 + 56);
    while (1)
    {
      v18 = v4;
      v8 = *(v7 - 3);
      v9 = *(v7 - 2);
      v10 = *((_BYTE *)v7 - 8);
      v11 = *v7;
      v19[1] = v8;
      v19[2] = v9;
      v20 = v10;
      v21 = v11;
      sub_1BA73B1CC(v8, v9, v10);
      swift_retain();
      sub_1BA73B1CC(v8, v9, v10);
      a2(v19, &v21);
      if (v3)
        break;
      sub_1BA73B1B8(v8, v9, v10);
      swift_release();
      v12 = v19[0];
      v22 = v5;
      v14 = *(_QWORD *)(v5 + 16);
      v13 = *(_QWORD *)(v5 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BA73C338(v13 > 1, v14 + 1, 1);
        v5 = v22;
      }
      v7 += 4;
      *(_QWORD *)(v5 + 16) = v14 + 1;
      v15 = v5 + 32 * v14;
      *(_QWORD *)(v15 + 32) = v8;
      *(_QWORD *)(v15 + 40) = v9;
      *(_BYTE *)(v15 + 48) = v10;
      *(_QWORD *)(v15 + 56) = v12;
      v3 = 0;
      v4 = v18 - 1;
      if (v18 == 1)
        return v5;
    }
    sub_1BA73B1B8(v8, v9, v10);
    sub_1BA73B1B8(v8, v9, v10);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t sub_1BB641AB8(uint64_t a1, void (*a2)(_QWORD *__return_ptr, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v20;
  _QWORD v21[4];
  char v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AC44(0, v4, 0);
    v5 = v24;
    v7 = (_QWORD *)(a1 + 56);
    while (1)
    {
      v20 = v4;
      v8 = *(v7 - 3);
      v9 = *(v7 - 2);
      v10 = *((_BYTE *)v7 - 8);
      v11 = *v7;
      v21[2] = v8;
      v21[3] = v9;
      v22 = v10;
      v23 = v11;
      sub_1BA73B1CC(v8, v9, v10);
      swift_retain();
      sub_1BA73B1CC(v8, v9, v10);
      a2(v21, &v23);
      if (v3)
        break;
      sub_1BA73B1B8(v8, v9, v10);
      swift_release();
      v12 = v21[0];
      v13 = v21[1];
      v24 = v5;
      v15 = *(_QWORD *)(v5 + 16);
      v14 = *(_QWORD *)(v5 + 24);
      if (v15 >= v14 >> 1)
      {
        v17 = v21[0];
        sub_1BAC7AC44(v14 > 1, v15 + 1, 1);
        v12 = v17;
        v5 = v24;
      }
      v7 += 4;
      *(_QWORD *)(v5 + 16) = v15 + 1;
      v16 = v5 + 40 * v15;
      *(_QWORD *)(v16 + 32) = v8;
      *(_QWORD *)(v16 + 40) = v9;
      *(_BYTE *)(v16 + 48) = v10;
      *(_QWORD *)(v16 + 56) = v12;
      *(_QWORD *)(v16 + 64) = v13;
      v3 = 0;
      v4 = v20 - 1;
      if (v20 == 1)
        return v5;
    }
    sub_1BA73B1B8(v8, v9, v10);
    sub_1BA73B1B8(v8, v9, v10);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t sub_1BB641C64(uint64_t a1, void (*a2)(_QWORD *__return_ptr, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v18;
  _QWORD v19[3];
  char v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B7C0(0, v4, 0);
    v5 = v22;
    v7 = (_QWORD *)(a1 + 56);
    while (1)
    {
      v18 = v4;
      v8 = *(v7 - 3);
      v9 = *(v7 - 2);
      v10 = *((_BYTE *)v7 - 8);
      v11 = *v7;
      v19[1] = v8;
      v19[2] = v9;
      v20 = v10;
      v21 = v11;
      sub_1BA73B1CC(v8, v9, v10);
      swift_retain();
      sub_1BA73B1CC(v8, v9, v10);
      a2(v19, &v21);
      if (v3)
        break;
      sub_1BA73B1B8(v8, v9, v10);
      swift_release();
      v12 = v19[0];
      v22 = v5;
      v14 = *(_QWORD *)(v5 + 16);
      v13 = *(_QWORD *)(v5 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BAC7B7C0(v13 > 1, v14 + 1, 1);
        v5 = v22;
      }
      v7 += 4;
      *(_QWORD *)(v5 + 16) = v14 + 1;
      v15 = v5 + 32 * v14;
      *(_QWORD *)(v15 + 32) = v8;
      *(_QWORD *)(v15 + 40) = v9;
      *(_BYTE *)(v15 + 48) = v10;
      *(_QWORD *)(v15 + 56) = v12;
      v3 = 0;
      v4 = v18 - 1;
      if (v18 == 1)
        return v5;
    }
    sub_1BA73B1B8(v8, v9, v10);
    sub_1BA73B1B8(v8, v9, v10);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t Blueprint<>.adGroupData(for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;

  v39 = a3;
  v37 = a2;
  v4 = sub_1BB871C50();
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v33 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v34 = (char *)&v32 - v10;
  MEMORY[0x1E0C80A78](v11);
  v32 = (char *)&v32 - v12;
  v13 = *(_QWORD *)(a1 + 40);
  v40 = v6;
  v38 = *(_OWORD *)(a1 + 24);
  v41 = v38;
  v42 = v13;
  v14 = sub_1BB86FD0C();
  v15 = sub_1BB873A2C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v32 - v17;
  v19 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v32 - v21;
  sub_1BB86F778();
  sub_1BB86F754();
  sub_1BB871644();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v23 = sub_1BB871C80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v39, 1, 1, v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v18, v14);
    v25 = v32;
    sub_1BB86FCB8();
    v26 = v37;
    (*(void (**)(uint64_t, uint64_t))(v37 + 16))(v6, v37);
    v27 = *(void (**)(char *, uint64_t))(v33 + 8);
    v27(v25, v6);
    v28 = v34;
    sub_1BB86FCB8();
    (*(void (**)(uint64_t, uint64_t))(v26 + 24))(v6, v26);
    v27(v28, v6);
    v29 = v35;
    sub_1BB86FCB8();
    (*(void (**)(uint64_t, uint64_t))(v26 + 32))(v6, v26);
    v27(v29, v6);
    v30 = v39;
    sub_1BB871C5C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v14);
    v31 = sub_1BB871C80();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
}

uint64_t Blueprint<>.adGroupData(for:)@<X0>(uint64_t a1@<X1>, void (**a2)(_QWORD, _QWORD)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  v23 = a3;
  v5 = sub_1BB871C50();
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v22 - v15;
  v17 = *(_QWORD *)(a1 + 40);
  v24 = v6;
  v25 = *(_OWORD *)(a1 + 24);
  v26 = v17;
  sub_1BB86FD0C();
  sub_1BB86FCB8();
  a2[2](v6, a2);
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v16, v6);
  sub_1BB86FCB8();
  a2[3](v6, a2);
  v18(v13, v6);
  sub_1BB86FCB8();
  a2[4](v6, a2);
  v18(v10, v6);
  v19 = v23;
  sub_1BB871C5C();
  v20 = sub_1BB871C80();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
}

ValueMetadata *type metadata accessor for A18_V12()
{
  return &type metadata for A18_V12;
}

uint64_t sub_1BB64232C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C9828, (uint64_t (*)(void))sub_1BB644194, (uint64_t)&type metadata for A18_V12.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB644194();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB6424E0()
{
  sub_1BB644194();
  return sub_1BB874710();
}

uint64_t sub_1BB642508()
{
  sub_1BB644194();
  return sub_1BB87471C();
}

double sub_1BB642530@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB643F80(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB642574(_QWORD *a1)
{
  return sub_1BB64232C(a1);
}

uint64_t sub_1BB642588()
{
  sub_1BB643C9C();
  return sub_1BB86D96C();
}

uint64_t sub_1BB6425F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  unsigned __int8 v61;
  ValueMetadata *v62;
  unint64_t v63;
  uint64_t v64;

  v51 = a2;
  v45 = a1;
  v42 = a3;
  v46 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  MEMORY[0x1E0C80A78](v9);
  v50 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - v12;
  v47 = (uint64_t)&v42 - v12;
  v49 = type metadata accessor for GroupLayoutBindingContext();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v18 = a1;
  v19 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v18, (uint64_t)v19, v20);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v44 = sub_1BB86C8C8();
  v43 = v21;
  (*(void (**)(char *, unint64_t))(v6 + 8))(v8, v46);
  v62 = &type metadata for A18_V12;
  v46 = sub_1BA8EE270();
  v63 = v46;
  LOBYTE(v60) = v15;
  *((_QWORD *)&v60 + 1) = v16;
  v61 = v17;
  type metadata accessor for GroupLayoutKey();
  v22 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v58 = sub_1BB874734();
  v59 = v23;
  v56 = 95;
  v57 = 0xE100000000000000;
  v54 = 45;
  v55 = 0xE100000000000000;
  sub_1BA7114A0();
  v24 = sub_1BB873B04();
  v26 = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 24) = v26;
  v27 = (uint64_t *)(v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v28 = v43;
  *v27 = v44;
  v27[1] = v28;
  sub_1BA4C010C((uint64_t)&v60, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v29 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  v30 = (uint64_t)v19;
  v31 = (uint64_t)v50;
  sub_1BA5193C4(v30, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v29, 0, 1, v49);
  v32 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4(v47, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v32, 0, 1, v53);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
  sub_1BA7C2538(v16, v17);
  v62 = &type metadata for A18_V12;
  v63 = v46;
  LOBYTE(v60) = v15;
  *((_QWORD *)&v60 + 1) = v16;
  v61 = v17;
  sub_1BA4C2DD8(v51, v31, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  v33 = v64;
  v34 = sub_1BA7E1F18((uint64_t)&unk_1E726A2B8, 0, 0, 0, 4, 0, 0, 0);
  if (v33)
  {
    swift_release();
    sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
  }
  else
  {
    v35 = v34;
    v36 = v42;
    v37 = sub_1BA7E1F18((uint64_t)&unk_1E726A2E0, 0, 0, 0, 0, 0, 0, 0);
    v58 = v35;
    sub_1BA7DD6A0(v37);
    v39 = v58;
    v40 = type metadata accessor for A18_V12.Bound();
    v36[3] = v40;
    v36[4] = sub_1BA4A2870(qword_1EF2C9700, (uint64_t (*)(uint64_t))type metadata accessor for A18_V12.Bound, (uint64_t)&unk_1BB936DA8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    *boxed_opaque_existential_0 = v22;
    sub_1BA4CECCC(&v60, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v31, (uint64_t)boxed_opaque_existential_0 + *(int *)(v40 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v40 + 28)) = v39;
  }
  return result;
}

uint64_t sub_1BB642A78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _QWORD v28[2];
  __int128 v29;
  _BYTE *v30;
  uint64_t v31;
  _QWORD v32[4];
  uint64_t v33;
  char v34[105];
  __int128 v35[2];
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[6];

  v2 = v1;
  v30 = a1;
  *(_QWORD *)&v29 = sub_1BB86DA38();
  v3 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A18_V12.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + *(int *)(v8 + 40)) + 16);
  v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BA4C010C(v9 + 16, (uint64_t)&v36);
  sub_1BA4C010C(v9 + 56, (uint64_t)v35);
  v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(&v36, inited + 16);
  sub_1BA4CECCC(v35, inited + 56);
  *(double *)(inited + 96) = v11;
  v34[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v34, v40);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  v13 = *(_QWORD *)(v2 + *(int *)(v6 + 28));
  v32[2] = v2;
  v32[3] = v40;
  swift_bridgeObjectRetain();
  v14 = sub_1BA8A1BE4((void (*)(uint64_t))sub_1BA7F373C, (uint64_t)v32, v13, (uint64_t)&v33);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v36 = v14;
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v16 = v15;
  sub_1BA8F1DA0(&qword_1EF2A9F08, MEMORY[0x1E0DEAF50]);
  v28[1] = v16;
  v17 = sub_1BB8730F0();
  v18 = *MEMORY[0x1E0DB5D88];
  v19 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v5, v18, v19);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0DB6200], v29);
  v31 = v17;
  sub_1BB643D40(0, &qword_1EF2C97A8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v20 = sub_1BB86DB40();
  v29 = v36;
  v21 = v37;
  v22 = v38;
  *(_QWORD *)&v36 = v14;
  *(_QWORD *)&v35[0] = v39;
  MEMORY[0x1E0C80A78](v20);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA8F1DA0((unint64_t *)&qword_1ED3B94C0, MEMORY[0x1E0DEAF38]);
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v23 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v36 = v23;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v24 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v25 = v30;
  *v30 = 0;
  *(_OWORD *)(v25 + 8) = v29;
  *((_QWORD *)v25 + 3) = v21;
  *((_QWORD *)v25 + 4) = v22;
  v26 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v25 + 5) = v24;
  *((_QWORD *)v25 + 6) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t sub_1BB642EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1EF2C97C0, (uint64_t (*)(void))sub_1BB643C58, (uint64_t)&type metadata for A18_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 18;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BB643D40(0, &qword_1EF2C97C8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB643D00(&qword_1EF2C97D0, &qword_1EF2C97C8, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BB642FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v15)(uint64_t, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *, uint64_t);
  uint64_t v35;
  uint64_t v36;

  v32 = a1;
  sub_1BA4CDF6C(0, &qword_1EF2C97C0, (uint64_t (*)(void))sub_1BB643C58, (uint64_t)&type metadata for A18_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v24 - v4);
  v35 = a2;
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    v28 = *MEMORY[0x1E0DB5A38];
    v27 = *MEMORY[0x1E0DB6318];
    v26 = *MEMORY[0x1E0DB6410];
    v25 = *MEMORY[0x1E0DB5C80];
    swift_bridgeObjectRetain();
    v7 = 0;
    v24 = xmmword_1BB87CE70;
    v29 = v6;
    do
    {
      if (*(_QWORD *)(*(_QWORD *)(v35 + 8 * v7 + 32) + 16) == 3)
      {
        v8 = v32;
        v36 = v32;
        v9 = sub_1BB86D438();
        v10 = swift_allocBox();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, v28, v9);
        *v5 = v10;
        v13 = v30;
        v12 = v31;
        v14 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v30 + 104);
        v14(v5, v27, v31);
        v15 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
        sub_1BB643D40(0, &qword_1EF2C97D8, MEMORY[0x1E0DB5A10]);
        v33 = v16;
        sub_1BB643D00(&qword_1EF2C97E0, &qword_1EF2C97D8, v15, MEMORY[0x1E0DB5A18]);
        swift_bridgeObjectRetain();
        sub_1BB86D4EC();
        v34 = *(void (**)(uint64_t *, uint64_t))(v13 + 8);
        v34(v5, v12);
        v36 = v8;
        v14(v5, v26, v12);
        sub_1BB643DBC();
        sub_1BA4CDF6C(0, &qword_1EF2C97F0, (uint64_t (*)(void))sub_1BB643C58, (uint64_t)&type metadata for A18_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
        v18 = v17;
        v19 = *(_QWORD *)(v17 - 8);
        v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = v24;
        v22 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v19 + 104))(v21 + v20, v25, v18);
        MEMORY[0x1E0C80A78](v22);
        sub_1BB86D498();
        swift_bridgeObjectRelease();
        v23 = v12;
        v6 = v29;
        v34(v5, v23);
        swift_bridgeObjectRelease();
      }
      ++v7;
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
  }
}

void sub_1BB64330C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, _QWORD *);
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  unsigned int v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2C97C0, (uint64_t (*)(void))sub_1BB643C58, (uint64_t)&type metadata for A18_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v15 - v7);
  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v17 = *(_QWORD *)(v10 + 72);
    v16 = *MEMORY[0x1E0DB63F8];
    v15[1] = a2;
    swift_bridgeObjectRetain();
    v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    do
    {
      v19 = a1;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = 6;
      *v8 = v13;
      v14 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, v16, v5);
      v18 = v15;
      MEMORY[0x1E0C80A78](v14);
      sub_1BB643D40(0, &qword_1EF2C97D8, v12);
      sub_1BB643D00(&qword_1EF2C97E0, &qword_1EF2C97D8, v12, MEMORY[0x1E0DB5A18]);
      sub_1BB86D4BC();
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
      v11 += v17;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB643508(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, _QWORD *);
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a2;
  v34 = sub_1BB86DA38();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86D93C();
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C97C0, (uint64_t (*)(void))sub_1BB643C58, (uint64_t)&type metadata for A18_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v32 - v14;
  v39 = a1;
  KeyPath = swift_getKeyPath();
  v16 = *MEMORY[0x1E0DB63C0];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v38 = v12;
  v17(v15, v16, v12);
  v18 = (char *)v10 + v8[5];
  v19 = *MEMORY[0x1E0DB61C8];
  v20 = sub_1BB86DA20();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v18, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  v22 = (void **)MEMORY[0x1E0DC4918];
  *v10 = 0;
  *(_QWORD *)((char *)v10 + v8[6]) = 0;
  v23 = *v22;
  *(_QWORD *)((char *)v10 + v8[7]) = v23;
  v24 = qword_1ED3BC390;
  v25 = v23;
  if (v24 != -1)
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v26 = swift_release();
  v27 = MEMORY[0x1E0C80A78](v26);
  v28 = v34;
  *(&v32 - 4) = v33;
  *(&v32 - 3) = (uint64_t)v10;
  v31 = (unint64_t)v7;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v32 + 104))(v4, *MEMORY[0x1E0DB6208], v28, v27);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v37);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  v29 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB643D40(0, &qword_1EF2C97D8, MEMORY[0x1E0DB5A10]);
  sub_1BB643D00(&qword_1EF2C97E0, &qword_1EF2C97D8, v29, MEMORY[0x1E0DB5A18]);
  v31 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v38);
}

uint64_t sub_1BB64388C@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A18_V12.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB64396C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB6425F0(a1, a2, a3);
}

uint64_t sub_1BB643980()
{
  return sub_1BB6909E0();
}

unint64_t sub_1BB643990(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB6439BC();
  result = sub_1BB643A00();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB6439BC()
{
  unint64_t result;

  result = qword_1EF2C96F0;
  if (!qword_1EF2C96F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936CF4, &type metadata for A18_V12);
    atomic_store(result, (unint64_t *)&qword_1EF2C96F0);
  }
  return result;
}

unint64_t sub_1BB643A00()
{
  unint64_t result;

  result = qword_1EF2C96F8;
  if (!qword_1EF2C96F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936D1C, &type metadata for A18_V12);
    atomic_store(result, (unint64_t *)&qword_1EF2C96F8);
  }
  return result;
}

uint64_t type metadata accessor for A18_V12.Bound()
{
  uint64_t result;

  result = qword_1EF2C9760;
  if (!qword_1EF2C9760)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB643A80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB643A8C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB643B08()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB643B14(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB643B88()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB643C14(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C97A0, (uint64_t (*)(uint64_t))type metadata accessor for A18_V12.Bound, (uint64_t)&unk_1BB936D80);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB643C50(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB642EA0(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BB643C58()
{
  unint64_t result;

  result = qword_1EF2C97B0;
  if (!qword_1EF2C97B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936ED8, &type metadata for A18_V12.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2C97B0);
  }
  return result;
}

unint64_t sub_1BB643C9C()
{
  unint64_t result;

  result = qword_1EF2C97B8;
  if (!qword_1EF2C97B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936EA8, &type metadata for A18_V12.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C97B8);
  }
  return result;
}

uint64_t sub_1BB643CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB64388C(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB643CE8()
{
  return swift_deallocObject();
}

void sub_1BB643CF8(uint64_t a1)
{
  uint64_t v1;

  sub_1BB642FF8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB643D00(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB643D40(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB643D40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A18_V12.Layout;
    v8[1] = &type metadata for A18_V12.Layout.Attributes;
    v8[2] = sub_1BB643C58();
    v8[3] = sub_1BB643C9C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB643DBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C97E8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2C97F0, (uint64_t (*)(void))sub_1BB643C58, (uint64_t)&type metadata for A18_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C97E8);
  }
}

void sub_1BB643E30(uint64_t a1)
{
  uint64_t v1;

  sub_1BB64330C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB643E38(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB643508(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V12.Layout.Attributes()
{
  return &type metadata for A18_V12.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V12.Layout()
{
  return &type metadata for A18_V12.Layout;
}

unint64_t sub_1BB643E64()
{
  unint64_t result;

  result = qword_1EF2C97F8;
  if (!qword_1EF2C97F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936E48, &type metadata for A18_V12.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C97F8);
  }
  return result;
}

unint64_t sub_1BB643EAC()
{
  unint64_t result;

  result = qword_1EF2C9800;
  if (!qword_1EF2C9800)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936E20, &type metadata for A18_V12.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C9800);
  }
  return result;
}

unint64_t sub_1BB643EF4()
{
  unint64_t result;

  result = qword_1EF2C9808;
  if (!qword_1EF2C9808)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936DF8, &type metadata for A18_V12.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C9808);
  }
  return result;
}

unint64_t sub_1BB643F3C()
{
  unint64_t result;

  result = qword_1EF2C9810;
  if (!qword_1EF2C9810)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936E70, &type metadata for A18_V12.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C9810);
  }
  return result;
}

uint64_t sub_1BB643F80@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C9818, (uint64_t (*)(void))sub_1BB644194, (uint64_t)&type metadata for A18_V12.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB644194();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB644194()
{
  unint64_t result;

  result = qword_1EF2C9820;
  if (!qword_1EF2C9820)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936FCC, &type metadata for A18_V12.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9820);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A18_V12.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB644224 + 4 * byte_1BB936CE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB644258 + 4 * byte_1BB936CE0[v4]))();
}

uint64_t sub_1BB644258(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB644260(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB644268);
  return result;
}

uint64_t sub_1BB644274(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB64427CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB644280(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB644288(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A18_V12.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V12.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB6442A8()
{
  unint64_t result;

  result = qword_1EF2C9830;
  if (!qword_1EF2C9830)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936FA4, &type metadata for A18_V12.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9830);
  }
  return result;
}

unint64_t sub_1BB6442F0()
{
  unint64_t result;

  result = qword_1EF2C9838;
  if (!qword_1EF2C9838)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936F14, &type metadata for A18_V12.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9838);
  }
  return result;
}

unint64_t sub_1BB644338()
{
  unint64_t result;

  result = qword_1EF2C9840;
  if (!qword_1EF2C9840)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936F3C, &type metadata for A18_V12.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9840);
  }
  return result;
}

uint64_t FormatAnimationData.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatAnimationData.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatAnimationData()
{
  return swift_lookUpClassMethod();
}

BOOL static FormatMenuItemBinding.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_1BB6443F0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB644414();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB644414()
{
  unint64_t result;

  result = qword_1EF2C9848;
  if (!qword_1EF2C9848)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuItemBinding, &type metadata for FormatMenuItemBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C9848);
  }
  return result;
}

unint64_t sub_1BB644458(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEE4070();
  a1[2] = sub_1BAEE4978();
  result = sub_1BB64448C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB64448C()
{
  unint64_t result;

  result = qword_1EF2C9850;
  if (!qword_1EF2C9850)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuItemBinding, &type metadata for FormatMenuItemBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C9850);
  }
  return result;
}

uint64_t sub_1BB6444D0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatMenuItemBinding.init(from:)(a1, a2);
}

uint64_t sub_1BB6444E4(_QWORD *a1)
{
  return FormatMenuItemBinding.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatMenuItemBinding(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB644544 + 4 * byte_1BB937075[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB644578 + 4 * byte_1BB937070[v4]))();
}

uint64_t sub_1BB644578(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB644580(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB644588);
  return result;
}

uint64_t sub_1BB644594(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB64459CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB6445A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6445A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuItemBinding()
{
  return &type metadata for FormatMenuItemBinding;
}

uint64_t TagServiceType.fetchTags(for:qualityOfService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  uint64_t v9;

  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultCachePolicy);
  v9 = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t, uint64_t))(a4 + 32))(a1, v8, a2, a3, a4);

  return v9;
}

uint64_t TagService.__allocating_init(tagController:subscriptionController:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t TagServiceType.fetchTags(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;

  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultCachePolicy);
  v7 = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(a3 + 24))(a1, v6, a2, a3);

  return v7;
}

uint64_t TagServiceType.fetchTags(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = FCCurrentQoSOrUtilityIfMain();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 32))(a1, a2, v8, a3, a4);
}

uint64_t TagServiceType.fetchSubscribedTags()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = FCCurrentQoSOrUtilityIfMain();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 48))(v4, a1, a2);
}

uint64_t TagService.init(tagController:subscriptionController:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t TagService.fetchTag(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v9;

  sub_1BA6EA07C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  v5 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v9 = objc_msgSend(v5, sel_defaultCachePolicy);
  FCCurrentQoSOrUtilityIfMain();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B08C0, (uint64_t (*)(uint64_t))sub_1BA4E0A38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1BB86EA58();
  swift_bridgeObjectRelease();

  v6 = (void *)sub_1BB86E854();
  sub_1BA78682C();
  v7 = sub_1BB86E968();
  swift_release();

  return v7;
}

uint64_t sub_1BB6448C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _BYTE *v4;

  v1 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1BB6453B4();
    swift_allocError();
    *v4 = 1;
    return swift_willThrow();
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1BCCE4630](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    sub_1BA4B07F0(0, &qword_1ED39A598, (uint64_t (*)(uint64_t))sub_1BA78682C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  __break(1u);
  return result;
}

uint64_t TagService.fetchTags(for:cachePolicy:qualityOfService:)()
{
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B08C0, (uint64_t (*)(uint64_t))sub_1BA4E0A38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

void sub_1BB644A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  void *v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  _QWORD v21[6];

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v17 = *(void **)(a5 + 16);
  swift_retain();
  sub_1BA57F420(a6);
  v18 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a3;
  v19[3] = a4;
  v19[4] = sub_1BA573F08;
  v19[5] = v16;
  v19[6] = a6;
  v21[4] = sub_1BB64542C;
  v21[5] = v19;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 1107296256;
  v21[2] = sub_1BB644CA0;
  v21[3] = &block_descriptor_15_0;
  v20 = _Block_copy(v21);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v17, sel_fetchTagsForTagIDs_cachePolicy_qualityOfService_completionHandler_, v18, a7, a8, v20);
  _Block_release(v20);

}

void sub_1BB644BB0(uint64_t a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  id v9;
  id v10;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;

  if (a2)
  {
    v9 = a2;
    ((void (*)(id))a3)(a2);
    v10 = a2;
LABEL_3:

    return;
  }
  if (!a1)
  {
    sub_1BB6453B4();
    v15 = swift_allocError();
    *v16 = 0;
    a3();
    v10 = (id)v15;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1BB0D5D6C(a7, a1);
  swift_bridgeObjectRelease();
  a5(v14);
  swift_bridgeObjectRelease();
}

uint64_t sub_1BB644CA0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BA78682C();
    v4 = sub_1BB87276C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t TagService.cachedDislikedTagIDs()()
{
  return sub_1BB644D44((SEL *)&selRef_mutedTagIDs);
}

uint64_t TagService.cachedSubscribedTagIDs()()
{
  return sub_1BB644D44((SEL *)&selRef_subscribedTagIDs);
}

uint64_t sub_1BB644D44(SEL *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(*(id *)(v1 + 24), *a1);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = v2;
  v4 = sub_1BB872DB4();

  return v4;
}

uint64_t TagService.fetchSubscribedTags(qualityOfService:)()
{
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39C350, (uint64_t (*)(uint64_t))sub_1BB6452D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

void sub_1BB644E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v17[6];

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = *(void **)(a5 + 24);
  swift_retain();
  v14 = (void *)_sSo17OS_dispatch_queueC8NewsFeedE6global16qualityOfServiceABSo09NSQualityhI0V_tFZ_0(a6);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = sub_1BA573F08;
  v15[3] = v12;
  v15[4] = a3;
  v15[5] = a4;
  v17[4] = sub_1BB6453A8;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1BB4FA7AC;
  v17[3] = &block_descriptor_95;
  v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_fetchAllTagsWithCallbackQueue_maximumCachedAge_qualityOfService_completion_, v14, a6, v16, 1.79769313e308);
  _Block_release(v16);

}

void sub_1BB644F34(void *a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(id))
{
  id v8;
  id v9;

  if (a1)
  {
    v9 = a1;
    a3();

  }
  else if (a2)
  {
    v8 = a2;
    a5(a2);

  }
}

uint64_t TagService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t TagService.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1BB645028(uint64_t a1, uint64_t a2)
{
  return TagService.fetchTag(for:)(a1, a2);
}

uint64_t sub_1BB645048()
{
  uint64_t v0;
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCachePolicy);
  FCCurrentQoSOrUtilityIfMain();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B08C0, (uint64_t (*)(uint64_t))sub_1BA4E0A38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v0 = sub_1BB86EA58();

  return v0;
}

uint64_t sub_1BB6450F4()
{
  FCCurrentQoSOrUtilityIfMain();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B08C0, (uint64_t (*)(uint64_t))sub_1BA4E0A38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BB645174()
{
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B08C0, (uint64_t (*)(uint64_t))sub_1BA4E0A38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BB6451E0(uint64_t a1, uint64_t a2)
{
  return sub_1BB645260(a1, a2, (SEL *)&selRef_mutedTagIDs);
}

uint64_t sub_1BB6451EC()
{
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39C350, (uint64_t (*)(uint64_t))sub_1BB6452D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BB645254(uint64_t a1, uint64_t a2)
{
  return sub_1BB645260(a1, a2, (SEL *)&selRef_subscribedTagIDs);
}

uint64_t sub_1BB645260(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  v4 = objc_msgSend(*(id *)(*(_QWORD *)v3 + 24), *a3);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  v5 = v4;
  v6 = sub_1BB872DB4();

  return v6;
}

void sub_1BB6452BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1BB644A4C(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5]);
}

void sub_1BB6452C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BB644E04(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

unint64_t sub_1BB6452D0()
{
  unint64_t result;

  result = qword_1ED39DA78;
  if (!qword_1ED39DA78)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED39DA78);
  }
  return result;
}

uint64_t dispatch thunk of TagServiceType.fetchTag(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of TagServiceType.fetchTags(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TagServiceType.fetchTags(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of TagServiceType.fetchTags(for:cachePolicy:qualityOfService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of TagServiceType.cachedDislikedTagIDs()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TagServiceType.fetchSubscribedTags(qualityOfService:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of TagServiceType.cachedSubscribedTagIDs()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t method lookup function for TagService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TagService.__allocating_init(tagController:subscriptionController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BB645358()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB64537C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB6453A8(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BB644F34(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(id))(v2 + 32));
}

unint64_t sub_1BB6453B4()
{
  unint64_t result;

  result = qword_1EF2C9860;
  if (!qword_1EF2C9860)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB937230, &type metadata for TagService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2C9860);
  }
  return result;
}

uint64_t sub_1BB6453F8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB64542C(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BB644BB0(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t storeEnumTagSinglePayload for TagService.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB645488 + 4 * byte_1BB937165[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB6454BC + 4 * asc_1BB937160[v4]))();
}

uint64_t sub_1BB6454BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6454C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6454CCLL);
  return result;
}

uint64_t sub_1BB6454D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6454E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB6454E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6454EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TagService.Errors()
{
  return &type metadata for TagService.Errors;
}

unint64_t sub_1BB64550C()
{
  unint64_t result;

  result = qword_1EF2C9868;
  if (!qword_1EF2C9868)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB937208, &type metadata for TagService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2C9868);
  }
  return result;
}

unint64_t sub_1BB645568()
{
  unint64_t result;

  result = qword_1ED3CC368;
  if (!qword_1ED3CC368)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9372C4, &type metadata for FormatSlotTransformBehavior);
    atomic_store(result, (unint64_t *)&qword_1ED3CC368);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatSlotTransformBehavior(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB6455F8 + 4 * byte_1BB937275[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB64562C + 4 * byte_1BB937270[v4]))();
}

uint64_t sub_1BB64562C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB645634(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB64563CLL);
  return result;
}

uint64_t sub_1BB645648(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB645650);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB645654(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB64565C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotTransformBehavior()
{
  return &type metadata for FormatSlotTransformBehavior;
}

void SportsDataVisualization.config.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB6456BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = (uint64_t *)(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_config);
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  *v1 = *v2;
  v1[1] = v4;
  v1[2] = v5;
  v1[3] = v6;
  v1[4] = v7;
  v1[5] = v8;
  return sub_1BA99178C(v3, v4);
}

void SportsDataVisualization.event.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB645830()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsDataVisualization.kind.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB645880 + 4 * byte_1BB93739E[*v0 >> 61]))(0x65726F6373, 0xE500000000000000);
}

uint64_t sub_1BB645880()
{
  return 0x676E69646E617473;
}

uint64_t sub_1BB645898()
{
  return 0x74656B63617262;
}

uint64_t sub_1BB6458B0()
{
  return 0x65726F6353786F62;
}

uint64_t sub_1BB6458C8()
{
  return 0x726F6353656E696CLL;
}

uint64_t sub_1BB6458E4()
{
  return 0x65527972756A6E69;
}

uint64_t sub_1BB645904()
{
  return 0x6579616C5079656BLL;
}

void SportsDataVisualization.umcCanonicalId.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB645954@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BB645988()
{
  swift_retain();
  SportsBracketGroupDataVisualization.umcCanonicalId.getter();
  swift_release();
  JUMPOUT(0x1BB645970);
}

void SportsDataVisualization.urlDataSources.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB6459DC()
{
  return swift_bridgeObjectRetain();
}

void SportsDataVisualization.identifier.getter()
{
  uint64_t v1;

  sub_1BB6460AC(0, (unint64_t *)&qword_1ED3C48A8, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], &qword_1ED3CF870);
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

uint64_t sub_1BB645B04()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 - 80) = 0x3A3A65726F6373;
  *(_QWORD *)(v0 - 72) = 0xE700000000000000;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v1);
  swift_release();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v0 - 80);
}

uint64_t SportsDataVisualization.partialSelector.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB645D40 + 4 * byte_1BB9373BA[*v0 >> 61]))(0x65726F6373, 0xE500000000000000);
}

uint64_t sub_1BB645D40()
{
  return 0x676E69646E617473;
}

uint64_t sub_1BB645D58()
{
  return 0x74656B63617262;
}

uint64_t sub_1BB645D70()
{
  return 0x726F63732D786F62;
}

uint64_t sub_1BB645D8C()
{
  return 0x6F63732D656E696CLL;
}

uint64_t sub_1BB645DA8()
{
  return 0x722D7972756A6E69;
}

uint64_t sub_1BB645DCC()
{
  return 0x79616C702D79656BLL;
}

void SportsDataVisualization.configuredEmbedUrl.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB645E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_embedUrl;
  v3 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v1, v2, v3);
}

void SportsDataVisualization.embedUrl.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB645F7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_embedUrl;
  v3 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v1, v2, v3);
}

void SportsDataVisualization.type.getter(_BYTE *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1 >> 61;
}

void sub_1BB6460AC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BA4C576C(255, a3);
    sub_1BB64613C(a5, a3, a4, MEMORY[0x1E0DEAF50]);
    v9 = sub_1BB86EC80();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BB64613C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA4C576C(255, a2);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SportsDataVisualization.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1BB64730C(0, &qword_1ED3AB438, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB647260();
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BB6472A4();
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB6462C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for SportsScoreDataVisualization();
  *(_BYTE *)(v5 - 65) = 1;
  sub_1BA4A2870((unint64_t *)&unk_1ED3A8558, (uint64_t (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsScoreDataVisualization);
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v1 = v7;
    JUMPOUT(0x1BB646280);
  }
  JUMPOUT(0x1BB646270);
}

void sub_1BB646358()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for SportsStandingDataVisualization();
  *(_BYTE *)(v5 - 65) = 1;
  sub_1BA4A2870(&qword_1EF2C9878, (uint64_t (*)(uint64_t))type metadata accessor for SportsStandingDataVisualization, (uint64_t)&protocol conformance descriptor for SportsStandingDataVisualization);
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v1 = v7 | 0x2000000000000000;
    JUMPOUT(0x1BB646280);
  }
  JUMPOUT(0x1BB646270);
}

void sub_1BB6463EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for SportsBracketGroupDataVisualization();
  *(_BYTE *)(v5 - 65) = 1;
  sub_1BA4A2870(&qword_1EF2C9870, (uint64_t (*)(uint64_t))type metadata accessor for SportsBracketGroupDataVisualization, (uint64_t)&protocol conformance descriptor for SportsBracketGroupDataVisualization);
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v1 = v7 | 0x4000000000000000;
    JUMPOUT(0x1BB646280);
  }
  JUMPOUT(0x1BB646270);
}

void sub_1BB646480()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for SportsBoxScoreDataVisualization();
  *(_BYTE *)(v5 - 65) = 1;
  sub_1BA4A2870(&qword_1EF2C1130, (uint64_t (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsBoxScoreDataVisualization);
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v1 = v7 | 0x6000000000000000;
    JUMPOUT(0x1BB646280);
  }
  JUMPOUT(0x1BB646270);
}

void sub_1BB646514()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for SportsLineScoreDataVisualization();
  *(_BYTE *)(v5 - 65) = 1;
  sub_1BA4A2870(&qword_1EF2C1140, (uint64_t (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsLineScoreDataVisualization);
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v1 = v7 | 0x8000000000000000;
    JUMPOUT(0x1BB646280);
  }
  JUMPOUT(0x1BB646270);
}

void sub_1BB6465A8()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for SportsInjuryReportDataVisualization();
  *(_BYTE *)(v5 - 65) = 1;
  sub_1BA4A2870(&qword_1EF2C1150, (uint64_t (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization, (uint64_t)&protocol conformance descriptor for SportsInjuryReportDataVisualization);
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v1 = v7 | 0xA000000000000000;
    JUMPOUT(0x1BB646280);
  }
  JUMPOUT(0x1BB646270);
}

void sub_1BB646640()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for SportsKeyPlayerDataVisualization();
  *(_BYTE *)(v5 - 65) = 1;
  sub_1BA4A2870(&qword_1EF2C1160, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization, (uint64_t)&protocol conformance descriptor for SportsKeyPlayerDataVisualization);
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v1 = v7 | 0xC000000000000000;
    JUMPOUT(0x1BB646280);
  }
  JUMPOUT(0x1BB646270);
}

void SportsDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BB64730C(0, &qword_1ED3AB6B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  MEMORY[0x1E0C80A78](v3);
  v4 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB647260();
  sub_1BB8746C8();
  __asm { BR              X10 }
}

uint64_t sub_1BB646798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v4 + 16);
  *(_BYTE *)(v5 - 88) = 0;
  *(_BYTE *)(v5 - 65) = 0;
  sub_1BB647368();
  swift_retain();
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)(v5 - 88) = v6;
    *(_BYTE *)(v5 - 65) = 1;
    type metadata accessor for SportsScoreDataVisualization();
    sub_1BA4A2870(&qword_1ED3A8550, (uint64_t (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsScoreDataVisualization);
    sub_1BB8741AC();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return swift_release();
}

uint64_t sub_1BB646B70@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB646BCC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB646C2C()
{
  sub_1BB647260();
  return sub_1BB874710();
}

uint64_t sub_1BB646C54()
{
  sub_1BB647260();
  return sub_1BB87471C();
}

void sub_1BB646C7C(char *a1)
{
  sub_1BB7F5828(*a1);
}

void sub_1BB646C88()
{
  char *v0;

  sub_1BAB08A80(0, *v0);
}

void sub_1BB646C94()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB646CCC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB646D84(uint64_t a1)
{
  char *v1;

  sub_1BAB08A80(a1, *v1);
}

uint64_t sub_1BB646D8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB64850C();
  *a1 = result;
  return result;
}

uint64_t sub_1BB646DB8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB646DE4 + 4 * byte_1BB9373E4[*v0]))();
}

void sub_1BB646DE4(_QWORD *a1@<X8>)
{
  *a1 = 0x676E69646E617473;
  a1[1] = 0xE800000000000000;
}

void sub_1BB646E00(_QWORD *a1@<X8>)
{
  *a1 = 0x74656B63617262;
  a1[1] = 0xE700000000000000;
}

void sub_1BB646E1C(_QWORD *a1@<X8>)
{
  *a1 = 0x65726F6353786F62;
  a1[1] = 0xE800000000000000;
}

void sub_1BB646E38(_QWORD *a1@<X8>)
{
  *a1 = 0x726F6353656E696CLL;
  a1[1] = 0xE900000000000065;
}

void sub_1BB646E58(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "injuryReport");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1BB646E7C(_QWORD *a1@<X8>)
{
  *a1 = 0x6579616C5079656BLL;
  a1[1] = 0xE900000000000072;
}

uint64_t sub_1BB646EA0()
{
  sub_1BB6476BC();
  return sub_1BB872D60();
}

uint64_t sub_1BB646EFC()
{
  sub_1BB6476BC();
  return sub_1BB872D0C();
}

uint64_t sub_1BB646F48(_QWORD *a1)
{
  return SportsDataVisualization.init(from:)(a1);
}

void sub_1BB646F5C(_QWORD *a1)
{
  SportsDataVisualization.encode(to:)(a1);
}

uint64_t SportsDataVisualization.hash(into:)()
{
  SportsDataVisualization.identifier.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t SportsDataVisualization.hashValue.getter()
{
  sub_1BB8745CC();
  SportsDataVisualization.identifier.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB647024()
{
  sub_1BB8745CC();
  SportsDataVisualization.identifier.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB647088()
{
  SportsDataVisualization.identifier.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB6470D8()
{
  sub_1BB8745CC();
  SportsDataVisualization.identifier.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void _s8NewsFeed23SportsDataVisualizationO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB647170()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (v0 >> 61)
  {
    v7 = 0;
  }
  else
  {
    SportsDataVisualization.identifier.getter();
    v2 = v1;
    v4 = v3;
    SportsDataVisualization.identifier.getter();
    if (v2 == v6 && v4 == v5)
      v7 = 1;
    else
      v7 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7 & 1;
}

unint64_t sub_1BB647260()
{
  unint64_t result;

  result = qword_1ED3A7328;
  if (!qword_1ED3A7328)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93770C, &type metadata for SportsDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A7328);
  }
  return result;
}

unint64_t sub_1BB6472A4()
{
  unint64_t result;

  result = qword_1ED3A7350;
  if (!qword_1ED3A7350)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9376E4, &type metadata for SportsDataVisualization.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A7350);
  }
  return result;
}

uint64_t sub_1BB6472E8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BB64730C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB647260();
    v7 = a3(a1, &type metadata for SportsDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB647368()
{
  unint64_t result;

  result = qword_1ED3A7340;
  if (!qword_1ED3A7340)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9376BC, &type metadata for SportsDataVisualization.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A7340);
  }
  return result;
}

unint64_t sub_1BB6473B0()
{
  unint64_t result;

  result = qword_1ED3ABCF8;
  if (!qword_1ED3ABCF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualization, &type metadata for SportsDataVisualization);
    atomic_store(result, (unint64_t *)&qword_1ED3ABCF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualization()
{
  return &type metadata for SportsDataVisualization;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualization.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB647450 + 4 * byte_1BB9373F7[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB647484 + 4 * byte_1BB9373F2[v4]))();
}

uint64_t sub_1BB647484(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB64748C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB647494);
  return result;
}

uint64_t sub_1BB6474A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6474A8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB6474AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6474B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualization.CodingType()
{
  return &type metadata for SportsDataVisualization.CodingType;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB64751C + 4 * byte_1BB937401[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB647550 + 4 * byte_1BB9373FC[v4]))();
}

uint64_t sub_1BB647550(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB647558(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB647560);
  return result;
}

uint64_t sub_1BB64756C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB647574);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB647578(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB647580(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualization.CodingKeys()
{
  return &type metadata for SportsDataVisualization.CodingKeys;
}

unint64_t sub_1BB6475A0()
{
  unint64_t result;

  result = qword_1EF2C9890;
  if (!qword_1EF2C9890)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9375F4, &type metadata for SportsDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9890);
  }
  return result;
}

unint64_t sub_1BB6475E8()
{
  unint64_t result;

  result = qword_1EF2C9898;
  if (!qword_1EF2C9898)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB937694, &type metadata for SportsDataVisualization.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2C9898);
  }
  return result;
}

unint64_t sub_1BB647630()
{
  unint64_t result;

  result = qword_1ED3A7338;
  if (!qword_1ED3A7338)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93752C, &type metadata for SportsDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A7338);
  }
  return result;
}

unint64_t sub_1BB647678()
{
  unint64_t result;

  result = qword_1ED3A7330;
  if (!qword_1ED3A7330)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB937554, &type metadata for SportsDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A7330);
  }
  return result;
}

unint64_t sub_1BB6476BC()
{
  unint64_t result;

  result = qword_1ED3A7348;
  if (!qword_1ED3A7348)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93761C, &type metadata for SportsDataVisualization.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A7348);
  }
  return result;
}

_QWORD *sub_1BB647700(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;

  sub_1BB6460AC(0, &qword_1EF2C98A0, (unint64_t *)&unk_1EF2B13F0, (uint64_t)&type metadata for FormatInspectionGroup, &qword_1EF2C98A8);
  MEMORY[0x1E0C80A78](v3);
  if ((~*a2 & 0xF000000000000007) != 0)
    __asm { BR              X11 }
  return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
}

_QWORD *sub_1BB6477D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87A390;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
  sub_1BA8C88C8(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  swift_retain();
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x65726F6353, 0xE500000000000000, (_QWORD *)(v7 + v6));
  v8 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7 + v6, 0, 1, v8);
  sub_1BAF89090(0xD000000000000019, 0x80000001BB98E7D0, 0, 0, v7, (_QWORD *)(v1 - 128));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v3 + 56) = v0;
  *(_QWORD *)(v3 + 64) = &off_1E72D2F60;
  v9 = swift_allocObject();
  *(_QWORD *)(v3 + 32) = v9;
  v10 = *(_OWORD *)(v1 - 112);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v1 - 128);
  *(_OWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v1 - 96);
  v11 = swift_retain();
  v12 = sub_1BB725FD8(v11);
  swift_release();
  *(_QWORD *)(v3 + 96) = &type metadata for FormatInspection;
  *(_QWORD *)(v3 + 104) = &off_1E7335C38;
  *(_QWORD *)(v3 + 72) = v12;
  v13 = sub_1BB6DF010(v3);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_release();
  return v13;
}

uint64_t sub_1BB64850C()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1BB648554()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB648588@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1BB721AD4(a1, a2);
}

uint64_t static FormatContentSubgroupFilterRequirements.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t FormatContentSubgroupFilterRequirements.minNumberOfItems.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_1BB6485E0()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB6485FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB648C74(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BB648624()
{
  sub_1BB64876C();
  return sub_1BB874710();
}

uint64_t sub_1BB64864C()
{
  sub_1BB64876C();
  return sub_1BB87471C();
}

uint64_t FormatContentSubgroupFilterRequirements.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB6488DC(0, &qword_1ED3AB7A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB64876C();
  sub_1BB8746C8();
  sub_1BB874140();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BB64876C()
{
  unint64_t result;

  result = qword_1ED3AA750;
  if (!qword_1ED3AA750)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93790C, &type metadata for FormatContentSubgroupFilterRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA750);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterRequirements.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v14;

  sub_1BB6488DC(0, &qword_1ED3AB588, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB64876C();
  sub_1BB87468C();
  if (!v2)
  {
    v10 = sub_1BB874050();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v12 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB6488DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB64876C();
    v7 = a3(a1, &type metadata for FormatContentSubgroupFilterRequirements.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB648938(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BB173ED0();
  a1[2] = sub_1BB173F68();
  result = sub_1BB64896C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB64896C()
{
  unint64_t result;

  result = qword_1EF2C98B0;
  if (!qword_1EF2C98B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterRequirements, &type metadata for FormatContentSubgroupFilterRequirements);
    atomic_store(result, (unint64_t *)&qword_1EF2C98B0);
  }
  return result;
}

uint64_t sub_1BB6489B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSubgroupFilterRequirements.init(from:)(a1, a2);
}

uint64_t sub_1BB6489C4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB6488DC(0, &qword_1ED3AB7A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB64876C();
  sub_1BB8746C8();
  sub_1BB874140();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BB648ABC(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (*(_BYTE *)(a2 + 8))
      return 1;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v2 = 1;
    if ((v2 & 1) == 0)
      return 1;
  }
  return 0;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterRequirements()
{
  return &type metadata for FormatContentSubgroupFilterRequirements;
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroupFilterRequirements.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB648B40 + 4 * byte_1BB937760[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB648B60 + 4 * byte_1BB937765[v4]))();
}

_BYTE *sub_1BB648B40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB648B60(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB648B68(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB648B70(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB648B78(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB648B80(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterRequirements.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterRequirements.CodingKeys;
}

unint64_t sub_1BB648BA0()
{
  unint64_t result;

  result = qword_1EF2C98B8;
  if (!qword_1EF2C98B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9378E4, &type metadata for FormatContentSubgroupFilterRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C98B8);
  }
  return result;
}

unint64_t sub_1BB648BE8()
{
  unint64_t result;

  result = qword_1ED3AA760;
  if (!qword_1ED3AA760)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB937854, &type metadata for FormatContentSubgroupFilterRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA760);
  }
  return result;
}

unint64_t sub_1BB648C30()
{
  unint64_t result;

  result = qword_1ED3AA758;
  if (!qword_1ED3AA758)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93787C, &type metadata for FormatContentSubgroupFilterRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA758);
  }
  return result;
}

uint64_t sub_1BB648C74(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BB959980)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t FormatFontScalingData.maxSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void FormatFontScalingData.style.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 9);
}

uint64_t FormatFontScalingStyle.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB648D48 + 4 * byte_1BB937978[*v0]))(2036625250, 0xE400000000000000);
}

uint64_t sub_1BB648D48()
{
  return 0x74756F6C6C6163;
}

uint64_t sub_1BB648D60()
{
  return 0x316E6F6974706163;
}

uint64_t sub_1BB648D78()
{
  return 0x326E6F6974706163;
}

uint64_t sub_1BB648D90()
{
  return 0x65746F6E746F6F66;
}

uint64_t sub_1BB648DA8()
{
  return 0x656E696C64616568;
}

uint64_t sub_1BB648DC0()
{
  return 0x6C64616568627573;
}

uint64_t sub_1BB648DE0()
{
  return 0x746954656772616CLL;
}

uint64_t sub_1BB648DFC()
{
  return 0x31656C746974;
}

uint64_t sub_1BB648E10()
{
  return 0x32656C746974;
}

uint64_t sub_1BB648E24()
{
  return 0x33656C746974;
}

uint64_t sub_1BB648E38()
{
  return 0x326E6F6974636573;
}

uint64_t sub_1BB648E50()
{
  sub_1BB8745CC();
  FormatFontScalingStyle.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB648EB4()
{
  FormatFontScalingStyle.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB648F04()
{
  sub_1BB8745CC();
  FormatFontScalingStyle.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB648F64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatFontScalingStyle.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BB648F8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F6198(*a1, *a2);
}

uint64_t _s8NewsFeed17FormatFontScalingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __int16 v2;
  __int16 v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_WORD *)(a1 + 8);
  v3 = *(_WORD *)(a2 + 8);
  if ((v2 & 0xFF00) == 0xC00)
    return (v3 & 0xFF00) == 3072;
  if ((v3 & 0xFF00) == 0xC00)
    return 0;
  if ((v2 & 1) != 0)
  {
    if ((v3 & 1) == 0)
      return 0;
  }
  else if ((v3 & 1) != 0 || *(double *)a1 != *(double *)a2)
  {
    return 0;
  }
  v5 = FormatFontScalingStyle.rawValue.getter();
  v7 = v6;
  if (v5 == FormatFontScalingStyle.rawValue.getter() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  v9 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v9 & 1) != 0;
}

uint64_t _s8NewsFeed21FormatFontScalingDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
    {
LABEL_3:
      v3 = 0;
      return v3 & 1;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      goto LABEL_3;
  }
  v4 = FormatFontScalingStyle.rawValue.getter();
  v6 = v5;
  if (v4 == FormatFontScalingStyle.rawValue.getter() && v6 == v7)
    v3 = 1;
  else
    v3 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

unint64_t sub_1BB649164(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB649188();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB649188()
{
  unint64_t result;

  result = qword_1EF2C98C0;
  if (!qword_1EF2C98C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScaling, &type metadata for FormatFontScaling);
    atomic_store(result, (unint64_t *)&qword_1EF2C98C0);
  }
  return result;
}

uint64_t sub_1BB6491CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA610304, (uint64_t (*)(void))sub_1BA6745B0, (uint64_t (*)(void))sub_1BB6491E8);
}

unint64_t sub_1BB6491E8()
{
  unint64_t result;

  result = qword_1EF2C98C8;
  if (!qword_1EF2C98C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScaling, &type metadata for FormatFontScaling);
    atomic_store(result, (unint64_t *)&qword_1EF2C98C8);
  }
  return result;
}

unint64_t sub_1BB64922C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB649250();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB649250()
{
  unint64_t result;

  result = qword_1EF2C98D0;
  if (!qword_1EF2C98D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScalingData, &type metadata for FormatFontScalingData);
    atomic_store(result, (unint64_t *)&qword_1EF2C98D0);
  }
  return result;
}

uint64_t sub_1BB649294(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA5B4A08, (uint64_t (*)(void))sub_1BA5ACC3C, (uint64_t (*)(void))sub_1BB6492B0);
}

unint64_t sub_1BB6492B0()
{
  unint64_t result;

  result = qword_1EF2C98D8;
  if (!qword_1EF2C98D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScalingData, &type metadata for FormatFontScalingData);
    atomic_store(result, (unint64_t *)&qword_1EF2C98D8);
  }
  return result;
}

unint64_t sub_1BB6492F8()
{
  unint64_t result;

  result = qword_1EF2C98E0;
  if (!qword_1EF2C98E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScalingStyle, &type metadata for FormatFontScalingStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2C98E0);
  }
  return result;
}

unint64_t sub_1BB64933C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB649368();
  result = sub_1BA517F00();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB649368()
{
  unint64_t result;

  result = qword_1EF2C98E8;
  if (!qword_1EF2C98E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScalingStyle, &type metadata for FormatFontScalingStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2C98E8);
  }
  return result;
}

unint64_t sub_1BB6493AC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6493D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6493D0()
{
  unint64_t result;

  result = qword_1EF2C98F0;
  if (!qword_1EF2C98F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScalingStyle, &type metadata for FormatFontScalingStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2C98F0);
  }
  return result;
}

uint64_t sub_1BB649414(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA5B4E4C, (uint64_t (*)(void))sub_1BA5F41DC, (uint64_t (*)(void))sub_1BB6492F8);
}

uint64_t getEnumTagSinglePayload for FormatFontScaling(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF4 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 244);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 >= 0xC;
  v5 = v3 - 12;
  if (!v4)
    v5 = -1;
  if (v5 + 1 >= 2)
    return v5;
  else
    return 0;
}

uint64_t sub_1BB649474(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 9);
  if (v1 >= 0xC)
    return v1 - 11;
  else
    return 0;
}

uint64_t sub_1BB649488(uint64_t result, unsigned int a2)
{
  if (a2 > 0xF4)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 245;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 9) = a2 + 11;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFontScaling()
{
  return &type metadata for FormatFontScaling;
}

uint64_t getEnumTagSinglePayload for FormatFontScalingData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF5 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 245);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 >= 0xC;
  v5 = v3 - 12;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FormatFontScalingData()
{
  return &type metadata for FormatFontScalingData;
}

ValueMetadata *type metadata accessor for FormatFontScalingStyle()
{
  return &type metadata for FormatFontScalingStyle;
}

uint64_t initializeWithCopy for FormatSourceMap(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatSourceMap(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for FormatSourceMap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatDebuggerBreakpoint()
{
  return &type metadata for FormatDebuggerBreakpoint;
}

uint64_t sub_1BB649600(unint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  unint64_t v7;
  uint64_t v8;

  if ((a6 & 1) == 0)
  {
    if ((a3 & 1) == 0)
    {
      v7 = a1;
      v8 = a4;
      return static FormatOptionValue.< infix(_:_:)(&v8, &v7) & 1;
    }
    return 0;
  }
  if ((a3 & 1) == 0 || a4 == a1 && a5 == a2)
    return 0;
  return sub_1BB874398();
}

void sub_1BB649670(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB6496C4@<X0>(unsigned __int8 a1@<W8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BB64972C + 4 * byte_1BB937D04[a1]))(0x64657375636F66);
}

uint64_t sub_1BB64972C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64657375636F66 && v1 == 0xE700000000000000)
    v2 = 0;
  else
    v2 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BB6497D8(char a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if ((a2 & 1) != 0)
    v3 = 0x73676E69646E6962;
  else
    v3 = 0x736E6F6974706FLL;
  if ((a2 & 1) != 0)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a1 & 1) != 0)
    v5 = 0x73676E69646E6962;
  else
    v5 = 0x736E6F6974706FLL;
  if ((a1 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 0;
  else
    v7 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1BB649880(char a1, char a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  LOBYTE(v2) = a1;
  v3 = 0xD000000000000014;
  v4 = 0x80000001BB95C6D0;
  if (a2)
  {
    if (a2 == 1)
      v5 = 0xD000000000000021;
    else
      v5 = 0x7461636572706564;
    if (a2 == 1)
      v6 = 0x80000001BB95C6F0;
    else
      v6 = 0xEA00000000006465;
    v2 = v2;
    if (!(_BYTE)v2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000014;
  v6 = 0x80000001BB95C6D0;
  v2 = v2;
  if ((_BYTE)v2)
  {
LABEL_9:
    if (v2 == 1)
      v3 = 0xD000000000000021;
    else
      v3 = 0x7461636572706564;
    if (v2 == 1)
      v4 = 0x80000001BB95C6F0;
    else
      v4 = 0xEA00000000006465;
  }
LABEL_15:
  if (v5 == v3 && v6 == v4)
    v7 = 0;
  else
    v7 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1BB649994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a5 != a1 || a6 != a2) && (sub_1BB874398() & 1) == 0)
    return sub_1BB874398();
  if (a7 == a3)
    return a8 < a4;
  return a7 < a3;
}

uint64_t sub_1BB649A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = FormatFontTrait.rawValue.getter();
  v2 = v1;
  if (v0 == FormatFontTrait.rawValue.getter() && v2 == v3)
    v5 = 0;
  else
    v5 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BB649AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, uint64_t);
  char v23;
  _QWORD v25[2];

  v4 = sub_1BB86EB84();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB4DC8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - v10;
  sub_1BA6C1CE8();
  v13 = v12;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(int *)(type metadata accessor for FormatMetadata() + 28);
  v25[0] = a1;
  v25[1] = a2;
  v17 = a1 + v16;
  v18 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_1BA57B488(a2 + v16, (uint64_t)v15, &qword_1ED3B0930, v5);
  sub_1BA57B488(v17, v18, &qword_1ED3B0930, v5);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  LODWORD(a2) = v19(v15, 1, v4);
  v20 = v19((char *)v18, 1, v4);
  if ((_DWORD)a2 == 1)
  {
    if (v20 == 1)
    {
      sub_1BB86EB3C();
      sub_1BA5DB598();
      v23 = sub_1BB87291C();
    }
    else
    {
      sub_1BA502AD0(v18, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
      v23 = 0;
    }
  }
  else if (v20 == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v4);
    v23 = 1;
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v21(v11, v15, v4);
    v21(v8, (char *)v18, v4);
    sub_1BA5DB598();
    v23 = sub_1BB87291C();
    v22 = *(void (**)(char *, uint64_t))(v6 + 8);
    v22(v8, v4);
    v22(v11, v4);
  }
  return v23 & 1;
}

uint64_t sub_1BB649D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = FormatItemKind.description.getter();
  v2 = v1;
  if (v0 == FormatItemKind.description.getter() && v2 == v3)
    v5 = 0;
  else
    v5 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_1BB649DEC(unint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  char v6;
  unint64_t v8;
  uint64_t v9;

  if ((a6 & 1) != 0)
  {
    if ((a3 & 1) != 0 && (a4 != a1 || a5 != a2))
    {
      v6 = sub_1BB874398();
      return (v6 & 1) == 0;
    }
    goto LABEL_7;
  }
  if ((a3 & 1) != 0)
  {
LABEL_7:
    v6 = 0;
    return (v6 & 1) == 0;
  }
  v8 = a1;
  v9 = a4;
  v6 = static FormatOptionValue.< infix(_:_:)(&v9, &v8);
  return (v6 & 1) == 0;
}

void sub_1BB649E64(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB649EB8@<X0>(unsigned __int8 a1@<W8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BB649F20 + 4 * byte_1BB937D0C[a1]))(0x64657375636F66);
}

uint64_t sub_1BB649F20(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;

  if (a1 == 0x64657375636F66 && v1 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease_n();
    v2 = 1;
  }
  else
  {
    v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1BB649FD8(char a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  if ((a2 & 1) != 0)
    v3 = 0x73676E69646E6962;
  else
    v3 = 0x736E6F6974706FLL;
  if ((a2 & 1) != 0)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a1 & 1) != 0)
    v5 = 0x73676E69646E6962;
  else
    v5 = 0x736E6F6974706FLL;
  if ((a1 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    v7 = 1;
  }
  else
  {
    v8 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1BB64A08C(char a1, char a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  LOBYTE(v2) = a1;
  v3 = 0xD000000000000014;
  v4 = 0x80000001BB95C6D0;
  if (a2)
  {
    if (a2 == 1)
      v5 = 0xD000000000000021;
    else
      v5 = 0x7461636572706564;
    if (a2 == 1)
      v6 = 0x80000001BB95C6F0;
    else
      v6 = 0xEA00000000006465;
    v2 = v2;
    if (!(_BYTE)v2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000014;
  v6 = 0x80000001BB95C6D0;
  v2 = v2;
  if ((_BYTE)v2)
  {
LABEL_9:
    if (v2 == 1)
      v3 = 0xD000000000000021;
    else
      v3 = 0x7461636572706564;
    if (v2 == 1)
      v4 = 0x80000001BB95C6F0;
    else
      v4 = 0xEA00000000006465;
  }
LABEL_15:
  if (v5 == v3 && v6 == v4)
  {
    swift_bridgeObjectRelease_n();
    v7 = 1;
  }
  else
  {
    v8 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v8 ^ 1;
  }
  return v7 & 1;
}

BOOL sub_1BB64A1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;

  if (a5 == a1 && a6 == a2 || (sub_1BB874398() & 1) != 0)
  {
    if (a7 == a3)
      v12 = a8 < a4;
    else
      v12 = a7 < a3;
  }
  else
  {
    v12 = sub_1BB874398();
  }
  return (v12 & 1) == 0;
}

uint64_t sub_1BB64A260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  v0 = FormatFontTrait.rawValue.getter();
  v2 = v1;
  if (v0 == FormatFontTrait.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    v6 = 1;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v5 ^ 1;
  }
  return v6 & 1;
}

BOOL sub_1BB64A304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, uint64_t);
  char v23;
  _QWORD v25[2];

  v4 = sub_1BB86EB84();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB4DC8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - v10;
  sub_1BA6C1CE8();
  v13 = v12;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(int *)(type metadata accessor for FormatMetadata() + 28);
  v25[0] = a1;
  v25[1] = a2;
  v17 = a1 + v16;
  v18 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_1BA57B488(a2 + v16, (uint64_t)v15, &qword_1ED3B0930, v5);
  sub_1BA57B488(v17, v18, &qword_1ED3B0930, v5);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  LODWORD(a2) = v19(v15, 1, v4);
  v20 = v19((char *)v18, 1, v4);
  if ((_DWORD)a2 == 1)
  {
    if (v20 == 1)
    {
      sub_1BB86EB3C();
      sub_1BA5DB598();
      v23 = sub_1BB87291C();
    }
    else
    {
      sub_1BA502AD0(v18, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
      v23 = 0;
    }
  }
  else if (v20 == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v4);
    v23 = 1;
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v21(v11, v15, v4);
    v21(v8, (char *)v18, v4);
    sub_1BA5DB598();
    v23 = sub_1BB87291C();
    v22 = *(void (**)(char *, uint64_t))(v6 + 8);
    v22(v8, v4);
    v22(v11, v4);
  }
  return (v23 & 1) == 0;
}

uint64_t sub_1BB64A568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  v0 = FormatItemKind.description.getter();
  v2 = v1;
  if (v0 == FormatItemKind.description.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    v6 = 1;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v5 ^ 1;
  }
  return v6 & 1;
}

BOOL sub_1BB64A618(uint64_t a1, uint64_t a2, char a3, unint64_t a4, uint64_t a5, char a6)
{
  char v6;
  unint64_t v8;
  uint64_t v9;

  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) != 0 && (a1 != a4 || a2 != a5))
    {
      v6 = sub_1BB874398();
      return (v6 & 1) == 0;
    }
    goto LABEL_7;
  }
  if ((a6 & 1) != 0)
  {
LABEL_7:
    v6 = 0;
    return (v6 & 1) == 0;
  }
  v8 = a4;
  v9 = a1;
  v6 = static FormatOptionValue.< infix(_:_:)(&v9, &v8);
  return (v6 & 1) == 0;
}

void sub_1BB64A680(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB64A6D0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BB64A738 + 4 * byte_1BB937D14[a2]))(0x64657375636F66);
}

uint64_t sub_1BB64A738(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;

  if (a1 == 0x64657375636F66 && v1 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease_n();
    v2 = 1;
  }
  else
  {
    v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1BB64A7F0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x73676E69646E6962;
  else
    v3 = 0x736E6F6974706FLL;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x73676E69646E6962;
  else
    v5 = 0x736E6F6974706FLL;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    v7 = 1;
  }
  else
  {
    v8 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1BB64A8A0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;
  char v9;

  v2 = 0xD000000000000014;
  v3 = 0x80000001BB95C6D0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000021;
    else
      v5 = 0x7461636572706564;
    if (v4 == 1)
      v6 = 0x80000001BB95C6F0;
    else
      v6 = 0xEA00000000006465;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000014;
  v6 = 0x80000001BB95C6D0;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000021;
    else
      v2 = 0x7461636572706564;
    if (v7 == 1)
      v3 = 0x80000001BB95C6F0;
    else
      v3 = 0xEA00000000006465;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
  {
    swift_bridgeObjectRelease_n();
    v8 = 1;
  }
  else
  {
    v9 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v9 ^ 1;
  }
  return v8 & 1;
}

BOOL sub_1BB64A9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;

  if (a1 == a5 && a2 == a6 || (sub_1BB874398() & 1) != 0)
  {
    if (a3 == a7)
      v12 = a4 < a8;
    else
      v12 = a3 < a7;
  }
  else
  {
    v12 = sub_1BB874398();
  }
  return (v12 & 1) == 0;
}

uint64_t sub_1BB64AA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  v0 = FormatFontTrait.rawValue.getter();
  v2 = v1;
  if (v0 == FormatFontTrait.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    v6 = 1;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v5 ^ 1;
  }
  return v6 & 1;
}

BOOL sub_1BB64AB14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t);
  char v25;
  _QWORD v27[2];

  v4 = sub_1BB86EB84();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB4DC8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v27 - v10;
  sub_1BA6C1CE8();
  v13 = v12;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(int *)(type metadata accessor for FormatMetadata() + 28);
  v27[0] = a1;
  v27[1] = a2;
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_1BA57B488(v17, (uint64_t)v15, &qword_1ED3B0930, v5);
  sub_1BA57B488(v18, v19, &qword_1ED3B0930, v5);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  LODWORD(a2) = v20(v15, 1, v4);
  v21 = v20((char *)v19, 1, v4);
  if ((_DWORD)a2 == 1)
  {
    if (v21 == 1)
    {
      sub_1BB86EB3C();
      sub_1BA5DB598();
      v25 = sub_1BB87291C();
    }
    else
    {
      sub_1BA502AD0(v19, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
      v25 = 0;
    }
  }
  else if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v4);
    v25 = 1;
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23 = v11;
    v22(v11, v15, v4);
    v22(v8, (char *)v19, v4);
    sub_1BA5DB598();
    v25 = sub_1BB87291C();
    v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v8, v4);
    v24(v23, v4);
  }
  return (v25 & 1) == 0;
}

uint64_t sub_1BB64AD84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  v0 = FormatItemKind.description.getter();
  v2 = v1;
  if (v0 == FormatItemKind.description.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    v6 = 1;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v5 ^ 1;
  }
  return v6 & 1;
}

BOOL sub_1BB64AE34(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;

  sub_1BA4A3FB4(0, qword_1EF2B78D8, (void (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - v4;
  v6 = type metadata accessor for FormatDebuggerContext();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *v1;
  v11 = v1[1];
  v13 = v1[2];
  v12 = v1[3];
  sub_1BA57B488(a1, (uint64_t)v5, qword_1EF2B78D8, (void (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    sub_1BB47F97C((uint64_t)v5, (uint64_t)v9);
    v16 = v9[2];
    v15 = v9[3];
    v17 = v12;
    if (v10 == *v9 && v11 == v9[1])
    {
      if (v13 != v16)
      {
        v14 = 0;
        goto LABEL_13;
      }
    }
    else
    {
      v14 = 0;
      if ((sub_1BB874398() & 1) == 0 || v13 != v16)
        goto LABEL_13;
    }
    v14 = v17 == v15;
LABEL_13:
    sub_1BB64B5A4((uint64_t)v9);
    return v14;
  }
  sub_1BA502AD0((uint64_t)v5, qword_1EF2B78D8, (void (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  return 0;
}

uint64_t sub_1BB64AFB8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];
  uint64_t v12;
  uint64_t v13;

  sub_1BB64B548(0, &qword_1EF2C9910, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v11[0] = *(_OWORD *)v1;
  v9 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB64B504();
  sub_1BB8746C8();
  v11[1] = v11[0];
  v12 = v9;
  v13 = v8;
  sub_1BB3DB36C();
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB64B0D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  _QWORD v13[2];
  __int128 v14;

  sub_1BB64B548(0, &qword_1EF2C9900, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB64B504();
  sub_1BB87468C();
  if (!v2)
  {
    sub_1BA6B5EF0();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v10 = v13[1];
    v11 = v14;
    *(_QWORD *)a2 = v13[0];
    *(_QWORD *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB64B214()
{
  return 0x614D656372756F73;
}

uint64_t sub_1BB64B230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x614D656372756F73 && a2 == 0xE900000000000070)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB64B2D0()
{
  sub_1BB64B504();
  return sub_1BB874710();
}

uint64_t sub_1BB64B2F8()
{
  sub_1BB64B504();
  return sub_1BB87471C();
}

uint64_t sub_1BB64B324@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB64B0D0(a1, a2);
}

uint64_t sub_1BB64B338(_QWORD *a1)
{
  return sub_1BB64AFB8(a1);
}

unint64_t sub_1BB64B350()
{
  unint64_t result;

  result = qword_1EF2C98F8;
  if (!qword_1EF2C98F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB937D9C, &type metadata for FormatDebuggerBreakpoint);
    atomic_store(result, (unint64_t *)&qword_1EF2C98F8);
  }
  return result;
}

uint64_t sub_1BB64B398(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB64B3B0(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB64A1AC);
}

uint64_t sub_1BB64B3A4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB64B3B0(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB64A9BC);
}

uint64_t sub_1BB64B3B0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]) & 1;
}

uint64_t sub_1BB64B3E4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB64B3B0(a1, a2, a3, a4, sub_1BB649994);
}

BOOL sub_1BB64B3F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  _BOOL8 result;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  result = 0;
  if ((v6 || (sub_1BB874398() & 1) != 0) && v2 == v5 && v3 == v4)
    return 1;
  return result;
}

uint64_t sub_1BB64B45C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_1BB874398() & 1) == 0)
    return sub_1BB874398();
  if (v2 == v4)
    return v3 < v5;
  return v2 < v4;
}

unint64_t sub_1BB64B504()
{
  unint64_t result;

  result = qword_1EF2C9908;
  if (!qword_1EF2C9908)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB937ED0, &type metadata for FormatDebuggerBreakpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9908);
  }
  return result;
}

void sub_1BB64B548(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB64B504();
    v7 = a3(a1, &type metadata for FormatDebuggerBreakpoint.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB64B5A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatDebuggerContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for FormatDebuggerBreakpoint.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB64B620 + 4 * byte_1BB937D18[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB64B640 + 4 * byte_1BB937D1D[v4]))();
}

_BYTE *sub_1BB64B620(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB64B640(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB64B648(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB64B650(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB64B658(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB64B660(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatDebuggerBreakpoint.CodingKeys()
{
  return &type metadata for FormatDebuggerBreakpoint.CodingKeys;
}

unint64_t sub_1BB64B680()
{
  unint64_t result;

  result = qword_1EF2C9918;
  if (!qword_1EF2C9918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB937EA8, &type metadata for FormatDebuggerBreakpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9918);
  }
  return result;
}

unint64_t sub_1BB64B6C8()
{
  unint64_t result;

  result = qword_1EF2C9920;
  if (!qword_1EF2C9920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB937E18, &type metadata for FormatDebuggerBreakpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9920);
  }
  return result;
}

unint64_t sub_1BB64B710()
{
  unint64_t result;

  result = qword_1EF2C9928;
  if (!qword_1EF2C9928)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB937E40, &type metadata for FormatDebuggerBreakpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9928);
  }
  return result;
}

uint64_t FeedLoadingGate.whenLifted.getter()
{
  uint64_t result;

  result = MEMORY[0x1BCCDEB28]();
  if (!result)
    __break(1u);
  return result;
}

uint64_t FeedLoadingGate.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  FeedLoadingGate.init()();
  return v0;
}

uint64_t FeedLoadingGate.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1BB86DD44();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8];
  MEMORY[0x1E0C80A78](v2);
  sub_1BA59C0C8();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1BB86E224();
  v4 = v0 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  v5 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth) = 0;
  v6 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_lock;
  v7 = MEMORY[0x1E0DEE9D8];
  sub_1BA59C120();
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C02E0, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA59C024();
  sub_1BB873BC4();
  sub_1BB86DD5C();
  swift_allocObject();
  *(_QWORD *)(v1 + v6) = sub_1BB86DD50();
  sub_1BA517860();
  v8 = (void *)sub_1BB873A08();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_log) = v8;
  v9 = v8;
  v10 = sub_1BB87330C();
  sub_1BB86EF44("Feed loading gate created", 25, 2, &dword_1BA493000, v9, v10, v7);

  return v1;
}

uint64_t FeedLoadingGate.__allocating_init(log:)(void *a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_1BA4C45C0(a1);

  return v2;
}

Swift::Void __swiftcall FeedLoadingGate.push(reason:)(Swift::String reason)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  object = reason._object;
  countAndFlagsBits = reason._countAndFlagsBits;
  v5 = type metadata accessor for FeedLoadingGate.Seal(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - v9;
  sub_1BB86DD20();
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_log);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87D7A0;
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v12 + 32) = countAndFlagsBits;
  *(_QWORD *)(v12 + 40) = object;
  v13 = v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  swift_beginAccess();
  sub_1BA59ACB4(v13, (uint64_t)v10);
  sub_1BA59ACB4((uint64_t)v10, (uint64_t)v7);
  v14 = sub_1BB86C8B0();
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v7, 1, v14);
  swift_bridgeObjectRetain();
  if (v15 != 1)
    sub_1BA59AC78((uint64_t)v7);
  sub_1BA59AC78((uint64_t)v10);
  v16 = MEMORY[0x1E0DEAFA0];
  v17 = MEMORY[0x1E0DEAFD8];
  *(_QWORD *)(v12 + 96) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v12 + 104) = v17;
  *(_BYTE *)(v12 + 72) = v15 != 1;
  v18 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift);
  *(_QWORD *)(v12 + 136) = v16;
  *(_QWORD *)(v12 + 144) = v17;
  v19 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth;
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth);
  v21 = MEMORY[0x1E0DEB418];
  *(_BYTE *)(v12 + 112) = v18;
  v22 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v12 + 176) = v21;
  *(_QWORD *)(v12 + 184) = v22;
  *(_QWORD *)(v12 + 152) = v20;
  v23 = sub_1BB87330C();
  sub_1BB86EF44("Feed loading gate push, reason='%{public}@' sealed=%d, waitingForLift=%d, waitingForPopDepth=%ld", 96, 2, &dword_1BA493000, v11, v23, v12);
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v2 + v19);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + v19) = v26;
    sub_1BA59AD0C(countAndFlagsBits, (uint64_t)object);
    sub_1BB86DD2C();
  }
}

Swift::Void __swiftcall FeedLoadingGate.pop(reason:)(Swift::String reason)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  object = reason._object;
  countAndFlagsBits = reason._countAndFlagsBits;
  v5 = type metadata accessor for FeedLoadingGate.Seal(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - v9;
  sub_1BB86DD20();
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_log);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87D7A0;
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v12 + 32) = countAndFlagsBits;
  *(_QWORD *)(v12 + 40) = object;
  v13 = v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  swift_beginAccess();
  sub_1BA59ACB4(v13, (uint64_t)v10);
  sub_1BA59ACB4((uint64_t)v10, (uint64_t)v7);
  v14 = sub_1BB86C8B0();
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v7, 1, v14);
  swift_bridgeObjectRetain();
  if (v15 != 1)
    sub_1BA59AC78((uint64_t)v7);
  sub_1BA59AC78((uint64_t)v10);
  v16 = MEMORY[0x1E0DEAFA0];
  v17 = MEMORY[0x1E0DEAFD8];
  *(_QWORD *)(v12 + 96) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v12 + 104) = v17;
  *(_BYTE *)(v12 + 72) = v15 != 1;
  v18 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift);
  *(_QWORD *)(v12 + 136) = v16;
  *(_QWORD *)(v12 + 144) = v17;
  v19 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth;
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth);
  v21 = MEMORY[0x1E0DEB418];
  *(_BYTE *)(v12 + 112) = v18;
  v22 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v12 + 176) = v21;
  *(_QWORD *)(v12 + 184) = v22;
  *(_QWORD *)(v12 + 152) = v20;
  v23 = sub_1BB87330C();
  sub_1BB86EF44("Feed loading gate pop, reason='%{public}@' sealed=%d, waitingForLift=%d, waitingForPopDepth=%ld", 95, 2, &dword_1BA493000, v11, v23, v12);
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v2 + v19);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + v19) = v26;
    sub_1BA59AD0C(countAndFlagsBits, (uint64_t)object);
    sub_1BB86DD2C();
  }
}

uint64_t FeedLoadingGate.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1BA59AC78(v0 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal);
  swift_release();

  return v0;
}

uint64_t sub_1BB64BE88()
{
  return type metadata accessor for FeedLoadingGate(0);
}

uint64_t method lookup function for FeedLoadingGate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedLoadingGate.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedLoadingGate.__allocating_init(log:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t *sub_1BB64BEAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C8B0();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

void *sub_1BB64BF74(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1BB64C018(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1BB64C108(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1BB64C1AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1BB64C29C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB64C2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1BB86C8B0();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1BB64C2F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB64C300(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1BB64C350(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1BB64C388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

id sub_1BB64C3C8(char a1)
{
  uint64_t v1;

  if ((a1 & 1) != 0)
    return (id)sub_1BB64C8A4();
  else
    return *(id *)(v1 + 24);
}

void sub_1BB64C3D8(_QWORD *a1, char a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25[2];

  v5 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB86DEE8();
  v12 = v11;
  swift_beginAccess();
  v13 = *(_QWORD *)(v4 + 40);
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_1BA6E35A8(v10, v12), (v15 & 1) != 0))
  {
    v16 = *(void **)(*(_QWORD *)(v13 + 56) + 8 * v14);
    swift_endAccess();
    v17 = v16;
    swift_bridgeObjectRelease();
    v18 = sub_1BB64CA58(a2 & 1);
    a3();

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    v19 = a1[3];
    v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    v21 = *(void **)(v5 + 24);
    v22 = swift_allocObject();
    swift_weakInit();
    sub_1BA4C010C((uint64_t)a1, (uint64_t)v25);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v22;
    sub_1BA4CECCC(v25, v23 + 24);
    *(_QWORD *)(v23 + 64) = a3;
    *(_QWORD *)(v23 + 72) = a4;
    *(_BYTE *)(v23 + 80) = a2 & 1;
    v24 = *(_QWORD *)(v20 + 8);
    swift_retain();
    swift_retain();
    sub_1BB7112FC(v21, (void (*)(void))sub_1BB64D0A0, v23, v19, v24);
    swift_release();
    swift_release();
  }
}

void sub_1BB64C594(uint64_t a1, void (*a2)(id), void (*a3)(id))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (**v28)(id);
  void (*v29)(id);
  void *v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void (*v39)(id);
  _QWORD aBlock[6];

  v4 = v3;
  v39 = a3;
  v7 = type metadata accessor for FeedGroupItem();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - v12;
  FeedGroupItem.debugIdentifier.getter();
  v15 = v14;
  v17 = v16;
  swift_beginAccess();
  v18 = *(_QWORD *)(v3 + 40);
  if (*(_QWORD *)(v18 + 16) && (v19 = sub_1BA6E35A8(v15, v17), (v20 & 1) != 0))
  {
    v21 = *(void **)(*(_QWORD *)(v18 + 56) + 8 * v19);
    swift_endAccess();
    v22 = v21;
    swift_bridgeObjectRelease();
    a2(v22);

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    v23 = *(void **)(v4 + 24);
    v24 = swift_allocObject();
    swift_weakInit();
    sub_1BAC86E30(a1, (uint64_t)v13);
    sub_1BAC86E30((uint64_t)v13, (uint64_t)v10);
    v25 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v26 = (v9 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v24;
    sub_1BB5534B4((uint64_t)v13, v27 + v25);
    v28 = (void (**)(id))(v27 + v26);
    v29 = v39;
    *v28 = a2;
    v28[1] = v29;
    swift_retain_n();
    swift_retain_n();
    FeedGroupItem.debugAssetHandle.getter();
    if (v30)
    {
      v31 = v30;
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
      v32 = (void *)sub_1BB87345C();
      v33 = (_QWORD *)swift_allocObject();
      v33[2] = v31;
      v33[3] = v23;
      v33[4] = sub_1BB64DA50;
      v33[5] = v27;
      aBlock[4] = sub_1BB64DADC;
      aBlock[5] = v33;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BA4F1DD8;
      aBlock[3] = &block_descriptor_19_0;
      v34 = _Block_copy(aBlock);
      v35 = v31;
      v36 = v23;
      swift_retain();
      swift_release();
      v37 = objc_msgSend(v35, sel_downloadIfNeededWithCompletionQueue_completion_, v32, v34);
      _Block_release(v34);
      swift_release();
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
      sub_1BB64CECC(0, v24, (uint64_t)v10, a2);
      swift_release();
      swift_release();
    }
    sub_1BAC86E74((uint64_t)v10);
    swift_release();
    swift_release();
  }
}

uint64_t sub_1BB64C8A4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t result;
  void *v13;
  id v14;
  _QWORD v15[6];

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
LABEL_5:
    v14 = v1;
    return (uint64_t)v2;
  }
  v3 = *(void **)(v0 + 24);
  objc_msgSend(v3, sel_size);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, v4, v5);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1BB64DB1C;
  *(_QWORD *)(v8 + 24) = v7;
  v15[4] = sub_1BACD6700;
  v15[5] = v8;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1BA56DAFC;
  v15[3] = &block_descriptor_30_1;
  v9 = _Block_copy(v15);
  v10 = v3;
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_imageWithActions_, v9);

  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) == 0)
  {
    v13 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v11;
    v2 = v11;

    v1 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_1BB64CA58(char a1)
{
  void *v1;
  double v2;
  double v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id result;
  _QWORD aBlock[6];

  if ((a1 & 1) == 0)
    return v1;
  objc_msgSend(v1, sel_size);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, v2, v3);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1BB64D0B4;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_1BA56DB30;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA56DAFC;
  aBlock[3] = &block_descriptor_96;
  v7 = _Block_copy(aBlock);
  v8 = v1;
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v4, sel_imageWithActions_, v7);

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = (id)swift_release();
  if ((v4 & 1) == 0)
    return v9;
  __break(1u);
  return result;
}

_QWORD *sub_1BB64CC04()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_lightGrayColor);
  v3 = (void *)objc_opt_self();
  v4 = *MEMORY[0x1E0DC1420];
  v5 = objc_msgSend(v3, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E0DC1420]);
  v6 = sub_1BACD43D0(0, 4271950, 0xE300000000000000, v2, v5, 22.0, 22.0);

  v0[2] = v6;
  v7 = objc_msgSend(v1, sel_systemGrayColor);
  v8 = objc_msgSend(v1, sel_lightGrayColor);
  v9 = objc_msgSend(v3, sel_systemFontOfSize_weight_, 12.0, v4);
  v10 = sub_1BACD43D0(v7, 0, 0, v8, v9, 22.0, 22.0);

  v0[3] = v10;
  v0[4] = 0;
  v0[5] = MEMORY[0x1E0DEE9E0];
  return v0;
}

void sub_1BB64CD6C(void *a1, uint64_t a2, _QWORD *a3, void (*a4)(void), uint64_t a5, char a6)
{
  uint64_t Strong;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  id v19;
  uint64_t v20;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v11 = Strong;
    if (a1)
      v12 = a1;
    else
      v12 = *(id *)(Strong + 16);
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    v13 = a1;
    v14 = sub_1BB86DEE8();
    v16 = v15;
    swift_beginAccess();
    v17 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *(_QWORD *)(v11 + 40);
    *(_QWORD *)(v11 + 40) = 0x8000000000000000;
    sub_1BB4BF834((uint64_t)v17, v14, v16, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v11 + 40) = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v19 = sub_1BB64CA58(a6 & 1);
    a4();
    swift_release();

  }
}

void sub_1BB64CECC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  uint64_t Strong;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    if (a1)
      v8 = a1;
    else
      v8 = *(id *)(Strong + 16);
    v9 = a1;
    FeedGroupItem.debugIdentifier.getter();
    v11 = v10;
    v13 = v12;
    swift_beginAccess();
    v14 = v8;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *(_QWORD *)(v7 + 40);
    *(_QWORD *)(v7 + 40) = 0x8000000000000000;
    sub_1BB4BF834((uint64_t)v14, v11, v13, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v7 + 40) = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    a4(v14);
    swift_release();

  }
}

uint64_t sub_1BB64CFEC()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatImageCache()
{
  return objc_opt_self();
}

uint64_t sub_1BB64D048()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB64D06C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

void sub_1BB64D0A0(void *a1)
{
  uint64_t v1;

  sub_1BB64CD6C(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 64), *(_QWORD *)(v1 + 72), *(_BYTE *)(v1 + 80));
}

id sub_1BB64D0B4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_drawAtPoint_blendMode_alpha_, 0, 0.0, 0.0, 0.2);
}

uint64_t sub_1BB64D0D8()
{
  return swift_deallocObject();
}

uint64_t sub_1BB64D0E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  int *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(type metadata accessor for FeedGroupItem() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  v3 = v0 + v2;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_unknownObjectRelease();

      break;
    case 1u:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(v3 + 128) >= 0x11uLL)
        goto LABEL_10;
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for FeedWeather(0);
      v5 = v3 + *(int *)(v4 + 28);
      v6 = sub_1BB87270C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      v7 = v3 + *(int *)(v4 + 36);
      sub_1BA8425B0();
      v9 = v8;
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v10(v7, v8);
      v11 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v10(v7 + v11[5], v9);
      v10(v7 + v11[6], v9);
      v10(v7 + v11[7], v9);
      swift_bridgeObjectRelease();
      break;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 240) >= 0x11uLL)
        goto LABEL_10;
      break;
    case 5u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v12 = (int *)type metadata accessor for FeedHeadline(0);
      v13 = v12[10];
      v14 = v3 + v13 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v15 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
      {
        v16 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);

        v17 = v14 + *(int *)(v15 + 28);
        v18 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      }
      v19 = v3 + v12[11];
      v20 = sub_1BB871B24();
      v21 = *(_QWORD *)(v20 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
      if (*(_QWORD *)(v3 + v12[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + v12[13]) >= 3uLL)
        swift_unknownObjectRelease();

      break;
    case 6u:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = (int *)type metadata accessor for FeedWebEmbed();
      v23 = v3 + v22[8];
      v24 = sub_1BB86C67C();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v26(v23, v24);
      v27 = v3 + v22[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v24))
        v26(v27, v24);
      v65 = v26;
      swift_release();
      swift_release();
      v28 = v3 + v22[12];
      v29 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v29 - 1) + 48))(v28, 1, v29))
      {
        v64 = v24;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v30 = v29[10];
        v31 = v28 + v30 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v32 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32))
        {
          v33 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v31, v33);

          v65(v31 + *(int *)(v32 + 28), v64);
        }
        v34 = v28 + v29[11];
        v35 = sub_1BB871B24();
        v36 = *(_QWORD *)(v35 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
        if (*(_QWORD *)(v28 + v29[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v24 = v64;
        if (*(_QWORD *)(v28 + v29[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v37 = v3 + v22[13];
      v38 = type metadata accessor for WebEmbedDataVisualization();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          v39 = type metadata accessor for GenericDataVisualization();
          v65(v37 + *(int *)(v39 + 20), v24);
LABEL_10:
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      break;
    case 7u:

      break;
    case 8u:
      goto LABEL_46;
    case 9u:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 112))
        __swift_destroy_boxed_opaque_existential_1(v3 + 88);
      if (*(_QWORD *)(v3 + 152))
        __swift_destroy_boxed_opaque_existential_1(v3 + 128);
      break;
    case 0xAu:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_46:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      break;
    case 0xBu:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v3 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v41 = v40 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_63;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v45 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v41, 1, v45))
            {
              v46 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v41, v46);
            }
          }
          v47 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v48 = v41 + *(int *)(v47 + 20);
          v49 = swift_getEnumCaseMultiPayload();
          if (v49 == 5 || v49 == 4)
          {
            v50 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v48, 1, v50))
            {
              v51 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v48, v51);
            }
          }
          v41 += *(int *)(v47 + 24);
LABEL_63:
          v52 = swift_getEnumCaseMultiPayload();
          if (v52 == 5 || v52 == 4)
          {
            v53 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v41, 1, v53))goto LABEL_74;
          }
          goto LABEL_53;
        case 2u:
          v54 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v41, 1, v54))
            goto LABEL_53;
          v55 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v41, v55);
          v56 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v57 = v41 + *(int *)(v56 + 24);
          swift_bridgeObjectRelease();
          v58 = *(_QWORD *)(v57 + 24);
          if (v58 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v57 + 16), v58);
          goto LABEL_10;
        case 3u:
          v59 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v60 = v41 + *(int *)(v59 + 24);
          v61 = type metadata accessor for PuzzleStreak();
          v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48);
          if (!v62(v60, 1, v61))
          {
            v63 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v60, v63);
          }
          v41 += *(int *)(v59 + 28);
          if (v62(v41, 1, v61))
            goto LABEL_53;
LABEL_74:
          v42 = sub_1BB86BEC0();
          break;
        default:
          goto LABEL_53;
      }
      goto LABEL_52;
    case 0xCu:
      swift_bridgeObjectRelease();
      v41 = v3 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      v42 = sub_1BB871E24();
LABEL_52:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
      break;
    default:
      break;
  }
LABEL_53:
  swift_release();
  return swift_deallocObject();
}

void sub_1BB64DA50(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for FeedGroupItem() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1BB64CECC(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(void (**)(id))(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1BB64DAA8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BB64DADC()
{
  uint64_t v0;

  sub_1BB71142C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void *))(v0 + 32));
}

uint64_t sub_1BB64DAE8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB64DB0C()
{
  return swift_deallocObject();
}

uint64_t sub_1BB64DB2C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  double v4;
  _QWORD *v5;
  _QWORD *v6;
  id v7;
  void *v8;
  _QWORD v10[2];
  _BYTE v11[16];
  double v12;
  char v13;

  sub_1BA5F360C(v0 + 24, (uint64_t)v11);
  sub_1BA5F360C((uint64_t)v11, (uint64_t)&v12);
  if ((v13 & 1) != 0)
  {
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "Running ");
    BYTE1(v10[1]) = 0;
    WORD1(v10[1]) = 0;
    HIDWORD(v10[1]) = -402653184;
    sub_1BB87420C();
    sub_1BB872AFC(v1);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v2);
    sub_1BB87420C();
  }
  else
  {
    v4 = v12;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "Completed in ");
    HIWORD(v10[1]) = -4864;
    sub_1BB87420C();
    sub_1BB872AFC(v5);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v6);
    if (qword_1EF2A7418 != -1)
      swift_once();
    v7 = objc_msgSend((id)qword_1EF2C99E8, sel_stringFromTimeInterval_, v4 / 1000.0);
    if (v7)
    {
      v8 = v7;
      sub_1BB8729A0();

    }
  }
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  return v10[0];
}

id sub_1BB64DD74()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  objc_msgSend(v0, sel_setUnitsStyle_, 2);
  result = objc_msgSend(v0, sel_setAllowedUnits_, 32992);
  qword_1EF2C99E8 = (uint64_t)v0;
  return result;
}

uint64_t initializeWithCopy for DebugFormatTestSuiteResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatTestSuiteResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for DebugFormatTestSuiteResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatTestSuiteResult()
{
  return &type metadata for DebugFormatTestSuiteResult;
}

uint64_t FeedServiceDebugger.__allocating_init(blueprintProvider:cursorContainerBlock:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;

  v6 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 88) - 8) + 32))(v6 + *(_QWORD *)(*(_QWORD *)v6 + 112), a1);
  v7 = (_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 120));
  *v7 = a2;
  v7[1] = a3;
  return v6;
}

uint64_t FeedServiceDebugger.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 88) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_release();
  return v0;
}

uint64_t FeedServiceDebugger.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 88) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FeedServiceDebugger.debug(groupIdentifier:debugGroupIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(char *);
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t AssociatedTypeWitness;
  uint64_t v56;
  uint64_t AssociatedConformanceWitness;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;

  v43 = a4;
  v44 = a3;
  v42 = a2;
  v41 = a1;
  v5 = (_QWORD *)*v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v56 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v58 = swift_getAssociatedConformanceWitness();
  v6 = sub_1BB871680();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v36 - v8;
  v10 = *(uint64_t (**)(char *))((char *)v4 + v5[15]);
  sub_1BB870420();
  v11 = v10(v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((~v11 & 0xF000000000000007) != 0)
  {
    sub_1BA6DC310(0, &qword_1EF2C0540, (void (*)(uint64_t))MEMORY[0x1E0DB79E8]);
    v22 = *(_QWORD *)(sub_1BB86FC28() - 8);
    v23 = *(_QWORD *)(v22 + 72);
    v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BB87FC80;
    v25 = (uint64_t *)(v21 + v24);
    v26 = v5[10];
    v27 = v5[12];
    static RadarAttachment.feedCursorContainer<A>(cursorContainer:)(v11, v26, v27, v25);
    v40 = v23;
    v37 = v25;
    v36 = (uint64_t *)((char *)v25 + v23);
    v39 = v26;
    v38 = v27;
    FeedCursorContainer.feedContext.getter(v11, (uint64_t)&AssociatedTypeWitness);
    v28 = (void *)AssociatedTypeWitness;
    v30 = v59;
    v29 = v60;
    v31 = v62;
    v45 = AssociatedTypeWitness;
    v46 = v56;
    v47 = AssociatedConformanceWitness;
    v48 = v58;
    v49 = v59;
    v50 = v60;
    v51 = v61;
    v52 = v62;
    v53 = v63;
    v54 = v64;
    static RadarAttachment.feedContext(feedContext:)((uint64_t)&v45, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1BA6DB13C(v30, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v32 = v43;
    v33 = v44;
    if (!v43)
    {
      v32 = v42;
      swift_bridgeObjectRetain();
      v33 = v41;
    }
    v34 = (uint64_t *)((char *)v37 + 2 * v40);
    swift_bridgeObjectRetain();
    static RadarAttachment.feedGroupJournal<A>(cursorContainer:identifier:)(v11, v33, v32, v34);
    swift_bridgeObjectRelease();
    sub_1BA62ECD4(v11);
  }
  else
  {
    v12 = v43;
    if (qword_1ED3BA7F8 != -1)
      swift_once();
    v13 = (id)qword_1ED476860;
    v14 = sub_1BB8732F4();
    sub_1BA6DC310(0, (unint64_t *)&qword_1ED3D4470, (void (*)(uint64_t))sub_1BA81BA70);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BB87A390;
    v16 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    v17 = sub_1BA6A2D8C();
    *(_QWORD *)(v15 + 64) = v17;
    v18 = v42;
    *(_QWORD *)(v15 + 32) = v41;
    *(_QWORD *)(v15 + 40) = v18;
    AssociatedTypeWitness = v44;
    v56 = v12;
    sub_1BA76D834();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1BB872A00();
    *(_QWORD *)(v15 + 96) = v16;
    *(_QWORD *)(v15 + 104) = v17;
    *(_QWORD *)(v15 + 72) = v19;
    *(_QWORD *)(v15 + 80) = v20;
    sub_1BB86EF44("Failed to lookup cursor for feed journal debugger, groupIdentifier=%@, debugGroupIdentifier=%@", 94, 2, &dword_1BA493000, v13, v14, v15);

    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v21;
}

uint64_t sub_1BB64E460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FeedServiceDebugger.debug(groupIdentifier:debugGroupIdentifier:)(a1, a2, a3, a4);
}

uint64_t method lookup function for FeedServiceDebugger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedServiceDebugger.__allocating_init(blueprintProvider:cursorContainerBlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_1BB64E494(char a1, uint64_t a2, void *a3, void (*a4)(id))
{
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = (void *)MEMORY[0x1BCCE5D40](v7);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_view);

    if (v10)
    {
      if ((a1 & 1) != 0)
      {
        objc_msgSend(v10, sel_bounds);
        objc_msgSend(a3, sel_setFrame_);
        objc_msgSend(a3, sel_setAutoresizingMask_, 18);
        v11 = objc_msgSend(v10, sel_addSubview_, a3);
      }
      else
      {
        v11 = objc_msgSend(a3, sel_removeFromSuperview);
      }
      a4(v11);

    }
  }
}

uint64_t FormatViewController.isBeingUsedAsPlugin.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1BB64E5C8(unsigned __int8 *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  _BYTE *v9;
  unsigned int *v10;
  uint64_t v12;

  v4 = sub_1BB870BA0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = (_BYTE *)(*a2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  swift_beginAccess();
  *v9 = v8;
  v10 = (unsigned int *)MEMORY[0x1E0DBA6B8];
  if (!v8)
    v10 = (unsigned int *)MEMORY[0x1E0DBA6B0];
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *v10, v4);
  return sub_1BB8707E0();
}

uint64_t FormatViewController.isBeingUsedAsPlugin.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _BYTE *v7;
  unsigned int *v8;
  uint64_t v10;

  v3 = sub_1BB870BA0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  swift_beginAccess();
  *v7 = a1;
  v8 = (unsigned int *)MEMORY[0x1E0DBA6B8];
  if ((a1 & 1) == 0)
    v8 = (unsigned int *)MEMORY[0x1E0DBA6B0];
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *v8, v3);
  return sub_1BB8707E0();
}

void (*FormatViewController.isBeingUsedAsPlugin.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_1BB870BA0();
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v6 = malloc(*(_QWORD *)(v5 + 64));
  v7 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin;
  v3[6] = v6;
  v3[7] = v7;
  swift_beginAccess();
  return sub_1BB64E7F8;
}

void sub_1BB64E7F8(_QWORD **a1, char a2)
{
  _QWORD *v3;
  void *v4;
  unsigned int *v5;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) != 0)
  {
    v4 = (void *)v3[6];
  }
  else
  {
    v4 = (void *)v3[6];
    if (*(_BYTE *)(v3[3] + v3[7]))
      v5 = (unsigned int *)MEMORY[0x1E0DBA6B8];
    else
      v5 = (unsigned int *)MEMORY[0x1E0DBA6B0];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v3[5] + 104))(v3[6], *v5, v3[4]);
    sub_1BB8707E0();
  }
  free(v4);
  free(v3);
}

uint64_t FormatViewController.pluggableDelegate.getter()
{
  return sub_1BA8FC368(&OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate);
}

uint64_t FormatViewController.pluggableDelegate.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BA8FC3BC(a1, a2, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate);
}

uint64_t (*FormatViewController.pluggableDelegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BA8FC358;
}

uint64_t FormatViewController.pluginIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatViewController.pluginIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewController.pluginIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id FormatViewController.blueprintViewController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController);
}

uint64_t FormatViewController.blueprintLayoutProvider.getter()
{
  return swift_retain();
}

uint64_t FormatViewController.selectionProvider.getter()
{
  return sub_1BA8FC368(&OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider);
}

uint64_t FormatViewController.selectionProvider.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BA8FC3BC(a1, a2, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider);
}

uint64_t (*FormatViewController.selectionProvider.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BA8FC358;
}

char *sub_1BB64EAB8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  char *v21;
  void *v22;
  char *v23;
  id v24;
  objc_class *ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_super v30;

  v29 = a6;
  ObjectType = (objc_class *)swift_getObjectType();
  v12 = sub_1BB86E554();
  v27 = *(_QWORD *)(v12 - 8);
  v28 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&ObjectType - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v15 = &v6[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier];
  *v15 = 0;
  v15[1] = 0;
  v16 = &v6[OBJC_IVAR____TtC8NewsFeed20FormatViewController_lastComputedSize];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  v17 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventManager;
  sub_1BB6530E0();
  swift_allocObject();
  v18 = v6;
  *(_QWORD *)&v6[v17] = sub_1BB86DED0();
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController____lazy_storage___maskLayer] = 0;
  v19 = &v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler];
  *(_QWORD *)v19 = a1;
  *((_QWORD *)v19 + 1) = a2;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController] = a3;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintLayoutProvider] = a4;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController_commands] = a5;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController_tipManager] = v29;
  swift_unknownObjectRetain();
  v20 = a3;
  swift_retain();
  swift_retain();
  swift_retain();

  v30.receiver = v18;
  v30.super_class = ObjectType;
  v21 = (char *)objc_msgSendSuper2(&v30, sel_initWithNibName_bundle_, 0, 0);
  *(_QWORD *)(*(_QWORD *)&v21[OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler] + 24) = &off_1E732CFD0;
  swift_unknownObjectWeakAssign();
  v22 = *(void **)&v21[OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController];
  v23 = v21;
  v24 = v22;
  sub_1BB87081C();

  sub_1BA864E0C((uint64_t)&unk_1E7270660);
  sub_1BB86E548();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1BB86DEC4();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
  swift_release();
  return v23;
}

uint64_t sub_1BB64ED90(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(*(_QWORD *)(result + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler) + 56);
    ObjectType = swift_getObjectType();
    v6 = *(void (**)(uint64_t, uint64_t))(v4 + 56);
    swift_unknownObjectRetain();
    v6(ObjectType, v4);

    return swift_unknownObjectRelease();
  }
  return result;
}

id FormatViewController.__deallocating_deinit()
{
  void *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  swift_retain();
  sub_1BB86F4D8();
  swift_release();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id FormatViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void FormatViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BB64F0C0(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1EF2C9A70, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewController, (uint64_t)&protocol conformance descriptor for FormatViewController);
  JUMPOUT(0x1BCCE1E7CLL);
}

Swift::Void __swiftcall FormatViewController.viewDidLoad()()
{
  char *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  void *v48;
  _BYTE v49[16];
  objc_super v50;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1BB86D678();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v50.receiver = v0;
  v50.super_class = ObjectType;
  objc_msgSendSuper2(&v50, sel_viewDidLoad, v5);
  v8 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController];
  objc_msgSend(v0, sel_addChildViewController_, v8);
  v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
    __break(1u);
    goto LABEL_14;
  }
  v10 = v9;
  v11 = objc_msgSend(v8, sel_view);
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v12 = v11;
  objc_msgSend(v10, sel_addSubview_, v11);

  objc_msgSend(v8, sel_didMoveToParentViewController_, v1);
  v13 = objc_msgSend(v8, sel_view);
  if (!v13)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v14 = v13;
  v15 = objc_msgSend(v1, sel_view);
  if (!v15)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v16 = v15;
  objc_msgSend(v15, sel_bounds);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  objc_msgSend(v14, sel_setFrame_, v18, v20, v22, v24);
  v25 = objc_msgSend(v1, sel_traitCollection);
  sub_1BB8707BC();
  v26 = (void *)sub_1BB870438();
  swift_release();
  v27 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v26, sel_setBackgroundColor_, v27);

  sub_1BB8707BC();
  v28 = (void *)sub_1BB870438();
  swift_release();
  objc_msgSend(v28, sel_setShowsHorizontalScrollIndicator_, 0);

  v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E0DB5CF8], v3);
  v30 = objc_allocWithZone((Class)sub_1BB86D834());
  swift_retain();
  v31 = (void *)sub_1BB86D828();
  if (qword_1ED3BA870 != -1)
    swift_once();
  v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = v32;
  v33[3] = v31;
  v33[4] = sub_1BB64F648;
  v33[5] = v29;
  sub_1BA50AD30(&qword_1ED3A6988, v34, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewController, (uint64_t)&protocol conformance descriptor for FormatViewController);
  v35 = v31;
  swift_retain();
  sub_1BB86D21C();
  swift_release();
  if (v49[15] != 1)
  {
    swift_release_n();
    goto LABEL_12;
  }
  v36 = v35;
  v37 = objc_msgSend(v1, sel_view);
  if (!v37)
    goto LABEL_17;
  v38 = v37;
  objc_msgSend(v37, sel_bounds);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v45;

  objc_msgSend(v36, sel_setFrame_, v40, v42, v44, v46);
  objc_msgSend(v36, sel_setAutoresizingMask_, 18);
  v47 = objc_msgSend(v1, sel_view);
  if (v47)
  {
    v48 = v47;
    objc_msgSend(v47, sel_addSubview_, v36);
    swift_release_n();

LABEL_12:
    return;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_1BB64F590()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB64F5B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(id *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController);

    sub_1BB8707BC();
    v5 = (void *)sub_1BB870438();
    swift_release();
    objc_msgSend(v5, sel_reloadData);

  }
}

void sub_1BB64F648()
{
  uint64_t v0;

  sub_1BB64F5B4(v0);
}

Swift::Void __swiftcall FormatViewController.viewWillLayoutSubviews()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void (*v28)(char *, uint64_t);
  void *v29;
  void *v30;
  void *v31;
  objc_super v32;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_1BB8705C4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32.receiver = v0;
  v32.super_class = ObjectType;
  objc_msgSendSuper2(&v32, sel_viewWillLayoutSubviews, v4);
  v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController], sel_view);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v0, sel_view);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel_bounds);
      v12 = v11;
      v14 = v13;
      v16 = v15;
      v18 = v17;

      objc_msgSend(v8, sel_setFrame_, v12, v14, v16, v18);
      sub_1BB8707BC();
      v19 = (void *)sub_1BB870438();
      swift_release();
      sub_1BB8707EC();
      swift_getObjectType();
      sub_1BB871008();
      swift_unknownObjectRelease();
      sub_1BB870510();
      v21 = v20;
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v28 = *(void (**)(char *, uint64_t))(v3 + 8);
      v28(v6, v2);
      objc_msgSend(v19, sel_setLayoutMargins_, v21, v23, v25, v27);

      sub_1BB8707BC();
      v29 = (void *)sub_1BB870438();
      swift_release();
      sub_1BB8707BC();
      v30 = (void *)sub_1BB870438();
      swift_release();
      objc_msgSend(v30, sel_contentInset);

      sub_1BB8707EC();
      swift_getObjectType();
      sub_1BB871008();
      swift_unknownObjectRelease();
      sub_1BB870510();
      v28(v6, v2);
      sub_1BB87327C();
      objc_msgSend(v29, sel_setContentInset_);

      sub_1BB8707BC();
      v31 = (void *)sub_1BB870438();
      swift_release();
      objc_msgSend(v31, sel_setClipsToBounds_, 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall FormatViewController.viewDidLayoutSubviews()()
{
  void *v0;
  void *v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_viewDidLayoutSubviews);
  sub_1BB8707BC();
  v1 = (void *)sub_1BB870438();
  swift_release();
  objc_msgSend(v1, sel_layoutIfNeeded);

  sub_1BB86DEB8();
}

Swift::Void __swiftcall FormatViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  objc_super v15;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA4A3FB4(0, &qword_1ED3B0568, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - v7;
  v15.receiver = v2;
  v15.super_class = ObjectType;
  objc_msgSendSuper2(&v15, sel_viewWillAppear_, a1, v6);
  v9 = &v2[OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider];
  swift_beginAccess();
  if (MEMORY[0x1BCCE5D40](v9))
  {
    swift_getObjectType();
    v10 = sub_1BB86CBE0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
    sub_1BB8711DC();
    swift_unknownObjectRelease();
  }
  sub_1BB8707BC();
  v11 = (void *)sub_1BB870438();
  swift_release();
  v12 = sub_1BB86CBE0();
  v13 = (void (*)(uint64_t))MEMORY[0x1E0CB1658];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  sub_1BB87336C();

  sub_1BA502AD0((uint64_t)v8, &qword_1ED3B0568, v13);
  if (qword_1ED3A4170 != -1)
    swift_once();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BB86FD30();
  swift_release();
}

Swift::Void __swiftcall FormatViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_viewDidAppear_, a1);
  sub_1BB86F4FC();
}

Swift::Void __swiftcall FormatViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  void *v1;
  void *v2;
  objc_super v4;

  v2 = v1;
  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_viewWillDisappear_, a1);
  sub_1BB86FD3C();
  sub_1BB86F4E4();
}

Swift::Void __swiftcall FormatViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  id v3;
  void *v4;
  id v5;
  void *v6;
  objc_super v7;

  isa = a1.value.super.isa;
  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_traitCollectionDidChange_, isa);
  v3 = objc_msgSend(v1, sel_traitCollection);
  sub_1BB8707BC();
  v4 = (void *)sub_1BB870438();
  swift_release();
  v5 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  sub_1BB8707BC();
  v6 = (void *)sub_1BB870438();
  swift_release();
  objc_msgSend(v6, sel_setShowsHorizontalScrollIndicator_, 0);

}

double FormatViewController.pluginLayoutTransitionManager.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *boxed_opaque_existential_0;
  double result;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_1BB870804();
  v2 = v8;
  if (v8)
  {
    v3 = v9;
    v4 = __swift_project_boxed_opaque_existential_1(v7, v8);
    *(_QWORD *)(a1 + 24) = v2;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v3 + 8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(boxed_opaque_existential_0, v4, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_1BA502AD0((uint64_t)v7, &qword_1EF2C9A38, (void (*)(uint64_t))sub_1BB6528C0);
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t FormatViewController.pluginItemCount.getter()
{
  return sub_1BB6501D8(MEMORY[0x1E0DBC6C8]);
}

uint64_t FormatViewController.pluginVisibleItemCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v8[2];

  sub_1BB6529E8(0, &qword_1ED3A3D88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB76E8]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v8 - v4;
  v8[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintLayoutProvider);
  sub_1BB6529E8(0, (unint64_t *)&qword_1ED3D4B58, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9980]);
  sub_1BB0E5334();
  sub_1BB870BF4();
  v6 = sub_1BB86FAB4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t FormatViewController.pluginItemIdentifiers.getter()
{
  return sub_1BB6501D8(MEMORY[0x1E0DBC6D8]);
}

uint64_t sub_1BB6501D8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  sub_1BB652914(0, &qword_1ED3A4190, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v9 - v5;
  sub_1BB8707D4();
  v9[0] = v9[1];
  sub_1BB652914(0, (unint64_t *)&qword_1ED3A3DE0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1BB0E5318();
  sub_1BB870420();
  swift_release();
  v7 = a1(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t FormatViewController.initialize(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(void (*)(), _QWORD *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  v8 = *(_QWORD *)(v5 + 56);
  ObjectType = swift_getObjectType();
  v10 = *(void (**)(void (*)(), _QWORD *, uint64_t, uint64_t))(v8 + 32);
  swift_retain();
  swift_retain();
  v10(sub_1BB652A90, v7, ObjectType, v8);
  swift_release();
  return swift_release();
}

void sub_1BB6503A4(uint64_t a1, void (*a2)(double, double), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  id v9;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = v7;
    v8[3] = a2;
    v8[4] = a3;
    v9 = v7;
    swift_retain();
    sub_1BB86ED4C();
    swift_release();
    sub_1BB86DEB8();

  }
  else
  {
    a2(0.0, 0.0);
  }
}

uint64_t FormatViewController.relayout(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  v8 = *(_QWORD *)(v5 + 56);
  ObjectType = swift_getObjectType();
  v10 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v8 + 48);
  swift_retain();
  swift_retain();
  v10(sub_1BB652AA0, v7, ObjectType, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_1BB650540(uint64_t a1, uint64_t (*a2)(double, double), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  id v9;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  if (!v6)
    return a2(0.0, 0.0);
  v7 = (void *)v6;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v7;
  v8[3] = a2;
  v8[4] = a3;
  v9 = v7;
  swift_retain();
  sub_1BB86ED4C();

  return swift_release();
}

uint64_t sub_1BB6505F4(uint64_t a1, uint64_t (*a2)(double, double))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1BB8705C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB8707EC();
  swift_getObjectType();
  sub_1BB871008();
  swift_unknownObjectRelease();
  sub_1BB8705B8();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BB8707BC();
  v10 = (void *)sub_1BB870438();
  swift_release();
  v11 = objc_msgSend(v10, sel_collectionViewLayout);

  objc_msgSend(v11, sel_collectionViewContentSize);
  v13 = v12;

  result = a2(v9, v13);
  v15 = a1 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_lastComputedSize;
  *(double *)v15 = v9;
  *(double *)(v15 + 8) = v13;
  *(_BYTE *)(v15 + 16) = 0;
  return result;
}

uint64_t sub_1BB650744()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate;
  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v1);
}

uint64_t sub_1BB650794(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;

  v4 = *v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1BB650800(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  v6 = v4 + v5;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCE5D40](v6);
  v8 = *(_QWORD *)(v6 + 8);
  v3[3] = v7;
  v3[4] = v8;
  return sub_1BA8FC358;
}

uint64_t sub_1BB650878()
{
  _QWORD *v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1BB6508C0(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _BYTE *v7;
  unsigned int *v8;
  uint64_t v10;

  v3 = sub_1BB870BA0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_BYTE *)(*v1 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  swift_beginAccess();
  *v7 = a1;
  v8 = (unsigned int *)MEMORY[0x1E0DBA6B8];
  if ((a1 & 1) == 0)
    v8 = (unsigned int *)MEMORY[0x1E0DBA6B0];
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *v8, v3);
  return sub_1BB8707E0();
}

void (*sub_1BB650994(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v4 = sub_1BB870BA0();
  v3[3] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[4] = v5;
  v6 = malloc(*(_QWORD *)(v5 + 64));
  v7 = *v1;
  v3[5] = v6;
  v3[6] = v7;
  v3[7] = OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin;
  swift_beginAccess();
  return sub_1BB650A1C;
}

void sub_1BB650A1C(_QWORD **a1, char a2)
{
  _QWORD *v3;
  void *v4;
  unsigned int *v5;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) != 0)
  {
    v4 = (void *)v3[5];
  }
  else
  {
    v4 = (void *)v3[5];
    if (*(_BYTE *)(v3[6] + v3[7]))
      v5 = (unsigned int *)MEMORY[0x1E0DBA6B8];
    else
      v5 = (unsigned int *)MEMORY[0x1E0DBA6B0];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v3[4] + 104))(v3[5], *v5, v3[3]);
    sub_1BB8707E0();
  }
  free(v4);
  free(v3);
}

uint64_t sub_1BB650AB0(uint64_t a1, uint64_t a2)
{
  return sub_1BB650BA8(a1, a2, MEMORY[0x1E0DBC6C8]);
}

uint64_t sub_1BB650ABC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v8[2];

  sub_1BB6529E8(0, &qword_1ED3A3D88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB76E8]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v8 - v4;
  v8[1] = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintLayoutProvider);
  sub_1BB6529E8(0, (unint64_t *)&qword_1ED3D4B58, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9980]);
  sub_1BB0E5334();
  sub_1BB870BF4();
  v6 = sub_1BB86FAB4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_1BB650B9C(uint64_t a1, uint64_t a2)
{
  return sub_1BB650BA8(a1, a2, MEMORY[0x1E0DBC6D8]);
}

uint64_t sub_1BB650BA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];

  sub_1BB652914(0, &qword_1ED3A4190, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  sub_1BB8707D4();
  v11[0] = v11[1];
  sub_1BB652914(0, (unint64_t *)&qword_1ED3A3DE0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1BB0E5318();
  sub_1BB870420();
  swift_release();
  v9 = a3(v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

double sub_1BB650CA8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *boxed_opaque_existential_0;
  double result;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_1BB870804();
  v2 = v8;
  if (v8)
  {
    v3 = v9;
    v4 = __swift_project_boxed_opaque_existential_1(v7, v8);
    *(_QWORD *)(a1 + 24) = v2;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v3 + 8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(boxed_opaque_existential_0, v4, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_1BA502AD0((uint64_t)v7, &qword_1EF2C9A38, (void (*)(uint64_t))sub_1BB6528C0);
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1BB650D64(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(void (*)(), _QWORD *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(*v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  v8 = *(_QWORD *)(v5 + 56);
  ObjectType = swift_getObjectType();
  v10 = *(void (**)(void (*)(), _QWORD *, uint64_t, uint64_t))(v8 + 32);
  swift_retain();
  swift_retain();
  v10(sub_1BB653284, v7, ObjectType, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_1BB650E38(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(*v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  v8 = *(_QWORD *)(v5 + 56);
  ObjectType = swift_getObjectType();
  v10 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v8 + 48);
  swift_retain();
  swift_retain();
  v10(sub_1BB653280, v7, ObjectType, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_1BB650F0C(uint64_t result, double a2, double a3)
{
  double *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (double *)(result + OBJC_IVAR____TtC8NewsFeed20FormatViewController_lastComputedSize);
  if ((*(_BYTE *)(result + OBJC_IVAR____TtC8NewsFeed20FormatViewController_lastComputedSize + 16) & 1) != 0
    || *v3 != a2
    || v3[1] != a3)
  {
    v4 = result + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate;
    swift_beginAccess();
    result = MEMORY[0x1BCCE5D40](v4);
    if (result)
    {
      swift_getObjectType();
      sub_1BA50AD30((unint64_t *)&qword_1ED3A6998, v5, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewController, (uint64_t)&protocol conformance descriptor for FormatViewController);
      sub_1BB870EA0();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t FormatViewController.formatBlueprintViewCellProvider(_:handleAction:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB652AAC(a2, a3);
}

uint64_t sub_1BB650FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB652AAC(a2, a3);
}

Swift::Void __swiftcall FormatViewController.blueprintReadableContentGuideDidChange(_:)(UILayoutGuide a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v2 = objc_msgSend(v1, sel_navigationController);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_navigationBar);

    sub_1BB873720();
  }
}

uint64_t FormatViewController.blueprint(_:didSelect:at:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t ObjectType;
  void (*v26)(uint64_t, char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = v4;
  v8 = type metadata accessor for FormatBlueprintItemSelectionContext.Action(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatBlueprintItemSelectionContext(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(v5, sel_tabBarSplitViewFocusable, v12);
  if (v15)
  {
    objc_msgSend(v15, sel_toggleSplitViewFocusTo_, 2);
    swift_unknownObjectRelease();
  }
  v16 = *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler];
  v17 = sub_1BB870AE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v10, a4, v17);
  sub_1BB652E20();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 0, 2, v18);
  v19 = &v5[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier];
  result = swift_beginAccess();
  v21 = *((_QWORD *)v19 + 1);
  if (v21)
  {
    v22 = *(_QWORD *)v19;
    sub_1BB652E6C((uint64_t)v10, (uint64_t)v14);
    v23 = &v14[*(int *)(v11 + 20)];
    *(_QWORD *)v23 = v22;
    *((_QWORD *)v23 + 1) = v21;
    v24 = *(_QWORD *)(v16 + 112);
    ObjectType = swift_getObjectType();
    v26 = *(void (**)(uint64_t, char *, uint64_t, uint64_t))(v24 + 32);
    swift_bridgeObjectRetain();
    v26(a2, v14, ObjectType, v24);
    if (MEMORY[0x1BCCE5D40](v16 + 32))
    {
      v27 = *(_QWORD *)(v16 + 40);
      v28 = swift_getObjectType();
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v27 + 8))(a2, v14, v28, v27);
      swift_unknownObjectRelease();
    }
    return sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatBlueprintItemSelectionContext);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FormatViewController.blueprint(_:previewViewControllerFor:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  result = swift_beginAccess();
  v7 = v5[1];
  if (v7)
  {
    v8 = *v5;
    if (!MEMORY[0x1BCCE5D40](v4 + 32))
      return 0;
    v9 = *(_QWORD *)(v4 + 40);
    ObjectType = swift_getObjectType();
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v12 = v11(a2, v8, v7, ObjectType, v9);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FormatViewController.blueprint(_:didStartImpression:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  result = swift_beginAccess();
  v7 = v5[1];
  if (v7)
  {
    v8 = *v5;
    v9 = *(_QWORD *)(v4 + 112);
    ObjectType = swift_getObjectType();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FormatViewController.blueprint(_:createdImpression:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  result = swift_beginAccess();
  v7 = v5[1];
  if (v7)
  {
    v8 = *v5;
    v9 = *(_QWORD *)(v4 + 112);
    ObjectType = swift_getObjectType();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FormatViewController.blueprint(_:cancelledImpression:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  result = swift_beginAccess();
  v7 = v5[1];
  if (v7)
  {
    v8 = *v5;
    v9 = *(_QWORD *)(v4 + 112);
    ObjectType = swift_getObjectType();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void FormatViewController.blueprint(_:layoutOptionsDidChange:triggeredBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t ObjectType;
  void *v17;
  uint64_t v18;

  v5 = sub_1BB87105C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a3, v5, v7);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v10 == *MEMORY[0x1E0DBB9D0])
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
LABEL_9:
    v14 = (_BYTE *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
    swift_beginAccess();
    if ((*v14 & 1) == 0)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler) + 56);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t (*)(), _QWORD, uint64_t, uint64_t))(v15 + 48))(nullsub_1, 0, ObjectType, v15);
    }
    return;
  }
  if (v10 == *MEMORY[0x1E0DBB9A8])
  {
    v11 = (_BYTE *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
    swift_beginAccess();
    if ((*v11 & 1) == 0)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler) + 56);
      v13 = swift_getObjectType();
      (*(void (**)(uint64_t (*)(), _QWORD, uint64_t, uint64_t))(v12 + 32))(nullsub_1, 0, v13, v12);
    }
  }
  else
  {
    if (v10 == *MEMORY[0x1E0DBB9C8])
      goto LABEL_9;
    if (v10 == *MEMORY[0x1E0DBB9F8])
      return;
    if (v10 == *MEMORY[0x1E0DBB9B0])
      goto LABEL_9;
    if (v10 != *MEMORY[0x1E0DBB9D8])
    {
      if (v10 == *MEMORY[0x1E0DBB9F0])
      {
        sub_1BB8707BC();
        v17 = (void *)sub_1BB870438();
        swift_release();
        objc_msgSend(v17, sel_reloadData);

      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      }
    }
  }
}

void sub_1BB6517C0()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_navigationController);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_navigationBar);

    sub_1BB873720();
  }
}

uint64_t sub_1BB651850()
{
  swift_getObjectType();
  return sub_1BB8710E0();
}

uint64_t sub_1BB6518A8()
{
  swift_getObjectType();
  return sub_1BB8710E0();
}

uint64_t sub_1BB6518FC()
{
  swift_getObjectType();
  return sub_1BB8710D4();
}

uint64_t sub_1BB651944()
{
  swift_getObjectType();
  return sub_1BB8710E0();
}

uint64_t sub_1BB651998(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  result = swift_beginAccess();
  v7 = v5[1];
  if (v7)
  {
    v8 = *v5;
    v9 = *(_QWORD *)(v4 + 112);
    ObjectType = swift_getObjectType();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB651A50()
{
  swift_getObjectType();
  return sub_1BB8710EC();
}

uint64_t sub_1BB651A94()
{
  swift_getObjectType();
  return sub_1BB8710EC();
}

uint64_t sub_1BB651AD8()
{
  swift_getObjectType();
  return sub_1BB8710EC();
}

uint64_t sub_1BB651B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  result = swift_beginAccess();
  v7 = v5[1];
  if (v7)
  {
    v8 = *v5;
    v9 = *(_QWORD *)(v4 + 112);
    ObjectType = swift_getObjectType();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB651BD4()
{
  swift_getObjectType();
  return sub_1BB8710EC();
}

uint64_t sub_1BB651C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  result = swift_beginAccess();
  v7 = v5[1];
  if (v7)
  {
    v8 = *v5;
    v9 = *(_QWORD *)(v4 + 112);
    ObjectType = swift_getObjectType();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB651CD4()
{
  swift_getObjectType();
  return sub_1BB871140();
}

uint64_t sub_1BB651D18()
{
  swift_getObjectType();
  return sub_1BB8710E0();
}

uint64_t sub_1BB651D6C()
{
  swift_getObjectType();
  return sub_1BB8710F8();
}

uint64_t sub_1BB651DC0()
{
  swift_getObjectType();
  return sub_1BB871080();
}

uint64_t sub_1BB651DFC()
{
  swift_getObjectType();
  return sub_1BB871080();
}

uint64_t sub_1BB651E38()
{
  swift_getObjectType();
  return sub_1BB8710C8();
}

uint64_t sub_1BB651E74()
{
  swift_getObjectType();
  return sub_1BB871080();
}

uint64_t sub_1BB651EB0()
{
  swift_getObjectType();
  return sub_1BB871080();
}

uint64_t sub_1BB651EEC()
{
  swift_getObjectType();
  return sub_1BB871134();
}

uint64_t sub_1BB651F30()
{
  swift_getObjectType();
  return sub_1BB87114C();
}

uint64_t sub_1BB651F84()
{
  swift_getObjectType();
  return sub_1BB8710A4();
}

uint64_t sub_1BB651FC8()
{
  swift_getObjectType();
  return sub_1BB8710A4();
}

uint64_t FormatViewController.responder.getter()
{
  return sub_1BB870834();
}

uint64_t sub_1BB652034()
{
  return sub_1BB870834();
}

uint64_t FormatViewController.startTraversing(direction:)()
{
  return sub_1BB8707C8();
}

uint64_t FormatViewController.isSelectable.getter()
{
  return 1;
}

Swift::Void __swiftcall FormatViewController.viewWillAppear()()
{
  sub_1BB65210C(MEMORY[0x1E0DB8FC0]);
}

Swift::Void __swiftcall FormatViewController.viewDidAppear()()
{
  sub_1BB65210C(MEMORY[0x1E0DB8FB8]);
}

Swift::Void __swiftcall FormatViewController.viewWillDisappear()()
{
  sub_1BB65210C(MEMORY[0x1E0DB8FD0]);
}

Swift::Void __swiftcall FormatViewController.viewDidDisappear()()
{
  sub_1BB65210C(MEMORY[0x1E0DB8FC8]);
}

uint64_t sub_1BB65210C(void (*a1)(void))
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  result = swift_beginAccess();
  if (*v3 == 1)
  {
    sub_1BB8707BC();
    a1();
    return swift_release();
  }
  return result;
}

void sub_1BB652184()
{
  FormatViewController.viewDidLoad()();
}

uint64_t sub_1BB6521A4(uint64_t a1, uint64_t a2)
{
  return sub_1BB6521D4(a1, a2, MEMORY[0x1E0DB8FC0]);
}

uint64_t sub_1BB6521B0(uint64_t a1, uint64_t a2)
{
  return sub_1BB6521D4(a1, a2, MEMORY[0x1E0DB8FB8]);
}

uint64_t sub_1BB6521BC(uint64_t a1, uint64_t a2)
{
  return sub_1BB6521D4(a1, a2, MEMORY[0x1E0DB8FD0]);
}

uint64_t sub_1BB6521C8(uint64_t a1, uint64_t a2)
{
  return sub_1BB6521D4(a1, a2, MEMORY[0x1E0DB8FC8]);
}

uint64_t sub_1BB6521D4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  _QWORD *v3;
  _BYTE *v5;
  uint64_t result;

  v5 = (_BYTE *)(*v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  result = swift_beginAccess();
  if (*v5 == 1)
  {
    sub_1BB8707BC();
    a3();
    return swift_release();
  }
  return result;
}

uint64_t FormatViewController.shouldMonitorMotion.getter()
{
  return 0;
}

uint64_t FormatViewController.shouldMonitorScroll.getter()
{
  void *v0;
  void *v1;

  sub_1BB8707BC();
  v0 = (void *)sub_1BB870438();
  swift_release();
  swift_getObjectType();
  if (swift_conformsToProtocol2())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
  {
    swift_getObjectType();
    LOBYTE(v1) = sub_1BB870ED0();
  }

  return v1 & 1;
}

void FormatViewController.blueprintViewportMonitor(_:viewportScrollDataDidChange:)()
{
  id v0;
  id v1;

  sub_1BB8707BC();
  v1 = (id)sub_1BB870438();
  swift_release();
  swift_getObjectType();
  if (swift_conformsToProtocol2())
    v0 = v1;
  else
    v0 = 0;
  if (v0)
  {
    swift_getObjectType();
    sub_1BB870EDC();
  }

}

uint64_t sub_1BB652378()
{
  void *v0;
  void *v1;

  sub_1BB8707BC();
  v0 = (void *)sub_1BB870438();
  swift_release();
  swift_getObjectType();
  if (swift_conformsToProtocol2())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
  {
    swift_getObjectType();
    LOBYTE(v1) = sub_1BB870ED0();
  }

  return v1 & 1;
}

void sub_1BB6523FC()
{
  id v0;
  id v1;

  sub_1BB8707BC();
  v1 = (id)sub_1BB870438();
  swift_release();
  swift_getObjectType();
  if (swift_conformsToProtocol2())
    v0 = v1;
  else
    v0 = 0;
  if (v0)
  {
    swift_getObjectType();
    sub_1BB870EDC();
  }

}

void sub_1BB652498(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t ObjectType;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v5 = type metadata accessor for FormatBlueprintItemSelectionContext.Action(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for FormatBlueprintItemSelectionContext(0);
  MEMORY[0x1E0C80A78](v41);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1EF2C9A78, (void (*)(uint64_t))sub_1BA8676E0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  sub_1BA8676E0();
  v44 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  MEMORY[0x1E0C80A78](v13);
  v43 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB652914(0, &qword_1ED3A4190, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v16 = v15;
  v42 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v39 - v17;
  v19 = *a1;
  v20 = a1[2];
  swift_beginAccess();
  v21 = MEMORY[0x1BCCE5D40](a3 + 16);
  if (v21)
  {
    v22 = (char *)v21;
    if (v19 && v20)
    {
      v40 = v9;
      sub_1BB8707D4();
      v47 = v46;
      sub_1BB652914(0, (unint64_t *)&qword_1ED3A3DE0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
      sub_1BB0E5318();
      sub_1BB870420();
      swift_release();
      sub_1BB871614();
      v24 = v44;
      v23 = v45;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v12, 1, v45) == 1)
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v16);

        sub_1BA502AD0((uint64_t)v12, &qword_1EF2C9A78, (void (*)(uint64_t))sub_1BA8676E0);
        return;
      }
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v43, v12, v23);
      v25 = *(_QWORD *)&v22[OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler];
      sub_1BB870AD4();
      sub_1BB652E20();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 0, 2, v26);
      v27 = &v22[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier];
      swift_beginAccess();
      v28 = *((_QWORD *)v27 + 1);
      if (!v28)
      {
        __break(1u);
        return;
      }
      v29 = *(_QWORD *)v27;
      v30 = (uint64_t)v40;
      sub_1BB652E6C((uint64_t)v7, (uint64_t)v40);
      v31 = (_QWORD *)(v30 + *(int *)(v41 + 20));
      *v31 = v29;
      v31[1] = v28;
      v32 = *(_QWORD *)(v25 + 112);
      ObjectType = swift_getObjectType();
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 32);
      swift_bridgeObjectRetain();
      v35 = v43;
      v34(v43, v30, ObjectType, v32);
      v36 = v35;
      if (MEMORY[0x1BCCE5D40](v25 + 32))
      {
        v37 = *(_QWORD *)(v25 + 40);
        v38 = swift_getObjectType();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 8))(v36, v30, v38, v37);
        swift_unknownObjectRelease();
      }
      sub_1BA4A2E80(v30, type metadata accessor for FormatBlueprintItemSelectionContext);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v45);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v16);
    }

  }
}

uint64_t sub_1BB652854()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1BB652888(char *a1)
{
  uint64_t v1;

  sub_1BB64E494(*a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(id))(v1 + 32));
}

uint64_t type metadata accessor for FormatViewController()
{
  return objc_opt_self();
}

void sub_1BB6528B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BB652498(a1, a2, v2);
}

unint64_t sub_1BB6528C0()
{
  unint64_t result;

  result = qword_1EF2C9A40;
  if (!qword_1EF2C9A40)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2C9A40);
  }
  return result;
}

void sub_1BB652914(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = type metadata accessor for FormatSectionDescriptor();
    v8[1] = type metadata accessor for FormatModel();
    v8[2] = sub_1BA50AD30(&qword_1ED3A7240, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatSectionDescriptor);
    v8[3] = sub_1BA50AD30((unint64_t *)&qword_1ED3A53E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatModel, (uint64_t)&protocol conformance descriptor for FormatModel);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB6529E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = type metadata accessor for FormatLayoutSectionDescriptor(255);
    v8[1] = &type metadata for FormatLayoutModel;
    v8[2] = sub_1BA50AD30((unint64_t *)&qword_1ED3D4E30, 255, type metadata accessor for FormatLayoutSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatLayoutSectionDescriptor);
    v8[3] = sub_1BA83171C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB652A90()
{
  uint64_t v0;

  sub_1BB6503A4(*(_QWORD *)(v0 + 16), *(void (**)(double, double))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BB652AA0()
{
  uint64_t v0;

  return sub_1BB650540(*(_QWORD *)(v0 + 16), *(uint64_t (**)(double, double))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BB652AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t ObjectType;
  void (*v31)(uint64_t, char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a2;
  v4 = type metadata accessor for FormatBlueprintItemSelectionContext.Action(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v47 - v8;
  v10 = type metadata accessor for FormatBlueprintItemSelectionContext(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v47 - v14;
  v16 = type metadata accessor for FeedAction(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v47 - v20;
  sub_1BB559128(a1, (uint64_t)&v47 - v20);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FeedAction);
  sub_1BB559128((uint64_t)v21, (uint64_t)v18);
  if (*v18)
  {
    if (*v18 == 1)
      return sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FeedAction);
    v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
    sub_1BB652E20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 2, 2, v23);
    v24 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
    result = swift_beginAccess();
    v26 = v24[1];
    if (v26)
    {
      v27 = *v24;
      sub_1BB652E6C((uint64_t)v6, (uint64_t)v12);
      v28 = &v12[*(int *)(v10 + 20)];
      *(_QWORD *)v28 = v27;
      *((_QWORD *)v28 + 1) = v26;
      v29 = *(_QWORD *)(v22 + 112);
      ObjectType = swift_getObjectType();
      v31 = *(void (**)(uint64_t, char *, uint64_t, uint64_t))(v29 + 32);
      swift_bridgeObjectRetain();
      v32 = v47;
      v31(v47, v12, ObjectType, v29);
      if (!MEMORY[0x1BCCE5D40](v22 + 32))
      {
LABEL_12:
        sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatBlueprintItemSelectionContext);
        return sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FeedAction);
      }
      v33 = *(_QWORD *)(v22 + 40);
      v34 = swift_getObjectType();
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v33 + 8))(v32, v12, v34, v33);
LABEL_10:
      swift_unknownObjectRelease();
      goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
    v35 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
    sub_1BB652E20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v9, 1, 2, v36);
    v37 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
    result = swift_beginAccess();
    v38 = v37[1];
    if (v38)
    {
      v39 = *v37;
      sub_1BB652E6C((uint64_t)v9, (uint64_t)v15);
      v40 = &v15[*(int *)(v10 + 20)];
      *(_QWORD *)v40 = v39;
      *((_QWORD *)v40 + 1) = v38;
      v41 = *(_QWORD *)(v35 + 112);
      v42 = swift_getObjectType();
      v43 = *(void (**)(uint64_t, char *, uint64_t, uint64_t))(v41 + 32);
      swift_bridgeObjectRetain();
      v44 = v47;
      v43(v47, v15, v42, v41);
      if (!MEMORY[0x1BCCE5D40](v35 + 32))
      {
        v12 = v15;
        goto LABEL_12;
      }
      v45 = *(_QWORD *)(v35 + 40);
      v46 = swift_getObjectType();
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v45 + 8))(v44, v15, v46, v45);
      v12 = v15;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

void sub_1BB652E20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C9A50)
  {
    v0 = sub_1BB870AE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C9A50);
  }
}

uint64_t sub_1BB652E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatBlueprintItemSelectionContext.Action(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB652EB0(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C9A58, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewController, (uint64_t)&protocol conformance descriptor for FormatViewController);
}

uint64_t sub_1BB652EDC()
{
  return sub_1BA50AD30(&qword_1ED3A7240, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatSectionDescriptor);
}

uint64_t sub_1BB652F0C()
{
  return sub_1BA50AD30((unint64_t *)&qword_1ED3A53E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatModel, (uint64_t)&protocol conformance descriptor for FormatModel);
}

uint64_t sub_1BB652F3C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1BB652F90@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate, a2);
}

uint64_t sub_1BB652F9C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate);
}

uint64_t sub_1BB652FA8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider, a2);
}

uint64_t sub_1BB652FB4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider);
}

uint64_t method lookup function for FormatViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for FormatViewController.Event(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB653018 + 4 * byte_1BB938045[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB65304C + 4 * asc_1BB938040[v4]))();
}

uint64_t sub_1BB65304C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB653054(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB65305CLL);
  return result;
}

uint64_t sub_1BB653068(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB653070);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB653074(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB65307C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatViewController.Event()
{
  return &type metadata for FormatViewController.Event;
}

unint64_t sub_1BB65309C()
{
  unint64_t result;

  result = qword_1ED3A0EE0[0];
  if (!qword_1ED3A0EE0[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB938470, &type metadata for FormatViewController.Event);
    atomic_store(result, qword_1ED3A0EE0);
  }
  return result;
}

void sub_1BB6530E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A2550)
  {
    sub_1BA864F60();
    v0 = sub_1BB86DEDC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A2550);
  }
}

uint64_t sub_1BB653138()
{
  uint64_t v0;

  return sub_1BB64ED90(v0);
}

void sub_1BB653140()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1 = &v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_lastComputedSize];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v2[16] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventManager;
  sub_1BB6530E0();
  swift_allocObject();
  *(_QWORD *)&v0[v3] = sub_1BB86DED0();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController____lazy_storage___maskLayer] = 0;

  sub_1BB873EAC();
  __break(1u);
}

uint64_t objectdestroy_32Tm_0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

BOOL static SharingChannelActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SharingChannelActivity.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t SharingChannelActivity.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB653310()
{
  unint64_t result;

  result = qword_1EF2C9A80;
  if (!qword_1EF2C9A80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SharingChannelActivity, &type metadata for SharingChannelActivity);
    atomic_store(result, (unint64_t *)&qword_1EF2C9A80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SharingChannelActivity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB6533A0 + 4 * byte_1BB9384A5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB6533D4 + 4 * byte_1BB9384A0[v4]))();
}

uint64_t sub_1BB6533D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6533DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6533E4);
  return result;
}

uint64_t sub_1BB6533F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6533F8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB6533FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB653404(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharingChannelActivity()
{
  return &type metadata for SharingChannelActivity;
}

uint64_t static CoverIssueViewLayout.makeLayoutForChannelFeed(context:factories:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1BB86DA38();
  v5 = MEMORY[0x1E0C80A78](v4);
  v10 = a1;
  v11 = a2;
  (*(void (**)(_BYTE *, _QWORD, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB6208], v5);
  sub_1BAA46860(0, (unint64_t *)&qword_1ED39C2F0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  return sub_1BB86DB34();
}

uint64_t sub_1BB6534E8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t (*v24)(char *, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  double v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v36 - v9;
  v11 = a2[40];
  v12 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v11);
  v13 = (*(double (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  if (qword_1ED39E210 != -1)
    swift_once();
  objc_msgSend((id)qword_1ED476400, sel_size);
  v16 = v13 * (v14 / v15);
  v17 = a2[40];
  v18 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v17);
  v19 = (*(double (**)(uint64_t, uint64_t))(v18 + 48))(v17, v18);
  v20 = a2[40];
  v21 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v20);
  v22 = (*(double (**)(uint64_t, uint64_t))(v21 + 56))(v20, v21);
  v23 = v19 + v22 + v22;
  v37 = a1;
  v24 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104);
  v25 = v24(v10, *MEMORY[0x1E0DB6410], v7);
  v36 = a1;
  MEMORY[0x1E0C80A78](v25);
  *(&v36 - 6) = a3;
  *(&v36 - 5) = (uint64_t)a2;
  v32 = 0x4030000000000000;
  v33 = v16;
  v35 = v23;
  v26 = MEMORY[0x1E0DB5DD0];
  sub_1BAA46860(0, &qword_1ED39C2B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  v28 = v27;
  v29 = sub_1BAA468DC(&qword_1ED39C2B0, &qword_1ED39C2B8, (uint64_t (*)(uint64_t, _QWORD *))v26, MEMORY[0x1E0DB5DD8]);
  v34 = v29;
  sub_1BB86D4BC();
  v30 = *(void (**)(char *, uint64_t))(v8 + 8);
  v30(v10, v7);
  v37 = v36;
  v24(v10, *MEMORY[0x1E0DB63C0], v7);
  v34 = v28;
  v35 = *(double *)&v29;
  v32 = (uint64_t)sub_1BB65523C;
  v33 = 0.0;
  sub_1BB86D540();
  return ((uint64_t (*)(char *, uint64_t))v30)(v10, v7);
}

uint64_t sub_1BB6537B8(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void (*v18)(uint64_t *);
  uint64_t (*v19)(uint64_t, _QWORD *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  __int128 v34;
  char v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(uint64_t *, uint64_t);
  void *v45;
  uint64_t v46;
  void (*v47)(uint64_t *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t (*v58)(uint64_t *, uint64_t);
  uint64_t v59;
  _QWORD v61[3];
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t *);
  uint64_t v67;
  void (*v68)(uint64_t *, uint64_t);
  uint64_t v69;
  unsigned int v70;
  void *v71;
  char v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  char v82;
  void *v83;
  uint64_t v84;
  _BYTE v85[40];
  char v86;
  uint64_t v87;
  void *v88;
  _OWORD v89[6];
  __int128 v90;
  _OWORD v91[3];

  v61[0] = a2;
  v71 = a1;
  sub_1BB16AF40();
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  MEMORY[0x1E0C80A78](v7);
  v62 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (_QWORD *)((char *)v61 - v15);
  *(_QWORD *)&v89[0] = a1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0x4024000000000000;
  *v16 = v17;
  v18 = *(void (**)(uint64_t *))(v11 + 104);
  v70 = *MEMORY[0x1E0DB63F0];
  v18(v16);
  v19 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v21 = v20;
  v22 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v19, MEMORY[0x1E0DB5A18]);
  v69 = v21;
  v67 = v22;
  sub_1BB86D4EC();
  v68 = *(void (**)(uint64_t *, uint64_t))(v11 + 8);
  v68(v16, v10);
  v88 = v71;
  v61[2] = swift_getKeyPath();
  v23 = *MEMORY[0x1E0DB6410];
  v24 = v13;
  v65 = v10;
  v66 = v18;
  ((void (*)(char *, uint64_t, uint64_t))v18)(v13, v23, v10);
  v87 = *(_QWORD *)(v61[0] + 24);
  v25 = *(_OWORD *)(a3 + 88);
  v26 = *(_OWORD *)(a3 + 120);
  v90 = *(_OWORD *)(a3 + 104);
  v91[0] = v26;
  *(_OWORD *)((char *)v91 + 9) = *(_OWORD *)(a3 + 129);
  v27 = *(_OWORD *)(a3 + 24);
  v28 = *(_OWORD *)(a3 + 56);
  v89[2] = *(_OWORD *)(a3 + 40);
  v89[3] = v28;
  v89[4] = *(_OWORD *)(a3 + 72);
  v89[5] = v25;
  v89[0] = *(_OWORD *)(a3 + 8);
  v89[1] = v27;
  v29 = *(void **)&v89[0];
  if ((_QWORD)v25 == 1 || (v30 = (void *)*((_QWORD *)&v90 + 1)) == 0)
  {
    swift_retain();
    sub_1BA8D1F08((uint64_t)v89);
    FCIssue.issueCoverModel.getter((uint64_t)&v83);
    sub_1BA8D1FE4((uint64_t)v89);
    v29 = v83;
    v31 = v84;
    v37 = *(_OWORD *)v85;
    v34 = *(_OWORD *)&v85[16];
    v36 = *(_QWORD *)&v85[32];
    v35 = v86;
  }
  else
  {
    v31 = *(_QWORD *)&v91[0];
    v83 = *(void **)&v89[0];
    v84 = *(_QWORD *)&v91[0];
    *(_QWORD *)v85 = *((_QWORD *)&v90 + 1);
    memset(&v85[8], 0, 32);
    v86 = 0;
    swift_retain();
    v32 = v30;
    v33 = v29;
    v34 = 0uLL;
    v35 = 0;
    v36 = 0;
    v37 = (unint64_t)v30;
  }
  v77 = v29;
  v78 = v31;
  v79 = v37;
  v80 = v34;
  v81 = v36;
  v82 = v35;
  v61[1] = a3;
  v38 = *(_QWORD *)(a3 + 320);
  v39 = *(_QWORD *)(a3 + 328);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 296), v38);
  v40 = (*(double (**)(uint64_t, uint64_t))(v39 + 64))(v38, v39);
  v72 = 0;
  v73 = 0x4010000000000000;
  v74 = v40;
  v75 = -1;
  v76 = 0x3FE0000000000000;
  sub_1BA4CDF6C(0, &qword_1ED39C280, (uint64_t (*)(void))sub_1BA8D93BC, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BA915CEC();
  sub_1BB16B024();
  sub_1BA4A2870(&qword_1ED39D730, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for IssueCoverViewLayoutAttributesFactory);
  v41 = v62;
  sub_1BB86D684();
  sub_1BB86D4D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v41, v64);
  v42 = v24;
  v43 = v65;
  v44 = v68;
  v68((uint64_t *)v42, v65);
  v83 = v71;
  v45 = v71;
  v46 = swift_allocObject();
  *(double *)(v46 + 16) = a4;
  *v16 = v46;
  v47 = v66;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v66)(v16, v70, v43);
  sub_1BB86D4EC();
  v44(v16, v43);
  v83 = v45;
  sub_1BA71C838();
  v49 = v48;
  v50 = swift_allocBox();
  v52 = v51;
  v53 = v51 + *(int *)(v49 + 48);
  v54 = *MEMORY[0x1E0DB5F98];
  v55 = sub_1BB86D894();
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104);
  v56(v52, v54, v55);
  v56(v53, *MEMORY[0x1E0DB5FB8], v55);
  *v16 = v50;
  v57 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v47)(v16, *MEMORY[0x1E0DB63D0], v43);
  MEMORY[0x1E0C80A78](v57);
  sub_1BB86D498();
  v58 = (uint64_t (*)(uint64_t *, uint64_t))v68;
  v68(v16, v43);
  v83 = v71;
  v59 = swift_allocObject();
  *(_QWORD *)(v59 + 16) = 0x4024000000000000;
  *v16 = v59;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v47)(v16, v70, v43);
  sub_1BB86D4EC();
  return v58(v16, v43);
}

uint64_t sub_1BB653DF4(void *a1)
{
  uint64_t v1;

  return sub_1BB6537B8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1BB653E04(uint64_t a1, _QWORD *a2, double a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  void (*v33)(uint64_t *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  void (*v45)(uint64_t *);
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, _QWORD *);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  void (*v61)(uint64_t *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, _QWORD *);
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t *v76;
  uint64_t (*v77)(uint64_t *, uint64_t, uint64_t);
  uint64_t v78;
  _QWORD *v79;
  uint64_t KeyPath;
  uint64_t v81;
  _QWORD v82[7];
  char v83;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v10 = v9;
  v79 = *(_QWORD **)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v74 - v11);
  v13 = a2[7];
  sub_1BA915B28((uint64_t)a2, (uint64_t)v82);
  KeyPath = a1;
  if ((v13 & 1) != 0)
  {
    v14 = v83;
    sub_1BA915C30((uint64_t)v82);
    if ((v14 & 8) == 0)
    {
      v81 = a1;
      sub_1BA71C838();
      v16 = v15;
      v17 = swift_allocBox();
      v19 = v18;
      v76 = (uint64_t *)((char *)v18 + *(int *)(v16 + 48));
      v77 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v17;
      v20 = swift_allocObject();
      *(double *)(v20 + 16) = a3;
      *v19 = v20;
      v21 = *MEMORY[0x1E0DB5FA0];
      v22 = sub_1BB86D894();
      v23 = *(_QWORD *)(v22 - 8);
      v78 = v10;
      v24 = *(void (**)(void))(v23 + 104);
      ((void (*)(uint64_t *, uint64_t, uint64_t))v24)(v19, v21, v22);
      v25 = swift_allocObject();
      v27 = a2[40];
      v26 = a2[41];
      __swift_project_boxed_opaque_existential_1(a2 + 37, v27);
      *(double *)(v25 + 16) = (*(double (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26);
      *v76 = v25;
      a1 = KeyPath;
      v24();
      v28 = v78;
      *v12 = (uint64_t)v77;
      v29 = *MEMORY[0x1E0DB63D0];
      v30 = v79;
      v77 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v79[13];
      v31 = v77(v12, v29, v28);
      MEMORY[0x1E0C80A78](v31);
      *(&v74 - 4) = (uint64_t)a2;
      *((double *)&v74 - 3) = a3;
      v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
      v73 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v32, MEMORY[0x1E0DB5A18]);
      sub_1BB86D4BC();
      v10 = v78;
      v33 = (void (*)(uint64_t *, uint64_t))v30[1];
      v33(v12, v78);
      v81 = a1;
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = 0x4010000000000000;
      *v12 = v34;
      v77(v12, *MEMORY[0x1E0DB63E8], v10);
      sub_1BB86D4EC();
      v33(v12, v10);
    }
  }
  else
  {
    sub_1BA915C30((uint64_t)v82);
  }
  v81 = a1;
  sub_1BA71C838();
  v36 = v35;
  v37 = swift_allocBox();
  v39 = v38;
  v77 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))((char *)v38 + *(int *)(v36 + 48));
  v78 = v37;
  v40 = sub_1BB86D894();
  v41 = swift_allocBox();
  v43 = v42;
  v44 = swift_allocObject();
  *(double *)(v44 + 16) = a5;
  *v43 = v44;
  v75 = *MEMORY[0x1E0DB5FA0];
  v45 = *(void (**)(uint64_t *))(*(_QWORD *)(v40 - 8) + 104);
  v45(v43);
  *v39 = v41;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v45)(v39, *MEMORY[0x1E0DB5FA8], v40);
  ((void (*)(uint64_t (*)(uint64_t *, uint64_t, uint64_t), _QWORD, uint64_t))v45)(v77, *MEMORY[0x1E0DB5FB8], v40);
  v46 = v79;
  *v12 = v78;
  v47 = (uint64_t *)v46[13];
  LODWORD(v77) = *MEMORY[0x1E0DB63D0];
  v76 = v47;
  v48 = ((uint64_t (*)(uint64_t *))v47)(v12);
  v74 = (uint64_t)&v74;
  MEMORY[0x1E0C80A78](v48);
  v49 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v51 = v50;
  v73 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v49, MEMORY[0x1E0DB5A18]);
  v78 = v51;
  sub_1BB86D498();
  v52 = KeyPath;
  v53 = (_QWORD *)v46[1];
  v54 = v75;
  v79 = v53;
  ((void (*)(uint64_t *, uint64_t))v53)(v12, v10);
  v55 = v10;
  v82[0] = v52;
  KeyPath = swift_getKeyPath();
  sub_1BA71C838();
  v56 = swift_allocBox();
  v58 = v57;
  v59 = (uint64_t *)((char *)v57 + *(int *)(v36 + 48));
  v60 = swift_allocObject();
  *(double *)(v60 + 16) = a5;
  *v58 = v60;
  sub_1BB86D894();
  v61 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104);
  v61(v58, v54, v40);
  v62 = swift_allocObject();
  *(double *)(v62 + 16) = a5;
  *v59 = v62;
  v61(v59, v54, v40);
  *v12 = v56;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v76)(v12, v77, v55);
  sub_1BAA46934();
  sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v64 = v63;
  v65 = *(_QWORD *)(v63 - 8);
  v66 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_1BB87CE70;
  v68 = v67 + v66;
  v69 = *MEMORY[0x1E0DB5C58];
  sub_1BA4CDF6C(0, &qword_1ED39C288, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 104))(v68, v69, v70);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v65 + 104))(v68, *MEMORY[0x1E0DB5C68], v64);
  v71 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v71, MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v79)(v12, v55);
}

uint64_t sub_1BB6547C4(uint64_t a1, _QWORD *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *, uint64_t, uint64_t);
  uint64_t v33;
  _QWORD v35[3];
  void (*v36)(uint64_t *, uint64_t);
  void (*v37)(uint64_t *, uint64_t, uint64_t);
  uint64_t v38;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (_QWORD *)((char *)v35 - v11);
  v38 = a1;
  v13 = swift_allocObject();
  v14 = a2 + 37;
  v15 = a2[40];
  v16 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v15);
  v17 = (*(double (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  v19 = a2[40];
  v18 = a2[41];
  __swift_project_boxed_opaque_existential_1(v14, v19);
  *(double *)(v13 + 16) = (v17 - (*(double (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18)) * 0.5;
  *v12 = v13;
  v20 = *MEMORY[0x1E0DB63F0];
  v37 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104);
  v37(v12, v20, v9);
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v35[2] = v22;
  v35[1] = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v21, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v36 = *(void (**)(uint64_t *, uint64_t))(v10 + 8);
  v36(v12, v9);
  v38 = a1;
  swift_getKeyPath();
  sub_1BA71C838();
  v24 = v23;
  v25 = swift_allocBox();
  v27 = v26;
  v28 = (uint64_t *)((char *)v26 + *(int *)(v24 + 48));
  v29 = swift_allocObject();
  *(double *)(v29 + 16) = a3;
  *v27 = v29;
  v30 = *MEMORY[0x1E0DB5FA0];
  v31 = sub_1BB86D894();
  v32 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104);
  v32(v27, v30, v31);
  v33 = swift_allocObject();
  *(double *)(v33 + 16) = a4;
  *v28 = v33;
  v32(v28, v30, v31);
  *v12 = v25;
  v37(v12, *MEMORY[0x1E0DB63D0], v9);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  return ((uint64_t (*)(uint64_t *, uint64_t))v36)(v12, v9);
}

uint64_t sub_1BB654AB8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, _QWORD, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v24 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v23 - v6);
  v26 = a1;
  KeyPath = swift_getKeyPath();
  sub_1BA71C838();
  v9 = v8;
  v10 = swift_allocBox();
  v12 = v11;
  v13 = (uint64_t *)((char *)v11 + *(int *)(v9 + 48));
  v14 = sub_1BB86D894();
  v15 = swift_allocBox();
  sub_1BB86D888();
  *v12 = v15;
  v16 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104);
  v16(v12, *MEMORY[0x1E0DB5FA8], v14);
  v17 = swift_allocObject();
  v18 = a2[40];
  v19 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v18);
  *(double *)(v17 + 16) = (*(double (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  *v13 = v17;
  v16(v13, *MEMORY[0x1E0DB5FA0], v14);
  *v7 = v10;
  v20 = v24;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB63D0], v24);
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v21, MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v20);
}

uint64_t sub_1BB654CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t (*v18)(uint64_t, _QWORD *);
  id v19;
  _QWORD v20[2];

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v20 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + 360);
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6398], v5);
    v18 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
    sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v18, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v19 = v17;
    sub_1BB86D4E0();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB654F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void (*v27)(uint64_t, _QWORD, uint64_t);
  uint64_t (*v28)(uint64_t, _QWORD *);
  _QWORD v29[2];

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v29 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + 360);
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6398], v5);
    sub_1BAA46934();
    sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    v21 = *(_QWORD *)(v20 + 72);
    v22 = *(unsigned __int8 *)(v20 + 80);
    v29[0] = v5;
    v23 = (v22 + 32) & ~v22;
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BB87A390;
    v25 = v24 + v23;
    v26 = v17;
    sub_1BB86D9A8();
    v27 = *(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104);
    v27(v25, *MEMORY[0x1E0DB5B98], v19);
    sub_1BB86D9A8();
    v27(v25 + v21, *MEMORY[0x1E0DB5BA8], v19);
    v28 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
    sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v28, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v6 + 8))(v8, v29[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB65523C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[4];

  v26[2] = *a1;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (_QWORD *)((char *)v26 - v5);
  v26[3] = a1;
  v26[1] = swift_getKeyPath();
  sub_1BA71C838();
  v8 = v7;
  v9 = swift_allocBox();
  v11 = v10;
  v12 = (uint64_t *)(v10 + *(int *)(v8 + 48));
  v13 = *MEMORY[0x1E0DB5F98];
  v14 = sub_1BB86D894();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104);
  v15(v11, v13, v14);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0x4000000000000000;
  *v12 = v16;
  v15((uint64_t)v12, *MEMORY[0x1E0DB5FA0], v14);
  *v6 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB63D0], v3);
  sub_1BAA46934();
  sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
  v22 = v21 + v20;
  v23 = *MEMORY[0x1E0DB5C30];
  sub_1BA4CDF6C(0, &qword_1ED39C288, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E0DB5C68], v18);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, MEMORY[0x1E0DB5A10], MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BB6554FC()
{
  return swift_deallocObject();
}

uint64_t sub_1BB65550C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB653E04(a1, *(_QWORD **)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_1BB65551C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB654F34(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB655524(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB654CF4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB65552C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB654AB8(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1BB655534(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB6547C4(a1, *(_QWORD **)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1BB655540()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t static FormatCodingSafeishArrayStrategy.decode(rawValue:)()
{
  return sub_1BA6871C4();
}

uint64_t sub_1BB655578@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA687178(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))static FormatCodingSafeishArrayStrategy.decode(rawValue:), a3);
}

uint64_t static FormatCodingNilArrayStrategy.defaultValue.getter()
{
  return 0;
}

BOOL static FormatCodingNilArrayStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  return a1 != 0;
}

uint64_t static FormatCodingNilArrayStrategy.decode(rawValue:)()
{
  sub_1BB86DF60();
  return sub_1BB86DD08();
}

BOOL sub_1BB6555D8(uint64_t *a1)
{
  return static FormatCodingNilArrayStrategy.shouldEncode(wrappedValue:)(*a1);
}

uint64_t sub_1BB6555E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = static FormatCodingNilArrayStrategy.decode(rawValue:)();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1BB655614(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  return MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], a1, &v3);
}

uint64_t sub_1BB65564C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingSafeishArrayStrategy<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB655678(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingNilArrayStrategy<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB6556A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v5 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v3, &v6);
  return MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE9A0], a1, &v5);
}

uint64_t sub_1BB655704(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v5 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v3, &v6);
  return MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE988], a1, &v5);
}

uint64_t type metadata accessor for FormatCodingSafeishArrayStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatCodingSafeishArrayStrategy);
}

uint64_t type metadata accessor for FormatCodingNilArrayStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatCodingNilArrayStrategy);
}

id CoverIssueColorPalette.backgroundColor.getter()
{
  id *v0;

  return *v0;
}

id CoverIssueColorPalette.titleColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id CoverIssueColorPalette.dateFgColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id CoverIssueColorPalette.badgeFgColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

id CoverIssueColorPalette.badgeNewBgColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

id CoverIssueColorPalette.badgeSuggestedBgColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

id CoverIssueColorPalette.downloadProgressTintColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

id CoverIssueColorPalette.downloadTrackTintColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 56);
}

id CoverIssueColorPalette.followButtonBackgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 64);
}

id sub_1BB6557C8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id result;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_whiteColor);
  v2 = objc_msgSend(v0, sel_blackColor);
  v3 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v1, v2);

  v4 = objc_msgSend(v0, sel_blackColor);
  v5 = objc_msgSend(v0, sel_whiteColor);
  v6 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

  v7 = objc_msgSend(v0, sel_secondaryLabelColor);
  v8 = objc_msgSend(v0, sel_whiteColor);
  v9 = objc_msgSend(v0, sel_redColor);
  v10 = objc_msgSend(v0, sel_grayColor);
  v11 = objc_msgSend(v0, sel_grayColor);
  v12 = objc_msgSend(v0, sel_grayColor);
  v13 = objc_msgSend(v12, sel_colorWithAlphaComponent_, 0.3);

  result = objc_msgSend(v0, sel_systemPinkColor);
  qword_1EF2C9C28 = (uint64_t)v3;
  unk_1EF2C9C30 = v6;
  qword_1EF2C9C38 = (uint64_t)v7;
  unk_1EF2C9C40 = v8;
  qword_1EF2C9C48 = (uint64_t)v9;
  unk_1EF2C9C50 = v10;
  qword_1EF2C9C58 = (uint64_t)v11;
  unk_1EF2C9C60 = v13;
  qword_1EF2C9C68 = (uint64_t)result;
  return result;
}

void __swiftcall CoverIssueColorPalette.init(backgroundColor:titleColor:dateFgColor:badgeFgColor:badgeNewBgColor:badgeSuggestedBgColor:downloadProgressTintColor:downloadTrackTintColor:followButtonBackgroundColor:)(NewsFeed::CoverIssueColorPalette *__return_ptr retstr, UIColor backgroundColor, UIColor titleColor, UIColor dateFgColor, UIColor badgeFgColor, UIColor badgeNewBgColor, UIColor badgeSuggestedBgColor, UIColor downloadProgressTintColor, UIColor downloadTrackTintColor, UIColor followButtonBackgroundColor)
{
  retstr->backgroundColor = backgroundColor;
  retstr->titleColor = titleColor;
  retstr->dateFgColor = dateFgColor;
  retstr->badgeFgColor = badgeFgColor;
  retstr->badgeNewBgColor = badgeNewBgColor;
  retstr->badgeSuggestedBgColor = badgeSuggestedBgColor;
  retstr->downloadProgressTintColor = downloadProgressTintColor;
  retstr->downloadTrackTintColor = downloadTrackTintColor;
  retstr->followButtonBackgroundColor = followButtonBackgroundColor;
}

id static CoverIssueColorPalette.default.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v20;

  if (qword_1EF2A7420 != -1)
    swift_once();
  v2 = (void *)qword_1EF2C9C28;
  v3 = (void *)unk_1EF2C9C30;
  v4 = (void *)qword_1EF2C9C38;
  v5 = (void *)unk_1EF2C9C40;
  v6 = (void *)qword_1EF2C9C48;
  v7 = (void *)unk_1EF2C9C50;
  v8 = (void *)qword_1EF2C9C58;
  v9 = (void *)unk_1EF2C9C60;
  v10 = qword_1EF2C9C68;
  v20 = (id)qword_1EF2C9C68;
  *a1 = qword_1EF2C9C28;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  return v20;
}

void destroy for CoverIssueColorPalette(id *a1)
{

}

_QWORD *initializeWithCopy for CoverIssueColorPalette(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  a1[4] = v7;
  a1[5] = v8;
  v9 = *(void **)(a2 + 48);
  v10 = *(void **)(a2 + 56);
  a1[6] = v9;
  a1[7] = v10;
  v11 = *(void **)(a2 + 64);
  a1[8] = v11;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  v19 = v10;
  v20 = v11;
  return a1;
}

uint64_t assignWithCopy for CoverIssueColorPalette(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 40);
  v20 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v19;
  v21 = v19;

  v22 = *(void **)(a2 + 48);
  v23 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v22;
  v24 = v22;

  v25 = *(void **)(a2 + 56);
  v26 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v25;
  v27 = v25;

  v28 = *(void **)(a2 + 64);
  v29 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v28;
  v30 = v28;

  return a1;
}

uint64_t assignWithTake for CoverIssueColorPalette(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v7 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  v8 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for CoverIssueColorPalette(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoverIssueColorPalette(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverIssueColorPalette()
{
  return &type metadata for CoverIssueColorPalette;
}

uint64_t _s8NewsFeed28FormatBindingImageExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  int v5;
  __int128 v6;
  int v7;
  _OWORD v9[2];
  uint64_t v10;
  char v11;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 40);
  v4 = *(unsigned __int8 *)(a1 + 41);
  v5 = *(unsigned __int8 *)(a2 + 41);
  v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  v10 = v2;
  v11 = v3;
  _s8NewsFeed22FormatImageNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)v9);
  return v7 & ~(v4 ^ v5) & 1;
}

unint64_t sub_1BB655E34(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB655E58();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB655E58()
{
  unint64_t result;

  result = qword_1EF2C9C70;
  if (!qword_1EF2C9C70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingImageExpression, &type metadata for FormatBindingImageExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C9C70);
  }
  return result;
}

unint64_t sub_1BB655E9C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA60ED74();
  a1[2] = sub_1BA5E9B38();
  result = sub_1BB655ED0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB655ED0()
{
  unint64_t result;

  result = qword_1EF2C9C78;
  if (!qword_1EF2C9C78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingImageExpression, &type metadata for FormatBindingImageExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C9C78);
  }
  return result;
}

uint64_t initializeWithCopy for FormatBindingImageExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 40);
  sub_1BA7147C0(*(_QWORD *)a2, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

uint64_t assignWithCopy for FormatBindingImageExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 40);
  sub_1BA7147C0(*(_QWORD *)a2, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  v15 = *(unsigned __int8 *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v9;
  sub_1BA6EF82C(v10, v11, v12, v13, v14, v15);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

uint64_t assignWithTake for FormatBindingImageExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unsigned int v12;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = v4;
  v12 = *(unsigned __int8 *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v5;
  sub_1BA6EF82C(v6, v7, v8, v9, v10, v12);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingImageExpression()
{
  return &type metadata for FormatBindingImageExpression;
}

uint64_t static FormatGrayscaleColor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(double *)a1 != *(double *)a2)
    return 0;
  v2 = *(_BYTE *)(a2 + 16);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 8) != *(double *)(a2 + 8))
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return 1;
}

unint64_t sub_1BB6560D4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6560F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6560F8()
{
  unint64_t result;

  result = qword_1EF2C9C80;
  if (!qword_1EF2C9C80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGrayscaleColor, &type metadata for FormatGrayscaleColor);
    atomic_store(result, (unint64_t *)&qword_1EF2C9C80);
  }
  return result;
}

uint64_t sub_1BB65613C(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(double *)a1 == *(double *)a2)
  {
    v2 = *(_BYTE *)(a2 + 16);
    if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    {
      if (*(_BYTE *)(a2 + 16))
        return 1;
    }
    else
    {
      if (*(double *)(a1 + 8) != *(double *)(a2 + 8))
        v2 = 1;
      if ((v2 & 1) == 0)
        return 1;
    }
  }
  return 0;
}

unint64_t sub_1BB656180(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE88540();
  a1[2] = sub_1BAEF4F04();
  result = sub_1BB6561B4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6561B4()
{
  unint64_t result;

  result = qword_1EF2C9C88[0];
  if (!qword_1EF2C9C88[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGrayscaleColor, &type metadata for FormatGrayscaleColor);
    atomic_store(result, qword_1EF2C9C88);
  }
  return result;
}

uint64_t sub_1BB6561F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGrayscaleColor.init(from:)(a1, a2);
}

uint64_t sub_1BB65620C(_QWORD *a1)
{
  return FormatGrayscaleColor.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatGrayscaleColor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatGrayscaleColor()
{
  return &type metadata for FormatGrayscaleColor;
}

uint64_t FormatAdMetricsData.nativeAdInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB871B24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for FormatAdMetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB871B24();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for FormatAdMetricsData(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB871B24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for FormatAdMetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB871B24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for FormatAdMetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB871B24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for FormatAdMetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB871B24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for FormatAdMetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB871B24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatAdMetricsData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB656420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB871B24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FormatAdMetricsData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB656468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB871B24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

Swift::Bool __swiftcall FeedCursorTrackerSnapshot.contains(identifier:)(Swift::String identifier)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1BA761FE4(identifier._countAndFlagsBits, (uint64_t)identifier._object, *(_QWORD *)(v2 + *(int *)(v1 + 36)));
}

uint64_t FeedCursorTracker.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
}

uint64_t sub_1BB6565B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v50;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  *a7 = sub_1BB86DEE8();
  a7[1] = v15;
  v16 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  v18 = type metadata accessor for FeedCursorTrackerGroup(0, a5, a6, v17);
  v16(AssociatedTypeWitness, AssociatedConformanceWitness);
  v19 = (char *)a7 + *(int *)(v18 + 40);
  v20 = sub_1BB86C8B0();
  v41 = *(_QWORD *)(v20 - 8);
  v42 = v20;
  v45 = a4;
  (*(void (**)(char *, uint64_t))(v41 + 16))(v19, a4);
  v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
  v22 = (uint64_t)v21;
  if (v21)
  {
    v23 = objc_msgSend(v21, sel_identifier);
    swift_unknownObjectRelease();
    v24 = sub_1BB8729A0();
    v22 = v25;

  }
  else
  {
    v24 = 0;
  }
  v46 = a1;
  v47 = a7;
  v26 = (uint64_t *)((char *)a7 + *(int *)(v18 + 44));
  *v26 = v24;
  v26[1] = v22;
  v44 = AssociatedTypeWitness;
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 32))(AssociatedTypeWitness, v14);
  v43 = v18;
  if (v27 >> 62)
    v28 = sub_1BB873F30();
  else
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  v29 = MEMORY[0x1E0DEE9D8];
  if (!v28)
  {
LABEL_15:
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v45, v42);
    (*(void (**)(uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v46);
    result = swift_bridgeObjectRelease();
    *(uint64_t *)((char *)v47 + *(int *)(v43 + 48)) = v29;
    v40 = (uint64_t *)((char *)v47 + *(int *)(v43 + 52));
    *v40 = a2;
    v40[1] = a3;
    return result;
  }
  v50 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA7447E8(0, v28 & ~(v28 >> 63), 0);
  if ((v28 & 0x8000000000000000) == 0)
  {
    v31 = 0;
    v29 = v50;
    do
    {
      if ((v27 & 0xC000000000000001) != 0)
      {
        v32 = (void *)MEMORY[0x1BCCE4630](v31, v27);
      }
      else
      {
        v32 = *(void **)(v27 + 8 * v31 + 32);
        swift_unknownObjectRetain();
      }
      v33 = objc_msgSend(v32, sel_itemID);
      v34 = sub_1BB8729A0();
      v36 = v35;
      swift_unknownObjectRelease();

      v38 = *(_QWORD *)(v50 + 16);
      v37 = *(_QWORD *)(v50 + 24);
      if (v38 >= v37 >> 1)
        sub_1BA7447E8(v37 > 1, v38 + 1, 1);
      ++v31;
      *(_QWORD *)(v50 + 16) = v38 + 1;
      v39 = v50 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v34;
      *(_QWORD *)(v39 + 40) = v36;
    }
    while (v28 != v31);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t FeedCursorTrackerSnapshot.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t FeedCursorTrackerSnapshot.seenIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursorTrackerSnapshot.seenItemIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursorTrackerSnapshot.date(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];

  v10 = type metadata accessor for FeedCursorTrackerGroup(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v11 = sub_1BB873A2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v22 - v13;
  v15 = *(_QWORD *)(v5 + *(int *)(a3 + 44));
  v22[0] = a1;
  v22[1] = a2;
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE3148](v22, v15, MEMORY[0x1E0DEA968], v10, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v17 = sub_1BB86C8B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a5, 1, 1, v17);
  }
  else
  {
    v19 = &v14[*(int *)(v10 + 40)];
    v20 = sub_1BB86C8B0();
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(a5, v19, v20);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v10);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(a5, 0, 1, v20);
  }
}

uint64_t FeedCursorTrackerSnapshot.groups(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for FeedCursorTrackerGroup(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  nullsub_1();
  v4 = sub_1BB8727F0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DE9F98], v4);
  return sub_1BB872C34();
}

uint64_t sub_1BB656C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for FeedCursorTrackerGroup(0, a3, a4, v6);
  swift_getAssociatedConformanceWitness();
  return sub_1BB872958() & 1;
}

uint64_t FeedCursorTrackerSnapshot.description.getter()
{
  return sub_1BB87303C();
}

uint64_t sub_1BB656DC4@<X0>(char *a1@<X0>, void (*a2)(_QWORD *__return_ptr, uint64_t, uint64_t, char *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  _QWORD v12[6];

  v8 = *(_QWORD *)a1;
  v9 = *((_QWORD *)a1 + 1);
  type metadata accessor for FeedCursorTrackerGroup(255, a3, a4, a3);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  a2(v12, v8, v9, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
  return sub_1BA83A3B8((uint64_t)v12, a5);
}

uint64_t FeedCursorTrackerGroup.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCursorTrackerGroup.kind.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v4 = v2 + *(int *)(a1 + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, v4, AssociatedTypeWitness);
}

uint64_t FeedCursorTrackerGroup.seenDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t FeedCursorTrackerGroup.tagIdentifier.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FeedCursorTrackerGroup.itemIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursorTrackerGroup.sessionIdentifier.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 52));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BB657044(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB656C50(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t method lookup function for FeedCursorTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedCursorTracker.__allocating_init(context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of FeedCursorTracker.__allocating_init(snapshot:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t *sub_1BB657080(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
    *v12 = *v13;
    *(_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BB65722C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BB657368(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  *v9 = *v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_1BB6574BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = sub_1BB86C8B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v8 + v11;
  v13 = *(_QWORD *)(v10 + 64) + 7;
  if ((v11 | (unint64_t)v6) > 7
    || ((*(_DWORD *)(v10 + 80) | v6) & 0x100000) != 0
    || ((((((v13 + ((v12 + ((v6 + 16) & ~(unint64_t)v6)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16
                   + (((v11 | v6) & 0xF8 ^ 0x1F8) & ((v11 | v6) + 16)));
    swift_retain();
  }
  else
  {
    v17 = v9;
    v18 = ~v11;
    v19 = a2[1];
    *a1 = *a2;
    a1[1] = v19;
    v20 = (char *)a2 + v7;
    v21 = ((unint64_t)a1 + v7 + 16) & ~v7;
    v22 = (unint64_t)(v20 + 16) & ~v7;
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v23(v21, v22, AssociatedTypeWitness);
    v24 = (v21 + v12) & v18;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v24, (v22 + v12) & v18, v17);
    v25 = (_QWORD *)((v13 + v24) & 0xFFFFFFFFFFFFFFF8);
    v26 = (_QWORD *)((v13 + ((v22 + v12) & v18)) & 0xFFFFFFFFFFFFFFF8);
    *v25 = *v26;
    v25[1] = v26[1];
    v27 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFF8);
    v28 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFF8);
    *v27 = *v28;
    v29 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
    v30 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v29 = *v30;
    v29[1] = v30[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *sub_1BB65771C(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v7, v8, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v9 + v12 + v7) & ~v12;
  v14 = (v9 + v12 + v8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v13, v14, v10);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)v19;
  v19 += 15;
  *v18 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *(_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF8);
  v21[1] = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1BB657918(_OWORD *a1, _OWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  _QWORD *v18;
  _QWORD *v19;

  *a1 = *a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v7, v8, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v9 + v12 + v7) & ~v12;
  v14 = (v9 + v12 + v8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, v14, v10);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (_OWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_OWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  *(_OWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1BB657AB0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v8, v9, AssociatedTypeWitness);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = sub_1BB86C8B0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v10 + v13 + v8) & ~v13;
  v15 = (v10 + v13 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v14, v15, v11);
  v16 = *(_QWORD *)(v12 + 64) + 7;
  v17 = (_QWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRelease();
  v19 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  v20 += 15;
  *v19 = v21;
  swift_bridgeObjectRelease();
  v22 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *(_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF8);
  v22[1] = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB657C84@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB656DC4(a1, *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, char *))(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_1BB657CA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A1298[0])
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, qword_1ED3A1298);
  }
}

uint64_t sub_1BB657CF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  sub_1BB6582F0(0, &qword_1EF2C9CB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB657EC0();
  sub_1BB8746C8();
  v14 = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v13 = 1;
    sub_1BB87411C();
    v12 = *(_QWORD *)(v3 + 32);
    v11[15] = 2;
    sub_1BAB12C98();
    sub_1BB2CE918((unint64_t *)&qword_1EF2B0290, (uint64_t (*)(void))sub_1BAB12D4C, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v11[14] = 3;
    sub_1BB874188();
    v11[13] = 4;
    sub_1BB874188();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB657EC0()
{
  unint64_t result;

  result = qword_1ED3AA618;
  if (!qword_1ED3AA618)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB938C30, &type metadata for SportsTaxonomyGraphResourceEntityNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA618);
  }
  return result;
}

uint64_t sub_1BB657F04()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB657F30 + 4 * byte_1BB938AE0[*v0]))(0x6449676174, 0xE500000000000000);
}

uint64_t sub_1BB657F30()
{
  return 0x6449636D75;
}

uint64_t sub_1BB657F40()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1BB657F58()
{
  return 0x6E65646469487369;
}

unint64_t sub_1BB657F70()
{
  return 0xD000000000000016;
}

uint64_t sub_1BB657F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB6586E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB657FB0()
{
  sub_1BB657EC0();
  return sub_1BB874710();
}

uint64_t sub_1BB657FD8()
{
  sub_1BB657EC0();
  return sub_1BB87471C();
}

double sub_1BB658000@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_1BB658054(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 26) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_1BB658040(_QWORD *a1)
{
  return sub_1BB657CF4(a1);
}

uint64_t sub_1BB658054@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;

  sub_1BB6582F0(0, &qword_1ED3AB578, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB657EC0();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v26 = 1;
  v20 = sub_1BB87402C();
  v21 = v13;
  v25 = 3;
  v19 = sub_1BB874038();
  sub_1BAB12C98();
  v24 = 2;
  sub_1BB2CE918(&qword_1ED3AB048, (uint64_t (*)(void))sub_1BB2CE97C, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  v18 = v22;
  v23 = 4;
  v14 = sub_1BB874038();
  v19 &= 1u;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  v16 = v21;
  *(_QWORD *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 32) = v18;
  *(_BYTE *)(a2 + 40) = v19;
  *(_BYTE *)(a2 + 41) = v14 & 1;
  return result;
}

void sub_1BB6582F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB657EC0();
    v7 = a3(a1, &type metadata for SportsTaxonomyGraphResourceEntityNode.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsTaxonomyGraphResourceEntityNode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB658398 + 4 * byte_1BB938AEA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB6583CC + 4 * byte_1BB938AE5[v4]))();
}

uint64_t sub_1BB6583CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6583D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6583DCLL);
  return result;
}

uint64_t sub_1BB6583E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6583F0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB6583F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6583FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceEntityNode.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceEntityNode.CodingKeys;
}

uint64_t initializeWithCopy for SportsTaxonomyGraphResourceEntityNode(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsTaxonomyGraphResourceEntityNode(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

uint64_t assignWithTake for SportsTaxonomyGraphResourceEntityNode(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsTaxonomyGraphResourceEntityNode(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 42))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsTaxonomyGraphResourceEntityNode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 42) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceEntityNode()
{
  return &type metadata for SportsTaxonomyGraphResourceEntityNode;
}

unint64_t sub_1BB658614()
{
  unint64_t result;

  result = qword_1EF2C9CC0;
  if (!qword_1EF2C9CC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB938C08, &type metadata for SportsTaxonomyGraphResourceEntityNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9CC0);
  }
  return result;
}

unint64_t sub_1BB65865C()
{
  unint64_t result;

  result = qword_1ED3AA628;
  if (!qword_1ED3AA628)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB938B78, &type metadata for SportsTaxonomyGraphResourceEntityNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA628);
  }
  return result;
}

unint64_t sub_1BB6586A4()
{
  unint64_t result;

  result = qword_1ED3AA620;
  if (!qword_1ED3AA620)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB938BA0, &type metadata for SportsTaxonomyGraphResourceEntityNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA620);
  }
  return result;
}

uint64_t sub_1BB6586E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6449676174 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449636D75 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E65646469487369 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB971E20)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t SportsTaxonomyGraphRootNode.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t SportsTaxonomyGraphRootNode.childrenTagIds()()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain_n();
    __asm { BR              X10 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t SportsTaxonomyGraphRootNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsTaxonomyGraphRootNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SportsTaxonomyGraphRootNode()
{
  return objc_opt_self();
}

uint64_t method lookup function for SportsTaxonomyGraphRootNode()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for FormatInspectionFrame()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatInspectionFrame(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatInspectionFrame(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for FormatInspectionFrame(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatInspectionFrame(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatInspectionFrame(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatInspectionFrame()
{
  return &type metadata for FormatInspectionFrame;
}

uint64_t storeEnumTagSinglePayload for FormatInspectionFrameDisplay(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB658CF0 + 4 * byte_1BB938CC5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB658D24 + 4 * byte_1BB938CC0[v4]))();
}

uint64_t sub_1BB658D24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB658D2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB658D34);
  return result;
}

uint64_t sub_1BB658D40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB658D48);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB658D4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB658D54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatInspectionFrameDisplay()
{
  return &type metadata for FormatInspectionFrameDisplay;
}

unint64_t sub_1BB658D74()
{
  unint64_t result;

  result = qword_1EF2C9CC8;
  if (!qword_1EF2C9CC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB938D50, &type metadata for FormatInspectionFrameDisplay);
    atomic_store(result, (unint64_t *)&qword_1EF2C9CC8);
  }
  return result;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatSupplementaryNodeDataLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0
                               + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                   + 16);
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
  v3 = *(_QWORD *)(v2 + 136);
  v4 = *(_QWORD *)(v2 + 144);
  v5 = *(_QWORD *)(v2 + 168);
  v6 = *(_QWORD *)(v2 + 176);
  v7 = *(_QWORD *)(v2 + 184);
  v8 = *(_QWORD *)(v2 + 192);
  v9 = *(_QWORD *)(v2 + 200);
  v10 = *(_BYTE *)(v2 + 208);
  v11 = *(_QWORD *)(v2 + 216);
  v12 = *(_QWORD *)(v2 + 224);
  v13 = *(_BYTE *)(v2 + 232);
  *(_QWORD *)a1 = *(_QWORD *)(v2 + 128);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v2 + 152);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v12;
  *(_BYTE *)(a1 + 104) = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.formatImageRequests(options:inventory:)()
{
  return sub_1BA79B7B8();
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.dataLayoutValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.renderKeyIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.pinTrait.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA57B488(v1 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_pinTrait, a1, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.rubberbandTrait.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA57B488(v1 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_rubberbandTrait, a1, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.dataAccessibilityValues.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatSupplementaryNodeDataLayoutAttributes.accessibilityRole.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 233);
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_pinTrait, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_rubberbandTrait, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  swift_release();
  return v0;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_pinTrait, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_rubberbandTrait, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB6591B0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(*v0
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB6591EC()
{
  return type metadata accessor for FormatSupplementaryNodeDataLayoutAttributes();
}

uint64_t method lookup function for FormatSupplementaryNodeDataLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

id EmptyView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id EmptyView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id EmptyView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmptyView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id EmptyView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BB65942C()
{
  sub_1BA81E72C(&qword_1ED3B9020, (uint64_t)&protocol conformance descriptor for EmptyView);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t sub_1BB659464(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BB659ABC(0, &qword_1EF2C9CE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB659A78();
  sub_1BB8746C8();
  v9[15] = 0;
  sub_1BB87417C();
  if (!v1)
  {
    v9[14] = 1;
    sub_1BB87417C();
    v9[13] = 2;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB6595A8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701869940;
  if (*v0 != 1)
    v1 = 0x726F727265;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BB6595FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB659CBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB659620()
{
  sub_1BB659A78();
  return sub_1BB874710();
}

uint64_t sub_1BB659648()
{
  sub_1BB659A78();
  return sub_1BB87471C();
}

double sub_1BB659670@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1BB65983C(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1BB6596B0(_QWORD *a1)
{
  return sub_1BB659464(a1);
}

uint64_t sub_1BB6596C4@<X0>(uint64_t *a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t result;
  __int128 v14;
  __int128 v15;

  v2 = v1;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C2450, (uint64_t (*)(uint64_t))sub_1BAA85C90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v15 = v1[1];
  sub_1BA7114A0();
  v5 = MEMORY[0x1E0DEA968];
  v6 = sub_1BB873ABC();
  v8 = v7;
  sub_1BAFD3CA0();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v9 + 32) = 0x696669746E656449;
  *(_QWORD *)(v9 + 40) = 0xEA00000000007265;
  v11 = MEMORY[0x1E0DEA9D8];
  v15 = *v2;
  v10 = v15;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v11;
  *(_OWORD *)(v9 + 48) = v10;
  *(_BYTE *)(v9 + 88) = 0;
  *(_QWORD *)(v9 + 96) = 0x726F727245;
  *(_QWORD *)(v9 + 104) = 0xE500000000000000;
  v14 = v2[2];
  v12 = v14;
  *(_QWORD *)(v9 + 136) = v5;
  *(_QWORD *)(v9 + 144) = v11;
  *(_OWORD *)(v9 + 112) = v12;
  *(_BYTE *)(v9 + 152) = 0;
  *(_QWORD *)(inited + 56) = &type metadata for DebugInspectionDataSection;
  *(_QWORD *)(inited + 64) = &off_1E728C9C8;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v8;
  *(_QWORD *)(inited + 48) = v9;
  sub_1BA739BF4((uint64_t)&v15);
  sub_1BA739BF4((uint64_t)&v14);
  result = sub_1BAA85898(inited);
  a1[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a1[4] = (uint64_t)&off_1E728CA90;
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionError()
{
  return &type metadata for DebugInspectionError;
}

uint64_t sub_1BB65983C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  sub_1BB659ABC(0, &qword_1EF2C9CD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB659A78();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v25 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v15 = v14;
  v23 = v13;
  v26 = 2;
  swift_bridgeObjectRetain();
  v24 = v15;
  v16 = sub_1BB874098();
  v18 = v17;
  v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v20 = v24;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  return result;
}

unint64_t sub_1BB659A78()
{
  unint64_t result;

  result = qword_1EF2C9CD8;
  if (!qword_1EF2C9CD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93903C, &type metadata for DebugInspectionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9CD8);
  }
  return result;
}

void sub_1BB659ABC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB659A78();
    v7 = a3(a1, &type metadata for DebugInspectionError.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for DebugInspectionError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB659B64 + 4 * byte_1BB938F05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB659B98 + 4 * byte_1BB938F00[v4]))();
}

uint64_t sub_1BB659B98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB659BA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB659BA8);
  return result;
}

uint64_t sub_1BB659BB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB659BBCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB659BC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB659BC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionError.CodingKeys()
{
  return &type metadata for DebugInspectionError.CodingKeys;
}

unint64_t sub_1BB659BE8()
{
  unint64_t result;

  result = qword_1EF2C9CE8;
  if (!qword_1EF2C9CE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939014, &type metadata for DebugInspectionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9CE8);
  }
  return result;
}

unint64_t sub_1BB659C30()
{
  unint64_t result;

  result = qword_1EF2C9CF0;
  if (!qword_1EF2C9CF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB938F84, &type metadata for DebugInspectionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9CF0);
  }
  return result;
}

unint64_t sub_1BB659C78()
{
  unint64_t result;

  result = qword_1EF2C9CF8;
  if (!qword_1EF2C9CF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB938FAC, &type metadata for DebugInspectionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9CF8);
  }
  return result;
}

uint64_t sub_1BB659CBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BB659E04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7FC6A4(*a1, *a2);
}

uint64_t sub_1BB659E10()
{
  sub_1BB8745CC();
  FormatItemTrait.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB659E74()
{
  FormatItemTrait.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB659EC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatItemTrait.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1BB659EE8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB659F14();
  result = sub_1BA50F6AC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB659F14()
{
  unint64_t result;

  result = qword_1EF2C9D00;
  if (!qword_1EF2C9D00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemTrait, &type metadata for FormatItemTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2C9D00);
  }
  return result;
}

unint64_t sub_1BB659F58(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAEBAC74();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB659F7C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA833E84();
  a1[2] = sub_1BA833F50();
  result = sub_1BA833EC8();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatItemTrait()
{
  return &type metadata for FormatItemTrait;
}

uint64_t SportsTaxonomyGraph.rootNode.getter()
{
  return swift_retain();
}

uint64_t SportsTaxonomyGraph.allTagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1BB659FD0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BB65A010()
{
  sub_1BB8745E4();
  return sub_1BB874608();
}

void sub_1BB65A088()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB65A0BC()
{
  return sub_1BB8745E4();
}

void sub_1BB65A124()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BB65A160()
{
  sub_1BB8745E4();
  return sub_1BB874608();
}

_QWORD *sub_1BB65A1D8(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *result;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v2 = *a1;
  type metadata accessor for SportsTaxonomyGraphRootNode();
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9D8];
  v1[2] = v3;
  v32 = sub_1BA8F27C8(v4);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  v31 = v5;
  swift_retain();
  v6 = MEMORY[0x1E0DEE9E8];
  sub_1BB65A8D8(v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_retain();
  v7 = swift_bridgeObjectRetain();
  sub_1BB383BBC(v7);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  v30 = v6;
  v8 = v1[2];
  swift_beginAccess();
  v29 = *(_QWORD *)(v8 + 16);
  v28 = v6;
  if (*(_QWORD *)(v29 + 16))
  {
    v9 = swift_bridgeObjectRetain();
    do
    {
      v10 = *(_QWORD *)(v9 + 32);
      swift_retain();
      sub_1BAA68A94(0, 1);
      while (2)
      {
        swift_retain();
        sub_1BA9D6AC8((uint64_t)&v27, v10);
        swift_release();
        switch(v10 >> 62)
        {
          case 0uLL:
            swift_release();
            break;
          case 1uLL:
            v12 = *(_QWORD *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
            v13 = *(_QWORD *)(v12 + 24);
            v14 = *(_QWORD *)(v12 + 16);
            swift_bridgeObjectRetain();
            sub_1BA6EE5AC(&v27, v14, v13);
            swift_release();
            swift_bridgeObjectRelease();
            break;
          default:
            swift_beginAccess();
            v11 = swift_bridgeObjectRetain();
            sub_1BB383BBC(v11);
            continue;
        }
        break;
      }
      v9 = v29;
    }
    while (*(_QWORD *)(v29 + 16));
    v6 = v30;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = sub_1BA8F27C8(MEMORY[0x1E0DEE9D8]);
  v26 = sub_1BA8F27C8(v15);
  v17 = 1 << *(_BYTE *)(v6 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v6 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v19)
  {
    v21 = __clz(__rbit64(v19));
    goto LABEL_15;
  }
  v22 = 1;
  if (v20 > 1)
  {
    v23 = *(_QWORD *)(v6 + 64);
    if (v23)
    {
LABEL_29:
      v21 = __clz(__rbit64(v23)) + (v22 << 6);
LABEL_15:
      __asm { BR              X9 }
    }
    v24 = 2;
    if (v20 > 2)
    {
      v23 = *(_QWORD *)(v6 + 72);
      if (v23)
        goto LABEL_28;
      v24 = 3;
      if (v20 <= 3)
        goto LABEL_34;
      v23 = *(_QWORD *)(v6 + 80);
      if (v23)
        goto LABEL_28;
      v24 = 4;
      if (v20 <= 4)
        goto LABEL_34;
      v23 = *(_QWORD *)(v6 + 88);
      if (v23)
        goto LABEL_28;
      v24 = 5;
      if (v20 <= 5)
        goto LABEL_34;
      v23 = *(_QWORD *)(v6 + 96);
      if (v23)
      {
LABEL_28:
        v22 = v24;
        goto LABEL_29;
      }
      v24 = 6;
      if (v20 > 6)
      {
        v23 = *(_QWORD *)(v6 + 104);
        if (v23)
          goto LABEL_28;
        while (1)
        {
          v22 = v24 + 1;
          if (__OFADD__(v24, 1))
          {
            __break(1u);
            JUMPOUT(0x1BB65A8A0);
          }
          if (v22 >= v20)
            break;
          v23 = *(_QWORD *)(v6 + 56 + 8 * v22);
          ++v24;
          if (v23)
            goto LABEL_29;
        }
      }
    }
  }
LABEL_34:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v1;
  v1[3] = v16;
  v1[4] = v26;
  v1[5] = v28;
  return result;
}

uint64_t sub_1BB65A8D8(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  return MEMORY[0x1E0DEE9D8];
}

Swift::String_optional __swiftcall SportsTaxonomyGraph.tagId(for:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Swift::String_optional result;

  v2 = *(_QWORD *)(v1 + 32);
  if (*(_QWORD *)(v2 + 16))
  {
    object = a1._object;
    countAndFlagsBits = a1._countAndFlagsBits;
    swift_bridgeObjectRetain();
    v5 = sub_1BA6E35A8(countAndFlagsBits, (uint64_t)object);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
      swift_retain();
      swift_bridgeObjectRelease();
      __asm { BR              X10 }
    }
    swift_bridgeObjectRelease();
  }
  v8 = 0;
  v9 = 0;
  result.value._object = v9;
  result.value._countAndFlagsBits = v8;
  return result;
}

Swift::String_optional __swiftcall SportsTaxonomyGraph.umcCanonicalId(for:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Swift::String_optional result;

  v2 = *(_QWORD *)(v1 + 24);
  if (*(_QWORD *)(v2 + 16))
  {
    object = a1._object;
    countAndFlagsBits = a1._countAndFlagsBits;
    swift_bridgeObjectRetain();
    v5 = sub_1BA6E35A8(countAndFlagsBits, (uint64_t)object);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
      swift_retain();
      swift_bridgeObjectRelease();
      __asm { BR              X10 }
    }
    swift_bridgeObjectRelease();
  }
  v8 = 0;
  v9 = 0;
  result.value._object = v9;
  result.value._countAndFlagsBits = v8;
  return result;
}

uint64_t SportsTaxonomyGraph.node(for:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(v3 + 24);
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = result;
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E35A8(v7, a2);
    if ((v9 & 1) != 0)
    {
      *a3 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v8);
      swift_retain();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
  }
  *a3 = 0xF000000000000007;
  return result;
}

uint64_t SportsTaxonomyGraph.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsTaxonomyGraph.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1BB65AE10(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34[3];
  _QWORD v35[2];

  v9 = *a2;
  v11 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  v12 = sub_1BA761FE4(v11, v10, a4);
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v13 = sub_1BB86EFEC();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED3A3BB8);
    sub_1BB65B9DC(a1);
    v14 = sub_1BB86EFC8();
    v15 = sub_1BB87330C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v34[0] = v17;
      *(_DWORD *)v16 = 136315138;
      swift_bridgeObjectRetain();
      v35[0] = sub_1BA5D2E14(v11, v10, v34);
      sub_1BB873A8C();
      swift_bridgeObjectRelease();
      sub_1BB65BA24(a1);
      _os_log_impl(&dword_1BA493000, v14, v15, "Taxonomy graph contains loop. Node with tagId=%s is it's own ancestor. Ignoring descendent node.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v17, -1, -1);
      MEMORY[0x1BCCE5C38](v16, -1, -1);
    }
    else
    {
      sub_1BB65BA24(a1);
    }

    v21 = 0xF000000000000007;
  }
  else
  {
    v18 = *a3;
    if (*(_QWORD *)(*a3 + 16))
    {
      swift_bridgeObjectRetain();
      v19 = sub_1BA6E35A8(v11, v10);
      if ((v20 & 1) != 0)
      {
        v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
        swift_retain();
        swift_bridgeObjectRelease();
        v34[0] = v21;
        v35[0] = v9;
        sub_1BB3D7070();
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
    sub_1BB264204(a1 + 16, (uint64_t)v35);
    v22 = *(_WORD *)(a1 + 40);
    type metadata accessor for SportsTaxonomyGraphEntityNode();
    v33 = v9;
    v23 = swift_allocObject();
    v24 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v23 + 64) = v24;
    *(_QWORD *)(v23 + 16) = v11;
    *(_QWORD *)(v23 + 24) = v10;
    sub_1BB264204((uint64_t)v35, v23 + 32);
    *(_WORD *)(v23 + 48) = v22;
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v23;
    v32 = v25 | 0x8000000000000000;
    sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(inited + 32) = v11;
    *(_QWORD *)(inited + 40) = v10;
    swift_bridgeObjectRetain_n();
    sub_1BA739BF4((uint64_t)v35);
    swift_retain();
    swift_bridgeObjectRetain();
    v27 = sub_1BA78A504(inited, a4);
    swift_setDeallocating();
    v21 = v32;
    swift_arrayDestroy();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34[0] = *a3;
    *a3 = 0x8000000000000000;
    sub_1BB4BD848(v32, v11, v10, isUniquelyReferenced_nonNull_native);
    *a3 = v34[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34[0] = v33;
    type metadata accessor for SportsTaxonomyGraphNodeWeakReference();
    swift_allocObject();
    swift_retain();
    sub_1BAAC50E8((uint64_t)v34);
    v29 = swift_beginAccess();
    MEMORY[0x1BCCE36AC](v29);
    if (*(_QWORD *)((*(_QWORD *)(v23 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v23 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
    swift_endAccess();
    v30 = *(_QWORD *)(a1 + 32);
    v34[0] = v32;
    sub_1BB65A8D8(v30, v34, a3, v27);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v31 = swift_bridgeObjectRetain();
    sub_1BB383BBC(v31);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_15:
  *a5 = v21;
}

void sub_1BB65B2BC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27[2];

  v9 = *a2;
  v11 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  LOBYTE(a4) = sub_1BA761FE4(v11, v10, a4);
  swift_bridgeObjectRelease();
  if ((a4 & 1) != 0)
  {
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v12 = sub_1BB86EFEC();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED3A3BB8);
    sub_1BB264204(a1 + 16, (uint64_t)v26);
    swift_bridgeObjectRetain();
    sub_1BA739BF4((uint64_t)v26);
    swift_bridgeObjectRetain();
    sub_1BA739BF4((uint64_t)v26);
    v13 = sub_1BB86EFC8();
    v14 = sub_1BB8732F4();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v27[0] = v16;
      *(_DWORD *)v15 = 136446210;
      swift_bridgeObjectRetain();
      sub_1BA5D2E14(v11, v10, v27);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      sub_1BA73D624((uint64_t)v26);
      swift_bridgeObjectRelease();
      sub_1BA73D624((uint64_t)v26);
      _os_log_impl(&dword_1BA493000, v13, v14, "Taxonomy graph contains loop. Node with tagId=%{public}s is it's own ancestor. Ignoring descendent node.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v16, -1, -1);
      MEMORY[0x1BCCE5C38](v15, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BA73D624((uint64_t)v26);
      swift_bridgeObjectRelease();
      sub_1BA73D624((uint64_t)v26);
    }

    v20 = 0xF000000000000007;
  }
  else
  {
    v17 = *a3;
    if (*(_QWORD *)(*a3 + 16))
    {
      swift_bridgeObjectRetain();
      v18 = sub_1BA6E35A8(v11, v10);
      if ((v19 & 1) != 0)
      {
        v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
        swift_retain();
        swift_bridgeObjectRelease();
        v26[0] = v20;
        v27[0] = v9;
        sub_1BB3D7070();
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
    sub_1BB264204(a1 + 16, (uint64_t)v27);
    v21 = *(_BYTE *)(a1 + 32);
    type metadata accessor for SportsTaxonomyGraphLeafEntityNode();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v22 + 16) = v11;
    *(_QWORD *)(v22 + 24) = v10;
    sub_1BB264204((uint64_t)v27, v22 + 32);
    *(_BYTE *)(v22 + 48) = v21;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v22;
    v20 = v23 | 0x4000000000000000;
    swift_bridgeObjectRetain_n();
    sub_1BA739BF4((uint64_t)v27);
    swift_retain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26[0] = *a3;
    *a3 = 0x8000000000000000;
    sub_1BB4BD848(v20, v11, v10, isUniquelyReferenced_nonNull_native);
    *a3 = v26[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26[0] = v9;
    type metadata accessor for SportsTaxonomyGraphNodeWeakReference();
    swift_allocObject();
    swift_retain();
    sub_1BAAC50E8((uint64_t)v26);
    v25 = swift_beginAccess();
    MEMORY[0x1BCCE36AC](v25);
    if (*(_QWORD *)((*(_QWORD *)(v22 + 56) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v22 + 56) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
    swift_endAccess();
    swift_release();
  }
LABEL_15:
  *a5 = v20;
}

uint64_t sub_1BB65B6C4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  __int16 v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v20[3];

  v8 = a2;
  v10 = *a3;
  if ((a2 & 0x10000) != 0)
    v11 = 2;
  else
    v11 = 1;
  type metadata accessor for SportsTaxonomyGraphSectionNode();
  v12 = swift_allocObject();
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v12 + 40) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v12 + 48) = v13;
  *(_BYTE *)(v12 + 16) = v8 & 1;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = v11;
  *(_BYTE *)(v12 + 17) = HIBYTE(v8) & 1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  v20[0] = v10;
  type metadata accessor for SportsTaxonomyGraphNodeWeakReference();
  swift_allocObject();
  swift_retain();
  swift_retain();
  sub_1BAAC50E8((uint64_t)v20);
  v15 = swift_beginAccess();
  MEMORY[0x1BCCE36AC](v15);
  if (*(_QWORD *)((*(_QWORD *)(v12 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v12 + 48) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_1BB872E44();
  v16 = v14 | 0xC000000000000000;
  sub_1BB872E8C();
  sub_1BB872DCC();
  swift_endAccess();
  v20[0] = v16;
  sub_1BB65A8D8(a1, v20, a4, a5);
  swift_beginAccess();
  v17 = swift_bridgeObjectRetain();
  sub_1BB383BBC(v17);
  swift_endAccess();
  swift_bridgeObjectRelease();
  result = swift_release();
  *a6 = v16;
  return result;
}

uint64_t method lookup function for SportsTaxonomyGraph()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB65B898()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BB65B8BC(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB65B8FC()
{
  unint64_t v0;
  uint64_t v1;

  v1 = swift_bridgeObjectRetain();
  return ((uint64_t (*)(uint64_t))((char *)sub_1BB65B938 + 4 * byte_1BB9393AC[v0 >> 62]))(v1);
}

uint64_t sub_1BB65B938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  swift_bridgeObjectRetain();
  if (v0)
  {
    if (v5)
    {
      if (v1 == v4 && v0 == v5)
      {
        swift_bridgeObjectRelease();
        v6 = 1;
      }
      else
      {
        v6 = sub_1BB874398();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v6 = 0;
    }
  }
  else
  {
    if (!v5)
    {
      v6 = 1;
      return v6 & 1;
    }
    v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1BB65B9DC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB65BA24(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraph.SportsTaxonomyGraphNodeHasher()
{
  return &type metadata for SportsTaxonomyGraph.SportsTaxonomyGraphNodeHasher;
}

unint64_t sub_1BB65BA7C()
{
  unint64_t result;

  result = qword_1ED3A6708;
  if (!qword_1ED3A6708)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939430, &type metadata for SportsTaxonomyGraph.SportsTaxonomyGraphNodeHasher);
    atomic_store(result, (unint64_t *)&qword_1ED3A6708);
  }
  return result;
}

uint64_t sub_1BB65BAC0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[32];

  v1 = sub_1BB8716B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1BB8716BC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];

  swift_retain();
  sub_1BB86D2B8();
  result = swift_release();
  if (v19[8] == 1)
    return sub_1BB65CA68();
  if (!*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections] + 16))
  {
    v11 = &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner];
    result = swift_beginAccess();
    if (!*(_QWORD *)v11)
    {
      sub_1BB65FECC();
      v13 = (uint64_t *)&v9[*(int *)(v12 + 48)];
      v14 = &v9[*(int *)(v12 + 64)];
      sub_1BB86FB44();
      v15 = sub_1BB86FE08();
      v16 = MEMORY[0x1E0DB7D78];
      v13[3] = v15;
      v13[4] = v16;
      __swift_allocate_boxed_opaque_existential_0(v13);
      sub_1BB86FDF0();
      v17 = *MEMORY[0x1E0DB8570];
      v18 = sub_1BB870174();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v14, v17, v18);
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E0DBC7F0], v5);
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC808], v1);
      sub_1BB86FDC0();
      (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  return result;
}

id sub_1BB65BD58()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  id result;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  uint64_t v37;
  objc_super v38;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_1BB8716B0();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x1E0C80A78](v2);
  v33 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB8716BC();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v30 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38.receiver = v0;
  v38.super_class = ObjectType;
  v36 = ObjectType;
  objc_msgSendSuper2(&v38, sel_viewDidLoad, v5);
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v8, sel_setBackgroundColor_, v9);

    sub_1BA65E330();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB8DC3E0;
    v11 = (void *)sub_1BB872970();
    v12 = (void *)objc_opt_self();
    v13 = objc_msgSend(v12, sel_systemImageNamed_, v11);

    v14 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v15 = v0;
    v16 = objc_msgSend(v14, sel_initWithImage_style_target_action_, v13, 0, v15, sel_runTests);

    *(_QWORD *)(v10 + 32) = v16;
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
    *(_QWORD *)(v10 + 40) = sub_1BB873324();
    *(_QWORD *)(v10 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithCustomView_, *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_toolbarLabel]);
    *(_QWORD *)(v10 + 56) = sub_1BB873324();
    v17 = (void *)sub_1BB872970();
    v18 = objc_msgSend(v12, sel_systemImageNamed_, v17);

    v19 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v20 = v15;
    v21 = objc_msgSend(v19, sel_initWithImage_style_target_action_, v18, 0, v20, sel_showTOCWithSender_);

    *(_QWORD *)(v10 + 64) = v21;
    v37 = v10;
    sub_1BB872DCC();
    v22 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setToolbarItems_, v22);

    v23 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_tableView];
    objc_msgSend(v23, sel_setDataSource_, v20);
    objc_msgSend(v23, sel_setDelegate_, v20);
    objc_msgSend(v23, sel_setAlwaysBounceVertical_, 1);
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v23, sel_setTableFooterView_, v24);

    type metadata accessor for SubtitleTableViewCell();
    sub_1BB873234();
    type metadata accessor for LoadingTableViewCell();
    sub_1BB873234();
    result = objc_msgSend(v20, sel_view);
    if (result)
    {
      v25 = result;
      objc_msgSend(result, sel_addSubview_, v23);

      sub_1BB86FDCC();
      v26 = v30;
      static CoverView.loading.getter(v30);
      v28 = v33;
      v27 = v34;
      v29 = v35;
      (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, *MEMORY[0x1E0DBC810], v35);
      sub_1BB86FDC0();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
      (*(void (**)(uint64_t *, uint64_t))(v31 + 8))(v26, v32);
      swift_retain();
      sub_1BB86D2D0();
      swift_release();
      sub_1BB86D2DC();
      swift_release();
      swift_retain();
      sub_1BB86D2D0();
      swift_release();
      sub_1BB86D2DC();
      swift_release();
      swift_retain();
      sub_1BB86D2D0();
      swift_release();
      sub_1BB86D2DC();
      swift_release();
      swift_retain();
      sub_1BB86D2D0();
      swift_release();
      sub_1BB86D2DC();
      swift_release();
      swift_retain();
      sub_1BB86D2D0();
      swift_release();
      sub_1BB86D2AC();
      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB65C384()
{
  return sub_1BB65BAC0();
}

void sub_1BB65C3A4(char *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t inited;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  char **v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  int v31;
  id v32;
  id v33;

  v2 = *a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v4 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v5 = *v4;
  *(_QWORD *)(inited + 32) = *v4;
  v33 = (id)objc_opt_self();
  v32 = v5;
  v6 = objc_msgSend(v33, sel_systemFontOfSize_, 10.0);
  v7 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v6;
  v8 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = v8;
  v9 = (void *)objc_opt_self();
  v10 = v8;
  v11 = &selRef_systemGreenColor;
  v31 = v2;
  if (!v2)
    v11 = &selRef_systemRedColor;
  v12 = objc_msgSend(v9, *v11);
  v13 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 80) = v12;
  sub_1BA76E82C(inited);
  v14 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v15 = (void *)sub_1BB872970();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v16 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

  v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v18 + 32) = v32;
  v19 = v32;
  *(_QWORD *)(v18 + 40) = objc_msgSend(v33, sel_systemFontOfSize_, 10.0);
  *(_QWORD *)(v18 + 64) = v7;
  *(_QWORD *)(v18 + 72) = v10;
  v20 = (void *)objc_opt_self();
  v21 = v10;
  v22 = objc_msgSend(v20, sel_secondaryLabelColor);
  *(_QWORD *)(v18 + 104) = v13;
  *(_QWORD *)(v18 + 80) = v22;
  sub_1BA76E82C(v18);
  v23 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v24 = (void *)sub_1BB872970();
  v25 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v25);

  objc_msgSend(v17, sel_appendAttributedString_, v26);
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_toolbarLabel], sel_setAttributedText_, v17);
  v27 = objc_msgSend(a1, sel_view);
  if (!v27)
  {
    __break(1u);
    goto LABEL_9;
  }
  v28 = v27;
  objc_msgSend(v27, sel_setNeedsLayout);

  v29 = objc_msgSend(a1, sel_view);
  if (!v29)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v30 = v29;
  objc_msgSend(v29, sel_layoutIfNeeded);

  if (v31)
    sub_1BB65BAC0();

}

uint64_t type metadata accessor for DebugFormatTestViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BB65CA68()
{
  char *v0;
  char *v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _BYTE v37[336];
  _BYTE v38[360];
  _BYTE v39[336];
  _BYTE v40[344];

  v1 = v0;
  v2 = (int *)type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1EF2BAC00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - v6;
  v8 = type metadata accessor for DebugFormatEditorLayoutContext();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);

  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_tableView], sel_reloadData);
  v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor];
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1BB65FE4C((uint64_t)v7);
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatEditorLayoutContext);
  v15 = &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_packages];
  memcpy(v40, &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_packages], 0x150uLL);
  memcpy(v39, &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_packages], sizeof(v39));
  sub_1BAF8EA94((uint64_t)v40);
  v16 = sub_1BB7A8230();
  if (v16 >> 62)
    v17 = sub_1BB873F30();
  else
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  sub_1BAF8FB4C((uint64_t)v40);
  if (!v17)
    return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatEditorLayoutContext);
  v36 = v15;
  v18 = &v12[*(int *)(v8 + 20)];
  v19 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v4, v18, v19);
  v20 = &v4[v2[5]];
  v21 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v12, v21);
  v22 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_key;
  v23 = v13 + v22 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 28);
  v24 = *(_QWORD *)(v23 + v2[10]);
  sub_1BA4C2DD8(v23 + v2[6], (uint64_t)&v4[v2[6]], type metadata accessor for FeedLayoutSolverOptions);
  swift_retain();
  sub_1BB86D5D0();
  v26 = v25;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v27 = v39[0];
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v28 = v38[0];
  type metadata accessor for FormatLayoutSizeSnapshot();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = sub_1BA6A2E0C(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v4[v2[10]] = v24;
  *(_QWORD *)&v4[v2[7]] = 0;
  *(_QWORD *)&v4[v2[8]] = v26;
  v4[v2[9]] = v27;
  v4[v2[11]] = v28;
  *(_QWORD *)&v4[v2[12]] = v29;
  v30 = &v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner];
  swift_beginAccess();
  if (*(_QWORD *)v30)
  {
    v39[0] = 1;
    swift_retain();
    swift_retain();
    sub_1BB86E884();
    swift_release();
    swift_release();
  }
  type metadata accessor for DebugFormatTestRunner();
  swift_allocObject();
  v31 = swift_retain();
  *(_QWORD *)v30 = sub_1BAF8B934(v31);
  swift_release();
  swift_beginAccess();
  v32 = *(_QWORD *)v30;
  v33 = v36;
  if (v32)
  {
    swift_endAccess();
    memcpy(v38, v33, 0x150uLL);
    memcpy(v37, v33, sizeof(v37));
    v34 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    sub_1BAF8EA94((uint64_t)v38);
    swift_retain();
    sub_1BAF8BB54(v37, (uint64_t)v4, (uint64_t)sub_1BB65FEC4, v34);
    swift_release();
    swift_release();
    memcpy(v39, v37, sizeof(v39));
    sub_1BAF8FB4C((uint64_t)v39);
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatEditorLayoutContext);
    return swift_release();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatEditorLayoutContext);
    return swift_endAccess();
  }
}

uint64_t sub_1BB65CFB4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner);
  swift_beginAccess();
  if (*v1)
  {
    swift_retain();
    swift_retain();
    sub_1BB86E884();
    swift_release();
    swift_release();
  }
  *v1 = 0;
  return swift_release();
}

void sub_1BB65D080(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _BYTE v19[12];
  int v20;

  v8 = sub_1BB8716B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1BB8716BC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v16 = MEMORY[0x1BCCE5D40](a4 + 16);
  if (v16)
  {
    v17 = (char *)v16;
    v20 = a3;
    v18 = (_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner);
    swift_beginAccess();
    if (!*v18)
      goto LABEL_6;
    if (*v18 != a1)
      goto LABEL_6;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DBC7E8], v12);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DBC808], v8);
    sub_1BB86FDC0();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
    *(_QWORD *)&v17[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)&v17[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_tableView], sel_reloadData);
    if ((v20 & 1) != 0)
    {
      *v18 = 0;

      swift_release();
    }
    else
    {
LABEL_6:

    }
  }
}

void sub_1BB65D2A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t inited;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;

  sub_1BA8C88C8(0);
  v6 = v1;
  MEMORY[0x1E0C80A78](v1);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v7 = inited + 32;
  sub_1BAC79E1C(0, 5, 0);
  v9 = (void *)objc_opt_self();
  sub_1BB55E8D0(0);
  v4 = v3;
  v5 = objc_msgSend(v9, sel_configurationWithPointSize_, 15.0, v6, v7, a1);
  objc_msgSend(v4, sel_imageWithConfiguration_, v5);

  JUMPOUT(0x1BB65D4C0);
}

void sub_1BB65D4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void (*v11)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char *v12;
  void (*v13)(_QWORD *, _QWORD, uint64_t, uint64_t);
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  _QWORD *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  void *v34;
  id v35;
  _QWORD *v36;
  id v37;
  id v38;
  id v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  objc_class *v47;
  _BYTE *v48;
  _QWORD *v49;
  uint64_t v50;
  id v51;
  char *v52;
  id v53;

  v5 = v0 + 52;
  v6 = *(_QWORD *)(v4 - 344) | 0x8000000000000000;
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
  v8 = type metadata accessor for FormatInspectionItem(0);
  v9 = (_QWORD *)((char *)v3 + *(int *)(v8 + 24));
  *v9 = *(_QWORD *)(v4 - 304);
  v9[1] = v7;
  v10 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  v11 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  *(_QWORD *)(v4 - 320) = v10;
  *(_QWORD *)(v4 - 304) = v11;
  v11(v9, 0, 1, v10);
  *v3 = 0x64656C6261736944;
  v3[1] = 0xE800000000000000;
  v3[2] = v5;
  v3[3] = v6;
  v12 = (char *)v3 + *(int *)(v8 + 28);
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = -1;
  v13 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v13(v3, 0, 1, v8);
  *(_QWORD *)(v4 - 128) = v1;
  v15 = *(_QWORD *)(v1 + 16);
  v14 = *(_QWORD *)(v1 + 24);
  if (v15 >= v14 >> 1)
  {
    sub_1BAC79E1C(v14 > 1, v15 + 1, 1);
    v1 = *(_QWORD *)(v4 - 128);
  }
  *(_QWORD *)(v1 + 16) = v15 + 1;
  v16 = *(_QWORD *)(v4 - 328);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = *(_QWORD *)(v16 + 72);
  sub_1BA5193C4((uint64_t)v3, v1 + v17 + v18 * v15, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
  if (v2 != 4)
    JUMPOUT(0x1BB65D40CLL);
  sub_1BAF89090(0x7974697265766553, 0xE800000000000000, 0, 0, v1, (_QWORD *)(v4 - 168));
  swift_release();
  v19 = *(_QWORD **)(v4 - 376);
  v19[7] = &type metadata for FormatInspectionGroup;
  v19[8] = &off_1E72D2F60;
  v20 = swift_allocObject();
  v19[4] = v20;
  *(_QWORD *)(v20 + 48) = *(_QWORD *)(v4 - 136);
  v21 = *(_OWORD *)(v4 - 152);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(v4 - 168);
  *(_OWORD *)(v20 + 32) = v21;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v22 = swift_allocObject();
  *(_QWORD *)(v4 - 328) = v22;
  *(_OWORD *)(v22 + 16) = *(_OWORD *)(v4 - 400);
  v23 = (void *)sub_1BB872970();
  v24 = (void *)objc_opt_self();
  v25 = objc_msgSend(v24, sel_systemImageNamed_, v23);

  if (!v25)
  {
    __break(1u);
    goto LABEL_8;
  }
  v26 = (_QWORD *)(*(_QWORD *)(v4 - 328) + v17);
  v27 = objc_msgSend(*(id *)(v4 - 312), sel_configurationWithPointSize_, 15.0);
  v28 = objc_msgSend(v25, sel_imageWithConfiguration_, v27);

  v29 = (void *)objc_opt_self();
  *(_QWORD *)(v4 - 336) = v29;
  v30 = objc_msgSend(v29, sel_whiteColor);
  v31 = (_QWORD *)((char *)v26 + *(int *)(v8 + 24));
  *v31 = v28;
  v31[1] = v30;
  v32 = *(_QWORD *)(v4 - 320);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v4 - 304))(v31, 0, 1, v32);
  *v26 = 0xD000000000000017;
  v26[1] = 0x80000001BB995620;
  v26[2] = 0xD00000000000003ALL;
  v26[3] = 0x80000001BB995640;
  v33 = (char *)v26 + *(int *)(v8 + 28);
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  v33[16] = -1;
  v13(v26, 0, 1, v8);
  v34 = (void *)sub_1BB872970();
  v35 = objc_msgSend(v24, sel_systemImageNamed_, v34);

  if (!v35)
  {
LABEL_8:
    __break(1u);
    JUMPOUT(0x1BB65DCB4);
  }
  v36 = (_QWORD *)((char *)v26 + v18);
  v37 = objc_msgSend(*(id *)(v4 - 312), sel_configurationWithPointSize_, 15.0);
  v38 = objc_msgSend(v35, sel_imageWithConfiguration_, v37);

  v39 = objc_msgSend(*(id *)(v4 - 336), sel_whiteColor);
  v40 = (_QWORD *)((char *)v36 + *(int *)(v8 + 24));
  *v40 = v38;
  v40[1] = v39;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v4 - 304))(v40, 0, 1, v32);
  *v36 = 0xD00000000000001ALL;
  v36[1] = 0x80000001BB995680;
  v36[2] = 0xD000000000000044;
  v36[3] = 0x80000001BB9956A0;
  v41 = (char *)v36 + *(int *)(v8 + 28);
  *(_QWORD *)v41 = 0;
  *((_QWORD *)v41 + 1) = 0;
  v41[16] = -1;
  v13(v36, 0, 1, v8);
  sub_1BAF89090(0x736D657449, 0xE500000000000000, 0, 0, *(_QWORD *)(v4 - 328), (_QWORD *)(v4 - 128));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v19[12] = &type metadata for FormatInspectionGroup;
  v19[13] = &off_1E72D2F60;
  v42 = swift_allocObject();
  v19[9] = v42;
  *(_QWORD *)(v42 + 48) = *(_QWORD *)(v4 - 96);
  v43 = *(_OWORD *)(v4 - 112);
  *(_OWORD *)(v42 + 16) = *(_OWORD *)(v4 - 128);
  *(_OWORD *)(v42 + 32) = v43;
  v44 = sub_1BB6DF010((uint64_t)v19);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  v45 = *(_QWORD *)(*(_QWORD *)(v4 - 408) + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor);
  swift_retain();
  v46 = sub_1BB6DED58((uint64_t)v44);
  swift_bridgeObjectRelease();
  v47 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
  v48 = objc_allocWithZone(v47);
  v48[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v48[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(_QWORD *)&v48[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v48[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
  v49 = &v48[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *v49 = 0;
  v49[1] = 0xE000000000000000;
  v50 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  v51 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v52 = v48;
  *(_QWORD *)&v48[v50] = objc_msgSend(v51, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v52[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v52[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v45;
  *(_QWORD *)&v52[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v46;
  *(_QWORD *)&v52[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v46;
  *(_QWORD *)&v52[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
  swift_retain();
  swift_bridgeObjectRetain();

  *(_QWORD *)(v4 - 296) = v52;
  *(_QWORD *)(v4 - 288) = v47;
  v53 = objc_msgSendSuper2((objc_super *)(v4 - 296), sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v53, sel_setTitle_, 0);
  swift_release();
  sub_1BB65DCC8(v53, 0, *(_QWORD *)(v4 - 416));

}

id sub_1BB65DCC8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  void *v10;

  objc_msgSend(a1, sel_setModalPresentationStyle_, 7);
  v7 = objc_msgSend(a1, sel_popoverPresentationController);
  objc_msgSend(v7, sel_setBarButtonItem_, a3);

  v8 = objc_msgSend(a1, sel_popoverPresentationController);
  objc_msgSend(v8, sel_setSourceView_, a2);

  v9 = objc_msgSend(a1, sel_popoverPresentationController);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_setPermittedArrowDirections_, 4);

  }
  return objc_msgSend(v3, sel_presentViewController_animated_completion_, a1, 1, 0);
}

unint64_t sub_1BB65DE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  int EnumCaseMultiPayload;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  void *v90;
  uint64_t v91;
  void *v92;
  void *v93;
  id v94;
  void *v95;
  void *v96;
  id v97;
  void *v98;
  char v99;
  void *v100;
  void *v101;
  id v102;
  id v103;
  id v104;
  void *v105;
  char v106;
  id v107;
  _BYTE v108[12];
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v1 = type metadata accessor for DebugFormatTestCaseResult(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v108[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for DebugFormatTestSuiteResultItem();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v108[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_72;
  }
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections);
  if (result >= *(_QWORD *)(v9 + 16))
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v10 = v9 + 40 * result;
  v11 = *(_QWORD *)(v10 + 40);
  v13 = *(_QWORD *)(v10 + 48);
  v12 = *(_QWORD *)(v10 + 56);
  v14 = *(unsigned __int8 *)(v10 + 64);
  if (v14 >> 6)
  {
    if (v14 >> 6 == 1)
    {
      v113 = *(_QWORD *)(v10 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = sub_1BB86CBC8();
      if ((result & 0x8000000000000000) == 0)
      {
        if (result < *(_QWORD *)(v13 + 16))
        {
          sub_1BA4C2DD8(v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * result, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestSuiteResultItem);
          v15 = type metadata accessor for DebugFormatTestSuiteScopeResult();
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v7, 1, v15) == 1)
          {
            type metadata accessor for LoadingTableViewCell();
            v16 = (char *)sub_1BB87321C();
            objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC8NewsFeed20LoadingTableViewCell_activityIndicatorView], sel_startAnimating);
            v17 = v113;
            v18 = v11;
            v19 = v13;
            v20 = v12;
            v21 = v14;
          }
          else
          {
            v112 = v13;
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            v109 = v14;
            if (EnumCaseMultiPayload != 1)
            {
              sub_1BA5193C4((uint64_t)v7, (uint64_t)v3, type metadata accessor for DebugFormatTestCaseResult);
              type metadata accessor for SubtitleTableViewCell();
              v16 = (char *)sub_1BB87321C();
              v76 = objc_msgSend(v16, sel_textLabel);
              if (v76)
              {
                v77 = v76;
                objc_msgSend(v76, sel_setNumberOfLines_, 0);

              }
              v78 = objc_msgSend(v16, sel_textLabel);
              if (v78)
              {
                v79 = v78;
                v80 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
                objc_msgSend(v79, sel_setFont_, v80);

              }
              v81 = objc_msgSend(v16, sel_detailTextLabel);
              if (v81)
              {
                v82 = v81;
                objc_msgSend(v81, sel_setNumberOfLines_, 0);

              }
              v83 = objc_msgSend(v16, sel_detailTextLabel);
              if (v83)
              {
                v84 = v83;
                v85 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
                objc_msgSend(v84, sel_setTextColor_, v85);

              }
              v86 = objc_msgSend(v16, sel_detailTextLabel);
              if (v86)
              {
                v87 = v86;
                v88 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 12.0);
                objc_msgSend(v87, sel_setFont_, v88);

              }
              objc_msgSend(v16, sel_setAccessoryType_, 1);
              v89 = objc_msgSend(v16, sel_textLabel);
              if (v89)
              {
                v90 = v89;
                v91 = swift_bridgeObjectRetain();
                sub_1BAF5BA24(v91);
                v93 = v92;
                swift_bridgeObjectRelease();
                objc_msgSend(v90, sel_setAttributedText_, v93);

              }
              v94 = objc_msgSend(v16, sel_detailTextLabel);
              if (v94)
              {
                v95 = v94;
                sub_1BA9228E0();
                v96 = (void *)sub_1BB872970();
                swift_bridgeObjectRelease();
                objc_msgSend(v95, sel_setText_, v96);

              }
              v97 = objc_msgSend(v16, sel_imageView);
              if (v97)
              {
                v98 = v97;
                sub_1BA922EA4();
                sub_1BB55E8D0(v99);
                v101 = v100;
                v102 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 15.0);
                v103 = objc_msgSend(v101, sel_imageWithConfiguration_, v102);

                objc_msgSend(v98, sel_setImage_, v103);
              }
              v104 = objc_msgSend(v16, sel_imageView);
              if (v104)
              {
                v105 = v104;
                sub_1BA922EA4();
                v107 = sub_1BB55EAC0(v106);
                objc_msgSend(v105, sel_setTintColor_, v107);

              }
              sub_1BB65FDA0(v113, v11, v112, v12, v109);
              sub_1BA4A2E80((uint64_t)v3, type metadata accessor for DebugFormatTestCaseResult);
              return (unint64_t)v16;
            }
            v46 = *(_QWORD *)v7;
            LODWORD(v111) = v7[16];
            v47 = (void *)*((_QWORD *)v7 + 3);
            v110 = *((_QWORD *)v7 + 5);
            type metadata accessor for SubtitleTableViewCell();
            v16 = (char *)sub_1BB87321C();
            v48 = objc_msgSend(v16, sel_textLabel);
            if (v48)
            {
              v49 = v48;
              objc_msgSend(v48, sel_setNumberOfLines_, 0);

            }
            v50 = objc_msgSend(v16, sel_textLabel);
            if (v50)
            {
              v51 = v50;
              v52 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
              objc_msgSend(v51, sel_setFont_, v52);

            }
            v53 = objc_msgSend(v16, sel_detailTextLabel);
            if (v53)
            {
              v54 = v53;
              objc_msgSend(v53, sel_setNumberOfLines_, 0);

            }
            v55 = objc_msgSend(v16, sel_detailTextLabel);
            if (v55)
            {
              v56 = v55;
              v57 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
              objc_msgSend(v56, sel_setTextColor_, v57);

            }
            v58 = objc_msgSend(v16, sel_detailTextLabel);
            if (v58)
            {
              v59 = v58;
              v60 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 12.0);
              objc_msgSend(v59, sel_setFont_, v60);

            }
            objc_msgSend(v16, sel_setAccessoryType_, 1);
            v61 = objc_msgSend(v16, sel_textLabel);
            if (v61)
            {
              v62 = v61;
              sub_1BAF5BA24(v46);
              v64 = v63;
              objc_msgSend(v62, sel_setAttributedText_, v63);

            }
            v65 = objc_msgSend(v16, sel_detailTextLabel);
            if (v65)
            {
              v66 = v65;
              objc_msgSend(v65, sel_setAttributedText_, v47);

            }
            v67 = objc_msgSend(v16, sel_imageView);
            if (v67)
            {
              v68 = v67;
              sub_1BB55E8D0(v111);
              v70 = v69;
              v71 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 15.0);
              v72 = objc_msgSend(v70, sel_imageWithConfiguration_, v71);

              objc_msgSend(v68, sel_setImage_, v72);
            }
            v73 = objc_msgSend(v16, sel_imageView);
            if (v73)
            {
              v74 = v73;
              v75 = sub_1BB55EAC0(v111);
              objc_msgSend(v74, sel_setTintColor_, v75);
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

            }
            else
            {
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v19 = v112;
            v17 = v113;
            v18 = v11;
            v20 = v12;
            v21 = v109;
          }
          goto LABEL_69;
        }
        goto LABEL_74;
      }
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    type metadata accessor for LoadingTableViewCell();
    v16 = (char *)sub_1BB87321C();
    objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC8NewsFeed20LoadingTableViewCell_activityIndicatorView], sel_startAnimating);
    return (unint64_t)v16;
  }
  v22 = *(_QWORD *)(v10 + 32);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if (result < *(_QWORD *)(v22 + 16))
  {
    v111 = v11;
    v112 = v12;
    v113 = v22;
    v110 = *(_QWORD *)(v22 + 32 * result + 48);
    type metadata accessor for SubtitleTableViewCell();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = (char *)sub_1BB87321C();
    v23 = objc_msgSend(v16, sel_textLabel);
    if (v23)
    {
      v24 = v23;
      objc_msgSend(v23, sel_setNumberOfLines_, 0);

    }
    v25 = objc_msgSend(v16, sel_textLabel);
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
      objc_msgSend(v26, sel_setFont_, v27);

    }
    v28 = objc_msgSend(v16, sel_detailTextLabel);
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v28, sel_setNumberOfLines_, 0);

    }
    v30 = objc_msgSend(v16, sel_detailTextLabel);
    if (v30)
    {
      v31 = v30;
      v32 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
      objc_msgSend(v31, sel_setTextColor_, v32);

    }
    v33 = objc_msgSend(v16, sel_detailTextLabel);
    if (v33)
    {
      v34 = v33;
      v35 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 12.0);
      objc_msgSend(v34, sel_setFont_, v35);

    }
    objc_msgSend(v16, sel_setAccessoryType_, 0);
    v36 = objc_msgSend(v16, sel_textLabel);
    if (v36)
    {
      v37 = v36;
      v38 = (void *)sub_1BB872970();
      objc_msgSend(v37, sel_setText_, v38);

    }
    v39 = objc_msgSend(v16, sel_detailTextLabel);
    if (v39)
    {
      v40 = v39;
      v41 = (void *)sub_1BB872970();
      objc_msgSend(v40, sel_setText_, v41);

    }
    v42 = objc_msgSend(v16, sel_imageView);
    v43 = v111;
    if (!v42)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v112;
      v17 = v113;
      v18 = v43;
      v19 = v13;
      v21 = v14;
LABEL_69:
      sub_1BB65FDA0(v17, v18, v19, v20, v21);
      return (unint64_t)v16;
    }
    v44 = v42;
    objc_msgSend(v42, sel_setImage_, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB65FDA0(v113, v43, v13, v112, v14);

    return (unint64_t)v16;
  }
LABEL_76:
  __break(1u);
  return result;
}

unint64_t sub_1BB65ED90(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  unint64_t result;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  unsigned int EnumCaseMultiPayload;
  id v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _QWORD *v68;
  uint64_t v69;
  id v70;
  char *v71;
  id v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _QWORD *v82;
  uint64_t v83;
  id v84;
  char *v85;
  id v86;
  uint64_t v87;
  Class v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  objc_super v96;
  objc_super v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;

  v2 = v1;
  v4 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DebugFormatTestCaseResult(0);
  MEMORY[0x1E0C80A78](v10);
  v94 = (uint64_t)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DebugFormatTestSuiteResultItem();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void *)sub_1BB86CB8C();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v16, 1);

  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections);
  if (result >= *(_QWORD *)(v18 + 16))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v95 = a1;
  v19 = v18 + 40 * result;
  v20 = *(_BYTE *)(v19 + 64);
  if ((v20 & 0xC0) != 0x40)
    return result;
  v90 = v2;
  v21 = *(_QWORD *)(v19 + 40);
  v91 = *(_QWORD *)(v19 + 32);
  v22 = *(_QWORD *)(v19 + 48);
  v93 = *(_QWORD *)(v19 + 56);
  v92 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
    goto LABEL_30;
  if (result >= *(_QWORD *)(v22 + 16))
  {
LABEL_31:
    __break(1u);
    return result;
  }
  sub_1BA4C2DD8(v22+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * result, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestSuiteResultItem);
  v23 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v15, 1, v23) == 1)
    return sub_1BB65FDA0(v91, v92, v22, v93, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = *(_QWORD *)v15;
    v25 = *((_QWORD *)v15 + 1);
    v26 = v15[16];
    v27 = (void *)*((_QWORD *)v15 + 3);
    v28 = v15[32];
    v29 = *((_QWORD *)v15 + 5);
    v30 = *(_QWORD *)(v90 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor);
    *(_QWORD *)&v99 = v24;
    *((_QWORD *)&v99 + 1) = v25;
    LOBYTE(v100) = v26;
    *((_QWORD *)&v100 + 1) = v27;
    LOBYTE(v101) = v28;
    v102 = v29;
    v31 = objc_allocWithZone((Class)type metadata accessor for DebugFormatTestCaseMultiResultViewController());
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = v27;
    swift_bridgeObjectRetain();
    v33 = sub_1BB0530F0(v30, (uint64_t)&v99);
    v34 = (void *)sub_1BB86CB8C();
    v35 = objc_msgSend(v95, sel_cellForRowAtIndexPath_, v34);

    sub_1BB65DCC8(v33, (uint64_t)v35, 0);
    sub_1BB65FDA0(v91, v92, v22, v93, v20);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v36 = v94;
    sub_1BA5193C4((uint64_t)v15, v94, type metadata accessor for DebugFormatTestCaseResult);
    sub_1BA4C2DD8(v36 + *(int *)(v10 + 24), (uint64_t)v6, type metadata accessor for DebugFormatTestCaseResult.Result);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload >= 2)
    {
      if (EnumCaseMultiPayload == 2)
      {
        v43 = *((_QWORD *)v6 + 35);
        v44 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
        sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        inited = swift_initStackObject();
        v89 = xmmword_1BB87CE70;
        *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
        v88 = (Class)(inited + 32);
        sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v44);
        sub_1BA8C88C8(0);
        v47 = *(unsigned __int8 *)(*(_QWORD *)(v46 - 8) + 80);
        v48 = (v47 + 32) & ~v47;
        v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = v89;
        v50 = (_QWORD *)(v49 + v48);
        *(_QWORD *)&v99 = 0;
        *((_QWORD *)&v99 + 1) = 0xE000000000000000;
        *(_QWORD *)&v89 = v43;
        v98 = v43;
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
        sub_1BB873E34();
        v51 = HIBYTE(*((_QWORD *)&v99 + 1)) & 0xFLL;
        if ((*((_QWORD *)&v99 + 1) & 0x2000000000000000) == 0)
          v51 = v99 & 0xFFFFFFFFFFFFLL;
        if (v51)
        {
          *((_QWORD *)&v100 + 1) = MEMORY[0x1E0DEA968];
        }
        else
        {
          swift_bridgeObjectRelease();
          v99 = 0u;
          v100 = 0u;
        }
        sub_1BAAF40BC(0, 0xE000000000000000, (uint64_t)&v99, v50);
        v61 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v50, 0, 1, v61);
        sub_1BAF89090(0x72724520646E6942, 0xEA0000000000726FLL, 0, 0, v49, &v99);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
        *(_QWORD *)(inited + 64) = &off_1E72D2F60;
        v62 = swift_allocObject();
        *(_QWORD *)(inited + 32) = v62;
        *(_QWORD *)(v62 + 48) = v101;
        v63 = v100;
        *(_OWORD *)(v62 + 16) = v99;
        *(_OWORD *)(v62 + 32) = v63;
        v64 = sub_1BB6DF010(inited);
        swift_setDeallocating();
        sub_1BA89EA04(0);
        swift_arrayDestroy();
        v65 = *(_QWORD *)(v90 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor);
        swift_retain();
        v66 = sub_1BB6DED58((uint64_t)v64);
        swift_bridgeObjectRelease();
        v88 = (Class)type metadata accessor for DebugFormatInspectorPaneViewController();
        v67 = objc_allocWithZone(v88);
        v67[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
        v67[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
        *(_QWORD *)&v67[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
        *(_OWORD *)&v67[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
        v68 = &v67[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
        *v68 = 0;
        v68[1] = 0xE000000000000000;
        v69 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
        v70 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
        v71 = v67;
        *(_QWORD *)&v67[v69] = objc_msgSend(v70, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
        *(_QWORD *)&v71[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
        *(_QWORD *)&v71[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v65;
        *(_QWORD *)&v71[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v66;
        *(_QWORD *)&v71[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v66;
        *(_QWORD *)&v71[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
        swift_retain();
        swift_bridgeObjectRetain();

        v96.receiver = v71;
        v96.super_class = v88;
        v72 = objc_msgSendSuper2(&v96, sel_initWithNibName_bundle_, 0, 0);
        objc_msgSend(v72, sel_setTitle_, 0);
        swift_release();
        v73 = (void *)sub_1BB86CB8C();
        v74 = objc_msgSend(v95, sel_cellForRowAtIndexPath_, v73);
      }
      else
      {
        v52 = *((_QWORD *)v6 + 35);
        v53 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
        sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v54 = swift_initStackObject();
        v89 = xmmword_1BB87CE70;
        *(_OWORD *)(v54 + 16) = xmmword_1BB87CE70;
        v88 = (Class)(v54 + 32);
        sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v53);
        sub_1BA8C88C8(0);
        v56 = *(unsigned __int8 *)(*(_QWORD *)(v55 - 8) + 80);
        v57 = (v56 + 32) & ~v56;
        v58 = swift_allocObject();
        *(_OWORD *)(v58 + 16) = v89;
        v59 = (_QWORD *)(v58 + v57);
        *(_QWORD *)&v99 = 0;
        *((_QWORD *)&v99 + 1) = 0xE000000000000000;
        *(_QWORD *)&v89 = v52;
        v98 = v52;
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
        sub_1BB873E34();
        v60 = HIBYTE(*((_QWORD *)&v99 + 1)) & 0xFLL;
        if ((*((_QWORD *)&v99 + 1) & 0x2000000000000000) == 0)
          v60 = v99 & 0xFFFFFFFFFFFFLL;
        if (v60)
        {
          *((_QWORD *)&v100 + 1) = MEMORY[0x1E0DEA968];
        }
        else
        {
          swift_bridgeObjectRelease();
          v99 = 0u;
          v100 = 0u;
        }
        sub_1BAAF40BC(0, 0xE000000000000000, (uint64_t)&v99, v59);
        v75 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v59, 0, 1, v75);
        sub_1BAF89090(0x2064696C61766E49, 0xEE0074756F79614CLL, 0, 0, v58, &v99);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(_QWORD *)(v54 + 56) = &type metadata for FormatInspectionGroup;
        *(_QWORD *)(v54 + 64) = &off_1E72D2F60;
        v76 = swift_allocObject();
        *(_QWORD *)(v54 + 32) = v76;
        *(_QWORD *)(v76 + 48) = v101;
        v77 = v100;
        *(_OWORD *)(v76 + 16) = v99;
        *(_OWORD *)(v76 + 32) = v77;
        v78 = sub_1BB6DF010(v54);
        swift_setDeallocating();
        sub_1BA89EA04(0);
        swift_arrayDestroy();
        v79 = *(_QWORD *)(v90 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor);
        swift_retain();
        v80 = sub_1BB6DED58((uint64_t)v78);
        swift_bridgeObjectRelease();
        v88 = (Class)type metadata accessor for DebugFormatInspectorPaneViewController();
        v81 = objc_allocWithZone(v88);
        v81[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
        v81[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
        *(_QWORD *)&v81[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
        *(_OWORD *)&v81[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
        v82 = &v81[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
        *v82 = 0;
        v82[1] = 0xE000000000000000;
        v83 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
        v84 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
        v85 = v81;
        *(_QWORD *)&v81[v83] = objc_msgSend(v84, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
        *(_QWORD *)&v85[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
        *(_QWORD *)&v85[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v79;
        *(_QWORD *)&v85[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v80;
        *(_QWORD *)&v85[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v80;
        *(_QWORD *)&v85[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
        swift_retain();
        swift_bridgeObjectRetain();

        v97.receiver = v85;
        v97.super_class = v88;
        v72 = objc_msgSendSuper2(&v97, sel_initWithNibName_bundle_, 0, 0);
        objc_msgSend(v72, sel_setTitle_, 0);
        swift_release();
        v73 = (void *)sub_1BB86CB8C();
        v74 = objc_msgSend(v95, sel_cellForRowAtIndexPath_, v73);
      }
      v86 = v74;

      sub_1BB65DCC8(v72, (uint64_t)v86, 0);
      sub_1BB65FDA0(v91, v92, v22, v93, v20);
      sub_1BA4A2E80(v94, type metadata accessor for DebugFormatTestCaseResult);
      return sub_1BA79E0D0((uint64_t)v6);
    }
    else
    {
      sub_1BA5193C4((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestCaseLayout);
      v38 = objc_allocWithZone((Class)type metadata accessor for DebugFormatTestCasePreviewNavigationController());
      v39 = swift_retain();
      v40 = sub_1BB82066C(v39, (uint64_t)v9);
      v41 = (void *)sub_1BB86CB8C();
      v42 = objc_msgSend(v95, sel_cellForRowAtIndexPath_, v41);

      sub_1BB65DCC8(v40, (uint64_t)v42, 0);
      sub_1BB65FDA0(v91, v92, v22, v93, v20);
      return sub_1BA4A2E80(v36, type metadata accessor for DebugFormatTestCaseResult);
    }
  }
}

uint64_t sub_1BB65FB78()
{
  return 0x7374736554;
}

id sub_1BB65FB8C()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BB872970();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  return v1;
}

id sub_1BB65FBFC(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;
  _BYTE __dst[336];

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_packages;
  v5 = qword_1EF2A7490;
  v6 = v1;
  if (v5 != -1)
    swift_once();
  memcpy(__dst, &byte_1EF3D09C0, sizeof(__dst));
  memmove(&v6[v4], &byte_1EF3D09C0, 0x150uLL);
  v7 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_tableView;
  v8 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  sub_1BAF8EA94((uint64_t)__dst);
  *(_QWORD *)&v6[v7] = objc_msgSend(v8, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner] = 0;
  v9 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_coverViewManager;
  sub_1BB86FDE4();
  swift_allocObject();
  *(_QWORD *)&v6[v9] = sub_1BB86FDD8();
  v10 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_toolbarLabel;
  *(_QWORD *)&v6[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor] = a1;
  swift_retain();

  v12.receiver = v6;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1BB65FDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 >> 6)
  {
    if (a5 >> 6 != 1)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB65FDDC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB65FE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 >> 6)
  {
    if (a5 >> 6 != 1)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB65FE4C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1EF2BAC00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB65FEA0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB65FEC4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  sub_1BB65D080(a1, a2, a3, v3);
}

void sub_1BB65FECC()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF2C9D70)
  {
    sub_1BB86FB50();
    sub_1BA4D9CE8(255, &qword_1EF2C9D78);
    sub_1BB870174();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF2C9D70);
  }
}

void sub_1BB65FF64()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE __dst[336];

  v1 = v0;
  v2 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_packages;
  if (qword_1EF2A7490 != -1)
    swift_once();
  memcpy(__dst, &byte_1EF3D09C0, sizeof(__dst));
  memmove(&v1[v2], &byte_1EF3D09C0, 0x150uLL);
  v3 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_tableView;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  sub_1BAF8EA94((uint64_t)__dst);
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner] = 0;
  v5 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_coverViewManager;
  sub_1BB86FDE4();
  swift_allocObject();
  *(_QWORD *)&v1[v5] = sub_1BB86FDD8();
  v6 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_toolbarLabel;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t EngagementBannerViewRenderer.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t EngagementBannerViewRenderer.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

void _s8NewsFeed28EngagementBannerViewRendererC6render3for4with2inyAA0bcD0V_AA0cdE16LayoutAttributesVAA0cdE0CtF_0(int a1, double *a2, char *a3)
{
  double v4;
  double v5;
  double v6;
  double v7;
  id *v8;
  id v9;
  CGRect v10;

  v4 = a2[4];
  v5 = a2[5];
  v6 = a2[6];
  v7 = a2[7];
  objc_msgSend(a3, sel_setFrame_, *a2, a2[1], a2[2], a2[3]);
  v8 = (id *)&a3[OBJC_IVAR____TtC8NewsFeed20EngagementBannerView_engagementView];
  swift_beginAccess();
  if (*v8)
  {
    objc_msgSend(*v8, sel_setFrame_, v4, v5, v6, v7);
    if (*v8)
    {
      v9 = *v8;
      v10.origin.x = v4;
      v10.origin.y = v5;
      v10.size.width = v6;
      v10.size.height = v7;
      objc_msgSend(v9, sel_setHidden_, CGRectGetHeight(v10) == 0.0);

    }
  }
}

uint64_t dispatch thunk of EngagementBannerViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for EngagementBannerViewRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t FeedItemRendererPipelineProcessor.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed33FeedItemRendererPipelineProcessor_lastRendererOptions, &qword_1ED3D2C58, (void (*)(uint64_t))MEMORY[0x1E0DB7A20]);
  return v0;
}

uint64_t FeedItemRendererPipelineProcessor.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed33FeedItemRendererPipelineProcessor_lastRendererOptions, &qword_1ED3D2C58, (void (*)(uint64_t))MEMORY[0x1E0DB7A20]);
  return swift_deallocClassInstance();
}

uint64_t (*FeedItemRendererPipelineProcessor.process<A, B, C, D>(blueprint:layoutBlueprint:layoutCollection:layoutOptions:)(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))(_QWORD)
{
  return sub_1BA6598C4(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1BB66031C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  double v12;
  double v13;
  double v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  CGFloat v44;
  unint64_t v45;
  uint64_t v46;
  CGFloat y;
  CGFloat x;
  uint64_t v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;

  v0 = sub_1BB86FC70();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v46 - v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v46 - v8;
  sub_1BB8704EC();
  v10 = sub_1BB86FC58();
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v9, v0);
  sub_1BB8704EC();
  if ((v10 & 1) != 0)
  {
    sub_1BB86FC64();
    y = v13;
    x = v12;
    v11(v9, v0);
    sub_1BB8704EC();
    sub_1BB86FC40();
    v11(v7, v0);
    sub_1BB8704EC();
    sub_1BB86FC34();
    v11(v4, v0);
    return sub_1BB870AB0();
  }
  else
  {
    sub_1BB86FC40();
    y = v16;
    x = v15;
    v11(v9, v0);
    sub_1BB8704EC();
    sub_1BB86FC34();
    v11(v7, v0);
    v17 = sub_1BB870AB0();
    v18 = MEMORY[0x1E0DEE9D8];
    if (v17)
      v19 = v17;
    else
      v19 = MEMORY[0x1E0DEE9D8];
    sub_1BB8704EC();
    sub_1BB86FC64();
    x = v20;
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v11(v9, v0);
    sub_1BB8704EC();
    sub_1BB86FC64();
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v11(v7, v0);
    v50.origin.x = v28;
    v50.origin.y = v30;
    v50.size.width = v32;
    v50.size.height = v34;
    v35 = -CGRectGetWidth(v50);
    sub_1BB8704EC();
    sub_1BB86FC64();
    v37 = v36;
    v39 = v38;
    v41 = v40;
    v43 = v42;
    v11(v7, v0);
    v51.origin.x = v37;
    v51.origin.y = v39;
    v51.size.width = v41;
    v51.size.height = v43;
    v44 = -CGRectGetHeight(v51);
    v52.origin.x = x;
    v52.origin.y = v22;
    v52.size.width = v24;
    v52.size.height = v26;
    v53 = CGRectInset(v52, v35, v44);
    y = v53.origin.y;
    x = v53.origin.x;
    sub_1BB8704EC();
    sub_1BB86FC40();
    v11(v9, v0);
    sub_1BB8704EC();
    sub_1BB86FC34();
    v11(v7, v0);
    v45 = sub_1BB870AB0();
    if (!v45)
      v45 = v18;
    v49 = v19;
    sub_1BA65F80C(v45);
    return v49;
  }
}

void sub_1BB6606E4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _BYTE v14[40];

  v3 = v2;
  sub_1BA65DC54(a2, (uint64_t)&v12);
  if (!v13)
  {
    sub_1BA65DBBC((uint64_t)&v12, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, MEMORY[0x1E0DBA438]);
    return;
  }
  sub_1BA4CECCC(&v12, (uint64_t)v14);
  v5 = *(_BYTE *)(v2
                + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_isLiveResizing);
  sub_1BA4C010C((uint64_t)v14, (uint64_t)&v12);
  if ((v5 & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(&v12, v13);
    v6 = ProcessedImageRequestType.isDownloaded.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    if ((v6 & 1) != 0)
    {
      dispatch_group_enter(*(dispatch_group_t *)(v3
                                               + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_loadingGroup));
      v7 = 1;
      goto LABEL_8;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  v7 = 0;
LABEL_8:
  v8 = *(_QWORD *)(v3
                 + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount);
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3
              + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount) = v10;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v11 = swift_allocObject();
    *(_BYTE *)(v11 + 16) = v7;
    *(_QWORD *)(v11 + 24) = v3;
    swift_retain();
    sub_1BB86F8F8();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
}

uint64_t sub_1BB660870()
{
  uint64_t v0;

  sub_1BAA4D944(v0+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_loadingGroup));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB6608D0()
{
  return type metadata accessor for FeedItemRendererPipelineProcessor(0);
}

uint64_t method lookup function for FeedItemRendererPipelineProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB6608E4()
{
  return type metadata accessor for FeedItemRendererPipelineProcessor.Context(0);
}

uint64_t sub_1BB6608EC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BB86CBE0();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB66092C()
{
  swift_release();
  return swift_deallocObject();
}

id TagActivityItemsConfiguration.__allocating_init(tag:)(void *a1)
{
  objc_class *v1;

  swift_getObjectType();
  return sub_1BB660E74(a1, v1);
}

id TagActivityItemsConfiguration.init(tag:)(void *a1)
{
  void *v1;

  swift_getObjectType();
  return sub_1BB660EA8(a1, v1);
}

id TagActivityItemsConfiguration.__allocating_init(objects:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2AE2D0);
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithObjects_, v2);

  return v3;
}

id TagActivityItemsConfiguration.init(objects:)()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2AE2D0);
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v5, sel_initWithObjects_, v2);

  return v3;
}

id TagActivityItemsConfiguration.__allocating_init(itemProviders:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  sub_1BAA5CA20();
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithItemProviders_, v2);

  return v3;
}

id TagActivityItemsConfiguration.init(itemProviders:)()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BAA5CA20();
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v5, sel_initWithItemProviders_, v2);

  return v3;
}

id TagActivityItemsConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BB660D4C(uint64_t a1@<X0>, Class *a2@<X1>, SEL *a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  id v9;
  id v10;

  v8 = objc_allocWithZone((Class)type metadata accessor for TagImageShareAttributeProvider());
  swift_unknownObjectRetain();
  v9 = objc_msgSend(v8, sel_init);
  v10 = objc_msgSend(objc_allocWithZone(*a2), *a3, a1, v9);
  swift_unknownObjectRelease();

  *a4 = v10;
}

void sub_1BB660DDC(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;
  void *v6;
  id v7;

  v4 = objc_allocWithZone((Class)type metadata accessor for TagImageShareAttributeProvider());
  swift_unknownObjectRetain();
  v5 = objc_msgSend(v4, sel_init);
  v6 = (void *)_s8NewsFeed30TagImageShareAttributeProviderC05shareD03forSo7UIImageCSo14FCTagProviding_p_tF_0(a1);

  v7 = objc_msgSend(objc_allocWithZone((Class)NETagLinkPresentationSource), sel_initWithTag_image_, a1, v6);
  swift_unknownObjectRelease();

  *a2 = v7;
}

id sub_1BB660E74(void *a1, Class a2)
{
  return sub_1BB660EA8(a1, objc_allocWithZone(a2));
}

id sub_1BB660EA8(void *a1, void *a2)
{
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  char *v10;
  void *v11;
  id v12;
  objc_super v14;

  sub_1BA65E330();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB8856F0;
  v5 = (char *)objc_allocWithZone((Class)type metadata accessor for SharingTagTextActivityItemSource());
  *(_QWORD *)(v4 + 32) = sub_1BB6CD604(a1, v5);
  v6 = (void *)swift_unknownObjectRetain();
  v7 = sub_1BB66100C(v6);
  v8 = (objc_class *)type metadata accessor for SharingTagURLActivityItemSource();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = &v9[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(_QWORD *)v10 = a1;
  v10[8] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = v7;
  v14.receiver = v9;
  v14.super_class = v8;
  *(_QWORD *)(v4 + 40) = objc_msgSendSuper2(&v14, sel_init);
  sub_1BB872DCC();
  sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2B6C20);
  v11 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(a2, sel_initNAWithActivityItemSources_, v11);

  swift_unknownObjectRelease();
  return v12;
}

uint64_t type metadata accessor for TagActivityItemsConfiguration()
{
  return objc_opt_self();
}

uint64_t sub_1BB66100C(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;

  v2 = sub_1BB86DE7C();
  v3 = objc_msgSend(a1, sel_asSportsEvent, MEMORY[0x1E0C80A78](v2));
  if (v3
    || (v3 = objc_msgSend(a1, sel_asSports)) != 0
    || (v3 = objc_msgSend(a1, sel_asPuzzleType)) != 0)
  {
    *(_QWORD *)(swift_allocObject() + 16) = v3;
    sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
    sub_1BA5D1B18();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B9240, (uint64_t (*)(uint64_t))sub_1BA5D1B18, MEMORY[0x1E0DEAF38]);
    swift_unknownObjectRetain();
    sub_1BB873BC4();
    sub_1BB04C624();
    swift_allocObject();
    v4 = sub_1BB86E740();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
    sub_1BA5D1B18();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B9240, (uint64_t (*)(uint64_t))sub_1BA5D1B18, MEMORY[0x1E0DEAF38]);
    swift_unknownObjectRetain();
    sub_1BB873BC4();
    sub_1BB04C624();
    swift_allocObject();
    return sub_1BB86E740();
  }
  return v4;
}

uint64_t sub_1BB6613F8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1BB66141C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BB660DDC(*(void **)(v1 + 16), a1);
}

id sub_1BB661424@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)NEPuzzleTagLinkPresentationSource), sel_initWithPuzzleTag_, *(_QWORD *)(v1 + 16));
  *a1 = result;
  return result;
}

void sub_1BB661464(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BB660D4C(*(_QWORD *)(v1 + 16), (Class *)off_1E72495C0, (SEL *)&selRef_initWithSportsTag_tagImageProvider_, a1);
}

void sub_1BB66148C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BB660D4C(*(_QWORD *)(v1 + 16), (Class *)off_1E72495B8, (SEL *)&selRef_initWithSportsEvent_tagImageProvider_, a1);
}

uint64_t FormatImageNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB661570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[2];
  uint64_t v47;
  __int128 v48[2];
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56[2];
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;

  v1 = v0;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - v3;
  swift_beginAccess();
  v6 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v37 = *(_QWORD *)(v0 + 32);
  swift_beginAccess();
  v8 = *(_QWORD *)(v0 + 48);
  v60 = *(_QWORD *)(v0 + 56);
  swift_beginAccess();
  v9 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44 = sub_1BAF4A050(v9);
    v10 = swift_bridgeObjectRelease();
  }
  else
  {
    v10 = swift_bridgeObjectRetain();
    v44 = 0;
  }
  v11 = *(_QWORD *)(v0 + 72);
  if ((~v11 & 0xF000000000000007) != 0)
  {
    v56[0] = *(_QWORD *)(v0 + 72);
    sub_1BB39D8E4(v48, v10);
    v11 = *(_QWORD *)&v48[0];
  }
  v59 = v11;
  v12 = *(_QWORD *)(v0 + 80);
  v39 = v5;
  v38 = v7;
  v45 = v8;
  if (v12)
    v43 = sub_1BAF49D98(v12);
  else
    v43 = 0;
  v58 = *(_BYTE *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_BYTE *)(v0 + 112);
  v56[0] = v13;
  v56[1] = v14;
  v57 = v15;
  v16 = *(_QWORD *)(v0 + 120);
  v55 = *(_QWORD *)(v1 + 120);
  v54 = *(_BYTE *)(v1 + 128);
  v17 = *(_QWORD *)(v1 + 136);
  v18 = *(_QWORD *)(v1 + 144);
  v42 = *(_OWORD *)(v1 + 152);
  v19 = *(_QWORD *)(v1 + 168);
  v41 = *(_OWORD *)(v1 + 176);
  v40 = *(_OWORD *)(v1 + 192);
  v20 = *(_QWORD *)(v1 + 208);
  v21 = *(unsigned __int8 *)(v1 + 216);
  if (v21 == 254)
  {
    sub_1BA6E6C54(v13, v14, v15);
    sub_1BA6E6C80(v16);
  }
  else
  {
    v46[0] = v19;
    sub_1BA6E6C54(v13, v14, v15);
    sub_1BA6E6C80(v16);
    sub_1BB525134();
    v19 = *(_QWORD *)&v48[0];
    v18 = v18;
  }
  *(_QWORD *)&v48[0] = v17;
  *((_QWORD *)&v48[0] + 1) = v18;
  v48[1] = v42;
  v49 = v19;
  v50 = v41;
  v51 = v40;
  v52 = v20;
  v53 = v21;
  v22 = *(_QWORD *)(v1 + 224);
  if ((~v22 & 0xF000000000000007) != 0)
  {
    v47 = *(_QWORD *)(v1 + 224);
    sub_1BB525134();
    v22 = v46[0];
  }
  v47 = v22;
  v23 = *(_BYTE *)(v1 + 232);
  v25 = *(_QWORD *)(v1 + 240);
  v24 = *(_QWORD *)(v1 + 248);
  if (!v25)
  {
    swift_bridgeObjectRetain();
    v26 = 0;
    if (!v24)
    {
LABEL_20:
      sub_1BA6E6D00(v25);
      goto LABEL_21;
    }
LABEL_18:
    v27 = swift_bridgeObjectRetain();
    v28 = sub_1BAF499B8(v27);
    swift_bridgeObjectRelease();
    sub_1BA6E6D00(v25);
    v24 = v28;
    goto LABEL_21;
  }
  if (v25 != 1)
  {
    sub_1BA6E6C90(*(_QWORD *)(v1 + 240));
    v29 = swift_bridgeObjectRetain();
    v26 = sub_1BAF499B8(v29);
    swift_bridgeObjectRelease();
    if (!v24)
      goto LABEL_20;
    goto LABEL_18;
  }
  v26 = 1;
LABEL_21:
  v30 = v6;
  v31 = v39;
  v32 = v38;
  v33 = v37;
  v46[0] = v26;
  v46[1] = v24;
  sub_1BA6E70E4(v1 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask, (uint64_t)v4);
  v34 = swift_allocObject();
  FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(v30, v31, v33, v32, v45, &v60, v44, &v59, v43, &v58, v56, &v55, &v54, v48, &v47, v23, v46, (uint64_t)v4);
  return v34;
}

uint64_t FormatImageNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatImageNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatImageNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatImageNodeStyle.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNodeStyle.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatImageNodeStyle.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 72);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

uint64_t FormatImageNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatImageNodeStyle.contentMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 88);
}

uint64_t FormatImageNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 112);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

unint64_t FormatImageNodeStyle.renderingMode.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *a1 = v2;
  return sub_1BA6E6C80(v2);
}

void FormatImageNodeStyle.resize.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 128);
}

uint64_t FormatImageNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 136);
  v3 = *(_QWORD *)(v1 + 144);
  v4 = *(_QWORD *)(v1 + 152);
  v5 = *(_QWORD *)(v1 + 160);
  v6 = *(_QWORD *)(v1 + 168);
  v7 = *(_QWORD *)(v1 + 176);
  v8 = *(_QWORD *)(v1 + 184);
  v9 = *(_QWORD *)(v1 + 192);
  v10 = *(_QWORD *)(v1 + 200);
  v11 = *(_QWORD *)(v1 + 208);
  v12 = *(_BYTE *)(v1 + 216);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatImageNodeStyle.tintColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 224);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatImageNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 232);
}

uint64_t FormatImageNodeStyle.request.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 240);
  v3 = *(_QWORD *)(v1 + 248);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA6E6C90(v2);
}

uint64_t FormatImageNodeStyle.imageMask.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA6E70E4(v1 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask, a1);
}

uint64_t FormatImageNodeStyle.__allocating_init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, uint64_t a9, char *a10, uint64_t *a11, uint64_t *a12, char *a13, __int128 *a14, uint64_t *a15, char a16, uint64_t *a17, uint64_t a18)
{
  uint64_t v23;

  v23 = swift_allocObject();
  FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  return v23;
}

uint64_t sub_1BB661D0C(_QWORD *a1, _QWORD *a2)
{
  return static FormatImageNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatImageNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.Selector.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

uint64_t FormatImageNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatImageNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_QWORD *)(v1 + 96);
  v8 = *(_QWORD *)(v1 + 104);
  v9 = *(_QWORD *)(v1 + 112);
  v10 = *(_QWORD *)(v1 + 120);
  v11 = *(_QWORD *)(v1 + 128);
  v12 = *(_BYTE *)(v1 + 136);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatImageNodeStyle.Selector.tintColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 144);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatImageNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

void FormatImageNodeStyle.Selector.resize.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 153);
}

void FormatImageNodeStyle.Selector.contentMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 154);
}

unint64_t FormatImageNodeStyle.Selector.renderingMode.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 160);
  *a1 = v2;
  return sub_1BA6E6C80(v2);
}

uint64_t FormatImageNodeStyle.Selector.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 168);
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.Selector.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.Selector.request.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 184);
  v3 = *(_QWORD *)(v1 + 192);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA6E6C90(v2);
}

uint64_t sub_1BB661E00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  ValueMetadata *v5;
  _UNKNOWN **v6;
  uint64_t v7;

  v1 = *v0;
  sub_1BA67D7C8(0, (unint64_t *)&qword_1ED3B9F90, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v3 = *(_QWORD *)(v1 + 72);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    v6 = &protocol witness table for FormatBackground;
    v5 = &type metadata for FormatBackground;
    v4 = *(_QWORD *)(v1 + 72);
  }
  else
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 48) = 0;
  }
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 64) = v6;
  sub_1BA6E6C68(v3);
  v7 = sub_1BA67DB8C(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  swift_arrayDestroy();
  return v7;
}

uint64_t sub_1BB661F00@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 200);
  return result;
}

BOOL _s8NewsFeed20FormatImageNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  _BOOL8 result;
  char v14;
  char v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 v115;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v73 = *(_QWORD *)(a1 + 56);
  v74 = *(_QWORD *)(a1 + 64);
  v75 = *(_QWORD *)(a1 + 72);
  v76 = *(_QWORD *)(a1 + 80);
  v77 = *(_QWORD *)(a1 + 88);
  v78 = *(_QWORD *)(a1 + 96);
  v79 = *(_QWORD *)(a1 + 104);
  v80 = *(_QWORD *)(a1 + 112);
  v72 = *(_QWORD *)(a1 + 120);
  v81 = *(_QWORD *)(a1 + 128);
  v82 = *(unsigned __int8 *)(a1 + 136);
  v60 = *(_QWORD *)(a1 + 144);
  v58 = *(unsigned __int8 *)(a1 + 152);
  v56 = *(unsigned __int8 *)(a1 + 153);
  v53 = *(unsigned __int8 *)(a1 + 154);
  v52 = *(_QWORD *)(a1 + 160);
  v50 = *(_QWORD *)(a1 + 168);
  v48 = *(_QWORD *)(a1 + 176);
  v46 = *(_QWORD *)(a1 + 184);
  v44 = *(_QWORD *)(a1 + 192);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  v63 = *(_QWORD *)(a2 + 56);
  v64 = *(_QWORD *)(a2 + 64);
  v65 = *(_QWORD *)(a2 + 72);
  v66 = *(_QWORD *)(a2 + 80);
  v67 = *(_QWORD *)(a2 + 88);
  v68 = *(_QWORD *)(a2 + 96);
  v69 = *(_QWORD *)(a2 + 104);
  v70 = *(_QWORD *)(a2 + 112);
  v61 = *(_QWORD *)(a2 + 128);
  v62 = *(_QWORD *)(a2 + 120);
  v71 = *(unsigned __int8 *)(a2 + 136);
  v59 = *(_QWORD *)(a2 + 144);
  v57 = *(unsigned __int8 *)(a2 + 152);
  v54 = *(unsigned __int8 *)(a2 + 154);
  v55 = *(unsigned __int8 *)(a2 + 153);
  v51 = *(_QWORD *)(a2 + 160);
  v49 = *(_QWORD *)(a2 + 168);
  v47 = *(_QWORD *)(a2 + 176);
  v45 = *(_QWORD *)(a2 + 184);
  v43 = *(_QWORD *)(a2 + 192);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v12 = sub_1BB874398();
    result = 0;
    if ((v12 & 1) == 0)
      return result;
  }
  if ((~v2 & 0xF000000000000007) == 0)
  {
    if ((~v8 & 0xF000000000000007) == 0)
      goto LABEL_13;
LABEL_9:
    sub_1BA6E6C68(v8);
    sub_1BA6E6CD8(v2);
    sub_1BA6E6CD8(v8);
    return 0;
  }
  v94 = v2;
  if ((~v8 & 0xF000000000000007) == 0)
  {
    swift_retain();
    goto LABEL_9;
  }
  v83 = v8;
  sub_1BA6E6C68(v2);
  swift_retain();
  _s8NewsFeed16FormatBackgroundO2eeoiySbAC_ACtFZ_0((uint64_t)&v94);
  v15 = v14;
  swift_release();
  sub_1BA6E6CD8(v2);
  if ((v15 & 1) == 0)
    return 0;
LABEL_13:
  if (v4)
  {
    if (!v7)
      return 0;
    swift_bridgeObjectRetain();
    v16 = swift_bridgeObjectRetain();
    v17 = sub_1BA882894(v16, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v17)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if (v6 > 0xFD)
  {
    if (v11 > 0xFD)
      goto LABEL_25;
LABEL_23:
    sub_1BA6E6C54(v10, v9, v11);
    sub_1BA6E6CC4(v3, v5, v6);
    sub_1BA6E6CC4(v10, v9, v11);
    return 0;
  }
  v94 = v3;
  v95 = v5;
  LOBYTE(v96) = v6;
  if (v11 > 0xFD)
  {
    sub_1BA6F2B04(v3, v5, v6);
    sub_1BA6F2B04(v3, v5, v6);
    sub_1BA6F2B88(v3, v5, v6);
    goto LABEL_23;
  }
  v83 = v10;
  v84 = v9;
  LOBYTE(v85) = v11;
  sub_1BA6E6C54(v3, v5, v6);
  sub_1BA6F2B04(v3, v5, v6);
  v18 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v94, (uint64_t)&v83);
  sub_1BA6F2B88(v94, v95, v96);
  sub_1BA6E6CC4(v3, v5, v6);
  if ((v18 & 1) == 0)
    return 0;
LABEL_25:
  v19 = v82;
  if (v82 == 254)
  {
    v20 = v71;
    v22 = v79;
    v21 = v80;
    v24 = v77;
    v23 = v78;
    v26 = v75;
    v25 = v76;
    v28 = v73;
    v27 = v74;
    v29 = v72;
    v30 = v81;
    if (v71 == 254)
      goto LABEL_32;
LABEL_30:
    v94 = v28;
    v95 = v27;
    v96 = v26;
    v97 = v25;
    v98 = v24;
    v99 = v23;
    v100 = v22;
    v101 = v21;
    v102 = v29;
    v103 = v30;
    v104 = v19;
    v105 = v63;
    v106 = v64;
    v107 = v65;
    v108 = v66;
    v109 = v67;
    v110 = v68;
    v111 = v69;
    v112 = v70;
    v113 = v62;
    v114 = v61;
    v115 = v20;
    sub_1BA6E8A48(v63, v64, v65, v66, v67, v68, v69, v70, v62, v61, v20);
    sub_1BA9F10E8((uint64_t)&v94);
    return 0;
  }
  v28 = v73;
  v27 = v74;
  v94 = v73;
  v95 = v74;
  v26 = v75;
  v25 = v76;
  v96 = v75;
  v97 = v76;
  v24 = v77;
  v23 = v78;
  v98 = v77;
  v99 = v78;
  v22 = v79;
  v21 = v80;
  v100 = v79;
  v101 = v80;
  v29 = v72;
  v102 = v72;
  v103 = v81;
  v104 = v82;
  v20 = v71;
  if (v71 == 254)
  {
    swift_retain();
    v19 = v82;
    v30 = v81;
    goto LABEL_30;
  }
  v83 = v63;
  LODWORD(v84) = v64;
  v85 = v65;
  v86 = v66;
  v87 = v67;
  v88 = v68;
  v89 = v69;
  v90 = v70;
  v91 = v62;
  v92 = v61;
  v93 = v71;
  sub_1BA6E8A48(v73, v74, v75, v76, v77, v78, v79, v80, v72, v81, v82);
  swift_retain();
  v31 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v94, (uint64_t)&v83);
  swift_release();
  sub_1BA6E8A78(v73, v74, v75, v76, v77, v78, v79, v80, v72, v81, v82);
  if ((v31 & 1) == 0)
    return 0;
LABEL_32:
  if ((~v60 & 0xF000000000000007) != 0)
  {
    v94 = v60;
    v32 = v59;
    if ((~v59 & 0xF000000000000007) != 0)
    {
      v83 = v59;
      swift_retain_n();
      static FormatColor.== infix(_:_:)((uint64_t)&v94);
      v34 = v33;
      swift_release();
      sub_1BA5E800C(v60);
      if ((v34 & 1) == 0)
        return 0;
      goto LABEL_39;
    }
    swift_retain();
LABEL_37:
    sub_1BA5E7FF4(v32);
    sub_1BA5E800C(v60);
    sub_1BA5E800C(v32);
    return 0;
  }
  v32 = v59;
  if ((~v59 & 0xF000000000000007) != 0)
    goto LABEL_37;
LABEL_39:
  if (v58 == 2)
  {
    if (v57 != 2)
      return 0;
LABEL_44:
    if (v56 == 4)
    {
      if (v55 != 4)
        return 0;
    }
    else
    {
      if (v55 == 4)
        return 0;
      sub_1BB7FB4A8(v56);
      if ((v35 & 1) == 0)
        return 0;
    }
    if (v53 == 9)
    {
      if (v54 != 9)
        return 0;
    }
    else
    {
      if (v54 == 9)
        return 0;
      sub_1BB7FB5E4(v53);
      if ((v36 & 1) == 0)
        return 0;
    }
    if (v52 == 3)
    {
      v37 = v51;
      if (v51 == 3)
      {
LABEL_61:
        if (v50)
        {
          if (!v49)
            return 0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v39 = sub_1BA881EAC(v50, v49);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v39 & 1) == 0)
            return 0;
        }
        else if (v49)
        {
          return 0;
        }
        if (v48)
        {
          if (!v47)
            return 0;
          swift_bridgeObjectRetain();
          v40 = swift_bridgeObjectRetain();
          v41 = sub_1BA888FD8(v40, v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v41 & 1) == 0)
            return 0;
        }
        else if (v47)
        {
          return 0;
        }
        if (v46 == 1)
        {
          if (v45 == 1)
            return 1;
        }
        else
        {
          v94 = v46;
          v95 = v44;
          if (v45 != 1)
          {
            v83 = v45;
            v84 = v43;
            sub_1BA6E6C90(v46);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v42 = _s8NewsFeed22FormatImageNodeRequestV2eeoiySbAC_ACtFZ_0((uint64_t *)&v94, &v83);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA6E6D00(v46);
            return (v42 & 1) != 0;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        sub_1BA6E6C90(v45);
        sub_1BA6E6D00(v46);
        sub_1BA6E6D00(v45);
        return 0;
      }
    }
    else
    {
      v94 = v52;
      if (v51 != 3)
      {
        v83 = v51;
        sub_1BA6E6E84(v52);
        sub_1BA6E6E84(v52);
        v38 = static FormatImageRenderingMode.== infix(_:_:)(&v94, (unint64_t *)&v83);
        sub_1BA6E7468(v94);
        sub_1BA6E6CF0(v52);
        if (!v38)
          return 0;
        goto LABEL_61;
      }
      sub_1BA6E6E84(v52);
      sub_1BA6E6E84(v52);
      sub_1BA6E7468(v52);
      v37 = 3;
    }
    sub_1BA6E6C80(v37);
    sub_1BA6E6CF0(v52);
    sub_1BA6E6CF0(v37);
    return 0;
  }
  result = 0;
  if (v57 != 2 && ((((v58 & 1) == 0) ^ v57) & 1) != 0)
    goto LABEL_44;
  return result;
}

uint64_t sub_1BB662750(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB662834(&qword_1EF2C9DA8, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB662784(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BB662834(&qword_1ED3C8E98, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
  result = sub_1BB662834(&qword_1ED3A6808, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BB6627D0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB662834(&qword_1ED3C8E98, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
  a1[2] = sub_1BB662834(&qword_1ED3A6808, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
  result = sub_1BB662834(&qword_1EF2C9DB0, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB662834(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatImageNodeStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB662874(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB662898();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB662898()
{
  unint64_t result;

  result = qword_1EF2C9DB8;
  if (!qword_1EF2C9DB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeStyle.Selector, &type metadata for FormatImageNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2C9DB8);
  }
  return result;
}

unint64_t sub_1BB6628DC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82D260();
  a1[2] = sub_1BA82D2A4();
  result = sub_1BB662910();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB662910()
{
  unint64_t result;

  result = qword_1EF2C9DC0;
  if (!qword_1EF2C9DC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeStyle.Selector, &type metadata for FormatImageNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2C9DC0);
  }
  return result;
}

uint64_t sub_1BB662954@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6629A0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6629EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB662A38()
{
  return type metadata accessor for FormatImageNodeStyle();
}

uint64_t method lookup function for FormatImageNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatImageNodeStyle.__allocating_init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t assignWithCopy for FormatImageNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unsigned int v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _OWORD *v19;
  _OWORD *v20;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = v5 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1BAF913AC(a1 + 16);
    v5 = *(_QWORD *)(a2 + 16);
LABEL_6:
    *v4 = v5;
    goto LABEL_8;
  }
  *v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a1 + 32);
  v8 = (_OWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) <= 0xFDu)
  {
    if (v9 <= 0xFD)
    {
      v14 = *(_QWORD *)(a2 + 32);
      v15 = *(_QWORD *)(a2 + 40);
      sub_1BA6F2B04(v14, v15, *(_BYTE *)(a2 + 48));
      v16 = *(_QWORD *)(a1 + 32);
      v17 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v15;
      v18 = *(_BYTE *)(a1 + 48);
      *(_BYTE *)(a1 + 48) = v9;
      sub_1BA6F2B88(v16, v17, v18);
    }
    else
    {
      sub_1BA9F0244(a1 + 32);
      v11 = *(_BYTE *)(a2 + 48);
      *v7 = *v8;
      *(_BYTE *)(a1 + 48) = v11;
    }
  }
  else if (v9 <= 0xFD)
  {
    v12 = *(_QWORD *)(a2 + 32);
    v13 = *(_QWORD *)(a2 + 40);
    sub_1BA6F2B04(v12, v13, *(_BYTE *)(a2 + 48));
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v13;
    *(_BYTE *)(a1 + 48) = v9;
  }
  else
  {
    v10 = *v8;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *v7 = v10;
  }
  v19 = (_OWORD *)(a1 + 56);
  v20 = (_OWORD *)(a2 + 56);
  v21 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 254)
  {
    if (v21 == 254)
    {
      v22 = *(_OWORD *)(a2 + 72);
      *v19 = *v20;
      *(_OWORD *)(a1 + 72) = v22;
      v23 = *(_OWORD *)(a2 + 88);
      v24 = *(_OWORD *)(a2 + 104);
      v25 = *(_OWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_OWORD *)(a1 + 104) = v24;
      *(_OWORD *)(a1 + 120) = v25;
      *(_OWORD *)(a1 + 88) = v23;
    }
    else
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v30 = *(_OWORD *)(a2 + 96);
      v31 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *(_OWORD *)(a1 + 96) = v30;
      *(_OWORD *)(a1 + 112) = v31;
      swift_retain();
    }
  }
  else if (v21 == 254)
  {
    sub_1BA9F0278(a1 + 56);
    v26 = *(_OWORD *)(a2 + 72);
    *v19 = *v20;
    *(_OWORD *)(a1 + 72) = v26;
    v28 = *(_OWORD *)(a2 + 104);
    v27 = *(_OWORD *)(a2 + 120);
    v29 = *(_OWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v28;
    *(_OWORD *)(a1 + 120) = v27;
    *(_OWORD *)(a1 + 88) = v29;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_retain();
    swift_release();
    v32 = *(_OWORD *)(a2 + 96);
    v33 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    *(_OWORD *)(a1 + 96) = v32;
    *(_OWORD *)(a1 + 112) = v33;
  }
  v34 = (_QWORD *)(a1 + 144);
  v35 = *(_QWORD *)(a2 + 144);
  v36 = v35 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 144) & 0xF000000000000007) == 0)
  {
    if (v36 != 0xF000000000000007)
    {
      *v34 = v35;
      swift_retain();
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v36 == 0xF000000000000007)
  {
    sub_1BAA5FA24(a1 + 144);
    v35 = *(_QWORD *)(a2 + 144);
LABEL_27:
    *v34 = v35;
    goto LABEL_29;
  }
  *v34 = v35;
  swift_retain();
  swift_release();
LABEL_29:
  v37 = (_QWORD *)(a1 + 160);
  v38 = *(_QWORD *)(a1 + 160);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  v39 = *(_QWORD *)(a2 + 160);
  if (v38 == 3)
  {
    if (v39 < 3)
    {
LABEL_31:
      *v37 = v39;
      goto LABEL_44;
    }
    if (v39 == 3)
    {
      v40 = 3;
LABEL_43:
      *v37 = v40;
      goto LABEL_44;
    }
LABEL_39:
    *v37 = v39;
    swift_retain();
    goto LABEL_44;
  }
  if (v39 == 3)
  {
    sub_1BB662EC4((unint64_t *)(a1 + 160));
LABEL_42:
    v40 = *(_QWORD *)(a2 + 160);
    goto LABEL_43;
  }
  if (v38 < 3)
  {
    if (v39 < 3)
      goto LABEL_31;
    goto LABEL_39;
  }
  if (v39 < 3)
  {
    swift_release();
    goto LABEL_42;
  }
  *v37 = v39;
  swift_retain();
  swift_release();
LABEL_44:
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = *(_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 184) != 1)
  {
    if (v41 != 1)
    {
      *(_QWORD *)(a1 + 184) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BB662EF8(a1 + 184);
    goto LABEL_49;
  }
  if (v41 == 1)
  {
LABEL_49:
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    return a1;
  }
  *(_QWORD *)(a1 + 184) = v41;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t *sub_1BB662EC4(unint64_t *a1)
{
  destroy for FormatImageRenderingMode(a1);
  return a1;
}

uint64_t sub_1BB662EF8(uint64_t a1)
{
  destroy for FormatSizeEquation();
  return a1;
}

uint64_t assignWithTake for FormatImageNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1BAF913AC(a1 + 16);
LABEL_4:
    *v5 = v6;
    goto LABEL_6;
  }
  *v5 = v6;
  swift_release();
LABEL_6:
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a2 + 32);
  v8 = *(unsigned __int8 *)(a1 + 48);
  if (v8 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *v7;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    goto LABEL_11;
  }
  v9 = *(unsigned __int8 *)(a2 + 48);
  if (v9 > 0xFD)
  {
    sub_1BA9F0244(a1 + 32);
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v7;
  *(_BYTE *)(a1 + 48) = v9;
  sub_1BA6F2B88(v10, v11, v8);
LABEL_11:
  if (*(unsigned __int8 *)(a1 + 136) == 254)
  {
LABEL_14:
    v12 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v12;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    v13 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v13;
    goto LABEL_16;
  }
  if (*(unsigned __int8 *)(a2 + 136) == 254)
  {
    sub_1BA9F0278(a1 + 56);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
LABEL_16:
  v15 = (_QWORD *)(a1 + 144);
  v16 = *(_QWORD *)(a2 + 144);
  if ((~*(_QWORD *)(a1 + 144) & 0xF000000000000007) == 0)
  {
LABEL_19:
    *v15 = v16;
    goto LABEL_21;
  }
  if ((~v16 & 0xF000000000000007) == 0)
  {
    sub_1BAA5FA24(a1 + 144);
    goto LABEL_19;
  }
  *v15 = v16;
  swift_release();
LABEL_21:
  v18 = (unint64_t *)(a1 + 160);
  v17 = *(_QWORD *)(a1 + 160);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  v19 = *(_QWORD *)(a2 + 160);
  if (v17 == 3)
  {
    if (v19 != 3)
    {
      *v18 = v19;
      goto LABEL_32;
    }
    goto LABEL_26;
  }
  if (v19 == 3)
  {
    sub_1BB662EC4((unint64_t *)(a1 + 160));
LABEL_26:
    *v18 = 3;
    goto LABEL_32;
  }
  if (v17 >= 3)
  {
    if (v19 >= 3)
    {
      *v18 = v19;
      swift_release();
    }
    else
    {
      swift_release();
      *v18 = v19;
    }
  }
  else
  {
    *v18 = v19;
  }
LABEL_32:
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 184) != 1)
  {
    if (v20 != 1)
    {
      *(_QWORD *)(a1 + 184) = v20;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BB662EF8(a1 + 184);
  }
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  return a1;
}

ValueMetadata *type metadata accessor for FormatImageNodeStyle.Selector()
{
  return &type metadata for FormatImageNodeStyle.Selector;
}

_QWORD *sub_1BB6631C8(double *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t (**v13)();
  uint64_t v14;
  char *v15;
  void (*v16)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  unsigned __int8 v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t inited;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 v66;
  _OWORD v67[2];
  uint64_t v68;
  _OWORD v69[2];
  uint64_t v70;
  _OWORD v71[2];
  uint64_t v72;

  sub_1BA67D7C8(0, (unint64_t *)&qword_1EF2A9CF0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB898AA0;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v56 = *(_QWORD *)(v4 + 72);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  v7 = (_QWORD *)(v6 + v5);
  if (a2)
  {
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    v59 = sub_1BB661570();
    v60 = 0u;
    v61 = 0u;
    v62 = 0;
    v63 = xmmword_1BB939690;
    v10 = swift_allocObject();
    sub_1BA9F1094((uint64_t)&v59, v10 + 16);
    v11 = sub_1BA9F10D0;
  }
  else
  {
    v10 = 0;
    v8 = 0;
    v9 = 0xE000000000000000;
    v11 = sub_1BB739F50;
  }
  v12 = type metadata accessor for FormatInspectionItem(0);
  v13 = (uint64_t (**)())((char *)v7 + *(int *)(v12 + 24));
  *v13 = v11;
  v13[1] = (uint64_t (*)())v10;
  v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *(_QWORD *)(v6 + v5) = v8;
  v7[2] = 0;
  v7[3] = 0;
  v7[1] = v9;
  v15 = (char *)v7 + *(int *)(v12 + 28);
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = -1;
  v16 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v16(v7, 0, 1, v12);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v6, v67);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v17 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v17;
  *(_QWORD *)(v17 + 48) = v68;
  v18 = v67[1];
  *(_OWORD *)(v17 + 16) = v67[0];
  *(_OWORD *)(v17 + 32) = v18;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB8827B0;
  v20 = v19 + v5;
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6567616D49, 0xE500000000000000, (_QWORD *)(v19 + v5));
  v16((_QWORD *)(v19 + v5), 0, 1, v12);
  if (a2)
  {
    v21 = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, v21, (_QWORD *)(v20 + v56));
    v16((_QWORD *)(v20 + v56), 0, 1, v12);
    v22 = *(_QWORD *)(a2 + 72);
    sub_1BA6E6C68(v22);
  }
  else
  {
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, 0, (_QWORD *)(v20 + v56));
    v16((_QWORD *)(v20 + v56), 0, 1, v12);
    v22 = 0xF000000000000007;
  }
  v52 = 2 * v56;
  sub_1BAAFC1B0(0x756F72676B636142, 0xEA0000000000646ELL, v22, (_QWORD *)(v20 + 2 * v56));
  v16((_QWORD *)(v20 + 2 * v56), 0, 1, v12);
  if (a2)
  {
    v23 = *(_QWORD *)(a2 + 224);
    sub_1BA5E7FF4(v23);
  }
  else
  {
    v23 = 0xF000000000000007;
  }
  sub_1BAAF7724(0x6C6F4320746E6954, 0xEA0000000000726FLL, v23, (_QWORD *)(v20 + 3 * v56));
  v16((_QWORD *)(v20 + 3 * v56), 0, 1, v12);
  if (a2)
    v24 = *(_BYTE *)(a2 + 232);
  else
    v24 = 2;
  sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, v24, (_QWORD *)(v20 + 4 * v56));
  v16((_QWORD *)(v20 + 4 * v56), 0, 1, v12);
  sub_1BAF89090(2003134806, 0xE400000000000000, 0, 0, v19, v69);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v25 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v25;
  *(_QWORD *)(v25 + 48) = v70;
  v26 = v69[1];
  *(_OWORD *)(v25 + 16) = v69[0];
  *(_OWORD *)(v25 + 32) = v26;
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BB87FC80;
  v28 = (_QWORD *)(v27 + v5);
  if (a2)
  {
    sub_1BAAFEB34(0x657A69736552, 0xE600000000000000, *(_BYTE *)(a2 + 128), v28);
    v16(v28, 0, 1, v12);
    v29 = *(_BYTE *)(a2 + 88);
  }
  else
  {
    sub_1BAAFEB34(0x657A69736552, 0xE600000000000000, 4u, v28);
    v16(v28, 0, 1, v12);
    v29 = 9;
  }
  sub_1BAAFEDB4(0x20746E65746E6F43, 0xEC00000065646F4DLL, v29, (_QWORD *)((char *)v28 + v56));
  v16((_QWORD *)((char *)v28 + v56), 0, 1, v12);
  if (a2)
  {
    v30 = *(_QWORD *)(a2 + 120);
    sub_1BA6E6C80(v30);
  }
  else
  {
    v30 = 3;
  }
  sub_1BAAFF0A8(0x6E697265646E6552, 0xEE0065646F4D2067, v30, (_QWORD *)((char *)v28 + v52));
  v16((_QWORD *)((char *)v28 + v52), 0, 1, v12);
  sub_1BAF89090(0x6567616D49, 0xE500000000000000, 0, 0, v27, v71);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 144) = &off_1E72D2F60;
  v31 = swift_allocObject();
  *(_QWORD *)(inited + 112) = v31;
  *(_QWORD *)(v31 + 48) = v72;
  v32 = v71[1];
  *(_OWORD *)(v31 + 16) = v71[0];
  *(_OWORD *)(v31 + 32) = v32;
  if (a2)
  {
    v33 = *(_QWORD *)(a2 + 96);
    v34 = *(_QWORD *)(a2 + 104);
    v35 = *(_BYTE *)(a2 + 112);
    sub_1BA6E6C54(v33, v34, v35);
  }
  else
  {
    v33 = 0;
    v34 = 0;
    v35 = -2;
  }
  v59 = v33;
  *(_QWORD *)&v60 = v34;
  BYTE8(v60) = v35;
  v36 = sub_1BB4D88A0(a1, (uint64_t)&v59);
  sub_1BA6E6CC4(v33, v34, v35);
  *(_QWORD *)(inited + 176) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 184) = &off_1E7335C38;
  *(_QWORD *)(inited + 152) = v36;
  v51 = a2;
  if (a2)
  {
    v54 = *(_BYTE *)(a2 + 216);
    v55 = *(_QWORD *)(a2 + 208);
    v57 = *(_QWORD *)(a2 + 200);
    v37 = *(_QWORD *)(a2 + 136);
    v38 = *(_QWORD *)(a2 + 144);
    v39 = *(_QWORD *)(a2 + 152);
    v40 = *(_QWORD *)(a2 + 160);
    v41 = *(_QWORD *)(a2 + 168);
    v42 = *(_QWORD *)(a2 + 176);
    v43 = *(_QWORD *)(a2 + 184);
    v44 = *(_QWORD *)(a2 + 192);
    sub_1BA6E8A48(v37, v38, v39, v40, v41, v42, v43, v44, v57, v55, v54);
  }
  else
  {
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = 0;
    v44 = 0;
    v55 = 0;
    v57 = 0;
    v54 = -2;
  }
  v59 = v37;
  *(_QWORD *)&v60 = v38;
  *((_QWORD *)&v60 + 1) = v39;
  *(_QWORD *)&v61 = v40;
  *((_QWORD *)&v61 + 1) = v41;
  v62 = v42;
  *(_QWORD *)&v63 = v43;
  *((_QWORD *)&v63 + 1) = v44;
  v64 = v57;
  v65 = v55;
  v66 = v54;
  v45 = sub_1BB05E83C((uint64_t)&v59);
  sub_1BA6E8A78(v37, v38, v39, v40, v41, v42, v43, v44, v57, v55, v54);
  *(_QWORD *)(inited + 216) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 224) = &off_1E7335C38;
  *(_QWORD *)(inited + 192) = v45;
  if (v51)
  {
    v47 = *(_QWORD *)(v51 + 240);
    v46 = *(_QWORD *)(v51 + 248);
    sub_1BA6E6C90(v47);
  }
  else
  {
    v46 = 0;
    v47 = 1;
  }
  v59 = v47;
  *(_QWORD *)&v60 = v46;
  v48 = sub_1BB49A024((unint64_t *)&v59);
  sub_1BA6E6D00(v47);
  *(_QWORD *)(inited + 256) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 264) = &off_1E7335C38;
  *(_QWORD *)(inited + 232) = v48;
  v49 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  return v49;
}

uint64_t sub_1BB663A7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB663AB0()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

BOOL static FormatAudioTrackBinding.Command.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatAudioTrackBinding.Command.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatAudioTrackBinding.Command.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB663B68()
{
  unint64_t result;

  result = qword_1EF2C9DC8;
  if (!qword_1EF2C9DC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrackBinding.Command, &type metadata for FormatAudioTrackBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2C9DC8);
  }
  return result;
}

unint64_t sub_1BB663BAC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB663BD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB663BD0()
{
  unint64_t result;

  result = qword_1EF2C9DD0;
  if (!qword_1EF2C9DD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrackBinding.Command, &type metadata for FormatAudioTrackBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2C9DD0);
  }
  return result;
}

unint64_t sub_1BB663C14(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8A060();
  a1[2] = sub_1BAEF4810();
  result = sub_1BB663B68();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB663C48@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatAudioTrackBinding.Command.init(from:)(a1, a2);
}

uint64_t sub_1BB663C5C(_QWORD *a1)
{
  return FormatAudioTrackBinding.Command.encode(to:)(a1);
}

uint64_t _s7CommandOwst_2(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB663CBC + 4 * byte_1BB939AC1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB663CF0 + 4 * asc_1BB939ABC[v4]))();
}

uint64_t sub_1BB663CF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB663CF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB663D00);
  return result;
}

uint64_t sub_1BB663D0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB663D14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB663D18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB663D20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatAudioTrackBinding.Command()
{
  return &type metadata for FormatAudioTrackBinding.Command;
}

ValueMetadata *type metadata accessor for A12_V3()
{
  return &type metadata for A12_V3;
}

uint64_t sub_1BB663D4C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C9F10, (uint64_t (*)(void))sub_1BB666E10, (uint64_t)&type metadata for A12_V3.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB666E10();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB663F00()
{
  sub_1BB666E10();
  return sub_1BB874710();
}

uint64_t sub_1BB663F28()
{
  sub_1BB666E10();
  return sub_1BB87471C();
}

double sub_1BB663F50@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB666BFC(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB663F94(_QWORD *a1)
{
  return sub_1BB663D4C(a1);
}

uint64_t sub_1BB663FA8()
{
  sub_1BB6668F8();
  return sub_1BB86D96C();
}

uint64_t sub_1BB664010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  unsigned __int8 v74;
  ValueMetadata *v75;
  unint64_t v76;
  uint64_t v77;

  v62 = a2;
  v55 = a3;
  v56 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v61 = type metadata accessor for GroupLayoutBindingContext();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v66 = a1;
  sub_1BA4C2DD8(a1, v59, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v58 = sub_1BB86C8C8();
  v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v75 = &type metadata for A12_V3;
  v20 = sub_1BA8EE518();
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v67 = sub_1BB874734();
  v68 = v22;
  v71 = 95;
  v72 = 0xE100000000000000;
  v69 = 45;
  v70 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v57;
  *v26 = v58;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v73, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v59, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v28, 0, 1, v61);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v29, 0, 1, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  sub_1BA7C2538(v16, v17);
  v75 = &type metadata for A12_V3;
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  sub_1BA4C2DD8(v62, v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v65;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E7269C78, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v31;
    v42 = (_QWORD *)(v41 + 16);
    swift_beginAccess();
    v43 = *(_QWORD **)(v41 + 16);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v41 + 16) = v43;
    if ((v44 & 1) == 0)
    {
      v43 = sub_1BA7892A0(0, v43[2] + 1, 1, v43);
      *v42 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
    {
      v43 = sub_1BA7892A0((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
      *v42 = v43;
    }
    v43[2] = v46 + 1;
    v47 = &v43[2 * v46];
    v47[4] = sub_1BACB8D7C;
    v47[5] = 0;
    swift_endAccess();
    v49 = sub_1BA7E1F18((uint64_t)&unk_1E7269CA0, 0, 0, v41, 0, 0, 0, 0);
    swift_release();
    v67 = v40;
    sub_1BA7DD6A0(v49);
    v50 = v67;
    v51 = type metadata accessor for A12_V3.Bound();
    v52 = v55;
    v55[3] = v51;
    v52[4] = sub_1BA4A2870(&qword_1EF2C9DE8, (uint64_t (*)(uint64_t))type metadata accessor for A12_V3.Bound, (uint64_t)&unk_1BB939CA8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v73, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v77, (uint64_t)boxed_opaque_existential_0 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v51 + 28)) = v50;
  }
  return result;
}

double sub_1BB664644@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  double result;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[6];
  char v40[105];
  __int128 v41[9];
  __int128 v42[2];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  v36 = a1;
  v35 = sub_1BB86DA38();
  *(_QWORD *)&v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33[0] = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v5 = type metadata accessor for A12_V3.Bound();
  v6 = v1 + *(int *)(v5 + 24);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = *(int *)(v7 + 40);
  v9 = v6;
  v33[1] = v6;
  v10 = *(_QWORD *)(v6 + v8);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BA4C010C(v11 + 16, (uint64_t)&v43);
  sub_1BA4C010C(v11 + 56, (uint64_t)v42);
  v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v43, v14 + 16);
  sub_1BA4CECCC(v42, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v41[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v41, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v10 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v42);
  sub_1BA4C010C(v15 + 56, (uint64_t)v41);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v42, v17 + 16);
  sub_1BA4CECCC(v41, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v40[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v40, (uint64_t *)&v43);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v18 = sub_1BA6B5B08((uint64_t)&v43, *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v5 + 28)) + 16) - 1);
  *(_QWORD *)&v43 = inited;
  sub_1BA6B5BE8(v18);
  v19 = v43;
  v39[2] = v2;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BACB8FF0(v20, v19, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = *MEMORY[0x1E0DB5D88];
  v23 = sub_1BB86D678();
  v24 = v33[0];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v33[0], v22, v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 104))(v24, *MEMORY[0x1E0DB6200], v35);
  v37 = v21;
  v38 = v2;
  sub_1BB6669A4(0, &qword_1EF2C9E90, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v35 = sub_1BB86DB34();
  v25 = sub_1BB86DB40();
  v34 = v43;
  v26 = v44;
  v27 = v45;
  *(_QWORD *)&v43 = v21;
  *(_QWORD *)&v42[0] = v46;
  MEMORY[0x1E0C80A78](v25);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v28 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v43 = v28;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v29 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v36;
  *v36 = 0;
  result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((_QWORD *)v30 + 3) = v26;
  *((_QWORD *)v30 + 4) = v27;
  v32 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v30 + 5) = v29;
  *((_QWORD *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1BB664B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2C9EA8, (uint64_t (*)(void))sub_1BB6668B4, (uint64_t)&type metadata for A12_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 12;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BB6669A4(0, &qword_1EF2C9EB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB66695C(&qword_1EF2C9EB8, &qword_1EF2C9EB0, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BB664C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t (*v12)(uint64_t, _QWORD *);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2C9EA8, (uint64_t (*)(void))sub_1BB6668B4, (uint64_t)&type metadata for A12_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = &v14[-v10];
  v17 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v8 + 104))(&v14[-v10], *MEMORY[0x1E0DB63C0], v7, v9);
  v15 = a2;
  v16 = a3;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB6669A4(0, &qword_1EF2C9EC0, MEMORY[0x1E0DB5A10]);
  sub_1BB66695C(&qword_1EF2C9EC8, &qword_1EF2C9EC0, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D498();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1BB664DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, _QWORD *);
  void (*v23)(uint64_t *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  void (*v27)(uint64_t *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a1;
  v29 = a3;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C9EA8, (uint64_t (*)(void))sub_1BB6668B4, (uint64_t)&type metadata for A12_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v26 - v7);
  v33 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v27 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v27(v8, v10, v5);
  sub_1BB666A20();
  sub_1BA4CDF6C(0, &qword_1EF2C9ED8, (uint64_t (*)(void))sub_1BB6668B4, (uint64_t)&type metadata for A12_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  v16 = v15 + v14;
  sub_1BA7FDE2C();
  v18 = (_QWORD *)(v16 + *(int *)(v17 + 48));
  v19 = *MEMORY[0x1E0DB6000];
  v20 = sub_1BB86D8B8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v16, v19, v20);
  *v18 = 0x6C6F437468676972;
  v18[1] = 0xEB000000006E6D75;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E0DB5BF8], v12);
  v21 = v26;
  v32 = v26;
  v22 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB6669A4(0, &qword_1EF2C9EC0, MEMORY[0x1E0DB5A10]);
  sub_1BB66695C(&qword_1EF2C9EC8, &qword_1EF2C9EC0, v22, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  v23 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v23(v8, v5);
  v33 = v28;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 6;
  *v8 = v24;
  v27(v8, v10, v5);
  v30 = v21;
  v31 = v29;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v23)(v8, v5);
}

uint64_t sub_1BB6650C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void **v31;
  void *v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  double v37;
  unint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a2;
  v3 = sub_1BB86DA38();
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x1E0C80A78](v3);
  v49 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86D93C();
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for HeadlineViewLayout.Context(0);
  v43 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v44 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C9EA8, (uint64_t (*)(void))sub_1BB6668B4, (uint64_t)&type metadata for A12_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)((char *)&v40 - v15);
  v53 = a1;
  v17 = sub_1BB86D438();
  v18 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x1E0DB5A38], v17);
  *v16 = v18;
  v20 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104);
  v20(v16, *MEMORY[0x1E0DB6318], v13);
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB6669A4(0, &qword_1EF2C9EC0, MEMORY[0x1E0DB5A10]);
  v23 = v22;
  v24 = sub_1BB66695C(&qword_1EF2C9EC8, &qword_1EF2C9EC0, v21, MEMORY[0x1E0DB5A18]);
  v45 = v23;
  v25 = v13;
  sub_1BB86D4EC();
  v26 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  v26(v16, v25);
  v53 = a1;
  swift_getKeyPath();
  v20(v16, *MEMORY[0x1E0DB63C0], v25);
  if (!*(_QWORD *)(v52 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v41 = (uint64_t (*)(uint64_t *, uint64_t))v26;
  v42 = v24;
  a1 = v44;
  sub_1BA4C2DD8(v52 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80)), v44, type metadata accessor for HeadlineViewLayout.Context);
  v27 = (char *)v9 + v7[5];
  v28 = *MEMORY[0x1E0DB61C8];
  v29 = sub_1BB86DA20();
  v30 = *(_QWORD *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v27, v28, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  v31 = (void **)MEMORY[0x1E0DC4918];
  *v9 = 0;
  *(_QWORD *)((char *)v9 + v7[6]) = 0;
  v32 = *v31;
  *(_QWORD *)((char *)v9 + v7[7]) = v32;
  v33 = qword_1ED3BC390;
  v34 = v32;
  if (v33 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  v35 = v48;
  sub_1BB86D2B8();
  v36 = swift_release();
  v37 = MEMORY[0x1E0C80A78](v36);
  *(&v40 - 4) = a1;
  *(&v40 - 3) = (uint64_t)v9;
  v39 = (unint64_t)v35;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v46 + 104))(v49, *MEMORY[0x1E0DB6208], v47, v37);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v51);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80(a1, type metadata accessor for HeadlineViewLayout.Context);
  v39 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return v41(v16, v25);
}

uint64_t sub_1BB66554C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *);
  uint64_t (*v15)(uint64_t, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  double *v43;
  uint64_t v44;
  double *v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  void *v53;
  double v54;
  double v55;
  double v56;
  double v57;
  id v58;
  uint64_t v59;
  char *v60;
  uint64_t KeyPath;
  void (*v62)(uint64_t *);
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t);
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v72 = a3;
  v73 = a2;
  v59 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v59);
  v60 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C9EA8, (uint64_t (*)(void))sub_1BB6668B4, (uint64_t)&type metadata for A12_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v59 - v8);
  v75 = a1;
  v10 = a1;
  KeyPath = a1;
  v11 = sub_1BB86D438();
  v12 = swift_allocBox();
  LODWORD(v69) = *MEMORY[0x1E0DB5A38];
  v68 = *(void (**)(uint64_t))(*(_QWORD *)(v11 - 8) + 104);
  v68(v13);
  *v9 = v12;
  LODWORD(v67) = *MEMORY[0x1E0DB6318];
  v14 = *(void (**)(uint64_t *))(v7 + 104);
  v14(v9);
  v62 = v14;
  v15 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB6669A4(0, &qword_1EF2C9EC0, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  v18 = sub_1BB66695C(&qword_1EF2C9EC8, &qword_1EF2C9EC0, v15, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v19 = *(void (**)(uint64_t *, uint64_t))(v7 + 8);
  v19(v9, v6);
  v75 = v10;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v14)(v9, *MEMORY[0x1E0DB6410], v6);
  sub_1BB666A20();
  v66 = v20;
  sub_1BA4CDF6C(0, &qword_1EF2C9ED8, (uint64_t (*)(void))sub_1BB6668B4, (uint64_t)&type metadata for A12_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  v71 = v21;
  v24 = *(_QWORD *)(v23 + 72);
  v25 = *(unsigned __int8 *)(v23 + 80);
  v26 = (v25 + 32) & ~v25;
  v64 = v25 | 7;
  v65 = v26 + v24;
  v27 = swift_allocObject();
  v63 = xmmword_1BB87CE70;
  *(_OWORD *)(v27 + 16) = xmmword_1BB87CE70;
  v28 = *MEMORY[0x1E0DB5C80];
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 104);
  v70(v27 + v26, v28, v22);
  v74 = v73;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  v19(v9, v6);
  v29 = KeyPath;
  v75 = KeyPath;
  v30 = swift_allocBox();
  ((void (*)(uint64_t, _QWORD, uint64_t))v68)(v31, v69, v11);
  *v9 = v30;
  v32 = v62;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v62)(v9, v67, v6);
  v69 = v17;
  v67 = v18;
  sub_1BB86D4EC();
  v68 = (void (*)(uint64_t))v19;
  v19(v9, v6);
  v75 = v29;
  KeyPath = swift_getKeyPath();
  sub_1BAA71EEC();
  v34 = v33;
  v35 = swift_allocBox();
  v37 = (char *)v36 + *(int *)(v34 + 48);
  *v36 = 2;
  v38 = *MEMORY[0x1E0DB61C8];
  v39 = sub_1BB86DA20();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 104);
  v41(v37, v38, v39);
  *v9 = v35;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v32)(v9, *MEMORY[0x1E0DB6338], v6);
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v63;
  v43 = (double *)(v42 + v26);
  v44 = v72 + *(int *)(type metadata accessor for A12_V3.Bound() + 24);
  *v43 = *(double *)(v44 + *(int *)(type metadata accessor for GroupLayoutContext() + 32)) * 135.0;
  v45 = v43;
  v46 = v73;
  result = ((uint64_t (*)(double *, _QWORD, uint64_t))v70)(v45, *MEMORY[0x1E0DB5CB8], v71);
  if (*(_QWORD *)(v46 + 16) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    v48 = type metadata accessor for HeadlineViewLayout.Context(0);
    v49 = v46
        + ((*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80))
        + 3 * *(_QWORD *)(*(_QWORD *)(v48 - 8) + 72);
    v73 = v6;
    v50 = v59;
    v51 = v60;
    v52 = &v60[*(int *)(v59 + 20)];
    v41(v52, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v52, 0, 1, v39);
    v53 = (void *)*MEMORY[0x1E0DC4918];
    *v51 = 0;
    *(_QWORD *)((char *)v51 + *(int *)(v50 + 24)) = 0;
    *(_QWORD *)((char *)v51 + *(int *)(v50 + 28)) = v53;
    v54 = *MEMORY[0x1E0DC49E8];
    v55 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v56 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v57 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v58 = v53;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v49, (uint64_t)v51, v54, v55, v56, v57);
    sub_1BA4A2E80((uint64_t)v51, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return ((uint64_t (*)(uint64_t *, uint64_t))v68)(v9, v73);
  }
  return result;
}

uint64_t sub_1BB665AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2C9EA8, (uint64_t (*)(void))sub_1BB6668B4, (uint64_t)&type metadata for A12_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 3;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB6669A4(0, &qword_1EF2C9EC0, MEMORY[0x1E0DB5A10]);
  sub_1BB66695C(&qword_1EF2C9EC8, &qword_1EF2C9EC0, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 3;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BB665CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C9EA8, (uint64_t (*)(void))sub_1BB6668B4, (uint64_t)&type metadata for A12_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB6669A4(0, &qword_1EF2C9EC0, MEMORY[0x1E0DB5A10]);
  sub_1BB66695C(&qword_1EF2C9EC8, &qword_1EF2C9EC0, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BB6660DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C9EA8, (uint64_t (*)(void))sub_1BB6668B4, (uint64_t)&type metadata for A12_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB6669A4(0, &qword_1EF2C9EC0, MEMORY[0x1E0DB5A10]);
  sub_1BB66695C(&qword_1EF2C9EC8, &qword_1EF2C9EC0, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BB6664E8@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V3.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB6665C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB664010(a1, a2, a3);
}

uint64_t sub_1BB6665DC()
{
  return sub_1BB690B78();
}

unint64_t sub_1BB6665EC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB666618();
  result = sub_1BB66665C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB666618()
{
  unint64_t result;

  result = qword_1EF2C9DD8;
  if (!qword_1EF2C9DD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939BF4, &type metadata for A12_V3);
    atomic_store(result, (unint64_t *)&qword_1EF2C9DD8);
  }
  return result;
}

unint64_t sub_1BB66665C()
{
  unint64_t result;

  result = qword_1EF2C9DE0;
  if (!qword_1EF2C9DE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939C1C, &type metadata for A12_V3);
    atomic_store(result, (unint64_t *)&qword_1EF2C9DE0);
  }
  return result;
}

uint64_t type metadata accessor for A12_V3.Bound()
{
  uint64_t result;

  result = qword_1EF2C9E48;
  if (!qword_1EF2C9E48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB6666DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6666E8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB666764()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB666770(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB6667E4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB666870(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C9E88, (uint64_t (*)(uint64_t))type metadata accessor for A12_V3.Bound, (uint64_t)&unk_1BB939C80);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB6668AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB664B28(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BB6668B4()
{
  unint64_t result;

  result = qword_1EF2C9E98;
  if (!qword_1EF2C9E98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939DD8, &type metadata for A12_V3.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2C9E98);
  }
  return result;
}

unint64_t sub_1BB6668F8()
{
  unint64_t result;

  result = qword_1EF2C9EA0;
  if (!qword_1EF2C9EA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939DA8, &type metadata for A12_V3.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C9EA0);
  }
  return result;
}

uint64_t sub_1BB66693C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB6664E8(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB666944()
{
  return swift_deallocObject();
}

uint64_t sub_1BB666954(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB664C84(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB66695C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB6669A4(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB66699C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB664DC0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BB6669A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V3.Layout;
    v8[1] = &type metadata for A12_V3.Layout.Attributes;
    v8[2] = sub_1BB6668B4();
    v8[3] = sub_1BB6668F8();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB666A20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C9ED0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2C9ED8, (uint64_t (*)(void))sub_1BB6668B4, (uint64_t)&type metadata for A12_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C9ED0);
  }
}

uint64_t sub_1BB666A94(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB6650C0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB666A9C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB66554C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB666AA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB665AE8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB666AAC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB665CD0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB666AB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB6660DC(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V3.Layout.Attributes()
{
  return &type metadata for A12_V3.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V3.Layout()
{
  return &type metadata for A12_V3.Layout;
}

unint64_t sub_1BB666AE0()
{
  unint64_t result;

  result = qword_1EF2C9EE0;
  if (!qword_1EF2C9EE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939D48, &type metadata for A12_V3.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C9EE0);
  }
  return result;
}

unint64_t sub_1BB666B28()
{
  unint64_t result;

  result = qword_1EF2C9EE8;
  if (!qword_1EF2C9EE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939D20, &type metadata for A12_V3.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C9EE8);
  }
  return result;
}

unint64_t sub_1BB666B70()
{
  unint64_t result;

  result = qword_1EF2C9EF0;
  if (!qword_1EF2C9EF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939CF8, &type metadata for A12_V3.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C9EF0);
  }
  return result;
}

unint64_t sub_1BB666BB8()
{
  unint64_t result;

  result = qword_1EF2C9EF8;
  if (!qword_1EF2C9EF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939D70, &type metadata for A12_V3.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C9EF8);
  }
  return result;
}

uint64_t sub_1BB666BFC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C9F00, (uint64_t (*)(void))sub_1BB666E10, (uint64_t)&type metadata for A12_V3.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB666E10();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB666E10()
{
  unint64_t result;

  result = qword_1EF2C9F08;
  if (!qword_1EF2C9F08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939ECC, &type metadata for A12_V3.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9F08);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V3.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB666EA0 + 4 * byte_1BB939BE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB666ED4 + 4 * byte_1BB939BE0[v4]))();
}

uint64_t sub_1BB666ED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB666EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB666EE4);
  return result;
}

uint64_t sub_1BB666EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB666EF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB666EFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB666F04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V3.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V3.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB666F24()
{
  unint64_t result;

  result = qword_1EF2C9F18;
  if (!qword_1EF2C9F18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939EA4, &type metadata for A12_V3.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9F18);
  }
  return result;
}

unint64_t sub_1BB666F6C()
{
  unint64_t result;

  result = qword_1EF2C9F20;
  if (!qword_1EF2C9F20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939E14, &type metadata for A12_V3.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9F20);
  }
  return result;
}

unint64_t sub_1BB666FB4()
{
  unint64_t result;

  result = qword_1EF2C9F28;
  if (!qword_1EF2C9F28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939E3C, &type metadata for A12_V3.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9F28);
  }
  return result;
}

uint64_t destroy for LayeredMediaLayerRenderable(uint64_t a1)
{
  return sub_1BB634700(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136));
}

uint64_t initializeWithCopy for LayeredMediaLayerRenderable(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_BYTE *)(a2 + 136);
  sub_1BB63467C(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_BYTE *)(a1 + 136) = v21;
  return a1;
}

uint64_t assignWithCopy for LayeredMediaLayerRenderable(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v27 = *(_QWORD *)(a2 + 72);
  v28 = *(_QWORD *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 88);
  v30 = *(_QWORD *)(a2 + 96);
  v31 = *(_QWORD *)(a2 + 104);
  v32 = *(_QWORD *)(a2 + 112);
  v33 = *(_QWORD *)(a2 + 120);
  v34 = *(_QWORD *)(a2 + 128);
  v35 = *(_BYTE *)(a2 + 136);
  sub_1BB63467C(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29, v30, v31, v32, v33, v34, v35);
  v12 = *(void **)a1;
  v13 = *(void **)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  v24 = *(_QWORD *)(a1 + 128);
  v25 = *(_BYTE *)(a1 + 136);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v27;
  *(_QWORD *)(a1 + 80) = v28;
  *(_QWORD *)(a1 + 88) = v29;
  *(_QWORD *)(a1 + 96) = v30;
  *(_QWORD *)(a1 + 104) = v31;
  *(_QWORD *)(a1 + 112) = v32;
  *(_QWORD *)(a1 + 120) = v33;
  *(_QWORD *)(a1 + 128) = v34;
  *(_BYTE *)(a1 + 136) = v35;
  sub_1BB634700(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, v25);
  return a1;
}

uint64_t assignWithTake for LayeredMediaLayerRenderable(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v3 = *(_QWORD *)(a2 + 128);
  v4 = *(_BYTE *)(a2 + 136);
  v5 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_OWORD *)(a1 + 112);
  v17 = *(_QWORD *)(a1 + 128);
  v18 = *(_BYTE *)(a1 + 136);
  v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v19;
  v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v20;
  v21 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v21;
  v22 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v22;
  *(_QWORD *)(a1 + 128) = v3;
  *(_BYTE *)(a1 + 136) = v4;
  sub_1BB634700(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayeredMediaLayerRenderable(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFF && *(_BYTE *)(a1 + 137))
    return (*(_DWORD *)a1 + 0x3FFF);
  v3 = ((*(unsigned __int8 *)(a1 + 136) >> 7) | (2
                                               * ((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7 | (((*(unsigned __int8 *)(a1 + 136) >> 1) & 0x3F) << 7)))) ^ 0x3FFF;
  if (v3 >= 0x3FFE)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for LayeredMediaLayerRenderable(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x3FFE)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = a2 - 0x3FFF;
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 137) = 1;
  }
  else
  {
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 137) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_OWORD *)(result + 8) = 0u;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 40) = 0u;
      *(_OWORD *)(result + 56) = 0u;
      *(_OWORD *)(result + 72) = 0u;
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
      *(_BYTE *)(result + 136) = (v3 >> 6) & 0xFE;
    }
  }
  return result;
}

uint64_t sub_1BB66746C(uint64_t result, char a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 136) & 1 | (a2 << 7);
  *(_QWORD *)result &= 0xFFFFFFFFFFFFFF8uLL;
  *(_BYTE *)(result + 136) = v2;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaLayerRenderable()
{
  return &type metadata for LayeredMediaLayerRenderable;
}

uint64_t static FormatContentSubgroupFilterPrecededBy.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BB874398();
}

uint64_t FormatContentSubgroupFilterPrecededBy.type.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB6674F8()
{
  sub_1BB66763C();
  return sub_1BB874710();
}

uint64_t sub_1BB667520()
{
  sub_1BB66763C();
  return sub_1BB87471C();
}

uint64_t FormatContentSubgroupFilterPrecededBy.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB6677A4(0, &qword_1EF2C9F30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB66763C();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BB66763C()
{
  unint64_t result;

  result = qword_1EF2C9F38;
  if (!qword_1EF2C9F38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93A0FC, &type metadata for FormatContentSubgroupFilterPrecededBy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9F38);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterPrecededBy.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BB6677A4(0, &qword_1EF2C9F40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB66763C();
  sub_1BB87468C();
  if (!v2)
  {
    v10 = sub_1BB874098();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB6677A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB66763C();
    v7 = a3(a1, &type metadata for FormatContentSubgroupFilterPrecededBy.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB667800(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BB173E8C();
  a1[2] = sub_1BB173F24();
  result = sub_1BB667834();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB667834()
{
  unint64_t result;

  result = qword_1EF2C9F48;
  if (!qword_1EF2C9F48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterPrecededBy, &type metadata for FormatContentSubgroupFilterPrecededBy);
    atomic_store(result, (unint64_t *)&qword_1EF2C9F48);
  }
  return result;
}

uint64_t sub_1BB667878@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroupFilterPrecededBy.init(from:)(a1, a2);
}

uint64_t sub_1BB66788C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB6677A4(0, &qword_1EF2C9F30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB66763C();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterPrecededBy()
{
  return &type metadata for FormatContentSubgroupFilterPrecededBy;
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroupFilterPrecededBy.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB6679D0 + 4 * byte_1BB939F50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB6679F0 + 4 * byte_1BB939F55[v4]))();
}

_BYTE *sub_1BB6679D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB6679F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6679F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB667A00(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB667A08(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB667A10(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterPrecededBy.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterPrecededBy.CodingKeys;
}

unint64_t sub_1BB667A30()
{
  unint64_t result;

  result = qword_1EF2C9F50;
  if (!qword_1EF2C9F50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93A0D4, &type metadata for FormatContentSubgroupFilterPrecededBy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9F50);
  }
  return result;
}

unint64_t sub_1BB667A78()
{
  unint64_t result;

  result = qword_1EF2C9F58;
  if (!qword_1EF2C9F58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93A044, &type metadata for FormatContentSubgroupFilterPrecededBy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9F58);
  }
  return result;
}

unint64_t sub_1BB667AC0()
{
  unint64_t result;

  result = qword_1EF2C9F60;
  if (!qword_1EF2C9F60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93A06C, &type metadata for FormatContentSubgroupFilterPrecededBy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C9F60);
  }
  return result;
}

uint64_t FeedServiceConfigFetcherType.logName.getter()
{
  return 0;
}

uint64_t *AnyFeedServiceConfigFetcher.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;

  swift_allocObject();
  v6 = sub_1BA83EBE0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v6;
}

uint64_t AnyFeedServiceConfigFetcher.logName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t AnyFeedServiceConfigFetcher.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t AnyFeedServiceConfigFetcher.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB667BEC()
{
  return AnyFeedServiceConfigFetcher.logName.getter();
}

uint64_t sub_1BB667C0C()
{
  return AnyFeedServiceConfigFetcher.fetchConfig(context:)();
}

uint64_t sub_1BB667C2C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 104);
}

uint64_t dispatch thunk of FeedServiceConfigFetcherType.logName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedServiceConfigFetcherType.fetchConfig(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t method lookup function for AnyFeedServiceConfigFetcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnyFeedServiceConfigFetcher.__allocating_init<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1BB667C5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 40) + 40))();
}

uint64_t sub_1BB667C98(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  if (!a3)
    return 0x6C616974696E69;
  if (a3 != 1)
    return 0x676E616863206F6ELL;
  sub_1BB21A0E4(a1, a2, 1);
  swift_bridgeObjectRelease();
  sub_1BB87420C();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  v5 = 0x287365676E616863;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BB667D8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;

  v1 = v0;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v2 = *v0;
  v3 = v1[1];
  v4 = *((_BYTE *)v1 + 16);
  sub_1BB21A0E4(*v1, v3, v4);
  sub_1BB667C98(v2, v3, v4);
  sub_1BB21A054(v2, v3, v4);
  sub_1BB872AFC(v5);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v6);
  v7 = type metadata accessor for DebugFormatPackagesDelta();
  if (*(unint64_t *)((char *)v1 + *(int *)(v7 + 20)) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  sub_1BB87420C();
  sub_1BB872AFC(v8);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v9);
  if (*(unint64_t *)((char *)v1 + *(int *)(v7 + 24)) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  sub_1BB87420C();
  sub_1BB872AFC(v10);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v11);
  return 0x3D64616F6C7BLL;
}

uint64_t type metadata accessor for DebugFormatPackagesDelta()
{
  uint64_t result;

  result = qword_1EF2C9FF8;
  if (!qword_1EF2C9FF8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BB667FD0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_1BB21A0E4(*(_QWORD *)a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    sub_1BA4B07F0(0, &qword_1EF2BE148, (uint64_t (*)(uint64_t))sub_1BA86535C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
    v11 = *(int *)(v10 + 28);
    v12 = a1 + v11;
    v13 = a2 + v11;
    v14 = sub_1BB86EB84();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v16 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
    v15(v12 + v16[5], v13 + v16[5], v14);
    v17 = v16[6];
    v18 = (_QWORD *)(v12 + v17);
    v19 = (_QWORD *)(v13 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(_BYTE *)(v12 + v16[7]) = *(_BYTE *)(v13 + v16[7]);
    v21 = *(int *)(a3 + 24);
    *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
    *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BB668114(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  sub_1BB21A054(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_1BA4B07F0(0, &qword_1EF2BE148, (uint64_t (*)(uint64_t))sub_1BA86535C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  v3 = a1 + *(int *)(v2 + 28);
  v4 = sub_1BB86EB84();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v5(v3 + *(int *)(v6 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB6681DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_1BB21A0E4(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_1BA4B07F0(0, &qword_1EF2BE148, (uint64_t (*)(uint64_t))sub_1BA86535C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  v10 = *(int *)(v9 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BB86EB84();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v11, v12, v13);
  v15 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v14(v11 + v15[5], v12 + v15[5], v13);
  v16 = v15[6];
  v17 = (_QWORD *)(v11 + v16);
  v18 = (_QWORD *)(v12 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_BYTE *)(v11 + v15[7]) = *(_BYTE *)(v12 + v15[7]);
  v20 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB6682F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_1BB21A0E4(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v11 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v8;
  sub_1BB21A054(v9, v10, v11);
  sub_1BA4B07F0(0, &qword_1EF2BE148, (uint64_t (*)(uint64_t))sub_1BA86535C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  v13 = *(int *)(v12 + 28);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1BB86EB84();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v18 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v17(v14 + v18[5], v15 + v18[5], v16);
  v19 = v18[6];
  v20 = (_QWORD *)(v14 + v19);
  v21 = (_QWORD *)(v15 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + v18[7]) = *(_BYTE *)(v15 + v18[7]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB668440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  sub_1BA4B07F0(0, &qword_1EF2BE148, (uint64_t (*)(uint64_t))sub_1BA86535C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  v7 = *(int *)(v6 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86EB84();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v11(v8 + v12[5], v9 + v12[5], v10);
  *(_OWORD *)(v8 + v12[6]) = *(_OWORD *)(v9 + v12[6]);
  *(_BYTE *)(v8 + v12[7]) = *(_BYTE *)(v9 + v12[7]);
  v13 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_1BB66852C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1BB21A054(v7, v8, v9);
  sub_1BA4B07F0(0, &qword_1EF2BE148, (uint64_t (*)(uint64_t))sub_1BA86535C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  v11 = *(int *)(v10 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1BB86EB84();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v16 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v15(v12 + v16[5], v13 + v16[5], v14);
  v17 = v16[6];
  v18 = (_QWORD *)(v12 + v17);
  v19 = (uint64_t *)(v13 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + v16[7]) = *(_BYTE *)(v13 + v16[7]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB66864C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB668658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1BA4B07F0(0, &qword_1EF2BE148, (uint64_t (*)(uint64_t))sub_1BA86535C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BB6686EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BB6686F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1BA4B07F0(0, &qword_1EF2BE148, (uint64_t (*)(uint64_t))sub_1BA86535C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
}

void sub_1BB668788()
{
  unint64_t v0;

  sub_1BA4B07F0(319, &qword_1EF2BE148, (uint64_t (*)(uint64_t))sub_1BA86535C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t dispatch thunk of PublisherLogoImageRequestProviding.publisherLogoImageProcessorRequest(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id cast<A>(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  char v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v15[2];

  v6 = sub_1BB873A2C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v15 - v8;
  v15[1] = a1;
  sub_1BB66897C();
  v10 = a1;
  v11 = swift_dynamicCast();
  v12 = *(_QWORD *)(a2 - 8);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v11 & 1) != 0)
  {
    v13(v9, 0, 1, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a3, v9, a2);
    return objc_msgSend(v10, sel_setHidden_, 0);
  }
  else
  {
    v13(v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    objc_msgSend(v10, sel_setHidden_, 1);
    sub_1BB6689B8();
    swift_allocError();
    return (id)swift_willThrow();
  }
}

unint64_t sub_1BB66897C()
{
  unint64_t result;

  result = qword_1EF2CA038;
  if (!qword_1EF2CA038)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2CA038);
  }
  return result;
}

unint64_t sub_1BB6689B8()
{
  unint64_t result;

  result = qword_1EF2CA040;
  if (!qword_1EF2CA040)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93A2F8, &type metadata for FeedItemError);
    atomic_store(result, (unint64_t *)&qword_1EF2CA040);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedItemError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB668A3C + 4 * asc_1BB93A274[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB668A5C + 4 * byte_1BB93A279[v4]))();
}

_BYTE *sub_1BB668A3C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB668A5C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB668A64(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB668A6C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB668A74(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB668A7C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemError()
{
  return &type metadata for FeedItemError;
}

unint64_t sub_1BB668A9C()
{
  unint64_t result;

  result = qword_1EF2CA048;
  if (!qword_1EF2CA048)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93A2D0, &type metadata for FeedItemError);
    atomic_store(result, (unint64_t *)&qword_1EF2CA048);
  }
  return result;
}

void sub_1BB668AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB668B20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_0;

  v1 = type metadata accessor for FormatCommandOpenURL();
  v2 = swift_projectBox();
  v0[3] = v1;
  v0[4] = (uint64_t)&off_1E727FD88;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v0);
  return sub_1BB668E4C(v2, (uint64_t)boxed_opaque_existential_0);
}

void sub_1BB668C18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BB668CA4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (v0 >> 62)
  {
    v5 = 0;
  }
  else
  {
    v3 = swift_projectBox();
    v4 = swift_projectBox();
    sub_1BB668E4C(v3, v2);
    sub_1BB668E4C(v4, v1);
    v5 = _s8NewsFeed20FormatCommandOpenURLO2eeoiySbAC_ACtFZ_0(v2, v1);
    sub_1BB668E90(v1);
    sub_1BB668E90(v2);
  }
  return v5 & 1;
}

void sub_1BB668E40(uint64_t *a1)
{
  sub_1BB668C18(*a1);
}

uint64_t sub_1BB668E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatCommandOpenURL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB668E90(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatCommandOpenURL();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for FormatMenuItemAction()
{
  return &type metadata for FormatMenuItemAction;
}

unint64_t sub_1BB668EDC()
{
  unint64_t result;

  result = qword_1ED3D0850;
  if (!qword_1ED3D0850)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93A378, &type metadata for FormatMenuItemAction);
    atomic_store(result, (unint64_t *)&qword_1ED3D0850);
  }
  return result;
}

unint64_t sub_1BB668F20(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA82CF34();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB668FF8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  int v38;
  char v39;

  v4 = v3;
  v5 = result;
  v7 = *(unsigned __int8 *)(v2 + 16);
  if (*(_QWORD *)v2)
  {
    MEMORY[0x1E0C80A78](result);
    v29 = v5;
    v30 = v8;
    result = sub_1BA8A1948((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BB669820, (uint64_t)v28, v9);
    if (v3)
      return result;
    v10 = result;
    if (v7 != 255)
      goto LABEL_16;
LABEL_14:
    v26 = 0;
    v27 = -2;
    goto LABEL_19;
  }
  v10 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v2 + 8))
  {
    MEMORY[0x1E0C80A78](result);
    v29 = v5;
    v30 = v11;
    result = (uint64_t)sub_1BB141794((void (*)(__int128 *__return_ptr, _QWORD *))sub_1BB4D9E4C, (uint64_t)v28, v12);
    if (v3)
      return result;
    v13 = result;
    v14 = *(_QWORD *)(result + 16);
    if (!v14)
    {
      result = swift_bridgeObjectRelease();
      if (v7 == 255)
        goto LABEL_14;
      goto LABEL_16;
    }
    v38 = v7;
    v32 = v5;
    v33 = a2;
    v34 = 0;
    v36 = v10;
    sub_1BAC7A200(0, v14, 0);
    v10 = v36;
    v31 = v13;
    v15 = (_QWORD *)(v13 + 72);
    do
    {
      v35 = v10;
      v16 = *(v15 - 5);
      v17 = *(v15 - 4);
      v18 = *((_BYTE *)v15 - 24);
      v19 = (void *)*(v15 - 2);
      v20 = *((_BYTE *)v15 - 8);
      v21 = *v15;
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v16;
      *(_QWORD *)(v22 + 24) = v17;
      *(_BYTE *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v19;
      *(_BYTE *)(v22 + 48) = v20;
      *(_QWORD *)(v22 + 56) = v21;
      sub_1BAB5EC7C(v16, v17, v18);
      v23 = v19;
      v10 = v35;
      sub_1BA92F754(v23, v20);
      v36 = v10;
      v25 = *(_QWORD *)(v10 + 16);
      v24 = *(_QWORD *)(v10 + 24);
      swift_retain();
      if (v25 >= v24 >> 1)
      {
        sub_1BAC7A200(v24 > 1, v25 + 1, 1);
        v10 = v36;
      }
      *(_QWORD *)(v10 + 16) = v25 + 1;
      *(_QWORD *)(v10 + 8 * v25 + 32) = v22;
      v15 += 6;
      --v14;
    }
    while (v14);
    result = swift_bridgeObjectRelease();
    a2 = v33;
    v4 = v34;
    v5 = v32;
    v7 = v38;
  }
  if (v7 == 255)
    goto LABEL_14;
LABEL_16:
  v39 = v7 & 1;
  result = sub_1BB6DDF8C(v5, (uint64_t)&v36);
  if (v4)
    return swift_bridgeObjectRelease();
  v26 = v36;
  v27 = v37;
LABEL_19:
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v26;
  *(_BYTE *)(a2 + 16) = v27;
  return result;
}

unint64_t sub_1BB66926C()
{
  return 0xD000000000000019;
}

uint64_t sub_1BB66928C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB66967C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB6692B0()
{
  sub_1BA531020();
  return sub_1BB874710();
}

uint64_t sub_1BB6692D8()
{
  sub_1BA531020();
  return sub_1BB87471C();
}

BOOL _s8NewsFeed10FormatMenuV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  int v6;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v6 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1)
  {
    if (!v5)
      return 0;
    swift_bridgeObjectRetain();
    v7 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = sub_1BA892C34(v7, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  if (v2)
  {
    if (!v4)
      return 0;
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA88FCC8(v9, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      return 0;
  }
  else if (v4)
  {
    return 0;
  }
  if (v3 == 255)
    return v6 == 255;
  if (v6 == 255)
    return 0;
  if ((v3 & 1) != 0)
  {
    if ((v6 & 1) == 0)
      return 0;
  }
  else if ((v6 & 1) != 0)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1BB6693F8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA837708();
  a1[2] = sub_1BA7FDDDC();
  result = sub_1BB66942C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB66942C()
{
  unint64_t result;

  result = qword_1EF2CA050;
  if (!qword_1EF2CA050)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenu, &type metadata for FormatMenu);
    atomic_store(result, (unint64_t *)&qword_1EF2CA050);
  }
  return result;
}

uint64_t sub_1BB669474(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatMenu(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FormatMenu(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatMenu()
{
  return &type metadata for FormatMenu;
}

uint64_t storeEnumTagSinglePayload for FormatMenu.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB6695B4 + 4 * byte_1BB93A451[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB6695E8 + 4 * asc_1BB93A44C[v4]))();
}

uint64_t sub_1BB6695E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6695F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6695F8);
  return result;
}

uint64_t sub_1BB669604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB66960CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB669610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB669618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatMenu.CodingKeys()
{
  return &type metadata for FormatMenu.CodingKeys;
}

unint64_t sub_1BB669638()
{
  unint64_t result;

  result = qword_1EF2CA058;
  if (!qword_1EF2CA058)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93A5A4, &type metadata for FormatMenu.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA058);
  }
  return result;
}

uint64_t sub_1BB66967C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7370756F7267 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xED0000736D657449)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BB6697E4()
{
  uint64_t v0;

  sub_1BAB5EC9C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  sub_1BA92F770(*(void **)(v0 + 40), *(_BYTE *)(v0 + 48));
  swift_release();
  return swift_deallocObject();
}

void sub_1BB669820(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_1BB5D7AF4(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *a1);
  if (v3)
    *a2 = v3;
}

ValueMetadata *type metadata accessor for FormatCustomItemBinding()
{
  return &type metadata for FormatCustomItemBinding;
}

_QWORD *sub_1BB669868(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  _QWORD *v26;
  _QWORD v28[4];
  _BYTE v29[16];
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
  sub_1BA8C88C8(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  v8 = (_QWORD *)(v7 + v6);
  v9 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  *(_QWORD *)&v33[0] = *(_QWORD *)(*(_QWORD *)(v9 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 28))
                                 + 16);
  *(_QWORD *)&v35[0] = sub_1BB87420C();
  *((_QWORD *)&v35[0] + 1) = v10;
  sub_1BB872AFC(v11);
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1BB0ABA40(v12);
  swift_bridgeObjectRelease();
  v14 = sub_1BA975B1C(v13);
  swift_bridgeObjectRelease();
  v15 = sub_1BA9747FC(v14);
  swift_bridgeObjectRelease();
  v16 = sub_1BB6DF010(v15);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x736E6F6974704FLL, 0xE700000000000000, (uint64_t)v16, *(uint64_t *)&v35[0], *((uint64_t *)&v35[0] + 1), v8);
  v17 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 0, 1, v17);
  sub_1BAF89090(0x49206D6F74737543, 0xEB000000006D6574, 0, 0, v7, v31);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v18 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(v18 + 48) = v32;
  v19 = v31[1];
  *(_OWORD *)(v18 + 16) = v31[0];
  *(_OWORD *)(v18 + 32) = v19;
  v30 = a1;
  v20 = sub_1BA89F4EC((void (*)(char *))sub_1BB669C44, (uint64_t)v29, (uint64_t)&unk_1E726F7E8);
  sub_1BAF89090(1954047316, 0xE400000000000000, 0, 0, v20, v33);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v21 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v21;
  *(_QWORD *)(v21 + 48) = v34;
  v22 = v33[1];
  *(_OWORD *)(v21 + 16) = v33[0];
  *(_OWORD *)(v21 + 32) = v22;
  v28[2] = a1;
  v23 = sub_1BA8A2110((void (*)(uint64_t))sub_1BB669C60, (uint64_t)v28, (uint64_t)&unk_1E726F810);
  sub_1BAF89090(5001813, 0xE300000000000000, 0, 0, v23, v35);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 144) = &off_1E72D2F60;
  v24 = swift_allocObject();
  *(_QWORD *)(inited + 112) = v24;
  *(_QWORD *)(v24 + 48) = v36;
  v25 = v35[1];
  *(_OWORD *)(v24 + 16) = v35[0];
  *(_OWORD *)(v24 + 32) = v25;
  v26 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v26;
}

uint64_t sub_1BB669C10()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB669C44@<X0>(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB1F8464(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB669C60@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BAA821B8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t dispatch thunk of FeedLayoutDatabaseType.read(cacheKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FeedLayoutDatabaseType.save(cacheKey:feedGroupLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1BB669C8C(uint64_t a1, uint64_t *a2)
{
  int64_t v3;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v3, 0);
    result = v28;
    v6 = (uint64_t *)(a1 + 40);
    v22 = a2;
    do
    {
      v24 = result;
      v7 = *(v6 - 1);
      v8 = *v6;
      v9 = *(_QWORD **)(*a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
      v10 = v9[3];
      if (v10)
      {
        v27 = v9[2];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BB872AFC(v11);
        sub_1BB872AFC(v12);
        v13 = v10;
        v25 = v27;
        v14 = v9[7];
        if (!v14)
          goto LABEL_7;
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        v25 = v7;
        v13 = v8;
        v14 = v9[7];
        if (!v14)
        {
LABEL_7:
          swift_release();
          goto LABEL_8;
        }
      }
      v15 = *(_QWORD *)(v14 + 32);
      v23 = v7;
      v16 = v9[6];
      swift_beginAccess();
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26 = *(_QWORD *)(v15 + 16);
      *(_QWORD *)(v15 + 16) = 0x8000000000000000;
      sub_1BB4BDE60(v16, v25, v13, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v15 + 16) = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      swift_release();
      a2 = v22;
      swift_release();
      v7 = v23;
      swift_bridgeObjectRelease();
LABEL_8:
      swift_retain();
      v18 = sub_1BA709F80(v7, v8);
      swift_release();
      *a2 = v18;
      swift_bridgeObjectRelease();
      swift_release();
      result = v24;
      v20 = *(_QWORD *)(v24 + 16);
      v19 = *(_QWORD *)(v24 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1BA7447E8(v19 > 1, v20 + 1, 1);
        result = v24;
      }
      v6 += 2;
      *(_QWORD *)(result + 16) = v20 + 1;
      v21 = result + 16 * v20;
      *(_QWORD *)(v21 + 32) = v25;
      *(_QWORD *)(v21 + 40) = v13;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1BB669F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  _BOOL8 v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _BOOL8 v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  _QWORD *v135;
  unint64_t v136;
  uint64_t v137;
  char v138;
  int64_t v139;
  char v140;
  char v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;

  v5 = v4;
  sub_1BB86DD80();
  v8 = *(_QWORD *)(*(_QWORD *)(v145 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v8 + 16) + 16))
  {
    v144 = *(_QWORD *)(v145 + 56);
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA6E42A0(v9);
    sub_1BA6E3FB8(v10);
    swift_release();
    v11 = v144;
    if (a1)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  v11 = sub_1BA6E3F38();
  swift_release();
  if (!a1)
    goto LABEL_14;
LABEL_3:
  if (!*(_QWORD *)(a4 + 16))
  {
LABEL_16:
    swift_retain();
    sub_1BAAD973C(v11);
    swift_release();
    swift_bridgeObjectRelease();
    v22 = sub_1BB66F994(a2);
LABEL_17:
    swift_release();
    return v22;
  }
  v122 = v11;
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  v14 = sub_1BA6E35A8(v12, v13);
  if ((v15 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v16 = *(_QWORD **)(*(_QWORD *)(a4 + 56) + 8 * v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = sub_1BB67EA1C(v16, a1);
  swift_bridgeObjectRelease();
  v18 = v17 >> 62;
  if (v17 >> 62)
    goto LABEL_118;
  v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  v20 = v122;
  if (!v19)
  {
LABEL_119:
    swift_bridgeObjectRelease();
    sub_1BAAD973C(v20);
    swift_bridgeObjectRelease();
    v22 = sub_1BB66F994(a2);
    swift_release();
    goto LABEL_17;
  }
  while (1)
  {
    if ((v17 & 0xC000000000000001) != 0)
    {
      v121 = MEMORY[0x1BCCE4630](0, v17);
      if (v19 < 0)
        goto LABEL_121;
    }
    else
    {
      if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_122;
      v121 = *(_QWORD *)(v17 + 32);
      swift_retain();
      if (v19 < 0)
      {
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
    }
    if (v18)
    {
      swift_bridgeObjectRetain();
      v24 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v24 < 1)
        goto LABEL_123;
      swift_bridgeObjectRetain();
      v21 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v21)
        goto LABEL_123;
    }
    if (v21 < v19)
      goto LABEL_124;
    if ((v17 & 0xC000000000000001) != 0 && v19 != 1)
    {
      type metadata accessor for FormatCustomNodeStyle();
      v25 = 1;
      do
      {
        v26 = v25 + 1;
        sub_1BB873CFC();
        v25 = v26;
      }
      while (v19 != v26);
    }
    if (v18)
    {
      swift_bridgeObjectRetain();
      sub_1BB873F3C();
      v125 = v27;
      v18 = v28;
      v30 = v29;
      swift_bridgeObjectRelease_n();
      v19 = v30 >> 1;
    }
    else
    {
      v125 = (v17 & 0xFFFFFFFFFFFFFF8) + 32;
      v18 = 1;
    }
    swift_retain();
    if (v18 == v19)
      break;
    swift_unknownObjectRetain();
    v31 = v121;
    v134 = v19;
    v123 = a1;
    v124 = v5;
    while (1)
    {
      if (v18 >= v19)
        goto LABEL_116;
      v33 = *(_QWORD *)(v125 + 8 * v18);
      swift_beginAccess();
      v34 = *(unsigned __int8 *)(v31 + 48);
      if (v34 == 2)
        LOBYTE(v34) = *(_BYTE *)(v33 + 48);
      v133 = v34;
      v35 = *(_QWORD *)(v31 + 24);
      v132 = *(_QWORD *)(v31 + 16);
      v36 = *(_QWORD *)(v31 + 40);
      v130 = *(_QWORD *)(v31 + 32);
      v37 = *(_QWORD *)(v31 + 56);
      v38 = *(_QWORD *)(v33 + 56);
      swift_retain();
      v131 = v35;
      swift_bridgeObjectRetain();
      v129 = v36;
      swift_bridgeObjectRetain();
      v128 = sub_1BB66F788(v37, v38);
      swift_beginAccess();
      v39 = *(_QWORD *)(v31 + 64);
      swift_beginAccess();
      v5 = *(_QWORD **)(v33 + 64);
      v146 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v17 = *(_QWORD *)(v39 + 16);
      if (__OFADD__(v17, v5[2]))
        break;
      v139 = v5[2];
      v127 = v18;
      sub_1BB680A74();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB8727C0();
      v143 = sub_1BA6E6D30(0, v17, 0, MEMORY[0x1E0DEE9D8]);
      v17 = *(_QWORD *)(v39 + 16);
      v135 = v5;
      if (v17)
      {
        swift_bridgeObjectRetain();
        v18 = v39 + 56;
        while (1)
        {
          v5 = *(_QWORD **)(v18 - 24);
          v40 = *(_QWORD *)(v18 - 16);
          v141 = *(_BYTE *)(v18 - 8);
          v41 = *(_QWORD *)v18;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v44 = sub_1BA6E35A8((uint64_t)v5, v40);
          v45 = v146[2];
          v46 = (v43 & 1) == 0;
          v47 = v45 + v46;
          if (__OFADD__(v45, v46))
          {
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
            goto LABEL_117;
          }
          a1 = v43;
          if (v146[3] >= v47)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v50 = v146;
              if ((v43 & 1) != 0)
                goto LABEL_46;
            }
            else
            {
              sub_1BB4C3328();
              v50 = v146;
              if ((a1 & 1) != 0)
                goto LABEL_46;
            }
          }
          else
          {
            sub_1BB4AFD0C(v47, isUniquelyReferenced_nonNull_native);
            v48 = sub_1BA6E35A8((uint64_t)v5, v40);
            if ((a1 & 1) != (v49 & 1))
              goto LABEL_125;
            v44 = v48;
            v50 = v146;
            if ((a1 & 1) != 0)
            {
LABEL_46:
              a1 = v17;
              v51 = v50[7] + 32 * v44;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              *(_QWORD *)v51 = v5;
              *(_QWORD *)(v51 + 8) = v40;
              *(_BYTE *)(v51 + 16) = v141;
              *(_QWORD *)(v51 + 24) = v41;
              goto LABEL_50;
            }
          }
          v50[(v44 >> 6) + 8] |= 1 << v44;
          v52 = (_QWORD *)(v50[6] + 16 * v44);
          *v52 = v5;
          v52[1] = v40;
          v53 = v50[7] + 32 * v44;
          *(_QWORD *)v53 = v5;
          *(_QWORD *)(v53 + 8) = v40;
          *(_BYTE *)(v53 + 16) = v141;
          *(_QWORD *)(v53 + 24) = v41;
          v54 = v50[2];
          v55 = __OFADD__(v54, 1);
          v56 = v54 + 1;
          if (v55)
            goto LABEL_112;
          a1 = v17;
          v50[2] = v56;
          swift_bridgeObjectRetain();
LABEL_50:
          v146 = v50;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v57 = v143[2];
          v58 = v143[3];
          swift_bridgeObjectRetain();
          if (v57 >= v58 >> 1)
            v143 = sub_1BA6E6D30((_QWORD *)(v58 > 1), v57 + 1, 1, v143);
          v18 += 32;
          v143[2] = v57 + 1;
          v59 = &v143[2 * v57];
          v59[4] = v5;
          v59[5] = v40;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v17 = a1 - 1;
          if (a1 == 1)
          {
            swift_bridgeObjectRelease();
            v19 = v134;
            v5 = v135;
            goto LABEL_55;
          }
        }
      }
      v19 = v134;
LABEL_55:
      v60 = sub_1BA6E6D30(0, v139, 0, MEMORY[0x1E0DEE9D8]);
      v17 = v5[2];
      if (!v17)
        goto LABEL_94;
      swift_bridgeObjectRetain();
      v5 += 7;
      do
      {
        a1 = *(v5 - 3);
        v63 = *(v5 - 2);
        v64 = *((_BYTE *)v5 - 8);
        v65 = *v5;
        v66 = v146[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v142 = v60;
        if (v66)
        {
          swift_bridgeObjectRetain();
          v67 = sub_1BA6E35A8(a1, v63);
          if ((v68 & 1) != 0)
          {
            v136 = v17;
            v69 = v146[7] + 32 * v67;
            v18 = *(_QWORD *)v69;
            v70 = *(_QWORD *)(v69 + 8);
            v71 = *(unsigned __int8 *)(v69 + 16);
            v72 = *(_QWORD *)(v69 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v71 == 2)
              v73 = v64;
            else
              v73 = v71;
            v138 = v73;
            v74 = v72;
            if (!v72)
              v74 = swift_bridgeObjectRetain();
            v137 = v74;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            v17 = swift_isUniquelyReferenced_nonNull_native();
            a1 = v18;
            v76 = sub_1BA6E35A8(v18, v70);
            v77 = v146[2];
            v78 = (v75 & 1) == 0;
            v79 = v77 + v78;
            if (__OFADD__(v77, v78))
              goto LABEL_114;
            v18 = v75;
            if (v146[3] >= v79)
            {
              if ((v17 & 1) != 0)
              {
                if ((v75 & 1) == 0)
                  goto LABEL_83;
              }
              else
              {
                sub_1BB4C3328();
                if ((v18 & 1) == 0)
                  goto LABEL_83;
              }
            }
            else
            {
              sub_1BB4AFD0C(v79, v17);
              v80 = sub_1BA6E35A8(a1, v70);
              if ((v18 & 1) != (v81 & 1))
                goto LABEL_125;
              v76 = v80;
              if ((v18 & 1) == 0)
              {
LABEL_83:
                v146[(v76 >> 6) + 8] |= 1 << v76;
                v93 = (uint64_t *)(v146[6] + 16 * v76);
                *v93 = a1;
                v93[1] = v70;
                v94 = v146[7] + 32 * v76;
                *(_QWORD *)v94 = a1;
                *(_QWORD *)(v94 + 8) = v70;
                *(_BYTE *)(v94 + 16) = v138;
                *(_QWORD *)(v94 + 24) = v137;
                v95 = v146[2];
                v55 = __OFADD__(v95, 1);
                v96 = v95 + 1;
                if (v55)
                  goto LABEL_115;
                v146[2] = v96;
                swift_bridgeObjectRetain();
                goto LABEL_58;
              }
            }
            v61 = v146[7] + 32 * v76;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_QWORD *)v61 = a1;
            *(_QWORD *)(v61 + 8) = v70;
            *(_BYTE *)(v61 + 16) = v138;
            *(_QWORD *)(v61 + 24) = v137;
LABEL_58:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            v60 = v142;
            v62 = v136;
            goto LABEL_59;
          }
          swift_bridgeObjectRelease();
        }
        v140 = v64;
        swift_bridgeObjectRetain_n();
        v82 = v65;
        swift_bridgeObjectRetain();
        v18 = swift_isUniquelyReferenced_nonNull_native();
        v83 = a1;
        v85 = sub_1BA6E35A8(a1, v63);
        v86 = v146[2];
        v87 = (v84 & 1) == 0;
        v88 = v86 + v87;
        if (__OFADD__(v86, v87))
          goto LABEL_111;
        a1 = v84;
        if (v146[3] >= v88)
        {
          if ((v18 & 1) != 0)
          {
            if ((v84 & 1) == 0)
              goto LABEL_86;
          }
          else
          {
            sub_1BB4C3328();
            if ((a1 & 1) == 0)
              goto LABEL_86;
          }
        }
        else
        {
          sub_1BB4AFD0C(v88, v18);
          v89 = sub_1BA6E35A8(v83, v63);
          if ((a1 & 1) != (v90 & 1))
            goto LABEL_125;
          v85 = v89;
          if ((a1 & 1) == 0)
          {
LABEL_86:
            v146[(v85 >> 6) + 8] |= 1 << v85;
            v97 = (uint64_t *)(v146[6] + 16 * v85);
            *v97 = v83;
            v97[1] = v63;
            v98 = v146[7] + 32 * v85;
            *(_QWORD *)v98 = v83;
            *(_QWORD *)(v98 + 8) = v63;
            *(_BYTE *)(v98 + 16) = v140;
            *(_QWORD *)(v98 + 24) = v82;
            v99 = v146[2];
            v55 = __OFADD__(v99, 1);
            v100 = v99 + 1;
            if (v55)
              goto LABEL_113;
            v91 = v17;
            v146[2] = v100;
            swift_bridgeObjectRetain();
            goto LABEL_88;
          }
        }
        v91 = v17;
        v92 = v146[7] + 32 * v85;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)v92 = v83;
        *(_QWORD *)(v92 + 8) = v63;
        *(_BYTE *)(v92 + 16) = v140;
        *(_QWORD *)(v92 + 24) = v82;
LABEL_88:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v60 = v142;
        v101 = v142[2];
        v102 = v142[3];
        swift_bridgeObjectRetain();
        if (v101 >= v102 >> 1)
          v60 = sub_1BA6E6D30((_QWORD *)(v102 > 1), v101 + 1, 1, v142);
        v60[2] = v101 + 1;
        v103 = &v60[2 * v101];
        v103[4] = v83;
        v103[5] = v63;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v62 = v91;
LABEL_59:
        v5 += 4;
        v17 = v62 - 1;
      }
      while (v17);
      swift_bridgeObjectRelease();
      v19 = v134;
LABEL_94:
      swift_bridgeObjectRetain();
      v104 = swift_bridgeObjectRetain();
      sub_1BA6E6E94(v104);
      v105 = v60[2];
      if (v105)
      {
        swift_bridgeObjectRetain();
        v106 = v60 + 5;
        v107 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          if (v146[2])
          {
            v108 = *(v106 - 1);
            v109 = *v106;
            swift_bridgeObjectRetain_n();
            v110 = sub_1BA6E35A8(v108, v109);
            if ((v111 & 1) != 0)
            {
              v112 = v146[7] + 32 * v110;
              v114 = *(_QWORD *)v112;
              v113 = *(_QWORD *)(v112 + 8);
              v115 = *(_BYTE *)(v112 + 16);
              v116 = *(_QWORD *)(v112 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease_n();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v107 = sub_1BB38D6D4(0, v107[2] + 1, 1, v107);
              v118 = v107[2];
              v117 = v107[3];
              if (v118 >= v117 >> 1)
                v107 = sub_1BB38D6D4((_QWORD *)(v117 > 1), v118 + 1, 1, v107);
              v107[2] = v118 + 1;
              v119 = &v107[4 * v118];
              v119[4] = v114;
              v119[5] = v113;
              *((_BYTE *)v119 + 48) = v115;
              v119[7] = v116;
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }
          }
          v106 += 2;
          --v105;
        }
        while (v105);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = v134;
      }
      else
      {
        swift_bridgeObjectRelease();
        v107 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v18 = v127 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = (unint64_t)v146;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatCustomNodeStyle();
      v32 = swift_allocObject();
      swift_beginAccess();
      *(_QWORD *)(v32 + 16) = v132;
      *(_QWORD *)(v32 + 24) = v131;
      *(_QWORD *)(v32 + 32) = v130;
      *(_QWORD *)(v32 + 40) = v129;
      *(_BYTE *)(v32 + 48) = v133;
      *(_QWORD *)(v32 + 56) = v128;
      swift_beginAccess();
      *(_QWORD *)(v32 + 64) = v107;
      swift_release();
      swift_release();
      v31 = v32;
      a1 = v123;
      v5 = v124;
      if (v127 + 1 == v19)
      {
        swift_unknownObjectRelease();
        goto LABEL_107;
      }
    }
LABEL_117:
    __break(1u);
LABEL_118:
    swift_bridgeObjectRetain();
    v19 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v20 = v122;
    if (!v19)
      goto LABEL_119;
  }
LABEL_107:
  v22 = v122;
  sub_1BAAD973C(v122);
  swift_release();
  swift_bridgeObjectRelease();
  v120 = sub_1BB66F994(a2);
  if (!v5)
    v22 = v120;
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v22;
}

uint64_t sub_1BB66AD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), void (*a6)(uint64_t *__return_ptr, _QWORD *, uint64_t *), uint64_t (*a7)(uint64_t, uint64_t), void (*a8)(_QWORD), void (*a9)(uint64_t))
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v49;
  uint64_t v50;

  v12 = v9;
  sub_1BB86DD80();
  v15 = *(_QWORD *)(*(_QWORD *)(v49 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v15 + 16) + 16))
  {
    v50 = *(_QWORD *)(v49 + 56);
    v16 = swift_bridgeObjectRetain();
    v17 = sub_1BA6E42A0(v16);
    sub_1BA6E3FB8(v17);
    swift_release();
    v18 = v50;
    if (a1)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  v18 = sub_1BA6E3F38();
  swift_release();
  if (!a1)
    goto LABEL_14;
LABEL_3:
  if (!*(_QWORD *)(a4 + 16))
  {
LABEL_16:
    swift_retain();
    a5(v18);
    swift_release();
    swift_bridgeObjectRelease();
    v30 = sub_1BB673848(a2, a6);
LABEL_17:
    swift_release();
    return v30;
  }
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(_QWORD *)(a1 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  v21 = sub_1BA6E35A8(v19, v20);
  if ((v22 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a7(v23, a1);
  result = swift_bridgeObjectRelease();
  v26 = v24 >> 62;
  if (!(v24 >> 62))
  {
    v27 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v27)
      goto LABEL_7;
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  v27 = sub_1BB873F30();
  result = swift_bridgeObjectRelease();
  if (!v27)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    a5(v18);
    swift_bridgeObjectRelease();
    v30 = sub_1BB673848(a2, a6);
    swift_release();
    goto LABEL_17;
  }
LABEL_7:
  v28 = v24 & 0xC000000000000001;
  if ((v24 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    result = swift_retain();
    if ((v27 & 0x8000000000000000) == 0)
      goto LABEL_10;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  result = MEMORY[0x1BCCE4630](0, v24);
  if (v27 < 0)
    goto LABEL_40;
LABEL_10:
  if (v26)
  {
    swift_bridgeObjectRetain();
    v31 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (v31 >= 1)
    {
      v26 = v24 >> 62;
      v28 = v24 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      v29 = sub_1BB873F30();
      result = swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v29 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v29)
    goto LABEL_42;
LABEL_21:
  if (v29 < v27)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v28 && v27 != 1)
  {
    a8(0);
    result = 1;
    do
    {
      v32 = result + 1;
      sub_1BB873CFC();
      result = v32;
    }
    while (v27 != v32);
  }
  if (!v26)
  {
    v33 = (v24 & 0xFFFFFFFFFFFFFF8) + 32;
    v34 = 1;
    v35 = __OFSUB__(v27, 1);
    v37 = v27 - 1;
    v36 = (v37 < 0) ^ v35 | (v37 == 0);
    if (v37)
      goto LABEL_28;
LABEL_33:
    swift_retain();
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  sub_1BB873F3C();
  v33 = v40;
  v34 = v41;
  v43 = v42;
  result = swift_bridgeObjectRelease_n();
  v43 >>= 1;
  v35 = __OFSUB__(v43, v34);
  v37 = v43 - v34;
  v36 = (v37 < 0) ^ v35 | (v37 == 0);
  if (!v37)
    goto LABEL_33;
LABEL_28:
  if (!v36)
  {
    swift_retain();
    swift_unknownObjectRetain();
    v38 = v33 + 8 * v34;
    do
    {
      v38 += 8;
      v39 = swift_retain();
      a9(v39);
      swift_release();
      swift_release();
      --v37;
    }
    while (v37);
    swift_unknownObjectRelease();
LABEL_34:
    v44 = ((uint64_t (*)(uint64_t))a5)(v18);
    swift_release();
    swift_bridgeObjectRelease();
    v30 = v44;
    v45 = sub_1BB673848(a2, a6);
    if (!v12)
      v30 = v45;
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    return v30;
  }
LABEL_44:
  __break(1u);
  return result;
}

_QWORD *sub_1BB66B1A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int16 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  uint64_t v102;
  _QWORD v103[6];
  uint64_t v104;
  uint64_t v105;
  _OWORD v106[4];
  _BYTE v107[8];
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;

  sub_1BA6A09F0((uint64_t)a1, (uint64_t)v103, (unint64_t *)&qword_1ED3A7CB8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
  v4 = v103[0];
  v5 = v103[1];
  v7 = v103[2];
  v6 = v103[3];
  v8 = v104;
  v75 = v103[5];
  v77 = v103[4];
  v113 = v105;
  sub_1BB86DD80();
  v9 = v109;
  v10 = *(_QWORD *)(*(_QWORD *)(v109 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v10 + 16) + 16))
  {
    *(_QWORD *)&v109 = *(_QWORD *)(v9 + 56);
    v11 = swift_bridgeObjectRetain();
    v12 = sub_1BA6E42A0(v11);
    sub_1BA6E3FB8(v12);
    swift_release();
    v72 = v109;
  }
  else
  {
    v72 = sub_1BA6E3F38();
    swift_release();
  }
  sub_1BA6A09F0((uint64_t)a1, (uint64_t)v107, (unint64_t *)&qword_1ED3A7CB8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
  if (!v108)
    goto LABEL_11;
  *(_QWORD *)&v109 = v4;
  *((_QWORD *)&v109 + 1) = v5;
  *(_QWORD *)&v110 = v7;
  *((_QWORD *)&v110 + 1) = v6;
  *(_QWORD *)&v111 = v77;
  *((_QWORD *)&v111 + 1) = v75;
  LOWORD(v112) = v8;
  *((_QWORD *)&v112 + 1) = v113;
  v106[0] = v109;
  v106[1] = v110;
  v106[2] = v111;
  v106[3] = v112;
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_11;
  sub_1BAEB22F4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAC69440);
  swift_bridgeObjectRetain();
  v13 = sub_1BA6E35A8(v7, v6);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1BAEB22F4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAC694A8);
LABEL_11:
    sub_1BA6A09F0((uint64_t)a1, (uint64_t)&v85, (unint64_t *)&qword_1ED3A7CB8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
    sub_1BA6A09F0((uint64_t)a1, (uint64_t)v106, (unint64_t *)&qword_1ED3A7CB8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
    if (*((_QWORD *)&v106[0] + 1))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA6E6C54(v77, v75, v8);
      swift_bridgeObjectRetain();
      sub_1BB1E7304(v72, &v94);
      swift_bridgeObjectRelease();
      v32 = v89;
      v33 = v90;
      v34 = v91;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E6CC4(v32, v33, v34);
      swift_bridgeObjectRelease();
      v35 = v95;
      v36 = v96;
      v37 = v97;
      v38 = v98;
      v39 = v99;
      v40 = v101;
      v41 = v102;
      *(_QWORD *)a3 = v94;
      *(_QWORD *)(a3 + 8) = v35;
      *(_QWORD *)(a3 + 16) = v36;
      *(_QWORD *)(a3 + 24) = v37;
      *(_QWORD *)(a3 + 32) = v38;
      *(_QWORD *)(a3 + 40) = v39;
      v42 = v100;
      *(_BYTE *)(a3 + 48) = v100;
      *(_BYTE *)(a3 + 49) = v40;
      *(_QWORD *)(a3 + 56) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA6E6C54(v38, v39, v42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E6CC4(v38, v39, v42);
      return (_QWORD *)swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return (_QWORD *)sub_1BA6A09F0((uint64_t)a1, a3, (unint64_t *)&qword_1ED3A7CB8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
    }
  }
  v15 = *(_QWORD **)(*(_QWORD *)(a2 + 56) + 8 * v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = sub_1BB67FCEC(v15, (uint64_t)&v109);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = *(_QWORD *)(v16 + 40);
    v113 = *(_QWORD *)(v16 + 32);
    v19 = *(_QWORD *)(v16 + 56);
    v78 = *(_QWORD *)(v16 + 48);
    v20 = *(_QWORD *)(v16 + 64);
    v21 = *(_QWORD *)(v16 + 72);
    v22 = *(_BYTE *)(v16 + 80);
    v23 = *(_BYTE *)(v16 + 81);
    v24 = *(_QWORD *)(v16 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v20, v21, v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v20, v21, v22);
    v25 = v19;
    v26 = v17 - 1;
    v76 = v20;
    v71 = v21;
    v70 = v22;
    if (v17 == 1)
    {
      swift_bridgeObjectRetain();
      v27 = v18;
      v28 = v25;
      v29 = v24;
      v30 = v22;
      v31 = v29;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v53 = (_QWORD *)(v16 + 152);
      v27 = v18;
      v28 = v25;
      v54 = v24;
      v30 = v22;
      v31 = v54;
      v55 = v113;
      v56 = v78;
      do
      {
        v57 = *(_OWORD *)(v53 - 7);
        v58 = *(v53 - 5);
        v59 = *(v53 - 4);
        v60 = *((_WORD *)v53 - 4);
        v61 = *v53;
        v85 = v55;
        v86 = v27;
        v87 = v56;
        v88 = v28;
        v89 = v20;
        v90 = v21;
        v91 = v30;
        v92 = v23;
        v93 = v31;
        v79 = v57;
        v80 = v58;
        v81 = v59;
        v82 = *(_OWORD *)(v53 - 3);
        v83 = v60;
        v84 = v61;
        sub_1BB1E6850((uint64_t)&v79, (uint64_t)&v94);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v20, v21, v30);
        swift_bridgeObjectRelease();
        v55 = v94;
        v27 = v95;
        v56 = v96;
        v28 = v97;
        v20 = v98;
        v21 = v99;
        v30 = v100;
        v23 = v101;
        v53 += 8;
        v31 = v102;
        --v26;
      }
      while (v26);
      v78 = v96;
      v113 = v94;
      swift_bridgeObjectRelease();
    }
    v85 = v113;
    v86 = v27;
    v87 = v78;
    v88 = v28;
    v89 = v20;
    v90 = v21;
    v91 = v30;
    v92 = v23;
    v93 = v31;
    sub_1BB1E7304(v72, &v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E6CC4(v20, v21, v30);
    swift_bridgeObjectRelease();
    v62 = v95;
    v63 = v96;
    v64 = v97;
    v65 = v98;
    v66 = v99;
    v67 = v101;
    v68 = v102;
    *(_QWORD *)a3 = v94;
    *(_QWORD *)(a3 + 8) = v62;
    *(_QWORD *)(a3 + 16) = v63;
    *(_QWORD *)(a3 + 24) = v64;
    *(_QWORD *)(a3 + 32) = v65;
    *(_QWORD *)(a3 + 40) = v66;
    v69 = v100;
    *(_BYTE *)(a3 + 48) = v100;
    *(_BYTE *)(a3 + 49) = v67;
    *(_QWORD *)(a3 + 56) = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v65, v66, v69);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E6CC4(v65, v66, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E6CC4(v76, v71, v70);
    swift_bridgeObjectRelease();
    v52 = a1;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1BB1E7304(v72, &v94);
    swift_bridgeObjectRelease();
    v44 = v95;
    v45 = v96;
    v46 = v97;
    v47 = v98;
    v48 = v99;
    v49 = v101;
    v50 = v102;
    *(_QWORD *)a3 = v94;
    *(_QWORD *)(a3 + 8) = v44;
    *(_QWORD *)(a3 + 16) = v45;
    *(_QWORD *)(a3 + 24) = v46;
    *(_QWORD *)(a3 + 32) = v47;
    *(_QWORD *)(a3 + 40) = v48;
    v51 = v100;
    *(_BYTE *)(a3 + 48) = v100;
    *(_BYTE *)(a3 + 49) = v49;
    *(_QWORD *)(a3 + 56) = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v47, v48, v51);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E6CC4(v47, v48, v51);
    swift_bridgeObjectRelease();
    v52 = a1;
  }
  return sub_1BAEB22F4(v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAC694A8);
}

uint64_t sub_1BB66B870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t (*a6)(uint64_t), uint64_t (*a7)(uint64_t, uint64_t), void (*a8)(_QWORD), void (*a9)(uint64_t))
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v49;
  uint64_t v50;

  v12 = v9;
  sub_1BB86DD80();
  v15 = *(_QWORD *)(*(_QWORD *)(v49 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v15 + 16) + 16))
  {
    v50 = *(_QWORD *)(v49 + 56);
    v16 = swift_bridgeObjectRetain();
    v17 = sub_1BA6E42A0(v16);
    sub_1BA6E3FB8(v17);
    swift_release();
    v18 = v50;
    if (a1)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  v18 = sub_1BA6E3F38();
  swift_release();
  if (!a1)
    goto LABEL_14;
LABEL_3:
  if (!*(_QWORD *)(a4 + 16))
  {
LABEL_16:
    swift_retain();
    a5(v18);
    swift_release();
    swift_bridgeObjectRelease();
    v30 = a6(a2);
LABEL_17:
    swift_release();
    return v30;
  }
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(_QWORD *)(a1 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  v21 = sub_1BA6E35A8(v19, v20);
  if ((v22 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a7(v23, a1);
  result = swift_bridgeObjectRelease();
  v26 = v24 >> 62;
  if (!(v24 >> 62))
  {
    v27 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v27)
      goto LABEL_7;
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  v27 = sub_1BB873F30();
  result = swift_bridgeObjectRelease();
  if (!v27)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    a5(v18);
    swift_bridgeObjectRelease();
    v30 = a6(a2);
    swift_release();
    goto LABEL_17;
  }
LABEL_7:
  v28 = v24 & 0xC000000000000001;
  if ((v24 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    result = swift_retain();
    if ((v27 & 0x8000000000000000) == 0)
      goto LABEL_10;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  result = MEMORY[0x1BCCE4630](0, v24);
  if (v27 < 0)
    goto LABEL_40;
LABEL_10:
  if (v26)
  {
    swift_bridgeObjectRetain();
    v31 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (v31 >= 1)
    {
      v26 = v24 >> 62;
      v28 = v24 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      v29 = sub_1BB873F30();
      result = swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v29 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v29)
    goto LABEL_42;
LABEL_21:
  if (v29 < v27)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v28 && v27 != 1)
  {
    a8(0);
    result = 1;
    do
    {
      v32 = result + 1;
      sub_1BB873CFC();
      result = v32;
    }
    while (v27 != v32);
  }
  if (!v26)
  {
    v33 = (v24 & 0xFFFFFFFFFFFFFF8) + 32;
    v34 = 1;
    v35 = __OFSUB__(v27, 1);
    v37 = v27 - 1;
    v36 = (v37 < 0) ^ v35 | (v37 == 0);
    if (v37)
      goto LABEL_28;
LABEL_33:
    swift_retain();
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  sub_1BB873F3C();
  v33 = v40;
  v34 = v41;
  v43 = v42;
  result = swift_bridgeObjectRelease_n();
  v43 >>= 1;
  v35 = __OFSUB__(v43, v34);
  v37 = v43 - v34;
  v36 = (v37 < 0) ^ v35 | (v37 == 0);
  if (!v37)
    goto LABEL_33;
LABEL_28:
  if (!v36)
  {
    swift_retain();
    swift_unknownObjectRetain();
    v38 = v33 + 8 * v34;
    do
    {
      v38 += 8;
      v39 = swift_retain();
      a9(v39);
      swift_release();
      swift_release();
      --v37;
    }
    while (v37);
    swift_unknownObjectRelease();
LABEL_34:
    v44 = ((uint64_t (*)(uint64_t))a5)(v18);
    swift_release();
    swift_bridgeObjectRelease();
    v30 = v44;
    v45 = a6(a2);
    if (!v12)
      v30 = v45;
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    return v30;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1BB66BD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t (*v45)(_QWORD);
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;

  v46 = a6;
  v47 = a7;
  v44 = a4;
  v45 = a5;
  v8 = v7;
  v51 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v48 = v11;
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v53 = (char *)&v44 - v13;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v50 = (uint64_t)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v44 - v17;
  v19 = type metadata accessor for FormatNodeStateData.Data();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for FormatAdMetricsData();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = a1;
  swift_beginAccess();
  v54 = v8;
  v26 = *(_QWORD *)(v8 + 16);
  v27 = *(_QWORD *)(v8 + 24);
  swift_bridgeObjectRetain();
  v49 = sub_1BA717D44(v26, v27);
  v29 = v28;
  swift_bridgeObjectRelease();
  v52 = a2;
  v30 = v55;
  sub_1BB72E168(a2, (uint64_t)v25);
  if (v30)
    return swift_bridgeObjectRelease();
  v55 = v12;
  sub_1BA4C2DD8((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatAdMetricsData);
  swift_storeEnumTagMultiPayload();
  sub_1BA4C2DD8((uint64_t)v22, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  v32 = v50;
  sub_1BA5E01A4((uint64_t)v18, v50, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v33 = v32;
  v34 = v49;
  sub_1BA722740(v33, v49, v29);
  swift_endAccess();
  sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  KeyPath = swift_getKeyPath();
  v56 = *(_QWORD *)(v54 + 48);
  v36 = v56;
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v36);
  v37 = v52;
  sub_1BA717E88();
  v38 = v34;
  v51 = KeyPath;
  sub_1BA719718(v36);
  v39 = v54;
  swift_beginAccess();
  swift_retain();
  v40 = swift_bridgeObjectRetain();
  v50 = sub_1BB67D4D4(v40, v37);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_retain();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v41 = (_QWORD *)swift_allocObject();
  v41[2] = v38;
  v41[3] = v29;
  v41[4] = v37;
  v41[5] = v39;
  v42 = v45(0);
  v46(v42);
  v43 = v53;
  sub_1BB86D534();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v43, v48);
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatAdMetricsData);
}

void sub_1BB66C1E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  __int128 *v11;
  uint64_t *v12;
  _BYTE *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  __int128 v21;
  __int128 v22[8];
  __int128 v23[8];
  char v24;
  __int128 v25[8];
  __int128 v26[8];
  char v27;
  _BYTE v28[136];
  _BYTE v29[136];
  _BYTE v30[136];
  _BYTE v31[16];
  _BYTE v32[136];
  __int128 v33[8];
  char v34;
  _BYTE v35[128];
  _BYTE v36[128];

  sub_1BA895BCC(v2, (uint64_t)v29);
  v6 = sub_1BA895C08((uint64_t)v29);
  if (!v6)
  {
    v11 = (__int128 *)sub_1BA895E68((uint64_t)v29);
    sub_1BA896178(v11, (uint64_t)v23);
    sub_1BA896178(v23, (uint64_t)v26);
    sub_1BA895FE8(v26, (uint64_t)v36);
    sub_1BB6730A4(a1, (uint64_t)v25);
    if (v3)
      return;
    sub_1BA895FE8(v25, (uint64_t)&v21);
    sub_1BA895FE8(&v21, (uint64_t)v22);
    nullsub_1(v22);
    sub_1BA896178(v22, (uint64_t)v28);
    sub_1BAE73BA4((uint64_t)v28);
LABEL_12:
    v13 = v28;
    goto LABEL_13;
  }
  if (v6 == 1)
  {
    v7 = sub_1BA895E68((uint64_t)v29);
    sub_1BA53BAD8(v7, (uint64_t)v30);
    sub_1BA53BAD8((uint64_t)v30, (uint64_t)v32);
    v8 = sub_1BA895ED8((uint64_t)v32);
    v9 = sub_1BA895EE4((uint64_t)v32);
    if (v8 == 1)
    {
      v10 = *(_BYTE *)(v9 + 8);
      sub_1BA742954(a1, *(_QWORD *)v9);
      if (v3)
        return;
      *(_QWORD *)&v26[0] = *(_QWORD *)&v23[0];
      BYTE8(v26[0]) = v10;
      sub_1BAE992F4((uint64_t)v26);
    }
    else
    {
      v33[0] = *(_OWORD *)v9;
      v14 = *(_OWORD *)(v9 + 16);
      v15 = *(_OWORD *)(v9 + 32);
      v16 = *(_OWORD *)(v9 + 64);
      v33[3] = *(_OWORD *)(v9 + 48);
      v33[4] = v16;
      v33[1] = v14;
      v33[2] = v15;
      v17 = *(_OWORD *)(v9 + 80);
      v18 = *(_OWORD *)(v9 + 96);
      v19 = *(_OWORD *)(v9 + 112);
      v34 = *(_BYTE *)(v9 + 128);
      v33[6] = v18;
      v33[7] = v19;
      v33[5] = v17;
      sub_1BA895FE8(v33, (uint64_t)v35);
      sub_1BB6730A4(a1, (uint64_t)v25);
      if (v3)
        return;
      v20 = v34;
      sub_1BA895FE8(v25, (uint64_t)v22);
      sub_1BA895FE8(v22, (uint64_t)v23);
      v24 = v20;
      v27 = v20;
      v26[6] = v23[6];
      v26[7] = v23[7];
      v26[2] = v23[2];
      v26[3] = v23[3];
      v26[4] = v23[4];
      v26[5] = v23[5];
      v26[0] = v23[0];
      v26[1] = v23[1];
      sub_1BAE99358((uint64_t)v26);
    }
    sub_1BA53BAD8((uint64_t)v26, (uint64_t)v28);
    sub_1BAE73B40((uint64_t)v28);
    goto LABEL_12;
  }
  v12 = (uint64_t *)sub_1BA895E68((uint64_t)v29);
  sub_1BB6806E8(v12, (uint64_t)v31);
  v13 = (_BYTE *)v2;
LABEL_13:
  sub_1BA895BCC((uint64_t)v13, a2);
}

uint64_t sub_1BB66C43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  double v49;
  uint64_t v50;
  double Height;
  double Width;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t KeyPath;
  _QWORD *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  _QWORD *v94;
  void *v95;
  uint64_t v96;
  void *v97;
  void *v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  double v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void *v130;
  unsigned __int8 v131;
  uint64_t v132;
  CGRect v133;
  CGRect v134;

  v4 = v3;
  v114 = a3;
  sub_1BB680BB4();
  v103 = *(_QWORD *)(v7 - 8);
  v104 = v7;
  MEMORY[0x1E0C80A78](v7);
  v107 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v105 = *(_QWORD *)(v9 - 8);
  v106 = v9;
  MEMORY[0x1E0C80A78](v9);
  v108 = (char *)&v89 - v10;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v112 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v113 = (char *)&v89 - v14;
  v15 = type metadata accessor for FormatNodeStateData.Data();
  v109 = *(_QWORD *)(v15 - 8);
  v110 = v15;
  MEMORY[0x1E0C80A78](v15);
  v111 = (uint64_t *)((char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v132 = a1;
  swift_beginAccess();
  v17 = swift_bridgeObjectRetain();
  v116 = a2;
  v18 = sub_1BA707E14(v17, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v19 = v4[2];
  v20 = v4[3];
  swift_retain();
  swift_bridgeObjectRetain();
  v115 = sub_1BA717D44(v19, v20);
  v22 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  v23 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  v24 = (uint64_t *)(*(_QWORD *)(v18 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v26 = *v24;
  v25 = v24[1];
  v27 = v4[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v117;
  v29 = sub_1BB66B870(v27, v18, v26, v25, (void (*)(uint64_t))sub_1BAADD638, sub_1BB66FB1C, (uint64_t (*)(uint64_t, uint64_t))sub_1BB67F4DC, (void (*)(_QWORD))type metadata accessor for FormatIssueCoverNodeStyle, (void (*)(uint64_t))sub_1BAADC6C8);
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v100 = v23;
  v101 = v18;
  v117 = v29;
  v102 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v118 = v4[9];
  swift_retain();
  sub_1BB688270(v116, (uint64_t)&v124);
  v90 = 0;
  v94 = v4;
  swift_release();
  v30 = v125;
  v95 = v124;
  v96 = v125;
  v31 = v126;
  v32 = v127;
  v33 = v128;
  v34 = v129;
  v35 = v130;
  v97 = v126;
  v98 = v130;
  v36 = v131;
  v99 = v131;
  v37 = v110;
  v38 = (uint64_t)v111;
  *v111 = v124;
  *(_QWORD *)(v38 + 8) = v30;
  *(_QWORD *)(v38 + 16) = v31;
  *(_QWORD *)(v38 + 24) = v32;
  *(_QWORD *)(v38 + 32) = v33;
  *(_QWORD *)(v38 + 40) = v34;
  *(_QWORD *)(v38 + 48) = v35;
  *(_BYTE *)(v38 + 56) = v36;
  swift_storeEnumTagMultiPayload();
  v39 = (uint64_t)v113;
  v40 = *(_QWORD *)(v114 + 24);
  sub_1BA4C2DD8(v38, (uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v109 + 56))(v39, 0, 1, v37);
  v41 = v112;
  sub_1BA5E01A4(v39, v112, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v114 = v40;
  swift_beginAccess();
  v42 = v102;
  swift_bridgeObjectRetain();
  v91 = v32;
  v92 = v33;
  v93 = v34;
  sub_1BA8996DC(v95, v96, v97, v32, v33, v34, v98, v99);
  sub_1BA722740(v41, v115, v42);
  swift_endAccess();
  sub_1BA5C699C(v39, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  sub_1BA4A2E80(v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  v43 = v101;
  v44 = v117;
  if (v117)
  {
    v45 = *(unsigned __int8 *)(v117 + 88);
    v46 = 0;
    v47 = v90;
    if (v45 <= 0xFD)
    {
      v50 = *(_QWORD *)(v117 + 72);
      v48 = *(char **)(v117 + 80);
      if ((v45 & 0x80) != 0)
      {
        v133.origin.x = 0.0;
        v133.origin.y = 0.0;
        v133.size.width = 0.0;
        v133.size.height = 0.0;
        Height = CGRectGetHeight(v133);
        v134.origin.x = 0.0;
        v134.origin.y = 0.0;
        v134.size.width = 0.0;
        v134.size.height = 0.0;
        Width = CGRectGetWidth(v134);
        if (Width >= Height)
          Width = Height;
        v49 = Width * 0.5;
        sub_1BA6E6CC4(v50, (uint64_t)v48, v45);
        v48 = (char *)&unk_1E724D890;
      }
      else
      {
        v49 = *(double *)(v117 + 72);
        sub_1BA6F2B04(*(uint64_t *)&v49, *(_QWORD *)(v117 + 80), *(_BYTE *)(v117 + 88));
      }
      v44 = v117;
    }
    else
    {
      v48 = 0;
      v49 = 0.0;
    }
    if (*(unsigned __int8 *)(v44 + 176) != 254)
      v46 = *(_QWORD *)(v44 + 96);
  }
  else
  {
    v48 = 0;
    v46 = 0;
    v49 = 0.0;
    v47 = v90;
  }
  v53 = (uint64_t *)(*(_QWORD *)(v43 + v100) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v54 = *v53;
  v55 = v53[1];
  v56 = v94[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57 = sub_1BA6E3AA0(v56, v43, v54, v55, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
  if (v47)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA899748(v95, v96, v97, v91, v92, v93, v98, v99);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v59 = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v113 = v48;
  if (v59 && (swift_beginAccess(), (v60 = *(_QWORD *)(v59 + 72)) != 0) && *(_QWORD *)(v60 + 16))
  {
    v61 = *(_QWORD *)(v59 + 48);
    v62 = *(_QWORD *)(v59 + 56);
    v63 = *(unsigned __int8 *)(v59 + 64);
    swift_retain();
    swift_retain();
    v64 = swift_bridgeObjectRetain();
    v76 = sub_1BB67D220(v64, v43);
    swift_bridgeObjectRelease();
    swift_release();
    if (v63)
      v77 = 0;
    else
      v77 = v62;
    if (v63)
      v78 = 0;
    else
      v78 = v61;
    type metadata accessor for FormatAnimationData();
    v79 = swift_allocObject();
    v112 = v59;
    *(_QWORD *)(v79 + 16) = v59;
    *(_QWORD *)(v79 + 24) = v78;
    *(_QWORD *)(v79 + 32) = v77;
    *(_BYTE *)(v79 + 40) = v63;
    v80 = v114;
    *(_QWORD *)(v79 + 48) = v76;
    swift_beginAccess();
    swift_retain_n();
    v81 = v102;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v118 = *(_QWORD *)(v80 + 32);
    *(_QWORD *)(v80 + 32) = 0x8000000000000000;
    sub_1BA81C03C(v79, v115, v81, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v80 + 32) = v118;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
  }
  else
  {
    v112 = v59;
  }
  KeyPath = swift_getKeyPath();
  v66 = v94;
  v124 = (void *)v94[4];
  v67 = (unint64_t)v124;
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v67);
  sub_1BA717E88();
  v114 = KeyPath;
  sub_1BA719718(v67);
  swift_beginAccess();
  swift_retain();
  v68 = swift_bridgeObjectRetain();
  v111 = (_QWORD *)sub_1BB67D4D4(v68, v43);
  swift_bridgeObjectRelease();
  swift_release();
  v69 = v116 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
  v123 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v69 + *(int *)(type metadata accessor for GroupLayoutContext() + 40)) + 24)
                   + 24);
  v124 = v95;
  v125 = v96;
  v126 = v97;
  v127 = v91;
  v128 = v92;
  v129 = v93;
  v130 = v98;
  v131 = v99;
  v70 = *((_BYTE *)v66 + 128);
  if (v113)
  {
    v71 = *((_QWORD *)v113 + 2);
    if (v71)
    {
      v72 = 0;
      v73 = 0;
      do
      {
        v74 = v113[v73++ + 32];
        v75 = qword_1BB93ABF8[v74];
        if ((v75 & ~v72) == 0)
          v75 = 0;
        v72 |= v75;
      }
      while (v71 != v73);
      sub_1BA8996DC(v95, v96, v97, v91, v92, v93, v98, v99);
      swift_retain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA8996DC(v95, v96, v97, v91, v92, v93, v98, v99);
      swift_retain();
      swift_bridgeObjectRelease();
      v72 = 0;
    }
  }
  else
  {
    sub_1BA8996DC(v95, v96, v97, v91, v92, v93, v98, v99);
    swift_retain();
    v49 = 0.0;
    v72 = -1;
  }
  v83 = v115;
  LOBYTE(v118) = v70;
  v119 = v46;
  v120 = v49;
  v121 = v72;
  v122 = 0;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B06D8, (uint64_t (*)(void))sub_1BA831688, (uint64_t)&type metadata for FormatLayoutValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
  v84 = type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BA7399D0();
  sub_1BB680C98();
  sub_1BA4A2870(&qword_1ED39D730, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for IssueCoverViewLayoutAttributesFactory);
  v116 = v84;
  sub_1BB86D684();
  v85 = (_QWORD *)swift_allocObject();
  v87 = v101;
  v86 = v102;
  v85[2] = v83;
  v85[3] = v86;
  v88 = v94;
  v85[4] = v87;
  v85[5] = v88;
  v85[6] = v117;
  sub_1BA735094();
  sub_1BA735138();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86D45C();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BA899748(v95, v96, v97, v91, v92, v93, v98, v99);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v107, v104);
  return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v108, v106);
}

uint64_t sub_1BB66D0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  double v49;
  uint64_t v50;
  double Height;
  double Width;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t KeyPath;
  _QWORD *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  _QWORD *v94;
  void *v95;
  uint64_t v96;
  void *v97;
  void *v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  double v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void *v130;
  unsigned __int8 v131;
  uint64_t v132;
  CGRect v133;
  CGRect v134;

  v4 = v3;
  v114 = a3;
  sub_1BB680BB4();
  v103 = *(_QWORD *)(v7 - 8);
  v104 = v7;
  MEMORY[0x1E0C80A78](v7);
  v107 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v105 = *(_QWORD *)(v9 - 8);
  v106 = v9;
  MEMORY[0x1E0C80A78](v9);
  v108 = (char *)&v89 - v10;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v112 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v113 = (char *)&v89 - v14;
  v15 = type metadata accessor for FormatNodeStateData.Data();
  v109 = *(_QWORD *)(v15 - 8);
  v110 = v15;
  MEMORY[0x1E0C80A78](v15);
  v111 = (uint64_t *)((char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v132 = a1;
  swift_beginAccess();
  v17 = swift_bridgeObjectRetain();
  v116 = a2;
  v18 = sub_1BA707E14(v17, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v19 = v4[2];
  v20 = v4[3];
  swift_retain();
  swift_bridgeObjectRetain();
  v115 = sub_1BA717D44(v19, v20);
  v22 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  v23 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  v24 = (uint64_t *)(*(_QWORD *)(v18 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v26 = *v24;
  v25 = v24[1];
  v27 = v4[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v117;
  v29 = sub_1BB66B870(v27, v18, v26, v25, (void (*)(uint64_t))sub_1BAADD638, sub_1BB66FB1C, (uint64_t (*)(uint64_t, uint64_t))sub_1BB67F4DC, (void (*)(_QWORD))type metadata accessor for FormatIssueCoverNodeStyle, (void (*)(uint64_t))sub_1BAADC6C8);
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v100 = v23;
  v101 = v18;
  v117 = v29;
  v102 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v118 = v4[9];
  swift_retain();
  sub_1BB688270(v116, (uint64_t)&v124);
  v90 = 0;
  v94 = v4;
  swift_release();
  v30 = v125;
  v95 = v124;
  v96 = v125;
  v31 = v126;
  v32 = v127;
  v33 = v128;
  v34 = v129;
  v35 = v130;
  v97 = v126;
  v98 = v130;
  v36 = v131;
  v99 = v131;
  v37 = v110;
  v38 = (uint64_t)v111;
  *v111 = v124;
  *(_QWORD *)(v38 + 8) = v30;
  *(_QWORD *)(v38 + 16) = v31;
  *(_QWORD *)(v38 + 24) = v32;
  *(_QWORD *)(v38 + 32) = v33;
  *(_QWORD *)(v38 + 40) = v34;
  *(_QWORD *)(v38 + 48) = v35;
  *(_BYTE *)(v38 + 56) = v36;
  swift_storeEnumTagMultiPayload();
  v39 = (uint64_t)v113;
  v40 = *(_QWORD *)(v114 + 24);
  sub_1BA4C2DD8(v38, (uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v109 + 56))(v39, 0, 1, v37);
  v41 = v112;
  sub_1BA5E01A4(v39, v112, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v114 = v40;
  swift_beginAccess();
  v42 = v102;
  swift_bridgeObjectRetain();
  v91 = v32;
  v92 = v33;
  v93 = v34;
  sub_1BA8996DC(v95, v96, v97, v32, v33, v34, v98, v99);
  sub_1BA722740(v41, v115, v42);
  swift_endAccess();
  sub_1BA5C699C(v39, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  sub_1BA4A2E80(v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  v43 = v101;
  v44 = v117;
  if (v117)
  {
    v45 = *(unsigned __int8 *)(v117 + 88);
    v46 = 0;
    v47 = v90;
    if (v45 <= 0xFD)
    {
      v50 = *(_QWORD *)(v117 + 72);
      v48 = *(char **)(v117 + 80);
      if ((v45 & 0x80) != 0)
      {
        v133.origin.x = 0.0;
        v133.origin.y = 0.0;
        v133.size.width = 0.0;
        v133.size.height = 0.0;
        Height = CGRectGetHeight(v133);
        v134.origin.x = 0.0;
        v134.origin.y = 0.0;
        v134.size.width = 0.0;
        v134.size.height = 0.0;
        Width = CGRectGetWidth(v134);
        if (Width >= Height)
          Width = Height;
        v49 = Width * 0.5;
        sub_1BA6E6CC4(v50, (uint64_t)v48, v45);
        v48 = (char *)&unk_1E724D8B8;
      }
      else
      {
        v49 = *(double *)(v117 + 72);
        sub_1BA6F2B04(*(uint64_t *)&v49, *(_QWORD *)(v117 + 80), *(_BYTE *)(v117 + 88));
      }
      v44 = v117;
    }
    else
    {
      v48 = 0;
      v49 = 0.0;
    }
    if (*(unsigned __int8 *)(v44 + 176) != 254)
      v46 = *(_QWORD *)(v44 + 96);
  }
  else
  {
    v48 = 0;
    v46 = 0;
    v49 = 0.0;
    v47 = v90;
  }
  v53 = (uint64_t *)(*(_QWORD *)(v43 + v100) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v54 = *v53;
  v55 = v53[1];
  v56 = v94[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57 = sub_1BA6E3AA0(v56, v43, v54, v55, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
  if (v47)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA899748(v95, v96, v97, v91, v92, v93, v98, v99);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v59 = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v113 = v48;
  if (v59 && (swift_beginAccess(), (v60 = *(_QWORD *)(v59 + 72)) != 0) && *(_QWORD *)(v60 + 16))
  {
    v61 = *(_QWORD *)(v59 + 48);
    v62 = *(_QWORD *)(v59 + 56);
    v63 = *(unsigned __int8 *)(v59 + 64);
    swift_retain();
    swift_retain();
    v64 = swift_bridgeObjectRetain();
    v76 = sub_1BB67D220(v64, v43);
    swift_bridgeObjectRelease();
    swift_release();
    if (v63)
      v77 = 0;
    else
      v77 = v62;
    if (v63)
      v78 = 0;
    else
      v78 = v61;
    type metadata accessor for FormatAnimationData();
    v79 = swift_allocObject();
    v112 = v59;
    *(_QWORD *)(v79 + 16) = v59;
    *(_QWORD *)(v79 + 24) = v78;
    *(_QWORD *)(v79 + 32) = v77;
    *(_BYTE *)(v79 + 40) = v63;
    v80 = v114;
    *(_QWORD *)(v79 + 48) = v76;
    swift_beginAccess();
    swift_retain_n();
    v81 = v102;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v118 = *(_QWORD *)(v80 + 32);
    *(_QWORD *)(v80 + 32) = 0x8000000000000000;
    sub_1BA81C03C(v79, v115, v81, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v80 + 32) = v118;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
  }
  else
  {
    v112 = v59;
  }
  KeyPath = swift_getKeyPath();
  v66 = v94;
  v124 = (void *)v94[4];
  v67 = (unint64_t)v124;
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v67);
  sub_1BA717E88();
  v114 = KeyPath;
  sub_1BA719718(v67);
  swift_beginAccess();
  swift_retain();
  v68 = swift_bridgeObjectRetain();
  v111 = (_QWORD *)sub_1BB67D4D4(v68, v43);
  swift_bridgeObjectRelease();
  swift_release();
  v69 = v116 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
  v123 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v69 + *(int *)(type metadata accessor for GroupLayoutContext() + 40)) + 24)
                   + 24);
  v124 = v95;
  v125 = v96;
  v126 = v97;
  v127 = v91;
  v128 = v92;
  v129 = v93;
  v130 = v98;
  v131 = v99;
  v70 = *((_BYTE *)v66 + 128);
  if (v113)
  {
    v71 = *((_QWORD *)v113 + 2);
    if (v71)
    {
      v72 = 0;
      v73 = 0;
      do
      {
        v74 = v113[v73++ + 32];
        v75 = qword_1BB93ABF8[v74];
        if ((v75 & ~v72) == 0)
          v75 = 0;
        v72 |= v75;
      }
      while (v71 != v73);
      sub_1BA8996DC(v95, v96, v97, v91, v92, v93, v98, v99);
      swift_retain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA8996DC(v95, v96, v97, v91, v92, v93, v98, v99);
      swift_retain();
      swift_bridgeObjectRelease();
      v72 = 0;
    }
  }
  else
  {
    sub_1BA8996DC(v95, v96, v97, v91, v92, v93, v98, v99);
    swift_retain();
    v49 = 0.0;
    v72 = -1;
  }
  v83 = v115;
  LOBYTE(v118) = v70;
  v119 = v46;
  v120 = v49;
  v121 = v72;
  v122 = 0;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B06D8, (uint64_t (*)(void))sub_1BA831688, (uint64_t)&type metadata for FormatLayoutValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
  v84 = type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BA7399D0();
  sub_1BB680C98();
  sub_1BA4A2870(&qword_1ED39D730, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for IssueCoverViewLayoutAttributesFactory);
  v116 = v84;
  sub_1BB86D684();
  v85 = (_QWORD *)swift_allocObject();
  v87 = v101;
  v86 = v102;
  v85[2] = v83;
  v85[3] = v86;
  v88 = v94;
  v85[4] = v87;
  v85[5] = v88;
  v85[6] = v117;
  sub_1BA7099D4();
  sub_1BA709A78();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86D45C();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BA899748(v95, v96, v97, v91, v92, v93, v98, v99);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v107, v104);
  return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v108, v106);
}

uint64_t sub_1BB66DD7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  double v49;
  uint64_t v50;
  double Height;
  double Width;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t KeyPath;
  _QWORD *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  _QWORD *v94;
  void *v95;
  uint64_t v96;
  void *v97;
  void *v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  double v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void *v130;
  unsigned __int8 v131;
  uint64_t v132;
  CGRect v133;
  CGRect v134;

  v4 = v3;
  v114 = a3;
  sub_1BB680BB4();
  v103 = *(_QWORD *)(v7 - 8);
  v104 = v7;
  MEMORY[0x1E0C80A78](v7);
  v107 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v105 = *(_QWORD *)(v9 - 8);
  v106 = v9;
  MEMORY[0x1E0C80A78](v9);
  v108 = (char *)&v89 - v10;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v112 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v113 = (char *)&v89 - v14;
  v15 = type metadata accessor for FormatNodeStateData.Data();
  v109 = *(_QWORD *)(v15 - 8);
  v110 = v15;
  MEMORY[0x1E0C80A78](v15);
  v111 = (uint64_t *)((char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v132 = a1;
  swift_beginAccess();
  v17 = swift_bridgeObjectRetain();
  v116 = a2;
  v18 = sub_1BA707E14(v17, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v19 = v4[2];
  v20 = v4[3];
  swift_retain();
  swift_bridgeObjectRetain();
  v115 = sub_1BA717D44(v19, v20);
  v22 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  v23 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  v24 = (uint64_t *)(*(_QWORD *)(v18 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v26 = *v24;
  v25 = v24[1];
  v27 = v4[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v117;
  v29 = sub_1BB66B870(v27, v18, v26, v25, (void (*)(uint64_t))sub_1BAADD638, sub_1BB66FB1C, (uint64_t (*)(uint64_t, uint64_t))sub_1BB67F4DC, (void (*)(_QWORD))type metadata accessor for FormatIssueCoverNodeStyle, (void (*)(uint64_t))sub_1BAADC6C8);
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v100 = v23;
  v101 = v18;
  v117 = v29;
  v102 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v118 = v4[9];
  swift_retain();
  sub_1BB688270(v116, (uint64_t)&v124);
  v90 = 0;
  v94 = v4;
  swift_release();
  v30 = v125;
  v95 = v124;
  v96 = v125;
  v31 = v126;
  v32 = v127;
  v33 = v128;
  v34 = v129;
  v35 = v130;
  v97 = v126;
  v98 = v130;
  v36 = v131;
  v99 = v131;
  v37 = v110;
  v38 = (uint64_t)v111;
  *v111 = v124;
  *(_QWORD *)(v38 + 8) = v30;
  *(_QWORD *)(v38 + 16) = v31;
  *(_QWORD *)(v38 + 24) = v32;
  *(_QWORD *)(v38 + 32) = v33;
  *(_QWORD *)(v38 + 40) = v34;
  *(_QWORD *)(v38 + 48) = v35;
  *(_BYTE *)(v38 + 56) = v36;
  swift_storeEnumTagMultiPayload();
  v39 = (uint64_t)v113;
  v40 = *(_QWORD *)(v114 + 24);
  sub_1BA4C2DD8(v38, (uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v109 + 56))(v39, 0, 1, v37);
  v41 = v112;
  sub_1BA5E01A4(v39, v112, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v114 = v40;
  swift_beginAccess();
  v42 = v102;
  swift_bridgeObjectRetain();
  v91 = v32;
  v92 = v33;
  v93 = v34;
  sub_1BA8996DC(v95, v96, v97, v32, v33, v34, v98, v99);
  sub_1BA722740(v41, v115, v42);
  swift_endAccess();
  sub_1BA5C699C(v39, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  sub_1BA4A2E80(v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  v43 = v101;
  v44 = v117;
  if (v117)
  {
    v45 = *(unsigned __int8 *)(v117 + 88);
    v46 = 0;
    v47 = v90;
    if (v45 <= 0xFD)
    {
      v50 = *(_QWORD *)(v117 + 72);
      v48 = *(char **)(v117 + 80);
      if ((v45 & 0x80) != 0)
      {
        v133.origin.x = 0.0;
        v133.origin.y = 0.0;
        v133.size.width = 0.0;
        v133.size.height = 0.0;
        Height = CGRectGetHeight(v133);
        v134.origin.x = 0.0;
        v134.origin.y = 0.0;
        v134.size.width = 0.0;
        v134.size.height = 0.0;
        Width = CGRectGetWidth(v134);
        if (Width >= Height)
          Width = Height;
        v49 = Width * 0.5;
        sub_1BA6E6CC4(v50, (uint64_t)v48, v45);
        v48 = (char *)&unk_1E724D8E0;
      }
      else
      {
        v49 = *(double *)(v117 + 72);
        sub_1BA6F2B04(*(uint64_t *)&v49, *(_QWORD *)(v117 + 80), *(_BYTE *)(v117 + 88));
      }
      v44 = v117;
    }
    else
    {
      v48 = 0;
      v49 = 0.0;
    }
    if (*(unsigned __int8 *)(v44 + 176) != 254)
      v46 = *(_QWORD *)(v44 + 96);
  }
  else
  {
    v48 = 0;
    v46 = 0;
    v49 = 0.0;
    v47 = v90;
  }
  v53 = (uint64_t *)(*(_QWORD *)(v43 + v100) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v54 = *v53;
  v55 = v53[1];
  v56 = v94[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57 = sub_1BA6E3AA0(v56, v43, v54, v55, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
  if (v47)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA899748(v95, v96, v97, v91, v92, v93, v98, v99);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v59 = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v113 = v48;
  if (v59 && (swift_beginAccess(), (v60 = *(_QWORD *)(v59 + 72)) != 0) && *(_QWORD *)(v60 + 16))
  {
    v61 = *(_QWORD *)(v59 + 48);
    v62 = *(_QWORD *)(v59 + 56);
    v63 = *(unsigned __int8 *)(v59 + 64);
    swift_retain();
    swift_retain();
    v64 = swift_bridgeObjectRetain();
    v76 = sub_1BB67D220(v64, v43);
    swift_bridgeObjectRelease();
    swift_release();
    if (v63)
      v77 = 0;
    else
      v77 = v62;
    if (v63)
      v78 = 0;
    else
      v78 = v61;
    type metadata accessor for FormatAnimationData();
    v79 = swift_allocObject();
    v112 = v59;
    *(_QWORD *)(v79 + 16) = v59;
    *(_QWORD *)(v79 + 24) = v78;
    *(_QWORD *)(v79 + 32) = v77;
    *(_BYTE *)(v79 + 40) = v63;
    v80 = v114;
    *(_QWORD *)(v79 + 48) = v76;
    swift_beginAccess();
    swift_retain_n();
    v81 = v102;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v118 = *(_QWORD *)(v80 + 32);
    *(_QWORD *)(v80 + 32) = 0x8000000000000000;
    sub_1BA81C03C(v79, v115, v81, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v80 + 32) = v118;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
  }
  else
  {
    v112 = v59;
  }
  KeyPath = swift_getKeyPath();
  v66 = v94;
  v124 = (void *)v94[4];
  v67 = (unint64_t)v124;
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v67);
  sub_1BA717E88();
  v114 = KeyPath;
  sub_1BA719718(v67);
  swift_beginAccess();
  swift_retain();
  v68 = swift_bridgeObjectRetain();
  v111 = (_QWORD *)sub_1BB67D4D4(v68, v43);
  swift_bridgeObjectRelease();
  swift_release();
  v69 = v116 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
  v123 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v69 + *(int *)(type metadata accessor for GroupLayoutContext() + 40)) + 24)
                   + 24);
  v124 = v95;
  v125 = v96;
  v126 = v97;
  v127 = v91;
  v128 = v92;
  v129 = v93;
  v130 = v98;
  v131 = v99;
  v70 = *((_BYTE *)v66 + 128);
  if (v113)
  {
    v71 = *((_QWORD *)v113 + 2);
    if (v71)
    {
      v72 = 0;
      v73 = 0;
      do
      {
        v74 = v113[v73++ + 32];
        v75 = qword_1BB93ABF8[v74];
        if ((v75 & ~v72) == 0)
          v75 = 0;
        v72 |= v75;
      }
      while (v71 != v73);
      sub_1BA8996DC(v95, v96, v97, v91, v92, v93, v98, v99);
      swift_retain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA8996DC(v95, v96, v97, v91, v92, v93, v98, v99);
      swift_retain();
      swift_bridgeObjectRelease();
      v72 = 0;
    }
  }
  else
  {
    sub_1BA8996DC(v95, v96, v97, v91, v92, v93, v98, v99);
    swift_retain();
    v49 = 0.0;
    v72 = -1;
  }
  v83 = v115;
  LOBYTE(v118) = v70;
  v119 = v46;
  v120 = v49;
  v121 = v72;
  v122 = 0;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B06D8, (uint64_t (*)(void))sub_1BA831688, (uint64_t)&type metadata for FormatLayoutValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
  v84 = type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BA7399D0();
  sub_1BB680C98();
  sub_1BA4A2870(&qword_1ED39D730, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for IssueCoverViewLayoutAttributesFactory);
  v116 = v84;
  sub_1BB86D684();
  v85 = (_QWORD *)swift_allocObject();
  v87 = v101;
  v86 = v102;
  v85[2] = v83;
  v85[3] = v86;
  v88 = v94;
  v85[4] = v87;
  v85[5] = v88;
  v85[6] = v117;
  sub_1BA71AE1C(0);
  sub_1BA71AE30();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86D45C();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BA899748(v95, v96, v97, v91, v92, v93, v98, v99);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v107, v104);
  return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v108, v106);
}

uint64_t sub_1BB66EA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v15;
  _OWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v4 = v3;
  v5 = a3;
  v6 = a2;
  v7 = a1;
  v8 = *(_QWORD *)(a3 + 80);
  if (v8)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = *(_QWORD *)(v4 + 56);
    v13 = *(_QWORD *)(v4 + 32);
    v12 = *(_QWORD *)(v4 + 40);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v8;
    v14[3] = v9;
    v14[4] = v10;
    v14[5] = v13;
    v14[6] = v12;
    v14[7] = 0;
    v6 = a2;
    v5 = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1BB445734(0);
    sub_1BA735094();
    sub_1BA735138();
    sub_1BB86D504();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BB445724(0);
    swift_release();
    v7 = v20;
  }
  v15 = *(_OWORD *)(v4 + 80);
  v18[0] = *(_OWORD *)(v4 + 64);
  v18[1] = v15;
  v19 = *(_QWORD *)(v4 + 96);
  sub_1BA7086BC((uint64_t)v18);
  sub_1BA733DB8(v7, v6, v5);
  return sub_1BA708680((uint64_t)v18);
}

uint64_t sub_1BB66EB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v15;
  _OWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v4 = v3;
  v5 = a3;
  v6 = a2;
  v7 = a1;
  v8 = *(_QWORD *)(a3 + 80);
  if (v8)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = *(_QWORD *)(v4 + 56);
    v13 = *(_QWORD *)(v4 + 32);
    v12 = *(_QWORD *)(v4 + 40);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v8;
    v14[3] = v9;
    v14[4] = v10;
    v14[5] = v13;
    v14[6] = v12;
    v14[7] = 0;
    v6 = a2;
    v5 = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1BB445734(0);
    sub_1BA7099D4();
    sub_1BA709A78();
    sub_1BB86D504();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BB445724(0);
    swift_release();
    v7 = v20;
  }
  v15 = *(_OWORD *)(v4 + 80);
  v18[0] = *(_OWORD *)(v4 + 64);
  v18[1] = v15;
  v19 = *(_QWORD *)(v4 + 96);
  sub_1BA7086BC((uint64_t)v18);
  sub_1BA7086F8(v7, v6, v5);
  return sub_1BA708680((uint64_t)v18);
}

uint64_t sub_1BB66ECCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v15;
  _OWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v4 = v3;
  v5 = a3;
  v6 = a2;
  v7 = a1;
  v8 = *(_QWORD *)(a3 + 80);
  if (v8)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = *(_QWORD *)(v4 + 56);
    v13 = *(_QWORD *)(v4 + 32);
    v12 = *(_QWORD *)(v4 + 40);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v8;
    v14[3] = v9;
    v14[4] = v10;
    v14[5] = v13;
    v14[6] = v12;
    v14[7] = 0;
    v6 = a2;
    v5 = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1BB445734(0);
    sub_1BA71AE1C(0);
    sub_1BA71AE30();
    sub_1BB86D504();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BB445724(0);
    swift_release();
    v7 = v20;
  }
  v15 = *(_OWORD *)(v4 + 80);
  v18[0] = *(_OWORD *)(v4 + 64);
  v18[1] = v15;
  v19 = *(_QWORD *)(v4 + 96);
  sub_1BA7086BC((uint64_t)v18);
  sub_1BA719A9C(v7, v6, v5);
  return sub_1BA708680((uint64_t)v18);
}

uint64_t sub_1BB66EE24(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[4];
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v3 = (uint64_t)v1;
  v69 = *v1;
  swift_beginAccess();
  v6 = v1[2];
  v5 = v1[3];
  v7 = v1[5];
  v70 = v1[4];
  swift_beginAccess();
  v8 = v1[6];
  v9 = v1[7];
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = swift_bridgeObjectRetain();
    v12 = 0;
    if (!*(_QWORD *)(v3 + 64))
    {
LABEL_8:
      v54 = v5;
      v55 = v7;
      v52 = a1;
      v56 = v8;
      v57 = v12;
      v53 = v6;
      v14 = 0;
      goto LABEL_10;
    }
LABEL_5:
    v71 = a1;
    MEMORY[0x1E0C80A78](v11);
    v47[2] = &v71;
    v14 = sub_1BA8A1070((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))sub_1BA7919BC, (uint64_t)v47, v13);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
    v54 = v5;
    v55 = v7;
    v52 = a1;
    v56 = v8;
    v57 = v12;
    v53 = v6;
LABEL_10:
    v58 = v14;
    v18 = *(_QWORD *)(v3 + 72);
    v17 = *(_QWORD *)(v3 + 80);
    v19 = *(unsigned __int8 *)(v3 + 88);
    v20 = *(_QWORD *)(v3 + 96);
    v67 = *(_QWORD *)(v3 + 104);
    v22 = *(_QWORD *)(v3 + 112);
    v21 = *(_QWORD *)(v3 + 120);
    v23 = *(_QWORD *)(v3 + 136);
    v66 = *(_QWORD *)(v3 + 128);
    v24 = *(_QWORD *)(v3 + 144);
    v25 = *(_QWORD *)(v3 + 160);
    v26 = *(_QWORD *)(v3 + 168);
    v27 = *(unsigned __int8 *)(v3 + 176);
    v68 = *(_QWORD *)(v3 + 152);
    v64 = v23;
    v65 = v24;
    v62 = v22;
    v63 = v21;
    v61 = v20;
    v60 = v25;
    v59 = v26;
    if (v27 == 254)
    {
      LODWORD(v52) = 254;
      v28 = v18;
      v29 = v17;
      v30 = v19;
      sub_1BA6E6C54(v18, v17, v19);
      v32 = v66;
      v31 = v67;
    }
    else
    {
      v50 = v18;
      v49 = v17;
      v48 = v19;
      v51 = v2;
      v33 = v25;
      v34 = v26;
      sub_1BA6E6C54(v18, v17, v19);
      v35 = v21;
      v36 = v66;
      sub_1BA6E8A48(v20, v67, v22, v35, v66, v23, v24, v68, v33, v34, v27);
      v37 = v51;
      sub_1BA742954(v52, v36);
      if (v37)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E8A78(v61, v67, v62, v63, v66, v64, v65, v68, v60, v59, v27);
        sub_1BA6E6CC4(v50, v49, v48);
        swift_bridgeObjectRelease();
        return v3;
      }
      LODWORD(v52) = v27;
      LODWORD(v31) = v67;
      sub_1BA6E8A78(v61, v67, v62, v63, v66, v64, v65, v68, v60, v59, v27);
      v32 = v71;
      v31 = v31;
      v30 = v48;
      v29 = v49;
      v28 = v50;
    }
    v38 = v54;
    v39 = *(_WORD *)(v3 + 177);
    v3 = swift_allocObject();
    swift_beginAccess();
    *(_QWORD *)(v3 + 16) = v53;
    *(_QWORD *)(v3 + 24) = v38;
    v40 = v55;
    *(_QWORD *)(v3 + 32) = v70;
    *(_QWORD *)(v3 + 40) = v40;
    swift_beginAccess();
    v41 = v57;
    *(_QWORD *)(v3 + 48) = v56;
    *(_QWORD *)(v3 + 56) = v41;
    *(_QWORD *)(v3 + 64) = v58;
    *(_QWORD *)(v3 + 72) = v28;
    *(_QWORD *)(v3 + 80) = v29;
    *(_BYTE *)(v3 + 88) = v30;
    *(_QWORD *)(v3 + 96) = v61;
    *(_QWORD *)(v3 + 104) = v31;
    v42 = v63;
    *(_QWORD *)(v3 + 112) = v62;
    *(_QWORD *)(v3 + 120) = v42;
    v43 = v64;
    *(_QWORD *)(v3 + 128) = v32;
    *(_QWORD *)(v3 + 136) = v43;
    v44 = v68;
    *(_QWORD *)(v3 + 144) = v65;
    *(_QWORD *)(v3 + 152) = v44;
    v45 = v59;
    *(_QWORD *)(v3 + 160) = v60;
    *(_QWORD *)(v3 + 168) = v45;
    *(_BYTE *)(v3 + 176) = v52;
    *(_WORD *)(v3 + 177) = v39;
    return v3;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v10 = sub_1BA72BED4(v71, v9);
  if (!v2)
  {
    v15 = v10;
    swift_release();
    v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    sub_1BA790480();
    v11 = swift_allocObject();
    v12 = v11;
    *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v11 + 32) = v16;
    *(_BYTE *)(v11 + 40) = 0;
    if (!*(_QWORD *)(v3 + 64))
      goto LABEL_8;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

void sub_1BB66F384(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[4];
  char v28;
  uint64_t v29[8];
  char v30;
  _BYTE v31[72];
  _BYTE v32[80];

  v4 = v2;
  v7 = *v2;
  sub_1BB86DD80();
  v8 = sub_1BA72BED4(v29[0], v7);
  swift_release();
  if (!v3)
  {
    v9 = v2[1];
    v10 = swift_allocObject();
    *(double *)(v10 + 16) = v8;
    sub_1BA790480();
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v11 + 32) = v10;
    *(_BYTE *)(v11 + 40) = 0;
    sub_1BB86DD80();
    v12 = sub_1BA72BED4(v29[0], v9);
    swift_release();
    sub_1BAE78764((uint64_t)(v2 + 2), (uint64_t)v32);
    v13 = swift_allocObject();
    *(double *)(v13 + 16) = v12;
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v14 + 32) = v13;
    *(_BYTE *)(v14 + 40) = 0;
    sub_1BB66F5F4(a1, (uint64_t)v29);
    sub_1BAE78764((uint64_t)(v4 + 11), (uint64_t)v31);
    v15 = v29[0];
    v16 = v29[1];
    v21 = v29[3];
    v22 = v29[2];
    v23 = v29[4];
    v24 = v29[5];
    v25 = v29[6];
    v26 = v29[7];
    v17 = v30;
    sub_1BB66F5F4(a1, (uint64_t)v27);
    v18 = v27[1];
    *(_OWORD *)(a2 + 88) = v27[0];
    *(_OWORD *)(a2 + 104) = v18;
    v19 = v27[3];
    *(_OWORD *)(a2 + 120) = v27[2];
    v20 = v28;
    *(_QWORD *)a2 = v11;
    *(_QWORD *)(a2 + 8) = v14;
    *(_QWORD *)(a2 + 16) = v15;
    *(_QWORD *)(a2 + 24) = v16;
    *(_QWORD *)(a2 + 32) = v22;
    *(_QWORD *)(a2 + 40) = v21;
    *(_QWORD *)(a2 + 48) = v23;
    *(_QWORD *)(a2 + 56) = v24;
    *(_QWORD *)(a2 + 64) = v25;
    *(_QWORD *)(a2 + 72) = v26;
    *(_BYTE *)(a2 + 80) = v17;
    *(_OWORD *)(a2 + 136) = v19;
    *(_BYTE *)(a2 + 152) = v20;
  }
}

void sub_1BB66F5F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];
  uint64_t v27[8];
  char v28;
  uint64_t v29;

  v6 = sub_1BAE78764(v2, (uint64_t)v27);
  if ((v28 & 1) != 0)
  {
    v7 = v27[3];
    v24 = v27[1];
    v25 = v27[2];
    v9 = v27[4];
    v8 = v27[5];
    v10 = v27[7];
    v29 = v27[6];
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v6);
    v20[2] = v26;
    v12 = sub_1BA8A1234((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BA77362C, (uint64_t)v20, v11);
    if (!v3)
    {
      v13 = v12;
      v21 = v8;
      v22 = v9;
      v14 = v25;
      v23 = v7;
      v15 = v29;
      v16 = v24;
      if (v29)
      {
        swift_bridgeObjectRetain();
        sub_1BB674700(v15, v10, v26);
        v17 = v26[0];
        v10 = v26[1];
      }
      else
      {
        swift_bridgeObjectRetain();
        v17 = 0;
      }
      *(_QWORD *)a2 = v13;
      *(_QWORD *)(a2 + 8) = v16;
      v18 = v23;
      *(_QWORD *)(a2 + 16) = v14;
      *(_QWORD *)(a2 + 24) = v18;
      v19 = v21;
      *(_QWORD *)(a2 + 32) = v22;
      *(_QWORD *)(a2 + 40) = v19;
      *(_QWORD *)(a2 + 48) = v17;
      *(_QWORD *)(a2 + 56) = v10;
      *(_BYTE *)(a2 + 64) = 1;
    }
  }
  else
  {
    sub_1BA742954(a1, v27[0]);
    if (!v3)
    {
      *(_QWORD *)a2 = v26[0];
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_OWORD *)(a2 + 40) = 0u;
      *(_OWORD *)(a2 + 49) = 0u;
    }
  }
}

uint64_t sub_1BB66F788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for FormatOption();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1)
    goto LABEL_13;
  if (!a2)
  {
    if (*(_QWORD *)(a1 + 16))
    {
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_13:
    swift_bridgeObjectRetain();
    return a2;
  }
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    v22 = a2;
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v8, 0);
    v9 = *(unsigned __int8 *)(v5 + 80);
    v21 = a1;
    v10 = a1 + ((v9 + 32) & ~v9);
    v11 = *(_QWORD *)(v5 + 72);
    v12 = v23;
    do
    {
      sub_1BA4C2DD8(v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v13 = *v7;
      v14 = v7[1];
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v23;
      }
      v16 = *(_QWORD *)(v12 + 16);
      v15 = *(_QWORD *)(v12 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BA7447E8(v15 > 1, v16 + 1, 1);
        v12 = v23;
      }
      *(_QWORD *)(v12 + 16) = v16 + 1;
      v17 = v12 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v13;
      *(_QWORD *)(v17 + 40) = v14;
      v10 += v11;
      --v8;
    }
    while (v8);
    a1 = v21;
    a2 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v18 = sub_1BA6E43EC(v12);
  swift_bridgeObjectRelease();
  v19 = sub_1BB67E07C(a2, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = a1;
  swift_bridgeObjectRetain();
  sub_1BA6D3834(v19);
  return v23;
}

uint64_t sub_1BB66F994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v5 = swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_BYTE *)(v1 + 48);
  v10 = *(_QWORD *)(v1 + 56);
  v17 = *(_QWORD *)(v1 + 32);
  if (!v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = 0;
LABEL_6:
    swift_beginAccess();
    v13 = *(_QWORD *)(v1 + 64);
    v1 = swift_allocObject();
    swift_beginAccess();
    *(_QWORD *)(v1 + 16) = v7;
    *(_QWORD *)(v1 + 24) = v6;
    *(_QWORD *)(v1 + 32) = v17;
    *(_QWORD *)(v1 + 40) = v8;
    *(_BYTE *)(v1 + 48) = v9;
    *(_QWORD *)(v1 + 56) = v12;
    swift_beginAccess();
    *(_QWORD *)(v1 + 64) = v13;
    swift_bridgeObjectRetain();
    return v1;
  }
  v16 = a1;
  MEMORY[0x1E0C80A78](v5);
  v15[2] = &v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1BA8A17A8((void (*)(uint64_t, uint64_t *))sub_1BB680AD4, (uint64_t)v15, v10);
  if (!v3)
  {
    v12 = v11;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BB66FB1C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v3 = (uint64_t)v1;
  v72 = *v1;
  swift_beginAccess();
  v6 = v1[2];
  v5 = v1[3];
  v7 = v1[5];
  v73 = v1[4];
  swift_beginAccess();
  v8 = v1[6];
  v9 = v1[7];
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = swift_bridgeObjectRetain();
    v12 = 0;
    if (!*(_QWORD *)(v3 + 64))
    {
LABEL_8:
      v57 = v5;
      v55 = a1;
      v58 = v7;
      v59 = v8;
      v60 = v12;
      v56 = v6;
      v14 = 0;
      goto LABEL_10;
    }
LABEL_5:
    v74 = a1;
    MEMORY[0x1E0C80A78](v11);
    v50 = &v74;
    v14 = sub_1BA8A1070((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))sub_1BA7919BC, (uint64_t)&v49, v13);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
    v57 = v5;
    v55 = a1;
    v58 = v7;
    v59 = v8;
    v60 = v12;
    v56 = v6;
LABEL_10:
    v61 = v14;
    v18 = *(_QWORD *)(v3 + 72);
    v17 = *(_QWORD *)(v3 + 80);
    v19 = *(unsigned __int8 *)(v3 + 88);
    v20 = *(_QWORD *)(v3 + 96);
    v70 = *(_QWORD *)(v3 + 104);
    v22 = *(_QWORD *)(v3 + 112);
    v21 = *(_QWORD *)(v3 + 120);
    v23 = *(_QWORD *)(v3 + 136);
    v69 = *(_QWORD *)(v3 + 128);
    v24 = *(_QWORD *)(v3 + 144);
    v25 = *(_QWORD *)(v3 + 160);
    v26 = *(_QWORD *)(v3 + 168);
    v27 = *(unsigned __int8 *)(v3 + 176);
    v71 = *(_QWORD *)(v3 + 152);
    v68 = v24;
    v67 = v23;
    v66 = v21;
    v65 = v22;
    v64 = v20;
    v63 = v25;
    v62 = v26;
    if (v27 == 254)
    {
      LODWORD(v55) = 254;
      v28 = v18;
      v29 = v17;
      v30 = v19;
      sub_1BA6E6C54(v18, v17, v19);
      v31 = v70;
      v32 = v69;
    }
    else
    {
      v53 = v18;
      v52 = v17;
      v51 = v19;
      v54 = v2;
      v33 = v25;
      v34 = v26;
      sub_1BA6E6C54(v18, v17, v19);
      v35 = v21;
      v36 = v69;
      sub_1BA6E8A48(v20, v70, v22, v35, v69, v23, v24, v71, v33, v34, v27);
      v37 = v54;
      sub_1BA742954(v55, v36);
      if (v37)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E8A78(v64, v70, v65, v66, v69, v67, v68, v71, v63, v62, v27);
        sub_1BA6E6CC4(v53, v52, v51);
        swift_bridgeObjectRelease();
        return v3;
      }
      LODWORD(v55) = v27;
      LOBYTE(v50) = v27;
      v38 = v70;
      sub_1BA6E8A78(v64, v70, v65, v66, v69, v67, v68, v71, v63, v62, v50);
      v32 = v74;
      v31 = v38;
      v30 = v51;
      v29 = v52;
      v28 = v53;
    }
    v39 = *(_BYTE *)(v3 + 177);
    swift_beginAccess();
    v40 = *(_QWORD *)(v3 + 184);
    v3 = swift_allocObject();
    swift_beginAccess();
    v41 = v57;
    *(_QWORD *)(v3 + 16) = v56;
    *(_QWORD *)(v3 + 24) = v41;
    v42 = v58;
    *(_QWORD *)(v3 + 32) = v73;
    *(_QWORD *)(v3 + 40) = v42;
    swift_beginAccess();
    v43 = v60;
    *(_QWORD *)(v3 + 48) = v59;
    *(_QWORD *)(v3 + 56) = v43;
    *(_QWORD *)(v3 + 64) = v61;
    *(_QWORD *)(v3 + 72) = v28;
    *(_QWORD *)(v3 + 80) = v29;
    *(_BYTE *)(v3 + 88) = v30;
    *(_QWORD *)(v3 + 96) = v64;
    *(_QWORD *)(v3 + 104) = v31;
    v44 = v66;
    *(_QWORD *)(v3 + 112) = v65;
    *(_QWORD *)(v3 + 120) = v44;
    v45 = v67;
    *(_QWORD *)(v3 + 128) = v32;
    *(_QWORD *)(v3 + 136) = v45;
    v46 = v71;
    *(_QWORD *)(v3 + 144) = v68;
    *(_QWORD *)(v3 + 152) = v46;
    v47 = v62;
    *(_QWORD *)(v3 + 160) = v63;
    *(_QWORD *)(v3 + 168) = v47;
    *(_BYTE *)(v3 + 176) = v55;
    *(_BYTE *)(v3 + 177) = v39;
    swift_beginAccess();
    *(_QWORD *)(v3 + 184) = v40;
    swift_bridgeObjectRetain();
    return v3;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v10 = sub_1BA72BED4(v74, v9);
  if (!v2)
  {
    v15 = v10;
    swift_release();
    v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    sub_1BA790480();
    v11 = swift_allocObject();
    v12 = v11;
    *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v11 + 32) = v16;
    *(_BYTE *)(v11 + 40) = 0;
    if (!*(_QWORD *)(v3 + 64))
      goto LABEL_8;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_1BB670144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v1;
  swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 40);
  v20 = *(_QWORD *)(v1 + 32);
  swift_beginAccess();
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  if (!v9)
  {
    v19 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v10 = sub_1BA72BED4(v21, v9);
  if (!v2)
  {
    v11 = v10;
    v19 = v6;
    swift_release();
    v12 = swift_allocObject();
    *(double *)(v12 + 16) = v11;
    sub_1BA790480();
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v13 + 32) = v12;
    v9 = v13;
    *(_BYTE *)(v13 + 40) = 0;
LABEL_6:
    v14 = *(_QWORD *)(v1 + 64);
    if ((~v14 & 0xF000000000000007) != 0)
    {
      swift_retain();
      sub_1BA742954(a1, v14);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v14);
LABEL_14:
        swift_bridgeObjectRelease();
        return v3;
      }
      v18 = v9;
      sub_1BA5E800C(v14);
      v14 = v21;
    }
    else
    {
      v18 = v9;
    }
    v15 = *(_QWORD *)(v1 + 72);
    if ((~v15 & 0xF000000000000007) != 0)
    {
      swift_retain();
      sub_1BA742954(a1, v15);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v15);
        sub_1BA5E800C(v14);
        goto LABEL_14;
      }
      sub_1BA5E800C(v15);
      v15 = v21;
    }
    v16 = *(_BYTE *)(v1 + 80);
    v3 = swift_allocObject();
    swift_beginAccess();
    *(_QWORD *)(v3 + 16) = v19;
    *(_QWORD *)(v3 + 24) = v5;
    *(_QWORD *)(v3 + 32) = v20;
    *(_QWORD *)(v3 + 40) = v7;
    swift_beginAccess();
    *(_QWORD *)(v3 + 48) = v8;
    *(_QWORD *)(v3 + 56) = v18;
    *(_QWORD *)(v3 + 64) = v14;
    *(_QWORD *)(v3 + 72) = v15;
    *(_BYTE *)(v3 + 80) = v16;
    return v3;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_1BB67040C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  double v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;

  type metadata accessor for FormatDecorationContext();
  sub_1BB86DD80();
  v11 = sub_1BA72BED4(v23, a1);
  result = swift_release();
  if (!v5)
  {
    v13 = swift_allocObject();
    *(double *)(v13 + 16) = v11;
    sub_1BA790480();
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v14 + 32) = v13;
    *(_BYTE *)(v14 + 40) = 0;
    sub_1BB86DD80();
    v15 = sub_1BA72BED4(v23, a2);
    swift_release();
    v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v17 + 32) = v16;
    *(_BYTE *)(v17 + 40) = 0;
    sub_1BB86DD80();
    v18 = sub_1BA72BED4(v23, a3);
    swift_release();
    v19 = swift_allocObject();
    *(double *)(v19 + 16) = v18;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v20 + 32) = v19;
    *(_BYTE *)(v20 + 40) = 0;
    sub_1BB86DD80();
    v21 = sub_1BA72BED4(v23, a4);
    swift_release();
    v22 = swift_allocObject();
    *(double *)(v22 + 16) = v21;
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(result + 32) = v22;
    *(_BYTE *)(result + 40) = 0;
    *a5 = v14;
    a5[1] = v17;
    a5[2] = v20;
    a5[3] = result;
  }
  return result;
}

uint64_t sub_1BB67068C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(void), uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *ObjCClassFromMetadata;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t (*v79)(_QWORD);
  void (*v80)(void);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;

  v81 = a7;
  v80 = a6;
  v79 = a5;
  v78 = a4;
  v8 = v7;
  v89 = a3;
  v11 = type metadata accessor for FormatOption();
  v83 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v84 = v14;
  v82 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v85 = (char *)&v74 - v15;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v16);
  v90 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v88 = (uint64_t)&v74 - v19;
  v20 = type metadata accessor for FormatNodeStateData.Data();
  v86 = *(_QWORD *)(v20 - 8);
  v87 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = a1;
  swift_beginAccess();
  v23 = v8[2];
  v24 = v8[3];
  swift_bridgeObjectRetain();
  v91 = sub_1BA717D44(v23, v24);
  v93 = v25;
  swift_bridgeObjectRelease();
  v26 = (uint64_t *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v27 = *v26;
  v28 = v26[1];
  v29 = v8[10];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = v92;
  v31 = sub_1BB669F08(v29, a2, v27, v28);
  if (v30)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v74 = v26;
    v75 = v22;
    v77 = v8;
    v92 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v33 = a2;
    v34 = (uint64_t)v90;
    v76 = 0;
    if (v92 && (v35 = *(_QWORD *)(v92 + 56)) != 0 && (v36 = *(_QWORD *)(v35 + 16)) != 0)
    {
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      v38 = v35 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
      v39 = *(_QWORD *)(v83 + 72);
      v83 = v35;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BA4C2DD8(v38, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        swift_bridgeObjectRetain();
        if (!objc_msgSend(ObjCClassFromMetadata, sel_instancesRespondToSelector_, sub_1BB86CBEC()))
          break;
        sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v38 += v39;
        if (!--v36)
        {
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v62 = v77[5];
      v63 = *v13;
      v64 = v13[1];
      *v65 = v77[4];
      v65[1] = v62;
      v65[2] = v63;
      v65[3] = v64;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_release();
      return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    }
    else
    {
LABEL_10:
      v40 = v77;
      v41 = v33;
      v42 = (uint64_t)v75;
      *v75 = v77[6];
      v43 = v87;
      swift_storeEnumTagMultiPayload();
      v44 = v88;
      v45 = *(_QWORD *)(v89 + 24);
      sub_1BA4C2DD8(v42, v88, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v44, 0, 1, v43);
      sub_1BA5E01A4(v44, v34, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      v89 = v45;
      swift_beginAccess();
      v46 = v93;
      swift_bridgeObjectRetain();
      sub_1BA722740(v34, v91, v46);
      swift_endAccess();
      sub_1BA5C699C(v44, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
      v47 = *v74;
      v48 = v74[1];
      v49 = v40[11];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50 = v76;
      v51 = sub_1BA6E3AA0(v49, v41, v47, v48, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
      if (v50)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      else
      {
        v52 = (char *)v51;
        v53 = v89;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if (v52 && (swift_beginAccess(), (v54 = *((_QWORD *)v52 + 9)) != 0) && *(_QWORD *)(v54 + 16))
        {
          v55 = v52;
          v56 = *((_QWORD *)v52 + 6);
          v57 = *((_QWORD *)v52 + 7);
          v58 = v55[64];
          swift_retain();
          swift_retain();
          v59 = swift_bridgeObjectRetain();
          v88 = sub_1BB67D220(v59, v41);
          swift_bridgeObjectRelease();
          swift_release();
          if (v58)
          {
            v57 = 0;
            v56 = 0;
          }
          type metadata accessor for FormatAnimationData();
          v70 = swift_allocObject();
          v90 = v55;
          *(_QWORD *)(v70 + 16) = v55;
          *(_QWORD *)(v70 + 24) = v56;
          *(_QWORD *)(v70 + 32) = v57;
          *(_BYTE *)(v70 + 40) = v58;
          v71 = v53;
          *(_QWORD *)(v70 + 48) = v88;
          swift_beginAccess();
          swift_retain_n();
          v72 = v93;
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v94 = *(_QWORD *)(v71 + 32);
          *(_QWORD *)(v71 + 32) = 0x8000000000000000;
          sub_1BA81C03C(v70, v91, v72, isUniquelyReferenced_nonNull_native);
          *(_QWORD *)(v71 + 32) = v94;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_release_n();
          v60 = v84;
        }
        else
        {
          v90 = v52;
          v60 = v84;
        }
        swift_getKeyPath();
        v95 = v40[7];
        v61 = v95;
        swift_bridgeObjectRetain();
        sub_1BA71CA6C(v61);
        sub_1BA717E88();
        sub_1BA719718(v61);
        swift_beginAccess();
        swift_retain();
        v66 = swift_bridgeObjectRetain();
        v89 = sub_1BB67D4D4(v66, 0);
        swift_bridgeObjectRelease();
        swift_release();
        v67 = (_QWORD *)swift_allocObject();
        v68 = v93;
        v67[2] = v91;
        v67[3] = v68;
        v67[4] = 0;
        v67[5] = v40;
        v76 = 0;
        v67[6] = v92;
        v88 = v79(0);
        v80();
        swift_retain();
        swift_retain();
        swift_retain();
        v69 = v85;
        sub_1BB86D534();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v69, v60);
      }
    }
  }
}

uint64_t sub_1BB671044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _QWORD v13[4];
  uint64_t v14[2];
  __int128 v15;
  __int128 v16;
  _BYTE v17[8];

  v5 = *(_QWORD *)v2;
  v13[2] = a1;
  result = sub_1BA8A1234((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BA772DA4, (uint64_t)v13, v5);
  if (!v3)
  {
    v7 = result;
    sub_1BA5193C4(v2 + 8, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA77A284);
    v9 = *(_QWORD *)(v2 + 48);
    v8 = *(_QWORD *)(v2 + 56);
    sub_1BA781758((uint64_t)v17);
    if (v9)
    {
      sub_1BB674864(v9, v8, v14);
      v10 = v14[0];
      v8 = v14[1];
    }
    else
    {
      v10 = 0;
    }
    v11 = *(_OWORD *)(v2 + 32);
    v15 = *(_OWORD *)(v2 + 16);
    v16 = v11;
    *(_QWORD *)a2 = v7;
    result = sub_1BA5193C4((uint64_t)v17, a2 + 8, (uint64_t (*)(_QWORD))sub_1BA77A284);
    v12 = v16;
    *(_OWORD *)(a2 + 16) = v15;
    *(_OWORD *)(a2 + 32) = v12;
    *(_QWORD *)(a2 + 48) = v10;
    *(_QWORD *)(a2 + 56) = v8;
  }
  return result;
}

uint64_t sub_1BB671138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(void), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t (*v53)(_QWORD);
  void (*v54)(void);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD v67[11];
  _BYTE v68[64];
  _QWORD v69[11];

  v54 = a6;
  v55 = a7;
  v52 = a4;
  v53 = a5;
  v8 = v7;
  v60 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v56 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  MEMORY[0x1E0C80A78](v11);
  v61 = (char *)&v50 - v12;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v59 = (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v58 = (uint64_t)&v50 - v16;
  v17 = type metadata accessor for FormatNodeStateData.Data();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69[10] = a1;
  swift_beginAccess();
  v21 = swift_bridgeObjectRetain();
  v63 = a2;
  v22 = sub_1BA707E14(v21, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v23 = *(_QWORD *)(v8 + 16);
  v24 = *(_QWORD *)(v8 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  v62 = sub_1BA717D44(v23, v24);
  v26 = v25;
  swift_release();
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles;
  swift_beginAccess();
  v28 = *(_QWORD *)(v27 + 8);
  v64 = v8;
  swift_beginAccess();
  sub_1BA6A09F0(v8 + 96, (uint64_t)v69, (unint64_t *)&qword_1ED3A7CB8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAEB22F4(v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAC69440);
  v29 = v65;
  sub_1BB66B1A4(v69, v28, (uint64_t)v67);
  if (v29)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BAEB22F4(v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAC694A8);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v51 = v20;
    v65 = v26;
    sub_1BAEB22F4(v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAC694A8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6A09F0((uint64_t)v67, (uint64_t)v68, (unint64_t *)&qword_1ED3A7CB8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
    v30 = *(_QWORD *)(v64 + 80);
    type metadata accessor for FormatWebEmbedDataConfig();
    swift_allocObject();
    swift_retain();
    v31 = swift_retain();
    v33 = sub_1BB7E7C6C(v31, v30);
    v67[0] = *(_QWORD *)(v64 + 72);
    swift_retain();
    v34 = v22;
    v35 = sub_1BB86AAB4(v22, v33);
    v63 = v33;
    swift_release();
    v36 = v51;
    *v51 = v35;
    swift_storeEnumTagMultiPayload();
    v37 = (uint64_t)v36;
    v38 = v58;
    sub_1BA4C2DD8(v37, v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v38, 0, 1, v17);
    v39 = v59;
    sub_1BA5E01A4(v38, v59, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    swift_retain();
    v50 = v35;
    v40 = v65;
    swift_bridgeObjectRetain();
    sub_1BA722740(v39, v62, v40);
    swift_endAccess();
    sub_1BA5C699C(v38, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BA4A2E80((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    KeyPath = swift_getKeyPath();
    v42 = v64;
    swift_beginAccess();
    v66 = *(_QWORD *)(v42 + 48);
    v43 = v66;
    swift_bridgeObjectRetain();
    sub_1BA71CA6C(v43);
    v60 = v34;
    sub_1BA717E88();
    v59 = KeyPath;
    v44 = v50;
    sub_1BA719718(v43);
    swift_beginAccess();
    v45 = v60;
    swift_retain();
    v46 = swift_bridgeObjectRetain();
    v58 = sub_1BB67D4D4(v46, v45);
    swift_bridgeObjectRelease();
    swift_release();
    v47 = (_QWORD *)swift_allocObject();
    v48 = v64;
    v49 = v65;
    v47[2] = v62;
    v47[3] = v49;
    v47[4] = v45;
    v47[5] = v48;
    sub_1BA6A09F0((uint64_t)v68, (uint64_t)(v47 + 6), (unint64_t *)&qword_1ED3A7CB8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
    v47[14] = v44;
    v53 = (uint64_t (*)(_QWORD))v53(0);
    v54();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1BB86D534();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v61, v57);
  }
}

uint64_t sub_1BB6718B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unsigned __int8 v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109[2];
  char v110;
  uint64_t v111;
  uint64_t v112;

  v3 = v1;
  v90 = *v1;
  swift_beginAccess();
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[5];
  v91 = v1[4];
  swift_beginAccess();
  v9 = v1[6];
  v8 = v1[7];
  if (v8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v10 = sub_1BA72BED4(v99, v8);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    v13 = v10;
    v82 = v5;
    swift_release();
    v14 = swift_allocObject();
    *(double *)(v14 + 16) = v13;
    sub_1BA790480();
    v12 = swift_allocObject();
    v8 = v12;
    *(_OWORD *)(v12 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v12 + 32) = v14;
    *(_BYTE *)(v12 + 40) = 0;
  }
  else
  {
    v82 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = swift_bridgeObjectRetain();
  }
  v112 = v8;
  v15 = v3[8];
  if ((~v15 & 0xF000000000000007) != 0)
  {
    swift_retain();
    sub_1BA6F5534(a1, v15);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E6CD8(v15);
      return swift_bridgeObjectRelease();
    }
    v12 = sub_1BA6E6CD8(v15);
    v15 = v99;
  }
  v111 = v15;
  if (v3[9])
  {
    *(_QWORD *)&v99 = a1;
    MEMORY[0x1E0C80A78](v12);
    v65 = (uint64_t *)&v99;
    v17 = sub_1BA8A1070((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))sub_1BA7919BC, (uint64_t)&v63, v16);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E6CD8(v15);
      return swift_bridgeObjectRelease();
    }
    v84 = 0;
    v78 = v6;
    v80 = (uint64_t *)a1;
    v83 = v15;
    v81 = v7;
  }
  else
  {
    v84 = v2;
    v78 = v6;
    v80 = (uint64_t *)a1;
    v83 = v15;
    v81 = v7;
    v17 = 0;
  }
  v19 = v3[10];
  v18 = v3[11];
  v20 = *((unsigned __int8 *)v3 + 96);
  v109[0] = v19;
  v109[1] = v18;
  v110 = v20;
  v86 = v3[13];
  v89 = v3[14];
  v87 = v3[15];
  v21 = v3[17];
  v88 = v3[16];
  v22 = v3[19];
  v85 = v3[18];
  v23 = v3[20];
  v24 = v3[21];
  v25 = v3[22];
  v26 = *((unsigned __int8 *)v3 + 184);
  v76 = v20;
  v75 = v18;
  v74 = v19;
  v79 = v17;
  if (v26 == 254)
  {
    v77 = v25;
    v27 = v24;
    v72 = v8;
    v28 = sub_1BA6E6C54(v19, v18, v20);
    v29 = v85;
    v30 = v88;
    v31 = v87;
    v32 = v89;
  }
  else
  {
    sub_1BA6E6C54(v19, v18, v20);
    sub_1BA6E8A48(v86, v89, v87, v88, v21, v85, v22, v23, v24, v25, v26);
    v33 = v84;
    sub_1BA742954((uint64_t)v80, v21);
    v84 = v33;
    if (v33)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E8A78(v86, v89, v87, v88, v21, v85, v22, v23, v24, v25, v26);
      sub_1BA6E6CC4(v74, v75, v76);
      sub_1BA6E6CD8(v83);
      return swift_bridgeObjectRelease();
    }
    v72 = v8;
    v77 = v25;
    v63 = v24;
    v64 = v25;
    v27 = v24;
    LODWORD(v32) = v89;
    v29 = v85;
    v28 = sub_1BA6E8A78(v86, v89, v87, v88, v21, v85, v22, v23, v63, v64, v26);
    v21 = v99;
    v32 = v32;
    v30 = v88;
    v31 = v87;
  }
  *(_QWORD *)&v99 = v86;
  v89 = v32;
  *((_QWORD *)&v99 + 1) = v32;
  v100 = v31;
  v101 = v30;
  v102 = v21;
  v69 = v21;
  v103 = v29;
  v104 = v22;
  v70 = v22;
  v71 = v23;
  v105 = v23;
  v106 = v27;
  v34 = v27;
  v107 = v77;
  v68 = v26;
  v108 = v26;
  v36 = v3[24];
  v35 = v3[25];
  v37 = *((unsigned __int8 *)v3 + 208);
  v73 = v9;
  if (v37 == 255)
  {
    v44 = 255;
    v45 = v83;
    v38 = (uint64_t)v80;
    v41 = v84;
  }
  else
  {
    v67 = v27;
    v96 = v36;
    v97 = v35;
    v98 = v37 & 1;
    v38 = (uint64_t)v80;
    sub_1BA69C808(v36, v35, v37 & 1);
    sub_1BB86DD80();
    v39 = v84;
    v40 = FormatBoolean.value(contextLayoutOptions:)(v93);
    v41 = v39;
    if (v39)
    {
      v42 = v83;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BA796C70(v36, v35, v37);
      sub_1BA6E8A78(v86, v89, v87, v88, v69, v85, v70, v71, v67, v77, v68);
      sub_1BA6E6CC4(v74, v75, v76);
      v43 = v42;
LABEL_34:
      sub_1BA6E6CD8(v43);
      return swift_bridgeObjectRelease();
    }
    v46 = v40;
    v47 = v83;
    swift_release();
    v28 = sub_1BA796C70(v36, v35, v37);
    v45 = v47;
    v35 = 0;
    v44 = 0;
    v36 = v46 & 1;
    v34 = v67;
  }
  v83 = v45;
  v96 = v36;
  v97 = v35;
  LODWORD(v84) = v44;
  v98 = v44;
  v49 = v3[27];
  v48 = v3[28];
  v50 = *((unsigned __int8 *)v3 + 232);
  if (v50 == 255)
  {
    v54 = -1;
  }
  else
  {
    v80 = (uint64_t *)v36;
    v67 = v35;
    v93 = v49;
    v94 = v48;
    v95 = v50 & 1;
    v51 = v49;
    v52 = v48;
    sub_1BA69C808(v49, v48, v50 & 1);
    sub_1BB86DD80();
    v53 = FormatBoolean.value(contextLayoutOptions:)(v92);
    if (v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BA796C70(v51, v52, v50);
      sub_1BA796C70((uint64_t)v80, v67, v84);
      sub_1BA6E8A78(v86, v89, v87, v88, v69, v85, v70, v71, v34, v77, v68);
LABEL_33:
      sub_1BA6E6CC4(v74, v75, v76);
      v43 = v83;
      goto LABEL_34;
    }
    v55 = v53;
    swift_release();
    v28 = sub_1BA796C70(v51, v52, v50);
    v48 = 0;
    v54 = 0;
    v49 = v55 & 1;
    v35 = v67;
    v36 = (uint64_t)v80;
  }
  v93 = v49;
  v94 = v48;
  v95 = v54;
  if (v3[30])
  {
    v56 = *((_BYTE *)v3 + 233);
    v57 = v49;
    v67 = v48;
    v80 = &v66;
    v92 = v38;
    MEMORY[0x1E0C80A78](v28);
    v65 = &v92;
    v59 = sub_1BA8A17D4((void (*)(__int128 *__return_ptr, _QWORD *, uint64_t *))sub_1BB680B78, (uint64_t)&v63, v58);
    if (v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA796C70(v57, v67, v54);
      sub_1BA796C70(v36, v35, v84);
      sub_1BA6E8A78(v86, v89, v87, v88, v69, v85, v70, v71, v34, v77, v68);
      goto LABEL_33;
    }
    v60 = v59;
  }
  else
  {
    v56 = *((_BYTE *)v3 + 233);
    v60 = 0;
  }
  v61 = v78;
  v62 = v81;
  swift_allocObject();
  return sub_1BA5972BC(v82, v61, v91, v62, v73, &v112, &v111, v79, v109, &v99, &v96, &v93, v56, v60);
}

uint64_t sub_1BB672410@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  double v6;
  uint64_t result;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  char v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;

  v3 = v1;
  v5 = *v1;
  if (*v1)
  {
    sub_1BB86DD80();
    v6 = sub_1BA72BED4(v63, v5);
    if (v2)
      return swift_release();
    v8 = v6;
    swift_release();
    v9 = swift_allocObject();
    *(double *)(v9 + 16) = v8;
    sub_1BA790480();
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v5 + 32) = v9;
    *(_BYTE *)(v5 + 40) = 0;
  }
  v10 = v3[1];
  if (v10)
  {
    sub_1BB86DD80();
    v11 = sub_1BA72BED4(v63, v10);
    if (v2)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    v12 = v11;
    swift_release();
    v13 = swift_allocObject();
    *(double *)(v13 + 16) = v12;
    sub_1BA790480();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v10 + 32) = v13;
    *(_BYTE *)(v10 + 40) = 0;
  }
  v14 = v3[2];
  if (v14)
  {
    sub_1BB86DD80();
    v15 = sub_1BA72BED4(v63, v14);
    if (v2)
    {
      swift_release();
LABEL_47:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v18 = v15;
    v61 = a1;
    swift_release();
    v19 = swift_allocObject();
    *(double *)(v19 + 16) = v18;
    sub_1BA790480();
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v14 + 32) = v19;
    *(_BYTE *)(v14 + 40) = 0;
    v16 = v3[3];
    if (!v16)
    {
LABEL_16:
      v62 = 0;
      v20 = v3[5];
      if (v20)
        goto LABEL_17;
      goto LABEL_20;
    }
  }
  else
  {
    v61 = a1;
    v16 = v3[3];
    if (!v16)
      goto LABEL_16;
  }
  sub_1BB86DD80();
  v17 = sub_1BA72BED4(v63, v16);
  if (v2)
  {
    swift_release();
LABEL_46:
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  v22 = v17;
  swift_release();
  v23 = swift_allocObject();
  *(double *)(v23 + 16) = v22;
  sub_1BA790480();
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v24 + 32) = v23;
  v62 = v24;
  *(_BYTE *)(v24 + 40) = 0;
  v20 = v3[5];
  if (v20)
  {
LABEL_17:
    sub_1BB86DD80();
    v21 = sub_1BA72BED4(v63, v20);
    if (v2)
    {
      swift_release();
LABEL_45:
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    v27 = v21;
    swift_release();
    v28 = swift_allocObject();
    *(double *)(v28 + 16) = v27;
    sub_1BA790480();
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v29 + 32) = v28;
    v60 = v29;
    *(_BYTE *)(v29 + 40) = 0;
    v25 = v3[6];
    if (!v25)
      goto LABEL_24;
    goto LABEL_21;
  }
LABEL_20:
  v60 = 0;
  v25 = v3[6];
  if (!v25)
  {
LABEL_24:
    v59 = 0;
    goto LABEL_26;
  }
LABEL_21:
  sub_1BB86DD80();
  v26 = sub_1BA72BED4(v63, v25);
  if (v2)
  {
    swift_release();
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  v30 = v26;
  swift_release();
  v31 = swift_allocObject();
  *(double *)(v31 + 16) = v30;
  sub_1BA790480();
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v32 + 32) = v31;
  v59 = v32;
  *(_BYTE *)(v32 + 40) = 0;
LABEL_26:
  v33 = v3[7];
  v34 = v3[8];
  v35 = *((unsigned __int8 *)v3 + 72);
  if (v35 == 255)
  {
    v58 = -1;
  }
  else
  {
    v63 = v3[7];
    v64 = v34;
    LOBYTE(v65) = v35 & 1;
    sub_1BB86DD80();
    v36 = FormatBoolean.value(contextLayoutOptions:)(v67);
    if (v2)
    {
      swift_release();
LABEL_43:
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
    v37 = v36;
    swift_release();
    v34 = 0;
    v58 = 0;
    v33 = v37 & 1;
  }
  v38 = v3[10];
  v39 = v3[11];
  v40 = v3[12];
  v41 = v3[13];
  v42 = *((unsigned __int8 *)v3 + 112);
  if (v42 == 255)
  {
    v56 = v33;
    v57 = v34;
    v43 = -1;
  }
  else if ((v42 & 1) != 0)
  {
    sub_1BA4FF8FC(v38, v39, v40, v41, &v63);
    if (v2)
    {
      v44 = v33;
      v45 = v34;
LABEL_42:
      sub_1BA796C70(v44, v45, v58);
      goto LABEL_43;
    }
    v56 = v33;
    v57 = v34;
    v38 = v63;
    v39 = v64;
    v43 = 1;
    v40 = v65;
    v41 = v66;
  }
  else
  {
    v56 = v33;
    v57 = v34;
    v43 = 0;
  }
  v46 = v3[15];
  v47 = v3[16];
  v48 = *((unsigned __int8 *)v3 + 136);
  v54 = v39;
  v55 = v38;
  v52 = v40;
  v53 = v41;
  v51 = v43;
  if (v48 != 255)
  {
    v63 = v3[15];
    v64 = v47;
    LOBYTE(v65) = v48 & 1;
    sub_1BB86DD80();
    v49 = FormatBoolean.value(contextLayoutOptions:)(v67);
    swift_release();
    if (!v2)
    {
      v47 = 0;
      v50 = 0;
      v46 = v49 & 1;
      goto LABEL_50;
    }
    sub_1BA825F5C(v55, v54, v52, v53, v51);
    v44 = v56;
    v45 = v57;
    goto LABEL_42;
  }
  v50 = -1;
LABEL_50:
  sub_1BA6A09F0((uint64_t)(v3 + 4), (uint64_t)&v68, &qword_1ED39E800, (uint64_t)&type metadata for FormatMediaTimingFillMode);
  *(_QWORD *)v61 = v5;
  *(_QWORD *)(v61 + 8) = v10;
  *(_QWORD *)(v61 + 16) = v14;
  *(_QWORD *)(v61 + 24) = v62;
  result = sub_1BA6A09F0((uint64_t)&v68, v61 + 32, &qword_1ED39E800, (uint64_t)&type metadata for FormatMediaTimingFillMode);
  *(_QWORD *)(v61 + 40) = v60;
  *(_QWORD *)(v61 + 48) = v59;
  *(_QWORD *)(v61 + 56) = v56;
  *(_QWORD *)(v61 + 64) = v57;
  *(_BYTE *)(v61 + 72) = v58;
  *(_QWORD *)(v61 + 80) = v55;
  *(_QWORD *)(v61 + 88) = v54;
  *(_QWORD *)(v61 + 96) = v52;
  *(_QWORD *)(v61 + 104) = v53;
  *(_BYTE *)(v61 + 112) = v51;
  *(_QWORD *)(v61 + 120) = v46;
  *(_QWORD *)(v61 + 128) = v47;
  *(_BYTE *)(v61 + 136) = v50;
  return result;
}

uint64_t sub_1BB672A44@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  double v6;
  uint64_t result;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  char v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;

  v3 = v1;
  v5 = *v1;
  if (*v1)
  {
    type metadata accessor for FormatDecorationContext();
    sub_1BB86DD80();
    v6 = sub_1BA72BED4(v62, v5);
    if (v2)
      return swift_release();
    v8 = v6;
    swift_release();
    v9 = swift_allocObject();
    *(double *)(v9 + 16) = v8;
    sub_1BA790480();
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v5 + 32) = v9;
    *(_BYTE *)(v5 + 40) = 0;
  }
  v10 = v3[1];
  if (v10)
  {
    type metadata accessor for FormatDecorationContext();
    sub_1BB86DD80();
    v11 = sub_1BA72BED4(v62, v10);
    if (v2)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    v12 = v11;
    swift_release();
    v13 = swift_allocObject();
    *(double *)(v13 + 16) = v12;
    sub_1BA790480();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v10 + 32) = v13;
    *(_BYTE *)(v10 + 40) = 0;
  }
  v14 = v3[2];
  if (v14)
  {
    type metadata accessor for FormatDecorationContext();
    sub_1BB86DD80();
    v15 = sub_1BA72BED4(v62, v14);
    if (v2)
    {
      swift_release();
LABEL_47:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v16 = v15;
    swift_release();
    v17 = swift_allocObject();
    *(double *)(v17 + 16) = v16;
    sub_1BA790480();
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v14 + 32) = v17;
    *(_BYTE *)(v14 + 40) = 0;
  }
  v18 = v3[3];
  if (!v18)
  {
    v61 = 0;
    v20 = v3[5];
    if (!v20)
      goto LABEL_20;
LABEL_17:
    type metadata accessor for FormatDecorationContext();
    sub_1BB86DD80();
    v21 = sub_1BA72BED4(v62, v20);
    if (v2)
    {
      swift_release();
LABEL_45:
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    v27 = v21;
    swift_release();
    v28 = swift_allocObject();
    *(double *)(v28 + 16) = v27;
    sub_1BA790480();
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v29 + 32) = v28;
    v60 = v29;
    *(_BYTE *)(v29 + 40) = 0;
    v25 = v3[6];
    if (v25)
      goto LABEL_21;
LABEL_24:
    v59 = 0;
    goto LABEL_26;
  }
  type metadata accessor for FormatDecorationContext();
  sub_1BB86DD80();
  v19 = sub_1BA72BED4(v62, v18);
  if (v2)
  {
    swift_release();
LABEL_46:
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  v22 = v19;
  swift_release();
  v23 = swift_allocObject();
  *(double *)(v23 + 16) = v22;
  sub_1BA790480();
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v24 + 32) = v23;
  v61 = v24;
  *(_BYTE *)(v24 + 40) = 0;
  v20 = v3[5];
  if (v20)
    goto LABEL_17;
LABEL_20:
  v60 = 0;
  v25 = v3[6];
  if (!v25)
    goto LABEL_24;
LABEL_21:
  type metadata accessor for FormatDecorationContext();
  sub_1BB86DD80();
  v26 = sub_1BA72BED4(v62, v25);
  if (v2)
  {
    swift_release();
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  v30 = v26;
  swift_release();
  v31 = swift_allocObject();
  *(double *)(v31 + 16) = v30;
  sub_1BA790480();
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v32 + 32) = v31;
  v59 = v32;
  *(_BYTE *)(v32 + 40) = 0;
LABEL_26:
  v33 = v3[7];
  v34 = v3[8];
  v35 = *((unsigned __int8 *)v3 + 72);
  if (v35 == 255)
  {
    v58 = -1;
  }
  else
  {
    v62 = v3[7];
    v63 = v34;
    LOBYTE(v64) = v35 & 1;
    type metadata accessor for FormatDecorationContext();
    sub_1BB86DD80();
    v36 = FormatBoolean.value(contextLayoutOptions:)(v66);
    if (v2)
    {
      swift_release();
LABEL_43:
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
    v37 = v36;
    swift_release();
    v34 = 0;
    v58 = 0;
    v33 = v37 & 1;
  }
  v38 = v3[10];
  v39 = v3[11];
  v40 = v3[12];
  v41 = v3[13];
  v42 = *((unsigned __int8 *)v3 + 112);
  if (v42 == 255)
  {
    v56 = v33;
    v57 = v34;
    v43 = -1;
  }
  else if ((v42 & 1) != 0)
  {
    sub_1BB67040C(v38, v39, v40, v41, &v62);
    if (v2)
    {
      v44 = v33;
      v45 = v34;
LABEL_42:
      sub_1BA796C70(v44, v45, v58);
      goto LABEL_43;
    }
    v56 = v33;
    v57 = v34;
    v38 = v62;
    v39 = v63;
    v43 = 1;
    v40 = v64;
    v41 = v65;
  }
  else
  {
    v56 = v33;
    v57 = v34;
    v43 = 0;
  }
  v46 = v3[15];
  v47 = v3[16];
  v48 = *((unsigned __int8 *)v3 + 136);
  v54 = v39;
  v55 = v38;
  v52 = v40;
  v53 = v41;
  v51 = v43;
  if (v48 != 255)
  {
    v62 = v3[15];
    v63 = v47;
    LOBYTE(v64) = v48 & 1;
    type metadata accessor for FormatDecorationContext();
    sub_1BB86DD80();
    v49 = FormatBoolean.value(contextLayoutOptions:)(v66);
    swift_release();
    if (!v2)
    {
      v47 = 0;
      v50 = 0;
      v46 = v49 & 1;
      goto LABEL_50;
    }
    sub_1BA825F5C(v55, v54, v52, v53, v51);
    v44 = v56;
    v45 = v57;
    goto LABEL_42;
  }
  v50 = -1;
LABEL_50:
  sub_1BA6A09F0((uint64_t)(v3 + 4), (uint64_t)&v67, &qword_1ED39E800, (uint64_t)&type metadata for FormatMediaTimingFillMode);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v14;
  *(_QWORD *)(a1 + 24) = v61;
  result = sub_1BA6A09F0((uint64_t)&v67, a1 + 32, &qword_1ED39E800, (uint64_t)&type metadata for FormatMediaTimingFillMode);
  *(_QWORD *)(a1 + 40) = v60;
  *(_QWORD *)(a1 + 48) = v59;
  *(_QWORD *)(a1 + 56) = v56;
  *(_QWORD *)(a1 + 64) = v57;
  *(_BYTE *)(a1 + 72) = v58;
  *(_QWORD *)(a1 + 80) = v55;
  *(_QWORD *)(a1 + 88) = v54;
  *(_QWORD *)(a1 + 96) = v52;
  *(_QWORD *)(a1 + 104) = v53;
  *(_BYTE *)(a1 + 112) = v51;
  *(_QWORD *)(a1 + 120) = v46;
  *(_QWORD *)(a1 + 128) = v47;
  *(_BYTE *)(a1 + 136) = v50;
  return result;
}

uint64_t sub_1BB6730A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v3;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[16];
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41[2];
  char v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[184];

  sub_1BA895FE8(v2, (uint64_t)v58);
  v6 = sub_1BA896024((uint64_t)v58);
  v7 = sub_1BA896030((uint64_t)v58);
  if (v6 == 1)
  {
    v39 = a2;
    v40 = &v35;
    v8 = *(_QWORD *)v7;
    v9 = *(_QWORD *)(v7 + 8);
    v10 = *(_QWORD *)(v7 + 16);
    v11 = *(_QWORD *)(v7 + 24);
    v12 = *(_QWORD *)(v7 + 32);
    v13 = *(_QWORD *)(v7 + 40);
    v14 = *(_BYTE *)(v7 + 48);
    v15 = *(_QWORD *)(v7 + 56);
    v16 = *(_QWORD *)(v7 + 64);
    v17 = *(_QWORD *)(v7 + 72);
    v37 = *(_QWORD *)(v7 + 80);
    v38 = v17;
    v18 = *(_QWORD *)(v7 + 88);
    v35 = *(_QWORD *)(v7 + 96);
    v36 = v18;
    v19 = *(_BYTE *)(v7 + 104);
    v41[0] = a1;
    v20 = *(_QWORD *)(v7 + 120);
    MEMORY[0x1E0C80A78](v7);
    v34 = v41;
    result = sub_1BA8A1234((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BA77362C, (uint64_t)v33, v21);
    if (!v3)
    {
      v58[176] = v14 & 1;
      v42 = v19 & 1;
      *(_QWORD *)&v43 = v8;
      *((_QWORD *)&v43 + 1) = v9;
      v44 = v10;
      v45 = v11;
      v46 = v12;
      v47 = v13;
      LOBYTE(v48) = v14 & 1;
      v49 = v15;
      v50 = v16;
      v51 = v38;
      v52 = v37;
      v53 = v36;
      v54 = v35;
      v55 = v19 & 1;
      v56 = result;
      v57 = v20;
      sub_1BAE90148((uint64_t)&v43);
      sub_1BA895FE8(&v43, v39);
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
    v23 = *(_QWORD *)(v7 + 8);
    v24 = *(_QWORD *)(v7 + 16);
    v25 = *(_QWORD *)(v7 + 24);
    v26 = *(_QWORD *)(v7 + 32);
    v27 = *(_QWORD *)(v7 + 40);
    v29 = *(_QWORD *)(v7 + 48);
    v28 = *(_QWORD *)(v7 + 56);
    *(_QWORD *)&v43 = a1;
    MEMORY[0x1E0C80A78](v7);
    v34 = (uint64_t *)&v43;
    result = sub_1BA8A1234((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BA77362C, (uint64_t)v33, v30);
    if (!v3)
    {
      v31 = result;
      swift_bridgeObjectRetain();
      if (v29)
      {
        sub_1BB674700(v29, v28, v41);
        v32 = v41[0];
        v28 = v41[1];
      }
      else
      {
        v32 = 0;
      }
      *(_QWORD *)&v43 = v31;
      *((_QWORD *)&v43 + 1) = v23;
      v44 = v24;
      v45 = v25;
      v46 = v26;
      v47 = v27;
      v48 = v32;
      v49 = v28;
      sub_1BAE90170((uint64_t)&v43);
      return sub_1BA895FE8(&v43, a2);
    }
  }
  return result;
}

uint64_t sub_1BB6732E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[4];
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v3 = (uint64_t)v1;
  v69 = *v1;
  swift_beginAccess();
  v6 = v1[2];
  v5 = v1[3];
  v7 = v1[5];
  v70 = v1[4];
  swift_beginAccess();
  v8 = v1[6];
  v9 = v1[7];
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = swift_bridgeObjectRetain();
    v12 = 0;
    if (!*(_QWORD *)(v3 + 64))
    {
LABEL_8:
      v54 = v5;
      v55 = v7;
      v52 = a1;
      v56 = v8;
      v57 = v12;
      v53 = v6;
      v14 = 0;
      goto LABEL_10;
    }
LABEL_5:
    v71 = a1;
    MEMORY[0x1E0C80A78](v11);
    v47[2] = &v71;
    v14 = sub_1BA8A1070((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))sub_1BA7919BC, (uint64_t)v47, v13);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
    v54 = v5;
    v55 = v7;
    v52 = a1;
    v56 = v8;
    v57 = v12;
    v53 = v6;
LABEL_10:
    v58 = v14;
    v18 = *(_QWORD *)(v3 + 72);
    v17 = *(_QWORD *)(v3 + 80);
    v19 = *(unsigned __int8 *)(v3 + 88);
    v20 = *(_QWORD *)(v3 + 96);
    v67 = *(_QWORD *)(v3 + 104);
    v22 = *(_QWORD *)(v3 + 112);
    v21 = *(_QWORD *)(v3 + 120);
    v23 = *(_QWORD *)(v3 + 136);
    v66 = *(_QWORD *)(v3 + 128);
    v24 = *(_QWORD *)(v3 + 144);
    v25 = *(_QWORD *)(v3 + 160);
    v26 = *(_QWORD *)(v3 + 168);
    v27 = *(unsigned __int8 *)(v3 + 176);
    v68 = *(_QWORD *)(v3 + 152);
    v64 = v23;
    v65 = v24;
    v62 = v22;
    v63 = v21;
    v61 = v20;
    v60 = v25;
    v59 = v26;
    if (v27 == 254)
    {
      LODWORD(v52) = 254;
      v28 = v18;
      v29 = v17;
      v30 = v19;
      sub_1BA6E6C54(v18, v17, v19);
      v32 = v66;
      v31 = v67;
    }
    else
    {
      v50 = v18;
      v49 = v17;
      v48 = v19;
      v51 = v2;
      v33 = v25;
      v34 = v26;
      sub_1BA6E6C54(v18, v17, v19);
      v35 = v21;
      v36 = v66;
      sub_1BA6E8A48(v20, v67, v22, v35, v66, v23, v24, v68, v33, v34, v27);
      v37 = v51;
      sub_1BA742954(v52, v36);
      if (v37)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E8A78(v61, v67, v62, v63, v66, v64, v65, v68, v60, v59, v27);
        sub_1BA6E6CC4(v50, v49, v48);
        swift_bridgeObjectRelease();
        return v3;
      }
      LODWORD(v52) = v27;
      LODWORD(v31) = v67;
      sub_1BA6E8A78(v61, v67, v62, v63, v66, v64, v65, v68, v60, v59, v27);
      v32 = v71;
      v31 = v31;
      v30 = v48;
      v29 = v49;
      v28 = v50;
    }
    v38 = v54;
    v39 = *(_BYTE *)(v3 + 177);
    v3 = swift_allocObject();
    swift_beginAccess();
    *(_QWORD *)(v3 + 16) = v53;
    *(_QWORD *)(v3 + 24) = v38;
    v40 = v55;
    *(_QWORD *)(v3 + 32) = v70;
    *(_QWORD *)(v3 + 40) = v40;
    swift_beginAccess();
    v41 = v57;
    *(_QWORD *)(v3 + 48) = v56;
    *(_QWORD *)(v3 + 56) = v41;
    *(_QWORD *)(v3 + 64) = v58;
    *(_QWORD *)(v3 + 72) = v28;
    *(_QWORD *)(v3 + 80) = v29;
    *(_BYTE *)(v3 + 88) = v30;
    *(_QWORD *)(v3 + 96) = v61;
    *(_QWORD *)(v3 + 104) = v31;
    v42 = v63;
    *(_QWORD *)(v3 + 112) = v62;
    *(_QWORD *)(v3 + 120) = v42;
    v43 = v64;
    *(_QWORD *)(v3 + 128) = v32;
    *(_QWORD *)(v3 + 136) = v43;
    v44 = v68;
    *(_QWORD *)(v3 + 144) = v65;
    *(_QWORD *)(v3 + 152) = v44;
    v45 = v59;
    *(_QWORD *)(v3 + 160) = v60;
    *(_QWORD *)(v3 + 168) = v45;
    *(_BYTE *)(v3 + 176) = v52;
    *(_BYTE *)(v3 + 177) = v39;
    return v3;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v10 = sub_1BA72BED4(v71, v9);
  if (!v2)
  {
    v15 = v10;
    swift_release();
    v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    sub_1BA790480();
    v11 = swift_allocObject();
    v12 = v11;
    *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v11 + 32) = v16;
    *(_BYTE *)(v11 + 40) = 0;
    if (!*(_QWORD *)(v3 + 64))
      goto LABEL_8;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_1BB673848(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _QWORD *, uint64_t *))
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t *__return_ptr, _QWORD *, uint64_t *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t *__return_ptr, _QWORD *, uint64_t *);
  uint64_t v56;
  _QWORD v57[4];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t *__return_ptr, _QWORD *, uint64_t *);
  uint64_t v83;

  v82 = a2;
  v4 = (uint64_t)v2;
  v80 = *v2;
  swift_beginAccess();
  v7 = v2[2];
  v6 = v2[3];
  v8 = v2[4];
  v9 = *(_QWORD *)(v4 + 40);
  swift_beginAccess();
  v10 = *(_QWORD *)(v4 + 48);
  v11 = *(_QWORD *)(v4 + 56);
  v81 = v8;
  if (!v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = swift_bridgeObjectRetain();
    v14 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v12 = sub_1BA72BED4(v83, v11);
  if (!v3)
  {
    v15 = v12;
    swift_release();
    v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    sub_1BA790480();
    v13 = swift_allocObject();
    v14 = v13;
    *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v13 + 32) = v16;
    *(_BYTE *)(v13 + 40) = 0;
LABEL_6:
    v17 = *(_QWORD *)(v4 + 64);
    if ((~v17 & 0xF000000000000007) != 0)
    {
      swift_retain();
      sub_1BA6F5534(a1, v17);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_24:
        sub_1BA6E6CD8(v17);
        goto LABEL_25;
      }
      v13 = sub_1BA6E6CD8(v17);
      v17 = v83;
    }
    v18 = *(_QWORD *)(v4 + 72);
    v69 = v7;
    if (v18)
    {
      v83 = a1;
      MEMORY[0x1E0C80A78](v13);
      v57[2] = &v83;
      v20 = sub_1BA8A1070(v82, (uint64_t)v57, v19);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E6CD8(v17);
        swift_bridgeObjectRelease();
        return v4;
      }
      v64 = 0;
      v58 = v6;
      v59 = v9;
      v65 = a1;
      v60 = v10;
      v61 = v17;
      v62 = v20;
      v63 = v14;
    }
    else
    {
      v64 = v3;
      v58 = v6;
      v59 = v9;
      v65 = a1;
      v60 = v10;
      v61 = v17;
      v63 = v14;
      v62 = 0;
    }
    v21 = *(_QWORD *)(v4 + 80);
    v22 = *(_QWORD *)(v4 + 88);
    v23 = *(_BYTE *)(v4 + 96);
    v24 = *(_QWORD *)(v4 + 104);
    v25 = *(_QWORD *)(v4 + 112);
    v26 = *(_QWORD *)(v4 + 120);
    v27 = *(_QWORD *)(v4 + 128);
    v28 = *(_QWORD *)(v4 + 136);
    v29 = *(_QWORD *)(v4 + 144);
    v31 = *(_QWORD *)(v4 + 152);
    v30 = *(void (**)(uint64_t *__return_ptr, _QWORD *, uint64_t *))(v4 + 160);
    v32 = *(_QWORD *)(v4 + 168);
    v33 = *(_QWORD *)(v4 + 176);
    v34 = *(unsigned __int8 *)(v4 + 184);
    v68 = v23;
    v67 = v22;
    v66 = v21;
    v82 = v30;
    v78 = v29;
    v79 = v31;
    v74 = v26;
    v75 = v27;
    v76 = v28;
    v77 = v25;
    v73 = v24;
    v72 = v32;
    v71 = v33;
    v70 = v34;
    if (v34 == 254)
    {
      sub_1BA6E6C54(v21, v22, v23);
      v35 = v65;
      v36 = v64;
    }
    else
    {
      v37 = v28;
      v38 = v32;
      v39 = v34;
      sub_1BA6E6C54(v21, v22, v23);
      sub_1BA6E8A48(v24, v25, v26, v27, v37, v78, v79, (uint64_t)v82, v38, v33, v39);
      v35 = v65;
      v40 = v64;
      sub_1BA742954(v65, v37);
      v36 = v40;
      if (v40)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E8A78(v73, v77, v74, v75, v76, v78, v79, (uint64_t)v82, v72, v71, v70);
        sub_1BA6E6CC4(v66, v67, v68);
        sub_1BA6E6CD8(v61);
LABEL_25:
        swift_bridgeObjectRelease();
        return v4;
      }
      v41 = v77;
      sub_1BA6E8A78(v73, v77, v74, v75, v76, v78, v79, (uint64_t)v82, v72, v71, v70);
      v76 = v83;
      v77 = v41;
    }
    v42 = *(_QWORD *)(v4 + 192);
    v43 = v63;
    v17 = v61;
    v44 = v60;
    if ((~v42 & 0xF000000000000007) != 0)
    {
      swift_retain();
      sub_1BA742954(v35, v42);
      v46 = v59;
      v47 = v58;
      if (v36)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v42);
        sub_1BA6E8A78(v73, v77, v74, v75, v76, v78, v79, (uint64_t)v82, v72, v71, v70);
        sub_1BA6E6CC4(v66, v67, v68);
        goto LABEL_24;
      }
      v45 = v43;
      sub_1BA5E800C(v42);
      v42 = v83;
    }
    else
    {
      v45 = v63;
      v46 = v59;
      v47 = v58;
    }
    v49 = *(_BYTE *)(v4 + 200);
    v4 = swift_allocObject();
    swift_beginAccess();
    *(_QWORD *)(v4 + 16) = v69;
    *(_QWORD *)(v4 + 24) = v47;
    *(_QWORD *)(v4 + 32) = v81;
    *(_QWORD *)(v4 + 40) = v46;
    swift_beginAccess();
    *(_QWORD *)(v4 + 48) = v44;
    *(_QWORD *)(v4 + 56) = v45;
    v50 = v62;
    *(_QWORD *)(v4 + 64) = v17;
    *(_QWORD *)(v4 + 72) = v50;
    v51 = v67;
    *(_QWORD *)(v4 + 80) = v66;
    *(_QWORD *)(v4 + 88) = v51;
    *(_BYTE *)(v4 + 96) = v68;
    v52 = v77;
    *(_QWORD *)(v4 + 104) = v73;
    *(_QWORD *)(v4 + 112) = v52;
    v53 = v75;
    *(_QWORD *)(v4 + 120) = v74;
    *(_QWORD *)(v4 + 128) = v53;
    v54 = v78;
    *(_QWORD *)(v4 + 136) = v76;
    *(_QWORD *)(v4 + 144) = v54;
    v55 = v82;
    *(_QWORD *)(v4 + 152) = v79;
    *(_QWORD *)(v4 + 160) = v55;
    v56 = v71;
    *(_QWORD *)(v4 + 168) = v72;
    *(_QWORD *)(v4 + 176) = v56;
    *(_BYTE *)(v4 + 184) = v70;
    *(_QWORD *)(v4 + 192) = v42;
    *(_BYTE *)(v4 + 200) = v49;
    return v4;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v4;
}

uint64_t sub_1BB673F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(void), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _DWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(_QWORD);
  void (*v81)(void);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  _QWORD v101[6];
  _BYTE v102[56];
  uint64_t v103;

  v81 = a6;
  v82 = a7;
  v79 = a4;
  v80 = a5;
  v8 = v7;
  v87 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v83 = *(_QWORD *)(v10 - 8);
  v84 = v10;
  MEMORY[0x1E0C80A78](v10);
  v85 = (char *)&v73 - v11;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v86 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v88 = (uint64_t)&v73 - v15;
  v16 = type metadata accessor for FormatNodeStateData.Data();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = a1;
  swift_beginAccess();
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BA707E14(v20, 0);
  swift_bridgeObjectRelease();
  v22 = (uint64_t *)(*(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v23 = *v22;
  v24 = v22[1];
  swift_beginAccess();
  v89 = v8;
  v25 = *(_QWORD *)(v8 + 112);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v90 = v21;
  v26 = v91;
  v27 = sub_1BB66B870(v25, v21, v23, v24, (void (*)(uint64_t))sub_1BAAF1B08, sub_1BB670144, (uint64_t (*)(uint64_t, uint64_t))sub_1BB67FA3C, (void (*)(_QWORD))type metadata accessor for FormatProgressViewNodeStyle, (void (*)(uint64_t))sub_1BAAF0EF4);
  v91 = v26;
  if (!v26)
  {
    v73 = v16;
    v74 = v17;
    v75 = v19;
    v77 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v28 = v89;
    v29 = v90;
    swift_beginAccess();
    v30 = *(_QWORD *)(v28 + 16);
    v31 = *(_QWORD *)(v28 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    v76 = sub_1BA717D44(v30, v31);
    v78 = v32;
    swift_release();
    swift_bridgeObjectRelease();
    v33 = *(_QWORD *)(v28 + 56);
    v34 = *(_BYTE *)(v28 + 64);
    v35 = *(_QWORD *)(v28 + 72);
    v36 = *(_QWORD *)(v28 + 80);
    v37 = *(_QWORD *)(v28 + 88);
    v38 = *(_WORD *)(v28 + 96);
    v93 = v33;
    LOBYTE(v94) = v34;
    v95 = v35;
    v96 = v36;
    v97 = v37;
    LOWORD(v98) = v38;
    sub_1BAC68B58(v33, v34);
    sub_1BA856DA0(v35, v36, v37, v38);
    v39 = v91;
    sub_1BB81045C(v29, (uint64_t)v101);
    v91 = v39;
    if (v39)
    {
      sub_1BAC68B64(v33, v34);
      sub_1BA856E2C(v35, v36, v37, v38);
      swift_release();
LABEL_5:
      swift_bridgeObjectRelease();
      return swift_release();
    }
    sub_1BAC68B64(v33, v34);
    sub_1BA856E2C(v35, v36, v37, v38);
    v40 = v101[1];
    v41 = (uint64_t)v75;
    *v75 = v101[0];
    *(_QWORD *)(v41 + 8) = v40;
    v42 = v73;
    swift_storeEnumTagMultiPayload();
    v43 = v88;
    sub_1BA4C2DD8(v41, v88, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 56))(v43, 0, 1, v42);
    v44 = v86;
    sub_1BA5E01A4(v43, v86, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    v87 = v40;
    sub_1BA897950(v40);
    v45 = v78;
    swift_bridgeObjectRetain();
    sub_1BA722740(v44, v76, v45);
    swift_endAccess();
    sub_1BA5C699C(v43, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    v46 = v89;
    swift_beginAccess();
    v47 = *(_QWORD *)(v46 + 120);
    v48 = *(_QWORD *)(v46 + 128);
    v49 = *(_QWORD *)(v46 + 136);
    v50 = *(_QWORD *)(v46 + 144);
    v51 = *(_QWORD *)(v46 + 152);
    v52 = *(_QWORD *)(v46 + 160);
    v53 = *(_QWORD *)(v46 + 168);
    v54 = *(unsigned __int8 *)(v46 + 176);
    v93 = v47;
    v94 = v48;
    v95 = v49;
    v96 = v50;
    v97 = v51;
    v98 = v52;
    v99 = v53;
    v100 = v54;
    v55 = v51;
    v56 = v52;
    v88 = v53;
    LODWORD(v86) = v54;
    sub_1BAEAF798(v47, v48, v49, v50, v51, v52, v53, v54);
    sub_1BB86DD80();
    v57 = v91;
    FormatProgressKind.value(contextLayoutOptions:)(v92, (uint64_t)v101);
    v91 = v57;
    if (v57)
    {
      sub_1BAC68B70(v47, v48, v49, v50, v55, v56, v88, v86);
      sub_1BA8979BC(v87);
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAC68B70(v47, v48, v49, v50, v55, v56, v88, v86);
      swift_release();
      sub_1BB0A29E4((uint64_t)v101, (uint64_t)v102);
      swift_getKeyPath();
      v58 = v89;
      swift_beginAccess();
      v101[0] = *(_QWORD *)(v58 + 32);
      v59 = v101[0];
      v60 = v78;
      swift_bridgeObjectRetain();
      sub_1BA71CA6C(v59);
      v61 = v85;
      v62 = v91;
      v63 = v76;
      sub_1BA717E88();
      v91 = v62;
      if (!v62)
      {
        sub_1BA719718(v59);
        swift_beginAccess();
        v65 = v90;
        swift_retain();
        v66 = swift_bridgeObjectRetain();
        v67 = v65;
        v68 = v91;
        sub_1BB67D4D4(v66, v67);
        v91 = v68;
        if (!v68)
        {
          swift_bridgeObjectRelease();
          v69 = v90;
          swift_release();
          v70 = (_QWORD *)swift_allocObject();
          v70[2] = v63;
          v70[3] = v60;
          v71 = v89;
          v70[4] = v69;
          v70[5] = v71;
          v70[6] = v77;
          sub_1BB0A29E4((uint64_t)v102, (uint64_t)(v70 + 7));
          v88 = v80(0);
          v81();
          swift_retain();
          swift_retain();
          swift_retain();
          v72 = v91;
          sub_1BB86D534();
          v91 = v72;
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1BA8979BC(v87);
          return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v61, v84);
        }
        swift_release();
        (*(void (**)(char *, uint64_t))(v83 + 8))(v61, v84);
        sub_1BA8979BC(v87);
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_5;
      }
      sub_1BA719718(v59);
      sub_1BA8979BC(v87);
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    swift_release();
    return swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1BB674700@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  double v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BB86DD80();
  v7 = sub_1BA72BED4(v13, a1);
  result = swift_release();
  if (!v3)
  {
    v9 = swift_allocObject();
    *(double *)(v9 + 16) = v7;
    sub_1BA790480();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v10 + 32) = v9;
    *(_BYTE *)(v10 + 40) = 0;
    sub_1BB86DD80();
    v11 = sub_1BA72BED4(v13, a2);
    swift_release();
    v12 = swift_allocObject();
    *(double *)(v12 + 16) = v11;
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(result + 32) = v12;
    *(_BYTE *)(result + 40) = 0;
    *a3 = v10;
    a3[1] = result;
  }
  return result;
}

uint64_t sub_1BB674864@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  double v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for FormatDecorationContext();
  sub_1BB86DD80();
  v7 = sub_1BA72BED4(v13, a1);
  result = swift_release();
  if (!v3)
  {
    v9 = swift_allocObject();
    *(double *)(v9 + 16) = v7;
    sub_1BA790480();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v10 + 32) = v9;
    *(_BYTE *)(v10 + 40) = 0;
    sub_1BB86DD80();
    v11 = sub_1BA72BED4(v13, a2);
    swift_release();
    v12 = swift_allocObject();
    *(double *)(v12 + 16) = v11;
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(result + 32) = v12;
    *(_BYTE *)(result + 40) = 0;
    *a3 = v10;
    a3[1] = result;
  }
  return result;
}

uint64_t sub_1BB6749D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), void (*a6)(void), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(_QWORD);
  void (*v63)(void);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[6];
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;

  v64 = a7;
  v63 = a6;
  v62 = a5;
  v61 = a4;
  v8 = v7;
  v70 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v66 = v11;
  v65 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v73 = (char *)&v56 - v12;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v69 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v71 = (uint64_t)&v56 - v16;
  v68 = type metadata accessor for FormatNodeStateData.Data();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FormatShareAttributionData();
  MEMORY[0x1E0C80A78](v19);
  v74 = (uint64_t)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SharedItem();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v56 - v25;
  v77[5] = a1;
  v82 = *(_QWORD *)(v8 + 80);
  v27 = v82;
  sub_1BA781758((uint64_t)&v82);
  v28 = sub_1BA707E14(v27, 0);
  sub_1BA4F6CCC((uint64_t)&v82);
  v76 = v28;
  v72 = v8;
  v81 = *(_OWORD *)v8;
  v29 = v81;
  swift_retain();
  sub_1BA739BF4((uint64_t)&v81);
  v30 = sub_1BA717D44(v29, *((uint64_t *)&v29 + 1));
  v32 = v31;
  sub_1BA73D624((uint64_t)&v81);
  swift_release();
  v77[3] = type metadata accessor for FormatNodeContext();
  v77[4] = &off_1E72F9288;
  v77[0] = a2;
  swift_retain();
  v33 = v75;
  sub_1BA6D4C0C(v77, (uint64_t)v26);
  if (v33)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v58 = v22;
    v59 = v23;
    v60 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    v35 = v74;
    sub_1BA4C2DD8((uint64_t)v26, v74, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    sub_1BA4C2DD8(v35, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatShareAttributionData);
    v36 = v68;
    swift_storeEnumTagMultiPayload();
    v37 = v71;
    v75 = 0;
    sub_1BA4C2DD8((uint64_t)v18, v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v67 + 56))(v37, 0, 1, v36);
    v38 = v69;
    sub_1BA5E01A4(v37, v69, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BA722740(v38, v30, v32);
    swift_endAccess();
    sub_1BA5C699C(v37, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    KeyPath = swift_getKeyPath();
    v40 = v72;
    v79 = *(_QWORD *)(v72 + 16);
    sub_1BB680D0C(&v79, &v80);
    sub_1BB680D0C(&v80, v77);
    swift_bridgeObjectRetain();
    sub_1BB680D48(&v79);
    v41 = v75;
    v42 = v76;
    sub_1BA717E88();
    v43 = v74;
    if (v41)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release();
      sub_1BB680D70(&v79);
      sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatShareAttributionData);
      v46 = (uint64_t)v26;
    }
    else
    {
      v75 = KeyPath;
      v71 = v30;
      sub_1BB680D70(&v79);
      v78 = *(_QWORD *)(v40 + 32);
      v44 = v78;
      swift_retain();
      sub_1BA781758((uint64_t)&v78);
      v45 = sub_1BB67D4D4(v44, v42);
      v47 = v76;
      v70 = v45;
      swift_release();
      sub_1BA4F6CCC((uint64_t)&v78);
      v57 = v26;
      v48 = v60;
      sub_1BA4C2DD8((uint64_t)v26, v60, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
      v49 = (*(unsigned __int8 *)(v58 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      v50 = swift_allocObject();
      v51 = *(_OWORD *)(v40 + 48);
      *(_OWORD *)(v50 + 56) = *(_OWORD *)(v40 + 32);
      *(_OWORD *)(v50 + 72) = v51;
      *(_OWORD *)(v50 + 88) = *(_OWORD *)(v40 + 64);
      v52 = *(_OWORD *)(v40 + 16);
      *(_OWORD *)(v50 + 24) = *(_OWORD *)v40;
      *(_QWORD *)(v50 + 16) = v47;
      v53 = *(_QWORD *)(v40 + 80);
      *(_OWORD *)(v50 + 40) = v52;
      v54 = v71;
      *(_QWORD *)(v50 + 104) = v53;
      *(_QWORD *)(v50 + 112) = v54;
      *(_QWORD *)(v50 + 120) = v32;
      sub_1BA5193C4(v48, v50 + v49, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
      swift_retain();
      sub_1BAEA7924(v40);
      v62(0);
      v63();
      v55 = v73;
      sub_1BB86D534();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v55, v66);
      sub_1BA4A2E80(v74, (uint64_t (*)(_QWORD))type metadata accessor for FormatShareAttributionData);
      v46 = (uint64_t)v57;
    }
    return sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
  }
}

void sub_1BB6750B8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

void sub_1BB6750E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA772DC0(a1, a2);
  if (!v3)
    *v2 = v4;
}

uint64_t sub_1BB675174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), void (*a6)(void), uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  _QWORD v49[2];
  void (*v50)(_QWORD);
  void (*v51)(void);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *KeyPath;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v52 = a7;
  v51 = a6;
  v50 = a5;
  v49[1] = a4;
  v8 = v7;
  v58 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v53 = *(_QWORD *)(v11 - 8);
  v54 = v11;
  MEMORY[0x1E0C80A78](v11);
  v60 = (char *)v49 - v12;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v57 = (uint64_t)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v49 - v16;
  v18 = type metadata accessor for FormatNodeStateData.Data();
  v55 = *(_QWORD *)(v18 - 8);
  v56 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for FeedSponsorshipBannerAd();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = a1;
  swift_beginAccess();
  v24 = swift_bridgeObjectRetain();
  v25 = sub_1BA707E14(v24, 0);
  swift_bridgeObjectRelease();
  v26 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace;
  swift_beginAccess();
  v27 = v8[2];
  v28 = v8[3];
  swift_retain();
  swift_bridgeObjectRetain();
  v59 = sub_1BA717D44(v27, v28);
  v62 = v29;
  swift_release();
  swift_bridgeObjectRelease();
  v63 = v25;
  v30 = *(_QWORD *)(v25 + v26);
  v31 = v8[3];
  v32 = *(_QWORD *)(v30 + 40);
  if (v32)
  {
    v64 = *(_QWORD *)(v30 + 32);
    v65 = v32;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v33);
    sub_1BB872AFC(v34);
    swift_release();
    swift_bridgeObjectRelease();
    v31 = v65;
    v49[0] = v64;
  }
  else
  {
    v49[0] = v8[2];
    swift_bridgeObjectRetain();
  }
  v35 = KeyPath;
  v36 = v62;
  sub_1BAF65650(*(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), (uint64_t)v23);
  if (v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    v37 = v8[2];
    v38 = v8[3];
    *v39 = v37;
    v39[1] = v38;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();

    return swift_release();
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FeedSponsorshipBannerAd);
    v40 = v56;
    swift_storeEnumTagMultiPayload();
    KeyPath = v20;
    sub_1BA4C2DD8((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v17, 0, 1, v40);
    v41 = v57;
    sub_1BA5E01A4((uint64_t)v17, v57, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BA722740(v41, v59, v36);
    swift_endAccess();
    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BA4A2E80((uint64_t)KeyPath, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FeedSponsorshipBannerAd);
    KeyPath = (char *)swift_getKeyPath();
    v64 = v8[4];
    v42 = v64;
    swift_bridgeObjectRetain();
    sub_1BA71CA6C(v42);
    sub_1BA717E88();
    sub_1BA719718(v42);
    swift_beginAccess();
    v44 = v63;
    swift_retain();
    v45 = swift_bridgeObjectRetain();
    sub_1BB67D4D4(v45, v44);
    swift_bridgeObjectRelease();
    swift_release();
    v46 = (_QWORD *)swift_allocObject();
    v47 = v62;
    v46[2] = v59;
    v46[3] = v47;
    v46[4] = v49[0];
    v46[5] = v31;
    v46[6] = v8;
    v46[7] = v44;
    v50(0);
    v51();
    swift_retain();
    swift_retain();
    v48 = v60;
    sub_1BB86D534();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v48, v54);
  }
}

uint64_t sub_1BB6757C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;
  uint64_t v44;

  v40 = a4;
  v5 = v4;
  v39 = a3;
  v44 = a1;
  sub_1BB68079C(0, (unint64_t *)&qword_1ED3B3788, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - v8;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v39 - v13);
  v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items;
  swift_beginAccess();
  v16 = *(_QWORD *)(v15 + 8);
  if (!*(_QWORD *)(v16 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v9, 1, 1, v11);
LABEL_7:
    sub_1BA78D440((uint64_t)v9, (unint64_t *)&qword_1ED3B3788, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v22 = v5;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    return swift_willThrow();
  }
  v18 = v5[4];
  v17 = v5[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_1BA6E35A8(v18, v17);
  if ((v20 & 1) != 0)
  {
    sub_1BA7BCB94(*(_QWORD *)(v16 + 56) + *(_QWORD *)(v12 + 72) * v19, (uint64_t)v9, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v9, v21, 1, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
    goto LABEL_7;
  sub_1BA7BE148((uint64_t)v9, (uint64_t)v14, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
  swift_beginAccess();
  v24 = v5[2];
  v25 = v5[3];
  swift_bridgeObjectRetain();
  v26 = sub_1BA717D44(v24, v25);
  v28 = v27;
  swift_bridgeObjectRelease();
  v29 = v41;
  v30 = sub_1BB4DBEE8(v14, a2, v26, v28);
  if (v29)
  {
    sub_1BB06B59C((uint64_t)v14, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v31 = v30;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v32 = v5[9];
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      swift_bridgeObjectRetain();
      v34 = 32;
      v36 = v39;
      v35 = v40;
      do
      {
        v37 = *(_OWORD *)(v32 + v34);
        v38 = *(_OWORD *)(v32 + v34 + 16);
        v43 = *(_QWORD *)(v32 + v34 + 32);
        v42[0] = v37;
        v42[1] = v38;
        sub_1BA7086BC((uint64_t)v42);
        v35(v44, v31, v36);
        sub_1BA708680((uint64_t)v42);
        v34 += 40;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
    }
    swift_release();
    return sub_1BB06B59C((uint64_t)v14, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  }
}

uint64_t sub_1BB675C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), void (*a6)(void))
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v52;

  v8 = v6;
  swift_beginAccess();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_1BA707E14(v10, 0);
  swift_bridgeObjectRelease();
  v12 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  v13 = (uint64_t *)(*(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v15 = *v13;
  v14 = v13[1];
  v16 = v8[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BB66AD08(v16, v11, v15, v14, (void (*)(uint64_t))sub_1BB7CE16C, (void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))sub_1BA7919BC, (uint64_t (*)(uint64_t, uint64_t))sub_1BB67F78C, (void (*)(_QWORD))type metadata accessor for FormatVideoPlayerNodeStyle, (void (*)(uint64_t))sub_1BB7CD118);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v7)
    return swift_release();
  v47 = a2;
  v48 = v17;
  swift_beginAccess();
  v19 = v8[2];
  v20 = v8[3];
  swift_retain();
  swift_bridgeObjectRetain();
  v21 = sub_1BA717D44(v19, v20);
  v23 = v22;
  swift_release();
  swift_bridgeObjectRelease();
  v24 = (uint64_t *)(*(_QWORD *)(v11 + v12) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v25 = *v24;
  v26 = v24[1];
  v27 = v8[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = sub_1BA6E3AA0(v27, v11, v25, v26, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
  v45 = v21;
  v46 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v28 && (swift_beginAccess(), (v29 = *(_QWORD *)(v28 + 72)) != 0) && *(_QWORD *)(v29 + 16))
  {
    v30 = *(_QWORD *)(v28 + 48);
    v31 = *(_QWORD *)(v28 + 56);
    v32 = *(unsigned __int8 *)(v28 + 64);
    swift_retain();
    swift_retain();
    v33 = swift_bridgeObjectRetain();
    v39 = sub_1BB67D220(v33, v11);
    swift_bridgeObjectRelease();
    swift_release();
    if (v32)
      v40 = 0;
    else
      v40 = v31;
    if (v32)
      v41 = 0;
    else
      v41 = v30;
    type metadata accessor for FormatAnimationData();
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = v28;
    *(_QWORD *)(v42 + 24) = v41;
    *(_QWORD *)(v42 + 32) = v40;
    *(_BYTE *)(v42 + 40) = v32;
    *(_QWORD *)(v42 + 48) = v39;
    v34 = a3;
    v43 = *(_QWORD *)(a3 + 24);
    swift_beginAccess();
    swift_retain_n();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52 = *(_QWORD *)(v43 + 32);
    *(_QWORD *)(v43 + 32) = 0x8000000000000000;
    sub_1BA81C03C(v42, v45, v46, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v43 + 32) = v52;
    v36 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
    v35 = v47;
  }
  else
  {
    v34 = a3;
    v36 = v23;
    v35 = v47;
  }
  swift_unownedRetainStrong();
  swift_bridgeObjectRetain();
  swift_unownedRetain();
  swift_release();
  v37 = v36;
  v38 = (_QWORD *)swift_allocObject();
  v38[2] = v45;
  v38[3] = v37;
  v38[4] = v8;
  v38[5] = v11;
  v38[6] = v35;
  v38[7] = v34;
  v38[8] = v48;
  a5(0);
  a6();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86D504();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BB676120(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = a2;
  if ((~a2 & 0xF000000000000007) != 0)
  {
    sub_1BA742954(a1, a2);
    if (v5)
      return;
    v8 = v16;
  }
  if ((~a3 & 0xF000000000000007) != 0)
  {
    v10 = swift_allocObject();
    sub_1BB86DD80();
    FormatFloat.value(contextLayoutOptions:)();
    v12 = v11;
    swift_release();
    if (v5)
    {
      swift_deallocUninitializedObject();
LABEL_11:
      sub_1BA5E800C(v8);
      return;
    }
    *(_QWORD *)(v10 + 16) = v12;
    a3 = v10;
  }
  if ((~a4 & 0xF000000000000007) != 0)
  {
    v13 = swift_allocObject();
    sub_1BB86DD80();
    FormatFloat.value(contextLayoutOptions:)();
    v15 = v14;
    swift_release();
    if (v5)
    {
      swift_deallocUninitializedObject();
      sub_1BA6E6CD8(a3);
      goto LABEL_11;
    }
    *(_QWORD *)(v13 + 16) = v15;
    a4 = v13;
  }
  *a5 = v8;
  a5[1] = a3;
  a5[2] = a4;
}

uint64_t sub_1BB6762BC(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(void), uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v51;
  __int128 *v52;
  uint64_t v53;
  __int128 **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD);
  void (*v59)(void);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;

  v60 = a7;
  v59 = a6;
  v58 = a5;
  v57 = a4;
  v9 = v8;
  v10 = v7;
  v65 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v61 = *(_QWORD *)(v13 - 8);
  v62 = v13;
  MEMORY[0x1E0C80A78](v13);
  v67 = (char *)&v53 - v14;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v64 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v66 = (uint64_t)&v53 - v18;
  v63 = type metadata accessor for FormatNodeStateData.Data();
  v19 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v21 = (__int128 **)((char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = a1;
  swift_beginAccess();
  v22 = swift_bridgeObjectRetain();
  v69 = a2;
  v23 = sub_1BA707E14(v22, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v24 = v10[2];
  v25 = v10[3];
  swift_retain();
  swift_bridgeObjectRetain();
  v68 = sub_1BA717D44(v24, v25);
  v27 = v26;
  swift_release();
  swift_bridgeObjectRelease();
  v28 = (uint64_t *)(*(_QWORD *)(v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v30 = *v28;
  v29 = v28[1];
  v31 = v10[11];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = sub_1BA6E3AA0(v31, v23, v30, v29, (void (*)(uint64_t))sub_1BAB17688, (uint64_t (*)(uint64_t))sub_1BB67E614, (uint64_t (*)(uint64_t, uint64_t))sub_1BB67E76C, (void (*)(_QWORD))type metadata accessor for FormatWebEmbedNodeStyle, (void (*)(uint64_t))sub_1BAB1685C);
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v54 = v21;
    v56 = v32;
    v55 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v33 = v10[7];
    type metadata accessor for FormatWebEmbedDataConfig();
    swift_allocObject();
    swift_retain();
    v34 = swift_retain();
    v35 = sub_1BB7E7C6C(v34, v33);
    v70 = v10[4];
    swift_retain();
    v36 = v23;
    v37 = sub_1BB479D3C(v23, v35);
    v69 = v35;
    swift_release();
    v38 = (uint64_t)v54;
    *v54 = v37;
    v39 = v63;
    swift_storeEnumTagMultiPayload();
    v40 = v66;
    sub_1BA4C2DD8(v38, v66, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v40, 0, 1, v39);
    v41 = v64;
    sub_1BA5E01A4(v40, v64, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    swift_retain();
    v42 = v55;
    swift_bridgeObjectRetain();
    v43 = v41;
    v65 = v37;
    v44 = v68;
    sub_1BA722740(v43, v68, v42);
    swift_endAccess();
    sub_1BA5C699C(v40, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    v45 = v38;
    v46 = v42;
    sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    swift_getKeyPath();
    v70 = v10[8];
    v47 = v70;
    swift_bridgeObjectRetain();
    sub_1BA71CA6C(v47);
    v48 = v67;
    sub_1BA717E88();
    sub_1BA719718(v47);
    swift_beginAccess();
    swift_retain();
    v49 = swift_bridgeObjectRetain();
    v66 = sub_1BB67D4D4(v49, v36);
    swift_bridgeObjectRelease();
    swift_release();
    v51 = (_QWORD *)swift_allocObject();
    v51[2] = v44;
    v51[3] = v46;
    v51[4] = v36;
    v51[5] = v10;
    v52 = v65;
    v51[6] = v56;
    v51[7] = v52;
    v64 = v58(0);
    v59();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1BB86D534();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v48, v62);
  }
}

uint64_t sub_1BB6769BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t (*a7)(void), uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(_QWORD);
  uint64_t (*v112)(void);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  __int128 v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;

  v113 = a8;
  v112 = a7;
  v111 = a6;
  v110 = a5;
  v117 = a4;
  v125 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v96 - v14;
  v115 = sub_1BB86DA38();
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v116 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v124 = (uint64_t)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v96 - v20;
  v122 = type metadata accessor for FormatNodeStateData.Data();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v123 = (uint64_t *)((char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v147 = a1;
  swift_beginAccess();
  v24 = *(_QWORD *)(v8 + 16);
  v23 = *(_QWORD *)(v8 + 24);
  v127 = v8;
  swift_bridgeObjectRetain();
  v25 = sub_1BA717D44(v24, v23);
  v27 = v26;
  swift_bridgeObjectRelease();
  v128 = a2;
  v28 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  if (!*(_QWORD *)(v28 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v120 = v25;
  v29 = sub_1BA6E35A8(v25, v27);
  if ((v30 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v25 = v120;
LABEL_6:
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v51 = v25;
    v51[1] = v27;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v101 = v21;
  v100 = v15;
  v98 = v13;
  v99 = v12;
  v31 = *(_QWORD *)(v28 + 56) + 88 * v29;
  v32 = *(_QWORD *)(v31 + 8);
  v109 = *(_QWORD *)v31;
  v118 = v32;
  v33 = *(_QWORD *)(v31 + 24);
  v108 = *(_QWORD *)(v31 + 16);
  v35 = *(_QWORD *)(v31 + 32);
  v34 = *(_QWORD *)(v31 + 40);
  v37 = *(_QWORD *)(v31 + 48);
  v36 = *(_QWORD *)(v31 + 56);
  v39 = *(_QWORD *)(v31 + 64);
  v38 = *(_QWORD *)(v31 + 72);
  v40 = *(unsigned __int8 *)(v31 + 80);
  swift_bridgeObjectRetain();
  v105 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v119 = v34;
  swift_bridgeObjectRetain();
  sub_1BA7261E0(v37, v36, v39, v38, v40);
  swift_bridgeObjectRelease();
  v136 = v109;
  v137 = v118;
  v138 = v108;
  v139 = v33;
  v140 = v35;
  v141 = v34;
  v142 = v37;
  v143 = v36;
  v144 = v39;
  v145 = v38;
  v146 = v40;
  sub_1BB29E414((uint64_t)&v136);
  swift_beginAccess();
  v107 = v27;
  v41 = swift_bridgeObjectRetain();
  v102 = sub_1BA707E14(v41, 0);
  swift_release();
  swift_bridgeObjectRelease();
  v129 = v37;
  v130 = v36;
  v131 = v39;
  v132 = v38;
  v133 = v40;
  v136 = v35;
  v137 = v119;
  v138 = v37;
  v139 = v36;
  v140 = v39;
  v141 = v38;
  LOBYTE(v142) = v40;
  v103 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA7261E0(v37, v36, v39, v38, v40);
  v42 = v37;
  v43 = v36;
  v104 = v39;
  v44 = v39;
  v45 = v38;
  v106 = v40;
  sub_1BA7261E0(v37, v36, v44, v38, v40);
  v46 = v126;
  sub_1BB71EF14(v128, v108, v105, v109, v118, (unint64_t *)&v134);
  v128 = v46;
  if (v46)
  {
    v47 = v104;
    v48 = v38;
    v49 = v106;
    sub_1BA6C1F54(v42, v36, v104, v48, v106);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6C1F54(v42, v36, v47, v45, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_1BA6C1F54(v42, v36, v47, v45, v49);
  }
  else
  {
    v52 = v104;
    v53 = v106;
    sub_1BA6C1F54(v42, v36, v104, v38, v106);
    v126 = v134;
    v54 = v135;
    type metadata accessor for FormatStateMachineData();
    v55 = swift_allocObject();
    v56 = v119;
    *(_QWORD *)(v55 + 16) = v103;
    *(_QWORD *)(v55 + 24) = v56;
    v108 = v42;
    *(_QWORD *)(v55 + 32) = v42;
    *(_QWORD *)(v55 + 40) = v43;
    v109 = v43;
    *(_QWORD *)(v55 + 48) = v52;
    *(_QWORD *)(v55 + 56) = v38;
    *(_BYTE *)(v55 + 64) = v53;
    *(_OWORD *)(v55 + 72) = v126;
    *(_QWORD *)(v55 + 88) = v54;
    v57 = (uint64_t)v123;
    *v123 = v55;
    v58 = v122;
    swift_storeEnumTagMultiPayload();
    v59 = *(_QWORD *)(v125 + 24);
    v60 = (uint64_t)v101;
    sub_1BA4C2DD8(v57, (uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v121 + 56))(v60, 0, 1, v58);
    v61 = v124;
    sub_1BA5E01A4(v60, v124, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    *(_QWORD *)&v126 = v59;
    swift_beginAccess();
    swift_retain_n();
    v62 = v107;
    swift_bridgeObjectRetain();
    sub_1BA722740(v61, v120, v62);
    swift_endAccess();
    sub_1BA5C699C(v60, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BA4A2E80(v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    type metadata accessor for FormatStateViewNodeStateMapper();
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = MEMORY[0x1E0DEE9E0];
    v64 = v102;
    v65 = (uint64_t *)(*(_QWORD *)(v102 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                    + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    v66 = *v65;
    v67 = v65[1];
    v68 = *(_QWORD *)(v127 + 104);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v69 = v128;
    v70 = sub_1BA6E3AA0(v68, v64, v66, v67, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
    if (v69)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C1F54(v108, v109, v104, v45, v106);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_release();
    }
    else
    {
      v71 = v126;
      v124 = v63;
      v123 = (_QWORD *)v55;
      v72 = v64;
      v73 = v107;
      v128 = v70;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v97 = v45;
      if (v128 && (swift_beginAccess(), v74 = v128, (v75 = *(_QWORD *)(v128 + 72)) != 0) && *(_QWORD *)(v75 + 16))
      {
        v76 = *(_QWORD *)(v128 + 56);
        v122 = *(_QWORD *)(v128 + 48);
        v77 = *(unsigned __int8 *)(v128 + 64);
        swift_retain();
        swift_retain();
        v78 = swift_bridgeObjectRetain();
        v121 = sub_1BB67D220(v78, v72);
        swift_bridgeObjectRelease();
        swift_release();
        if (v77)
          v86 = 0;
        else
          v86 = v76;
        if (v77)
          v87 = 0;
        else
          v87 = v122;
        type metadata accessor for FormatAnimationData();
        v88 = swift_allocObject();
        *(_QWORD *)(v88 + 16) = v74;
        *(_QWORD *)(v88 + 24) = v87;
        *(_QWORD *)(v88 + 32) = v86;
        *(_BYTE *)(v88 + 40) = v77;
        *(_QWORD *)(v88 + 48) = v121;
        swift_beginAccess();
        swift_retain_n();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v134 = *(_QWORD *)(v71 + 32);
        *(_QWORD *)(v71 + 32) = 0x8000000000000000;
        v79 = v120;
        sub_1BA81C03C(v88, v120, v73, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(v71 + 32) = v134;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release_n();
      }
      else
      {
        v79 = v120;
      }
      v80 = v125;
      v81 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v114 + 104))(v116, *MEMORY[0x1E0DB6208], v115);
      MEMORY[0x1E0C80A78](v81);
      *(&v96 - 6) = v79;
      *(&v96 - 5) = v73;
      v82 = v72;
      *(&v96 - 4) = v72;
      v83 = v127;
      *(&v96 - 3) = v127;
      v94 = v80;
      v95 = v124;
      sub_1BA71AD78(0, &qword_1ED3C45B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
      swift_allocObject();
      *(_QWORD *)&v126 = sub_1BB86DB4C();
      swift_getKeyPath();
      swift_beginAccess();
      *(_QWORD *)&v134 = *(_QWORD *)(v83 + 32);
      v84 = v134;
      swift_bridgeObjectRetain();
      sub_1BA71CA6C(v84);
      sub_1BA717E88();
      sub_1BA719718(v84);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_retain();
      v85 = swift_bridgeObjectRetain();
      sub_1BB67D4D4(v85, v82);
      swift_bridgeObjectRelease();
      swift_release();
      v90 = (_QWORD *)swift_allocObject();
      v90[2] = v124;
      v90[3] = v83;
      v90[4] = v82;
      v91 = v111(0);
      v92 = v112();
      swift_retain();
      swift_retain();
      swift_retain();
      v94 = v91;
      v95 = v92;
      v93 = v100;
      sub_1BB86D51C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BA6C1F54(v108, v109, v104, v97, v106);
      swift_release_n();
      swift_release();
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v93, v99);
    }
  }
}

uint64_t sub_1BB677A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(void), uint64_t a7)
{
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t KeyPath;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(_QWORD);
  void (*v72)(void);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  _BYTE v86[144];
  _OWORD v87[7];
  _OWORD v88[2];
  _QWORD v89[11];
  _OWORD v90[7];
  _OWORD v91[3];
  uint64_t v92;

  v72 = a6;
  v73 = a7;
  v70 = a4;
  v71 = a5;
  v9 = v8;
  v10 = v7;
  v83 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v74 = *(_QWORD *)(v12 - 8);
  v75 = v12;
  MEMORY[0x1E0C80A78](v12);
  v81 = (char *)&v64 - v13;
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v79 = (uint64_t)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v84 = (char *)&v64 - v18;
  v19 = type metadata accessor for FormatNodeStateData.Data();
  v77 = *(_QWORD *)(v19 - 8);
  v78 = v19;
  MEMORY[0x1E0C80A78](v19);
  v82 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for FormatMicaData();
  MEMORY[0x1E0C80A78](v76);
  v92 = (uint64_t)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898], v14);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v64 - v23;
  v89[10] = a1;
  swift_beginAccess();
  v25 = swift_bridgeObjectRetain();
  v26 = sub_1BA707E14(v25, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v27 = *((_QWORD *)v7 + 2);
  v28 = *((_QWORD *)v7 + 3);
  swift_retain();
  swift_bridgeObjectRetain();
  v80 = sub_1BA717D44(v27, v28);
  v30 = v29;
  swift_release();
  swift_bridgeObjectRelease();
  v31 = (uint64_t *)(*(_QWORD *)(v26 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v32 = *v31;
  v33 = v31[1];
  v34 = *((_QWORD *)v10 + 7);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35 = sub_1BB66B870(v34, v26, v32, v33, (void (*)(uint64_t))sub_1BB4D0630, sub_1BB6732E8, (uint64_t (*)(uint64_t, uint64_t))sub_1BB67ECCC, (void (*)(_QWORD))type metadata accessor for FormatMicaNodeStyle, (void (*)(uint64_t))sub_1BB4CF6EC);
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v68 = v35;
    v69 = v30;
    v67 = v24;
    v36 = v92;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v37 = *((_QWORD *)v10 + 8);
    swift_retain();
    sub_1BB54AD70(v26, v37, v89);
    v39 = v10;
    swift_release();
    v66 = v89[0];
    sub_1BA6A09F0((uint64_t)(v10 + 72), (uint64_t)v86, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    sub_1BA6A09F0((uint64_t)v86, (uint64_t)v87, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    if (sub_1BA896370((uint64_t *)v87) == 1)
    {
      v64 = v26;
      v65 = 0;
      v40 = sub_1BB86FBD4();
      v41 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v67, 1, 1, v40);
      v42 = (_QWORD *)v36;
      v43 = (uint64_t)v84;
      v44 = (uint64_t)v82;
    }
    else
    {
      v90[6] = v87[6];
      v91[0] = v88[0];
      *(_OWORD *)((char *)v91 + 9) = *(_OWORD *)((char *)v88 + 9);
      v90[2] = v87[2];
      v90[3] = v87[3];
      v90[4] = v87[4];
      v90[5] = v87[5];
      v90[0] = v87[0];
      v90[1] = v87[1];
      sub_1BB54BCB8((uint64_t)v86);
      swift_retain();
      v41 = (uint64_t)v67;
      sub_1BB54A374((uint64_t *)v90);
      v43 = (uint64_t)v84;
      v44 = (uint64_t)v82;
      v64 = v26;
      v65 = 0;
      v45 = sub_1BB86FBD4();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v41, 0, 1, v45);
      v42 = (_QWORD *)v36;
    }
    v46 = v76;
    sub_1BA5E01A4(v41, (uint64_t)v42 + *(int *)(v76 + 20), (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898]);
    swift_beginAccess();
    v47 = *((_DWORD *)v39 + 53);
    v48 = v39[216];
    v49 = v66;
    *v42 = v66;
    v50 = (char *)v42 + *(int *)(v46 + 24);
    *(_DWORD *)v50 = v47;
    v50[4] = v48;
    sub_1BA4C2DD8((uint64_t)v42, v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaData);
    v51 = v78;
    swift_storeEnumTagMultiPayload();
    sub_1BA4C2DD8(v44, v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v77 + 56))(v43, 0, 1, v51);
    v52 = v79;
    sub_1BA5E01A4(v43, v79, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    v53 = v49 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    v54 = v43;
    v55 = v69;
    swift_bridgeObjectRetain();
    sub_1BA722740(v52, v80, v55);
    swift_endAccess();
    sub_1BA5C699C(v54, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    KeyPath = swift_getKeyPath();
    v57 = *((_QWORD *)v39 + 4);
    v84 = v39;
    v85 = v57;
    swift_bridgeObjectRetain();
    sub_1BA71CA6C(v57);
    v59 = v64;
    v58 = v65;
    sub_1BA717E88();
    if (v58)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_release();
      sub_1BA719718(v57);
    }
    else
    {
      v82 = (char *)KeyPath;
      v83 = v53;
      sub_1BA719718(v57);
      v60 = v84;
      swift_beginAccess();
      swift_retain();
      v61 = swift_bridgeObjectRetain();
      v79 = sub_1BB67D4D4(v61, v59);
      swift_bridgeObjectRelease();
      swift_release();
      v62 = (_QWORD *)swift_allocObject();
      v63 = v69;
      v62[2] = v80;
      v62[3] = v63;
      v62[4] = v59;
      v62[5] = v60;
      v62[6] = v68;
      v78 = v71(0);
      v72();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1BB86D534();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v81, v75);
    }
    sub_1BA4A2E80(v92, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaData);
    return sub_1BA5C699C((uint64_t)v67, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898]);
  }
}

uint64_t sub_1BB678384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(void), uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t KeyPath;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  int v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(_QWORD);
  void (*v85)(void);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v86 = a7;
  v85 = a6;
  v84 = a5;
  v83 = a4;
  v9 = v8;
  v10 = v7;
  v87 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v88 = v13;
  v89 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v90 = (char *)&v72 - v14;
  v98 = a1;
  swift_beginAccess();
  v15 = swift_bridgeObjectRetain();
  v92 = a2;
  v16 = sub_1BA707E14(v15, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v17 = v10[2];
  v18 = v10[3];
  swift_retain();
  swift_bridgeObjectRetain();
  v91 = sub_1BA717D44(v17, v18);
  v20 = v19;
  swift_release();
  swift_bridgeObjectRelease();
  v21 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  v22 = (uint64_t *)(*(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v23 = *v22;
  v24 = v22[1];
  v25 = v10[5];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_1BB66B870(v25, v16, v23, v24, (void (*)(uint64_t))sub_1BAF9EA88, sub_1BB6718B8, (uint64_t (*)(uint64_t, uint64_t))sub_1BB67EF7C, (void (*)(_QWORD))type metadata accessor for FormatLayeredMediaNodeStyle, (void (*)(uint64_t))sub_1BAF9D93C);
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v27 = v26;
    v81 = v21;
    v82 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v94 = v10[4];
    swift_retain();
    FormatLayeredMediaNodeContent.layeredMedia(from:)(v92, &v95);
    v78 = v10;
    swift_release();
    v29 = v96;
    v79 = v95;
    v30 = v97;
    v80 = v27;
    if (!v27 || (v31 = *(unsigned __int8 *)(v27 + 208), v31 == 255))
    {
      v49 = 2;
    }
    else
    {
      v33 = *(_QWORD *)(v27 + 192);
      v32 = *(_QWORD *)(v27 + 200);
      v95 = v33;
      v96 = v32;
      LOBYTE(v97) = v31 & 1;
      sub_1BA69C808(v33, v32, v31 & 1);
      sub_1BB86DD80();
      v48 = FormatBoolean.value(contextLayoutOptions:)(v94);
      sub_1BA796C70(v33, v32, v31);
      swift_release();
      v49 = v48 & 1;
    }
    v77 = v49;
    v34 = v91;
    if (*(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8))
    {
      v95 = v91;
      v96 = v82;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v35);
      sub_1BB872AFC(v36);
      v34 = v95;
      v37 = v96;
    }
    else
    {
      v37 = swift_bridgeObjectRetain();
    }
    type metadata accessor for LayeredMediaLoader();
    v38 = (_QWORD *)swift_allocObject();
    v39 = type metadata accessor for LayeredMediaParser();
    v40 = (_QWORD *)swift_allocObject();
    v40[2] = v34;
    v40[3] = v37;
    v41 = v79;
    v40[4] = v79;
    v40[5] = v29;
    v38[5] = v39;
    v38[6] = &protocol witness table for LayeredMediaParser;
    v38[2] = v40;
    if (v80 && (v42 = *(_QWORD *)(v80 + 240)) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v42 = MEMORY[0x1E0DEE9D8];
    }
    v43 = v81;
    swift_retain();
    v75 = sub_1BB67D658(v42);
    v76 = v38;
    v81 = v29;
    swift_bridgeObjectRelease();
    swift_release();
    v44 = (uint64_t *)(*(_QWORD *)(v16 + v43) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    v45 = *v44;
    v46 = v44[1];
    v47 = v78[6];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = sub_1BA6E3AA0(v47, v16, v45, v46, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v50 && (swift_beginAccess(), (v51 = *(_QWORD *)(v50 + 72)) != 0))
    {
      v52 = v92;
      if (*(_QWORD *)(v51 + 16))
      {
        v53 = *(_QWORD *)(v50 + 56);
        v74 = *(_QWORD *)(v50 + 48);
        v54 = *(unsigned __int8 *)(v50 + 64);
        swift_retain();
        swift_retain();
        v55 = swift_bridgeObjectRetain();
        v73 = sub_1BB67D220(v55, v16);
        swift_bridgeObjectRelease();
        swift_release();
        if (v54)
          v66 = 0;
        else
          v66 = v53;
        if (v54)
          v67 = 0;
        else
          v67 = v74;
        type metadata accessor for FormatAnimationData();
        v68 = swift_allocObject();
        *(_QWORD *)(v68 + 16) = v50;
        *(_QWORD *)(v68 + 24) = v67;
        *(_QWORD *)(v68 + 32) = v66;
        *(_BYTE *)(v68 + 40) = v54;
        *(_QWORD *)(v68 + 48) = v73;
        v69 = v68;
        v70 = *(_QWORD *)(v87 + 24);
        swift_beginAccess();
        swift_retain_n();
        v56 = v82;
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v93 = *(_QWORD *)(v70 + 32);
        *(_QWORD *)(v70 + 32) = 0x8000000000000000;
        sub_1BA81C03C(v69, v91, v56, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(v70 + 32) = v93;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release_n();
      }
      else
      {
        v56 = v82;
      }
    }
    else
    {
      v56 = v82;
      v52 = v92;
    }
    v57 = v52 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
    v58 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v57 + *(int *)(type metadata accessor for GroupLayoutContext() + 40))
                                + 24)
                    + 48);
    KeyPath = swift_getKeyPath();
    v94 = v78[7];
    v60 = v94;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BA71CA6C(v60);
    sub_1BA717E88();
    v92 = KeyPath;
    sub_1BA719718(v60);
    v61 = v78;
    swift_beginAccess();
    swift_retain();
    v62 = swift_bridgeObjectRetain();
    v82 = sub_1BB67D4D4(v62, 0);
    swift_bridgeObjectRelease();
    swift_release();
    v63 = swift_allocObject();
    v83 = v50;
    *(_QWORD *)(v63 + 16) = 0;
    *(_QWORD *)(v63 + 24) = v58;
    v74 = 0;
    v73 = v58;
    *(_QWORD *)(v63 + 32) = v76;
    *(_BYTE *)(v63 + 40) = v77;
    *(_QWORD *)(v63 + 48) = v75;
    *(_QWORD *)(v63 + 56) = v41;
    *(_QWORD *)(v63 + 64) = v81;
    *(_QWORD *)(v63 + 72) = v30;
    v64 = v91;
    *(_QWORD *)(v63 + 80) = v87;
    *(_QWORD *)(v63 + 88) = v64;
    *(_QWORD *)(v63 + 96) = v56;
    *(_QWORD *)(v63 + 104) = v61;
    *(_QWORD *)(v63 + 112) = v80;
    v84 = (uint64_t (*)(_QWORD))v84(0);
    v85();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v65 = v90;
    sub_1BB86D534();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v65, v88);
  }
}

uint64_t sub_1BB678F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), void (*a6)(void))
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v52;

  v8 = v6;
  swift_beginAccess();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_1BA707E14(v10, 0);
  swift_bridgeObjectRelease();
  v12 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  v13 = (uint64_t *)(*(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v15 = *v13;
  v14 = v13[1];
  v16 = v8[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BB66AD08(v16, v11, v15, v14, (void (*)(uint64_t))sub_1BB06F444, (void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))sub_1BA7919BC, (uint64_t (*)(uint64_t, uint64_t))sub_1BB67F22C, (void (*)(_QWORD))type metadata accessor for FormatVideoNodeStyle, (void (*)(uint64_t))sub_1BB06E3F0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v7)
    return swift_release();
  v47 = a2;
  v48 = v17;
  swift_beginAccess();
  v19 = v8[2];
  v20 = v8[3];
  swift_retain();
  swift_bridgeObjectRetain();
  v21 = sub_1BA717D44(v19, v20);
  v23 = v22;
  swift_release();
  swift_bridgeObjectRelease();
  v24 = (uint64_t *)(*(_QWORD *)(v11 + v12) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v25 = *v24;
  v26 = v24[1];
  v27 = v8[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = sub_1BA6E3AA0(v27, v11, v25, v26, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
  v45 = v21;
  v46 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v28 && (swift_beginAccess(), (v29 = *(_QWORD *)(v28 + 72)) != 0) && *(_QWORD *)(v29 + 16))
  {
    v30 = *(_QWORD *)(v28 + 48);
    v31 = *(_QWORD *)(v28 + 56);
    v32 = *(unsigned __int8 *)(v28 + 64);
    swift_retain();
    swift_retain();
    v33 = swift_bridgeObjectRetain();
    v39 = sub_1BB67D220(v33, v11);
    swift_bridgeObjectRelease();
    swift_release();
    if (v32)
      v40 = 0;
    else
      v40 = v31;
    if (v32)
      v41 = 0;
    else
      v41 = v30;
    type metadata accessor for FormatAnimationData();
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = v28;
    *(_QWORD *)(v42 + 24) = v41;
    *(_QWORD *)(v42 + 32) = v40;
    *(_BYTE *)(v42 + 40) = v32;
    *(_QWORD *)(v42 + 48) = v39;
    v34 = a3;
    v43 = *(_QWORD *)(a3 + 24);
    swift_beginAccess();
    swift_retain_n();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52 = *(_QWORD *)(v43 + 32);
    *(_QWORD *)(v43 + 32) = 0x8000000000000000;
    sub_1BA81C03C(v42, v45, v46, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v43 + 32) = v52;
    v36 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
    v35 = v47;
  }
  else
  {
    v34 = a3;
    v36 = v23;
    v35 = v47;
  }
  swift_unownedRetainStrong();
  swift_bridgeObjectRetain();
  swift_unownedRetain();
  swift_release();
  v37 = v36;
  v38 = (_QWORD *)swift_allocObject();
  v38[2] = v45;
  v38[3] = v37;
  v38[4] = v8;
  v38[5] = v11;
  v38[6] = v35;
  v38[7] = v34;
  v38[8] = v48;
  a5(0);
  a6();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86D504();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BB679460(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[2];
  uint64_t v56;
  uint64_t v57;

  v52 = a1;
  v53 = type metadata accessor for FormatOption();
  v9 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8))
  {
    v48 = a2;
    v46 = a3;
    v47 = a4;
    v50 = v5;
    v12 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    swift_beginAccess();
    v49 = (_QWORD *)v4;
    v13 = *(_QWORD *)(v4 + 48);
    v14 = *(_QWORD *)(v13 + 16);
    v15 = MEMORY[0x1E0DEE9D8];
    v51 = v12;
    if (v14)
    {
      v54 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BA76B828(0, v14, 0);
      v15 = v54;
      v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v44 = v13;
      v17 = v13 + v16;
      v45 = v9;
      v57 = *(_QWORD *)(v9 + 72);
      do
      {
        sub_1BA4C2DD8(v17, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v18 = swift_allocBox();
        sub_1BA5193C4((uint64_t)v11, v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v54 = v15;
        v21 = *(_QWORD *)(v15 + 16);
        v20 = *(_QWORD *)(v15 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1BA76B828(v20 > 1, v21 + 1, 1);
          v15 = v54;
        }
        *(_QWORD *)(v15 + 16) = v21 + 1;
        *(_QWORD *)(v15 + 8 * v21 + 32) = v18 | 0x7000000000000004;
        v17 += v57;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      v12 = v51;
      v9 = v45;
    }
    v22 = *(_QWORD *)(v12 + 16);
    v23 = MEMORY[0x1E0DEE9D8];
    if (v22)
    {
      v54 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BA76B828(0, v22, 0);
      v23 = v54;
      v24 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v57 = *(_QWORD *)(v9 + 72);
      do
      {
        sub_1BA4C2DD8(v24, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v25 = swift_allocBox();
        sub_1BA5193C4((uint64_t)v11, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v54 = v23;
        v28 = *(_QWORD *)(v23 + 16);
        v27 = *(_QWORD *)(v23 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1BA76B828(v27 > 1, v28 + 1, 1);
          v23 = v54;
        }
        *(_QWORD *)(v23 + 16) = v28 + 1;
        *(_QWORD *)(v23 + 8 * v28 + 32) = v25 | 0x2000000000000000;
        v24 += v57;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
    }
    v54 = v15;
    sub_1BA7082C0(v23);
    sub_1BA70B0DC(v54);
    swift_bridgeObjectRelease();
    v29 = v49;
    swift_beginAccess();
    v30 = swift_bridgeObjectRetain();
    sub_1BA707E14(v30, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v32 = v29[2];
    v31 = v29[3];
    swift_bridgeObjectRetain();
    v33 = sub_1BA709F80(v32, v31);
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v34 = v29[4];
    v35 = *(_QWORD *)(v34 + 16);
    v36 = v52;
    if (v35)
    {
      swift_bridgeObjectRetain();
      v37 = 32;
      v38 = v50;
      v39 = v47;
      v40 = v46;
      while (1)
      {
        v41 = *(_OWORD *)(v34 + v37);
        v42 = *(_OWORD *)(v34 + v37 + 16);
        v56 = *(_QWORD *)(v34 + v37 + 32);
        v55[0] = v41;
        v55[1] = v42;
        sub_1BA7086BC((uint64_t)v55);
        v39(v36, v33, v40);
        if (v38)
          break;
        sub_1BA708680((uint64_t)v55);
        v37 += 40;
        if (!--v35)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1BA708680((uint64_t)v55);
    }
    else
    {
      return swift_release();
    }
  }
  else
  {
    result = swift_beginAccess();
    if ((*(_BYTE *)(v4 + 56) & 1) != 0)
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1BB67993C(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(_QWORD), _QWORD *a4, void (*a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v14[2];

  v10 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = a2(v10);
    *a1 = v10;
  }
  v12 = *(_QWORD *)(v10 + 16);
  v14[0] = v10 + 32;
  v14[1] = v12;
  sub_1BB67C018(v14, a3, a4, a5);
  return sub_1BB873DBC();
}

_QWORD *sub_1BB6799E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13[2];
  unsigned __int8 v14;
  uint64_t v15;
  unsigned __int8 v16;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain_n();
  v3 = (unsigned __int8 *)(v1 + 48);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v6 = *((_QWORD *)v3 - 1);
    v7 = *v3;
    v13[0] = *((_QWORD *)v3 - 2);
    v13[1] = v6;
    v14 = v7;
    sub_1BA901A94(v13[0], v6, v7);
    sub_1BB2B14F8((uint64_t)v13);
    v8 = v16;
    if (v16 <= 0xFDu)
    {
      v9 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_1BB38F224(0, v4[2] + 1, 1, v4);
      v11 = v4[2];
      v10 = v4[3];
      if (v11 >= v10 >> 1)
        v4 = sub_1BB38F224((_QWORD *)(v10 > 1), v11 + 1, 1, v4);
      v4[2] = v11 + 1;
      v5 = &v4[2 * v11];
      v5[4] = v9;
      *((_BYTE *)v5 + 40) = v8;
    }
    v3 += 24;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease_n();
  return v4;
}

void sub_1BB679B08(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

uint64_t sub_1BB679B14()
{
  return FormatContentSizeCategory.groupLayoutContentSizeCategory.getter();
}

uint64_t sub_1BB679B44()
{
  sub_1BA7114A0();
  return sub_1BB873B04();
}

uint64_t sub_1BB679BB8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;

  v60 = a8;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v52 - v16);
  sub_1BA5E01A4(a1, (uint64_t)&v52 - v16, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v18 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18) == 1)
  {
    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 8)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  v55 = a4;
  v56 = a5;
  v57 = a6;
  v58 = a7;
  v59 = *v17;
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 9)
  {
    v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v20 = *(double **)(v19 + 16);
    type metadata accessor for FormatGroupLayoutFactory.Bound();
    swift_retain();
    sub_1BB86D708();
    v22 = v21;
    v24 = v23;
    v25 = v20[2];
    v26 = v20[3];
    v27 = v20[4];
    v28 = v20[5];
    v29 = *((_QWORD *)v20 + 6);
    v30 = *((_QWORD *)v20 + 7);
    v31 = *((_QWORD *)v20 + 11);
    v53 = *((_QWORD *)v20 + 10);
    v54 = v29;
    v32 = *((_QWORD *)v20 + 13);
    v52 = *((_QWORD *)v20 + 12);
    v33 = *((_QWORD *)v20 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = sub_1BA792088(v33, v22, v24);
    v61 = *((_QWORD *)v20 + 15);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3CF818, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6B5A5C((unint64_t *)&unk_1ED3CF820, (uint64_t)&qword_1ED3CF818, (uint64_t)type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v35 = sub_1BB872BC8();
    MEMORY[0x1E0C80A78](v35);
    v36 = sub_1BA760A5C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BB684510, (uint64_t)(&v52 - 4), v35);
    swift_bridgeObjectRelease();
    sub_1BA4AD288(0, &qword_1ED3CB8E0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
    swift_allocObject();
    v37 = sub_1BB6821EC(v54, v30, v53, v31, v52, v32, v25, v26, v27, v28, v22, v24, v34, v36, 7);
    v38 = swift_bridgeObjectRelease();
    v39 = *(_QWORD *)(v19 + 24);
    MEMORY[0x1E0C80A78](v38);
    v51 = a3;
    swift_bridgeObjectRetain();
    v40 = sub_1BB67CAF0((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BB68276C, (uint64_t)(&v52 - 4), v39);
    swift_bridgeObjectRelease();
    v41 = *(_QWORD *)(v19 + 32);
    v42 = *(_QWORD *)(v19 + 40);
    v43 = *(_QWORD *)(v19 + 48);
    swift_beginAccess();
    LOBYTE(v34) = *(_BYTE *)(v19 + 56);
    v44 = *(_QWORD *)(v19 + 64);
    swift_retain();
    sub_1BA67D3F4(v43);
    swift_retain();
    swift_release();
    type metadata accessor for FormatStateViewNodeDataLayoutAttributes();
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = v37;
    *(_QWORD *)(v45 + 24) = v40;
    *(_QWORD *)(v45 + 32) = v41;
    *(_QWORD *)(v45 + 40) = v42;
    *(_QWORD *)(v45 + 48) = v43;
    *(_BYTE *)(v45 + 56) = v34;
    *(_QWORD *)(v45 + 64) = v44;
    v46 = swift_allocObject();
    v47 = v58;
    *(_QWORD *)(v46 + 16) = v59;
    *(_QWORD *)(v46 + 24) = v45;
    v48 = v56;
    *(_QWORD *)(v46 + 32) = v55;
    *(_QWORD *)(v46 + 40) = v48;
    v49 = v57;
    *(_QWORD *)(v46 + 48) = v57;
    *(_QWORD *)(v46 + 56) = v47;
    *v60 = v46 | 0x3000000000000000;
    swift_retain();
    return sub_1BA8E9488(v48, v49);
  }
LABEL_7:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BB67A014@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  double *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  v35 = a3;
  v4 = *a1;
  v30 = *(_QWORD *)(*a1 + 24);
  v31 = *(_QWORD *)(*a1 + 16);
  v5 = *(double **)(*a1 + 32);
  type metadata accessor for FormatGroupLayoutFactory.Bound();
  swift_bridgeObjectRetain();
  sub_1BB86D708();
  v7 = v6;
  v9 = v8;
  v10 = v5[2];
  v11 = v5[3];
  v12 = v5[4];
  v13 = v5[5];
  v14 = *((_QWORD *)v5 + 7);
  v15 = *((_QWORD *)v5 + 11);
  v28 = *((_QWORD *)v5 + 10);
  v29 = *((_QWORD *)v5 + 6);
  v16 = *((_QWORD *)v5 + 13);
  v27 = *((_QWORD *)v5 + 12);
  v17 = *((_QWORD *)v5 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_1BA792088(v17, v7, v9);
  v34 = *((_QWORD *)v5 + 15);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3CF818, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B5A5C((unint64_t *)&unk_1ED3CF820, (uint64_t)&qword_1ED3CF818, (uint64_t)type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  v18 = sub_1BB872BC8();
  v33 = a2;
  v19 = sub_1BA760A5C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BB684510, (uint64_t)v32, v18);
  swift_bridgeObjectRelease();
  sub_1BA4AD288(0, &qword_1ED3CB8E0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
  swift_allocObject();
  v20 = sub_1BB6821EC(v29, v14, v28, v15, v27, v16, v10, v11, v12, v13, v7, v9, v26, v19, 7);
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v4 + 40);
  type metadata accessor for FormatStateViewNodeStateDataLayoutAttributes();
  v22 = (_QWORD *)swift_allocObject();
  swift_retain();
  v23 = sub_1BA863F8C((uint64_t)&unk_1E7271170);
  type metadata accessor for FormatResizeAuto();
  v24 = swift_allocObject();
  result = swift_beginAccess();
  *(_QWORD *)(v24 + 16) = v23;
  v22[5] = v21;
  v22[6] = v24;
  v22[2] = v31;
  v22[3] = v30;
  v22[4] = v20;
  *v35 = v22;
  return result;
}

uint64_t sub_1BB67A2A8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t *v29;

  v29 = a8;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v28 - v16);
  sub_1BA5E01A4(a1, (uint64_t)&v28 - v16, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v18 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18) == 1)
  {
    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_13;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
LABEL_13:
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_14;
  }
  v19 = *v17;
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 3)
  {
    v20 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v21 = *(_QWORD *)(v20 + 152);
    if (v21 && *(_QWORD *)(a3 + 16))
    {
      v22 = *(_QWORD *)(v20 + 144);
      swift_bridgeObjectRetain_n();
      swift_retain();
      v23 = sub_1BA6E35A8(v22, v21);
      if ((v24 & 1) != 0)
      {
        v25 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v23);
        swift_retain();
        swift_bridgeObjectRelease_n();
LABEL_11:
        v26 = swift_allocObject();
        *(_QWORD *)(v26 + 16) = v19;
        *(_QWORD *)(v26 + 24) = v20;
        *(_QWORD *)(v26 + 32) = a4;
        *(_QWORD *)(v26 + 40) = a5;
        *(_QWORD *)(v26 + 48) = a6;
        *(_QWORD *)(v26 + 56) = a7;
        *(_QWORD *)(v26 + 64) = v25;
        *v29 = v26 | 0x2000000000000004;
        swift_retain();
        return sub_1BA8E9488(a5, a6);
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_retain();
    }
    v25 = 0;
    goto LABEL_11;
  }
LABEL_14:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BB67A4CC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v37 - v9;
  v11 = type metadata accessor for FormatAdMetricsData();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5E01A4(a1, (uint64_t)v10, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v14 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v10, 1, v14) == 1)
  {
    sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_13;
  }
  if (swift_getEnumCaseMultiPayload())
  {
LABEL_13:
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_14;
  }
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatAdMetricsData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xB)
  {
    v15 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x70);
    v42 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x60);
    v43 = v15;
    v44 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x80);
    v45 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x90);
    v16 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
    v38 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
    v39 = v16;
    v17 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
    v40 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x40);
    v41 = v17;
    v37 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    v18 = v45;
    if (v45 && *(_QWORD *)(a3 + 16))
    {
      v19 = *((_QWORD *)&v44 + 1);
      swift_bridgeObjectRetain();
      sub_1BAB4720C((uint64_t)&v37);
      swift_bridgeObjectRetain();
      v20 = sub_1BA6E35A8(v19, v18);
      if ((v21 & 1) != 0)
      {
        v22 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v20);
        swift_retain();
        swift_bridgeObjectRelease_n();
LABEL_11:
        sub_1BAB47180();
        v24 = v23;
        v25 = swift_allocBox();
        v27 = v26;
        v28 = v26 + *(int *)(v24 + 48);
        v29 = *(int *)(v24 + 64);
        result = sub_1BA5193C4((uint64_t)v13, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatAdMetricsData);
        *(_OWORD *)v28 = v37;
        v31 = v41;
        v33 = v38;
        v32 = v39;
        *(_OWORD *)(v28 + 48) = v40;
        *(_OWORD *)(v28 + 64) = v31;
        *(_OWORD *)(v28 + 16) = v33;
        *(_OWORD *)(v28 + 32) = v32;
        v35 = v43;
        v34 = v44;
        v36 = v42;
        *(_QWORD *)(v28 + 128) = v45;
        *(_OWORD *)(v28 + 96) = v35;
        *(_OWORD *)(v28 + 112) = v34;
        *(_OWORD *)(v28 + 80) = v36;
        *(_QWORD *)(v27 + v29) = v22;
        *a4 = v25 | 0x4000000000000000;
        return result;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      sub_1BAB4720C((uint64_t)&v37);
    }
    v22 = 0;
    goto LABEL_11;
  }
LABEL_14:
  result = sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatAdMetricsData);
  __break(1u);
  return result;
}

uint64_t sub_1BB67A774@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v22 - v15);
  sub_1BA5E01A4(a1, (uint64_t)&v22 - v15, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v17 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17) == 1)
  {
    sub_1BA5C699C((uint64_t)v16, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 9)
  {
LABEL_6:
    result = sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    goto LABEL_7;
  }
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xA)
  {
    v19 = *v16;
    v20 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v19;
    *(_QWORD *)(v21 + 24) = v20;
    *(_QWORD *)(v21 + 32) = a3;
    *(_QWORD *)(v21 + 40) = a4;
    *(_QWORD *)(v21 + 48) = a5;
    *(_QWORD *)(v21 + 56) = a6;
    *a7 = v21 | 0x3000000000000004;
    swift_retain();
    swift_retain();
    return sub_1BA8E9488(a4, a5);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BB67A910@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for FormatMicaData();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5E01A4(a1, (uint64_t)v8, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v12 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v8, 1, v12) == 1)
  {
    sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 11)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BA5193C4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xC)
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1BA6BC5C0(0, &qword_1EF2BDA90, (void (*)(uint64_t))type metadata accessor for FormatMicaData, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes);
    v15 = v14;
    v16 = swift_allocBox();
    v18 = v17;
    v19 = *(int *)(v15 + 48);
    sub_1BA5193C4((uint64_t)v11, v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaData);
    *(_QWORD *)(v18 + v19) = v13;
    *a3 = v16 | 0x4000000000000004;
    return swift_retain();
  }
LABEL_7:
  result = sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaData);
  __break(1u);
  return result;
}

uint64_t sub_1BB67AAFC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v26 - v15;
  sub_1BA5E01A4(a1, (uint64_t)&v26 - v15, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v17 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17) == 1)
  {
    sub_1BA5C699C((uint64_t)v16, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 12)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  v18 = *((_QWORD *)v16 + 1);
  v19 = *((_QWORD *)v16 + 3);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xD)
  {
    v20 = v16[32];
    v21 = *((_QWORD *)v16 + 2);
    v22 = *(_QWORD *)v16;
    v23 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v22;
    *(_QWORD *)(v24 + 24) = v18;
    *(_QWORD *)(v24 + 32) = v21;
    *(_QWORD *)(v24 + 40) = v19;
    *(_BYTE *)(v24 + 48) = v20;
    *(_QWORD *)(v24 + 56) = v23;
    *(_QWORD *)(v24 + 64) = a3;
    *(_QWORD *)(v24 + 72) = a4;
    *(_QWORD *)(v24 + 80) = a5;
    *(_QWORD *)(v24 + 88) = a6;
    *a7 = v24 | 0x5000000000000000;
    swift_retain();
    swift_retain();
    return sub_1BA8E9488(a4, a5);
  }
LABEL_7:
  swift_release();
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1BB67ACD0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t *v28;

  v28 = a7;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - v14;
  v16 = type metadata accessor for FormatVideoData(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5E01A4(a1, (uint64_t)v15, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v19 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v15, 1, v19) == 1)
  {
    sub_1BA5C699C((uint64_t)v15, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 13)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BA5193C4((uint64_t)v15, (uint64_t)v18, type metadata accessor for FormatVideoData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xE)
  {
    v20 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1BA572014(0, (unint64_t *)&unk_1EF2BDA80, (void (*)(uint64_t))type metadata accessor for FormatVideoData, &qword_1EF2B0788, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes);
    v22 = v21;
    v23 = swift_allocBox();
    v25 = (_QWORD *)(v24 + *(int *)(v22 + 48));
    sub_1BA5193C4((uint64_t)v18, v24, type metadata accessor for FormatVideoData);
    *v25 = v20;
    v25[1] = a3;
    v25[2] = a4;
    v25[3] = a5;
    v25[4] = a6;
    *v28 = v23 | 0x5000000000000004;
    swift_retain();
    swift_retain();
    return sub_1BA8E9488(a4, a5);
  }
LABEL_7:
  result = sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVideoData);
  __break(1u);
  return result;
}

void sub_1BB67AF04(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t *v14;
  uint64_t (*v15)();
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v14 = &qword_1ED3C41E8;
  v15 = type metadata accessor for FormatNodeStateData.Data;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v24 - v17;
  sub_1BA5E01A4(a1, (uint64_t)&v24 - v17, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v19 = (_QWORD *)type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(*(v19 - 1) + 48))(v18, 1, v19) == 1)
  {
    sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  v24 = a7;
  v25 = (uint64_t)a4;
  v26 = a5;
  v27 = a6;
  if (swift_getEnumCaseMultiPayload() != 14)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  v15 = *(uint64_t (**)())v18;
  v14 = (uint64_t *)*((_QWORD *)v18 + 1);
  v19 = (_QWORD *)*((_QWORD *)v18 + 2);
  a6 = *((_QWORD *)v18 + 3);
  a7 = (uint64_t *)*((_QWORD *)v18 + 4);
  a5 = *((_QWORD *)v18 + 5);
  a4 = (void *)*((_QWORD *)v18 + 6);
  LOBYTE(v18) = v18[56];
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xF)
  {
    v20 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v15;
    *(_QWORD *)(v21 + 24) = v14;
    *(_QWORD *)(v21 + 32) = v19;
    *(_QWORD *)(v21 + 40) = a6;
    *(_QWORD *)(v21 + 48) = a7;
    *(_QWORD *)(v21 + 56) = a5;
    *(_QWORD *)(v21 + 64) = a4;
    *(_BYTE *)(v21 + 72) = (_BYTE)v18;
    *(_QWORD *)(v21 + 80) = v20;
    *(_QWORD *)(v21 + 88) = a3;
    v23 = v25;
    v22 = v26;
    *(_QWORD *)(v21 + 96) = v25;
    *(_QWORD *)(v21 + 104) = v22;
    *(_QWORD *)(v21 + 112) = v27;
    *v24 = v21 | 0x6000000000000000;
    swift_retain();
    swift_retain();
    sub_1BA8E9488(v23, v22);
    return;
  }
LABEL_7:
  sub_1BA899748(v15, (uint64_t)v14, v19, a6, a7, a5, a4, (char)v18);
  __break(1u);
}

uint64_t sub_1BB67B0FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for FormatShareAttributionData();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5E01A4(a1, (uint64_t)v8, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v12 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v8, 1, v12) == 1)
  {
    sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 15)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BA5193C4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatShareAttributionData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0x10)
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1EF2CA8E0, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionData, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
    v15 = v14;
    v16 = swift_allocBox();
    v18 = v17;
    v19 = *(int *)(v15 + 48);
    sub_1BA5193C4((uint64_t)v11, v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatShareAttributionData);
    *(_QWORD *)(v18 + v19) = v13;
    *a3 = v16 | 0x6000000000000004;
    return swift_retain();
  }
LABEL_7:
  result = sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatShareAttributionData);
  __break(1u);
  return result;
}

uint64_t sub_1BB67B2E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t *v28;

  v28 = a7;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - v14;
  v16 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5E01A4(a1, (uint64_t)v15, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v19 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v15, 1, v19) == 1)
  {
    sub_1BA5C699C((uint64_t)v15, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 17)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BA5193C4((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0x11)
  {
    v20 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1BA572014(0, (unint64_t *)&qword_1EF2B0758, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (unint64_t *)&unk_1EF2BDA70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
    v22 = v21;
    v23 = swift_allocBox();
    v25 = (_QWORD *)(v24 + *(int *)(v22 + 48));
    sub_1BA5193C4((uint64_t)v18, v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
    *v25 = v20;
    v25[1] = a3;
    v25[2] = a4;
    v25[3] = a5;
    v25[4] = a6;
    *v28 = v23 | 0x7000000000000000;
    swift_retain();
    swift_retain();
    return sub_1BA8E9488(a4, a5);
  }
LABEL_7:
  result = sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  __break(1u);
  return result;
}

uint64_t sub_1BB67B514@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v22 - v15;
  sub_1BA5E01A4(a1, (uint64_t)&v22 - v15, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v17 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17) == 1)
  {
    sub_1BA5C699C((uint64_t)v16, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 18)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  v17 = *((_QWORD *)v16 + 1);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0x12)
  {
    v18 = *(_DWORD *)v16;
    v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v20 = swift_allocObject();
    *(_DWORD *)(v20 + 16) = v18;
    *(_QWORD *)(v20 + 24) = v17;
    *(_QWORD *)(v20 + 32) = v19;
    *(_QWORD *)(v20 + 40) = a3;
    *(_QWORD *)(v20 + 48) = a4;
    *(_QWORD *)(v20 + 56) = a5;
    *(_QWORD *)(v20 + 64) = a6;
    *a7 = v20 | 0x7000000000000004;
    swift_retain();
    swift_retain();
    return sub_1BA8E9488(a4, a5);
  }
LABEL_7:
  result = sub_1BA8979BC(v17);
  __break(1u);
  return result;
}

uint64_t sub_1BB67B6CC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v20 - v9);
  sub_1BA5E01A4(a1, (uint64_t)&v20 - v9, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v11 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11) == 1)
  {
    sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_13;
  }
  if (swift_getEnumCaseMultiPayload() != 19)
  {
LABEL_13:
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_14;
  }
  v12 = *v10;
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0x13)
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v14 = *(_QWORD *)(v13 + 200);
    if (v14 && *(_QWORD *)(a3 + 16))
    {
      v15 = *(_QWORD *)(v13 + 192);
      swift_bridgeObjectRetain_n();
      swift_retain();
      v16 = sub_1BA6E35A8(v15, v14);
      if ((v17 & 1) != 0)
      {
        v18 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v16);
        swift_retain();
        swift_bridgeObjectRelease_n();
LABEL_11:
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = v12;
        *(_QWORD *)(result + 24) = v13;
        *(_QWORD *)(result + 32) = v18;
        *a4 = result | 0x8000000000000004;
        return result;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_retain();
    }
    v18 = 0;
    goto LABEL_11;
  }
LABEL_14:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BB67B8B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  unint64_t *v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;

  v70 = a4;
  v11 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v57 - v15;
  v17 = type metadata accessor for FormatItemNodeData();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v57 - v21;
  sub_1BA5E01A4(a1, (uint64_t)v16, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v23 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v16, 1, v23) == 1)
  {
    sub_1BA5C699C((uint64_t)v16, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_9;
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
LABEL_9:
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_10;
  }
  v69 = v19;
  sub_1BA5193C4((uint64_t)v16, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
  if ((a2 >> 59) & 0x1E | (a2 >> 2) & 1)
  {
LABEL_10:
    result = sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
    __break(1u);
    return result;
  }
  v24 = *(_QWORD **)(a2 + 16);
  v25 = (double *)v24[2];
  v26 = *((_QWORD *)v25 + 9);
  if (v26)
  {
    v27 = *((_QWORD *)v25 + 8);
    v28 = v24[4];
    v64 = v24[3];
    v65 = v27;
    v74 = v28;
    v66 = v24[7];
    v60 = v22;
    v61 = v26;
    v29 = *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 52);
    v58 = a3;
    v73 = *(_BYTE *)(a3 + v29);
    sub_1BA4C2DD8((uint64_t)v22, (uint64_t)v13, type metadata accessor for FeedItem);
    v30 = v24[8];
    v31 = v24[9];
    v67 = v13;
    v68 = v30;
    v72 = v31;
    v32 = v25[2];
    v33 = v25[3];
    v34 = v25[4];
    v35 = v25[5];
    v36 = *((_QWORD *)v25 + 10);
    v37 = *((_QWORD *)v25 + 11);
    v38 = *((_QWORD *)v25 + 13);
    v62 = *((_QWORD *)v25 + 12);
    v63 = v36;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BA67D3F4(v31);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = swift_bridgeObjectRetain();
    v40 = v58;
    v59 = sub_1BA792088(v39, a5, a6);
    swift_bridgeObjectRelease();
    v71 = *(_QWORD *)(v24[2] + 120);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3CF818, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6B5A5C((unint64_t *)&unk_1ED3CF820, (uint64_t)&qword_1ED3CF818, (uint64_t)type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    swift_bridgeObjectRetain();
    v41 = sub_1BB872BC8();
    MEMORY[0x1E0C80A78](v41);
    v56 = v40;
    v42 = sub_1BA760A5C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BB684510, (uint64_t)(&v57 - 4), v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 = (uint64_t)v60;
    v44 = (uint64_t)v69;
    sub_1BA4C2DD8((uint64_t)v60, (uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
    v45 = *(_BYTE *)(v24[2] + 128);
    sub_1BA4B07F0(0, &qword_1ED3CB8D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeData, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
    swift_allocObject();
    v46 = sub_1BB681C58(v65, v61, v63, v37, v62, v38, v32, v33, v34, v35, a5, a6, v59, v42, v44, v45);
    swift_bridgeObjectRelease();
    type metadata accessor for FormatItemNodeDataLayoutAttributes();
    swift_allocObject();
    v47 = sub_1BA6B2548(v64, &v74, 0, 0, v66, &v73, (uint64_t)v67, v68, (uint64_t *)&v72, (uint64_t)v46);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3A2A80, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
    v49 = v48;
    v50 = swift_allocBox();
    v52 = v51;
    v53 = *(int *)(v49 + 48);
    result = sub_1BA5193C4(v43, v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
    *(_QWORD *)(v52 + v53) = v47;
    v55 = v50 | 0x8000000000000000;
  }
  else
  {
    result = sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
    v55 = 0xF000000000000007;
  }
  *v70 = v55;
  return result;
}

uint64_t sub_1BB67BE24@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for FormatSponsoredBannerData();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5E01A4(a1, (uint64_t)v8, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v12 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v8, 1, v12) == 1)
  {
    sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 20)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BA5193C4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatSponsoredBannerData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0x14)
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1BA6BC5C0(0, (unint64_t *)&unk_1ED3C42D8, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerData, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
    v15 = v14;
    v16 = swift_allocBox();
    v18 = v17;
    v19 = *(int *)(v15 + 48);
    sub_1BA5193C4((uint64_t)v11, v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatSponsoredBannerData);
    *(_QWORD *)(v18 + v19) = v13;
    *a3 = v16 | 0x9000000000000000;
    return swift_retain();
  }
LABEL_7:
  result = sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatSponsoredBannerData);
  __break(1u);
  return result;
}

uint64_t sub_1BB67C00C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB67C018(uint64_t *a1, void (*a2)(_QWORD), _QWORD *a3, void (*a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  int v24;
  double v25;
  double v26;
  uint64_t v27;
  int v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  double v43;
  _BOOL4 v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  _QWORD *v109;
  uint64_t v110;

  v8 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v8)
  {
    if (v8 < 0)
      goto LABEL_133;
    if (v8)
      return sub_1BB67C6D4(0, v8, 1, a1, a3);
    return result;
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_141;
  v11 = result;
  v109 = a3;
  v105 = v8;
  v102 = a1;
  if (v8 < 2)
  {
    v14 = (char *)MEMORY[0x1E0DEE9D8];
    v110 = MEMORY[0x1E0DEE9D8];
    v107 = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v8 != 1)
    {
      v17 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_99:
      if (v17 >= 2)
      {
        v96 = *v102;
        do
        {
          v97 = v17 - 2;
          if (v17 < 2)
            goto LABEL_128;
          if (!v96)
            goto LABEL_140;
          v98 = *(_QWORD *)&v14[16 * v97 + 32];
          v99 = *(_QWORD *)&v14[16 * v17 + 24];
          sub_1BB67C75C((char *)(v96 + 8 * v98), (char *)(v96 + 8 * *(_QWORD *)&v14[16 * v17 + 16]), v96 + 8 * v99, v107, v109, a4);
          if (v4)
            break;
          if (v99 < v98)
            goto LABEL_129;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v14 = sub_1BACAB464((uint64_t)v14);
          if (v97 >= *((_QWORD *)v14 + 2))
            goto LABEL_130;
          v100 = &v14[16 * v97 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v14 + 2);
          if (v17 > v101)
            goto LABEL_131;
          memmove(&v14[16 * v17 + 16], &v14[16 * v17 + 32], 16 * (v101 - v17));
          *((_QWORD *)v14 + 2) = v101 - 1;
          v17 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_110:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BB872DCC();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v12 = v10 >> 1;
    a2(0);
    v13 = sub_1BB872E74();
    *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) = v12;
    v8 = v105;
    v107 = (char *)((v13 & 0xFFFFFFFFFFFFFF8) + 32);
    v110 = v13;
  }
  v15 = 0;
  v16 = *a1;
  v103 = *a1 - 8;
  v104 = v11;
  v14 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = *a1;
  while (1)
  {
    v18 = v15++;
    if (v15 < v8)
    {
      v19 = *(_QWORD *)(*(_QWORD *)(v16 + 8 * v15) + *a3);
      v20 = *(double *)(v19 + 16);
      v21 = *(double *)(v19 + 24);
      v22 = *(_QWORD *)(*(_QWORD *)(v16 + 8 * v18) + *a3);
      v23 = *(double *)(v22 + 24);
      v24 = v20 <= *(double *)(v22 + 16);
      if (v21 != v23)
        v24 = v21 < v23;
      v15 = v18 + 2;
      if (v18 + 2 < v8)
      {
        while (1)
        {
          v25 = v20;
          v26 = v21;
          v27 = *(_QWORD *)(*(_QWORD *)(v16 + 8 * v15) + *a3);
          v20 = *(double *)(v27 + 16);
          v21 = *(double *)(v27 + 24);
          v28 = v20 <= v25;
          if (v21 != v26)
            v28 = v21 < v26;
          if (v24 != v28)
            break;
          if (v8 == ++v15)
          {
            v15 = v8;
            break;
          }
        }
      }
      if (v24)
      {
        if (v15 < v18)
          goto LABEL_134;
        if (v18 < v15)
        {
          v29 = (uint64_t *)(v103 + 8 * v15);
          v30 = v15;
          v31 = v18;
          v32 = (uint64_t *)(v16 + 8 * v18);
          do
          {
            if (v31 != --v30)
            {
              if (!v16)
                goto LABEL_139;
              v33 = *v32;
              *v32 = *v29;
              *v29 = v33;
            }
            ++v31;
            --v29;
            ++v32;
          }
          while (v31 < v30);
        }
      }
    }
    if (v15 < v8)
    {
      if (__OFSUB__(v15, v18))
        goto LABEL_132;
      if (v15 - v18 < v104)
        break;
    }
LABEL_50:
    if (v15 < v18)
      goto LABEL_127;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_1BACAA368(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v46 = *((_QWORD *)v14 + 2);
    v45 = *((_QWORD *)v14 + 3);
    v17 = v46 + 1;
    v16 = v106;
    if (v46 >= v45 >> 1)
    {
      v95 = sub_1BACAA368((char *)(v45 > 1), v46 + 1, 1, v14);
      v16 = v106;
      v14 = v95;
    }
    *((_QWORD *)v14 + 2) = v17;
    v47 = v14 + 32;
    v48 = &v14[16 * v46 + 32];
    *(_QWORD *)v48 = v18;
    *((_QWORD *)v48 + 1) = v15;
    if (v46)
    {
      while (1)
      {
        v49 = v17 - 1;
        if (v17 >= 4)
        {
          v54 = &v47[16 * v17];
          v55 = *((_QWORD *)v54 - 8);
          v56 = *((_QWORD *)v54 - 7);
          v60 = __OFSUB__(v56, v55);
          v57 = v56 - v55;
          if (v60)
            goto LABEL_116;
          v59 = *((_QWORD *)v54 - 6);
          v58 = *((_QWORD *)v54 - 5);
          v60 = __OFSUB__(v58, v59);
          v52 = v58 - v59;
          v53 = v60;
          if (v60)
            goto LABEL_117;
          v61 = v17 - 2;
          v62 = &v47[16 * v17 - 32];
          v64 = *(_QWORD *)v62;
          v63 = *((_QWORD *)v62 + 1);
          v60 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          if (v60)
            goto LABEL_119;
          v60 = __OFADD__(v52, v65);
          v66 = v52 + v65;
          if (v60)
            goto LABEL_122;
          if (v66 >= v57)
          {
            v84 = &v47[16 * v49];
            v86 = *(_QWORD *)v84;
            v85 = *((_QWORD *)v84 + 1);
            v60 = __OFSUB__(v85, v86);
            v87 = v85 - v86;
            if (v60)
              goto LABEL_126;
            v77 = v52 < v87;
            goto LABEL_87;
          }
        }
        else
        {
          if (v17 != 3)
          {
            v78 = *((_QWORD *)v14 + 4);
            v79 = *((_QWORD *)v14 + 5);
            v60 = __OFSUB__(v79, v78);
            v71 = v79 - v78;
            v72 = v60;
            goto LABEL_81;
          }
          v51 = *((_QWORD *)v14 + 4);
          v50 = *((_QWORD *)v14 + 5);
          v60 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          v53 = v60;
        }
        if ((v53 & 1) != 0)
          goto LABEL_118;
        v61 = v17 - 2;
        v67 = &v47[16 * v17 - 32];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v70 = __OFSUB__(v68, v69);
        v71 = v68 - v69;
        v72 = v70;
        if (v70)
          goto LABEL_121;
        v73 = &v47[16 * v49];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v60 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v60)
          goto LABEL_124;
        if (__OFADD__(v71, v76))
          goto LABEL_125;
        if (v71 + v76 >= v52)
        {
          v77 = v52 < v76;
LABEL_87:
          if (v77)
            v49 = v61;
          goto LABEL_89;
        }
LABEL_81:
        if ((v72 & 1) != 0)
          goto LABEL_120;
        v80 = &v47[16 * v49];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v60 = __OFSUB__(v81, v82);
        v83 = v81 - v82;
        if (v60)
          goto LABEL_123;
        if (v83 < v71)
          goto LABEL_14;
LABEL_89:
        v88 = v49 - 1;
        if (v49 - 1 >= v17)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v16)
          goto LABEL_138;
        v89 = v14;
        v90 = &v47[16 * v88];
        v91 = *(_QWORD *)v90;
        v92 = &v47[16 * v49];
        v93 = *((_QWORD *)v92 + 1);
        sub_1BB67C75C((char *)(v16 + 8 * *(_QWORD *)v90), (char *)(v16 + 8 * *(_QWORD *)v92), v16 + 8 * v93, v107, v109, a4);
        if (v4)
          goto LABEL_110;
        if (v93 < v91)
          goto LABEL_113;
        if (v49 > *((_QWORD *)v89 + 2))
          goto LABEL_114;
        *(_QWORD *)v90 = v91;
        *(_QWORD *)&v47[16 * v88 + 8] = v93;
        v94 = *((_QWORD *)v89 + 2);
        if (v49 >= v94)
          goto LABEL_115;
        v14 = v89;
        v17 = v94 - 1;
        memmove(&v47[16 * v49], v92 + 16, 16 * (v94 - 1 - v49));
        *((_QWORD *)v89 + 2) = v94 - 1;
        v16 = v106;
        if (v94 <= 2)
          goto LABEL_14;
      }
    }
    v17 = 1;
LABEL_14:
    v8 = v105;
    a3 = v109;
    if (v15 >= v105)
      goto LABEL_99;
  }
  v34 = v18 + v104;
  if (__OFADD__(v18, v104))
    goto LABEL_135;
  if (v34 >= v8)
    v34 = v8;
  if (v34 >= v18)
  {
    if (v15 != v34)
    {
      v35 = (uint64_t *)(v103 + 8 * v15);
      do
      {
        v36 = *(_QWORD *)(v16 + 8 * v15);
        v37 = v18;
        v38 = v35;
        do
        {
          v39 = *v38;
          v40 = *(_QWORD *)(v36 + *a3);
          v41 = *(double *)(v40 + 24);
          v42 = *(_QWORD *)(*v38 + *a3);
          v43 = *(double *)(v42 + 24);
          v44 = *(double *)(v40 + 16) <= *(double *)(v42 + 16);
          if (v41 != v43)
            v44 = v41 < v43;
          if (!v44)
            break;
          if (!v16)
            goto LABEL_137;
          *v38 = v36;
          v38[1] = v39;
          --v38;
          ++v37;
        }
        while (v15 != v37);
        ++v15;
        ++v35;
      }
      while (v15 != v34);
      v15 = v34;
    }
    goto LABEL_50;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BB67C6D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  double v14;
  _BOOL4 v15;

  if (a3 != a2)
  {
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(_QWORD *)(v5 + 8 * a3);
    v8 = result;
    v9 = (uint64_t *)v6;
    while (1)
    {
      v10 = *v9;
      v11 = *(_QWORD *)(v7 + *a5);
      v12 = *(double *)(v11 + 24);
      v13 = *(_QWORD *)(*v9 + *a5);
      v14 = *(double *)(v13 + 24);
      v15 = *(double *)(v11 + 16) <= *(double *)(v13 + 16);
      if (v12 != v14)
        v15 = v12 < v14;
      if (!v15)
      {
LABEL_4:
        ++a3;
        v6 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v5)
        break;
      *v9 = v7;
      v9[1] = v10;
      --v9;
      if (a3 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB67C75C(char *__src, char *a2, unint64_t a3, char *__dst, _QWORD *a5, void (*a6)(_QWORD, _QWORD, _QWORD))
{
  char *v7;
  char *v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD, _QWORD, _QWORD);
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  double v22;
  _BOOL4 v23;
  char *v24;
  void (*v25)(_QWORD, _QWORD, _QWORD);
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  _BOOL4 v36;
  uint64_t result;
  char *v38;
  char *v39;
  char *v40;

  v7 = __dst;
  v9 = a2;
  v10 = __src;
  v11 = a2 - __src;
  v12 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v12 = a2 - __src;
  v13 = v12 >> 3;
  v14 = a3 - (_QWORD)a2;
  v15 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v15 = a3 - (_QWORD)a2;
  v16 = v15 >> 3;
  v40 = __src;
  v39 = __dst;
  if (v13 >= v15 >> 3)
  {
    if (v14 >= -7)
    {
      if (__dst != a2 || &a2[8 * v16] <= __dst)
      {
        v25 = a6;
        memmove(__dst, a2, 8 * v16);
        a6 = v25;
      }
      v26 = &v7[8 * v16];
      v38 = v26;
      v40 = v9;
      if (v10 < v9 && v14 >= 8)
      {
        v27 = (char *)(a3 - 8);
        while (1)
        {
          v28 = v27 + 8;
          v29 = v9 - 8;
          v30 = *((_QWORD *)v9 - 1);
          v31 = *(_QWORD *)(*((_QWORD *)v26 - 1) + *a5);
          v32 = *(double *)(v31 + 16);
          v33 = *(double *)(v31 + 24);
          v34 = *(_QWORD *)(v30 + *a5);
          v35 = *(double *)(v34 + 24);
          v36 = v32 <= *(double *)(v34 + 16);
          if (v33 != v35)
            v36 = v33 < v35;
          if (v36)
          {
            if (v28 != v9 || v27 >= v9)
              *(_QWORD *)v27 = v30;
            v40 = v9 - 8;
            v9 -= 8;
            if (v29 <= v10)
              goto LABEL_46;
          }
          else
          {
            v38 = v26 - 8;
            if (v28 < v26 || v27 >= v26 || v28 != v26)
              *(_QWORD *)v27 = *((_QWORD *)v26 - 1);
            v26 -= 8;
            if (v9 <= v10)
              goto LABEL_46;
          }
          v27 -= 8;
          if (v26 <= v7)
            goto LABEL_46;
        }
      }
      goto LABEL_46;
    }
  }
  else if (v11 >= -7)
  {
    if (__dst != __src || &__src[8 * v13] <= __dst)
    {
      v17 = a6;
      memmove(__dst, __src, 8 * v13);
      a6 = v17;
    }
    v18 = &v7[8 * v13];
    v38 = v18;
    if ((unint64_t)v9 < a3 && v11 >= 8)
    {
      do
      {
        v19 = *(_QWORD *)(*(_QWORD *)v9 + *a5);
        v20 = *(double *)(v19 + 24);
        v21 = *(_QWORD *)(*(_QWORD *)v7 + *a5);
        v22 = *(double *)(v21 + 24);
        v23 = *(double *)(v19 + 16) <= *(double *)(v21 + 16);
        if (v20 != v22)
          v23 = v20 < v22;
        if (v23)
        {
          v24 = v9 + 8;
          if (v10 < v9 || v10 >= v24 || v10 != v9)
            *(_QWORD *)v10 = *(_QWORD *)v9;
        }
        else
        {
          if (v10 != v7)
            *(_QWORD *)v10 = *(_QWORD *)v7;
          v7 += 8;
          v39 = v7;
          v24 = v9;
        }
        v10 += 8;
        if (v7 >= v18)
          break;
        v9 = v24;
      }
      while ((unint64_t)v24 < a3);
      v40 = v10;
    }
LABEL_46:
    a6(&v40, &v39, &v38);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB67CA2C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB67CAF0(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t i;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1BA79F380(0, &qword_1ED3CFA90, (void (*)(uint64_t))type metadata accessor for FormatStateViewNodeStateDataLayoutAttributes);
  result = sub_1BB873F48();
  v6 = (_QWORD *)result;
  v7 = 0;
  v29 = a3;
  v10 = *(_QWORD *)(a3 + 64);
  v9 = a3 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v25 = v9;
  v26 = (unint64_t)(v11 + 63) >> 6;
  v27 = result + 64;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v14 | (v7 << 6); ; i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(v29 + 48) + 16 * i);
    v20 = *v19;
    v21 = v19[1];
    v31 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_retain();
    a1(&v30, &v31);
    result = swift_release();
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v6;
    }
    *(_QWORD *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v22 = (_QWORD *)(v6[6] + 16 * i);
    *v22 = v20;
    v22[1] = v21;
    *(_QWORD *)(v6[7] + 8 * i) = v30;
    v23 = v6[2];
    v16 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v16)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6[2] = v24;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v16 = __OFADD__(v7++, 1);
    if (v16)
      goto LABEL_27;
    if (v7 >= v26)
      return (uint64_t)v6;
    v17 = *(_QWORD *)(v25 + 8 * v7);
    if (!v17)
      break;
LABEL_15:
    v13 = (v17 - 1) & v17;
  }
  v18 = v7 + 1;
  if (v7 + 1 >= v26)
    return (uint64_t)v6;
  v17 = *(_QWORD *)(v25 + 8 * v18);
  if (v17)
    goto LABEL_14;
  v18 = v7 + 2;
  if (v7 + 2 >= v26)
    return (uint64_t)v6;
  v17 = *(_QWORD *)(v25 + 8 * v18);
  if (v17)
    goto LABEL_14;
  v18 = v7 + 3;
  if (v7 + 3 >= v26)
    return (uint64_t)v6;
  v17 = *(_QWORD *)(v25 + 8 * v18);
  if (v17)
  {
LABEL_14:
    v7 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v7 >= v26)
      return (uint64_t)v6;
    v17 = *(_QWORD *)(v25 + 8 * v7);
    ++v18;
    if (v17)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1BB67CD38(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;

  sub_1BA742954(*a2, *a1);
  if (v3)
    *a3 = v3;
}

void sub_1BB67CD70(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BA4FF8C0(a1, (uint64_t)v5);
  sub_1BA4FF1A8();
  if (v3)
    *a3 = v3;
}

void sub_1BB67CDD0(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _BYTE v8[136];

  sub_1BA895BCC(a1, (uint64_t)v8);
  sub_1BB66C1E0(*a2, a4);
  if (v4)
    *a3 = v4;
}

uint64_t sub_1BB67CE30@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  sub_1BA711ECC();
  if (v3)
  {
    result = swift_bridgeObjectRelease();
    *a2 = v3;
  }
  else
  {
    *a3 = v7;
    a3[1] = v6;
    a3[2] = v11;
    a3[3] = 1;
    v9 = (char *)a3 + *(int *)(type metadata accessor for FormatOption() + 28);
    v10 = type metadata accessor for FormatVersionRequirement(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  }
  return result;
}

double sub_1BB67CEF0@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  double result;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  sub_1BB676120(*a2, *a1, a1[1], a1[2], (uint64_t *)&v9);
  if (v4)
  {
    *a3 = v4;
  }
  else
  {
    v8 = v10;
    result = *(double *)&v9;
    *(_OWORD *)a4 = v9;
    *(_QWORD *)(a4 + 16) = v8;
  }
  return result;
}

uint64_t sub_1BB67CF50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  _BYTE v20[144];
  _BYTE v21[152];
  uint64_t v22;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (!v5)
    return result;
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1BB873DD4();
  v8 = (unint64_t *)(a1 + 32);
  while (1)
  {
    v10 = *v8++;
    v9 = v10;
    v11 = v10 >> 62;
    if (v10 >> 62)
      break;
    swift_retain();
    swift_retain();
    sub_1BB23EAE4(a2);
    if (v3)
    {
LABEL_13:
      swift_release();
      goto LABEL_15;
    }
LABEL_11:
    v18 = v12;
    swift_release();
    v19 = *(id *)(v18 + 16);
    swift_release();
    swift_release();
    sub_1BB873DB0();
    sub_1BB873DE0();
    sub_1BB873DEC();
    sub_1BB873DBC();
    if (!--v5)
      return v22;
  }
  if ((_DWORD)v11 == 1)
  {
    swift_retain();
    swift_retain();
    sub_1BA519D98(a2);
    if (v3)
      goto LABEL_13;
    goto LABEL_11;
  }
  v13 = *(_QWORD *)(v9 + 16);
  v14 = objc_allocWithZone(MEMORY[0x1E0CD2700]);
  swift_retain();
  swift_retain();
  v15 = objc_msgSend(v14, sel_init);
  swift_retain();
  v16 = swift_bridgeObjectRetain();
  sub_1BB67CF50(v16, a2);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BB680480();
    v17 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setAnimations_, v17);

    sub_1BA6A09F0(v13 + 24, (uint64_t)v21, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    sub_1BA6A09F0((uint64_t)v21, (uint64_t)v20, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    type metadata accessor for FormatAnimation();
    swift_allocObject();
    swift_retain();
    sub_1BB54BCB8((uint64_t)v21);
    v12 = sub_1BA4BE8EC(v15, 0, 0xE000000000000000, a2, (uint64_t)v20, 0, 0, 0, 0);
    goto LABEL_11;
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

LABEL_15:
  swift_release();
  return swift_release();
}

uint64_t sub_1BB67D220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  _BYTE v18[144];
  _BYTE v19[152];
  uint64_t v20;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (!v5)
    return result;
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1BB873DD4();
  v8 = (unint64_t *)(a1 + 32);
  while (1)
  {
    v10 = *v8++;
    v9 = v10;
    v11 = v10 >> 62;
    if (v10 >> 62)
      break;
    swift_retain();
    swift_retain();
    v12 = v3;
    sub_1BB23EAE4(a2);
LABEL_7:
    v3 = v12;
    swift_release();
    swift_release();
    if (v12)
      return swift_release();
LABEL_11:
    sub_1BB873DB0();
    sub_1BB873DE0();
    sub_1BB873DEC();
    sub_1BB873DBC();
    if (!--v5)
      return v20;
  }
  if ((_DWORD)v11 == 1)
  {
    swift_retain();
    swift_retain();
    v12 = v3;
    sub_1BA519D98(a2);
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(v9 + 16);
  v14 = objc_allocWithZone(MEMORY[0x1E0CD2700]);
  swift_retain();
  swift_retain();
  v15 = objc_msgSend(v14, sel_init);
  swift_retain();
  v16 = swift_bridgeObjectRetain();
  sub_1BB67CF50(v16, a2);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BB680480();
    v17 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setAnimations_, v17);

    sub_1BA6A09F0(v13 + 24, (uint64_t)v19, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    sub_1BA6A09F0((uint64_t)v19, (uint64_t)v18, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    type metadata accessor for FormatAnimation();
    swift_allocObject();
    swift_retain();
    sub_1BB54BCB8((uint64_t)v19);
    sub_1BA4BE8EC(v15, 0, 0xE000000000000000, a2, (uint64_t)v18, 0, 0, 0, 0);
    swift_release();
    swift_release();
    goto LABEL_11;
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_release();
}

uint64_t sub_1BB67D4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B0660, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v17 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BA71937C(0, v8, 0);
    v9 = v20;
    v10 = (unint64_t *)(a1 + 32);
    while (1)
    {
      v11 = *v10++;
      v19 = v11;
      sub_1BA7196DC(v11);
      sub_1BA71B2A4();
      v12 = v11;
      if (v2)
        break;
      sub_1BA719340(v12);
      v20 = v9;
      v14 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BA71937C(v13 > 1, v14 + 1, 1);
        v9 = v20;
      }
      *(_QWORD *)(v9 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v14, v7, v17);
      if (!--v8)
        return v9;
    }
    sub_1BA719340(v12);
    swift_release();
  }
  return v9;
}

uint64_t sub_1BB67D658(uint64_t a1)
{
  uint64_t v1;
  int64_t v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (!v3)
    return result;
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7A1C8(0, v3, 0);
  result = v20;
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v19 = result;
    v7 = *(v5 - 2);
    v6 = *(v5 - 1);
    v8 = *v5;
    sub_1BA5E7FF4(v7);
    sub_1BA6E6C68(v6);
    sub_1BA6E6C68(v8);
    sub_1BB86DD80();
    if ((v8 & 0xF000000000000007) == 0xF000000000000007)
    {
      sub_1BA5E7FF4(v7);
      sub_1BA6E6C68(v6);
      sub_1BA6E6C68(v8);
      v9 = 0;
    }
    else
    {
      sub_1BA5E7FF4(v7);
      sub_1BA6E6C68(v6);
      sub_1BA6E6C68(v8);
      sub_1BA6E6C68(v8);
      FormatFloat.value(contextLayoutOptions:)();
      if (v1)
      {
        sub_1BA5E800C(v7);
        sub_1BA6E6CD8(v6);
        sub_1BA6E6CD8(v8);
        sub_1BA6E6CD8(v8);
        goto LABEL_19;
      }
      v9 = v10;
      sub_1BA6E6CD8(v8);
    }
    v11 = 0;
    if ((v6 & 0xF000000000000007) != 0xF000000000000007)
      break;
LABEL_10:
    if ((~v7 & 0xF000000000000007) != 0)
    {
      FormatColor.color.getter();
      v13 = v14;
    }
    else
    {
      v13 = 0;
    }
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v9;
    *(_BYTE *)(v15 + 24) = (v8 & 0xF000000000000007) == 0xF000000000000007;
    *(_QWORD *)(v15 + 32) = v11;
    *(_BYTE *)(v15 + 40) = (v6 & 0xF000000000000007) == 0xF000000000000007;
    *(_QWORD *)(v15 + 48) = v13;
    sub_1BA5E800C(v7);
    sub_1BA6E6CD8(v6);
    sub_1BA6E6CD8(v8);
    swift_release();
    sub_1BA5E800C(v7);
    sub_1BA6E6CD8(v6);
    sub_1BA6E6CD8(v8);
    result = v19;
    v17 = *(_QWORD *)(v19 + 16);
    v16 = *(_QWORD *)(v19 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_1BAC7A1C8(v16 > 1, v17 + 1, 1);
      result = v19;
    }
    v5 += 3;
    *(_QWORD *)(result + 16) = v17 + 1;
    v18 = result + 16 * v17;
    *(_QWORD *)(v18 + 32) = sub_1BB546230;
    *(_QWORD *)(v18 + 40) = v15;
    if (!--v3)
      return result;
  }
  swift_retain();
  FormatFloat.value(contextLayoutOptions:)();
  if (!v1)
  {
    v11 = v12;
    sub_1BA6E6CD8(v6);
    goto LABEL_10;
  }
  sub_1BA5E800C(v7);
  sub_1BA6E6CD8(v6);
  sub_1BA6E6CD8(v8);
  sub_1BA6E6CD8(v6);
LABEL_19:
  swift_release();
  sub_1BA5E800C(v7);
  sub_1BA6E6CD8(v6);
  sub_1BA6E6CD8(v8);
  return swift_release();
}

unint64_t sub_1BB67D954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51[8];
  uint64_t v52;
  id v53;
  char v54;
  uint64_t v55;

  v3 = v2;
  v46 = a2;
  v5 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v5);
  v37 = (uint64_t)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1BB8717AC();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3D24C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSourceItemTipSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v36 - v10;
  v43 = type metadata accessor for FormatSourceItemTipSource();
  v47 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v42 = (uint64_t)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v38 = (uint64_t)v36 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v40 = (uint64_t *)(v46 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    swift_bridgeObjectRetain();
    v36[1] = a1;
    v16 = (char *)(a1 + 56);
    v48 = MEMORY[0x1E0DEE9D8];
    v39 = v8;
    v41 = v11;
    while (1)
    {
      v18 = *(v16 - 24);
      v19 = *((_QWORD *)v16 - 2);
      v20 = (void *)*((_QWORD *)v16 - 1);
      v21 = *v16;
      v55 = v15;
      if (v18 >> 6)
      {
        if (v18 >> 6 == 1)
        {
          v22 = *v40;
          sub_1BA896BB8(v19, (uint64_t)v20, v21);
          sub_1BB311338(v22, (uint64_t)v51);
          if (v3)
            goto LABEL_21;
          v49 = 0x3A3A776F6C6C6F66;
          v50 = 0xE800000000000000;
          v23 = objc_msgSend(v53, sel_identifier);
          sub_1BB8729A0();

          sub_1BB872AFC(v24);
          v3 = 0;
          v8 = v39;
          swift_bridgeObjectRelease();
          sub_1BB871794();
          sub_1BA6A94C4((uint64_t)v51);
        }
        else
        {
          v25 = *v40;
          sub_1BA896BB8(v19, (uint64_t)v20, v21);
          v26 = v37;
          sub_1BA758A00(v25, v37);
          if (v3)
          {
LABEL_21:
            sub_1BA896BE0(v19, (uint64_t)v20, v21);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v48;
          }
          v8 = v39;
          FormatWebEmbedBinding.SourceItemTip.tipSource(from:)(v26, (uint64_t)v39);
          v3 = 0;
          sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
        }
      }
      else
      {
        v51[0] = v18;
        sub_1BA896BB8(v19, (uint64_t)v20, v21);
        FormatGroupBinding.SourceItemTip.tipSource(from:)(v46, (uint64_t)v8);
        if (v3)
          goto LABEL_21;
      }
      v51[0] = v18;
      v52 = v19;
      v53 = v20;
      v54 = v21;
      v27 = v43;
      v28 = (uint64_t)v41;
      sub_1BB553F18(v46, (uint64_t)&v41[*(int *)(v43 + 20)]);
      (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v28, v8, v45);
      v29 = v47;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v28, 0, 1, v27);
      sub_1BA896BE0(v19, (uint64_t)v20, v21);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v28, 1, v27) == 1)
      {
        sub_1BA5C699C(v28, &qword_1ED3D24C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSourceItemTipSource);
        v17 = v55;
      }
      else
      {
        v30 = v38;
        sub_1BA5193C4(v28, v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatSourceItemTipSource);
        sub_1BA5193C4(v30, v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatSourceItemTipSource);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v17 = v55;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v48 = sub_1BB38E5B8(0, *(_QWORD *)(v48 + 16) + 1, 1, v48);
        v33 = *(_QWORD *)(v48 + 16);
        v32 = *(_QWORD *)(v48 + 24);
        if (v33 >= v32 >> 1)
          v48 = sub_1BB38E5B8(v32 > 1, v33 + 1, 1, v48);
        v34 = v48;
        *(_QWORD *)(v48 + 16) = v33 + 1;
        sub_1BA5193C4(v42, v34+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatSourceItemTipSource);
      }
      v16 += 32;
      v15 = v17 - 1;
      if (!v15)
      {
        swift_bridgeObjectRelease();
        return v48;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB67DEE8(unint64_t a1, void (*a2)(uint64_t *__return_ptr, unint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9D8];
  sub_1BA6A4CDC(0, 0, 0);
  v3 = v14;
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1BCCE4630](v5, a1);
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
LABEL_7:
        a2(&v13, v5, v6);
        swift_release();
        v8 = v13;
        v14 = v3;
        v10 = *(_QWORD *)(v3 + 16);
        v9 = *(_QWORD *)(v3 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_1BA6A4CDC(v9 > 1, v10 + 1, 1);
          v3 = v14;
        }
        *(_QWORD *)(v3 + 16) = v10 + 1;
        *(_QWORD *)(v3 + 8 * v10 + 32) = v8;
        ++v5;
        if (v7 == v4)
          goto LABEL_17;
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v4 = sub_1BB873F30();
      if (!v4)
        goto LABEL_17;
    }
    v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
    swift_retain();
    v7 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_15;
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BB67E07C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t i;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v32 - v10);
  result = MEMORY[0x1E0DEE9D8];
  v39 = MEMORY[0x1E0DEE9D8];
  v37 = *(_QWORD *)(a1 + 16);
  if (v37)
  {
    v32 = v2;
    v13 = 0;
    v14 = *(_QWORD *)(v9 + 72);
    v35 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v36 = a1 + v35;
    v38 = a2 + 56;
    v15 = MEMORY[0x1E0DEE9D8];
    v33 = v14;
    v34 = v7;
    while (1)
    {
      sub_1BA4C2DD8(v36 + v14 * v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_21;
      v17 = *v11;
      v16 = v11[1];
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v18 = sub_1BB874608();
      v19 = a2;
      v20 = -1 << *(_BYTE *)(a2 + 32);
      v21 = v18 & ~v20;
      if (((*(_QWORD *)(v38 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_20;
      v22 = *(_QWORD *)(v19 + 48);
      v23 = (_QWORD *)(v22 + 16 * v21);
      v24 = *v23 == v17 && v23[1] == v16;
      if (!v24 && (sub_1BB874398() & 1) == 0)
        break;
LABEL_3:
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      a2 = v19;
      v14 = v33;
      v7 = v34;
LABEL_4:
      if (++v13 == v37)
        return v39;
    }
    v25 = v21 + 1;
    v26 = ~v20;
    for (i = v25 & ~v20; ((*(_QWORD *)(v38 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v26)
    {
      v28 = (_QWORD *)(v22 + 16 * i);
      v29 = *v28 == v17 && v28[1] == v16;
      if (v29 || (sub_1BB874398() & 1) != 0)
        goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    a2 = v19;
    v14 = v33;
    v7 = v34;
LABEL_21:
    sub_1BA5193C4((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_1BAC7A10C(0, *(_QWORD *)(v15 + 16) + 1, 1);
    v15 = v39;
    v31 = *(_QWORD *)(v39 + 16);
    v30 = *(_QWORD *)(v39 + 24);
    if (v31 >= v30 >> 1)
    {
      sub_1BAC7A10C(v30 > 1, v31 + 1, 1);
      v15 = v39;
    }
    *(_QWORD *)(v15 + 16) = v31 + 1;
    sub_1BA5193C4((uint64_t)v7, v15 + v35 + v31 * v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1BB67E364(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 11)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB88E420;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB67E614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 32);
  v12 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 24);
  v13 = *(_QWORD *)(v0 + 80);
  v14 = *(_WORD *)(v0 + 89);
  v5 = *(_BYTE *)(v0 + 64);
  v6 = *(_BYTE *)(v0 + 88);
  swift_beginAccess();
  v7 = *(_QWORD *)(v0 + 96);
  v8 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v8 + 16) = v12;
  *(_QWORD *)(v8 + 24) = v10;
  *(_QWORD *)(v8 + 32) = v11;
  *(_QWORD *)(v8 + 40) = v1;
  *(_QWORD *)(v8 + 48) = v2;
  *(_QWORD *)(v8 + 56) = v3;
  *(_BYTE *)(v8 + 64) = v5;
  *(_QWORD *)(v8 + 72) = v4;
  *(_QWORD *)(v8 + 80) = v13;
  *(_BYTE *)(v8 + 88) = v6;
  *(_WORD *)(v8 + 89) = v14;
  swift_beginAccess();
  *(_QWORD *)(v8 + 96) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v2, v3, v5);
  sub_1BA6E6C54(v4, v13, v6);
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_1BB67E76C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 4)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB89EF80;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB67EA1C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 5)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB89C900;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB67ECCC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 7)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB91D4D0;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB67EF7C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 8)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB8D5E60;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB67F22C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 9)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB8E7290;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB67F4DC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 10)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB89CA60;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB67F78C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 14)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB93A670;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB67FA3C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 15)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB89D410;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB67FCEC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23;

  v2 = 18;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v10 = *(unsigned __int8 *)(a2 + 48);
  v11 = *(unsigned __int8 *)(a2 + 49);
  v12 = &byte_1E724C270;
  v13 = *(_QWORD *)(a2 + 56);
  while (1)
  {
    v14 = *v12++;
    if (v14 == 16)
      break;
    if (!--v2)
    {
      v13 = sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v23 = v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v4;
  *(_QWORD *)(v15 + 24) = v5;
  *(_QWORD *)(v15 + 32) = v6;
  *(_QWORD *)(v15 + 40) = v7;
  *(_QWORD *)(v15 + 48) = v9;
  *(_QWORD *)(v15 + 56) = v8;
  *(_QWORD *)(v15 + 64) = v10 | (v11 << 8) | 0x8000000000000000;
  *(_QWORD *)(v15 + 72) = v23;
  swift_bridgeObjectRetain();
  sub_1BB680E24(a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    v16 = a1;
  else
    v16 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = sub_1BA76B7B0((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v16[2] = v18 + 1;
  v16[v18 + 4] = v15 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v19 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  v20 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1BB680040(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(void), uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD v24[2];
  void (*v25)(_QWORD);
  void (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v26 = a5;
  v27 = a6;
  v24[1] = a3;
  v25 = a4;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v24 - v10;
  v32 = a1;
  swift_beginAccess();
  v13 = v6[2];
  v12 = v6[3];
  swift_bridgeObjectRetain();
  v14 = sub_1BA717D44(v13, v12);
  v16 = v15;
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v31 = v6[4];
  v18 = v31;
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v18);
  v19 = v30;
  sub_1BA717E88();
  if (v19)
  {
    sub_1BA719718(v18);
    swift_bridgeObjectRelease_n();
    return swift_release();
  }
  else
  {
    v24[0] = v11;
    v30 = KeyPath;
    sub_1BA719718(v18);
    swift_beginAccess();
    swift_retain();
    v21 = swift_bridgeObjectRetain();
    sub_1BB67D4D4(v21, a2);
    swift_bridgeObjectRelease();
    swift_release();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v14;
    v22[3] = v16;
    v22[4] = a2;
    v22[5] = 0;
    v25(0);
    v26();
    swift_retain();
    swift_retain();
    v23 = v24[0];
    sub_1BB86D534();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v23, v29);
  }
}

uint64_t sub_1BB68030C()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t (*sub_1BB680340(uint64_t a1, uint64_t a2))(void *a1)
{
  return sub_1BB680F44(a1, a2);
}

uint64_t (*sub_1BB680358(uint64_t a1, uint64_t a2))(void *a1)
{
  return sub_1BB680FD0(a1, a2);
}

_QWORD *sub_1BB68036C(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

uint64_t sub_1BB6803AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA8E45AC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BB6803C4()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEF60], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB6803D8()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB6803E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB5B665C(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

uint64_t sub_1BB6803F4()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEF60]);
}

uint64_t sub_1BB68040C()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEF60], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB68042C()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEF60], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB680440()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB680450()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEF60]);
}

uint64_t sub_1BB680468()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEF60], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

unint64_t sub_1BB680480()
{
  unint64_t result;

  result = qword_1EF2CA068;
  if (!qword_1EF2CA068)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2CA068);
  }
  return result;
}

void sub_1BB6804BC(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1BB67CDD0(a1, *(uint64_t **)(v3 + 16), a2, a3);
}

uint64_t sub_1BB6804D8()
{
  return swift_deallocObject();
}

uint64_t sub_1BB6804E8()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  swift_release();
  if (*(_QWORD *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = *(unsigned __int8 *)(v0 + 96);
    if (v1 != 255)
      sub_1BA69C828(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v1 & 1);
    v2 = *(unsigned __int8 *)(v0 + 136);
    if (v2 != 255)
      sub_1BA8964E0(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v2 & 1);
    v3 = *(unsigned __int8 *)(v0 + 160);
    if (v3 != 255)
      sub_1BA69C828(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), v3 & 1);
  }
  return swift_deallocObject();
}

uint64_t sub_1BB680594()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6805C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BAA4E044(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96));
  sub_1BAA4E044(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 168));
  return swift_deallocObject();
}

uint64_t sub_1BB680630()
{
  uint64_t v0;

  sub_1BA756FBC(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BB680654()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB680680()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB6806C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6806E8(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_8(a2, a1);
  return a2;
}

uint64_t sub_1BB680724()
{
  uint64_t v0;

  sub_1BA6F3F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  return swift_deallocObject();
}

void sub_1BB68075C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_1BA742954(**(_QWORD **)(v2 + 16), *a1);
  if (v3)
    *a2 = v3;
}

void sub_1BB68079C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA4CDF6C(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v6 = sub_1BB873A2C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB680800(unint64_t a1)
{
  return sub_1BA4C928C(a1);
}

uint64_t sub_1BB680814()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB680824@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB3B40B8(a1, *(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1BB680840(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 0xFE) != 0x7E)
  {
    sub_1BA5E800C(result);
    return sub_1BA6E6CC4(a7, a8, a9);
  }
  return result;
}

uint64_t sub_1BB680898(uint64_t a1)
{
  sub_1BA763860(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  return a1;
}

uint64_t sub_1BB6808D8(uint64_t a1, uint64_t a2)
{
  return sub_1BA7B2434(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA8E1190);
}

uint64_t sub_1BB6808F4()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB680904@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8E1720(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1BB680920()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB680944(uint64_t a1)
{
  return sub_1BB68115C(a1);
}

uint64_t sub_1BB680958()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_release();
    swift_release();
    sub_1BA6EEDB4(*(_QWORD *)(v0 + 40));
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB6809AC(uint64_t a1)
{
  return sub_1BA834074(a1);
}

uint64_t sub_1BB6809C4()
{
  return sub_1BB6816D4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB6EC208);
}

uint64_t sub_1BB6809E0()
{
  return objectdestroy_186Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB6809EC@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t *v5;

  return sub_1BAA43C98(v5[2], v5[3], v5[4], v5[5], a1, a2, a3, a4, a5);
}

uint64_t sub_1BB680A08(uint64_t a1)
{
  return sub_1BA5CCDFC(a1, sub_1BB5ADBF0);
}

uint64_t sub_1BB680A24()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB680A34@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB5ADA60(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1BB680A50()
{
  return objectdestroy_192Tm();
}

uint64_t sub_1BB680A58()
{
  return sub_1BB681298((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BACC9684);
}

void sub_1BB680A74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C2968)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C2968);
  }
}

uint64_t sub_1BB680AD4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1BB67CE30(a1, a2, a3);
}

uint64_t sub_1BB680AF0()
{
  return objectdestroy_186Tm((void (*)(_QWORD))MEMORY[0x1E0DEEF60]);
}

uint64_t sub_1BB680AFC@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v5;

  return sub_1BA951E8C(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), a1, a2, a3, a4, a5);
}

uint64_t sub_1BB680B18()
{
  return objectdestroy_192Tm();
}

uint64_t sub_1BB680B20()
{
  return sub_1BB681298((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB6B0D90);
}

uint64_t sub_1BB680B40@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1BB681324(a1, a2, a3, a4, a5);
}

uint64_t sub_1BB680B54()
{
  uint64_t v0;

  return swift_deallocObject();
}

double sub_1BB680B78@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BB67CEF0(a1, *(uint64_t **)(v3 + 16), a2, a3);
}

uint64_t sub_1BB680B98(uint64_t a1, uint64_t a2)
{
  return sub_1BA7B2434(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB7923B4);
}

void sub_1BB680BB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39ED88)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B06D8, (uint64_t (*)(void))sub_1BA831688, (uint64_t)&type metadata for FormatLayoutValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    type metadata accessor for IssueCoverViewLayoutAttributesFactory();
    sub_1BA7399D0();
    sub_1BB680C98();
    sub_1BA4A2870(&qword_1ED39D730, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for IssueCoverViewLayoutAttributesFactory);
    v0 = sub_1BB86D690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39ED88);
  }
}

unint64_t sub_1BB680C98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39EDA8;
  if (!qword_1ED39EDA8)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B06D8, (uint64_t (*)(void))sub_1BA831688, (uint64_t)&type metadata for FormatLayoutValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5EB8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39EDA8);
  }
  return result;
}

uint64_t sub_1BB680D00()
{
  return objectdestroy_192Tm();
}

_QWORD *sub_1BB680D0C(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

unint64_t *sub_1BB680D48(unint64_t *a1)
{
  sub_1BA71CA6C(*a1);
  return a1;
}

unint64_t *sub_1BB680D70(unint64_t *a1)
{
  sub_1BA719718(*a1);
  return a1;
}

uint64_t sub_1BB680D9C@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1BB681478(a1, a2, a3, a4, a5);
}

uint64_t sub_1BB680DB4(uint64_t a1, uint64_t a2)
{
  return sub_1BA7B2434(a1, a2, sub_1BB51B7FC);
}

uint64_t sub_1BB680DD0()
{
  return objectdestroy_192Tm();
}

uint64_t sub_1BB680DD8@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1BB68159C(a1, a2, a3, a4, a5);
}

uint64_t sub_1BB680DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA9C7C90(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24);
}

uint64_t sub_1BB680E10@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1BB681670(a1, a2, a3, a4, a5);
}

uint64_t sub_1BB680E24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB680E90()
{
  return sub_1BB6816D4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB261778);
}

uint64_t sub_1BB680EB8()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB680ED0()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB680EE8()
{
  return objectdestroy_186Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB680EF4()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB680F04()
{
  return objectdestroy_192Tm();
}

uint64_t sub_1BB680F0C()
{
  return objectdestroy_186Tm((void (*)(_QWORD))MEMORY[0x1E0DEEF60]);
}

uint64_t sub_1BB680F18()
{
  return objectdestroy_192Tm();
}

uint64_t sub_1BB680F28()
{
  return objectdestroy_192Tm();
}

uint64_t sub_1BB680F38()
{
  return objectdestroy_192Tm();
}

uint64_t (*sub_1BB680F44(uint64_t a1, uint64_t a2))(void *a1)
{
  uint64_t v2;

  return sub_1BB62D708(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(uint64_t (**)(void *))(v2 + 40), *(_QWORD *)(v2 + 48), (uint64_t *)(v2 + 56), *(_QWORD *)(v2 + 96));
}

uint64_t objectdestroy_13Tm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t (*sub_1BB680FD0(uint64_t a1, uint64_t a2))(void *a1)
{
  uint64_t *v2;

  return sub_1BB62D220(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2 + 7, v2[12], v2[13]);
}

uint64_t sub_1BB681014()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEF60], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB681028()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB681038()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEF60]);
}

uint64_t objectdestroy_28Tm()
{
  swift_unownedRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB68108C()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEF60], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_143Tm()
{
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6810F0()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_161Tm()
{
  swift_unownedRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB68114C()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB68115C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BA8E1920(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11]);
}

uint64_t objectdestroy_157Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_182Tm_0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB681220()
{
  return objectdestroy_186Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB68122C()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB68123C()
{
  return objectdestroy_192Tm();
}

uint64_t sub_1BB681244()
{
  return objectdestroy_186Tm((void (*)(_QWORD))MEMORY[0x1E0DEEF60]);
}

uint64_t objectdestroy_186Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  swift_release();
  a1(*(_QWORD *)(v1 + 40));
  return swift_deallocObject();
}

uint64_t sub_1BB681290()
{
  return objectdestroy_192Tm();
}

uint64_t sub_1BB681298(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t objectdestroy_205Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB681324@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v5;

  return sub_1BB693F6C(*(_QWORD *)(v5 + 16), *(_QWORD **)(v5 + 24), *(_BYTE *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 80), a1, a2, a3, a4, a5, *(double *)(v5 + 72), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_QWORD *)(v5 + 112));
}

uint64_t sub_1BB681370()
{
  return objectdestroy_192Tm();
}

uint64_t sub_1BB681378@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA986064(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

uint64_t objectdestroy_228Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for SharedItem();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 128) & ~v2;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v0 + v3;
  v5 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  v6 = v4 + *(int *)(v1 + 28);
  v7 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_1BB681478@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v5;

  type metadata accessor for SharedItem();
  return sub_1BB1E0130(*(_QWORD *)(v5 + 16), v5 + 24, *(_QWORD *)(v5 + 112), *(_QWORD *)(v5 + 120), a1, a2, a3, a4, a5);
}

uint64_t objectdestroy_67Tm()
{
  swift_bridgeObjectRelease();
  swift_unownedRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB68154C()
{
  return objectdestroy_192Tm();
}

uint64_t objectdestroy_192Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB68159C@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t *v5;

  return sub_1BB0A253C(v5[2], v5[3], v5[4], v5[5], v5[6], (uint64_t)(v5 + 7), a1, a2, a3, a4, a5);
}

uint64_t objectdestroy_242Tm()
{
  uint64_t v0;
  void *v1;

  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 56);
  if ((unint64_t)v1 >= 4)

  return swift_deallocObject();
}

uint64_t objectdestroy_245Tm()
{
  uint64_t v0;
  unsigned int v1;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = *(unsigned __int8 *)(v0 + 96);
    if (v1 <= 0xFD)
      sub_1BA6F2B88(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v1);
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB681670@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v5;

  return sub_1BAF69B60(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), (uint64_t *)(v5 + 48), *(_QWORD *)(v5 + 112), a1, a2, a3, a4, a5);
}

uint64_t objectdestroy_249Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6816D4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

_QWORD *sub_1BB6816F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, _OWORD *a15, char a16)
{
  uint64_t v16;
  _QWORD *v17;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;

  v17 = (_QWORD *)v16;
  *(double *)(v16 + 16) = a7;
  *(double *)(v16 + 24) = a8;
  *(double *)(v16 + 32) = a9;
  *(double *)(v16 + 40) = a10;
  *(_QWORD *)(v16 + 48) = a1;
  *(_QWORD *)(v16 + 56) = a2;
  *(_QWORD *)(v16 + 64) = a3;
  *(_QWORD *)(v16 + 72) = a4;
  *(_QWORD *)(v16 + 80) = a5;
  *(_QWORD *)(v16 + 88) = a6;
  *(_QWORD *)(v16 + 120) = a14;
  v20 = a15[5];
  *(_OWORD *)(v16 + 192) = a15[4];
  *(_OWORD *)(v16 + 208) = v20;
  *(_OWORD *)(v16 + 217) = *(_OWORD *)((char *)a15 + 89);
  v21 = a15[1];
  *(_OWORD *)(v16 + 128) = *a15;
  *(_OWORD *)(v16 + 144) = v21;
  v22 = a15[3];
  *(_OWORD *)(v16 + 160) = a15[2];
  *(_OWORD *)(v16 + 176) = v22;
  *(_BYTE *)(v16 + 233) = a16;
  *(double *)(v16 + 256) = a11;
  *(double *)(v16 + 264) = a12;
  sub_1BA796D68((uint64_t)a15);
  swift_bridgeObjectRetain();
  v23 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 112) = v23;
  v45 = MEMORY[0x1E0DEE9D8];
  v38 = v23;
  v39 = *(_QWORD *)(v23 + 16);
  if (v39)
  {
    v37 = (_QWORD *)v16;
    type metadata accessor for FormatDataLayoutViewModel();
    swift_bridgeObjectRetain_n();
    v24 = 0;
    v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v26 = *(_QWORD *)(v23 + 8 * v24 + 32);
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = v26;
      sub_1BA79A24C();
      *(_QWORD *)(v27 + 24) = v40;
      *(_QWORD *)(v27 + 32) = v41;
      *(_QWORD *)(v27 + 40) = v42;
      *(_QWORD *)(v27 + 48) = v43;
      *(_BYTE *)(v27 + 56) = v44;
      swift_retain_n();
      v28 = swift_retain();
      MEMORY[0x1BCCE36AC](v28);
      if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      swift_bridgeObjectRetain();
      sub_1BA79A788(v42);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v29 = v25;
      else
        v29 = sub_1BA79AF10(0, v25[2] + 1, 1, v25);
      v31 = v29[2];
      v30 = v29[3];
      if (v31 >= v30 >> 1)
        v29 = sub_1BA79AF10((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
      ++v24;
      v29[2] = v31 + 1;
      v25 = v29;
      v32 = &v29[5 * v31];
      v32[4] = v40;
      v32[5] = v41;
      v32[6] = v42;
      v32[7] = v43;
      *((_BYTE *)v32 + 64) = v44;
      swift_release();
      swift_release();
      v23 = v38;
    }
    while (v39 != v24);
    swift_bridgeObjectRelease();
    v33 = v45;
    v17 = v37;
  }
  else
  {
    swift_bridgeObjectRetain();
    v33 = MEMORY[0x1E0DEE9D8];
    v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v17[30] = v33;
  type metadata accessor for FormatDataLayoutViewKey();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v25;
  v17[31] = v34;
  if (v39)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v35);
  swift_bridgeObjectRelease();
  v17[12] = a3;
  v17[13] = a4;
  return v17;
}

_QWORD *sub_1BB681C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v16;
  _QWORD *v17;
  uint64_t v21;
  double *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;

  v17 = (_QWORD *)v16;
  v21 = a15;
  *(double *)(v16 + 16) = a7;
  *(double *)(v16 + 24) = a8;
  *(double *)(v16 + 32) = a9;
  *(double *)(v16 + 40) = a10;
  *(_QWORD *)(v16 + 48) = a1;
  *(_QWORD *)(v16 + 56) = a2;
  *(_QWORD *)(v16 + 64) = a3;
  *(_QWORD *)(v16 + 72) = a4;
  *(_QWORD *)(v16 + 80) = a5;
  *(_QWORD *)(v16 + 88) = a6;
  *(_QWORD *)(v16 + 120) = a14;
  sub_1BA4C2DD8(a15, (uint64_t)v17 + *(_QWORD *)(*v17 + 144), (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
  *(_BYTE *)(v16 + *(_QWORD *)(*(_QWORD *)v16 + 152)) = a16;
  v22 = (double *)((char *)v17 + *(_QWORD *)(*v17 + 176));
  *v22 = a11;
  v22[1] = a12;
  v39 = a4;
  swift_bridgeObjectRetain();
  v23 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 112) = v23;
  v47 = MEMORY[0x1E0DEE9D8];
  v41 = *(_QWORD *)(v23 + 16);
  if (v41)
  {
    v37 = (_QWORD *)v16;
    type metadata accessor for FormatDataLayoutViewModel();
    v40 = v23;
    swift_bridgeObjectRetain_n();
    v24 = 0;
    v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v26 = *(_QWORD *)(v40 + 8 * v24 + 32);
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = v26;
      sub_1BA79A24C();
      *(_QWORD *)(v27 + 24) = v42;
      *(_QWORD *)(v27 + 32) = v43;
      *(_QWORD *)(v27 + 40) = v44;
      *(_QWORD *)(v27 + 48) = v45;
      *(_BYTE *)(v27 + 56) = v46;
      swift_retain_n();
      v28 = swift_retain();
      MEMORY[0x1BCCE36AC](v28);
      if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      swift_bridgeObjectRetain();
      sub_1BA79A788(v44);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v29 = v25;
      else
        v29 = sub_1BA79AF10(0, v25[2] + 1, 1, v25);
      v31 = v29[2];
      v30 = v29[3];
      if (v31 >= v30 >> 1)
        v29 = sub_1BA79AF10((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
      ++v24;
      v29[2] = v31 + 1;
      v25 = v29;
      v32 = &v29[5 * v31];
      v32[4] = v42;
      v32[5] = v43;
      v32[6] = v44;
      v32[7] = v45;
      *((_BYTE *)v32 + 64) = v46;
      swift_release();
      swift_release();
    }
    while (v41 != v24);
    v23 = v40;
    swift_bridgeObjectRelease();
    v33 = v47;
    v17 = v37;
    v21 = a15;
  }
  else
  {
    swift_bridgeObjectRetain();
    v33 = MEMORY[0x1E0DEE9D8];
    v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)((char *)v17 + *(_QWORD *)(*v17 + 160)) = v33;
  type metadata accessor for FormatDataLayoutViewKey();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v25;
  *(_QWORD *)((char *)v17 + *(_QWORD *)(*v17 + 168)) = v34;
  if (v41)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v35);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
  v17[12] = a3;
  v17[13] = v39;
  return v17;
}

_QWORD *sub_1BB6821EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;

  v16 = (_QWORD *)v15;
  *(double *)(v15 + 16) = a7;
  *(double *)(v15 + 24) = a8;
  *(double *)(v15 + 32) = a9;
  *(double *)(v15 + 40) = a10;
  *(_QWORD *)(v15 + 48) = a1;
  *(_QWORD *)(v15 + 56) = a2;
  *(_QWORD *)(v15 + 64) = a3;
  *(_QWORD *)(v15 + 72) = a4;
  *(_QWORD *)(v15 + 80) = a5;
  *(_QWORD *)(v15 + 88) = a6;
  *(_QWORD *)(v15 + 120) = a14;
  *(_BYTE *)(v15 + 128) = a15;
  *(double *)(v15 + 152) = a11;
  *(double *)(v15 + 160) = a12;
  swift_bridgeObjectRetain();
  v19 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 112) = v19;
  v41 = MEMORY[0x1E0DEE9D8];
  v34 = v19;
  v35 = *(_QWORD *)(v19 + 16);
  if (v35)
  {
    v33 = (_QWORD *)v15;
    type metadata accessor for FormatDataLayoutViewModel();
    swift_bridgeObjectRetain_n();
    v20 = 0;
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v22 = *(_QWORD *)(v19 + 8 * v20 + 32);
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v22;
      sub_1BA79A24C();
      *(_QWORD *)(v23 + 24) = v36;
      *(_QWORD *)(v23 + 32) = v37;
      *(_QWORD *)(v23 + 40) = v38;
      *(_QWORD *)(v23 + 48) = v39;
      *(_BYTE *)(v23 + 56) = v40;
      swift_retain_n();
      v24 = swift_retain();
      MEMORY[0x1BCCE36AC](v24);
      if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      swift_bridgeObjectRetain();
      sub_1BA79A788(v38);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v25 = v21;
      else
        v25 = sub_1BA79AF10(0, v21[2] + 1, 1, v21);
      v27 = v25[2];
      v26 = v25[3];
      if (v27 >= v26 >> 1)
        v25 = sub_1BA79AF10((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
      ++v20;
      v25[2] = v27 + 1;
      v21 = v25;
      v28 = &v25[5 * v27];
      v28[4] = v36;
      v28[5] = v37;
      v28[6] = v38;
      v28[7] = v39;
      *((_BYTE *)v28 + 64) = v40;
      swift_release();
      swift_release();
      v19 = v34;
    }
    while (v35 != v20);
    swift_bridgeObjectRelease();
    v29 = v41;
    v16 = v33;
  }
  else
  {
    swift_bridgeObjectRetain();
    v29 = MEMORY[0x1E0DEE9D8];
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v16[17] = v29;
  type metadata accessor for FormatDataLayoutViewKey();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v21;
  v16[18] = v30;
  if (v35)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v31);
  swift_bridgeObjectRelease();
  v16[12] = a3;
  v16[13] = a4;
  return v16;
}

uint64_t sub_1BB682720()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB68276C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB67A014(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB682788()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t objectdestroy_501Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB682814()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB682864()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB6828A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB6828F4()
{
  uint64_t v0;

  sub_1BA899748(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(_BYTE *)(v0 + 72));
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB68294C()
{
  uint64_t v0;

  sub_1BA8979BC(*(_QWORD *)(v0 + 24));
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB682994()
{
  return objectdestroy_19Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t storeEnumTagSinglePayload for FormatGroupLayoutFactoryOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB6829F0 + 4 * byte_1BB93A9A2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB682A24 + 4 * byte_1BB93A99D[v4]))();
}

uint64_t sub_1BB682A24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB682A2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB682A34);
  return result;
}

uint64_t sub_1BB682A40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB682A48);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB682A4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB682A54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupLayoutFactoryOption()
{
  return &type metadata for FormatGroupLayoutFactoryOption;
}

uint64_t sub_1BB682A70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  _OWORD *v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  v59 = a3;
  v60 = a2;
  v10 = a3[6];
  v61 = a1;
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = (int *)type metadata accessor for GroupLayoutContext();
  v15 = v14[5];
  v16 = v11 + v15;
  v17 = v12 + v15;
  v18 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = v14[6];
  v20 = v11 + v19;
  v21 = v12 + v19;
  *(_OWORD *)v20 = *(_OWORD *)(v12 + v19);
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(_BYTE *)(v20 + 19) = *(_BYTE *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  v22 = *(_QWORD *)(v12 + v19 + 24);
  if (v22 >= 2)
    v22 = swift_bridgeObjectRetain();
  *(_QWORD *)(v20 + 24) = v22;
  v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  v24 = *(int *)(v23 + 36);
  v25 = (void *)(v20 + v24);
  v26 = (const void *)(v21 + v24);
  v27 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v25, v26, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *(_QWORD *)(v20 + *(int *)(v23 + 40)) = *(_QWORD *)(v21 + *(int *)(v23 + 40));
  *(_QWORD *)(v11 + v14[7]) = *(_QWORD *)(v12 + v14[7]);
  *(_QWORD *)(v11 + v14[8]) = *(_QWORD *)(v12 + v14[8]);
  *(_BYTE *)(v11 + v14[9]) = *(_BYTE *)(v12 + v14[9]);
  *(_QWORD *)(v11 + v14[10]) = *(_QWORD *)(v12 + v14[10]);
  *(_BYTE *)(v11 + v14[11]) = *(_BYTE *)(v12 + v14[11]);
  *(_QWORD *)(v11 + v14[12]) = *(_QWORD *)(v12 + v14[12]);
  v31 = v59[8];
  *(_QWORD *)(v61 + v59[7]) = *(_QWORD *)(v60 + v59[7]);
  v32 = v61 + v31;
  v33 = v60 + v31;
  v34 = *(_QWORD *)(v60 + v31 + 8);
  *(_QWORD *)v32 = *(_QWORD *)(v60 + v31);
  *(_QWORD *)(v32 + 8) = v34;
  v35 = *(_QWORD *)(v60 + v31 + 24);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v60 + v31 + 16);
  *(_QWORD *)(v32 + 24) = v35;
  v36 = *(_QWORD *)(v60 + v31 + 40);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v60 + v31 + 32);
  *(_QWORD *)(v32 + 40) = v36;
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v60 + v31 + 48);
  *(_QWORD *)(v32 + 56) = *(_QWORD *)(v60 + v31 + 56);
  v57 = (_OWORD *)(v61 + v31 + 64);
  v37 = (_OWORD *)(v60 + v31 + 64);
  v38 = *(_QWORD *)(v60 + v31 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38 >= 2)
  {
    if (v38 == 2)
    {
      *v57 = *v37;
    }
    else
    {
      *(_BYTE *)(v32 + 64) = *(_BYTE *)v37;
      *(_QWORD *)(v32 + 72) = v38;
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    *v57 = *v37;
  }
  v39 = *(_QWORD *)(v33 + 88);
  *(_QWORD *)(v32 + 80) = *(_QWORD *)(v33 + 80);
  *(_QWORD *)(v32 + 88) = v39;
  v40 = *(_QWORD *)(v33 + 104);
  *(_QWORD *)(v32 + 96) = *(_QWORD *)(v33 + 96);
  *(_QWORD *)(v32 + 104) = v40;
  v41 = *(_QWORD *)(v33 + 120);
  *(_QWORD *)(v32 + 112) = *(_QWORD *)(v33 + 112);
  *(_QWORD *)(v32 + 120) = v41;
  *(_BYTE *)(v32 + 128) = *(_BYTE *)(v33 + 128);
  *(_QWORD *)(v32 + 136) = *(_QWORD *)(v33 + 136);
  v42 = v59[10];
  *(_QWORD *)(v61 + v59[9]) = *(_QWORD *)(v60 + v59[9]);
  *(_QWORD *)(v61 + v42) = *(_QWORD *)(v60 + v42);
  v43 = v59[12];
  *(_QWORD *)(v61 + v59[11]) = *(_QWORD *)(v60 + v59[11]);
  v55 = v61 + v43;
  v44 = v60 + v43;
  v45 = *(_OWORD *)(v44 + 24);
  *(_OWORD *)(v55 + 24) = v45;
  v54 = v45;
  v56 = **(void (***)(uint64_t, uint64_t, uint64_t))(v45 - 8);
  v58 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v56(v55, v58, v54);
  v46 = v59[14];
  *(_BYTE *)(v61 + v59[13]) = *(_BYTE *)(v60 + v59[13]);
  v47 = *(_OWORD *)(v60 + v46 + 24);
  *(_OWORD *)(v61 + v46 + 24) = v47;
  (**(void (***)(void))(v47 - 8))();
  v48 = v59[15];
  v49 = v59[16];
  v50 = (_QWORD *)(v61 + v48);
  v51 = (_QWORD *)(v60 + v48);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  *(_QWORD *)(v61 + v49) = *(_QWORD *)(v60 + v49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v61;
}

_QWORD *sub_1BB682EA4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  size_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v46;
  char *__src;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;

  v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  v50 = a3;
  v51 = a2;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = v11[6];
  v17 = &v8[v16];
  v18 = &v9[v16];
  v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  v20 = (unint64_t *)&v8[v16 + 24];
  v21 = *(_QWORD *)&v9[v16 + 24];
  v46 = a1;
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(v17 + 24), (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v20 = *((_QWORD *)v18 + 3);
    }
  }
  else
  {
    *v20 = v21;
    if (v21 >= 2)
      swift_bridgeObjectRetain();
  }
  v49 = type metadata accessor for FeedLayoutSolverOptions(0);
  v22 = *(int *)(v49 + 36);
  v23 = (uint64_t)&v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v48 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  __src = v24;
  v28 = v27((uint64_t)v24, 1, v25);
  if ((_DWORD)v23)
  {
    v29 = v51;
    v30 = v46;
    if (v28)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v32 = *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64);
      v33 = (void *)v48;
LABEL_13:
      memcpy(v33, __src, v32);
      goto LABEL_16;
    }
    v35 = sub_1BB8705C4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v48, __src, v35);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v48, 0, 1, v25);
  }
  else
  {
    v29 = v51;
    v30 = v46;
    if (v28)
    {
      sub_1BA4A2E80(v48, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v32 = *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64);
      v33 = (void *)v48;
      goto LABEL_13;
    }
    v36 = sub_1BB8705C4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v48, __src, v36);
  }
LABEL_16:
  *(_QWORD *)&v17[*(int *)(v49 + 40)] = *(_QWORD *)&v18[*(int *)(v49 + 40)];
  *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
  *(_QWORD *)&v8[v11[8]] = *(_QWORD *)&v9[v11[8]];
  v8[v11[9]] = v9[v11[9]];
  *(_QWORD *)&v8[v11[10]] = *(_QWORD *)&v9[v11[10]];
  swift_retain();
  swift_release();
  v8[v11[11]] = v9[v11[11]];
  *(_QWORD *)&v8[v11[12]] = *(_QWORD *)&v9[v11[12]];
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v30 + v50[7]) = *(_QWORD *)((char *)v29 + v50[7]);
  swift_retain();
  swift_release();
  v37 = v50[8];
  v38 = (uint64_t)v30 + v37;
  v39 = (uint64_t)v29 + v37;
  *(_QWORD *)v38 = *(_QWORD *)((char *)v29 + v37);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)((char *)v29 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  *(_QWORD *)(v38 + 40) = *(_QWORD *)(v39 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v38 + 48) = *(_BYTE *)(v39 + 48);
  *(_QWORD *)(v38 + 56) = *(_QWORD *)(v39 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = *(_QWORD *)(v38 + 72);
  v41 = *(_QWORD *)(v39 + 72);
  if (v40 == 2)
  {
    if (v41 > 2)
      goto LABEL_23;
    goto LABEL_26;
  }
  if (v41 == 2)
  {
    sub_1BA92760C(v38 + 64);
    goto LABEL_26;
  }
  if (v40 >= 2)
  {
    if (v41 >= 2)
    {
      *(_BYTE *)(v38 + 64) = *(_BYTE *)(v39 + 64);
      *(_QWORD *)(v38 + 72) = *(_QWORD *)(v39 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    sub_1BB06B59C(v38 + 64, (unint64_t *)&qword_1ED3C85C8, (uint64_t (*)(void))sub_1BA9275C8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    goto LABEL_26;
  }
  if (v41 < 2)
  {
LABEL_26:
    *(_OWORD *)(v38 + 64) = *(_OWORD *)(v39 + 64);
    goto LABEL_27;
  }
LABEL_23:
  *(_BYTE *)(v38 + 64) = *(_BYTE *)(v39 + 64);
  *(_QWORD *)(v38 + 72) = *(_QWORD *)(v39 + 72);
  swift_bridgeObjectRetain();
LABEL_27:
  *(_QWORD *)(v38 + 80) = *(_QWORD *)(v39 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 88) = *(_QWORD *)(v39 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 96) = *(_QWORD *)(v39 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 104) = *(_QWORD *)(v39 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 112) = *(_QWORD *)(v39 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 120) = *(_QWORD *)(v39 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v38 + 128) = *(_BYTE *)(v39 + 128);
  *(_QWORD *)(v38 + 136) = *(_QWORD *)(v39 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v30 + v50[9]) = *(_QWORD *)((char *)v29 + v50[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v30 + v50[10]) = *(_QWORD *)((char *)v29 + v50[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v30 + v50[11]) = *(_QWORD *)((char *)v29 + v50[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)v30 + v50[12]), (_QWORD *)((char *)v29 + v50[12]));
  *((_BYTE *)v30 + v50[13]) = *((_BYTE *)v29 + v50[13]);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)v30 + v50[14]), (_QWORD *)((char *)v29 + v50[14]));
  v42 = v50[15];
  v43 = (_QWORD *)((char *)v30 + v42);
  v44 = (_QWORD *)((char *)v29 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v30 + v50[16]) = *(_QWORD *)((char *)v29 + v50[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1BB6834E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v43;
  void *v44;
  uint64_t v45;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = v7 + v11;
  v13 = v8 + v11;
  v14 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v10[6];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_OWORD *)v16 = *(_OWORD *)(v8 + v15);
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v8 + v15 + 16);
  *(_WORD *)(v16 + 17) = *(_WORD *)(v8 + v15 + 17);
  *(_BYTE *)(v16 + 19) = *(_BYTE *)(v8 + v15 + 19);
  *(_DWORD *)(v16 + 20) = *(_DWORD *)(v8 + v15 + 20);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v8 + v15 + 24);
  v18 = type metadata accessor for FeedLayoutSolverOptions(0);
  v19 = *(int *)(v18 + 36);
  v44 = (void *)(v16 + v19);
  v45 = v18;
  v20 = (const void *)(v17 + v19);
  v21 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v43 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v20, 1, v21))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v44, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v44, v20, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v21);
  }
  *(_QWORD *)(v16 + *(int *)(v45 + 40)) = *(_QWORD *)(v17 + *(int *)(v45 + 40));
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  *(_QWORD *)(v7 + v10[8]) = *(_QWORD *)(v8 + v10[8]);
  *(_BYTE *)(v7 + v10[9]) = *(_BYTE *)(v8 + v10[9]);
  *(_QWORD *)(v7 + v10[10]) = *(_QWORD *)(v8 + v10[10]);
  *(_BYTE *)(v7 + v10[11]) = *(_BYTE *)(v8 + v10[11]);
  *(_QWORD *)(v7 + v10[12]) = *(_QWORD *)(v8 + v10[12]);
  v24 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v25 = (_OWORD *)(a1 + v24);
  v26 = (_OWORD *)(a2 + v24);
  v27 = v26[3];
  v25[2] = v26[2];
  v25[3] = v27;
  v28 = v26[1];
  *v25 = *v26;
  v25[1] = v28;
  v29 = v26[8];
  v30 = v26[6];
  v25[7] = v26[7];
  v25[8] = v29;
  v31 = v26[5];
  v25[4] = v26[4];
  v25[5] = v31;
  v25[6] = v30;
  v32 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);
  v33 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  v37 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  v41 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v41) = *(_QWORD *)(a2 + v41);
  return a1;
}

uint64_t sub_1BB6837AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  size_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v58 = a3;
  v59 = a2;
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = v7 + v11;
  v13 = v8 + v11;
  v14 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = v10[6];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_OWORD *)v16 = *(_OWORD *)(v8 + v15);
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v8 + v15 + 16);
  *(_BYTE *)(v16 + 17) = *(_BYTE *)(v8 + v15 + 17);
  *(_BYTE *)(v16 + 18) = *(_BYTE *)(v8 + v15 + 18);
  *(_BYTE *)(v16 + 19) = *(_BYTE *)(v8 + v15 + 19);
  *(_BYTE *)(v16 + 20) = *(_BYTE *)(v8 + v15 + 20);
  *(_BYTE *)(v16 + 21) = *(_BYTE *)(v8 + v15 + 21);
  *(_BYTE *)(v16 + 22) = *(_BYTE *)(v8 + v15 + 22);
  *(_BYTE *)(v16 + 23) = *(_BYTE *)(v8 + v15 + 23);
  v18 = (unint64_t *)(v7 + v15 + 24);
  v19 = *(_QWORD *)(v8 + v15 + 24);
  if (*v18 < 2)
    goto LABEL_4;
  if (v19 < 2)
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v19 = *(_QWORD *)(v17 + 24);
LABEL_4:
    *v18 = v19;
    goto LABEL_6;
  }
  *v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  v57 = type metadata accessor for FeedLayoutSolverOptions(0);
  v20 = *(int *)(v57 + 36);
  v21 = v16 + v20;
  v22 = (const void *)(v17 + v20);
  v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v55 = *(_QWORD *)(v23 - 8);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  v56 = v21;
  LODWORD(v21) = v24(v21, 1, v23);
  v25 = v24((uint64_t)v22, 1, v23);
  if ((_DWORD)v21)
  {
    if (v25)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v27 = *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64);
      v28 = (void *)v56;
LABEL_11:
      memcpy(v28, v22, v27);
      goto LABEL_14;
    }
    v30 = sub_1BB8705C4();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v56, v22, v30);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v23);
  }
  else
  {
    if (v25)
    {
      sub_1BA4A2E80(v56, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v27 = *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64);
      v28 = (void *)v56;
      goto LABEL_11;
    }
    v31 = sub_1BB8705C4();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v56, v22, v31);
  }
LABEL_14:
  *(_QWORD *)(v16 + *(int *)(v57 + 40)) = *(_QWORD *)(v17 + *(int *)(v57 + 40));
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  *(_QWORD *)(v7 + v10[8]) = *(_QWORD *)(v8 + v10[8]);
  *(_BYTE *)(v7 + v10[9]) = *(_BYTE *)(v8 + v10[9]);
  *(_QWORD *)(v7 + v10[10]) = *(_QWORD *)(v8 + v10[10]);
  swift_release();
  *(_BYTE *)(v7 + v10[11]) = *(_BYTE *)(v8 + v10[11]);
  *(_QWORD *)(v7 + v10[12]) = *(_QWORD *)(v8 + v10[12]);
  swift_release();
  *(_QWORD *)(a1 + v58[7]) = *(_QWORD *)(v59 + v58[7]);
  swift_release();
  v32 = v58[8];
  v33 = a1 + v32;
  v34 = v59 + v32;
  v35 = *(_QWORD *)(v59 + v32 + 8);
  *(_QWORD *)v33 = *(_QWORD *)(v59 + v32);
  *(_QWORD *)(v33 + 8) = v35;
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v34 + 24);
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  *(_QWORD *)(v33 + 24) = v36;
  swift_bridgeObjectRelease();
  v37 = *(_QWORD *)(v34 + 40);
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  *(_QWORD *)(v33 + 40) = v37;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 48) = *(_BYTE *)(v34 + 48);
  *(_QWORD *)(v33 + 56) = *(_QWORD *)(v34 + 56);
  swift_bridgeObjectRelease();
  v38 = (_BYTE *)(v34 + 64);
  v39 = *(_QWORD *)(v33 + 72);
  v40 = *(_QWORD *)(v34 + 72);
  if (v39 != 2)
  {
    if (v40 == 2)
    {
      sub_1BA92760C(v33 + 64);
    }
    else if (v39 >= 2)
    {
      if (v40 >= 2)
      {
        *(_BYTE *)(v33 + 64) = *v38;
        *(_QWORD *)(v33 + 72) = v40;
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      sub_1BB06B59C(v33 + 64, (unint64_t *)&qword_1ED3C85C8, (uint64_t (*)(void))sub_1BA9275C8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    }
  }
  *(_OWORD *)(v33 + 64) = *(_OWORD *)v38;
LABEL_21:
  *(_QWORD *)(v33 + 80) = *(_QWORD *)(v34 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 96) = *(_QWORD *)(v34 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 104) = *(_QWORD *)(v34 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 112) = *(_QWORD *)(v34 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 120) = *(_QWORD *)(v34 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 128) = *(_BYTE *)(v34 + 128);
  *(_QWORD *)(v33 + 136) = *(_QWORD *)(v34 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v58[9]) = *(_QWORD *)(v59 + v58[9]);
  swift_release();
  *(_QWORD *)(a1 + v58[10]) = *(_QWORD *)(v59 + v58[10]);
  swift_release();
  *(_QWORD *)(a1 + v58[11]) = *(_QWORD *)(v59 + v58[11]);
  swift_bridgeObjectRelease();
  v41 = v58[12];
  v42 = a1 + v41;
  v43 = v59 + v41;
  __swift_destroy_boxed_opaque_existential_1(a1 + v41);
  v44 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v44;
  *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
  v45 = v58[14];
  *(_BYTE *)(a1 + v58[13]) = *(_BYTE *)(v59 + v58[13]);
  v46 = a1 + v45;
  v47 = v59 + v45;
  __swift_destroy_boxed_opaque_existential_1(a1 + v45);
  v48 = *(_OWORD *)(v47 + 16);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 16) = v48;
  *(_QWORD *)(v46 + 32) = *(_QWORD *)(v47 + 32);
  v49 = v58[15];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(v59 + v49);
  v53 = *v51;
  v52 = v51[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v58[16]) = *(_QWORD *)(v59 + v58[16]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB683CF8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB683D04(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB683D80()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB683D8C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t assignWithCopy for FormatGroupLayoutFactory(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a2 + 72);
  if (v4 == 2)
  {
    if (v5 > 2)
      goto LABEL_8;
    goto LABEL_11;
  }
  if (v5 == 2)
  {
    sub_1BA92760C(a1 + 64);
    goto LABEL_11;
  }
  if (v4 >= 2)
  {
    if (v5 >= 2)
    {
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1BB06B59C(a1 + 64, (unint64_t *)&qword_1ED3C85C8, (uint64_t (*)(void))sub_1BA9275C8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    goto LABEL_11;
  }
  if (v5 < 2)
  {
LABEL_11:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_12;
  }
LABEL_8:
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
LABEL_12:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 160), (uint64_t *)(a2 + 160));
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 208), (uint64_t *)(a2 + 208));
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy280_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t assignWithTake for FormatGroupLayoutFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v7 = (_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a2 + 72);
  if (v8 != 2)
  {
    if (v9 == 2)
    {
      sub_1BA92760C(a1 + 64);
    }
    else if (v8 >= 2)
    {
      if (v9 >= 2)
      {
        *(_BYTE *)(a1 + 64) = *v7;
        *(_QWORD *)(a1 + 72) = v9;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_1BB06B59C(a1 + 64, (unint64_t *)&qword_1ED3C85C8, (uint64_t (*)(void))sub_1BA9275C8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    }
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)v7;
LABEL_8:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_release();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v10;
  v11 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v11;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 208);
  v12 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v12;
  v13 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v13;
  swift_release();
  v14 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatGroupLayoutFactory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 280))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatGroupLayoutFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 280) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 280) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupLayoutFactory()
{
  return &type metadata for FormatGroupLayoutFactory;
}

unint64_t sub_1BB6843B0()
{
  unint64_t result;

  result = qword_1EF2CA070;
  if (!qword_1EF2CA070)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93AB54, &type metadata for FormatGroupLayoutFactoryOption);
    atomic_store(result, (unint64_t *)&qword_1EF2CA070);
  }
  return result;
}

uint64_t sub_1BB6843F4@<X0>(double **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA7C0658(a1, a2);
}

uint64_t sub_1BB684408@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA5355D8(a1, a2);
}

void sub_1BB684420(uint64_t a1, _QWORD *a2)
{
  sub_1BA81DD8C(a1, a2);
}

uint64_t sub_1BB684434(uint64_t a1, uint64_t a2)
{
  return sub_1BB6803AC(a1, a2);
}

uint64_t sub_1BB684448@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1BB6809EC(a1, a2, a3, a4, a5);
}

uint64_t sub_1BB68445C@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1BB680AFC(a1, a2, a3, a4, a5);
}

uint64_t sub_1BB684470(uint64_t a1, uint64_t a2)
{
  return sub_1BA7E89BC(a1, a2);
}

uint64_t sub_1BB684484(uint64_t a1, uint64_t a2)
{
  return sub_1BA4DDF94(a1, a2);
}

uint64_t sub_1BB684498(uint64_t a1, uint64_t a2)
{
  return sub_1BA5AC68C(a1, a2);
}

uint64_t sub_1BB6844AC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB680824(a1, a2);
}

uint64_t sub_1BB6844C0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB680904(a1, a2);
}

uint64_t sub_1BB6844D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB680A34(a1, a2);
}

uint64_t sub_1BB6844E8(uint64_t a1)
{
  return sub_1BA5989D4(a1);
}

uint64_t sub_1BB6844FC(uint64_t a1, uint64_t a2)
{
  return sub_1BB680DF0(a1, a2);
}

uint64_t sub_1BB684510@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA760C08(a1, a2);
}

BOOL static FormatImageRenderingMode.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v2 = *a1;
  v3 = *a2;
  if (!*a1)
  {
    if (!v3)
    {
      sub_1BA6E7468(0);
      v4 = 0;
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  if (v2 == 1)
  {
    if (v3 == 1)
    {
      sub_1BA6E7468(1uLL);
      sub_1BA6E7468(1uLL);
      return v3;
    }
    goto LABEL_12;
  }
  if (v2 != 2)
  {
    if (v3 >= 3)
    {
      v6 = *(_QWORD *)(v2 + 24);
      v9 = *(_QWORD *)(v3 + 16);
      v8 = *(_QWORD *)(v3 + 24);
      v13 = *(_QWORD *)(v2 + 16);
      v7 = v13;
      v14 = v6;
      v11 = v9;
      v12 = v8;
      sub_1BA6E6E84(v3);
      sub_1BA6E6E84(v2);
      sub_1BA6E6E84(v13);
      sub_1BA6E6E84(v6);
      sub_1BA6E6E84(v9);
      sub_1BA6E6E84(v8);
      if ((static FormatImageRenderingMode.== infix(_:_:)(&v13, &v11) & 1) != 0)
      {
        v10 = static FormatImageRenderingMode.== infix(_:_:)(&v14, &v12);
        sub_1BA6E7468(v9);
        sub_1BA6E7468(v8);
        sub_1BA6E7468(v7);
        sub_1BA6E7468(v6);
        sub_1BA6E7468(v2);
        sub_1BA6E7468(v3);
        return (v10 & 1) != 0;
      }
      sub_1BA6E7468(v9);
      sub_1BA6E7468(v8);
      sub_1BA6E7468(v7);
      sub_1BA6E7468(v6);
LABEL_13:
      sub_1BA6E7468(v2);
      sub_1BA6E7468(v3);
      return 0;
    }
LABEL_12:
    sub_1BA6E6E84(*a2);
    sub_1BA6E6E84(v2);
    goto LABEL_13;
  }
  if (v3 != 2)
    goto LABEL_12;
  sub_1BA6E7468(2uLL);
  v4 = 2;
LABEL_8:
  sub_1BA6E7468(v4);
  return 1;
}

unint64_t sub_1BB6846C4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA827154();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6846E8()
{
  unint64_t result;

  result = qword_1ED3D0AD8;
  if (!qword_1ED3D0AD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageRenderingMode, &type metadata for FormatImageRenderingMode);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatImageRenderingMode()
{
  return &type metadata for FormatImageRenderingMode;
}

uint64_t UIUserInterfaceSizeClass.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x746361706D6F63;
  v2 = 0x6E776F6E6B6E75;
  if (a1 == 2)
    v2 = 0x72616C75676572;
  if (a1 != 1)
    v1 = v2;
  if (a1)
    return v1;
  else
    return 0x6669636570736E75;
}

uint64_t sub_1BB6847BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = 0x746361706D6F63;
  v3 = 0x6E776F6E6B6E75;
  if (*v0 == 2)
    v3 = 0x72616C75676572;
  if (v1 != 1)
    v2 = v3;
  if (v1)
    return v2;
  else
    return 0x6669636570736E75;
}

id SportsKeyPlayerDataVisualization.leagueTag.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 48), sel_eventLeagueTag);
}

uint64_t SportsKeyPlayerDataVisualization.competitorTags.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventCompetitorTags);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = v1;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3AB1E0);
  v3 = sub_1BB872DB4();

  return v3;
}

uint64_t SportsKeyPlayerDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  SportsKeyPlayerDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t SportsKeyPlayerDataVisualization.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsKeyPlayerDataVisualization.umcCanonicalId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsKeyPlayerDataVisualization.event.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsKeyPlayerDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl, a1);
}

uint64_t SportsKeyPlayerDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsKeyPlayerDataVisualization.roster.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_roster);
  return swift_bridgeObjectRetain();
}

uint64_t SportsKeyPlayerDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 8);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 16);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 24);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 32);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1BA99178C(v2, v3);
}

uint64_t SportsKeyPlayerDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_configuredEmbedUrl, a1);
}

char *SportsKeyPlayerDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  char *v7;
  char *v8;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, double);
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v8 = v7;
  v54 = a5;
  v15 = sub_1BB86C67C();
  v16 = MEMORY[0x1E0C80A78](v15);
  v48 = a1;
  v49 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a6;
  v19 = *a7;
  v20 = a7[1];
  v21 = a7[2];
  v22 = a7[3];
  v23 = a7[5];
  v24 = a7[4];
  *((_QWORD *)v8 + 4) = a1;
  *((_QWORD *)v8 + 5) = a2;
  v25 = v19;
  v55 = a3;
  *((_QWORD *)v8 + 6) = a3;
  v26 = v21;
  v50 = a4;
  v51 = v27;
  v28 = *(void (**)(char *, uint64_t, double))(v27 + 16);
  v52 = v29;
  v28(&v8[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl], a4, v16);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources] = v54;
  v30 = (uint64_t *)&v8[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config];
  v53 = v25;
  v54 = v26;
  *v30 = v25;
  v30[1] = v20;
  v31 = v20;
  v30[2] = v26;
  v30[3] = v22;
  v30[4] = v24;
  v30[5] = v23;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_roster] = v18;
  v47 = v23;
  if (v20)
  {
    v56 = 14906;
    v57 = 0xE200000000000000;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1BA99178C(v53, v20);
    v32 = v24;
    sub_1BB872AFC(v33);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v32 = v24;
  }
  v46 = v32;
  v34 = v50;
  v56 = sub_1BB86C538();
  v57 = v35;
  sub_1BB872AFC(v36);
  sub_1BB872AFC(v37);
  sub_1BB872AFC(v38);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v39);
  swift_bridgeObjectRelease();
  v40 = v57;
  *((_QWORD *)v8 + 2) = v56;
  *((_QWORD *)v8 + 3) = v40;
  v41 = v53;
  v56 = v53;
  v57 = v31;
  v58 = v54;
  v59 = v22;
  v60 = v32;
  v61 = v47;
  v42 = v49;
  sub_1BB0FA6B8(v34, &v56, 0xD00000000000001ALL, 0x80000001BB995ED0, v49);
  swift_unknownObjectRelease();
  v44 = v51;
  v43 = v52;
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v34, v52);
  sub_1BA993900(v41, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(&v8[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_configuredEmbedUrl], v42, v43);
  return v8;
}

uint64_t SportsKeyPlayerDataVisualization.with(config:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[6];
  uint64_t v25;

  v3 = sub_1BB86C67C();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  v12 = a1[4];
  v11 = a1[5];
  v13 = v1[4];
  v21 = v1[5];
  v22 = v1[6];
  v23 = v13;
  (*(void (**)(char *, uint64_t, double))(v14 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl, v4);
  v15 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources);
  v16 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_roster);
  v24[5] = v11;
  v25 = v16;
  v24[0] = v7;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v12;
  v17 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v21;
  swift_bridgeObjectRetain();
  v19 = v22;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsKeyPlayerDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v23, v18, v19, (uint64_t)v6, v15, &v25, v24);
  return v17;
}

uint64_t SportsKeyPlayerDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SportsKeyPlayerDataVisualization.init(from:)(a1);
  return v2;
}

uint64_t *SportsKeyPlayerDataVisualization.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD v30[3];
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;

  v39 = a1;
  v2 = v1;
  v4 = *v2;
  v34 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v31 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)v30 - v7;
  sub_1BA99395C();
  v35 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB686AF0(0, &qword_1EF2CA078, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v36 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v30 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB686AAC();
  v37 = v15;
  v16 = v38;
  sub_1BB87468C();
  if (v16)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v17 = v4;
    v18 = v35;
    v38 = v13;
    v30[2] = v17;
    LOBYTE(v40) = 0;
    v2[4] = sub_1BB874098();
    v2[5] = v19;
    LOBYTE(v40) = 1;
    sub_1BA4A2870(&qword_1ED3A3BA0, (uint64_t (*)(uint64_t))sub_1BA99395C, MEMORY[0x1E0DB50A0]);
    sub_1BB8740D4();
    sub_1BB86ED1C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
    v2[6] = v40;
    LOBYTE(v40) = 2;
    v20 = sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v21 = v33;
    v22 = v34;
    sub_1BB8740D4();
    v30[1] = v20;
    v23 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 32);
    v23(OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl, v21, v22);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB070, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v43 = 3;
    sub_1BA993B04(&qword_1ED3AB090, &qword_1ED3AA680, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E0DEAF40]);
    v35 = 0;
    sub_1BB8740D4();
    *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources) = v40;
    v43 = 6;
    sub_1BA993A04();
    sub_1BB8740D4();
    *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_roster) = v40;
    v43 = 4;
    sub_1BA993A48();
    sub_1BB874068();
    v24 = OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config;
    v25 = v41;
    *(_OWORD *)OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config = v40;
    *(_OWORD *)(v24 + 16) = v25;
    *(_OWORD *)(v24 + 32) = v42;
    LOBYTE(v40) = 5;
    MEMORY[0x10] = sub_1BB874098();
    MEMORY[0x18] = v26;
    LOBYTE(v40) = 7;
    v27 = v31;
    v28 = v34;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v36);
    v23(OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_configuredEmbedUrl, v27, v28);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v2;
}

uint64_t SportsKeyPlayerDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;

  v2 = sub_1BB86E008();
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x1E0C80A78](v2);
  v32 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA99395C();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB686AF0(0, (unint64_t *)&unk_1EF2CA090, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v29 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB686AAC();
  v14 = v10;
  v15 = v36;
  sub_1BB8746C8();
  LOBYTE(v37) = 0;
  v16 = v35;
  sub_1BB87417C();
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v29 = v11;
  v30 = 0;
  v18 = v32;
  v35 = v6;
  v31 = v13;
  *(_QWORD *)&v37 = *(_QWORD *)(v15 + 48);
  v19 = qword_1ED3A3888;
  swift_unknownObjectRetain_n();
  if (v19 != -1)
    swift_once();
  v20 = v34;
  v21 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED3A3868);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v18, v21, v20);
  MEMORY[0x1E0C80A78](v22);
  *(&v29 - 2) = sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3CF9B0);
  swift_getKeyPath();
  sub_1BB86ED10();
  swift_unknownObjectRelease();
  LOBYTE(v37) = 1;
  sub_1BA4A2870((unint64_t *)&unk_1ED3A3B90, (uint64_t (*)(uint64_t))sub_1BA99395C, MEMORY[0x1E0DB5098]);
  v24 = v30;
  v23 = v31;
  sub_1BB8741AC();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v5);
  if (v24)
  {
    v27 = *(uint64_t (**)(char *, uint64_t))(v29 + 8);
  }
  else
  {
    v25 = v36;
    LOBYTE(v37) = 2;
    sub_1BB86C67C();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1BB8741AC();
    *(_QWORD *)&v37 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources);
    v40 = 3;
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB070, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA993B04((unint64_t *)&qword_1ED3AB080, (unint64_t *)&unk_1ED3AA670, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    *(_QWORD *)&v37 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_roster);
    v40 = 6;
    sub_1BA993C00();
    sub_1BB8741AC();
    v26 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 16);
    v37 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config);
    v38 = v26;
    v39 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 32);
    v40 = 4;
    sub_1BB686B68();
    sub_1BB686BBC();
    sub_1BB8741AC();
    LOBYTE(v37) = 5;
    sub_1BB87417C();
    v28 = v29;
    LOBYTE(v37) = 7;
    sub_1BB8741AC();
    v27 = *(uint64_t (**)(char *, uint64_t))(v28 + 8);
  }
  return v27(v23, v14);
}

uint64_t sub_1BB685968(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB6859A8 + 4 * byte_1BB93ADF0[a1]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BB6859A8()
{
  return 0x746E657665;
}

uint64_t sub_1BB6859BC()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BB6859D4()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BB6859F8()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BB685A0C()
{
  return 0x696669746E656469;
}

uint64_t sub_1BB685A28()
{
  return 0x726574736F72;
}

unint64_t sub_1BB685A3C()
{
  return 0xD000000000000012;
}

uint64_t sub_1BB685A58(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB685A98 + 4 * byte_1BB93ADF8[a1]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BB685A98()
{
  return 0x746E657665;
}

uint64_t sub_1BB685AAC()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BB685AC4()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BB685AE8()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BB685AFC()
{
  return 0x696669746E656469;
}

uint64_t sub_1BB685B18()
{
  return 0x726574736F72;
}

unint64_t sub_1BB685B2C()
{
  return 0xD000000000000012;
}

void sub_1BB685B48(char *a1)
{
  sub_1BB7EE4E8(*a1);
}

void sub_1BB685B54()
{
  char *v0;

  sub_1BAB075E0(0, *v0);
}

void sub_1BB685B60(uint64_t a1)
{
  char *v1;

  sub_1BA9D11CC(a1, *v1);
}

void sub_1BB685B68(uint64_t a1)
{
  char *v1;

  sub_1BAB075E0(a1, *v1);
}

uint64_t sub_1BB685B70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB686FE4();
  *a1 = result;
  return result;
}

uint64_t sub_1BB685B9C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB685968(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB685BC4()
{
  unsigned __int8 *v0;

  return sub_1BB685A58(*v0);
}

uint64_t sub_1BB685BCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB686FE4();
  *a1 = result;
  return result;
}

uint64_t sub_1BB685BF0()
{
  sub_1BB686AAC();
  return sub_1BB874710();
}

uint64_t sub_1BB685C18()
{
  sub_1BB686AAC();
  return sub_1BB87471C();
}

uint64_t SportsKeyPlayerDataVisualization.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl;
  v2 = sub_1BB86C67C();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA993900(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsKeyPlayerDataVisualization.__deallocating_deinit()
{
  SportsKeyPlayerDataVisualization.deinit();
  return swift_deallocClassInstance();
}

uint64_t *sub_1BB685D1C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *result;

  v5 = swift_allocObject();
  result = SportsKeyPlayerDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB685D70(_QWORD *a1)
{
  return SportsKeyPlayerDataVisualization.encode(to:)(a1);
}

uint64_t static SportsKeyPlayerDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1BB874398();
}

uint64_t SportsKeyPlayerDataVisualizationLocation.identifier.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x666E49746E657665;
  else
    return 0x746C7561666564;
}

BOOL static SportsKeyPlayerDataVisualizationLocation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SportsKeyPlayerDataVisualizationLocation.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t SportsKeyPlayerDataVisualizationLocation.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

_QWORD *sub_1BB685E84(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(uint64_t, _QWORD, uint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;
  _QWORD *result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _UNKNOWN **v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  _QWORD *v107;
  __int128 v108;
  uint64_t v109;
  __int128 *v110;
  _QWORD *v111;
  uint64_t inited;
  _QWORD *v113;
  char *v114;
  __int128 v115;
  __int128 v116;
  unint64_t v117;
  __int128 v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  char *v139;
  __int128 v140;
  __int128 v141;
  _UNKNOWN **v142;
  uint64_t v143;
  _QWORD v144[5];
  __int128 v145;
  uint64_t v146;
  _OWORD v147[2];
  uint64_t v148;

  v2 = sub_1BB86C67C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v114 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v113 = (_QWORD *)((char *)&v108 - v8);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v3, v6);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  if (!a1)
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  v123 = v14;
  v129 = v13;
  v139 = (char *)&v108 - v12;
  sub_1BA8EDAAC();
  inited = swift_initStackObject();
  v108 = xmmword_1BB87CE70;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = v15;
  sub_1BA8C88C8(0);
  v132 = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 72);
  v20 = *(unsigned __int8 *)(v18 + 80);
  v21 = (v20 + 32) & ~v20;
  v127 = v20 | 7;
  v128 = v16;
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BB87D7A0;
  v131 = v21;
  v109 = v22;
  v23 = (_QWORD *)(v22 + v21);
  v24 = (__int128 *)a1;
  v25 = *(_QWORD *)(a1 + 32);
  v26 = *(_QWORD *)(a1 + 40);
  v136 = v26;
  v27 = type metadata accessor for FormatInspectionItem(0);
  v28 = (char *)v23 + *(int *)(v27 + 24);
  *(_QWORD *)v28 = v25;
  *((_QWORD *)v28 + 1) = v26;
  v29 = v24;
  v30 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  v137 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v138 = v30;
  v137(v28, 0, 1, v30);
  *v23 = 0xD000000000000010;
  v23[1] = 0x80000001BB9658C0;
  v23[2] = 0;
  v23[3] = 0;
  v31 = (char *)v23 + *(int *)(v27 + 28);
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  v31[16] = -1;
  v32 = *(char **)(*(_QWORD *)(v27 - 8) + 56);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v32)(v23, 0, 1, v27);
  v111 = v23;
  v133 = v19;
  v33 = (_QWORD *)((char *)v23 + v19);
  v34 = v27;
  v35 = (char *)v24 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl;
  v36 = (uint64_t)v139;
  v126 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v126(v139, v35, v2);
  v130 = v4;
  v37 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v124 = v2;
  v125 = v37;
  v37(v36, 0, 1, v2);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BAAF770C(0x5255206465626D45, 0xE90000000000004CLL, v36, v33);
  v139 = v32;
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v32)(v33, 0, 1, v27);
  v38 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources);
  if (v38 >> 62)
    goto LABEL_22;
  v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v110 = v29;
  if (v39)
  {
    while (1)
    {
      v146 = MEMORY[0x1E0DEE9D8];
      result = (_QWORD *)sub_1BAC7A388(0, v39 & ~(v39 >> 63), 0);
      if (v39 < 0)
        break;
      v41 = 0;
      v42 = v146;
      v43 = 2 * v133;
      v119 = v131 + 3 * v133;
      v120 = v38 & 0xC000000000000001;
      v118 = xmmword_1BB87FC80;
      v44 = MEMORY[0x1E0DEA968];
      v116 = xmmword_1BB88A7F0;
      v115 = xmmword_1BB88A800;
      v117 = v38;
      v121 = 2 * v133;
      v122 = v39;
      while (v39 != v41)
      {
        v135 = v42;
        v136 = v41;
        if (v120)
        {
          v45 = (char *)MEMORY[0x1BCCE4630](v41, v38);
        }
        else
        {
          v45 = *(char **)(v38 + 8 * v41 + 32);
          swift_retain();
        }
        v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = v118;
        v134 = v46;
        v47 = (_QWORD *)(v46 + v131);
        v48 = *((_QWORD *)v45 + 2);
        v49 = *((_QWORD *)v45 + 3);
        sub_1BA993F8C(v48, v49);
        sub_1BAAF9A70(0x20746E65746E6F43, 0xEC00000065707954, v48, v49, v47);
        ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v139)(v47, 0, 1, v34);
        v50 = (char *)v47 + v133;
        v51 = *((_QWORD *)v45 + 5);
        *(_QWORD *)&v145 = *((_QWORD *)v45 + 4);
        *((_QWORD *)&v145 + 1) = v51;
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
        v52 = v34;
        swift_bridgeObjectRetain_n();
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          v53 = &v50[*(int *)(v34 + 24)];
          *(_QWORD *)v53 = v140;
          v54 = v138;
          swift_storeEnumTagMultiPayload();
          v137(v53, 0, 1, v54);
          *(_OWORD *)v50 = v116;
          *((_QWORD *)v50 + 2) = 0;
          *((_QWORD *)v50 + 3) = 0;
          v55 = &v50[*(int *)(v34 + 28)];
          *(_QWORD *)v55 = 0;
          *((_QWORD *)v55 + 1) = 0;
          v55[16] = -1;
        }
        else
        {
          *((_QWORD *)&v141 + 1) = v44;
          v142 = (_UNKNOWN **)MEMORY[0x1E0DEA9D8];
          v140 = v145;
          sub_1BA4CECCC(&v140, (uint64_t)v144);
          v56 = __swift_project_boxed_opaque_existential_1(v144, v144[3]);
          v57 = *v56;
          v58 = v56[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v59 = (uint64_t)v113;
          *v113 = v57;
          *(_QWORD *)(v59 + 8) = v58;
          v60 = v138;
          swift_storeEnumTagMultiPayload();
          v137((char *)v59, 0, 1, v60);
          *(_OWORD *)v50 = v116;
          *((_QWORD *)v50 + 2) = 0;
          *((_QWORD *)v50 + 3) = 0;
          sub_1BA993F9C(v59, (uint64_t)&v50[*(int *)(v52 + 24)]);
          v61 = &v50[*(int *)(v52 + 28)];
          *(_QWORD *)v61 = 0;
          *((_QWORD *)v61 + 1) = 0;
          v61[16] = -1;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
        }
        v62 = v52;
        v64 = v123;
        v63 = v124;
        swift_bridgeObjectRelease();
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v139)(v50, 0, 1, v52);
        v65 = (char *)v47 + v43;
        v66 = (void (*)(char *, uint64_t, uint64_t))v126;
        v126((char *)v64, &v45[OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url], v63);
        v125(v64, 0, 1, v63);
        v67 = v129;
        sub_1BA7E8428(v64, v129);
        v68 = v62;
        v69 = v130;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v67, 1, v63) == 1)
        {
          sub_1BA7F0A80(v64);
          v137(&v65[*(int *)(v68 + 24)], 1, 1, v138);
          *(_OWORD *)v65 = v115;
          *((_QWORD *)v65 + 2) = 0;
          *((_QWORD *)v65 + 3) = 0;
          v70 = &v65[*(int *)(v68 + 28)];
          *(_QWORD *)v70 = 0;
          *((_QWORD *)v70 + 1) = 0;
          v70[16] = -1;
        }
        else
        {
          v71 = v66;
          v72 = v114;
          v71(v114, v67, v63);
          sub_1BA7F0A80(v64);
          v73 = v67;
          v74 = &v65[*(int *)(v68 + 24)];
          (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v74, v72, v63);
          v75 = v138;
          swift_storeEnumTagMultiPayload();
          v137(v74, 0, 1, v75);
          *(_OWORD *)v65 = v115;
          *((_QWORD *)v65 + 2) = 0;
          *((_QWORD *)v65 + 3) = 0;
          v76 = &v65[*(int *)(v68 + 28)];
          *(_QWORD *)v76 = 0;
          *((_QWORD *)v76 + 1) = 0;
          v76[16] = -1;
          (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v73, v63);
        }
        v38 = v117;
        v34 = v68;
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v139)(v65, 0, 1, v68);
        sub_1BAF89090(0, 0xE000000000000000, 0, 0, v134, v147);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((_QWORD *)&v141 + 1) = &type metadata for FormatInspectionGroup;
        v142 = &off_1E72D2F60;
        v77 = swift_allocObject();
        *(_QWORD *)&v140 = v77;
        swift_release();
        *(_QWORD *)(v77 + 48) = v148;
        v78 = v147[1];
        *(_OWORD *)(v77 + 16) = v147[0];
        *(_OWORD *)(v77 + 32) = v78;
        v79 = v136;
        v146 = v135;
        v81 = *(_QWORD *)(v135 + 16);
        v80 = *(_QWORD *)(v135 + 24);
        if (v81 >= v80 >> 1)
          sub_1BAC7A388(v80 > 1, v81 + 1, 1);
        v41 = v79 + 1;
        v82 = *((_QWORD *)&v141 + 1);
        v83 = (uint64_t)v142;
        v84 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v140, *((uint64_t *)&v141 + 1));
        v29 = &v108;
        v85 = MEMORY[0x1E0C80A78](v84);
        v87 = (char *)&v108 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v88 + 16))(v87, v85);
        sub_1BA6AC628(v81, (uint64_t)v87, &v146, v82, v83);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v140);
        v42 = v146;
        v43 = v121;
        v39 = v122;
        v44 = MEMORY[0x1E0DEA968];
        if (v122 == v41)
        {
          swift_bridgeObjectRelease();
          v29 = v110;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
      v39 = sub_1BB873F30();
      v110 = v29;
      if (!v39)
        goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
LABEL_23:
    swift_bridgeObjectRelease();
    v43 = 2 * v133;
    v42 = MEMORY[0x1E0DEE9D8];
LABEL_24:
    v89 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v139;
    v137 = (void (*)(char *, _QWORD, uint64_t, uint64_t))(inited + 32);
    v90 = (_QWORD *)((char *)v111 + v43);
    v91 = sub_1BA9747FC(v42);
    swift_bridgeObjectRelease();
    v92 = sub_1BB6DF010(v91);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x756F532061746144, 0xEC00000073656372, (uint64_t)v92, 0, 0, v90);
    v138 = v34;
    v89(v90, 0, 1, v34);
    v94 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config);
    v93 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 8);
    v95 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 16);
    v96 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 24);
    v98 = *(_UNKNOWN ***)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 32);
    v97 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 40);
    if (v93)
    {
      swift_bridgeObjectRetain();
      v136 = v94;
    }
    else
    {
      v136 = 0;
    }
    v99 = (_QWORD *)((char *)v111 + 3 * v133);
    sub_1BA67D978(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v100 = swift_initStackObject();
    *(_OWORD *)(v100 + 16) = v108;
    *(_QWORD *)&v140 = v94;
    *((_QWORD *)&v140 + 1) = v93;
    *(_QWORD *)&v141 = v95;
    *((_QWORD *)&v141 + 1) = v96;
    v142 = v98;
    v143 = v97;
    v101 = sub_1BB0FD744((uint64_t *)&v140);
    *(_QWORD *)(v100 + 56) = &type metadata for FormatInspection;
    *(_QWORD *)(v100 + 64) = &off_1E7335C38;
    *(_QWORD *)(v100 + 32) = v101;
    v102 = sub_1BA9747FC(v100);
    swift_setDeallocating();
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
    swift_arrayDestroy();
    v103 = sub_1BB6DF010(v102);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x6769666E6F43, 0xE600000000000000, (uint64_t)v103, v136, v93, v99);
    ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v139)(v99, 0, 1, v138);
    sub_1BAF89090(0x79616C502079654BLL, 0xEB00000000737265, 0, 0, v109, &v140);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v104 = inited;
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(v104 + 64) = &off_1E72D2F60;
    v105 = swift_allocObject();
    *(_QWORD *)(v104 + 32) = v105;
    *(_QWORD *)(v105 + 48) = v142;
    v106 = v141;
    *(_OWORD *)(v105 + 16) = v140;
    *(_OWORD *)(v105 + 32) = v106;
    v107 = sub_1BB6DF010(v104);
    swift_setDeallocating();
    sub_1BA67D978(0, &qword_1EF2ABC80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    swift_release();
    return v107;
  }
  return result;
}

unint64_t sub_1BB686AAC()
{
  unint64_t result;

  result = qword_1EF2CA080;
  if (!qword_1EF2CA080)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93B120, &type metadata for SportsKeyPlayerDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA080);
  }
  return result;
}

void sub_1BB686AF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB686AAC();
    v7 = a3(a1, &type metadata for SportsKeyPlayerDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB686B50()
{
  return 8;
}

_QWORD *sub_1BB686B5C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1BB686B68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CA0A0)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CA0A0);
  }
}

unint64_t sub_1BB686BBC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2AC070;
  if (!qword_1EF2AC070)
  {
    sub_1BB686B68();
    v2 = v1;
    v3 = sub_1BA993C44();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2AC070);
  }
  return result;
}

unint64_t sub_1BB686C20()
{
  unint64_t result;

  result = qword_1EF2CA0A8;
  if (!qword_1EF2CA0A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsKeyPlayerDataVisualizationLocation, &type metadata for SportsKeyPlayerDataVisualizationLocation);
    atomic_store(result, (unint64_t *)&qword_1EF2CA0A8);
  }
  return result;
}

uint64_t sub_1BB686C64()
{
  return type metadata accessor for SportsKeyPlayerDataVisualization();
}

uint64_t type metadata accessor for SportsKeyPlayerDataVisualization()
{
  uint64_t result;

  result = qword_1ED3A9638;
  if (!qword_1ED3A9638)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB686CA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SportsKeyPlayerDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsKeyPlayerDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of SportsKeyPlayerDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t storeEnumTagSinglePayload for SportsKeyPlayerDataVisualizationLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB686DC0 + 4 * byte_1BB93AE05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB686DF4 + 4 * byte_1BB93AE00[v4]))();
}

uint64_t sub_1BB686DF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB686DFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB686E04);
  return result;
}

uint64_t sub_1BB686E10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB686E18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB686E1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB686E24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsKeyPlayerDataVisualizationLocation()
{
  return &type metadata for SportsKeyPlayerDataVisualizationLocation;
}

uint64_t storeEnumTagSinglePayload for SportsKeyPlayerDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BB686E8C + 4 * byte_1BB93AE0F[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BB686EC0 + 4 * byte_1BB93AE0A[v4]))();
}

uint64_t sub_1BB686EC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB686EC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB686ED0);
  return result;
}

uint64_t sub_1BB686EDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB686EE4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BB686EE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB686EF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsKeyPlayerDataVisualization.CodingKeys()
{
  return &type metadata for SportsKeyPlayerDataVisualization.CodingKeys;
}

unint64_t sub_1BB686F10()
{
  unint64_t result;

  result = qword_1EF2CA0B0;
  if (!qword_1EF2CA0B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93B0F8, &type metadata for SportsKeyPlayerDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA0B0);
  }
  return result;
}

unint64_t sub_1BB686F58()
{
  unint64_t result;

  result = qword_1EF2CA0B8;
  if (!qword_1EF2CA0B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93B030, &type metadata for SportsKeyPlayerDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA0B8);
  }
  return result;
}

unint64_t sub_1BB686FA0()
{
  unint64_t result;

  result = qword_1EF2CA0C0;
  if (!qword_1EF2CA0C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93B058, &type metadata for SportsKeyPlayerDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA0C0);
  }
  return result;
}

uint64_t sub_1BB686FE4()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1BB68702C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t SportsEmbedConfigResource.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB687068()
{
  return 1936154996;
}

uint64_t sub_1BB687078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1936154996 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB6870FC()
{
  sub_1BB687270();
  return sub_1BB874710();
}

uint64_t sub_1BB687124()
{
  sub_1BB687270();
  return sub_1BB87471C();
}

uint64_t SportsEmbedConfigResource.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1BB6874A4(0, &qword_1EF2CA0C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB687270();
  sub_1BB8746C8();
  v10[1] = v8;
  sub_1BB6872B4();
  sub_1BB687500(&qword_1EF2CA0D0, (uint64_t (*)(void))sub_1BB687308, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB687270()
{
  unint64_t result;

  result = qword_1ED3A79A8;
  if (!qword_1ED3A79A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93B2B0, &type metadata for SportsEmbedConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A79A8);
  }
  return result;
}

void sub_1BB6872B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB000)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB000);
  }
}

unint64_t sub_1BB687308()
{
  unint64_t result;

  result = qword_1EF2CA0D8;
  if (!qword_1EF2CA0D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEmbedConfigResourceTag, &type metadata for SportsEmbedConfigResourceTag);
    atomic_store(result, (unint64_t *)&qword_1EF2CA0D8);
  }
  return result;
}

uint64_t SportsEmbedConfigResource.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1BB6874A4(0, &qword_1ED3AB448, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB687270();
  sub_1BB87468C();
  if (!v2)
  {
    sub_1BB6872B4();
    sub_1BB687500((unint64_t *)&unk_1ED3AB008, (uint64_t (*)(void))sub_1BB687564, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB6874A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB687270();
    v7 = a3(a1, &type metadata for SportsEmbedConfigResource.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB687500(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BB6872B4();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB687564()
{
  unint64_t result;

  result = qword_1ED3A8490;
  if (!qword_1ED3A8490)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEmbedConfigResourceTag, &type metadata for SportsEmbedConfigResourceTag);
    atomic_store(result, (unint64_t *)&qword_1ED3A8490);
  }
  return result;
}

uint64_t sub_1BB6875A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SportsEmbedConfigResource.init(from:)(a1, a2);
}

uint64_t sub_1BB6875BC(_QWORD *a1)
{
  return SportsEmbedConfigResource.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResource()
{
  return &type metadata for SportsEmbedConfigResource;
}

uint64_t storeEnumTagSinglePayload for SportsEmbedConfigResource.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB687620 + 4 * byte_1BB93B170[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB687640 + 4 * byte_1BB93B175[v4]))();
}

_BYTE *sub_1BB687620(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB687640(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB687648(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB687650(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB687658(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB687660(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResource.CodingKeys()
{
  return &type metadata for SportsEmbedConfigResource.CodingKeys;
}

unint64_t sub_1BB687680()
{
  unint64_t result;

  result = qword_1EF2CA0E0;
  if (!qword_1EF2CA0E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93B288, &type metadata for SportsEmbedConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA0E0);
  }
  return result;
}

unint64_t sub_1BB6876C8()
{
  unint64_t result;

  result = qword_1ED3A79B8;
  if (!qword_1ED3A79B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93B1F8, &type metadata for SportsEmbedConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A79B8);
  }
  return result;
}

unint64_t sub_1BB687710()
{
  unint64_t result;

  result = qword_1ED3A79B0;
  if (!qword_1ED3A79B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93B220, &type metadata for SportsEmbedConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A79B0);
  }
  return result;
}

uint64_t static FormatTextAdjustmentOtherBaseline.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1BB874398() & 1) != 0)
    return _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v2, v3);
  else
    return 0;
}

uint64_t FormatTextAdjustmentOtherBaseline.targetIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextAdjustmentOtherBaseline.style.getter()
{
  return swift_retain();
}

uint64_t sub_1BB6877E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1BB874398() & 1) != 0)
    return _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v2, v3);
  else
    return 0;
}

unint64_t sub_1BB687848(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB68786C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB68786C()
{
  unint64_t result;

  result = qword_1EF2CA0E8;
  if (!qword_1EF2CA0E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAdjustmentOtherBaseline, &type metadata for FormatTextAdjustmentOtherBaseline);
    atomic_store(result, (unint64_t *)&qword_1EF2CA0E8);
  }
  return result;
}

unint64_t sub_1BB6878B0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA820A5C();
  a1[2] = sub_1BA616BEC();
  result = sub_1BB6878E4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6878E4()
{
  unint64_t result;

  result = qword_1EF2CA0F0;
  if (!qword_1EF2CA0F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAdjustmentOtherBaseline, &type metadata for FormatTextAdjustmentOtherBaseline);
    atomic_store(result, (unint64_t *)&qword_1EF2CA0F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextAdjustmentOtherBaseline()
{
  return &type metadata for FormatTextAdjustmentOtherBaseline;
}

ValueMetadata *type metadata accessor for FormatCustomNodeData()
{
  return &type metadata for FormatCustomNodeData;
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatItemNodeActionData(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1BA728598(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for FormatItemNodeActionData(unint64_t *a1)
{
  return sub_1BA7280A0(*a1);
}

unint64_t *assignWithCopy for FormatItemNodeActionData(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1BA728598(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1BA7280A0(v4);
  return a1;
}

unint64_t *assignWithTake for FormatItemNodeActionData(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1BA7280A0(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatItemNodeActionData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 30);
  v3 = (*(_QWORD *)a1 & 4 | ((*(_QWORD *)a1 >> 59) >> 3) & 0xFFFFFFE7 | (8
                                                                                     * (((*(_QWORD *)a1 >> 59) >> 1) & 3))) ^ 0x1F;
  if (v3 >= 0x1D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatItemNodeActionData(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x1D)
  {
    *(_QWORD *)result = a2 - 30;
    if (a3 >= 0x1E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x1E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 7 | (8 * (-a2 & 0x1F));
      *(_QWORD *)result = ((v3 << 59) | (4 * v3)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BB687A98(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return ((*a1 >> 1) & 0xFFFFFFFC | *a1 & 3) + 2;
}

_QWORD *sub_1BB687AB8(_QWORD *result, uint64_t a2)
{
  if (a2 < 2)
    *result = *result & 0xFFFFFFFFFFFFFFBLL | (a2 << 62);
  else
    *result = (2 * (a2 - 2)) & 0x1FFFFFFF8 | ((int)a2 - 2) & 3 | 0x8000000000000000;
  return result;
}

ValueMetadata *type metadata accessor for FormatItemNodeActionData()
{
  return &type metadata for FormatItemNodeActionData;
}

uint64_t FeedBannerAd.with(bannerAd:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  char *v13;
  uint64_t v15;

  v5 = sub_1BB8721C0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  v10 = v2[1];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a1, v5, v7);
  v12 = (int *)type metadata accessor for FeedBannerAd();
  *(_QWORD *)&a2[v12[6]] = 0x2000;
  v13 = &a2[v12[7]];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  *(_OWORD *)&a2[v12[8]] = xmmword_1BB886E80;
  *(_QWORD *)a2 = v11;
  *((_QWORD *)a2 + 1) = v10;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&a2[v12[5]], v9, v5);
  return swift_bridgeObjectRetain();
}

uint64_t FeedBannerAd.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedBannerAd.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedBannerAd.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedBannerAd.bannerAd.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedBannerAd() + 20);
  v4 = sub_1BB8721C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedBannerAd.traits.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedBannerAd();
  *a1 = *(_QWORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t FeedBannerAd.layoutDirection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for FeedBannerAd();
  v4 = (uint64_t *)(v1 + *(int *)(result + 28));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t FeedBannerAd.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedBannerAd() + 32));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1BA75A650(v4, v5);
}

uint64_t FeedBannerAd.init(identifier:bannerAd:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  int *v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v8 = (int *)type metadata accessor for FeedBannerAd();
  *(_QWORD *)((char *)a4 + v8[6]) = 0x2000;
  v9 = (char *)a4 + v8[7];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  *(_OWORD *)((char *)a4 + v8[8]) = xmmword_1BB886E80;
  *a4 = a1;
  a4[1] = a2;
  v10 = (char *)a4 + v8[5];
  v11 = sub_1BB8721C0();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a3, v11);
}

uint64_t FeedBannerAd.debugTitle.getter()
{
  return 0;
}

uint64_t FeedBannerAd.hashValue.getter()
{
  sub_1BB8745CC();
  type metadata accessor for FeedBannerAd();
  sub_1BA4A2870(&qword_1EF2CA0F8, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB687E0C()
{
  sub_1BA4A2870(&qword_1EF2CA100, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
  return sub_1BB86EC50();
}

uint64_t sub_1BB687E60()
{
  return sub_1BA4A2870(&qword_1EF2CA0F8, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
}

uint64_t sub_1BB687E8C()
{
  return sub_1BA4A2870(&qword_1ED3B2D08, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
}

uint64_t sub_1BB687EB8()
{
  return sub_1BA4A2870(&qword_1ED3A5288, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
}

_QWORD *assignWithCopy for FeedBannerAd(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB8721C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[8];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v13;
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = *(_QWORD *)((char *)a1 + v14 + 8);
  v18 = v16[1];
  if (v17 >= 0x11)
  {
    if (v18 >= 0x11)
    {
      *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)v15);
    goto LABEL_6;
  }
  if (v18 < 0x11)
  {
LABEL_6:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    return a1;
  }
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *initializeWithTake for FeedBannerAd(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB8721C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for FeedBannerAd(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB8721C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  if (*(_QWORD *)((char *)a1 + v14 + 8) >= 0x11uLL)
  {
    v17 = v16[1];
    if (v17 >= 0x11)
    {
      *v15 = *v16;
      v15[1] = v17;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)v15);
  }
  *(_OWORD *)v15 = *(_OWORD *)v16;
  return a1;
}

uint64_t sub_1BB68817C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB8721C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB6881F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB8721C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB688270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _OWORD v15[6];
  __int128 v16;
  _OWORD v17[2];
  _OWORD v18[5];
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];

  v6 = *v2;
  if (*v2 < 0)
  {
    v8 = *(_QWORD *)(v6 + 16);
    v9 = *(_QWORD *)(v6 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA9A3B18(v18, a1, v8, v9);
    *(_QWORD *)&v15[0] = *(_QWORD *)&v18[0];
    sub_1BB688270(a1);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  if ((*(_BYTE *)(v6 + 16) & 1) != 0)
  {
    result = sub_1BA78731C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v18);
    if (v3)
      return result;
  }
  else
  {
    result = sub_1BAF64A7C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), (uint64_t)v18);
    if (v3)
      return result;
  }
  v16 = v20;
  v17[0] = v21[0];
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v21 + 9);
  v15[0] = v18[0];
  v15[1] = v18[1];
  v15[2] = v18[2];
  v15[3] = v18[3];
  v15[4] = v18[4];
  v15[5] = v19;
  v10 = *(void **)&v18[0];
  if ((_QWORD)v19 == 1 || (v11 = (void *)*((_QWORD *)&v16 + 1)) == 0)
  {
    sub_1BA8D1F08((uint64_t)v15);
    FCIssue.issueCoverModel.getter(a2);
    sub_1BA8D1FE4((uint64_t)v15);
  }
  else
  {
    v12 = *(_QWORD *)&v17[0];
    *(_QWORD *)a2 = *(_QWORD *)&v18[0];
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_BYTE *)(a2 + 56) = 0;
    v13 = v11;
    v14 = v10;
  }
  return sub_1BA8D1FE4((uint64_t)v15);
}

uint64_t static FormatIssueCoverContent.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v10[2];
  _QWORD v11[2];

  v2 = *a1;
  v3 = *a2;
  if (*a1 < 0)
  {
    if (v3 < 0)
    {
      v5 = *(_QWORD *)(v2 + 24);
      v6 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v3 + 24);
      v11[0] = *(_QWORD *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      v11[1] = v5;
      v10[0] = v6;
      v10[1] = v7;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatIssueCoverContent.== infix(_:_:)(v11, v10) & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v8 = sub_1BA8884E0(v5, v7);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return (v8 & 1) != 0;
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else if ((v3 & 0x8000000000000000) == 0)
  {
    v4 = *(_BYTE *)(v3 + 16);
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
      return (v4 & 1) != 0;
    if ((v4 & 1) == 0)
      return 1;
  }
  return 0;
}

unint64_t sub_1BB688578(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAE9B8C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB68859C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5216FC();
  a1[2] = sub_1BA829298();
  result = sub_1BB6885D0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6885D0()
{
  unint64_t result;

  result = qword_1EF2CA108;
  if (!qword_1EF2CA108)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverContent, &type metadata for FormatIssueCoverContent);
    atomic_store(result, (unint64_t *)&qword_1EF2CA108);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueCoverContent()
{
  return &type metadata for FormatIssueCoverContent;
}

void EmbedLocation.location.getter()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  __asm { BR              X10 }
}

id sub_1BB688718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v1 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v0, 1, 1, v1);
  v3 = (void *)sub_1BB872970();
  v4 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v0, 1, v1) != 1)
  {
    v4 = (void *)sub_1BB86C58C();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  }
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D977D8]), sel_initWithContext_URL_, v3, v4);

  return v5;
}

BOOL static EmbedLocation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EmbedLocation.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t EmbedLocation.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB688AE0()
{
  unint64_t result;

  result = qword_1EF2CA110;
  if (!qword_1EF2CA110)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EmbedLocation, &type metadata for EmbedLocation);
    atomic_store(result, (unint64_t *)&qword_1EF2CA110);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EmbedLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB688B70 + 4 * byte_1BB93B6CB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB688BA4 + 4 * byte_1BB93B6C6[v4]))();
}

uint64_t sub_1BB688BA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB688BAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB688BB4);
  return result;
}

uint64_t sub_1BB688BC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB688BC8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB688BCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB688BD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmbedLocation()
{
  return &type metadata for EmbedLocation;
}

void FormatWebEmbedBinding.Bool.BOOL(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[16];

  v31[14] = a1;
  v1 = type metadata accessor for WebEmbedDataVisualization();
  v31[11] = *(_QWORD *)(v1 - 8);
  v31[12] = v1;
  MEMORY[0x1E0C80A78](v1);
  v31[9] = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v31[8] = (char *)v31 - v4;
  MEMORY[0x1E0C80A78](v5);
  v31[7] = (char *)v31 - v6;
  MEMORY[0x1E0C80A78](v7);
  v31[6] = (char *)v31 - v8;
  MEMORY[0x1E0C80A78](v9);
  v31[5] = (char *)v31 - v10;
  MEMORY[0x1E0C80A78](v11);
  v31[4] = (char *)v31 - v12;
  MEMORY[0x1E0C80A78](v13);
  v31[3] = (char *)v31 - v14;
  MEMORY[0x1E0C80A78](v15);
  v31[2] = (char *)v31 - v16;
  MEMORY[0x1E0C80A78](v17);
  v31[1] = (char *)v31 - v18;
  sub_1BA4A3FB4(0, &qword_1ED3CB5E0, v19);
  MEMORY[0x1E0C80A78](v20);
  v31[10] = (char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78](v29);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1E0C80A78](v30);
  __asm { BR              X10 }
}

BOOL sub_1BB688EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL8 v4;

  v2 = type metadata accessor for FeedWebEmbed();
  sub_1BA57B488(*(_QWORD *)(v1 - 96) + *(int *)(v2 + 48), v0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  v3 = type metadata accessor for FeedHeadline(0);
  v4 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v0, 1, v3) != 1;
  sub_1BA502AD0(v0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  return v4;
}

BOOL static FormatWebEmbedBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void *static FormatWebEmbedBinding.Bool.CodingType.allCases.getter()
{
  return &unk_1E724F9B8;
}

void sub_1BB6896EC(char *a1)
{
  sub_1BB7F8774(*a1);
}

uint64_t sub_1BB6896F8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D2918((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB68973C(uint64_t a1)
{
  char *v1;

  sub_1BA9D2918(a1, *v1);
}

uint64_t sub_1BB689744()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D2918((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB689784(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724F9B8;
}

uint64_t FormatWebEmbedBinding.Bool.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatWebEmbedBinding.Bool.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB689804()
{
  unint64_t result;

  result = qword_1EF2CA118;
  if (!qword_1EF2CA118)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Bool.CodingType, &type metadata for FormatWebEmbedBinding.Bool.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2CA118);
  }
  return result;
}

unint64_t sub_1BB68984C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2CA120;
  if (!qword_1EF2CA120)
  {
    sub_1BB689894();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2CA120);
  }
  return result;
}

void sub_1BB689894()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CA128)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CA128);
  }
}

unint64_t sub_1BB6898EC()
{
  unint64_t result;

  result = qword_1EF2CA130;
  if (!qword_1EF2CA130)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Bool, &type metadata for FormatWebEmbedBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2CA130);
  }
  return result;
}

unint64_t sub_1BB689930(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB689954();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB689954()
{
  unint64_t result;

  result = qword_1EF2CA138;
  if (!qword_1EF2CA138)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Bool, &type metadata for FormatWebEmbedBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2CA138);
  }
  return result;
}

unint64_t sub_1BB689998(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5D8AD8();
  a1[2] = sub_1BA5AF93C();
  result = sub_1BB6898EC();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.Bool()
{
  return &type metadata for FormatWebEmbedBinding.Bool;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.Bool.CodingType()
{
  return &type metadata for FormatWebEmbedBinding.Bool.CodingType;
}

void sub_1BB6899EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[20];
  uint64_t v47;

  v46[18] = a3;
  v46[19] = a2;
  v47 = a1;
  v3 = type metadata accessor for WebEmbedDataVisualization();
  v46[15] = *(_QWORD *)(v3 - 8);
  v46[16] = v3;
  MEMORY[0x1E0C80A78](v3);
  v46[6] = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v46[5] = (char *)v46 - v6;
  MEMORY[0x1E0C80A78](v7);
  v46[4] = (char *)v46 - v8;
  MEMORY[0x1E0C80A78](v9);
  v46[3] = (char *)v46 - v10;
  MEMORY[0x1E0C80A78](v11);
  v46[7] = (char *)v46 - v12;
  MEMORY[0x1E0C80A78](v13);
  v46[2] = (char *)v46 - v14;
  MEMORY[0x1E0C80A78](v15);
  v46[1] = (char *)v46 - v16;
  MEMORY[0x1E0C80A78](v17);
  v46[0] = (char *)v46 - v18;
  sub_1BA4A3FB4(0, &qword_1ED3CB5E0, v19);
  MEMORY[0x1E0C80A78](v20);
  v46[13] = (char *)v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v46[12] = (char *)v46 - v23;
  MEMORY[0x1E0C80A78](v24);
  v46[11] = (char *)v46 - v25;
  MEMORY[0x1E0C80A78](v26);
  v46[10] = (char *)v46 - v27;
  MEMORY[0x1E0C80A78](v28);
  v46[14] = (char *)v46 - v29;
  MEMORY[0x1E0C80A78](v30);
  v46[9] = (char *)v46 - v31;
  MEMORY[0x1E0C80A78](v32);
  v46[8] = (char *)v46 - v33;
  MEMORY[0x1E0C80A78](v34);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1E0C80A78](v35);
  v36 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v36);
  MEMORY[0x1E0C80A78](v37);
  MEMORY[0x1E0C80A78](v38);
  MEMORY[0x1E0C80A78](v39);
  MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v42);
  MEMORY[0x1E0C80A78](v43);
  MEMORY[0x1E0C80A78](v44);
  MEMORY[0x1E0C80A78](v45);
  __asm { BR              X10 }
}

uint64_t sub_1BB689DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  BOOL *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BA4C2DD8(*(_QWORD *)(v3 - 104), v0, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA57B488(v0 + *(int *)(v1 + 48), v2, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  v4 = type metadata accessor for FeedHeadline(0);
  v5 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4) != 1;
  sub_1BA502AD0(v2, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  v6 = type metadata accessor for FormatInspectionItem(0);
  v7 = *(_QWORD *)(v3 - 112);
  v8 = (BOOL *)(v7 + *(int *)(v6 + 24));
  *v8 = v5;
  v9 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(BOOL *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  *(_OWORD *)v7 = xmmword_1BB93BA30;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  v10 = v7 + *(int *)(v6 + 28);
  *(_QWORD *)v10 = 0;
  *(_QWORD *)(v10 + 8) = 0;
  *(_BYTE *)(v10 + 16) = -1;
  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v11 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 0, 1, v11);
}

uint64_t dispatch thunk of ThumbnailImageRequestProviding.thumnailImageProcessorRequest(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for FormatDerivedDataBindingScope(uint64_t a1)
{
  return sub_1BAA5AE40(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32));
}

uint64_t initializeWithCopy for FormatDerivedDataBindingScope(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(unsigned __int16 *)(a2 + 44);
  v9 = *(unsigned int *)(a2 + 40);
  sub_1BB425B48(*(_QWORD *)a2, v4, v5, v6, v7, v9 | (v8 << 32));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_WORD *)(a1 + 44) = v8;
  *(_DWORD *)(a1 + 40) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataBindingScope(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(unsigned __int16 *)(a2 + 44);
  v9 = *(unsigned int *)(a2 + 40);
  sub_1BB425B48(*(_QWORD *)a2, v4, v5, v6, v7, v9 | (v8 << 32));
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_DWORD *)(a1 + 40) = v9;
  *(_WORD *)(a1 + 44) = v8;
  sub_1BAA5AE40(v10, v11, v12, v13, v14, v15);
  return a1;
}

__n128 __swift_memcpy46_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FormatDerivedDataBindingScope(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_WORD *)(a2 + 44);
  v5 = *(_DWORD *)(a2 + 40);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 44) = v4;
  sub_1BAA5AE40(v6, v8, v7, v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDerivedDataBindingScope(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7C && *(_BYTE *)(a1 + 46))
    return (*(_DWORD *)a1 + 124);
  v3 = ((*(unsigned __int16 *)(a1 + 44) >> 13) & 0xFFFFFF87 | (8 * ((*(unsigned __int16 *)(a1 + 44) >> 9) & 0xF))) ^ 0x7F;
  if (v3 >= 0x7B)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataBindingScope(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 124;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 46) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 46) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 32) = 0;
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_DWORD *)(result + 40) = 0;
      *(_WORD *)(result + 44) = (((-a2 >> 3) & 0xF) - 16 * (_WORD)a2) << 9;
    }
  }
  return result;
}

uint64_t sub_1BB68ADE4(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 44) >> 13;
}

uint64_t sub_1BB68ADF0(uint64_t a1)
{
  uint64_t result;
  unsigned int v2;
  unint64_t v3;

  v2 = *(_DWORD *)(a1 + 40);
  result = a1 + 40;
  v3 = v2 | ((unint64_t)*(unsigned __int16 *)(result + 4) << 32);
  *(_DWORD *)result = v2;
  *(_WORD *)(result + 4) = WORD2(v3) & 0x1FFF;
  return result;
}

uint64_t sub_1BB68AE0C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v3;
  unint64_t v4;

  v3 = *(_DWORD *)(a1 + 40);
  result = a1 + 40;
  v4 = (v3 | ((unint64_t)*(unsigned __int16 *)(result + 4) << 32)) & 0x1FFFFFFFFFFLL | (a2 << 45);
  *(_DWORD *)result = v3;
  *(_WORD *)(result + 4) = WORD2(v4);
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataBindingScope()
{
  return &type metadata for FormatDerivedDataBindingScope;
}

unint64_t sub_1BB68AE44()
{
  unint64_t result;

  result = qword_1EF2CA140;
  if (!qword_1EF2CA140)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93BAF0, &type metadata for FormatDerivedDataBindingScope);
    atomic_store(result, (unint64_t *)&qword_1EF2CA140);
  }
  return result;
}

void sub_1BB68AE88()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB68AED8()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  return v0;
}

void sub_1BB68B144()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB68B198()
{
  unsigned __int8 v0;

  sub_1BB8745D8();
  if (v0 >> 6)
  {
    if (v0 >> 6 == 1)
    {
      sub_1BB8745D8();
      return FormatItemKind.hash(into:)();
    }
    else
    {
      return sub_1BB8745D8();
    }
  }
  else
  {
    sub_1BB8745D8();
    sub_1BB872A90();
    return sub_1BB8745E4();
  }
}

uint64_t sub_1BB68B4B0()
{
  sub_1BB8745CC();
  sub_1BB68B144();
  return sub_1BB874608();
}

uint64_t sub_1BB68B514()
{
  sub_1BB8745CC();
  sub_1BB68B144();
  return sub_1BB874608();
}

void sub_1BB68B574(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB68B5E0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  _QWORD v33[2];
  unsigned __int8 v34;
  _QWORD v35[2];
  unsigned __int8 v36;

  if (((v5 >> 45) & 7) != 0)
  {
    v20 = v11;
    v21 = v13;
    v22 = v3;
    v23 = v6;
    v32 = v6;
    v30 = v13;
    v24 = v11;
    v25 = v5;
    v26 = v4;
    sub_1BB425B48(v20, v21, v23, v4, v8, v9);
    sub_1BB425B48(v22, v7, a3, v12, v10, v25);
    sub_1BAA5AE40(v24, v30, v32, v26, v8, v9);
    sub_1BAA5AE40(v22, v7, a3, v12, v10, v25);
    v18 = 0;
  }
  else
  {
    v35[0] = v11;
    v35[1] = v13;
    v36 = v6;
    v33[0] = v3;
    v33[1] = v7;
    v34 = a3;
    v14 = v10;
    v31 = v3;
    v16 = v4;
    v28 = v8;
    v29 = v5;
    sub_1BB425B48(v3, v7, a3, v12, v14, v5);
    sub_1BB425B48(v11, v13, v6, v16, v8, v9);
    sub_1BB425B48(v11, v13, v6, v16, v8, v9);
    sub_1BB425B48(v31, v7, a3, v12, v14, v29);
    v17 = v7;
    v18 = sub_1BB1FBDE4((uint64_t)v35, (uint64_t)v33);
    sub_1BAA5AE40(v11, v13, v6, v16, v28, v9);
    sub_1BAA5AE40(v31, v17, a3, v12, v14, v29);
    sub_1BAA5AE40(v31, v17, a3, v12, v14, v29);
    sub_1BAA5AE40(v11, v13, v6, v16, v28, v9);
  }
  return v18 & 1;
}

uint64_t static FormatURLParameterOptionModifier.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA5B35E8(*a1, *a2);
}

uint64_t FormatURLParameterOptionModifier.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BB68C000(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB68C024();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB68C024()
{
  unint64_t result;

  result = qword_1EF2CA148;
  if (!qword_1EF2CA148)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatURLParameterOptionModifier, &type metadata for FormatURLParameterOptionModifier);
    atomic_store(result, (unint64_t *)&qword_1EF2CA148);
  }
  return result;
}

unint64_t sub_1BB68C068(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4EC630();
  a1[2] = sub_1BA525BF0();
  result = sub_1BB68C09C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB68C09C()
{
  unint64_t result;

  result = qword_1EF2CA150;
  if (!qword_1EF2CA150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatURLParameterOptionModifier, &type metadata for FormatURLParameterOptionModifier);
    atomic_store(result, (unint64_t *)&qword_1EF2CA150);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatURLParameterOptionModifier()
{
  return &type metadata for FormatURLParameterOptionModifier;
}

uint64_t dispatch thunk of CoverChannelViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

void sub_1BB68C0F8(uint64_t a1, double *a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  void *v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  double v37;
  _BOOL8 v38;
  char *v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  id v53;
  char *v54;
  void *v55;
  uint64_t v56;
  char v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  _QWORD *v62;
  uint64_t *v63;
  id v64;
  id v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  id v72;
  void *v73;
  void *v74;
  char *v75;
  void *v76;
  char *v77;
  _QWORD *v78;
  uint64_t *boxed_opaque_existential_0;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t ObjCClassFromMetadata;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  id v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t *v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  double v105;
  void *v106;
  id v107;
  id v108;
  id v109;
  char *v110;
  id v111;
  char v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t *v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  unint64_t v123;
  unint64_t v124;
  _QWORD *v125;
  id v126;
  _QWORD *v127;
  uint64_t *v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  __int128 *v144;
  uint64_t v145;
  id v146;
  uint64_t v147;
  CGFloat *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  double v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  void *v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  id v171;
  uint64_t v172;
  id v173;
  uint64_t v174;
  id v175;
  void *v176;
  void *v177;
  void *v178;
  char *v179;
  id v180;
  char *v181;
  uint64_t v182;
  id v183;
  id v184;
  unint64_t v185;
  void *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  void *v195;
  void *v196;
  id v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  void *v201;
  id v202;
  id v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  char *v214;
  uint64_t v215;
  double v216;
  double v217;
  double v218;
  double v219;
  double v220;
  uint64_t v221;
  char *v222;
  char *v223;
  id v224;
  id v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  double v230;
  __int128 v231;
  char *v232;
  id v233;
  void *v234;
  id v235;
  _QWORD *v236;
  __int128 v237[2];
  _BYTE v238[40];
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  uint64_t v254;
  _QWORD v255[3];
  uint64_t v256;
  uint64_t v257;

  v4 = v3;
  sub_1BA6DA0C0(0);
  v207 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v208 = v9;
  v209 = (uint64_t)&v205 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v214 = (char *)&v205 - v11;
  v236 = (_QWORD *)sub_1BB86F658();
  v221 = *(v236 - 1);
  MEMORY[0x1E0C80A78](v236);
  v232 = (char *)&v205 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  v219 = a2[1];
  v220 = v13;
  v14 = a2[2];
  v15 = a2[4];
  v217 = a2[3];
  v218 = v14;
  v17 = a2[5];
  v16 = a2[6];
  v18 = a2[7];
  v19 = *((_QWORD *)a2 + 9);
  *(double *)&v226 = a2[8];
  *((_QWORD *)&v226 + 1) = v19;
  v20 = *((_QWORD *)a2 + 11);
  *(double *)&v227 = a2[10];
  *((_QWORD *)&v227 + 1) = v20;
  v21 = *((_QWORD *)a2 + 13);
  *(double *)&v228 = a2[12];
  *((_QWORD *)&v228 + 1) = v21;
  v22 = *((_QWORD *)a2 + 15);
  v23 = a2[16];
  *(double *)&v229 = a2[14];
  *((_QWORD *)&v229 + 1) = v22;
  v25 = a2[17];
  v24 = a2[18];
  v26 = a2[19];
  v27 = *((_QWORD *)a2 + 21);
  *(double *)&v231 = a2[20];
  *((_QWORD *)&v231 + 1) = v27;
  v216 = a2[22];
  v230 = a2[23];
  v223 = (char *)(a1 + 160);
  sub_1BA4C010C(a1 + 160, (uint64_t)v255);
  v28 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_titleLabel];
  objc_msgSend(v28, sel_setNumberOfLines_, 0);
  v29 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_accessoryLabel];
  objc_msgSend(v29, sel_setNumberOfLines_, 0);
  v234 = v28;
  *(double *)&v210 = v15;
  *((double *)&v210 + 1) = v17;
  *(double *)&v211 = v16;
  *((double *)&v211 + 1) = v18;
  v30 = v16;
  v31 = *((double *)&v231 + 1);
  objc_msgSend(v28, sel_setFrame_, v15, v17, v30, v18);
  v225 = *(id *)&a3[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage];
  *(double *)&v212 = v23;
  *((double *)&v212 + 1) = v25;
  *(double *)&v213 = v24;
  *((double *)&v213 + 1) = v26;
  v32 = v24;
  v33 = v26;
  v34 = v230;
  v35 = v216;
  objc_msgSend(v225, sel_setFrame_, v23, v25, v32, v33);
  v224 = v29;
  objc_msgSend(v29, sel_setFrame_, v226, v227);
  v36 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_moreActionsButton];
  objc_msgSend(v36, sel_setFrame_, *(double *)&v231, v31, v35, v34);
  v37 = v35;
  v38 = v34 == 0.0 && v35 == 0.0;
  v233 = v36;
  objc_msgSend(v36, sel_setHidden_, v38);
  v39 = *(char **)&a3[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_followButton];
  objc_msgSend(v39, sel_setFrame_, v228, v229);
  v40 = OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_titleLabel;
  v41 = *(id *)&v39[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_titleLabel];
  objc_msgSend(v39, sel_bounds);
  objc_msgSend(v41, sel_setFrame_);

  v42 = *(void **)&v39[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_onTap];
  v43 = swift_allocObject();
  v215 = v4;
  swift_weakInit();
  sub_1BB5B0B88(a1, (uint64_t)&v239);
  v44 = swift_allocObject();
  v45 = v252;
  *(_OWORD *)(v44 + 216) = v251;
  *(_OWORD *)(v44 + 232) = v45;
  *(_OWORD *)(v44 + 248) = v253;
  v46 = v248;
  *(_OWORD *)(v44 + 152) = v247;
  *(_OWORD *)(v44 + 168) = v46;
  v47 = v250;
  *(_OWORD *)(v44 + 184) = v249;
  *(_OWORD *)(v44 + 200) = v47;
  v48 = v244;
  *(_OWORD *)(v44 + 88) = v243;
  *(_OWORD *)(v44 + 104) = v48;
  v49 = v246;
  *(_OWORD *)(v44 + 120) = v245;
  *(_OWORD *)(v44 + 136) = v49;
  v50 = v240;
  *(_OWORD *)(v44 + 24) = v239;
  *(_OWORD *)(v44 + 40) = v50;
  v51 = v242;
  *(_OWORD *)(v44 + 56) = v241;
  *(_QWORD *)(v44 + 16) = v43;
  v52 = v254;
  *(_OWORD *)(v44 + 72) = v51;
  *(_QWORD *)(v44 + 264) = v52;
  *(_QWORD *)(v44 + 272) = v39;
  v53 = v42;
  v54 = v39;

  swift_release();
  v222 = (char *)v40;
  v55 = *(void **)&v39[v40];
  v56 = v256;
  v57 = *(_BYTE *)(a1 + 72);
  v235 = a3;
  if ((v57 & 1) != 0)
  {
    v59 = v217;
    v58 = v218;
    v60 = v219;
    v61 = v220;
    v206 = a1;
    v78 = __swift_project_boxed_opaque_existential_1(v255, v256);
    *((_QWORD *)&v240 + 1) = v56;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v239);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(boxed_opaque_existential_0, v78, v56);
    v80 = v55;
    v81 = (id)sub_1BB2D2ECC((uint64_t)&v239);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
    objc_msgSend(v80, sel_setAttributedText_, v81);

    v82 = (uint64_t)v232;
    (*(void (**)(char *, _QWORD, _QWORD *))(v221 + 104))(v232, *MEMORY[0x1E0DB6BE8], v236);
    CoverViewFollowSwitch.toggleState.setter(v82);
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v84 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v85 = sub_1BB86C340();
    v87 = v86;

    v88 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v90 = v88[2];
    v89 = v88[3];
    if (v90 >= v89 >> 1)
      v88 = sub_1BA6EA0D0((_QWORD *)(v89 > 1), v90 + 1, 1, v88);
    v76 = v234;
    v77 = v223;
    v232 = 0;
    v88[2] = v90 + 1;
    v236 = v88;
    v91 = &v88[2 * v90];
    v91[4] = v85;
    v91[5] = v87;
    v75 = v54;
    a1 = v206;
  }
  else
  {
    v59 = v217;
    v58 = v218;
    v60 = v219;
    v61 = v220;
    v62 = __swift_project_boxed_opaque_existential_1(v255, v256);
    *((_QWORD *)&v240 + 1) = v56;
    v63 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v239);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v63, v62, v56);
    v64 = v55;
    v65 = (id)sub_1BB2D2ECC((uint64_t)&v239);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
    objc_msgSend(v64, sel_setAttributedText_, v65);

    v66 = v232;
    (*(void (**)(char *, _QWORD, _QWORD *))(v221 + 104))(v232, *MEMORY[0x1E0DB6BF0], v236);
    v67 = (uint64_t)v66;
    v68 = v54;
    CoverViewFollowSwitch.toggleState.setter(v67);
    type metadata accessor for Localized();
    v69 = swift_getObjCClassFromMetadata();
    v70 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v69);
    sub_1BB86C340();

    v71 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v72 = objc_allocWithZone(MEMORY[0x1E0DC33F0]);
    swift_retain();
    v73 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v241 = sub_1BB68DF28;
    *((_QWORD *)&v241 + 1) = v71;
    *(_QWORD *)&v239 = MEMORY[0x1E0C809B0];
    *((_QWORD *)&v239 + 1) = 1107296256;
    *(_QWORD *)&v240 = sub_1BB68DDD4;
    *((_QWORD *)&v240 + 1) = &block_descriptor_97;
    v74 = _Block_copy(&v239);
    v232 = (char *)objc_msgSend(v72, sel_initWithName_actionHandler_, v73, v74);

    _Block_release(v74);
    swift_release();
    v75 = v68;
    swift_release();
    v236 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v76 = v234;
    v77 = v223;
  }
  v92 = *(id *)&v222[(_QWORD)v39];
  v223 = v75;
  objc_msgSend(v75, sel_bounds);
  objc_msgSend(v92, sel_ne_verticallyCenterCapInRect_);

  v93 = v256;
  v94 = __swift_project_boxed_opaque_existential_1(v255, v256);
  *((_QWORD *)&v240 + 1) = v93;
  v95 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v239);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v95, v94, v93);
  v96 = (id)sub_1BB2D2ECC((uint64_t)&v239);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
  objc_msgSend(v76, sel_setAttributedText_, v96);

  v97 = *(_QWORD *)(a1 + 184);
  v98 = *(_QWORD *)(a1 + 192);
  __swift_project_boxed_opaque_existential_1(v77, v97);
  v99 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v98 + 64))(v97, v98);
  v100 = *(_QWORD *)(a1 + 184);
  v101 = *(_QWORD *)(a1 + 192);
  __swift_project_boxed_opaque_existential_1(v77, v100);
  v102 = (*(double (**)(uint64_t, uint64_t))(v101 + 40))(v100, v101);
  v103 = *(_QWORD *)(a1 + 184);
  v104 = *(_QWORD *)(a1 + 192);
  __swift_project_boxed_opaque_existential_1(v77, v103);
  v105 = (*(double (**)(uint64_t, uint64_t))(v104 + 56))(v103, v104);
  v106 = (void *)sub_1BB872970();
  v107 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v106);

  if (!v107)
  {
    __break(1u);
    return;
  }
  v221 = a1 + 8;
  v108 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_, 4, v102 + v105 + v105);
  v109 = objc_msgSend(v107, sel_imageWithConfiguration_, v108);

  v110 = (char *)objc_msgSend(v109, sel_imageWithTintColor_renderingMode_, v99, 1);
  v111 = v233;
  v222 = v110;
  objc_msgSend(v233, sel_setImage_forState_, v110, 0);
  objc_msgSend(v111, sel_setContentMode_, 1);
  v112 = *(_BYTE *)(a1 + 32);
  v113 = v256;
  v114 = v235;
  v115 = v215;
  if (v112)
  {
    v116 = __swift_project_boxed_opaque_existential_1(v255, v256);
    *((_QWORD *)&v240 + 1) = v113;
    v117 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v239);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v117, v116, v113);
    v118 = (id)sub_1BB2D2ECC((uint64_t)&v239);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
    objc_msgSend(v224, sel_setAttributedText_, v118);

    LOBYTE(v239) = v112;
    v119 = sub_1BB435A5C();
    v121 = v120;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v122 = v236;
    else
      v122 = sub_1BA6EA0D0(0, v236[2] + 1, 1, v236);
    v124 = v122[2];
    v123 = v122[3];
    if (v124 >= v123 >> 1)
      v122 = sub_1BA6EA0D0((_QWORD *)(v123 > 1), v124 + 1, 1, v122);
    v122[2] = v124 + 1;
    v236 = v122;
    v125 = &v122[2 * v124];
    v125[4] = v119;
    v125[5] = v121;
    v126 = v224;
  }
  else
  {
    v127 = __swift_project_boxed_opaque_existential_1(v255, v256);
    *((_QWORD *)&v240 + 1) = v113;
    v128 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v239);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v128, v127, v113);
    v129 = (id)sub_1BB2D2ECC((uint64_t)&v239);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
    v126 = v224;
    objc_msgSend(v224, sel_setAttributedText_, v129);

    objc_msgSend(v114, (SEL)0x1F2E980FFLL, 0);
  }
  v130 = v256;
  v131 = v257;
  __swift_project_boxed_opaque_existential_1(v255, v256);
  (*(void (**)(id, uint64_t, uint64_t))(v131 + 112))(v225, v130, v131);
  v132 = v256;
  v133 = v257;
  __swift_project_boxed_opaque_existential_1(v255, v256);
  LOBYTE(v239) = v112;
  (*(void (**)(id, __int128 *, uint64_t, uint64_t))(v133 + 120))(v126, &v239, v132, v133);
  v134 = v256;
  v135 = v257;
  __swift_project_boxed_opaque_existential_1(v255, v256);
  (*(void (**)(char *, uint64_t, uint64_t))(v135 + 128))(v223, v134, v135);
  sub_1BB871710();
  FeedTag.coverImage.getter((uint64_t)&v239);
  if (*((_QWORD *)&v240 + 1))
  {
    sub_1BA4CECCC(&v239, (uint64_t)v238);
    sub_1BA4C010C((uint64_t)v238, (uint64_t)&v239);
    v136 = sub_1BB8704BC();
    swift_allocObject();
    v137 = sub_1BB8704A4();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v115 + 24), *(_QWORD *)(v115 + 48));
    v138 = MEMORY[0x1E0DB91C0];
    *((_QWORD *)&v240 + 1) = v136;
    *(_QWORD *)&v241 = MEMORY[0x1E0DB91C0];
    *(_QWORD *)&v239 = v137;
    swift_retain();
    v139 = (void *)sub_1BB86F904();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
    if (v139)
    {
      v140 = v139;
      v141 = v225;
      sub_1BB871710();
      *(CGFloat *)&v239 = v61;
      *((CGFloat *)&v239 + 1) = v60;
      *(CGFloat *)&v240 = v58;
      *((CGFloat *)&v240 + 1) = v59;
      v241 = v210;
      v242 = v211;
      v243 = v226;
      v244 = v227;
      v245 = v228;
      v246 = v229;
      v247 = v212;
      v248 = v213;
      v249 = v231;
      *(double *)&v250 = v37;
      *((double *)&v250 + 1) = v230;
      v114 = v235;
      sub_1BB68EB7C(v140, (uint64_t)v235, &v239);
      v142 = v256;
      v143 = v257;
      __swift_project_boxed_opaque_existential_1(v255, v256);
      (*(void (**)(id, uint64_t, uint64_t))(v143 + 112))(v141, v142, v143);
      swift_release();

      v144 = (__int128 *)v238;
    }
    else
    {
      *((_QWORD *)&v240 + 1) = v136;
      *(_QWORD *)&v241 = v138;
      *(_QWORD *)&v239 = v137;
      v145 = swift_allocObject();
      v146 = v235;
      swift_unknownObjectWeakInit();
      v147 = swift_allocObject();
      swift_weakInit();
      sub_1BA4C010C((uint64_t)v255, (uint64_t)v237);
      v148 = (CGFloat *)swift_allocObject();
      *((_QWORD *)v148 + 2) = v145;
      *((_QWORD *)v148 + 3) = v147;
      v148[4] = v61;
      v148[5] = v60;
      v148[6] = v58;
      v148[7] = v59;
      v149 = *((_QWORD *)&v210 + 1);
      *((_QWORD *)v148 + 8) = v210;
      *((_QWORD *)v148 + 9) = v149;
      v150 = *((_QWORD *)&v211 + 1);
      *((_QWORD *)v148 + 10) = v211;
      *((_QWORD *)v148 + 11) = v150;
      v151 = *((_QWORD *)&v226 + 1);
      *((_QWORD *)v148 + 12) = v226;
      *((_QWORD *)v148 + 13) = v151;
      v152 = *((_QWORD *)&v227 + 1);
      *((_QWORD *)v148 + 14) = v227;
      *((_QWORD *)v148 + 15) = v152;
      v153 = *((_QWORD *)&v228 + 1);
      *((_QWORD *)v148 + 16) = v228;
      *((_QWORD *)v148 + 17) = v153;
      v154 = *((_QWORD *)&v229 + 1);
      *((_QWORD *)v148 + 18) = v229;
      *((_QWORD *)v148 + 19) = v154;
      v155 = *((_QWORD *)&v212 + 1);
      *((_QWORD *)v148 + 20) = v212;
      *((_QWORD *)v148 + 21) = v155;
      v156 = *((_QWORD *)&v213 + 1);
      *((_QWORD *)v148 + 22) = v213;
      *((_QWORD *)v148 + 23) = v156;
      v157 = *((_QWORD *)&v231 + 1);
      *((_QWORD *)v148 + 24) = v231;
      *((_QWORD *)v148 + 25) = v157;
      v158 = v230;
      v148[26] = v37;
      v148[27] = v158;
      sub_1BA4CECCC(v237, (uint64_t)(v148 + 28));
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1BB8716EC();
      swift_release();
      v114 = v146;
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v238);
      swift_release();
      swift_release();
      v144 = &v239;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
  }
  else
  {
    sub_1BA728544((uint64_t)&v239);
    sub_1BB871710();
  }
  v159 = (void *)sub_1BB872970();
  objc_msgSend(v114, sel_setAccessibilityIdentifier_, v159);

  MEMORY[0x1E0C80A78](v160);
  sub_1BB68DF5C(0);
  sub_1BA4A2870((unint64_t *)&unk_1EF2CA160, (uint64_t (*)(uint64_t))sub_1BB68DF5C, (uint64_t)&protocol conformance descriptor for CellAutomation<A>);
  sub_1BB873750();
  objc_msgSend(v114, sel_setIsAccessibilityElement_, 1);
  v161 = v256;
  v162 = __swift_project_boxed_opaque_existential_1(v255, v256);
  *((_QWORD *)&v240 + 1) = v161;
  v163 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v239);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v163, v162, v161);
  sub_1BB2D31CC((uint64_t)&v239);
  v165 = v164;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
  v166 = v114;
  if (v165)
  {
    v167 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v167 = 0;
  }
  v168 = v115;
  objc_msgSend(v166, sel_setAccessibilityLabel_, v167);

  if (v236[2])
  {
    *(_QWORD *)&v239 = v236;
    sub_1BA6D249C();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B95D0, (uint64_t (*)(uint64_t))sub_1BA6D249C, MEMORY[0x1E0DEAF20]);
    swift_bridgeObjectRetain();
    sub_1BB872904();
    swift_bridgeObjectRelease();
    v169 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v169 = 0;
  }
  v170 = MEMORY[0x1E0DEE9D8];
  objc_msgSend(v166, sel_setAccessibilityValue_, v169);

  if ((objc_msgSend(v233, sel_isHidden) & 1) != 0)
  {
    v171 = 0;
  }
  else
  {
    type metadata accessor for Localized();
    v172 = swift_getObjCClassFromMetadata();
    v173 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v172);
    sub_1BB86C340();

    v174 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v175 = objc_allocWithZone(MEMORY[0x1E0DC33F0]);
    swift_retain();
    v176 = v166;
    v177 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v241 = sub_1BB68DFB4;
    *((_QWORD *)&v241 + 1) = v174;
    *(_QWORD *)&v239 = MEMORY[0x1E0C809B0];
    *((_QWORD *)&v239 + 1) = 1107296256;
    *(_QWORD *)&v240 = sub_1BB68DDD4;
    *((_QWORD *)&v240 + 1) = &block_descriptor_10_6;
    v178 = _Block_copy(&v239);
    v171 = objc_msgSend(v175, sel_initWithName_actionHandler_, v177, v178);

    v166 = v176;
    _Block_release(v178);
    swift_release();
    swift_release();
  }
  v179 = v232;
  *(_QWORD *)&v239 = v170;
  if (!v232)
  {
    v183 = v171;
    v182 = (uint64_t)v214;
    if (!v171)
      goto LABEL_41;
    goto LABEL_38;
  }
  v180 = v171;
  v181 = v179;
  MEMORY[0x1BCCE36AC]();
  v182 = (uint64_t)v214;
  if (*(_QWORD *)((v239 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v239 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  sub_1BB872DCC();
  if (v171)
  {
LABEL_38:
    v184 = v171;
    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)((v239 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v239 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
  }
LABEL_41:
  v185 = v239;
  swift_bridgeObjectRelease();

  if (v185 >> 62)
  {
    swift_bridgeObjectRetain();
    v187 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v187)
      goto LABEL_43;
LABEL_45:
    swift_bridgeObjectRelease();
    objc_msgSend(v166, sel_setAccessibilityCustomActions_, 0);
    goto LABEL_46;
  }
  if (!*(_QWORD *)((v185 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_45;
LABEL_43:
  sub_1BA49A224(0, &qword_1ED39DAC0);
  v186 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v166, sel_setAccessibilityCustomActions_, v186);

LABEL_46:
  v188 = *(_QWORD *)(v168 + 16);
  v189 = *(_QWORD *)a1;
  v190 = type metadata accessor for FeedItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 56))(v182, 1, 1, v190);
  if (*(_BYTE *)(v188 + 72) == 1)
  {
    sub_1BB86DD80();
    v191 = (void *)v239;
    v192 = v209;
    sub_1BAB42DE4(v182, v209);
    v193 = (*(unsigned __int8 *)(v207 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v207 + 80);
    v194 = swift_allocObject();
    sub_1BB154798(v192, v194 + v193);
    sub_1BB7DA938(v191, v189, (void (*)(void))sub_1BB68EAFC, v194, v61, v60, v58, v59);
    swift_release();

  }
  else
  {
    sub_1BB86DD68();
    v195 = (void *)v239;
    if ((_QWORD)v239)
    {
      objc_msgSend((id)v239, sel_setHidden_, 1);

    }
  }
  v196 = v234;
  sub_1BB68DFE0(v182);
  v197 = *(id *)(a1 + 40);
  v198 = *(unsigned __int8 *)(a1 + 48);
  sub_1BA5B089C(0, &qword_1ED3B9D18, (unint64_t *)&qword_1ED3B29F8, (uint64_t)&protocol descriptor for FeedItemViewLayoutDirectionAdjustable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v199 = swift_allocObject();
  *(_OWORD *)(v199 + 16) = xmmword_1BB87CE70;
  v200 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99A8);
  *(_QWORD *)(v199 + 32) = v196;
  *(_QWORD *)(v199 + 56) = v200;
  *(_QWORD *)(v199 + 64) = &off_1E7336048;
  if (v198 == 1)
  {
    v201 = (void *)objc_opt_self();
    v202 = v196;
    v197 = objc_msgSend(v201, sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, objc_msgSend(v235, sel_semanticContentAttribute));
  }
  else
  {
    v203 = v196;
  }
  v204 = v222;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v199 + 32), v200);
  sub_1BA657C64((uint64_t)v197);

  swift_setDeallocating();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B29F8);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v255);
}

