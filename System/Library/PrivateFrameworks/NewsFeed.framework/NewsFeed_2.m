uint64_t type metadata accessor for FeedCursorGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedCursorGroup);
}

void sub_1BA5F9880()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B03A8)
  {
    sub_1BB86C8B0();
    sub_1BA4A2870((unint64_t *)&qword_1ED3AFBB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v0 = sub_1BB87294C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B03A8);
  }
}

uint64_t sub_1BA5F98F8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_10;
  v5 = result;
  swift_bridgeObjectRetain();
  v6 = sub_1BB5D3240(a2, v5);
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_10:
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = 2;
    return result;
  }
  v7 = sub_1BA85C3B4(v6);
  swift_release();
  v20 = v7;
  swift_retain();
  sub_1BA67FABC(&v20, sub_1BACAB76C, sub_1BAA55A74);
  swift_release();
  v8 = v20;
  v9 = *(_QWORD *)(v20 + 16);
  if (v9)
  {
    v19 = a3;
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v9, 0);
    v10 = 0;
    v11 = v20;
    do
    {
      v22 = *(_DWORD *)(v8 + 4 * v10 + 32);
      v12 = sub_1BB87420C();
      v14 = v13;
      v20 = v11;
      v16 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BA7447E8(v15 > 1, v16 + 1, 1);
        v11 = v20;
      }
      ++v10;
      *(_QWORD *)(v11 + 16) = v16 + 1;
      v17 = v11 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v12;
      *(_QWORD *)(v17 + 40) = v14;
    }
    while (v9 != v10);
    swift_release();
    a3 = v19;
  }
  else
  {
    swift_release();
    v11 = MEMORY[0x1E0DEE9D8];
  }
  v20 = v11;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  sub_1BB872904();
  swift_bridgeObjectRelease();
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v20 = 0xD000000000000026;
  v21 = 0x80000001BB969080;
  sub_1BB872AFC((_QWORD *)0xD000000000000026);
  result = swift_bridgeObjectRelease();
  v18 = v21;
  *(_QWORD *)a3 = v20;
  *(_QWORD *)(a3 + 8) = v18;
  *(_BYTE *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_1BA5F9B5C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;

  if (*(_QWORD *)(a2 + 16)
    && (v5 = result,
        swift_bridgeObjectRetain(),
        v6 = *(_QWORD *)(sub_1BB5D3240(a2, v5) + 16),
        result = swift_release(),
        !v6))
  {
    v7 = swift_bridgeObjectRetain();
    v8 = sub_1BA85C3B4(v7);
    swift_bridgeObjectRelease();
    v22 = v8;
    swift_retain();
    sub_1BA67FABC(&v22, sub_1BACAB76C, sub_1BAA55A74);
    swift_release();
    v9 = v22;
    v10 = *(_QWORD *)(v22 + 16);
    if (v10)
    {
      v21 = a3;
      v22 = MEMORY[0x1E0DEE9D8];
      sub_1BA7447E8(0, v10, 0);
      v11 = 0;
      v12 = v22;
      do
      {
        v24 = *(_DWORD *)(v9 + 4 * v11 + 32);
        v13 = sub_1BB87420C();
        v15 = v14;
        v22 = v12;
        v17 = *(_QWORD *)(v12 + 16);
        v16 = *(_QWORD *)(v12 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1BA7447E8(v16 > 1, v17 + 1, 1);
          v12 = v22;
        }
        ++v11;
        *(_QWORD *)(v12 + 16) = v17 + 1;
        v18 = v12 + 16 * v17;
        *(_QWORD *)(v18 + 32) = v13;
        *(_QWORD *)(v18 + 40) = v15;
      }
      while (v10 != v11);
      swift_release();
      a3 = v21;
    }
    else
    {
      swift_release();
      v12 = MEMORY[0x1E0DEE9D8];
    }
    v22 = v12;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6A0BA4();
    sub_1BB872904();
    swift_bridgeObjectRelease();
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_1BB873CB4();
    sub_1BB872AFC("EngagementBanner");
    sub_1BB872AFC(v19);
    result = swift_bridgeObjectRelease();
    v20 = v23;
    *(_QWORD *)a3 = v22;
    *(_QWORD *)(a3 + 8) = v20;
    *(_BYTE *)(a3 + 16) = 0;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = 2;
  }
  return result;
}

uint64_t sub_1BA5F9DC0()
{
  unsigned __int8 *v0;

  return sub_1BAE099A0(*v0);
}

uint64_t FormatButtonNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(void);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(void);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  uint64_t v94;
  void (*v95)(void);
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(void);
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  void (*v161)(void);
  char *v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165[6];
  __int128 v166;
  char v167;
  uint64_t v168;
  __int128 v169;
  char v170;
  __int128 v171;
  char v172;
  __int128 v173;
  char v174;
  __int128 v175;
  char v176;
  unint64_t v177;
  __int128 v178;
  char v179;
  char *v180;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v146 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v147 = (char *)&v143 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v148 = (char *)&v143 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v149 = (uint64_t)&v143 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v150 = (uint64_t)&v143 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v151 = (uint64_t)&v143 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v152 = (uint64_t)&v143 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v153 = (char *)&v143 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v154 = (char *)&v143 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v155 = (char *)&v143 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v160 = (char *)&v143 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v156 = (uint64_t)&v143 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v157 = (char *)&v143 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v158 = (char *)&v143 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v159 = (char *)&v143 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v161 = (void (*)(void))((char *)&v143 - v37);
  v38 = MEMORY[0x1E0C80A78](v36);
  v162 = (char *)&v143 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v164 = (uint64_t)&v143 - v41;
  MEMORY[0x1E0C80A78](v40);
  v43 = (char *)&v143 - v42;
  sub_1BAE718C8(0);
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)&v143 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a1[3];
  v48 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v47);
  v49 = sub_1BAE719B8();
  v50 = sub_1BA4A2870(&qword_1ED3D0BF0, (uint64_t (*)(uint64_t))sub_1BAE719B8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v51, v47, v4, v49, (uint64_t)&type metadata for FormatVersions.JazzkonC, v48, (uint64_t)v46, v50, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v52 = v2[2];
  v53 = v2[3];
  v163 = v2;
  v54 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v54 != -1)
    swift_once();
  v55 = sub_1BB86EB84();
  v56 = __swift_project_value_buffer(v55, (uint64_t)qword_1ED476C20);
  v57 = *(void (**)(void))(*(_QWORD *)(v55 - 8) + 16);
  ((void (*)(char *, uint64_t, uint64_t))v57)(v43, v56, v55);
  v58 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v59 = v180;
  sub_1BAD265E8(v52, v53, 0, 0, 0, (uint64_t)v43, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE542FC, (uint64_t (*)(uint64_t))sub_1BAE71940, &qword_1ED3AE6E8);
  v180 = v46;
  if (v59)
  {
    sub_1BA4A2E80((uint64_t)v43, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
LABEL_5:
    v60 = (uint64_t)v180;
    return sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))sub_1BAE718C8);
  }
  sub_1BA4A2E80((uint64_t)v43, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v62 = v163;
  swift_beginAccess();
  v63 = v62[4];
  v64 = v164;
  ((void (*)(uint64_t, uint64_t, uint64_t))v57)(v164, v56, v55);
  swift_storeEnumTagMultiPayload();
  if (((v63 >> 59) & 0x1E | (v63 >> 2) & 1) == 0x16 && v63 == 0xB000000000000008)
  {
    v144 = v56;
    v145 = v58;
    v65 = v55;
  }
  else
  {
    sub_1BA71CA6C(v63);
    v66 = sub_1BAE542FC(v64, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v144 = v56;
    v145 = v58;
    v65 = v55;
    if ((v66 & 1) != 0)
    {
      v178 = xmmword_1BB8A1A10;
      v179 = 0;
      v177 = v63;
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BA6371A0();
      sub_1BB874464();
    }
    v62 = v163;
  }
  sub_1BA4A2E80(v164, type metadata accessor for FormatVersionRequirement);
  sub_1BA719718(v63);
  v67 = v62[5];
  v68 = qword_1ED3C6D50;
  swift_retain();
  if (v68 != -1)
    swift_once();
  v69 = v65;
  v70 = __swift_project_value_buffer(v65, (uint64_t)qword_1ED476BF0);
  v71 = (uint64_t)v162;
  ((void (*)(char *, uint64_t, uint64_t))v57)(v162, v70, v65);
  swift_storeEnumTagMultiPayload();
  sub_1BAD663E0(v67, 2, 0, 0, v71, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v71, type metadata accessor for FormatVersionRequirement);
  swift_release();
  v72 = v163;
  swift_beginAccess();
  v73 = (uint64_t)v161;
  ((void (*)(void (*)(void), uint64_t, uint64_t))v57)(v161, v144, v65);
  swift_storeEnumTagMultiPayload();
  v74 = swift_bridgeObjectRetain();
  sub_1BAD2C618(v74, 3, 0, 0);
  v75 = v57;
  sub_1BA4A2E80(v73, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v76 = v72[7];
  v77 = v144;
  v164 = v69;
  v78 = (uint64_t)v159;
  v57();
  swift_storeEnumTagMultiPayload();
  if (v76)
  {
    v79 = sub_1BAE542FC(v78, 4, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v80 = (uint64_t)v160;
    if ((v79 & 1) != 0)
    {
      v175 = xmmword_1BB8D2D90;
      v176 = 0;
      *(_QWORD *)&v173 = v76;
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    v72 = v163;
  }
  else
  {
    v80 = (uint64_t)v160;
  }
  sub_1BA4A2E80(v78, type metadata accessor for FormatVersionRequirement);
  swift_beginAccess();
  v81 = v72[8];
  sub_1BA67D3F4(v81);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v82 = __swift_project_value_buffer(v164, (uint64_t)qword_1ED476C08);
  v83 = (uint64_t)v158;
  v75();
  swift_storeEnumTagMultiPayload();
  v84 = (uint64_t)v157;
  if (v81 != 0x8000000000000000)
  {
    if ((sub_1BAE542FC(v83, 5, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v162 = (char *)v82;
      v173 = xmmword_1BB8D2D80;
      v174 = 0;
      *(_QWORD *)&v171 = v81;
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BA84B088();
      sub_1BB874464();
      v80 = (uint64_t)v160;
      v82 = (uint64_t)v162;
      v84 = (uint64_t)v157;
    }
    v83 = (uint64_t)v158;
  }
  sub_1BA4A2E80(v83, type metadata accessor for FormatVersionRequirement);
  sub_1BA6EEDB4(v81);
  v85 = v163;
  swift_beginAccess();
  v86 = *((_BYTE *)v85 + 72);
  if (qword_1ED3C6D70 != -1)
    swift_once();
  v87 = v164;
  v88 = __swift_project_value_buffer(v164, (uint64_t)qword_1ED476C50);
  ((void (*)(uint64_t, uint64_t, uint64_t))v75)(v84, v88, v87);
  swift_storeEnumTagMultiPayload();
  if ((v86 & 1) == 0)
  {
    v93 = sub_1BAE542FC(v84, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    if ((v93 & 1) != 0)
    {
      v171 = xmmword_1BB8D2DA0;
      v172 = 0;
      LOBYTE(v169) = 0;
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
  }
  sub_1BA4A2E80(v84, type metadata accessor for FormatVersionRequirement);
  v89 = v163;
  swift_beginAccess();
  v90 = v89[10];
  v91 = v156;
  ((void (*)(uint64_t, uint64_t, uint64_t))v75)(v156, v77, v164);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v92 = sub_1BAE542FC(v91, 7, 0, 0, (uint64_t)sub_1BA90CF04, 0);
  v161 = v75;
  v162 = (char *)v82;
  if ((v92 & 1) != 0)
  {
    v169 = xmmword_1BB8D2DB0;
    v170 = 0;
    v168 = v90;
    sub_1BAE71940();
    sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA653FC0();
    sub_1BB874464();
    v80 = (uint64_t)v160;
  }
  sub_1BA4A2E80(v156, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v94 = v164;
  v95 = v161;
  ((void (*)(uint64_t, uint64_t, uint64_t))v161)(v80, v77, v164);
  swift_storeEnumTagMultiPayload();
  v96 = swift_bridgeObjectRetain();
  sub_1BAD2C748(v96, 8, 0, 0);
  sub_1BA4A2E80(v80, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v160 = 0;
  v97 = v163;
  v98 = v163[12];
  v99 = (uint64_t)v155;
  v144 = v77;
  ((void (*)(char *))v95)(v155);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  v100 = v160;
  sub_1BAD20618(v98, 9, 0, 0, v99, (uint64_t)sub_1BA90CF04, 0);
  if (v100)
  {
    sub_1BA4A2E80(v99, type metadata accessor for FormatVersionRequirement);
    swift_release();
    goto LABEL_5;
  }
  sub_1BA4A2E80(v99, type metadata accessor for FormatVersionRequirement);
  swift_release();
  v101 = v97[13];
  v102 = (uint64_t)v154;
  ((void (*)(char *, uint64_t, uint64_t))v95)(v154, v144, v94);
  swift_storeEnumTagMultiPayload();
  sub_1BA5E7FF4(v101);
  sub_1BAD665F0(v101, 10, 0, 0, v102, (uint64_t)sub_1BA90CF04, 0);
  v160 = 0;
  sub_1BA4A2E80(v102, type metadata accessor for FormatVersionRequirement);
  sub_1BA5E800C(v101);
  v103 = v97[14];
  sub_1BA5E7FF4(v103);
  if (qword_1ED3C6D78 != -1)
    swift_once();
  v104 = v164;
  v105 = __swift_project_value_buffer(v164, (uint64_t)qword_1ED476C68);
  v106 = (uint64_t)v153;
  v107 = v161;
  ((void (*)(char *, uint64_t, uint64_t))v161)(v153, v105, v104);
  swift_storeEnumTagMultiPayload();
  v108 = v160;
  sub_1BAD66808(v103, 11, 0, 0, v106, (uint64_t)sub_1BA90CF04, 0);
  if (v108)
  {
    sub_1BA4A2E80(v106, type metadata accessor for FormatVersionRequirement);
    sub_1BA5E800C(v103);
    goto LABEL_5;
  }
  sub_1BA4A2E80(v106, type metadata accessor for FormatVersionRequirement);
  sub_1BA5E800C(v103);
  v109 = v163[15];
  v110 = v152;
  ((void (*)(uint64_t, uint64_t, uint64_t))v107)(v152, v105, v104);
  swift_storeEnumTagMultiPayload();
  sub_1BA5E7FF4(v109);
  v111 = (uint64_t)v180;
  sub_1BAD665F0(v109, 12, 0, 0, v110, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v152, type metadata accessor for FormatVersionRequirement);
  sub_1BA5E800C(v109);
  v112 = v163[16];
  LOBYTE(v109) = *((_BYTE *)v163 + 136);
  v113 = v151;
  ((void (*)(uint64_t, uint64_t, uint64_t))v161)(v151, v144, v164);
  swift_storeEnumTagMultiPayload();
  sub_1BAD66A20(v112, v109, 13, 0, 0, v113, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v151, type metadata accessor for FormatVersionRequirement);
  v114 = v150;
  ((void (*)(uint64_t, char *, uint64_t))v161)(v150, v162, v164);
  swift_storeEnumTagMultiPayload();
  v115 = swift_retain();
  sub_1BAD66BF4(v115, 14, 0, 0, v114, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v150, type metadata accessor for FormatVersionRequirement);
  swift_release();
  v116 = v163;
  swift_beginAccess();
  v117 = v116[19];
  v118 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v118 != -1)
    swift_once();
  v119 = v164;
  v120 = __swift_project_value_buffer(v164, (uint64_t)qword_1ED476C38);
  ((void (*)(uint64_t, uint64_t, uint64_t))v161)(v149, v120, v119);
  swift_storeEnumTagMultiPayload();
  if (*(_QWORD *)(v117 + 16) && (sub_1BAE542FC(v149, 15, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
  {
    v166 = xmmword_1BB8D2DC0;
    v167 = 0;
    v121 = swift_bridgeObjectRetain();
    v122 = sub_1BA67F4CC(v121);
    swift_bridgeObjectRelease();
    v165[0] = (uint64_t)v122;
    swift_retain();
    sub_1BA67FABC(v165, sub_1BA67FB34, sub_1BA6801F8);
    swift_release();
    v165[3] = v165[0];
    sub_1BAE71940();
    v160 = (char *)sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
    v123 = MEMORY[0x1E0DEA968];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v123, MEMORY[0x1E0DEA970]);
    sub_1BB874464();
    swift_release();
  }
  sub_1BA4A2E80(v149, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v124 = v163;
  swift_beginAccess();
  v125 = v124[20];
  v126 = v124[21];
  v127 = (uint64_t)v148;
  ((void (*)(char *, char *, uint64_t))v161)(v148, v162, v164);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1BAD66E0C(v125, v126, 16, 0, 0, v127, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v127, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v128 = v163;
  swift_beginAccess();
  v129 = v128[22];
  sub_1BA6F3F88();
  v131 = &v147[*(int *)(v130 + 48)];
  v132 = &v147[*(int *)(v130 + 64)];
  ((void (*)(char *, uint64_t, uint64_t))v161)(v147, v144, v164);
  v133 = qword_1ED3C6D40;
  swift_bridgeObjectRetain();
  if (v133 != -1)
    swift_once();
  v134 = v164;
  v135 = __swift_project_value_buffer(v164, (uint64_t)qword_1ED476BC0);
  ((void (*)(char *, uint64_t, uint64_t))v161)(v131, v135, v134);
  *(_QWORD *)v132 = 0;
  *((_QWORD *)v132 + 1) = 0;
  v136 = (uint64_t)v147;
  swift_storeEnumTagMultiPayload();
  sub_1BAD2C878(v129, 17, 0, 0);
  sub_1BA4A2E80(v136, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v137 = v163;
  swift_beginAccess();
  v138 = v137[23];
  v139 = qword_1ED3C4170;
  swift_bridgeObjectRetain();
  if (v139 != -1)
    swift_once();
  v140 = v164;
  v141 = __swift_project_value_buffer(v164, (uint64_t)qword_1ED476998);
  v142 = (uint64_t)v146;
  ((void (*)(char *, uint64_t, uint64_t))v161)(v146, v141, v140);
  swift_storeEnumTagMultiPayload();
  sub_1BAD2C9A8(v138, 18, 0, 0);
  sub_1BA4A2E80(v142, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v60 = v111;
  return sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))sub_1BAE718C8);
}

uint64_t sub_1BA5FB408()
{
  unsigned __int8 *v0;

  return sub_1BAD915E0(*v0);
}

unint64_t sub_1BA5FB410()
{
  unint64_t result;

  result = qword_1ED39BA90;
  if (!qword_1ED39BA90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeAccessibilityRole, &type metadata for FormatNodeAccessibilityRole);
    atomic_store(result, (unint64_t *)&qword_1ED39BA90);
  }
  return result;
}

unint64_t sub_1BA5FB454()
{
  unint64_t result;

  result = qword_1ED3B69F0;
  if (!qword_1ED3B69F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatButtonNodeAction, &type metadata for FormatButtonNodeAction);
    atomic_store(result, (unint64_t *)&qword_1ED3B69F0);
  }
  return result;
}

unint64_t sub_1BA5FB498()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BF28;
  if (!qword_1ED39BF28)
  {
    sub_1BA4AD288(255, &qword_1ED39D9F8, (uint64_t)&type metadata for FormatButtonNodeStateMask, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82632C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BF28);
  }
  return result;
}

uint64_t sub_1BA5FB510@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5FB544@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5FB578@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5FB5AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5FB5E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5FB614()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

void sub_1BA5FB658(_QWORD *a1)
{
  FormatHeadlineBinding.Text.encode(to:)(a1);
}

void FormatHeadlineBinding.Text.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD v52[38];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v52[1] = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v52[0] = (char *)v52 - v6;
  MEMORY[0x1E0C80A78](v7);
  v52[19] = (char *)v52 - v8;
  MEMORY[0x1E0C80A78](v9);
  v52[18] = (char *)v52 - v10;
  MEMORY[0x1E0C80A78](v11);
  v52[2] = (char *)v52 - v12;
  MEMORY[0x1E0C80A78](v13);
  v52[4] = (char *)v52 - v14;
  MEMORY[0x1E0C80A78](v15);
  v52[3] = (char *)v52 - v16;
  MEMORY[0x1E0C80A78](v17);
  v52[5] = (char *)v52 - v18;
  MEMORY[0x1E0C80A78](v19);
  v52[6] = (char *)v52 - v20;
  MEMORY[0x1E0C80A78](v21);
  v52[7] = (char *)v52 - v22;
  MEMORY[0x1E0C80A78](v23);
  v52[8] = (char *)v52 - v24;
  MEMORY[0x1E0C80A78](v25);
  v52[9] = (char *)v52 - v26;
  MEMORY[0x1E0C80A78](v27);
  v52[10] = (char *)v52 - v28;
  MEMORY[0x1E0C80A78](v29);
  v52[11] = (char *)v52 - v30;
  MEMORY[0x1E0C80A78](v31);
  v52[12] = (char *)v52 - v32;
  MEMORY[0x1E0C80A78](v33);
  v52[17] = (char *)v52 - v34;
  MEMORY[0x1E0C80A78](v35);
  v52[16] = (char *)v52 - v36;
  MEMORY[0x1E0C80A78](v37);
  v52[13] = (char *)v52 - v38;
  MEMORY[0x1E0C80A78](v39);
  v52[14] = (char *)v52 - v40;
  MEMORY[0x1E0C80A78](v41);
  v52[15] = (char *)v52 - v42;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)v52 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = *v1;
  v52[20] = v1[4];
  v52[21] = v46;
  v47 = *((unsigned __int8 *)v1 + 48);
  v49 = a1[3];
  v48 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v49);
  v50 = sub_1BA6B8518();
  v52[37] = v45;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatHeadlineBinding.Text, v51, v49, (uint64_t)&type metadata for FormatHeadlineBinding.Text, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v48, (uint64_t)v45, v50, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BA5FBA24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 - 184) = *(_QWORD *)(v4 - 200);
  *(_QWORD *)(v4 - 176) = v0;
  *(_QWORD *)(v4 - 168) = v3;
  *(_QWORD *)(v4 - 160) = v1;
  *(_QWORD *)(v4 - 152) = *(_QWORD *)(v4 - 208);
  *(_QWORD *)(v4 - 144) = v2;
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476C08);
  v7 = *(_QWORD *)(v4 - 240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v7, v6, v5);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v8 = *(_QWORD *)(v4 - 72);
  sub_1BA5FC7B8(3, v4 - 184, v7);
  sub_1BA4A2E80(v7, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v8, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5FC650(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1D00;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5FC774();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5FC774()
{
  unint64_t result;

  result = qword_1ED3A6B60;
  if (!qword_1ED3A6B60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92DFCC, &_s14descr1E7323649C4TextO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B60);
  }
  return result;
}

uint64_t sub_1BA5FC7B8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[16];
  uint64_t (*v18)();
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v24 = a1;
  sub_1BAEC5700(a2, (uint64_t)&v21);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v18 = sub_1BAEF1D00;
  v19 = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5FC774();
    v20 = 0uLL;
    sub_1BB874464();
    v13 = v23;
    if (v23 == 1)
    {
      sub_1BA7331A8(v21, v22, 1);
      sub_1BA7331A8(0, 0, 1);
    }
    else
    {
      v15 = v22;
      v16 = v21;
      sub_1BA7336E0(v21, v22, v23);
      sub_1BA7331A8(v16, v15, v13);
      sub_1BA7331A8(0, 0, 1);
      v20 = xmmword_1BB87FC90;
      sub_1BA5FC9C4();
      sub_1BB874464();
    }
  }
  return swift_release();
}

unint64_t sub_1BA5FC9C4()
{
  unint64_t result;

  result = qword_1ED39A760;
  if (!qword_1ED39A760)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat, &type metadata for FormatDateFormat);
    atomic_store(result, (unint64_t *)&qword_1ED39A760);
  }
  return result;
}

uint64_t sub_1BA5FCA08(_QWORD *a1)
{
  return FormatTextNodeFormat.encode(to:)(a1);
}

uint64_t FormatTextNodeFormat.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  sub_1BAE7D20C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v25 = v1[1];
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BAE7D104();
  v15 = sub_1BA4A2870(&qword_1ED3D1640, (uint64_t (*)(uint64_t))sub_1BAE7D104, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextNodeFormat, v16, v12, (uint64_t)&type metadata for FormatTextNodeFormat, v14, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v15, (uint64_t)&off_1E734BD80);
  v17 = qword_1ED3C2478;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v27;
  sub_1BAD254F4(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v21)
  {
    v22 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v23 = swift_bridgeObjectRetain();
    sub_1BAD25650(v23, 1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE7D20C);
}

unint64_t sub_1BA5FCCC8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BDC0;
  if (!qword_1ED39BDC0)
  {
    sub_1BA4AD288(255, &qword_1ED3B9328, (uint64_t)&type metadata for FormatTextNodeFormat.Token, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA83F18C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BDC0);
  }
  return result;
}

uint64_t FormatNodeContext.__deallocating_deinit()
{
  FormatNodeContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatContextLayoutOptions.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA5FCD98@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5FCDC0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5FCDC0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - v3;
  sub_1BAEF7B00();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7C93C();
  sub_1BA4A2870(&qword_1ED3D10E0, (uint64_t (*)(uint64_t))sub_1BAE7C93C, (uint64_t)&unk_1BB8FFC6C);
  v11 = v36;
  sub_1BB87468C();
  v12 = v11;
  v35 = a1;
  if (v11)
    goto LABEL_12;
  v36 = 0;
  v32 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v16 = v33;
  v15 = v34;
  if ((v14 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v10 = *((_QWORD *)v19 - 2);
      v25 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      v27 = v7;
      MEMORY[0x1E0C80A78](v26);
      *(&v32 - 4) = (char *)&_s14descr1E72CC979V10CodingKeysON;
      *(&v32 - 3) = (char *)sub_1BAE7C9BC();
      *(&v32 - 2) = (char *)sub_1BA5FD174();
      *(&v32 - 1) = (char *)sub_1BAE7CA00();
      swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71130((uint64_t)&unk_1E7269140);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v29 = v10;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v10, v25, 1);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4FB6A0();
  v37 = 0;
  v38 = 0;
  v39 = 0;
  v20 = v32;
  v10 = (uint64_t)v9;
  v21 = v36;
  sub_1BB8740D4();
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v21;
LABEL_12:
    v30 = v35;
    sub_1BA7F8B78(v35, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    return v10;
  }
  v22 = sub_1BB86DD08();
  v23 = v20;
  v24 = v22;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v23, v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for FormatSwitchNodeDefault();
  v10 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v10 + 16) = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return v10;
}

unint64_t sub_1BA5FD174()
{
  unint64_t result;

  result = qword_1ED3CA550;
  if (!qword_1ED3CA550)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEFC8, &_s14descr1E72CC979V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3CA550);
  }
  return result;
}

uint64_t sub_1BA5FD1B8(_QWORD *a1)
{
  return FormatCorner.encode(to:)(a1);
}

uint64_t FormatCorner.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD v22[6];
  uint64_t v23;
  _QWORD *v24;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v22[5] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v22[4] = (char *)v22 - v7;
  MEMORY[0x1E0C80A78](v8);
  v22[3] = (char *)v22 - v9;
  MEMORY[0x1E0C80A78](v10);
  v22[2] = (char *)v22 - v11;
  MEMORY[0x1E0C80A78](v12);
  v22[1] = (char *)v22 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v22 - v15;
  v23 = *v1;
  v17 = a1[3];
  v18 = a1[4];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA69F160((uint64_t)v16, (uint64_t)sub_1BA90CF04, 0, v17, v18);
  result = sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
  if (!v2)
    __asm { BR              X9 }
  return result;
}

uint64_t sub_1BA5FD700@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatHeadlineBinding.Image.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.Image.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FD740, (uint64_t)&_s10CodingTypeON_84, (uint64_t)&unk_1E726C0E0, a2);
}

unint64_t sub_1BA5FD740()
{
  unint64_t result;

  result = qword_1ED3C9918;
  if (!qword_1ED3C9918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA670, &_s10CodingTypeON_84);
    atomic_store(result, (unint64_t *)&qword_1ED3C9918);
  }
  return result;
}

unint64_t sub_1BA5FD784()
{
  unint64_t result;

  result = qword_1ED3CA618;
  if (!qword_1ED3CA618)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4980, &_s10CodingTypeON_7);
    atomic_store(result, (unint64_t *)&qword_1ED3CA618);
  }
  return result;
}

unint64_t sub_1BA5FD7C8()
{
  unint64_t result;

  result = qword_1ED3CCFB0;
  if (!qword_1ED3CCFB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7C10, &_s10CodingTypeON_48);
    atomic_store(result, (unint64_t *)&qword_1ED3CCFB0);
  }
  return result;
}

unint64_t sub_1BA5FD80C()
{
  unint64_t result;

  result = qword_1ED3C9908;
  if (!qword_1ED3C9908)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A8B8, &_s14descr1E728F061C5ColorO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C9908);
  }
  return result;
}

unint64_t sub_1BA5FD850()
{
  unint64_t result;

  result = qword_1ED3C7768;
  if (!qword_1ED3C7768)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9258CC, &_s14descr1E731D319V4TextO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C7768);
  }
  return result;
}

unint64_t sub_1BA5FD894()
{
  unint64_t result;

  result = qword_1ED3C9BA0;
  if (!qword_1ED3C9BA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Bool.CodingType, &type metadata for FormatWebEmbedBinding.Bool.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3C9BA0);
  }
  return result;
}

unint64_t sub_1BA5FD8D8()
{
  unint64_t result;

  result = qword_1ED3CD550;
  if (!qword_1ED3CD550)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD290, &_s10CodingTypeON_120);
    atomic_store(result, (unint64_t *)&qword_1ED3CD550);
  }
  return result;
}

unint64_t sub_1BA5FD91C()
{
  unint64_t result;

  result = qword_1ED3C9948;
  if (!qword_1ED3C9948)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87CE44, &_s14descr1E7272991C8DateTimeO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C9948);
  }
  return result;
}

unint64_t sub_1BA5FD960()
{
  unint64_t result;

  result = qword_1ED3BE238;
  if (!qword_1ED3BE238)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FD7E8, &_s4TextO10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1ED3BE238);
  }
  return result;
}

unint64_t sub_1BA5FD9A4()
{
  unint64_t result;

  result = qword_1ED3C7748;
  if (!qword_1ED3C7748)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB914A74, &_s14descr1E730BF49V4BoolO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C7748);
  }
  return result;
}

unint64_t sub_1BA5FD9E8()
{
  unint64_t result;

  result = qword_1ED3C7DB0;
  if (!qword_1ED3C7DB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB900D50, &_s4BoolO10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1ED3C7DB0);
  }
  return result;
}

unint64_t sub_1BA5FDA2C()
{
  unint64_t result;

  result = qword_1ED3C7788;
  if (!qword_1ED3C7788)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88CFC4, &_s14descr1E7283981V5ColorO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C7788);
  }
  return result;
}

unint64_t sub_1BA5FDA70()
{
  unint64_t result;

  result = qword_1ED3C6730;
  if (!qword_1ED3C6730)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEEC8, &_s10CodingTypeON_149);
    atomic_store(result, (unint64_t *)&qword_1ED3C6730);
  }
  return result;
}

uint64_t sub_1BA5FDAB4(_QWORD *a1)
{
  return FormatSymbolConfig.Size.encode(to:)(a1);
}

uint64_t FormatSymbolConfig.Size.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_BYTE *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[12];
  int v29;
  _BYTE *v30;
  int v31;
  _BYTE *v32;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v30 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v32 = &v28[-v8];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v28[-v10];
  sub_1BAEC3264(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *(_QWORD *)v1;
  v31 = *(unsigned __int8 *)(v1 + 8);
  v29 = *(unsigned __int8 *)(v1 + 9);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BAEC315C();
  v19 = sub_1BA4A2870(&qword_1ED3D0D50, (uint64_t (*)(uint64_t))sub_1BAEC315C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSymbolConfig.Size, v20, v16, (uint64_t)&type metadata for FormatSymbolConfig.Size, v18, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v14, v19, (uint64_t)&off_1E734BD80);
  v21 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = sub_1BB86EB84();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C20);
  v24 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24(v11, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1D99C(v15, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v25 = (uint64_t)v32;
    v24(v32, v23, v22);
    swift_storeEnumTagMultiPayload();
    sub_1BAD62950(v31, 1, 0, 0, v25, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    v26 = (uint64_t)v30;
    v24(v30, v23, v22);
    swift_storeEnumTagMultiPayload();
    sub_1BAD62B18(v29, 2, 0, 0, v26, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BAEC3264);
}

uint64_t FormatEdgeInsetsEquation.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[2];
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v34 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v36 = (char *)v33 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v33 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v33 - v13;
  sub_1BAE8F854(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v37 = v1[1];
  v35 = v1[2];
  v33[1] = v1[3];
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BAE8F74C();
  v22 = sub_1BA4A2870(&qword_1ED3D1110, (uint64_t (*)(uint64_t))sub_1BAE8F74C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatEdgeInsetsEquation, v23, v19, (uint64_t)&type metadata for FormatEdgeInsetsEquation, v21, (uint64_t)&type metadata for FormatVersions.JazzkonC, v20, (uint64_t)v17, v22, (uint64_t)&off_1E734BD80);
  v24 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C20);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v38(v14, v26, v25);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD14670(v18, 0, 0, 0, (uint64_t)v14, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v38(v12, v26, v25);
    swift_storeEnumTagMultiPayload();
    v27 = swift_bridgeObjectRetain();
    sub_1BAD14670(v27, 1, 0, 0, (uint64_t)v12, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v28 = (uint64_t)v36;
    v38(v36, v26, v25);
    swift_storeEnumTagMultiPayload();
    v29 = swift_bridgeObjectRetain();
    sub_1BAD14670(v29, 2, 0, 0, v28, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v30 = (uint64_t)v34;
    v38(v34, v26, v25);
    swift_storeEnumTagMultiPayload();
    v31 = swift_bridgeObjectRetain();
    sub_1BAD14670(v31, 3, 0, 0, v30, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v30, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BAE8F854);
}

unint64_t sub_1BA5FE1E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B4000;
  if (!qword_1ED3B4000)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEquation<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B4000);
  }
  return result;
}

unint64_t sub_1BA5FE24C()
{
  unint64_t result;

  result = qword_1ED39B4F8;
  if (!qword_1ED39B4F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolWeight, &type metadata for FormatSymbolWeight);
    atomic_store(result, (unint64_t *)&qword_1ED39B4F8);
  }
  return result;
}

unint64_t sub_1BA5FE290()
{
  unint64_t result;

  result = qword_1ED39B470;
  if (!qword_1ED39B470)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolScale, &type metadata for FormatSymbolScale);
    atomic_store(result, (unint64_t *)&qword_1ED39B470);
  }
  return result;
}

uint64_t sub_1BA5FE2D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBackground.init(from:)(a1, a2);
}

uint64_t FormatBackground.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA5FE9F0();
    v23 = 0;
    v22 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726A7F0;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5FE9F0()
{
  unint64_t result;

  result = qword_1ED3C7250;
  if (!qword_1ED3C7250)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDDA8, &_s10CodingTypeON_124);
    atomic_store(result, (unint64_t *)&qword_1ED3C7250);
  }
  return result;
}

unint64_t sub_1BA5FEA34()
{
  unint64_t result;

  result = qword_1ED3B4040;
  if (!qword_1ED3B4040)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGradient, &type metadata for FormatGradient);
    atomic_store(result, (unint64_t *)&qword_1ED3B4040);
  }
  return result;
}

void sub_1BA5FEA78(uint64_t a1, uint64_t a2)
{
  sub_1BA5FEA8C(a1, a2);
}

void sub_1BA5FEA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v14 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 16);
  v12[1] = v6;
  v8 = _s10CodingKeysOMa_279(255, v13, v6, v7);
  v9 = MEMORY[0x1BCCE5B24](&unk_1BB8D2848, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8D27F8, v8);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8D27D0, v8);
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = v11;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA5FEB74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v7 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v8 = sub_1BB8741D0();
  v9 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v8);
  v11 = type metadata accessor for VersionedKeyedEncodingContainer(0, v8, v9, v10);
  *(_QWORD *)(v5 - 120) = v11;
  *(_QWORD *)(v5 - 136) = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - v12;
  v14 = v1[3];
  v15 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v14);
  sub_1BA6EC1EC(v2, v16, v14, v2, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v13, v7, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 72) = *v3;
  *(_QWORD *)(v5 - 112) = 0;
  *(_QWORD *)(v5 - 104) = 0;
  *(_BYTE *)(v5 - 96) = 0;
  v17 = qword_1ED3C2478;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v4, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = sub_1BA654038();
  v22 = *(_QWORD *)(v5 - 128);
  sub_1BA6EE974(v5 - 72, v5 - 112, v4, (uint64_t)sub_1BA90CF04, 0, *(_QWORD *)(v5 - 120), (uint64_t)&type metadata for FormatExpression, v21);
  sub_1BA4A2E80(v4, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (v22)
    return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v5 - 136) + 8))(v13, *(_QWORD *)(v5 - 120));
  v24 = *(_QWORD *)(v5 - 160) + *(int *)(v2 + 36);
  *(_OWORD *)(v5 - 112) = xmmword_1BB8A1A10;
  *(_BYTE *)(v5 - 96) = 0;
  v25 = *(_QWORD *)(v5 - 144);
  v20(v25, v19, v18);
  swift_storeEnumTagMultiPayload();
  v26 = *(_QWORD *)(v5 - 120);
  sub_1BA6EE974(v24, v5 - 112, v25, (uint64_t)sub_1BA90CF04, 0, v26, *(_QWORD *)(v5 - 152), *(_QWORD *)(*(_QWORD *)(v5 - 168) + 16));
  sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 136) + 8))(v13, v26);
}

uint64_t sub_1BA5FEE10(_QWORD *a1)
{
  return FormatItemKind.encode(to:)(a1);
}

uint64_t FormatItemKind.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  _QWORD *v154;
  uint64_t v155;
  _QWORD v156[3];
  uint64_t v157;
  char v158;

  v154 = a1;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39C120, (uint64_t (*)(void))sub_1BA6088A4, (uint64_t)&type metadata for FormatItemKind.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v152 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v153 = (char *)&v151 - v4;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v151 - v9;
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78]((char *)&v151 - v12);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v151 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v151 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v151 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v151 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v151 - v30;
  MEMORY[0x1E0C80A78](v32);
  v43 = (char *)&v151 - v42;
  v44 = v1[1];
  switch(v44)
  {
    case 0uLL:
      v45 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v46 = v45[3];
      v47 = v45[4];
      __swift_project_boxed_opaque_existential_1(v45, v46);
      if (qword_1ED3C2478 != -1)
        swift_once();
      v48 = sub_1BB86EB84();
      v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v43, v49, v48);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v50 = v155;
      sub_1BA69F160((uint64_t)v43, (uint64_t)sub_1BAA474C8, 0, v46, v47);
      sub_1BA69DCC0((uint64_t)v43);
      if (v50)
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v156, v157);
      goto LABEL_70;
    case 1uLL:
      v63 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v64 = v63[3];
      v65 = v63[4];
      __swift_project_boxed_opaque_existential_1(v63, v64);
      if (qword_1ED3C6D40 != -1)
        swift_once();
      v66 = sub_1BB86EB84();
      v67 = __swift_project_value_buffer(v66, (uint64_t)qword_1ED476BC0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v31, v67, v66);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v68 = v155;
      sub_1BA69F160((uint64_t)v31, (uint64_t)sub_1BAA474E4, 0, v64, v65);
      v69 = (uint64_t)v31;
      if (v68)
        goto LABEL_66;
      sub_1BA69DCC0((uint64_t)v31);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v156, v157);
      goto LABEL_70;
    case 2uLL:
      v70 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v71 = v70[3];
      v72 = v70[4];
      __swift_project_boxed_opaque_existential_1(v70, v71);
      if (qword_1ED3C2478 != -1)
        swift_once();
      v73 = sub_1BB86EB84();
      v74 = __swift_project_value_buffer(v73, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v28, v74, v73);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v75 = v155;
      sub_1BA69F160((uint64_t)v28, (uint64_t)sub_1BAA47500, 0, v71, v72);
      v69 = (uint64_t)v28;
      if (v75)
        goto LABEL_66;
      sub_1BA69DCC0((uint64_t)v28);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v156, v157);
      goto LABEL_70;
    case 3uLL:
      v76 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v77 = v76[3];
      v78 = v76[4];
      __swift_project_boxed_opaque_existential_1(v76, v77);
      if (qword_1ED3C6D60 != -1)
        swift_once();
      v79 = sub_1BB86EB84();
      v80 = __swift_project_value_buffer(v79, (uint64_t)qword_1ED476C38);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v25, v80, v79);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v81 = v155;
      sub_1BA69F160((uint64_t)v25, (uint64_t)sub_1BAA4751C, 0, v77, v78);
      v69 = (uint64_t)v25;
      if (v81)
        goto LABEL_66;
      sub_1BA69DCC0((uint64_t)v25);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v156, v157);
      goto LABEL_70;
    case 4uLL:
      v82 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v83 = v82[3];
      v84 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v83);
      if (qword_1ED3C6D40 != -1)
        swift_once();
      v85 = sub_1BB86EB84();
      v86 = __swift_project_value_buffer(v85, (uint64_t)qword_1ED476BC0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v22, v86, v85);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v87 = v155;
      sub_1BA69F160((uint64_t)v22, (uint64_t)sub_1BAA47538, 0, v83, v84);
      if (!v87)
        goto LABEL_69;
      goto LABEL_65;
    case 5uLL:
      v88 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v89 = v88[3];
      v90 = v88[4];
      __swift_project_boxed_opaque_existential_1(v88, v89);
      if (qword_1ED3C6D20 != -1)
        swift_once();
      v91 = sub_1BB86EB84();
      v92 = __swift_project_value_buffer(v91, (uint64_t)qword_1ED476B78);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v19, v92, v91);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v93 = v155;
      sub_1BA69F160((uint64_t)v19, (uint64_t)sub_1BAA47554, 0, v89, v90);
      if (v93)
      {
        sub_1BA69DCC0((uint64_t)v19);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
      }
      sub_1BA69DCC0((uint64_t)v19);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v156, v157);
      goto LABEL_70;
    case 6uLL:
      v94 = v38;
      v95 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v96 = v95[3];
      v97 = v95[4];
      __swift_project_boxed_opaque_existential_1(v95, v96);
      if (qword_1ED3C6D20 != -1)
        swift_once();
      v98 = sub_1BB86EB84();
      v99 = __swift_project_value_buffer(v98, (uint64_t)qword_1ED476B78);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v94, v99, v98);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v100 = v155;
      sub_1BA69F160(v94, (uint64_t)sub_1BAA47570, 0, v96, v97);
      v69 = v94;
      if (v100)
        goto LABEL_66;
      sub_1BA69DCC0(v94);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v156, v157);
      goto LABEL_70;
    case 7uLL:
      v22 = v37;
      v101 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v102 = v101[3];
      v103 = v101[4];
      __swift_project_boxed_opaque_existential_1(v101, v102);
      if (qword_1ED3C6D48 != -1)
        swift_once();
      v104 = sub_1BB86EB84();
      v105 = __swift_project_value_buffer(v104, (uint64_t)qword_1ED476BD8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v22, v105, v104);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v106 = v155;
      sub_1BA69F160((uint64_t)v22, (uint64_t)sub_1BAA4758C, 0, v102, v103);
      if (!v106)
        goto LABEL_69;
      goto LABEL_65;
    case 8uLL:
      v22 = v36;
      v107 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v108 = v107[3];
      v109 = v107[4];
      __swift_project_boxed_opaque_existential_1(v107, v108);
      if (qword_1ED3C6D50 != -1)
        swift_once();
      v110 = sub_1BB86EB84();
      v111 = __swift_project_value_buffer(v110, (uint64_t)qword_1ED476BF0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v22, v111, v110);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v112 = v155;
      sub_1BA69F160((uint64_t)v22, (uint64_t)sub_1BAA475A8, 0, v108, v109);
      if (!v112)
        goto LABEL_69;
      goto LABEL_65;
    case 9uLL:
      v22 = v35;
      v113 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v114 = v113[3];
      v115 = v113[4];
      __swift_project_boxed_opaque_existential_1(v113, v114);
      if (qword_1ED3C6D50 != -1)
        swift_once();
      v116 = sub_1BB86EB84();
      v117 = __swift_project_value_buffer(v116, (uint64_t)qword_1ED476BF0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 16))(v22, v117, v116);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v118 = v155;
      sub_1BA69F160((uint64_t)v22, (uint64_t)sub_1BAA475C4, 0, v114, v115);
      if (!v118)
        goto LABEL_69;
      goto LABEL_65;
    case 0xAuLL:
      v22 = v34;
      v119 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v120 = v119[3];
      v121 = v119[4];
      __swift_project_boxed_opaque_existential_1(v119, v120);
      if (qword_1ED3C6D50 != -1)
        swift_once();
      v122 = sub_1BB86EB84();
      v123 = __swift_project_value_buffer(v122, (uint64_t)qword_1ED476BF0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v22, v123, v122);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v124 = v155;
      sub_1BA69F160((uint64_t)v22, (uint64_t)sub_1BAA475E0, 0, v120, v121);
      if (!v124)
        goto LABEL_69;
      goto LABEL_65;
    case 0xBuLL:
      v22 = v33;
      v125 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v126 = v125[3];
      v127 = v125[4];
      __swift_project_boxed_opaque_existential_1(v125, v126);
      if (qword_1ED3C6D50 != -1)
        swift_once();
      v128 = sub_1BB86EB84();
      v129 = __swift_project_value_buffer(v128, (uint64_t)qword_1ED476BF0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v22, v129, v128);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v130 = v155;
      sub_1BA69F160((uint64_t)v22, (uint64_t)sub_1BAA475FC, 0, v126, v127);
      if (!v130)
        goto LABEL_69;
      goto LABEL_65;
    case 0xCuLL:
      v22 = v10;
      v131 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v132 = v131[3];
      v133 = v131[4];
      __swift_project_boxed_opaque_existential_1(v131, v132);
      if (qword_1ED3C6D50 != -1)
        swift_once();
      v134 = sub_1BB86EB84();
      v135 = __swift_project_value_buffer(v134, (uint64_t)qword_1ED476BF0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v10, v135, v134);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v136 = (uint64_t)v10;
      v137 = v155;
      sub_1BA69F160(v136, (uint64_t)sub_1BAA47618, 0, v132, v133);
      if (!v137)
        goto LABEL_69;
      goto LABEL_65;
    case 0xDuLL:
      v22 = v41;
      v138 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v139 = v138[3];
      v140 = v138[4];
      __swift_project_boxed_opaque_existential_1(v138, v139);
      if (qword_1ED3C6D50 != -1)
        swift_once();
      v141 = sub_1BB86EB84();
      v142 = __swift_project_value_buffer(v141, (uint64_t)qword_1ED476BF0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v22, v142, v141);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v143 = v155;
      sub_1BA69F160((uint64_t)v22, (uint64_t)sub_1BAA47634, 0, v139, v140);
      if (!v143)
        goto LABEL_69;
      goto LABEL_65;
    case 0xEuLL:
      v22 = v40;
      v144 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BB8746B0();
      v145 = v144[3];
      v146 = v144[4];
      __swift_project_boxed_opaque_existential_1(v144, v145);
      if (qword_1ED3C4168 != -1)
        swift_once();
      v147 = sub_1BB86EB84();
      v148 = __swift_project_value_buffer(v147, (uint64_t)qword_1ED476900);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v22, v148, v147);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v149 = v155;
      sub_1BA69F160((uint64_t)v22, (uint64_t)sub_1BAA47650, 0, v145, v146);
      if (v149)
      {
LABEL_65:
        v69 = (uint64_t)v22;
LABEL_66:
        sub_1BA69DCC0(v69);
      }
      else
      {
LABEL_69:
        sub_1BA69DCC0((uint64_t)v22);
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v156, v157);
LABEL_70:
        sub_1BB8743E0();
      }
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
    default:
      v51 = v39;
      v151 = v3;
      v52 = v152;
      v53 = *v1;
      v54 = v154;
      __swift_project_boxed_opaque_existential_1(v154, v154[3]);
      sub_1BA6088A4();
      swift_bridgeObjectRetain();
      v55 = v153;
      sub_1BB8746C8();
      v56 = v54[3];
      v57 = v54[4];
      __swift_project_boxed_opaque_existential_1(v54, v56);
      if (qword_1ED3C6D30 != -1)
        swift_once();
      v58 = sub_1BB86EB84();
      v59 = __swift_project_value_buffer(v58, (uint64_t)qword_1ED476B90);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v51, v59, v58);
      type metadata accessor for FormatVersionRequirement.Value(0);
      v60 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1E0C80A78](v60);
      *(&v151 - 2) = v53;
      *(&v151 - 1) = v44;
      v61 = v155;
      sub_1BA69F160(v51, (uint64_t)sub_1BAA47C2C, (uint64_t)(&v151 - 4), v56, v57);
      if (v61)
      {
        sub_1BA766C18(v53, v44);
        sub_1BA69DCC0(v51);
        return (*(uint64_t (**)(char *, uint64_t))(v151 + 8))(v55, v52);
      }
      else
      {
        sub_1BA69DCC0(v51);
        LOBYTE(v156[0]) = 0;
        sub_1BA835600();
        sub_1BB8741AC();
        v156[0] = v53;
        v156[1] = v44;
        v158 = 1;
        sub_1BA8354C8();
        sub_1BB8741AC();
        v150 = v151;
        sub_1BA766C18(v53, v44);
        return (*(uint64_t (**)(char *, uint64_t))(v150 + 8))(v55, v52);
      }
  }
}

void sub_1BA6002F8(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  FormatCommandValue.init(from:)(a1[2], a1[3], a1[4], a2);
}

void FormatCommandValue.encode(to:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[6];
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v15[2] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v15[3] = (char *)v15 - v6;
  MEMORY[0x1E0C80A78](v7);
  v18 = (char *)v15 - v8;
  v9 = a2[2];
  v10 = a2[4];
  v16 = a2[3];
  v17 = v9;
  v15[5] = v10;
  v11 = _s10CodingKeysOMa_167(255, v9, v16, v10);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8CC540, v11);
  v13 = MEMORY[0x1BCCE5B24](&unk_1BB8CC4F0, v11);
  v14 = MEMORY[0x1BCCE5B24](&unk_1BB8CC4C8, v11);
  v19 = v11;
  v20 = v12;
  v21 = v13;
  v22 = v14;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA600428(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v7 = sub_1BB8741D0();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v7);
  v10 = type metadata accessor for VersionedKeyedEncodingContainer(0, v7, v8, v9);
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - v11;
  v14 = v2[3];
  v13 = v2[4];
  v15 = __swift_project_boxed_opaque_existential_1(v2, v14);
  *(_QWORD *)(v4 - 200) = v3;
  sub_1BA6EC1EC(v3, (uint64_t)v15, v14, v3, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v12, v6, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v4 - 72) = *v1;
  *(_QWORD *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 104) = 0;
  *(_BYTE *)(v4 - 96) = 0;
  v16 = qword_1ED3C2478;
  swift_retain();
  if (v16 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C20);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v20 = *(_QWORD *)(v4 - 136);
  *(_QWORD *)(v4 - 176) = v19;
  v19(v20, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = sub_1BA6007E8();
  v22 = *(_QWORD *)(v4 - 128);
  sub_1BA6EE974(v4 - 72, v4 - 112, v20, (uint64_t)sub_1BA90CF04, 0, v10, (uint64_t)&type metadata for FormatCommand, v21);
  sub_1BA4A2E80(v20, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (v22)
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v12, v10);
  *(_QWORD *)(v4 - 72) = v1[1];
  *(_OWORD *)(v4 - 112) = xmmword_1BB8A1A10;
  *(_BYTE *)(v4 - 96) = 0;
  v25 = *(_QWORD *)(v4 - 184);
  v24 = *(void (**)(uint64_t))(v4 - 176);
  *(_QWORD *)(v4 - 128) = v18;
  v24(v25);
  swift_storeEnumTagMultiPayload();
  v26 = type metadata accessor for FormatCommandValue.CaseValue(255, *(_QWORD *)(v4 - 152), *(_QWORD *)(v4 - 160), *(_QWORD *)(v4 - 168));
  v27 = v25;
  v28 = v10;
  v29 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v4 - 120) = MEMORY[0x1BCCE5B24](&unk_1BB8FC760, v26);
  v30 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v29, v4 - 120);
  sub_1BA6EE974(v4 - 72, v4 - 112, v27, (uint64_t)sub_1BA90CF04, 0, v28, v29, v30);
  sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v4 - 192);
  v32 = (uint64_t)v1 + *(int *)(*(_QWORD *)(v4 - 200) + 48);
  *(_OWORD *)(v4 - 112) = xmmword_1BB8D2D60;
  *(_BYTE *)(v4 - 96) = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 - 176))(v31, *(_QWORD *)(v4 - 128), v17);
  swift_storeEnumTagMultiPayload();
  v33 = type metadata accessor for FormatCommandValue.DefaultValue(0, *(_QWORD *)(v4 - 152), *(_QWORD *)(v4 - 160), *(_QWORD *)(v4 - 168));
  v34 = MEMORY[0x1BCCE5B24](&unk_1BB8FC738, v33);
  sub_1BA6EE974(v32, v4 - 112, v31, (uint64_t)sub_1BA90CF04, 0, v28, v33, v34);
  sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(0, v28);
}

unint64_t sub_1BA6007E8()
{
  unint64_t result;

  result = qword_1ED39B1B0;
  if (!qword_1ED39B1B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommand, &type metadata for FormatCommand);
    atomic_store(result, (unint64_t *)&qword_1ED39B1B0);
  }
  return result;
}

void FormatCommandValue.init(from:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[6];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v22 = a4;
  v15 = type metadata accessor for FormatCommandValue.DefaultValue(0, a1, a2, a3);
  v14[4] = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v21 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v14[5] = (char *)v14 - v9;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v10 = _s10CodingKeysOMa_167(255, a1, a2, a3);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8CC540, v10);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8CC4F0, v10);
  v13 = MEMORY[0x1BCCE5B24](&unk_1BB8CC4C8, v10);
  v23 = v10;
  v24 = v11;
  v16 = v12;
  v17 = v11;
  v25 = v12;
  v26 = v13;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_167(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_167);
}

unint64_t sub_1BA600DE0()
{
  unint64_t result;

  result = qword_1ED3B39D0;
  if (!qword_1ED3B39D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommand, &type metadata for FormatCommand);
    atomic_store(result, (unint64_t *)&qword_1ED3B39D0);
  }
  return result;
}

uint64_t sub_1BA600E24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  char *v11;
  uint64_t v12;

  *a7 = *a1;
  a7[1] = a2;
  v11 = (char *)a7 + *(int *)(type metadata accessor for FormatCommandValue(0, a4, a5, a6) + 48);
  v12 = type metadata accessor for FormatCommandValue.DefaultValue(0, a4, a5, a6);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a3, v12);
}

uint64_t type metadata accessor for FormatCommandValue.DefaultValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatCommandValue.DefaultValue);
}

uint64_t type metadata accessor for FormatCommandValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatCommandValue);
}

uint64_t sub_1BA600EC4@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatLocalizationCollection.init(from:)(a1, a2);
}

uint64_t sub_1BA600ED8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA6010C8();
  sub_1BA60113C(&qword_1ED39BE20, &qword_1ED39B130, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t FormatLocalizationCollection.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v6;
  __int128 v7;
  _QWORD v8[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1BA6010C8();
    sub_1BA60113C(&qword_1ED39BE28, &qword_1ED39B138, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF40]);
    sub_1BB8743D4();
    sub_1BA6011BC(v8[6], &v7);
    v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA6010C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B93F0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B93F0);
  }
}

uint64_t sub_1BA60113C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA6010C8();
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))sub_1BA7916B4, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA6011BC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;

  v49 = a2;
  sub_1BA7916B4(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v54 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = *(_QWORD *)(a1 + 16);
  if (!v51)
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_25:
    v47 = v49;
    *v49 = a1;
    v47[1] = v7;
    return;
  }
  v53 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v52 = a1;
  v50 = v4;
  while (1)
  {
    if (v6 >= *(_QWORD *)(a1 + 16))
      goto LABEL_30;
    v8 = *(_QWORD *)(v4 + 72);
    v9 = v54;
    v55 = v6;
    sub_1BA6019CC(v53 + v8 * v6, v54);
    v10 = *(_QWORD *)(v9 + 48);
    swift_bridgeObjectRetain();
    sub_1BA601990(v9);
    v11 = *(_QWORD *)(v10 + 16);
    v56 = v10;
    if (v11)
      break;
LABEL_3:
    v6 = v55 + 1;
    swift_bridgeObjectRelease();
    a1 = v52;
    v4 = v50;
    if (v6 == v51)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  v12 = (uint64_t *)(v10 + 64);
  while (1)
  {
    v14 = *(v12 - 4);
    v15 = *(v12 - 3);
    v16 = *(v12 - 1);
    v58 = *(v12 - 2);
    v17 = *v12;
    v18 = v7[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18)
    {
      swift_bridgeObjectRetain();
      v19 = sub_1BA6E35A8(v14, v15);
      if ((v20 & 1) != 0)
      {
        v39 = (uint64_t *)(v7[7] + 40 * v19);
        v40 = v39[1];
        v57 = *v39;
        v41 = v39[2];
        v54 = v39[3];
        v55 = v41;
        v42 = v17;
        v43 = v39[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        type metadata accessor for FormatPackageError();
        sub_1BA4A2870((unint64_t *)&qword_1EF2AC008, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageError, (uint64_t)&unk_1BB8F5900);
        swift_allocError();
        *v44 = v14;
        v44[1] = v15;
        v44[2] = v58;
        v44[3] = v16;
        v45 = v57;
        v44[4] = v42;
        v44[5] = v45;
        v46 = v55;
        v44[6] = v40;
        v44[7] = v46;
        v44[8] = v54;
        v44[9] = v43;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
    }
    v57 = v11;
    swift_bridgeObjectRetain_n();
    v21 = v16;
    swift_bridgeObjectRetain();
    v22 = v14;
    v23 = v17;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v59 = v7;
    v25 = v22;
    v27 = sub_1BA6E35A8(v22, v15);
    v28 = v7[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (v7[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v7 = v59;
        if ((v26 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1BB4C2674();
        v7 = v59;
        if ((v31 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1BA6015EC(v30, isUniquelyReferenced_nonNull_native);
      v32 = sub_1BA6E35A8(v25, v15);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_31;
      v27 = v32;
      v7 = v59;
      if ((v31 & 1) != 0)
      {
LABEL_7:
        v13 = (uint64_t *)(v7[7] + 40 * v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *v13 = v25;
        v13[1] = v15;
        v13[2] = v58;
        v13[3] = v21;
        v13[4] = v23;
        goto LABEL_8;
      }
    }
    v7[(v27 >> 6) + 8] |= 1 << v27;
    v34 = (uint64_t *)(v7[6] + 16 * v27);
    *v34 = v25;
    v34[1] = v15;
    v35 = (uint64_t *)(v7[7] + 40 * v27);
    *v35 = v25;
    v35[1] = v15;
    v35[2] = v58;
    v35[3] = v21;
    v35[4] = v23;
    v36 = v7[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_29;
    v7[2] = v38;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v12 += 5;
    v11 = v57 - 1;
    if (v57 == 1)
      goto LABEL_3;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  sub_1BB874560();
  __break(1u);
}

uint64_t sub_1BA6015EC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v5 = *v2;
  sub_1BA60192C();
  v40 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 40 * v21);
      v33 = v32[1];
      v34 = v32[3];
      v41 = *v32;
      v42 = v32[2];
      v35 = v32[4];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 40 * v17);
      *v19 = v41;
      v19[1] = v33;
      v19[2] = v42;
      v19[3] = v34;
      v19[4] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1BA60192C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9B00)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9B00);
  }
}

uint64_t sub_1BA601990(uint64_t a1)
{
  uint64_t v2;

  sub_1BA7916B4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA6019CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7916B4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA601A10(_QWORD *a1)
{
  return FormatContent.Resolved.encode(to:)(a1);
}

uint64_t FormatContent.Resolved.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  _QWORD v41[2];
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;

  v2 = v1;
  sub_1BA6D940C(0);
  MEMORY[0x1E0C80A78](v4);
  v43 = (uint64_t)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA64D4AC(0);
  MEMORY[0x1E0C80A78](v6);
  v44 = (uint64_t)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB145BDC();
  v45 = v8;
  MEMORY[0x1E0C80A78](v8);
  v46 = (uint64_t)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C5ACC(0);
  v47 = v10;
  MEMORY[0x1E0C80A78](v10);
  v48 = (uint64_t)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB145C50();
  v49 = v12;
  MEMORY[0x1E0C80A78](v12);
  v50 = (uint64_t)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF9D634();
  v51 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39C118, (uint64_t (*)(void))sub_1BA6031FC, (uint64_t)&_s8ResolvedV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v41 - v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6031FC();
  sub_1BB8746C8();
  LOBYTE(v54) = 0;
  v22 = v18;
  v23 = v52;
  sub_1BB87417C();
  if (v23)
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v42 = v16;
  v52 = v19;
  v24 = (int *)type metadata accessor for FormatContent.Resolved();
  LOBYTE(v54) = 1;
  sub_1BB86C8B0();
  sub_1BA4A2870((unint64_t *)&unk_1ED3B0510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1BB8741AC();
  v54 = *(_QWORD *)(v2 + v24[6]);
  v53 = 2;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v26 = v25;
  v27 = sub_1BA585B04((unint64_t *)&qword_1ED39DA10, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  v41[0] = v27;
  v41[1] = v26;
  v28 = v24;
  v54 = *(_QWORD *)(v2 + v24[7]);
  v53 = 3;
  sub_1BA865108(0);
  sub_1BA603240(&qword_1ED39BEF0, (uint64_t (*)(uint64_t))sub_1BA865108, sub_1BB145E18, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  v54 = *(_QWORD *)(v2 + v24[8]);
  v53 = 4;
  sub_1BA4AD288(0, &qword_1ED3CF790, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB145E34(&qword_1ED3AAEC0, (uint64_t (*)(void))sub_1BA82B51C, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  v54 = *(_QWORD *)(v2 + v24[9]);
  v53 = 5;
  sub_1BA584114();
  sub_1BA603240((unint64_t *)&qword_1ED39BE80, (uint64_t (*)(uint64_t))sub_1BA584114, sub_1BA836320, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  v54 = *(_QWORD *)(v2 + v24[10]);
  v53 = 6;
  sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B96C0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
  sub_1BA64D430((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
  sub_1BB8741AC();
  v29 = swift_unknownObjectRetain();
  v30 = (uint64_t)v42;
  sub_1BA60552C(v29, (uint64_t)v42);
  LOBYTE(v54) = 7;
  sub_1BA603240(&qword_1ED39A618, (uint64_t (*)(uint64_t))sub_1BAF9D634, (uint64_t (*)(void))sub_1BB145EB0, MEMORY[0x1E0DEE988]);
  sub_1BB8741AC();
  sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))sub_1BAF9D634);
  v32 = *(void **)(v2 + v24[12]);
  v33 = v32;
  v34 = v32;
  v35 = v50;
  sub_1BA60515C(v34, v50);
  LOBYTE(v54) = 8;
  sub_1BA603240(&qword_1ED39EE38, (uint64_t (*)(uint64_t))sub_1BB145C50, (uint64_t (*)(void))sub_1BB145F18, MEMORY[0x1E0DEE988]);
  sub_1BB8741AC();
  sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))sub_1BB145C50);
  v36 = swift_unknownObjectRetain();
  v37 = v48;
  sub_1BA605360(v36, v48);
  LOBYTE(v54) = 12;
  sub_1BA603240(&qword_1ED39A638, (uint64_t (*)(uint64_t))sub_1BA6C5ACC, (uint64_t (*)(void))sub_1BA627FFC, MEMORY[0x1E0DEE988]);
  sub_1BB8741AC();
  sub_1BA4A2E80(v37, (uint64_t (*)(_QWORD))sub_1BA6C5ACC);
  LOBYTE(v54) = 13;
  sub_1BA6DB154(0);
  sub_1BA603240(&qword_1ED3A5888, (uint64_t (*)(uint64_t))sub_1BA6DB154, sub_1BB145F80, MEMORY[0x1E0DEE988]);
  sub_1BB8741AC();
  v54 = *(_QWORD *)(v2 + v28[17]);
  v53 = 10;
  sub_1BB8741AC();
  v38 = *(void **)(v2 + v28[15]);
  v39 = v38;
  sub_1BA605730(v38, v46);
  LOBYTE(v54) = 9;
  sub_1BA603240(&qword_1ED39A5D8, (uint64_t (*)(uint64_t))sub_1BB145BDC, (uint64_t (*)(void))sub_1BB145F9C, MEMORY[0x1E0DEE988]);
  sub_1BB8741AC();
  sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))sub_1BB145BDC);
  LOBYTE(v54) = *(_BYTE *)(v2 + v28[16]);
  v53 = 11;
  sub_1BA4AD288(0, &qword_1ED39E098, (uint64_t)&type metadata for FeedSubscriptionPaidAccess, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BA605008();
  sub_1BB8741AC();
  v40 = v43;
  sub_1BA4C2DD8(v2 + v28[18], v43, (uint64_t (*)(_QWORD))sub_1BA6D940C);
  Reference<A>.init(value:)(v40, v44);
  LOBYTE(v54) = 14;
  sub_1BA64D4C8(0);
  sub_1BA4A2870((unint64_t *)&unk_1ED3A0D80, (uint64_t (*)(uint64_t))sub_1BA64D4C8, MEMORY[0x1E0DB5098]);
  sub_1BB87414C();
  sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))sub_1BA64D4AC);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v21, v22);
}

void FormatContent.Resolved.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t *v85;
  int *v86;
  char v87;
  uint64_t v88;

  v74 = a2;
  sub_1BB145BDC();
  MEMORY[0x1E0C80A78](v3);
  v75 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA64D4AC(0);
  MEMORY[0x1E0C80A78](v5);
  v77 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6D940C(0);
  MEMORY[0x1E0C80A78](v7);
  v76 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6DB154(0);
  MEMORY[0x1E0C80A78](v9);
  v78 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v11);
  v79 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB145C50();
  MEMORY[0x1E0C80A78](v13);
  v80 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF9D634();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BB86C8B0();
  v81 = *(_QWORD *)(v18 - 8);
  v82 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39C088, (uint64_t (*)(void))sub_1BA6031FC, (uint64_t)&_s8ResolvedV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v22 = v21;
  v23 = *((_QWORD *)v21 - 1);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v70 - v24;
  v86 = (int *)type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v86);
  v85 = (uint64_t *)((char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = a1[3];
  v83 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_1BA6031FC();
  v28 = v84;
  sub_1BB87468C();
  if (v28)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
  }
  else
  {
    v29 = v20;
    v84 = v17;
    LOBYTE(v88) = 0;
    v30 = sub_1BB874098();
    v31 = v85;
    *v85 = v30;
    v31[1] = v32;
    LOBYTE(v88) = 1;
    sub_1BA4A2870(&qword_1ED3B0528, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v33 = v29;
    v34 = v82;
    sub_1BB8740D4();
    v35 = v86;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))((char *)v31 + v86[5], v33, v34);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v37 = v36;
    v87 = 2;
    v38 = sub_1BA585B04((unint64_t *)&qword_1ED3B95F0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    v73 = v38;
    *(uint64_t *)((char *)v31 + v35[6]) = v88;
    sub_1BA865108(0);
    v87 = 3;
    sub_1BA603240(&qword_1ED39BEF8, (uint64_t (*)(uint64_t))sub_1BA865108, sub_1BB145CC4, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    *(uint64_t *)((char *)v31 + v35[7]) = v88;
    sub_1BA4AD288(0, &qword_1ED3CF790, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v87 = 4;
    sub_1BB145E34(&qword_1ED3AAEC8, (uint64_t (*)(void))sub_1BA82B4D8, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    *(uint64_t *)((char *)v31 + v35[8]) = v88;
    sub_1BA584114();
    v87 = 5;
    sub_1BA603240((unint64_t *)&qword_1ED3B9450, (uint64_t (*)(uint64_t))sub_1BA584114, sub_1BA836304, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    *(uint64_t *)((char *)v31 + v35[9]) = v88;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B96C0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v87 = 6;
    sub_1BA64D430((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    sub_1BB874068();
    v70 = v37;
    v39 = MEMORY[0x1E0DEE9E8];
    if (v88)
      v39 = v88;
    *(uint64_t *)((char *)v31 + v35[10]) = v39;
    sub_1BA625DB0(0, (unint64_t *)&unk_1ED39A600, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v41 = v40;
    LOBYTE(v88) = 7;
    sub_1BB145CE0();
    v42 = (uint64_t)v84;
    v72 = v41;
    sub_1BB874068();
    v71 = v25;
    v43 = v72;
    v44 = *(_QWORD *)(v72 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v72) == 1)
    {
      sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))sub_1BAF9D634);
      v45 = 0;
    }
    else
    {
      sub_1BB86ED1C();
      v45 = v88;
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    }
    v46 = v80;
    *(uint64_t *)((char *)v31 + v35[11]) = v45;
    sub_1BA625DB0(0, (unint64_t *)&unk_1ED39DF90, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    v48 = v47;
    LOBYTE(v88) = 8;
    sub_1BB145D48();
    sub_1BB874068();
    v84 = v22;
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v46, 1, v48) == 1)
    {
      sub_1BA4A2E80(v80, (uint64_t (*)(_QWORD))sub_1BB145C50);
      v50 = 0;
    }
    else
    {
      v51 = v80;
      sub_1BB86ED1C();
      v50 = v88;
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v48);
    }
    *(uint64_t *)((char *)v85 + v86[12]) = v50;
    sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v53 = v52;
    LOBYTE(v88) = 12;
    sub_1BA627F94();
    sub_1BB874068();
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v79, 1, v53) == 1)
    {
      sub_1BA4A2E80(v79, (uint64_t (*)(_QWORD))sub_1BA6C5ACC);
      v55 = 0;
    }
    else
    {
      v56 = v79;
      sub_1BB86ED1C();
      v55 = v88;
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v53);
    }
    *(uint64_t *)((char *)v85 + v86[13]) = v55;
    type metadata accessor for FormatWebEmbed.Resolved();
    LOBYTE(v88) = 13;
    sub_1BA4A2870((unint64_t *)&unk_1ED39B278, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t)"텟+");
    sub_1BB874068();
    sub_1BA5193C4(v78, (uint64_t)v85 + v86[14], (uint64_t (*)(_QWORD))sub_1BA6DB154);
    v87 = 10;
    sub_1BB8740D4();
    *(uint64_t *)((char *)v85 + v86[17]) = v88;
    v87 = 11;
    sub_1BA605080();
    sub_1BB874068();
    *((_BYTE *)v85 + v86[16]) = v88;
    sub_1BA64D4C8(0);
    v58 = v57;
    LOBYTE(v88) = 14;
    sub_1BA4A2870(&qword_1ED3C4030, (uint64_t (*)(uint64_t))sub_1BA64D4C8, MEMORY[0x1E0DB50A0]);
    sub_1BB874068();
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v77, 1, v58) == 1)
    {
      sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))sub_1BA64D4AC);
      v60 = sub_1BB871E24();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v76, 1, 1, v60);
    }
    else
    {
      v61 = v76;
      v62 = v77;
      sub_1BB86ED1C();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v62, v58);
      v63 = sub_1BB871E24();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v61, 0, 1, v63);
    }
    sub_1BA5193C4(v76, (uint64_t)v85 + v86[18], (uint64_t (*)(_QWORD))sub_1BA6D940C);
    sub_1BA625DB0(0, &qword_1ED39A5C8, (uint64_t)&qword_1ED39C000, 0x1E0D58F18, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    v65 = v64;
    LOBYTE(v88) = 9;
    sub_1BB145DB0();
    sub_1BB874068();
    v66 = *(_QWORD *)(v65 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v75, 1, v65) == 1)
    {
      (*(void (**)(char *, char *))(v23 + 8))(v71, v84);
      sub_1BA4A2E80(v75, (uint64_t (*)(_QWORD))sub_1BB145BDC);
      v67 = 0;
    }
    else
    {
      v68 = v75;
      sub_1BB86ED1C();
      (*(void (**)(char *, char *))(v23 + 8))(v71, v84);
      v67 = v88;
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v68, v65);
    }
    v69 = (uint64_t)v85;
    *(uint64_t *)((char *)v85 + v86[15]) = v67;
    sub_1BA4C2DD8(v69, v74, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    sub_1BA4A2E80(v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  }
}

unint64_t sub_1BA6031FC()
{
  unint64_t result;

  result = qword_1ED39B1C0;
  if (!qword_1ED39B1C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EEB94, &_s8ResolvedV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED39B1C0);
  }
  return result;
}

uint64_t sub_1BA603240(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9 = a3();
    result = MEMORY[0x1BCCE5B24](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA6032A4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = (void *)sub_1BB86E854();
  type metadata accessor for FormatPackageInventory();
  sub_1BB86E77C();

  v7 = (void *)sub_1BB86E854();
  sub_1BB86E77C();

  v8 = a3[52];
  v9 = a3[53];
  __swift_project_boxed_opaque_existential_1(a3 + 49, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8))(a4, v8, v9);
  v10 = a3 + 54;
  v12 = a3[57];
  v11 = a3[58];
  __swift_project_boxed_opaque_existential_1(v10, v12);
  type metadata accessor for FormatContent.Resolved();
  v13 = swift_bridgeObjectRetain();
  v14 = sub_1BB140250(v13);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v14, v12, v11);
  swift_bridgeObjectRelease();
  v15 = sub_1BB86EBE4();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_1BA603410(uint64_t a1)
{
  return sub_1BA603430(a1);
}

uint64_t sub_1BA603430(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v9 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v10 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BB8179F8(v9, (uint64_t)v7);
      type metadata accessor for FormatWebEmbed();
      v11 = sub_1BB86C5A4();
      sub_1BB817A3C((uint64_t)v7);
      if ((v11 & 1) != 0)
        break;
      v9 += v10;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 48));
    v13 = sub_1BB86EE48();
    *(_QWORD *)(swift_allocObject() + 16) = v13;
    swift_bridgeObjectRetain();
    sub_1BB86EC08();
    swift_release();
    v14 = (void *)sub_1BB86E854();
    v12 = sub_1BB86E98C();
    swift_bridgeObjectRelease();
    swift_release();

  }
  else
  {
LABEL_6:
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  return v12;
}

uint64_t sub_1BA60362C(uint64_t a1)
{
  return sub_1BA60364C(a1);
}

uint64_t sub_1BA60364C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v3 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0DEE9D8];
  v34 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v30 = a1;
    v31 = v1;
    v9 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v10 = a1 + v9;
    v11 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    v32 = xmmword_1BB87CE70;
    do
    {
      sub_1BA4C2DD8(v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA4B07F0(0, &qword_1ED3AB910, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = v32;
      sub_1BA4C2DD8((uint64_t)v6, v12 + v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v13 = sub_1BB47B828();
      v33 = v12;
      sub_1BA604D90(v13);
      v14 = v33;
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA604D90(v14);
      v10 += v11;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v7 = v34;
    v1 = v31;
  }
  if (*(_QWORD *)(v7 + 16))
  {
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA9385B8(v15);
    v18 = v17;
    swift_bridgeObjectRelease();
    if (qword_1ED3A6A08 != -1)
      swift_once();
    v19 = (void *)qword_1ED476638;
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v20 + 32) = v16;
    *(_QWORD *)(v20 + 40) = v18;
    v21 = v19;
    swift_bridgeObjectRetain();
    v22 = sub_1BB87330C();
    sub_1BB86EF44("Web embed data source manager will prepare visualizations %{public}@", 68, 2, &dword_1BA493000, v21, v22, v20);

    v23 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v23);
    *(&v30 - 2) = v1;
    *(&v30 - 1) = v7;
    sub_1BB86EC14();
    swift_bridgeObjectRelease();
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v16;
    *(_QWORD *)(v24 + 24) = v18;
    swift_bridgeObjectRetain();
    v25 = (void *)sub_1BB86E854();
    sub_1BB86E974();
    swift_release();
    swift_release();

    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v16;
    *(_QWORD *)(v26 + 24) = v18;
    v27 = (void *)sub_1BB86E854();
    v28 = sub_1BB86EA1C();
    swift_release();
    swift_release();

  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1BA4D787C(0, (unint64_t *)&qword_1ED3B0900, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  return v28;
}

uint64_t FormatPluginFactory.prepare(content:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  BOOL v34;
  uint64_t v35;
  _QWORD *v36;
  BOOL v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[9];
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v4 = type metadata accessor for WebEmbedDataVisualization();
  v48 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v42 = (_QWORD *)((char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)v41 - v8;
  v47 = type metadata accessor for FormatWebEmbed.Resolved();
  v9 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v11 = (_QWORD *)((char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v12 = *(_QWORD *)(v1 + 192);
  v13 = *a1;
  v14 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1BA761FE4(v13, v14, v12);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BA6EE5AC(&v53, v13, v14);
    swift_endAccess();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatContent.Resolved();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_1BB140250(v17);
    swift_bridgeObjectRelease();
    v51 = *(_QWORD *)(v18 + 16);
    if (v51)
    {
      v19 = *(_QWORD *)(v2 + 184);
      v20 = (uint64_t *)(v19 + 136);
      v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v41[8] = v18;
      v50 = v18 + v21;
      v43 = v19 + 128;
      v41[7] = v19 + 120;
      v41[6] = v19 + 112;
      v41[5] = v19 + 104;
      v41[4] = v19 + 96;
      v41[3] = v19 + 88;
      v41[2] = v19 + 80;
      v45 = v19;
      v41[1] = v19 + 72;
      swift_beginAccess();
      v22 = v9;
      v23 = 0;
      v49 = *(_QWORD *)(v22 + 72);
      v24 = (uint64_t)v46;
      v44 = v20;
      while (1)
      {
        sub_1BA4C2DD8(v50 + v49 * v23, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
        v25 = *v20;
        v26 = *v11;
        v27 = v11[1];
        if (!*(_QWORD *)(*v20 + 16))
          goto LABEL_22;
        v28 = v4;
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v29 = sub_1BB874608();
        v30 = -1 << *(_BYTE *)(v25 + 32);
        v31 = v29 & ~v30;
        if (((*(_QWORD *)(v25 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
          goto LABEL_21;
        v32 = *(_QWORD *)(v25 + 48);
        v33 = (_QWORD *)(v32 + 16 * v31);
        v34 = *v33 == v26 && v33[1] == v27;
        if (!v34 && (sub_1BB874398() & 1) == 0)
          break;
LABEL_4:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v4 = v28;
        v24 = (uint64_t)v46;
        v20 = v44;
LABEL_5:
        ++v23;
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
        if (v23 == v51)
          return swift_bridgeObjectRelease();
      }
      v35 = ~v30;
      while (1)
      {
        v31 = (v31 + 1) & v35;
        if (((*(_QWORD *)(v25 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
          break;
        v36 = (_QWORD *)(v32 + 16 * v31);
        v37 = *v36 == v26 && v36[1] == v27;
        if (v37 || (sub_1BB874398() & 1) != 0)
          goto LABEL_4;
      }
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v28;
      v24 = (uint64_t)v46;
      v20 = v44;
LABEL_22:
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(&v52, v26, v27);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1BB044324((uint64_t)v11 + *(int *)(v47 + 32), v24);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v24, 1, v4) == 1)
      {
        sub_1BB044380(v24);
      }
      else
      {
        v38 = v42;
        sub_1BA4C2DD8(v24, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          v40 = *v38;
          sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          __asm { BR              X9 }
        }
        sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      }
      swift_retain();
      v39 = swift_retain();
      sub_1BB4346F8(v39);
      swift_release();
      swift_release();
      goto LABEL_5;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FormatContentSubgroup.ResolvedContainer.webEmbeds.getter()
{
  return sub_1BB4A5B68(sub_1BB4A4338);
}

uint64_t _s8ResolvedVwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t sub_1BA603FE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;

  v2 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for FormatWebEmbed.Resolved();
  v51 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v53 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatContentSlotItemResolution();
  v47 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6DB154(0);
  MEMORY[0x1E0C80A78](v9);
  v49 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v52 = (uint64_t)&v45 - v13;
  v57 = type metadata accessor for WebEmbedDataVisualization();
  v14 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v59 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v56 = (char *)&v45 - v17;
  MEMORY[0x1E0C80A78](v18);
  v48 = (uint64_t)&v45 - v19;
  MEMORY[0x1E0C80A78](v20);
  v46 = (uint64_t)&v45 - v21;
  v22 = type metadata accessor for FormatContent.Resolved();
  v58 = (char *)*(int *)(v22 + 32);
  v23 = swift_bridgeObjectRetain();
  v24 = sub_1BB140250(v23);
  swift_bridgeObjectRelease();
  v25 = sub_1BA604DA4(v24);
  v55 = 0;
  v26 = v54;
  swift_bridgeObjectRelease();
  v61 = v25;
  v27 = *(int *)(v22 + 56);
  v28 = v49;
  v50 = a1;
  sub_1BA4C2DD8(a1 + v27, v49, (uint64_t (*)(_QWORD))sub_1BA6DB154);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v28, 1, v26);
  v30 = v57;
  if (v29 == 1)
  {
    sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))sub_1BA6DB154);
    v31 = v52;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v52, 1, 1, v30);
LABEL_4:
    sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    goto LABEL_10;
  }
  v31 = v52;
  sub_1BA4C2DD8(v28 + *(int *)(v26 + 32), v52, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v31, 1, v30) == 1)
    goto LABEL_4;
  v32 = v46;
  sub_1BA5193C4(v31, v46, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  sub_1BA4C2DD8(v32, v48, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_1BA7F2600(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
  v34 = *(_QWORD *)(v25 + 16);
  v33 = *(_QWORD *)(v25 + 24);
  if (v34 >= v33 >> 1)
    v25 = sub_1BA7F2600(v33 > 1, v34 + 1, 1, v25);
  *(_QWORD *)(v25 + 16) = v34 + 1;
  sub_1BA5193C4(v48, v25+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v34, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v61 = v25;
  sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
LABEL_10:
  v35 = swift_bridgeObjectRetain();
  v36 = sub_1BB14027C(v35);
  swift_bridgeObjectRelease();
  v60 = MEMORY[0x1E0DEE9D8];
  v49 = *(_QWORD *)(v36 + 16);
  if (v49)
  {
    v48 = v36 + 32;
    v46 = v36;
    swift_bridgeObjectRetain();
    v37 = 0;
    v55 = v2;
    v58 = v4;
    do
    {
      v38 = (_QWORD *)(v48 + 16 * v37);
      v39 = *v38;
      if (*(_QWORD *)(*v38 + 16))
      {
        v51 = *v38;
        v52 = v37;
        v40 = v38[1];
        v41 = v39 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
        swift_bridgeObjectRetain_n();
        v50 = v40;
        swift_bridgeObjectRetain();
        sub_1BA4C2DD8(v41, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
        sub_1BA4C2DD8((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
        v42 = (char *)&loc_1BA6044F4 + 4 * byte_1BB87FCA0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      ++v37;
      sub_1BA604D90(MEMORY[0x1E0DEE9D8]);
    }
    while (v37 != v49);
    swift_bridgeObjectRelease_n();
    v43 = v60;
  }
  else
  {
    swift_bridgeObjectRelease();
    v43 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA604D90(v43);
  return v61;
}

uint64_t sub_1BA604728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;

  v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1BA604764(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  BOOL v28;
  _QWORD *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  int64_t v42;
  unint64_t v43;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_1BB38D1DC(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_1BA604B78((uint64_t)v40, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v13 = v4[2];
    v14 = __OFADD__(v13, result);
    v15 = v13 + result;
    if (v14)
    {
      __break(1u);
      goto LABEL_51;
    }
    v4[2] = v15;
  }
  if (result != v12)
    goto LABEL_13;
LABEL_16:
  v2 = v4[2];
  v7 = v41;
  v38 = v40[1];
  v39 = v40[0];
  v6 = v42;
  v37 = v41;
  if (!v43)
  {
LABEL_51:
    v30 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      return result;
    }
    v21 = (unint64_t)(v7 + 64) >> 6;
    if (v30 >= v21)
      goto LABEL_13;
    v34 = *(_QWORD *)(v38 + 8 * v30);
    if (!v34)
    {
      v35 = v6 + 2;
      if (v6 + 2 >= v21)
        goto LABEL_13;
      v34 = *(_QWORD *)(v38 + 8 * v35);
      if (v34)
      {
LABEL_59:
        v30 = v35;
      }
      else
      {
        if (v6 + 3 >= v21)
          goto LABEL_13;
        v34 = *(_QWORD *)(v38 + 8 * (v6 + 3));
        if (!v34)
          goto LABEL_65;
        v30 = v6 + 3;
      }
    }
LABEL_54:
    v16 = (v34 - 1) & v34;
    v17 = __clz(__rbit64(v34)) + (v30 << 6);
    v6 = v30;
    v7 = v37;
    goto LABEL_18;
  }
  v16 = (v43 - 1) & v43;
  v17 = __clz(__rbit64(v43)) | (v42 << 6);
LABEL_18:
  v18 = (uint64_t *)(*(_QWORD *)(v39 + 56) + 16 * v17);
  v19 = *v18;
  v20 = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v19)
    goto LABEL_13;
  v22 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v23 = v4[3];
    v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v2 + 1)
    {
      v4 = sub_1BB38D1DC((_QWORD *)(v23 > 1), v2 + 1, 1, v4);
      v24 = v4[3] >> 1;
    }
    if (v2 < v24)
      break;
LABEL_20:
    v4[2] = v2;
    if (!v19)
      goto LABEL_13;
  }
  while (1)
  {
    v29 = &v4[2 * v2 + 4];
    *v29 = v19;
    v29[1] = v20;
    ++v2;
    if (!v16)
      break;
    v25 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v26 = v25 | (v6 << 6);
LABEL_26:
    v27 = (uint64_t *)(*(_QWORD *)(v39 + 56) + 16 * v26);
    v19 = *v27;
    v20 = v27[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19)
      v28 = v2 < v24;
    else
      v28 = 0;
    if (!v28)
      goto LABEL_20;
  }
  v30 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v30 >= v22)
      goto LABEL_55;
    v31 = *(_QWORD *)(v38 + 8 * v30);
    if (v31)
      goto LABEL_41;
    v32 = v6 + 2;
    if (v6 + 2 >= v22)
      goto LABEL_55;
    v31 = *(_QWORD *)(v38 + 8 * v32);
    if (!v31)
    {
      if (v6 + 3 >= v22)
        goto LABEL_55;
      v31 = *(_QWORD *)(v38 + 8 * (v6 + 3));
      if (v31)
      {
        v30 = v6 + 3;
        goto LABEL_41;
      }
      v32 = v6 + 4;
      if (v6 + 4 >= v22)
        goto LABEL_55;
      v31 = *(_QWORD *)(v38 + 8 * v32);
      if (!v31)
      {
        v30 = v6 + 5;
        if (v6 + 5 >= v22)
          goto LABEL_55;
        v31 = *(_QWORD *)(v38 + 8 * v30);
        if (!v31)
        {
          v33 = v6 + 6;
          while (v22 != v33)
          {
            v31 = *(_QWORD *)(v38 + 8 * v33++);
            if (v31)
            {
              v30 = v33 - 1;
              goto LABEL_41;
            }
          }
LABEL_55:
          v4[2] = v2;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    v30 = v32;
LABEL_41:
    v16 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v30 << 6);
    v6 = v30;
    goto LABEL_26;
  }
  __break(1u);
LABEL_65:
  v35 = v30 + 3;
  if (v30 + 3 < v21)
  {
    v34 = *(_QWORD *)(v38 + 8 * v35);
    if (v34)
      goto LABEL_59;
    v30 += 4;
    if (v30 >= v21)
      goto LABEL_13;
    v34 = *(_QWORD *)(v38 + 8 * v30);
    if (!v34)
    {
      v36 = v6 + 6;
      while (v21 != v36)
      {
        v34 = *(_QWORD *)(v38 + 8 * v36++);
        if (v34)
        {
          v30 = v36 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  result = sub_1BA6EBD18();
  *(_QWORD *)v1 = v4;
  return result;
}

uint64_t sub_1BA604B78(uint64_t result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_OWORD *)(*(_QWORD *)(a4 + 56) + 16 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v20;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1BA604D90(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BA7F2600, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
}

unint64_t sub_1BA604DA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for WebEmbedDataVisualization();
  v6 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v26 = (uint64_t)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v25 = (uint64_t)v23 - v9;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    return MEMORY[0x1E0DEE9D8];
  v23[2] = v1;
  v11 = type metadata accessor for FormatWebEmbed.Resolved();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v23[1] = a1;
  swift_bridgeObjectRetain();
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = sub_1BA6CAB4C;
  v24 = v14;
  do
  {
    sub_1BA4C2DD8(v13 + *(int *)(v11 + 32), (uint64_t)v5, (uint64_t (*)(_QWORD))v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v27) == 1)
    {
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))v16);
    }
    else
    {
      v17 = v11;
      v18 = v16;
      v19 = v25;
      sub_1BA5193C4((uint64_t)v5, v25, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA5193C4(v19, v26, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_1BA7F2600(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
      v21 = *(_QWORD *)(v15 + 16);
      v20 = *(_QWORD *)(v15 + 24);
      if (v21 >= v20 >> 1)
        v15 = sub_1BA7F2600(v20 > 1, v21 + 1, 1, v15);
      *(_QWORD *)(v15 + 16) = v21 + 1;
      sub_1BA5193C4(v26, v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v21, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v16 = v18;
      v11 = v17;
      v14 = v24;
    }
    v13 += v14;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_1BA605008()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39E540;
  if (!qword_1ED39E540)
  {
    sub_1BA4AD288(255, &qword_1ED39E098, (uint64_t)&type metadata for FeedSubscriptionPaidAccess, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = v1;
    v3 = sub_1BA8397B4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39E540);
  }
  return result;
}

unint64_t sub_1BA605080()
{
  unint64_t result;

  result = qword_1ED39E090;
  if (!qword_1ED39E090)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedSubscriptionPaidAccess, &type metadata for FeedSubscriptionPaidAccess);
    atomic_store(result, (unint64_t *)&qword_1ED39E090);
  }
  return result;
}

uint64_t sub_1BA6050C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;

  v7 = a5(0, a3, a4, MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BA60511C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA6C5A68();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA60515C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v4 = sub_1BB86E008();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB145C50();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = a1;
  v11 = qword_1ED39E348;
  v12 = a1;
  if (v11 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED39E328);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  MEMORY[0x1E0C80A78](v14);
  v20[-2] = sub_1BA49A224(0, (unint64_t *)&qword_1ED3BA820);
  swift_getKeyPath();
  sub_1BB86ED04();

  sub_1BA625DB0(0, (unint64_t *)&unk_1ED39DF90, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v15))
  {
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BB145C50);
    v18 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v10, v16);
    v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a2, v18, 1, v16);
}

uint64_t sub_1BA605360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v4 = sub_1BB86E008();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = a1;
  v11 = qword_1ED39E360;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED39A530);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  MEMORY[0x1E0C80A78](v13);
  v19[-2] = sub_1BA768D08();
  swift_getKeyPath();
  sub_1BB86ED04();
  swift_unknownObjectRelease();
  sub_1BA6C5A68();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v14))
  {
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6C5ACC);
    v17 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v10, v15);
    v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, v17, 1, v15);
}

uint64_t sub_1BA60552C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v4 = sub_1BB86E008();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF9D634();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = a1;
  v11 = qword_1ED39E310;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED39A4E0);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  MEMORY[0x1E0C80A78](v13);
  v19[-2] = sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  swift_getKeyPath();
  sub_1BB86ED04();
  swift_unknownObjectRelease();
  sub_1BA4C3E90(0, (unint64_t *)&unk_1ED39A600, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v14))
  {
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAF9D634);
    v17 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v10, v15);
    v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, v17, 1, v15);
}

uint64_t sub_1BA605730@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v4 = sub_1BB86E008();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB145BDC();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = a1;
  v11 = qword_1ED39E308;
  v12 = a1;
  if (v11 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED39A4C8);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  MEMORY[0x1E0C80A78](v14);
  v20[-2] = sub_1BA49A224(0, (unint64_t *)&qword_1ED39C000);
  swift_getKeyPath();
  sub_1BB86ED04();

  sub_1BA625DB0(0, &qword_1ED39A5C8, (uint64_t)&qword_1ED39C000, 0x1E0D58F18, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v15))
  {
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BB145BDC);
    v18 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v10, v16);
    v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a2, v18, 1, v16);
}

uint64_t Reference<A>.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a2;
  v3 = sub_1BB86E008();
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C0970, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - v7;
  sub_1BA4B07F0(0, &qword_1ED3C20E0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - v10;
  v12 = sub_1BB871E24();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v30 - v17;
  sub_1BA5E01A4(a1, (uint64_t)v11, &qword_1ED3C20E0, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40];
    sub_1BA5C699C(a1, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40]);
    sub_1BA5C699C((uint64_t)v11, &qword_1ED3C20E0, v19);
    v21 = v35;
    v20 = v36;
  }
  else
  {
    v32 = a1;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v22(v15, v18, v12);
    v31 = sub_1BB871DAC();
    v24 = v23;
    v25 = sub_1BB871DD0();
    v27 = v26;
    v30 = *(void (**)(char *, uint64_t))(v13 + 8);
    v30(v15, v12);
    v22(v15, v18, v12);
    if (qword_1ED3A2570 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED3A0D50);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v34, v28, v3);
    sub_1BAC79100(v31, v24, v25, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB86ECF8();
    sub_1BA5C699C(v32, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40]);
    v21 = v35;
    v20 = v36;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v36);
    v30(v18, v12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v37, 1, 1, v20);
}

{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t, double);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a2;
  v3 = sub_1BB86E008();
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB871E24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16);
  v11(v10, a1, v6, v8);
  v20 = sub_1BB871DAC();
  v13 = v12;
  v14 = sub_1BB871DD0();
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v10, v6);
  v23 = a1;
  ((void (*)(char *, uint64_t, uint64_t))v11)(v10, a1, v6);
  if (qword_1ED3A2570 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED3A0D50);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v5, v18, v3);
  sub_1BAC79100(v20, v13, v14, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB86ECF8();
  return ((uint64_t (*)(uint64_t, uint64_t))v17)(v23, v6);
}

{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v23 = a2;
  v3 = sub_1BB86E008();
  v22 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3A5280, type metadata accessor for FeedWeather, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for FeedWeather(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v22 - v14;
  sub_1BA5E01A4(a1, (uint64_t)v8, &qword_1ED3A5280, type metadata accessor for FeedWeather);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BA5C699C(a1, &qword_1ED3A5280, type metadata accessor for FeedWeather);
    sub_1BA5C699C((uint64_t)v8, &qword_1ED3A5280, type metadata accessor for FeedWeather);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39E378, type metadata accessor for FeedWeather, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v23, 1, 1, v16);
  }
  else
  {
    v18 = v23;
    sub_1BB7D1AE4((uint64_t)v8, (uint64_t)v15);
    v24 = 0;
    v25 = 0xE000000000000000;
    sub_1BB872FF4();
    sub_1BB872AFC(v19);
    sub_1BB872FF4();
    sub_1BAA63AB8((uint64_t)v15, (uint64_t)v12);
    if (qword_1ED39E358 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED39A518);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v5, v20, v3);
    sub_1BB86ECF8();
    sub_1BA5C699C(a1, &qword_1ED3A5280, type metadata accessor for FeedWeather);
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FeedWeather);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39E378, type metadata accessor for FeedWeather, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, 0, 1, v21);
  }
}

uint64_t sub_1BA605C64@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA605DD0();
  *a1 = result;
  return result;
}

uint64_t sub_1BA605C98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA605DD0();
  *a1 = result;
  return result;
}

uint64_t sub_1BA605CCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA605DD0();
  *a1 = result;
  return result;
}

uint64_t sub_1BA605D00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA605DD0();
  *a1 = result;
  return result;
}

uint64_t sub_1BA605D34@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA605DD0();
  *a1 = result;
  return result;
}

uint64_t sub_1BA605D68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA605DD0();
  *a1 = result;
  return result;
}

uint64_t sub_1BA605D9C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA605DD0();
  *a1 = result;
  return result;
}

uint64_t sub_1BA605DD0()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

void sub_1BA605E14(uint64_t a1, uint64_t a2)
{
  FormatUserInterfaceValue.encode(to:)(a1, a2);
}

void FormatUserInterfaceValue.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v12[1] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 16);
  v8 = _s10CodingKeysOMa_11(255, v13, v6, v7);
  v9 = MEMORY[0x1BCCE5B24](&unk_1BB8C4500, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8C44B0, v8);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8C4488, v8);
  v14 = v8;
  v15 = v9;
  v16 = v10;
  v17 = v11;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA605F0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v7 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v8 = sub_1BB8741D0();
  v9 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v8);
  v11 = type metadata accessor for VersionedKeyedEncodingContainer(0, v8, v9, v10);
  *(_QWORD *)(v5 - 72) = v11;
  *(_QWORD *)(v5 - 144) = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - v12;
  v14 = v1[3];
  v15 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v14);
  *(_QWORD *)(v5 - 160) = v2;
  sub_1BA6EC1EC(v2, v16, v14, v2, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v13, v7, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v5 - 112) = 0;
  *(_QWORD *)(v5 - 104) = 0;
  *(_BYTE *)(v5 - 96) = 0;
  if (qword_1ED3C2478 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C20);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v19(v4, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v20 = *(_QWORD *)(v3 + 16);
  v21 = *(_QWORD *)(v5 - 136);
  sub_1BA6EE974(*(_QWORD *)(v5 - 128), v5 - 112, v4, (uint64_t)sub_1BA90CF04, 0, *(_QWORD *)(v5 - 72), *(_QWORD *)(v5 - 120), v20);
  sub_1BA4A2E80(v4, type metadata accessor for FormatVersionRequirement);
  if (v21)
    return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v5 - 144) + 8))(v13, *(_QWORD *)(v5 - 72));
  v23 = *(_QWORD *)(v5 - 152);
  v24 = *(_QWORD *)(v5 - 128) + *(int *)(*(_QWORD *)(v5 - 160) + 36);
  *(_OWORD *)(v5 - 112) = xmmword_1BB8A1A10;
  *(_BYTE *)(v5 - 96) = 0;
  v19(v23, v18, v17);
  swift_storeEnumTagMultiPayload();
  v25 = *(_QWORD *)(v5 - 72);
  sub_1BA6EE974(v24, v5 - 112, v23, (uint64_t)sub_1BA90CF04, 0, v25, *(_QWORD *)(v5 - 120), v20);
  sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 144) + 8))(v13, v25);
}

uint64_t sub_1BA606178@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatOptionEnum.init(from:)(a1, a2);
}

uint64_t FormatOptionEnum.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD *v47;
  __int128 v48;
  char v49;
  __int128 v50;
  char v51;

  v46 = a2;
  sub_1BA606648();
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEA82CC();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA8344();
  sub_1BA4A2870(&qword_1ED3D0C40, (uint64_t (*)(uint64_t))sub_1BAEA8344, (uint64_t)&unk_1BB8FFC6C);
  v11 = v47;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v32 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  v42 = v5;
  v43 = v8;
  v13 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_1BB872874();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v15 = v7;
  v17 = v45;
  v16 = v46;
  v18 = v44;
  if ((v13 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v25 = v15;
      v26 = *((_QWORD *)v21 - 2);
      v27 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v28 = swift_bridgeObjectRelease();
      v29 = v10;
      MEMORY[0x1E0C80A78](v28);
      *((_QWORD *)&v39 - 4) = &_s10CodingKeysON_88;
      *((_QWORD *)&v39 - 3) = sub_1BAEA83C4();
      *((_QWORD *)&v39 - 2) = sub_1BA606604();
      *((_QWORD *)&v39 - 1) = sub_1BAEA8408();
      swift_getKeyPath();
      swift_retain();
      v30 = sub_1BAE71220((uint64_t)&unk_1E726D1C0);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v31 = v26;
      *(_QWORD *)(v31 + 8) = v27;
      *(_QWORD *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v27, 1);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v25);
      a1 = v47;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v50 = 0uLL;
  v51 = 0;
  v41 = sub_1BB874098();
  v23 = v22;
  v50 = xmmword_1BB8A1A10;
  v51 = 0;
  v24 = sub_1BB874098();
  v35 = v34;
  v40 = v24;
  v39 = xmmword_1BB8D2D60;
  v50 = xmmword_1BB8D2D60;
  v51 = 0;
  v36 = sub_1BB8740F8();
  v37 = v43;
  if ((v36 & 1) != 0)
  {
    v48 = v39;
    v49 = 0;
    sub_1BA4A2870(&qword_1ED3C4620, (uint64_t (*)(uint64_t))sub_1BA606648, MEMORY[0x1E0DB3610]);
    sub_1BB8740D4();
    v38 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v42, v17);
    v37 = v43;
  }
  else
  {
    v38 = MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v15);
  *v16 = v41;
  v16[1] = v23;
  v16[2] = v40;
  v16[3] = v35;
  v16[4] = v38;
  v32 = (uint64_t)v47;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

unint64_t sub_1BA606604()
{
  unint64_t result;

  result = qword_1ED3C7540;
  if (!qword_1ED3C7540)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8A88, &_s10CodingKeysON_88);
    atomic_store(result, (unint64_t *)&qword_1ED3C7540);
  }
  return result;
}

void sub_1BA606648()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4628)
  {
    sub_1BA50CAA8(255, &qword_1ED3B0CF0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    sub_1BA83EFF8();
    sub_1BA83F060();
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4628);
  }
}

uint64_t sub_1BA6066DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFont.init(from:)(a1, a2);
}

uint64_t FormatFont.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;

  v25 = a2;
  v3 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  *(_QWORD *)&v24 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v10 = (void *)v26;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
    goto LABEL_10;
  v23[0] = v5;
  v23[1] = v3;
  *(_QWORD *)&v26 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v14 = v24;
  v15 = v9;
  if ((v13 & 1) == 0)
  {
LABEL_8:
    sub_1BA606CC4();
    v27 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v16 = sub_1BB8740EC();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v18 = (unint64_t *)(v16 + 40);
  while (1)
  {
    v19 = *v18;
    if (*v18 >= 4)
      break;
    v18 += 2;
    if (!--v17)
      goto LABEL_7;
  }
  v20 = *(v18 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v11 = (void *)swift_allocError();
  *(_QWORD *)v21 = v20;
  *(_QWORD *)(v21 + 8) = v19;
  *(_QWORD *)(v21 + 16) = &unk_1E724FEB8;
  *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v20, v19);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v14);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v11);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA606CC4()
{
  unint64_t result;

  result = qword_1ED3C6408;
  if (!qword_1ED3C6408)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D16D0, &_s10CodingTypeON_172);
    atomic_store(result, (unint64_t *)&qword_1ED3C6408);
  }
  return result;
}

unint64_t sub_1BA606D08()
{
  unint64_t result;

  result = qword_1ED3B4A70;
  if (!qword_1ED3B4A70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSystemFont, &type metadata for FormatSystemFont);
    atomic_store(result, (unint64_t *)&qword_1ED3B4A70);
  }
  return result;
}

unint64_t sub_1BA606D4C()
{
  unint64_t result;

  result = qword_1ED3B4838;
  if (!qword_1ED3B4838)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomFont, &type metadata for FormatCustomFont);
    atomic_store(result, (unint64_t *)&qword_1ED3B4838);
  }
  return result;
}

uint64_t sub_1BA606D90@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA606DB8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA606DB8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (**v11)(char *, _QWORD);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (**v43)(char *, _QWORD);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  unsigned __int8 v60;
  __int128 v61;
  char v62;
  __int128 v63;
  char v64;
  void (**v65)(char *, _QWORD);

  sub_1BA692844();
  v54 = v2;
  v52 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v55 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v56 = v4;
  v53 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v57 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  *(_QWORD *)&v58 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v48 - v8;
  sub_1BAEEC050();
  *(_QWORD *)&v59 = v10;
  v11 = *(void (***)(char *, _QWORD))(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BAEBA9FC();
  sub_1BA4A2870(&qword_1ED3D1580, (uint64_t (*)(uint64_t))sub_1BAEBA9FC, (uint64_t)&unk_1BB8FFC6C);
  v15 = v65;
  sub_1BB87468C();
  v16 = v15;
  if (v15)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v14;
  }
  v17 = v9;
  v51 = v7;
  v18 = v58;
  v65 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v19 = sub_1BB872874();
  v20 = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  v21 = v59;
  if ((v20 & 1) != 0)
  {
    v22 = sub_1BB8740EC();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = (_BYTE *)(v22 + 48);
      while (*v24 != 1)
      {
        v24 += 24;
        if (!--v23)
          goto LABEL_7;
      }
      v14 = *((_QWORD *)v24 - 2);
      v28 = *((_QWORD *)v24 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v29 = sub_1BAE15B3C();
      sub_1BA98D1F0();
      v16 = (void *)swift_allocError();
      *(_QWORD *)v30 = v14;
      *(_QWORD *)(v30 + 8) = v28;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v14, v28, 1);
      v65[1](v13, v21);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v63 = 0uLL;
  v64 = 0;
  v25 = sub_1BB874098();
  v27 = v26;
  v50 = xmmword_1BB8A1A10;
  v63 = xmmword_1BB8A1A10;
  v64 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v50;
    v62 = 0;
    sub_1BB8740D4();
    *(_QWORD *)&v50 = v25;
    v49 = v60;
  }
  else
  {
    v49 = 0;
    *(_QWORD *)&v50 = v25;
  }
  v63 = xmmword_1BB8D2D60;
  v64 = 0;
  sub_1BA4FB6A0();
  v32 = v17;
  sub_1BB8740D4();
  v48 = v27;
  v33 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v18);
  v58 = xmmword_1BB8D2D70;
  v63 = xmmword_1BB8D2D70;
  v64 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v58;
    v62 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v34 = v56;
    v35 = v57;
    sub_1BB8740D4();
    *(_QWORD *)&v58 = a1;
    v36 = v13;
    v37 = v21;
    v38 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v34);
  }
  else
  {
    *(_QWORD *)&v58 = a1;
    v36 = v13;
    v37 = v21;
    v38 = MEMORY[0x1E0DEE9E8];
  }
  v39 = v33;
  v59 = xmmword_1BB8D2D90;
  v63 = xmmword_1BB8D2D90;
  v64 = 0;
  v40 = v36;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v59;
    v62 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v42 = v54;
    v41 = v55;
    sub_1BB8740D4();
    v43 = v65;
    v44 = v48;
    *(_QWORD *)&v59 = v38;
    v45 = v41;
    v36 = v40;
    v46 = sub_1BB86DD08();
    v47 = v45;
    v38 = v59;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v47, v42);
  }
  else
  {
    v46 = MEMORY[0x1E0DEE9D8];
    v43 = v65;
    v44 = v48;
  }
  v43[1](v36, v37);
  type metadata accessor for FormatSlotNode();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v50;
  *(_QWORD *)(v14 + 24) = v44;
  swift_beginAccess();
  *(_BYTE *)(v14 + 32) = v49;
  swift_beginAccess();
  *(_QWORD *)(v14 + 40) = v39;
  swift_beginAccess();
  *(_QWORD *)(v14 + 48) = v38;
  swift_beginAccess();
  *(_QWORD *)(v14 + 56) = v46;
  __swift_destroy_boxed_opaque_existential_1(v58);
  return v14;
}

unint64_t sub_1BA6074C0()
{
  unint64_t result;

  result = qword_1ED3C6C10;
  if (!qword_1ED3C6C10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6820, &_s10CodingKeysON_49);
    atomic_store(result, (unint64_t *)&qword_1ED3C6C10);
  }
  return result;
}

uint64_t sub_1BA607504(_QWORD *a1)
{
  return FormatOptionType.encode(to:)(a1);
}

uint64_t FormatOptionType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(char *, uint64_t, uint64_t);
  _QWORD v37[13];
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v37[11] = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v37[10] = (char *)v37 - v6;
  MEMORY[0x1E0C80A78](v7);
  v37[9] = (char *)v37 - v8;
  MEMORY[0x1E0C80A78](v9);
  v37[8] = (char *)v37 - v10;
  MEMORY[0x1E0C80A78](v11);
  v37[7] = (char *)v37 - v12;
  MEMORY[0x1E0C80A78](v13);
  v37[6] = (char *)v37 - v14;
  MEMORY[0x1E0C80A78](v15);
  v37[5] = (char *)v37 - v16;
  MEMORY[0x1E0C80A78](v17);
  v37[4] = (char *)v37 - v18;
  MEMORY[0x1E0C80A78](v19);
  v37[3] = (char *)v37 - v20;
  MEMORY[0x1E0C80A78](v21);
  v37[2] = (char *)v37 - v22;
  MEMORY[0x1E0C80A78](v23);
  v37[1] = (char *)v37 - v24;
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v37 - v27;
  v29 = *v1;
  v37[12] = a1;
  v38 = v29;
  v30 = a1[3];
  v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v32 = sub_1BB86EB84();
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476C20);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
  v34(v28, v33, v32);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v35 = v39;
  sub_1BA69F160((uint64_t)v28, (uint64_t)sub_1BA90CF04, 0, v30, v31);
  if (!v35)
  {
    v39 = v34;
    sub_1BA4A2E80((uint64_t)v28, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v28, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA607DE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA607EB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BA607E1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA607EB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BA607E50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA607EB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BA607E84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA607EB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BA607EB8()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_1BA607EFC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatItemKind.init(from:)(a1, a2);
}

uint64_t FormatItemKind.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD v29[4];
  _QWORD *v30;

  sub_1BA4CDF6C(0, &qword_1ED3B9BF0, (uint64_t (*)(void))sub_1BA6088A4, (uint64_t)&type metadata for FormatItemKind.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  v10 = v2;
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    v11 = sub_1BB8743B0();
    v14 = v11;
    v15 = v12;
    v16 = v11 == 0x656C6369747261 && v12 == 0xE700000000000000;
    if (v16
      || (sub_1BB874398() & 1) != 0
      || v14 == 0x656E696C64616568 && v15 == 0xE800000000000000
      || (sub_1BB874398() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else if (v14 == 0x6575737369 && v15 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v18 = 1;
    }
    else if (v14 == 0x6465626D45626577 && v15 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v18 = 2;
    }
    else if (v14 == 0x6172546F69647561 && v15 == 0xEA00000000006B63 || (sub_1BB874398() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v18 = 3;
    }
    else if (v14 == 6775156 && v15 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      v18 = 4;
    }
    else
    {
      v30 = a2;
      if ((sub_1BB874398() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = 4;
      }
      else if (v14 == 0x65726F6373 && v15 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = 5;
      }
      else if (v14 == 0x676E69646E617473 && v15 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = 6;
      }
      else if (v14 == 0x74656B63617262 && v15 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = 7;
      }
      else if (v14 == 0x65726F6353786F62 && v15 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = 8;
      }
      else if (v14 == 0x726F6353656E696CLL && v15 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = 9;
      }
      else if (v14 == 0x65527972756A6E69 && v15 == 0xEC00000074726F70 || (sub_1BB874398() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = 10;
      }
      else if (v14 == 0x6579616C5079656BLL && v15 == 0xE900000000000072 || (sub_1BB874398() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = 11;
      }
      else if (v14 == 0x656C7A7A7570 && v15 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = 12;
      }
      else if (v14 == 0x7954656C7A7A7570 && v15 == 0xEA00000000006570 || (sub_1BB874398() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = 13;
      }
      else
      {
        if ((v14 != 0x7453656C7A7A7570 || v15 != 0xEF63697473697461) && (sub_1BB874398() & 1) == 0)
        {
          v26 = sub_1BB873D68();
          v24 = swift_allocError();
          v20 = v19;
          sub_1BA909FB4();
          v22 = *(int *)(v21 + 48);
          v25 = v20;
          v23[1] = (char *)v20 + v22;
          *v20 = MEMORY[0x1E0DEA968];
          __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          sub_1BB87465C();
          v27 = 0;
          v28 = 0xE000000000000000;
          sub_1BB873CB4();
          swift_bridgeObjectRelease();
          v27 = 0xD000000000000017;
          v28 = 0x80000001BB968140;
          sub_1BB872AFC((_QWORD *)0xD000000000000017);
          v10 = (void *)v24;
          swift_bridgeObjectRelease();
          sub_1BB873D38();
          (*(void (**)(_QWORD *, _QWORD))(*(_QWORD *)(v26 - 8) + 104))(v25, *MEMORY[0x1E0DEC460]);
          swift_willThrow();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
          goto LABEL_4;
        }
        swift_bridgeObjectRelease();
        v18 = 14;
      }
      a2 = v30;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    v17 = 0;
    goto LABEL_12;
  }
  v30 = a2;
LABEL_4:
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6088A4();
  sub_1BB87468C();
  LOBYTE(v29[0]) = 0;
  sub_1BA608AB4();
  sub_1BB8740D4();
  LOBYTE(v27) = 1;
  sub_1BA608A70();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  v17 = v29[0];
  v18 = v29[1];
  a2 = v30;
LABEL_12:
  *a2 = v17;
  a2[1] = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA6088A4()
{
  unint64_t result;

  result = qword_1ED3B4048;
  if (!qword_1ED3B4048)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89383C, &type metadata for FormatItemKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B4048);
  }
  return result;
}

uint64_t sub_1BA6088E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;

  v15 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3BB4C8, (uint64_t (*)(void))sub_1BA608A2C, (uint64_t)&type metadata for FormatItemKind.Object.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA608A2C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  v10 = sub_1BB874098();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v9 = v10;
  v9[1] = v12;
  return result;
}

unint64_t sub_1BA608A2C()
{
  unint64_t result;

  result = qword_1ED3BAB38;
  if (!qword_1ED3BAB38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB893944, &type metadata for FormatItemKind.Object.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3BAB38);
  }
  return result;
}

unint64_t sub_1BA608A70()
{
  unint64_t result;

  result = qword_1ED3BAB50;
  if (!qword_1ED3BAB50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8937EC, &type metadata for FormatItemKind.Object);
    atomic_store(result, (unint64_t *)&qword_1ED3BAB50);
  }
  return result;
}

unint64_t sub_1BA608AB4()
{
  unint64_t result;

  result = qword_1ED3BAB30;
  if (!qword_1ED3BAB30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB893814, &type metadata for FormatItemKind.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3BAB30);
  }
  return result;
}

uint64_t sub_1BA608AF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCornerRadius.init(from:)(a1, a2);
}

uint64_t FormatCornerRadius.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v28 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v22 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v22;
      *(_QWORD *)(v23 + 8) = v16;
      *(_QWORD *)(v23 + 16) = &unk_1E726B358;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v22, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA608E3C();
  v26 = 0uLL;
  sub_1BB8740D4();
  if ((v25 & 1) != 0)
  {
    v26 = xmmword_1BB87FC90;
    sub_1BA608EC4();
    sub_1BB874068();
    v17 = v28;
    v18 = ((v25 == 2) | v25);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v19 = 0;
    v20 = v18 & 1;
    v21 = 0x80;
  }
  else
  {
    v25 = xmmword_1BB87FC90;
    sub_1BA608E80();
    sub_1BB8740D4();
    v17 = v28;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v19 = *((_QWORD *)&v26 + 1);
    v20 = v26;
    v21 = v27;
  }
  *(_QWORD *)v17 = v20;
  *(_QWORD *)(v17 + 8) = v19;
  *(_BYTE *)(v17 + 16) = v21;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA608E3C()
{
  unint64_t result;

  result = qword_1ED3C7C08;
  if (!qword_1ED3C7C08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBF80, &_s10CodingTypeON_108);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C08);
  }
  return result;
}

unint64_t sub_1BA608E80()
{
  unint64_t result;

  result = qword_1ED3B5550;
  if (!qword_1ED3B5550)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius.Value, &type metadata for FormatCornerRadius.Value);
    atomic_store(result, (unint64_t *)&qword_1ED3B5550);
  }
  return result;
}

unint64_t sub_1BA608EC4()
{
  unint64_t result;

  result = qword_1ED3BE0A0;
  if (!qword_1ED3BE0A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius.RoundedValue, &type metadata for FormatCornerRadius.RoundedValue);
    atomic_store(result, (unint64_t *)&qword_1ED3BE0A0);
  }
  return result;
}

uint64_t sub_1BA608F08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA608F3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA608F70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA608FA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA608FD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA60900C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA609040@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA609074@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA6090A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA6090DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA609110()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1BA609154@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorAssignComponentProcessor.init(from:)(a1, a2);
}

uint64_t FormatColorAssignComponentProcessor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE889D4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE88A4C();
  sub_1BA4A2870(&qword_1ED3D1410, (uint64_t (*)(uint64_t))sub_1BAE88A4C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v26 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s14descr1E72CBC99O10CodingKeysON;
      *(&v26 - 3) = sub_1BAE88ACC();
      *(&v26 - 2) = sub_1BA6094C4();
      *(&v26 - 1) = sub_1BAE88B10();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726AF20);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA609508();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BA689CD8();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  *(_BYTE *)v12 = v18;
  *(_QWORD *)(v12 + 8) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA6094C4()
{
  unint64_t result;

  result = qword_1ED3CE598;
  if (!qword_1ED3CE598)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCB38, &_s14descr1E72CBC99O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3CE598);
  }
  return result;
}

unint64_t sub_1BA609508()
{
  unint64_t result;

  result = qword_1ED3B60D8;
  if (!qword_1ED3B60D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorComponent, &type metadata for FormatColorComponent);
    atomic_store(result, (unint64_t *)&qword_1ED3B60D8);
  }
  return result;
}

uint64_t sub_1BA60954C()
{
  uint64_t v0;

  return sub_1BA609558(*(_QWORD *)(v0 + 16), *(uint64_t (**)(_QWORD))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BA609558(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  swift_beginAccess();
  swift_retain();
  swift_retain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BA609600(v6, a2, a3, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  *(_QWORD *)(a1 + 56) = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA609600(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v34 = a4;
  v36 = type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
  MEMORY[0x1E0C80A78](v36);
  v35 = (uint64_t)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v29 - v11;
  result = MEMORY[0x1E0DEE9D8];
  v39 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v29[1] = v4;
    v15 = *(_QWORD *)(v10 + 72);
    v32 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v16 = a1 + v32;
    v30 = xmmword_1BB87CE70;
    v33 = a2;
    v31 = v15;
    do
    {
      sub_1BA4C2DD8(v16, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      if ((a2(&v12[*(int *)(v36 + 20)]) & 1) != 0)
      {
        v19 = a3;
        if (qword_1ED3BA7F0 != -1)
          swift_once();
        v20 = (void *)qword_1ED476858;
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = v30;
        v22 = v20;
        v23 = sub_1BB871F50();
        v25 = v24;
        *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v21 + 64) = sub_1BA6A2D8C();
        *(_QWORD *)(v21 + 32) = v23;
        *(_QWORD *)(v21 + 40) = v25;
        v26 = sub_1BB87330C();
        sub_1BB86EF44("Unscheduling request for placement=%{public}@", 45, 2, &dword_1BA493000, v22, v26, v21);

        swift_bridgeObjectRelease();
        swift_retain();
        v37 = sub_1BB871F50();
        v38 = v27;
        sub_1BB86E068();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
        a3 = v19;
        a2 = v33;
        v15 = v31;
      }
      else
      {
        sub_1BA5193C4((uint64_t)v12, v35, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
        v28 = v39;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7A5D0(0, *(_QWORD *)(v28 + 16) + 1, 1);
          v28 = v39;
        }
        v18 = *(_QWORD *)(v28 + 16);
        v17 = *(_QWORD *)(v28 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1BAC7A5D0(v17 > 1, v18 + 1, 1);
          v28 = v39;
        }
        *(_QWORD *)(v28 + 16) = v18 + 1;
        sub_1BA5193C4(v35, v28 + v32 + v18 * v15, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      }
      v16 += v15;
      --v14;
    }
    while (v14);
    return v39;
  }
  return result;
}

uint64_t type metadata accessor for FeedBannerAdRequester.ScheduledRequest()
{
  uint64_t result;

  result = qword_1ED3BC578;
  if (!qword_1ED3BC578)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA609950()
{
  CGFloat *v0;

  return sub_1BA60B8D0(v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1BA609980()
{
  uint64_t v0;

  return sub_1BA609988(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1BA609988(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t result;
  uint64_t v5;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (char *)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0xB8);
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v3 + 16))
  {
    v5 = swift_bridgeObjectRetain();
    sub_1BA609AC0(v5);
  }
  *((_BYTE *)a1 + *(_QWORD *)((*v2 & *a1) + 0xB0)) = 0;
  return result;
}

uint64_t sub_1BA609A30()
{
  uint64_t v0;

  return sub_1BA609A38(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BA609A38(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  if (*((_BYTE *)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0xB0)) != 1)
    sub_1BA609AC0(a2);
  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  sub_1BA55BB48(v2);
  return swift_endAccess();
}

void sub_1BA609AC0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[18];

  v13[7] = a1;
  v2 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v1);
  v3 = sub_1BB870AC8();
  MEMORY[0x1E0C80A78](v3);
  v13[8] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v2[12];
  v6 = v2[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = swift_getAssociatedTypeWitness();
  v13[9] = v6;
  v13[10] = v5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13[11] = v2;
  v11 = v2[14];
  v10 = v2[15];
  v13[4] = v11;
  v13[2] = AssociatedConformanceWitness;
  v13[3] = v10;
  v12 = swift_getAssociatedConformanceWitness();
  v13[12] = AssociatedTypeWitness;
  v13[13] = v8;
  v13[14] = AssociatedConformanceWitness;
  v13[15] = v11;
  v13[16] = v10;
  v13[17] = v12;
  type metadata accessor for FeedBannerAdBlueprintModifier();
}

void sub_1BA609BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  *(_QWORD *)(v10 - 184) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v10 - 176) = a1;
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v10 - 216) = (char *)&a9 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&a9 - v13);
  *((_BYTE *)v9 + *(_QWORD *)(*(_QWORD *)(v10 - 136) + 176)) = 1;
  v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  sub_1BA4C010C((uint64_t)v9 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v9) + 0x90), v10 - 128);
  v16 = (_QWORD *)((char *)v9 + *(_QWORD *)((*v15 & *v9) + 0x98));
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  v17 = *(_QWORD *)(v10 - 168);
  swift_bridgeObjectRetain();
  sub_1BB8711C4();
  FeedBannerAdBlueprintModifier.init(updates:policyValidator:layoutCollection:)(v17, (__int128 *)(v10 - 128), v14);
}

uint64_t sub_1BA609CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v7 - 128) = v5;
  *(_QWORD *)(v7 - 120) = v3;
  *(_QWORD *)(v7 - 112) = v1;
  *(_QWORD *)(v7 - 104) = v6;
  v8 = sub_1BB86FE98();
  v10 = *(_QWORD *)(v7 - 184);
  v9 = *(_QWORD *)(v7 - 176);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 16))(*(_QWORD *)(v7 - 216), v0, v9);
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedBannerAdBlueprintModifier<A, B>, v9);
  *(_QWORD *)(v7 - 128) = sub_1BB86FE80();
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = *(_QWORD *)(v7 - 152);
  v13 = *(_QWORD *)(v7 - 136);
  v14 = *(_QWORD *)(v7 - 144);
  v12[3] = *(_QWORD *)(v13 + 88);
  v12[4] = v14;
  v12[5] = *(_QWORD *)(v13 + 104);
  v12[6] = v2;
  v12[7] = v4;
  v12[8] = v11;
  swift_retain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB8030], v8);
  sub_1BB86FEC8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v9);
  swift_release();
  return swift_release();
}

uint64_t sub_1BA609E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + 8;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4);
  v5 = a1 + *(int *)(a2 + 72);
  v6 = sub_1BB870AC8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1BA609EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  v9(a1 + 8, v6, v8);
  v10 = *(int *)(a3 + 72);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

void FeedBannerAdBlueprintModifier.init(updates:policyValidator:layoutCollection:)(uint64_t a1@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  sub_1BA4CECCC(a2, (uint64_t)(a3 + 1));
  type metadata accessor for FeedBannerAdBlueprintModifier();
}

uint64_t sub_1BA609FB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *(int *)(a1 + 72);
  v4 = sub_1BB870AC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v1, v4);
}

uint64_t sub_1BA609FFC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for FeedBannerAd() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_1BB871F5C() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BA60CAB8(v0 + v2, v0 + v5, *(_QWORD *)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)), *(CGFloat *)(v0 + v6), *(CGFloat *)(v0 + v6 + 8));
}

uint64_t sub_1BA60A090(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  v14 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v9 = *(_QWORD *)(a4(0) - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v12 = a1(&v13, v10);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v13)
      {
        MEMORY[0x1BCCE36AC](v12);
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v10 += v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t sub_1BA60A1C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BA60A1FC(a1, v2[8], v2[9], v2[10], v2[2], v2[3], v2[4], v2[5], a2, v2[6], v2[7]);
}

uint64_t sub_1BA60A1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v50 = a8;
  v51 = a4;
  v52 = a3;
  v58 = a9;
  v16 = sub_1BB8721C0();
  v55 = *(_QWORD *)(v16 - 8);
  v56 = v16;
  MEMORY[0x1E0C80A78](v16);
  v54 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v53);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a5;
  v59 = a5;
  v60 = a6;
  v49 = a7;
  v61 = a7;
  v62 = a11;
  v20 = sub_1BB871680();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v42 - v22;
  v48 = a6;
  v46 = a11;
  v24 = sub_1BB86F778();
  v43 = sub_1BB873A2C();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v26 = (char *)&v42 - v25;
  v27 = *(_QWORD *)(v24 - 8);
  v29 = MEMORY[0x1E0C80A78](v28);
  v44 = (char *)&v42 - v30;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v21 + 16))(v23, a2, v20, v29);
  sub_1BA6D5338();
  v45 = v31;
  v57 = a1;
  sub_1BB871BC0();
  swift_bridgeObjectRetain();
  sub_1BA735370((uint64_t)v19);
  sub_1BB871614();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, v24) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v44, v26, v24);
    v59 = v47;
    v60 = v48;
    v61 = v49;
    v62 = v50;
    v63 = a10;
    v64 = v46;
    type metadata accessor for FeedBannerAdBlueprintModifier();
  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v43);
  if (qword_1ED3BA7F0 != -1)
    swift_once();
  v32 = (id)qword_1ED476858;
  v33 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1BB87CE70;
  sub_1BB871BC0();
  v35 = v54;
  v37 = v55;
  v36 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v54, &v19[*(int *)(v53 + 20)], v56);
  sub_1BA735370((uint64_t)v19);
  v38 = sub_1BB872178();
  v40 = v39;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
  *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v34 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v34 + 32) = v38;
  *(_QWORD *)(v34 + 40) = v40;
  sub_1BB86EF44("Failed to find placement=%{public}@", 35, 2, &dword_1BA493000, v32, v33, v34);

  result = swift_bridgeObjectRelease();
  *v58 = 0;
  return result;
}

void type metadata accessor for FeedBannerAdBlueprintModifier()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA60A610(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, char *, uint64_t);
  char **v65;
  void *v66;
  uint64_t v67;
  void *v68;
  void (*v69)(char *, uint64_t, uint64_t);
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  __int128 v105;
  char *v106;

  v99 = a4;
  v101 = a3;
  v94 = a1;
  v95 = a2;
  sub_1BA6D5338();
  v5 = v4;
  v87 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v86 = v6;
  v88 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B0568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v93 = (char *)&v81 - v8;
  v9 = sub_1BB86CBE0();
  v97 = *(_QWORD *)(v9 - 8);
  v98 = v9;
  MEMORY[0x1E0C80A78](v9);
  v92 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB871B6C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BB8721C0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v90 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v81 - v19;
  v21 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v81 - v25;
  v100 = v5;
  sub_1BB871BC0();
  v96 = v21;
  v27 = &v26[*(int *)(v21 + 20)];
  v28 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v28(v20, v27, v15);
  sub_1BA735370((uint64_t)v26);
  sub_1BB8721A8();
  v29 = *(void (**)(char *, uint64_t))(v16 + 8);
  v91 = v15;
  v29(v20, v15);
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v14, v11) == *MEMORY[0x1E0D527B8])
  {
    v81 = v23;
    v31 = v100;
    v30 = v101;
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    v32 = v99;
    v33 = *(char **)(v99 + 24);
    v34 = *(char **)(v99 + 32);
    v35 = *(char **)(v99 + 56);
    v84 = *(char **)(v99 + 16);
    v102 = v84;
    v103 = v33;
    v83 = v33;
    v82 = v34;
    v104 = v34;
    *(_QWORD *)&v105 = v35;
    v85 = v35;
    sub_1BB871680();
    v36 = (uint64_t)v93;
    sub_1BB871674();
    v38 = v97;
    v37 = v98;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v36, 1, v98) == 1)
    {
      sub_1BB46B9D4(v36);
      goto LABEL_8;
    }
    v39 = v32;
    v40 = v28;
    v41 = v92;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v92, v36, v37);
    v42 = v89;
    v43 = v39;
    v44 = (void *)sub_1BB870AA4();
    if (!v44)
    {
      (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v37);
      v28 = v40;
LABEL_8:
      v69 = (void (*)(char *, uint64_t, uint64_t))v28;
      if (qword_1ED3BA7F0 != -1)
        swift_once();
      v70 = (id)qword_1ED476858;
      v71 = sub_1BB8732F4();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = xmmword_1BB87CE70;
      v73 = (uint64_t)v81;
      sub_1BB871BC0();
      v74 = v90;
      v75 = v91;
      v69(v90, v73 + *(int *)(v96 + 20), v91);
      sub_1BA735370(v73);
      v76 = sub_1BB872178();
      v78 = v77;
      v29(v74, v75);
      *(_QWORD *)(v72 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v72 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v72 + 32) = v76;
      *(_QWORD *)(v72 + 40) = v78;
      sub_1BB86EF44("Failed to find layout for placement=%{public}@", 46, 2, &dword_1BA493000, v70, v71, v72);

      swift_bridgeObjectRelease();
      v102 = v84;
      v103 = v83;
      v104 = v82;
      v105 = *(_OWORD *)(v99 + 40);
      v106 = v85;
      type metadata accessor for FeedBannerAdBlueprintModifier.Errors();
    }
    v45 = v44;
    objc_msgSend(v44, sel_frame);
    v47 = v46;
    v49 = v48;
    v51 = v50;
    v53 = v52;

    MEMORY[0x1E0C80A78](v54);
    v55 = v83;
    *(&v81 - 12) = v84;
    *(&v81 - 11) = v55;
    *(&v81 - 10) = v82;
    *(_OWORD *)(&v81 - 9) = *(_OWORD *)(v43 + 40);
    *(&v81 - 7) = v85;
    *(&v81 - 6) = v30;
    v56 = v42;
    v57 = v30;
    *(&v81 - 5) = v47;
    *(&v81 - 4) = v49;
    *(&v81 - 3) = v51;
    *(&v81 - 2) = v53;
    *(&v81 - 1) = v56;
    sub_1BB86EC14();
    v58 = v87;
    v99 = *(_QWORD *)(v87 + 16);
    v59 = v88;
    ((void (*)(char *, char *, uint64_t))v99)(v88, v57, v31);
    v60 = *(unsigned __int8 *)(v58 + 80);
    v61 = (v60 + 16) & ~v60;
    v94 = v60 | 7;
    v95 = v61 + v86;
    v62 = (v61 + v86 + 7) & 0xFFFFFFFFFFFFFFF8;
    v63 = swift_allocObject();
    v64 = *(void (**)(uint64_t, char *, uint64_t))(v58 + 32);
    v64(v63 + v61, v59, v31);
    v65 = (char **)(v63 + v62);
    *v65 = v47;
    v65[1] = v49;
    v65[2] = v51;
    v65[3] = v53;
    v66 = (void *)sub_1BB86E854();
    sub_1BB86E974();
    swift_release();
    swift_release();

    ((void (*)(char *, char *, uint64_t))v99)(v59, v57, v31);
    v67 = swift_allocObject();
    v64(v67 + v61, v59, v31);
    v68 = (void *)sub_1BB86E854();
    v79 = sub_1BB86EA1C();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v97 + 8))(v92, v98);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1BB871BC0();
    sub_1BA4B07F0(0, &qword_1ED3B0848, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  return v79;
}

uint64_t FeedBannerAdRequester.scheduleRequest(for:placement:position:createContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  double *v57;
  _QWORD *v58;
  uint64_t v59;
  void *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double aBlock;
  uint64_t v80;
  uint64_t (*v81)(uint64_t);
  void *v82;
  uint64_t (*v83)();
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v73 = a3;
  v74 = a4;
  v70 = a1;
  v10 = sub_1BB872610();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB872664();
  v76 = *(_QWORD *)(v14 - 8);
  v77 = v14;
  MEMORY[0x1E0C80A78](v14);
  v75 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1BB871F5C();
  v69 = *(_QWORD *)(v72 - 8);
  v16 = *(_QWORD *)(v69 + 64);
  MEMORY[0x1E0C80A78](v72);
  v71 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FeedBannerAd();
  v68 = *(_QWORD *)(v17 - 8);
  v18 = *(_QWORD *)(v68 + 64);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BB871F50();
  v78 = v6;
  aBlock = *(double *)&v20;
  v80 = v21;
  swift_retain();
  v22 = sub_1BB86E074();
  swift_bridgeObjectRelease();
  swift_release();
  if ((v22 & 1) != 0)
  {
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v23 = (void *)qword_1ED476858;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BB87A390;
    v25 = v23;
    v26 = sub_1BB871F50();
    v28 = v27;
    v29 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
    v30 = sub_1BA6A2D8C();
    *(_QWORD *)(v24 + 64) = v30;
    *(_QWORD *)(v24 + 32) = v26;
    *(_QWORD *)(v24 + 40) = v28;
    aBlock = a5;
    v80 = *(_QWORD *)&a6;
    type metadata accessor for CGPoint(0);
    v31 = sub_1BB872A00();
    *(_QWORD *)(v24 + 96) = v29;
    *(_QWORD *)(v24 + 104) = v30;
    *(_QWORD *)(v24 + 72) = v31;
    *(_QWORD *)(v24 + 80) = v32;
    v33 = sub_1BB87330C();
    sub_1BB86EF44("Ad request already scheduled for placement=%{public}@, position=%{public}@", 74, 2, &dword_1BA493000, v25, v33, v24);

    return swift_bridgeObjectRelease();
  }
  else
  {
    v65 = v13;
    v66 = v11;
    v67 = v10;
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v35 = (void *)qword_1ED476858;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BB87A390;
    v37 = v35;
    v38 = sub_1BB871F50();
    v40 = v39;
    v41 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
    v42 = sub_1BA6A2D8C();
    *(_QWORD *)(v36 + 64) = v42;
    *(_QWORD *)(v36 + 32) = v38;
    *(_QWORD *)(v36 + 40) = v40;
    aBlock = a5;
    v80 = *(_QWORD *)&a6;
    type metadata accessor for CGPoint(0);
    v43 = sub_1BB872A00();
    *(_QWORD *)(v36 + 96) = v41;
    *(_QWORD *)(v36 + 104) = v42;
    *(_QWORD *)(v36 + 72) = v43;
    *(_QWORD *)(v36 + 80) = v44;
    v45 = sub_1BB87330C();
    sub_1BB86EF44("Scheduling ad request for placement=%{public}@, position=%{public}@", 67, 2, &dword_1BA493000, v37, v45, v36);

    swift_bridgeObjectRelease();
    v46 = v78;
    swift_retain();
    v85 = sub_1BB871F50();
    v86 = v47;
    sub_1BB86E05C();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v64 = *(_QWORD *)(v46 + 40);
    sub_1BA4C2DD8(v70, (uint64_t)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
    v48 = v69;
    v49 = v71;
    v50 = a2;
    v51 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v71, v50, v72);
    v52 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    v53 = (v18 + *(unsigned __int8 *)(v48 + 80) + v52) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    v54 = (v16 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
    v55 = (v54 + 23) & 0xFFFFFFFFFFFFFFF8;
    v56 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v19, v56 + v52, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
    (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v56 + v53, v49, v51);
    v57 = (double *)(v56 + v54);
    *v57 = a5;
    v57[1] = a6;
    v58 = (_QWORD *)(v56 + v55);
    v59 = v74;
    *v58 = v73;
    v58[1] = v59;
    *(_QWORD *)(v56 + ((v55 + 23) & 0xFFFFFFFFFFFFFFF8)) = v78;
    v83 = sub_1BA609FFC;
    v84 = v56;
    aBlock = MEMORY[0x1E0C809B0];
    v80 = 1107296256;
    v81 = sub_1BA4F1DD8;
    v82 = &block_descriptor_6;
    v60 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v61 = v75;
    sub_1BB872634();
    v85 = MEMORY[0x1E0DEE9D8];
    sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BA60B87C();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
    v62 = v65;
    v63 = v67;
    sub_1BB873BC4();
    MEMORY[0x1BCCE3D90](0, v61, v62, v60);
    _Block_release(v60);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v62, v63);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v61, v77);
    return swift_release();
  }
}

uint64_t sub_1BA60B3C0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  double MinX;
  double v21;
  double MinY;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  void *v28;
  _QWORD v30[2];
  _QWORD aBlock[6];
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v5 = v4;
  v10 = sub_1BB872610();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BB872664();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (double)*(uint64_t *)(v5 + 64);
  v32.origin.x = a1;
  v32.origin.y = a2;
  v32.size.width = a3;
  v32.size.height = a4;
  MinX = CGRectGetMinX(v32);
  v33.origin.x = a1;
  v33.origin.y = a2;
  v33.size.width = a3;
  v33.size.height = a4;
  v21 = MinX - CGRectGetWidth(v33) * v19;
  v34.origin.x = a1;
  v34.origin.y = a2;
  v34.size.width = a3;
  v34.size.height = a4;
  MinY = CGRectGetMinY(v34);
  v35.origin.x = a1;
  v35.origin.y = a2;
  v35.size.width = a3;
  v35.size.height = a4;
  v23 = MinY - CGRectGetHeight(v35) * v19;
  v36.origin.x = a1;
  v36.origin.y = a2;
  v36.size.width = a3;
  v36.size.height = a4;
  v24 = v19 + v19;
  v25 = v24 * CGRectGetWidth(v36);
  v37.origin.x = a1;
  v37.origin.y = a2;
  v37.size.width = a3;
  v37.size.height = a4;
  v26 = v24 * CGRectGetHeight(v37);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v5;
  *(double *)(v27 + 24) = v21;
  *(double *)(v27 + 32) = v23;
  *(double *)(v27 + 40) = v25;
  *(double *)(v27 + 48) = v26;
  aBlock[4] = sub_1BA60997C;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_18_0;
  v28 = _Block_copy(aBlock);
  swift_retain();
  sub_1BB872634();
  v30[1] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, v11, MEMORY[0x1E0DEF510]);
  sub_1BA60B87C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v18, v14, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return swift_release();
}

uint64_t FeedBannerAdRequester.unscheduleRequests(where:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1BB872610();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB872664();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)(v3 + 40);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_1BA60954C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_12_0;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1BB872634();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, v7, MEMORY[0x1E0DEF510]);
  sub_1BA60B87C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_1BA60B87C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9310)
  {
    sub_1BB872610();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9310);
  }
}

uint64_t sub_1BA60B8D0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t ObjectType;
  void (*v56)(unint64_t, uint64_t, uint64_t);
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGRect v78;

  sub_1BA6D5338();
  v66 = *(_QWORD *)(v9 - 8);
  v67 = v9;
  MEMORY[0x1E0C80A78](v9);
  v63 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v65 = (uint64_t)&v58 - v12;
  v13 = type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
  v71 = *(_QWORD *)(v13 - 8);
  v72 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA60BFD8();
  v17 = v16;
  v73 = *(char **)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v70 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA60BFA0(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (unint64_t *)((char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v58 - v23;
  v25 = sub_1BB86CB08();
  v62 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v68 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1BB8726B8();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x1E0C80A78](v27);
  v31 = (uint64_t *)((char *)&v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = (void *)*((_QWORD *)v4 + 5);
  *v31 = v32;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v28 + 104))(v31, *MEMORY[0x1E0DEF740], v27, v29);
  v33 = v32;
  LOBYTE(v32) = sub_1BB8726D0();
  (*(void (**)(_QWORD *, uint64_t))(v28 + 8))(v31, v27);
  if ((v32 & 1) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v60 = v25;
  if (qword_1ED3BA7F0 != -1)
LABEL_21:
    swift_once();
  v34 = (void *)qword_1ED476858;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
  v74 = a1;
  v75 = a2;
  v76 = a3;
  v77 = a4;
  type metadata accessor for CGRect(0);
  v36 = v34;
  v37 = sub_1BB872A00();
  v39 = v38;
  *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v35 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v35 + 32) = v37;
  *(_QWORD *)(v35 + 40) = v39;
  v40 = sub_1BB87330C();
  sub_1BB86EF44("Processing scheduled requests for rect=%{public}@", 49, 2, &dword_1BA493000, v36, v40, v35);

  swift_bridgeObjectRelease();
  sub_1BB86CAFC();
  v61 = v4 + 56;
  swift_beginAccess();
  v64 = v4;
  v41 = *((_QWORD *)v4 + 7);
  v42 = *(_QWORD *)(v41 + 16);
  swift_bridgeObjectRetain();
  v43 = 0;
  v69 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v43 == v42)
    {
      v45 = 1;
      v43 = v42;
    }
    else
    {
      if (v43 >= *(_QWORD *)(v41 + 16))
      {
        __break(1u);
        goto LABEL_20;
      }
      v46 = (uint64_t)&v70[*(int *)(v17 + 48)];
      sub_1BA4C2DD8(v41+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(_QWORD *)(v71 + 72) * v43, v46, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      v47 = (uint64_t)v21 + *(int *)(v17 + 48);
      *v21 = v43;
      sub_1BA5193C4(v46, v47, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      v45 = 0;
      ++v43;
    }
    v4 = v73;
    (*((void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))v73 + 7))(v21, v45, 1, v17);
    sub_1BA5193C4((uint64_t)v21, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA60BFA0);
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v4 + 6))(v24, 1, v17) == 1)
      break;
    sub_1BA5193C4((uint64_t)&v24[*(int *)(v17 + 48)], (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
    v78.origin.x = a1;
    v78.origin.y = a2;
    v78.size.width = a3;
    v78.size.height = a4;
    if (CGRectContainsPoint(v78, *(CGPoint *)&v15[*(int *)(v72 + 24)]))
    {
      sub_1BA60C058(v15, v65);
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v63, v65, v67);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v69 = sub_1BA6D5324(0, *(_QWORD *)(v69 + 16) + 1, 1, v69);
      v49 = *(_QWORD *)(v69 + 16);
      v48 = *(_QWORD *)(v69 + 24);
      v50 = v49 + 1;
      if (v49 >= v48 >> 1)
      {
        v59 = v49 + 1;
        v51 = sub_1BA6D5324(v48 > 1, v49 + 1, 1, v69);
        v50 = v59;
        v69 = v51;
      }
      v44 = v69;
      *(_QWORD *)(v69 + 16) = v50;
      (*(void (**)(unint64_t, char *, uint64_t))(v66 + 32))(v44+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v49, v63, v67);
      v4 = v68;
      sub_1BB86CAF0();
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
    }
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1BA60BFBC(0);
  sub_1BA4A2870(&qword_1ED3C0310, (uint64_t (*)(uint64_t))sub_1BA60BFBC, MEMORY[0x1E0DEAF28]);
  sub_1BA4A2870((unint64_t *)&unk_1ED3C0318, (uint64_t (*)(uint64_t))sub_1BA60BFBC, MEMORY[0x1E0DEAF58]);
  v52 = v68;
  sub_1BB8731BC();
  swift_endAccess();
  v53 = v64;
  swift_beginAccess();
  if (*((_QWORD *)v53 + 2))
  {
    v54 = *((_QWORD *)v53 + 3);
    swift_endAccess();
    ObjectType = swift_getObjectType();
    v56 = *(void (**)(unint64_t, uint64_t, uint64_t))(v54 + 8);
    swift_unknownObjectRetain();
    v56(v69, ObjectType, v54);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v52, v60);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v52, v60);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
}

void sub_1BA60BFA0(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3C0410, (uint64_t (*)(uint64_t))sub_1BA60BFD8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA60BFBC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C0308, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAdRequester.ScheduledRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BA60BFD8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C0408)
  {
    type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C0408);
  }
}

uint64_t sub_1BA60C040()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA60C04C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA60C058@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  int *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;

  v114 = a2;
  v115 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v115);
  v98 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v97 = (char *)&v92 - v5;
  v6 = sub_1BB871A70();
  MEMORY[0x1E0C80A78](v6);
  v109 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB8721C0();
  v112 = *(_QWORD *)(v8 - 8);
  v113 = v8;
  MEMORY[0x1E0C80A78](v8);
  v94 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v96 = (char *)&v92 - v11;
  MEMORY[0x1E0C80A78](v12);
  v93 = (char *)&v92 - v13;
  MEMORY[0x1E0C80A78](v14);
  v95 = (char *)&v92 - v15;
  sub_1BA60CE50();
  MEMORY[0x1E0C80A78](v16);
  v108 = (uint64_t)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v111 = (uint64_t)&v92 - v19;
  MEMORY[0x1E0C80A78](v20);
  v107 = (uint64_t)&v92 - v21;
  v22 = sub_1BB871B6C();
  v118 = *(_QWORD *)(v22 - 8);
  v119 = v22;
  MEMORY[0x1E0C80A78](v22);
  v92 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v106 = (char *)&v92 - v25;
  MEMORY[0x1E0C80A78](v26);
  v105 = (char *)&v92 - v27;
  sub_1BA60C9F4(0, (unint64_t *)&qword_1ED3B0C10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
  v116 = *(_QWORD *)(v28 - 8);
  v117 = v28;
  MEMORY[0x1E0C80A78](v28);
  v104 = (char *)&v92 - v29;
  v30 = sub_1BB871F5C();
  v102 = *(_QWORD *)(v30 - 8);
  v103 = v30;
  MEMORY[0x1E0C80A78](v30);
  v101 = (char *)&v92 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA60C9F4(0, &qword_1ED3BC268, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  v100 = v32;
  MEMORY[0x1E0C80A78](v32);
  v99 = (uint64_t)&v92 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v92 - v35;
  if (qword_1ED3BA7F0 != -1)
    swift_once();
  v37 = (void *)qword_1ED476858;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1BB87A390;
  v39 = type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
  v40 = &a1[*(int *)(v39 + 20)];
  v41 = v37;
  v42 = sub_1BB871F50();
  v44 = v43;
  v45 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v38 + 56) = MEMORY[0x1E0DEA968];
  v46 = sub_1BA6A2D8C();
  *(_QWORD *)(v38 + 64) = v46;
  *(_QWORD *)(v38 + 32) = v42;
  *(_QWORD *)(v38 + 40) = v44;
  v120 = *(_OWORD *)&a1[*(int *)(v39 + 24)];
  type metadata accessor for CGPoint(0);
  v47 = sub_1BB872A00();
  *(_QWORD *)(v38 + 96) = v45;
  *(_QWORD *)(v38 + 104) = v46;
  v48 = a1;
  *(_QWORD *)(v38 + 72) = v47;
  *(_QWORD *)(v38 + 80) = v49;
  v50 = sub_1BB87330C();
  sub_1BB86EF44("Executing scheduled request for placement=%{public}@, position=%{public}@", 73, 2, &dword_1BA493000, v41, v50, v38);

  swift_bridgeObjectRelease();
  sub_1BB8719B0();
  v52 = v102;
  v51 = v103;
  v53 = v101;
  v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v102 + 16))(v101, v40, v103);
  MEMORY[0x1E0C80A78](v54);
  *(&v92 - 2) = v48;
  sub_1BB871CF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v51);
  v110 = v36;
  v55 = v99;
  sub_1BA60D038((uint64_t)v36, v99);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v56 = *(void **)v55;
    v107 = *(_QWORD *)(v55 + 8);

    v57 = *MEMORY[0x1E0D52790];
    v58 = sub_1BB871B60();
    v59 = v92;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 104))(v92, v57, v58);
    v60 = v119;
    v61 = v118;
    (*(void (**)(char *, _QWORD, uint64_t))(v118 + 104))(v59, *MEMORY[0x1E0D52780], v119);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56))(v108, 1, 1, v117);
    v62 = (int *)v115;
    sub_1BB872178();
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v106, v59, v60);
    sub_1BB872178();
    sub_1BB8720F4();
    swift_bridgeObjectRelease();
    v63 = v96;
    sub_1BB872184();
    v65 = *(_QWORD *)v48;
    v64 = *((_QWORD *)v48 + 1);
    v67 = v112;
    v66 = v113;
    v68 = v94;
    (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v94, v63, v113);
    v69 = v98;
    *(_QWORD *)&v98[v62[6]] = 0x2000;
    v70 = &v69[v62[7]];
    *(_QWORD *)v70 = 0;
    v70[8] = 1;
    *(_OWORD *)&v69[v62[8]] = xmmword_1BB886E80;
    *(_QWORD *)v69 = v65;
    *((_QWORD *)v69 + 1) = v64;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(&v69[v62[5]], v68, v66);
    v71 = v108;
    sub_1BA4C2DD8(v108, v111, (uint64_t (*)(_QWORD))sub_1BA60CE50);
    sub_1BA4A2870(&qword_1ED3D35E0, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BB871BB4();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v63, v66);
    swift_release();
    sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))sub_1BA60CE50);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v59, v119);
  }
  else
  {
    sub_1BA60CF5C();
    v108 = *(_QWORD *)(v55 + *(int *)(v72 + 48));
    v73 = v116;
    v74 = v104;
    v75 = v55;
    v76 = v117;
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 32))(v104, v75, v117);
    v77 = v119;
    v78 = v118;
    v79 = v105;
    (*(void (**)(char *, _QWORD, uint64_t))(v118 + 104))(v105, *MEMORY[0x1E0D527B0], v119);
    v80 = v107;
    (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v107, v74, v76);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56))(v80, 0, 1, v76);
    v81 = (int *)v115;
    sub_1BB872178();
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v106, v79, v77);
    sub_1BB872178();
    sub_1BB8720F4();
    swift_bridgeObjectRelease();
    v82 = v95;
    sub_1BB872184();
    v84 = *(_QWORD *)v48;
    v83 = *((_QWORD *)v48 + 1);
    v86 = v112;
    v85 = v113;
    v87 = v93;
    (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v93, v82, v113);
    v88 = v97;
    *(_QWORD *)&v97[v81[6]] = 0x2000;
    v89 = &v88[v81[7]];
    *(_QWORD *)v89 = 0;
    v89[8] = 1;
    *(_OWORD *)&v88[v81[8]] = xmmword_1BB886E80;
    *(_QWORD *)v88 = v84;
    *((_QWORD *)v88 + 1) = v83;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(&v88[v81[5]], v87, v85);
    v90 = v107;
    sub_1BA4C2DD8(v107, v111, (uint64_t (*)(_QWORD))sub_1BA60CE50);
    sub_1BA4A2870(&qword_1ED3D35E0, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BB871BB4();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v82, v85);
    swift_release();
    sub_1BA4A2E80(v90, (uint64_t (*)(_QWORD))sub_1BA60CE50);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v105, v119);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v104, v117);
  }
  return sub_1BA60CFEC((uint64_t)v110);
}

void sub_1BA60C9F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  unint64_t v8;
  uint64_t v9;
  _QWORD v10[4];

  if (!*a2)
  {
    v6 = sub_1BB871ECC();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53030];
    v10[0] = v6;
    v10[1] = sub_1BB871F5C();
    v10[2] = sub_1BA4A2870(&qword_1ED3D2EF0, v7, MEMORY[0x1E0D53028]);
    v10[3] = MEMORY[0x1E0D531C0];
    v8 = a3(a1, v10);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1BA4AD288(a1, (unint64_t *)&unk_1ED3B9970, (uint64_t)&unk_1E7272028, MEMORY[0x1E0DEEC78]);
}

uint64_t sub_1BA60CAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double *v26;
  char *v27;
  uint64_t v28;
  uint64_t ObjectType;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  CGPoint v45;

  sub_1BA6D5338();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
  v43 = *((_QWORD *)v19 - 1);
  MEMORY[0x1E0C80A78](v19);
  v42 = (uint64_t)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v41 - v22;
  sub_1BA4C2DD8(a1, (uint64_t)&v41 - v22, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  v24 = &v23[v19[5]];
  v25 = sub_1BB871F5C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, a2, v25);
  v26 = (double *)&v23[v19[6]];
  *v26 = a6;
  v26[1] = a7;
  v27 = &v23[v19[7]];
  *(_QWORD *)v27 = a3;
  *((_QWORD *)v27 + 1) = a4;
  swift_retain();
  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v44 == 1 && (v45.x = a6, v45.y = a7, !CGRectContainsPoint(*(CGRect *)(a5 + 72), v45)))
  {
    v35 = v42;
    sub_1BA4C2DD8((uint64_t)v23, v42, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
    v36 = (unint64_t *)(a5 + 56);
    swift_beginAccess();
    v37 = *(_QWORD *)(a5 + 56);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a5 + 56) = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v37 = sub_1BB38FD2C(0, *(_QWORD *)(v37 + 16) + 1, 1, v37);
      *v36 = v37;
    }
    v40 = *(_QWORD *)(v37 + 16);
    v39 = *(_QWORD *)(v37 + 24);
    if (v40 >= v39 >> 1)
    {
      v37 = sub_1BB38FD2C(v39 > 1, v40 + 1, 1, v37);
      *v36 = v37;
    }
    *(_QWORD *)(v37 + 16) = v40 + 1;
    sub_1BA5193C4(v35, v37+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v40, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
    swift_endAccess();
    v33 = (uint64_t)v23;
  }
  else
  {
    sub_1BA60C058(v23, (uint64_t)v18);
    swift_beginAccess();
    if (!*(_QWORD *)(a5 + 16))
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      return swift_endAccess();
    }
    v28 = *(_QWORD *)(a5 + 24);
    swift_endAccess();
    ObjectType = swift_getObjectType();
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9CB0, (uint64_t (*)(uint64_t))sub_1BA6D5338, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v30 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 16))(v31 + v30, v18, v15);
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 8);
    swift_unknownObjectRetain();
    v32(v31, ObjectType, v28);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v33 = (uint64_t)v23;
  }
  return sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
}

void sub_1BA60CE50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0C18)
  {
    sub_1BA60C9F4(255, (unint64_t *)&qword_1ED3B0C10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0C18);
  }
}

uint64_t sub_1BA60CEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = type metadata accessor for FeedBannerAd();
  v5 = a1 + *(int *)(v4 + 20);
  v6 = sub_1BB8721C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + *(int *)(v4 + 32) + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_1BB871F5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_release();
}

void sub_1BA60CF5C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B0C08)
  {
    sub_1BA60C9F4(255, (unint64_t *)&qword_1ED3B0C10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
    sub_1BA60C9F4(255, qword_1ED3D2F10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D536E8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B0C08);
  }
}

uint64_t sub_1BA60CFEC(uint64_t a1)
{
  uint64_t v2;

  sub_1BA60C9F4(0, &qword_1ED3BC268, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA60D038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA60C9F4(0, &qword_1ED3BC268, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA60D08C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatHeadlineBinding.Text.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.Text.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA60D770();
    v23 = 0;
    v24 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726C220;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA60D338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 144) = xmmword_1BB87FC90;
  sub_1BA60D7B4();
  sub_1BB874068();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BA60D710);
  }
  JUMPOUT(0x1BA60D218);
}

void sub_1BA60D3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  *(_OWORD *)(v4 - 144) = xmmword_1BB87FC90;
  sub_1BA60D7B4();
  sub_1BB874068();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v5 = *(_QWORD *)(v4 - 112);
    if (v5 == 3)
    {
      v6 = 0;
      v7 = 0uLL;
      v5 = 1;
      v8 = 0uLL;
    }
    else
    {
      v6 = *(_QWORD *)(v4 - 88);
      v8 = *(_OWORD *)(v4 - 104);
      v7 = *(_OWORD *)(v4 - 128);
    }
    v9 = *(_QWORD *)(v4 - 72);
    *(_OWORD *)v9 = v7;
    *(_QWORD *)(v9 + 16) = v5;
    *(_OWORD *)(v9 + 24) = v8;
    *(_QWORD *)(v9 + 40) = v6;
    *(_BYTE *)(v9 + 48) = 1;
    JUMPOUT(0x1BA60D310);
  }
  JUMPOUT(0x1BA60D218);
}

void sub_1BA60D464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D4F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D5F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  *(_OWORD *)(v4 - 128) = xmmword_1BB87FC90;
  sub_1BA60D7F8();
  sub_1BB874068();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v5 = *(unsigned __int8 *)(v4 - 144);
    if (v5 == 2)
    {
      v6 = 0uLL;
      v7 = 0uLL;
    }
    else
    {
      v7 = 0uLL;
      v6 = v5 & 1;
      LOBYTE(v5) = 2;
    }
    v8 = *(_QWORD *)(v4 - 72);
    *(_OWORD *)v8 = v6;
    *(_QWORD *)(v8 + 16) = 0;
    *(_OWORD *)(v8 + 24) = v7;
    *(_QWORD *)(v8 + 40) = 0;
    *(_BYTE *)(v8 + 48) = v5;
    JUMPOUT(0x1BA60D310);
  }
  JUMPOUT(0x1BA60D218);
}

void sub_1BA60D658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 128) = xmmword_1BB87FC90;
  sub_1BAE9926C();
  sub_1BB874068();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BA60D6B4);
  }
  JUMPOUT(0x1BA60D218);
}

void sub_1BA60D6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D708);
}

void sub_1BA60D6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA60D700);
}

unint64_t sub_1BA60D770()
{
  unint64_t result;

  result = qword_1ED3C98F8;
  if (!qword_1ED3C98F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92E094, &_s14descr1E7323649C4TextO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C98F8);
  }
  return result;
}

unint64_t sub_1BA60D7B4()
{
  unint64_t result;

  result = qword_1ED3B0C48;
  if (!qword_1ED3B0C48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat, &type metadata for FormatDateFormat);
    atomic_store(result, (unint64_t *)&qword_1ED3B0C48);
  }
  return result;
}

unint64_t sub_1BA60D7F8()
{
  unint64_t result;

  result = qword_1ED3C5020;
  if (!qword_1ED3C5020)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineTrackDurationFormat, &type metadata for FormatHeadlineTrackDurationFormat);
    atomic_store(result, (unint64_t *)&qword_1ED3C5020);
  }
  return result;
}

uint64_t sub_1BA60D83C(_QWORD *a1)
{
  return FormatSymbolImage.encode(to:)(a1);
}

uint64_t FormatSymbolImage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v60;
  char *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v61 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v65 = (char *)&v60 - v6;
  MEMORY[0x1E0C80A78](v7);
  v66 = (char *)&v60 - v8;
  MEMORY[0x1E0C80A78](v9);
  v72 = (char *)&v60 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v60 - v12;
  sub_1BAE746D8(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v1 + 8);
  v74 = *(_QWORD *)v1;
  v18 = *(_QWORD *)(v1 + 16);
  v19 = *(_BYTE *)(v1 + 24);
  v20 = *(_QWORD *)(v1 + 32);
  v70 = *(_QWORD *)(v1 + 40);
  v71 = v20;
  v69 = *(unsigned __int16 *)(v1 + 48);
  v21 = *(_QWORD *)(v1 + 56);
  v67 = *(_QWORD *)(v1 + 64);
  v68 = v21;
  v22 = *(_QWORD *)(v1 + 72);
  v63 = *(_QWORD *)(v1 + 80);
  v64 = v22;
  v62 = *(unsigned __int8 *)(v1 + 88);
  v60 = *(_QWORD *)(v1 + 96);
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v25 = sub_1BAE745D0();
  v26 = sub_1BA4A2870(&qword_1ED3D0CD0, (uint64_t (*)(uint64_t))sub_1BAE745D0, (uint64_t)&unk_1BB8FFC6C);
  v76 = v16;
  v27 = (uint64_t)v16;
  v28 = v19;
  v29 = v74;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSymbolImage, v30, v23, (uint64_t)&type metadata for FormatSymbolImage, v25, (uint64_t)&type metadata for FormatVersions.JazzkonC, v24, v27, v26, (uint64_t)&off_1E734BD80);
  sub_1BA60DF54(v29, v17, v18, v28);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v31 = sub_1BB86EB84();
  v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476C20);
  v73 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  v73(v13, v32, v31);
  v33 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v34 = v75;
  sub_1BAD1ED30(v29, v17, v18, v28, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0);
  if (v34)
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    sub_1BA60DFC4(v29, v17, v18, v28);
    v35 = (uint64_t)v76;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    sub_1BA60DFC4(v29, v17, v18, v28);
    v36 = (uint64_t)v72;
    v73(v72, v32, v31);
    swift_storeEnumTagMultiPayload();
    v38 = v70;
    v37 = v71;
    v39 = v69;
    sub_1BA740E74(v71, v70, v69);
    v35 = (uint64_t)v76;
    sub_1BAD630B0(v37, v38, v39, 1, 0, 0, v36, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
    sub_1BA740460(v37, v38, v39);
    v40 = v33;
    v41 = v31;
    sub_1BA6F3F88();
    v43 = (uint64_t)v66;
    v44 = &v66[*(int *)(v42 + 48)];
    v45 = &v66[*(int *)(v42 + 64)];
    sub_1BA60DEE4(v68);
    if (qword_1ED3C6D40 != -1)
      swift_once();
    v46 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476BC0);
    v47 = v31;
    v48 = v73;
    v73((char *)v43, v46, v47);
    if (qword_1ED3C4170 != -1)
      swift_once();
    v49 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED476998);
    v48(v44, v49, v41);
    *(_QWORD *)v45 = 0;
    *((_QWORD *)v45 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    v50 = v68;
    sub_1BAD63304(v68, v67, 2, 0, 0, v43, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
    sub_1BA60DF1C(v50);
    v74 = v40;
    v75 = 0;
    v52 = v63;
    v51 = v64;
    v53 = v62;
    sub_1BA69C808(v64, v63, v62);
    if (qword_1ED3C6D00 != -1)
      swift_once();
    v54 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED476B48);
    v55 = (uint64_t)v65;
    v73(v65, v54, v41);
    swift_storeEnumTagMultiPayload();
    v56 = v75;
    sub_1BAD2BBA8(v51, v52, v53, 3, 0, 0, v55, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE51CDC, (uint64_t (*)(uint64_t))sub_1BAE74750, &qword_1ED3AE800);
    sub_1BA4A2E80(v55, type metadata accessor for FormatVersionRequirement);
    sub_1BA69C828(v51, v52, v53);
    if (!v56)
    {
      v57 = (uint64_t)v61;
      v73(v61, v49, v41);
      swift_storeEnumTagMultiPayload();
      v58 = v60;
      sub_1BA895BA4(v60);
      sub_1BAD63534(v58, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
      sub_1BA895BB8(v58);
    }
  }
  return sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))sub_1BAE746D8);
}

uint64_t sub_1BA60DEE4(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BA60DF1C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA60DF54(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BA60DF80()
{
  unint64_t result;

  result = qword_1ED39B380;
  if (!qword_1ED39B380)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolName, &type metadata for FormatSymbolName);
    atomic_store(result, (unint64_t *)&qword_1ED39B380);
  }
  return result;
}

uint64_t sub_1BA60DFC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a4 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1BA60E000()
{
  unint64_t result;

  result = qword_1ED39B4F0;
  if (!qword_1ED39B4F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig, &type metadata for FormatSymbolConfig);
    atomic_store(result, (unint64_t *)&qword_1ED39B4F0);
  }
  return result;
}

uint64_t sub_1BA60E044@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatBindExpression.init(from:)(a1, a2);
}

uint64_t FormatBindExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(char *, _QWORD);
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  void (**v50)(char *, _QWORD);
  __int128 v51;
  char v52;
  __int128 v53;
  char v54;
  uint64_t v55;

  v49 = a2;
  sub_1BAEFBAC0(0, &qword_1ED3BBE80, (void (*)(void))sub_1BA833E84, (void (*)(void))sub_1BA833F50);
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v40 - v4;
  sub_1BAE8358C();
  v7 = v6;
  v8 = *(void (***)(char *, _QWORD))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE83604();
  sub_1BA4A2870(&qword_1ED3D0E90, (uint64_t (*)(uint64_t))sub_1BAE83604, (uint64_t)&unk_1BB8FFC6C);
  v11 = v50;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v32 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  v45 = v5;
  v46 = a1;
  v50 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v7;
  v17 = v48;
  v16 = v49;
  v18 = v47;
  if ((v14 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v25 = v15;
      v26 = *((_QWORD *)v21 - 2);
      v27 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v28 = swift_bridgeObjectRelease();
      v29 = v10;
      MEMORY[0x1E0C80A78](v28);
      *(&v40 - 4) = (uint64_t)&_s10CodingKeysON_179;
      *(&v40 - 3) = sub_1BAE83684();
      *(&v40 - 2) = sub_1BA60E564();
      *(&v40 - 1) = sub_1BAE836C8();
      swift_getKeyPath();
      swift_retain();
      v30 = sub_1BAE71220((uint64_t)&unk_1E726A930);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v31 = v26;
      *(_QWORD *)(v31 + 8) = v27;
      *(_QWORD *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v27, 1);
      v50[1](v29, v25);
      a1 = v46;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v10, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAE8358C);
  v24 = v23;
  v44 = v22;
  v34 = sub_1BAE10070((uint64_t)v10, 1, 0, 0, (uint64_t (*)(uint64_t))sub_1BA60E5A8, (void (*)(_QWORD, double))sub_1BAE8358C, &qword_1ED3BBDE8);
  v43 = v24;
  v42 = xmmword_1BB8D2D60;
  v53 = xmmword_1BB8D2D60;
  v54 = 0;
  v35 = sub_1BB8740F8();
  if ((v35 & 1) != 0)
  {
    v51 = v42;
    v52 = 0;
    sub_1BB8740D4();
    v36 = v55;
  }
  else
  {
    v36 = 1;
  }
  v42 = xmmword_1BB8D2D70;
  v53 = xmmword_1BB8D2D70;
  v54 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v41 = v36;
    v51 = v42;
    v52 = 0;
    sub_1BAE8370C();
    v37 = v45;
    sub_1BB8740D4();
    v38 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v37, v17);
    v36 = v41;
  }
  else
  {
    v38 = MEMORY[0x1E0DEE9D8];
  }
  v50[1](v10, v15);
  v39 = v43;
  *v16 = v44;
  v16[1] = v39;
  v16[2] = v34;
  v16[3] = v36;
  v16[4] = v38;
  v32 = (uint64_t)v46;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

unint64_t sub_1BA60E564()
{
  unint64_t result;

  result = qword_1ED3C8AE0;
  if (!qword_1ED3C8AE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDA38, &_s10CodingKeysON_179);
    atomic_store(result, (unint64_t *)&qword_1ED3C8AE0);
  }
  return result;
}

void sub_1BA60E5A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBDF0)
  {
    sub_1BA5B7D34();
    sub_1BA7850D0();
    sub_1BA835484();
    v0 = sub_1BB86DD14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBDF0);
  }
}

uint64_t sub_1BA60E628@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  __int128 v23;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA60ECA8();
    v23 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E726A9A8;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = v22;
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA60ECA8()
{
  unint64_t result;

  result = qword_1ED3CA390;
  if (!qword_1ED3CA390)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD888, &_s10CodingTypeON_122);
    atomic_store(result, (unint64_t *)&qword_1ED3CA390);
  }
  return result;
}

unint64_t sub_1BA60ECEC()
{
  unint64_t result;

  result = qword_1ED3B8020;
  if (!qword_1ED3B8020)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingBoolExpression, &type metadata for FormatBindingBoolExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B8020);
  }
  return result;
}

unint64_t sub_1BA60ED30()
{
  unint64_t result;

  result = qword_1ED3B8028;
  if (!qword_1ED3B8028)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpression, &type metadata for FormatBindingTextExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B8028);
  }
  return result;
}

unint64_t sub_1BA60ED74()
{
  unint64_t result;

  result = qword_1ED3B8238;
  if (!qword_1ED3B8238)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingImageExpression, &type metadata for FormatBindingImageExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B8238);
  }
  return result;
}

unint64_t sub_1BA60EDB8()
{
  unint64_t result;

  result = qword_1ED3CD540;
  if (!qword_1ED3CD540)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpression, &type metadata for FormatBindingDateTimeExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3CD540);
  }
  return result;
}

unint64_t sub_1BA60EDFC()
{
  unint64_t result;

  result = qword_1ED3CB6C0;
  if (!qword_1ED3CB6C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingURLExpression, &type metadata for FormatBindingURLExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3CB6C0);
  }
  return result;
}

unint64_t sub_1BA60EE40()
{
  unint64_t result;

  result = qword_1ED3C00E0;
  if (!qword_1ED3C00E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingShareAttributionExpression, &type metadata for FormatBindingShareAttributionExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3C00E0);
  }
  return result;
}

unint64_t sub_1BA60EE84()
{
  unint64_t result;

  result = qword_1ED3B02D8;
  if (!qword_1ED3B02D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingLayeredMediaExpression, &type metadata for FormatBindingLayeredMediaExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B02D8);
  }
  return result;
}

uint64_t sub_1BA60EEC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = FeedGroupKnobsRuleValue.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t FeedGroupKnobsRuleValue.__allocating_init(from:)(uint64_t a1)
{
  return sub_1BA60EF0C(a1, (void (*)(uint64_t))FeedGroupKnobsRuleValue.init(from:));
}

uint64_t sub_1BA60EF0C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  v4 = swift_allocObject();
  a2(a1);
  return v4;
}

void FeedGroupKnobsRuleValue.init(from:)()
{
  type metadata accessor for FeedGroupKnobsRuleValue.CodingKeys();
}

void sub_1BA60EFB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[96];

  MEMORY[0x1BCCE5B24](&unk_1BB885D68, a1);
  v5 = sub_1BB874104();
  *(_QWORD *)(v4 - 248) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 - 240) = v5;
  MEMORY[0x1E0C80A78](v5);
  *(_QWORD *)(v4 - 208) = &v16[-v6];
  *(_QWORD *)(v4 - 232) = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)(v4 - 224) = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v16[-v10];
  v12 = v3[3];
  *(_QWORD *)(v4 - 168) = v3;
  __swift_project_boxed_opaque_existential_1(v3, v12);
  v13 = *(_QWORD *)(v4 - 184);
  sub_1BB874674();
  if (v13)
  {
    *(_QWORD *)(v4 - 184) = v13;
    __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v4 - 168), *(_QWORD *)(*(_QWORD *)(v4 - 168) + 24));
    sub_1BB87468C();
    *(_BYTE *)(v4 - 128) = 0;
    sub_1BB8740D4();
    *(_QWORD *)(v4 - 128) = v2;
    *(_QWORD *)(v4 - 120) = v1;
    v15 = *(_QWORD *)(v4 - 176);
    *(_QWORD *)(v4 - 112) = *(_QWORD *)(v4 - 200);
    *(_QWORD *)(v4 - 104) = v15;
    type metadata accessor for FeedGroupKnobsRuleValue.Selector();
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 - 128), *(_QWORD *)(v4 - 104));
  sub_1BB8743D4();
  (*(void (**)(_QWORD, _BYTE *, uint64_t))(*(_QWORD *)(v4 - 232) + 16))(*(_QWORD *)(v4 - 192) + *(_QWORD *)(**(_QWORD **)(v4 - 192) + 112), v11, v2);
  *(_QWORD *)(v4 - 160) = v2;
  *(_QWORD *)(v4 - 152) = v1;
  v14 = *(_QWORD *)(v4 - 176);
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v4 - 200);
  *(_QWORD *)(v4 - 136) = v14;
  type metadata accessor for FeedGroupKnobsRuleValue.Selector();
}

void sub_1BA60F2E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v7 = sub_1BB872EE0();
  *(_BYTE *)(v5 - 128) = 1;
  *(_QWORD *)(v5 - 72) = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>.Selector, a1);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v7, v5 - 72);
  sub_1BB874068();
  if (v3)
  {
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 232) + 8))(*(_QWORD *)(v5 - 224), v2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 248) + 8))(v4, v1);
    JUMPOUT(0x1BA60F174);
  }
  v8 = *(_QWORD *)(v5 - 192);
  if (!*(_QWORD *)(v5 - 160))
    sub_1BB872E68();

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 248) + 8))(*(_QWORD *)(v5 - 208), *(_QWORD *)(v5 - 240));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 232) + 32))(v8 + *(_QWORD *)(*(_QWORD *)v8 + 112), *(_QWORD *)(v5 - 224), v2);
  JUMPOUT(0x1BA60F43CLL);
}

void type metadata accessor for FeedGroupKnobsRuleValue.Selector()
{
  JUMPOUT(0x1BCCE5A70);
}

void type metadata accessor for FeedGroupKnobsRuleValue.CodingKeys()
{
  JUMPOUT(0x1BCCE5A70);
}

void type metadata accessor for FeedGroupKnobsRuleValue.Selector.CodingKeys()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t destroy for FeedGroupTopicDiversityRequirements()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedGroupTopicDiversityRequirements(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA60F4C8(_QWORD *a1)
{
  return FormatColorAssignComponentProcessor.encode(to:)(a1);
}

uint64_t FormatColorAssignComponentProcessor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v24;
  char *v25;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  sub_1BAE88B54(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE *)v1;
  v13 = *(double *)(v1 + 8);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE88A4C();
  v17 = sub_1BA4A2870(&qword_1ED3D1410, (uint64_t (*)(uint64_t))sub_1BAE88A4C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatColorAssignComponentProcessor, v18, v14, (uint64_t)&type metadata for FormatColorAssignComponentProcessor, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v11, v17, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v8, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0A7C4(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v22 = (uint64_t)v25;
    v21(v25, v20, v19);
    swift_storeEnumTagMultiPayload();
    sub_1BAD0A920(1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0, v13);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAE88B54);
}

unint64_t sub_1BA60F76C()
{
  unint64_t result;

  result = qword_1ED39B628;
  if (!qword_1ED39B628)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorComponent, &type metadata for FormatColorComponent);
    atomic_store(result, (unint64_t *)&qword_1ED39B628);
  }
  return result;
}

uint64_t sub_1BA60F7B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatProcessedColor.init(from:)(a1, a2);
}

uint64_t FormatProcessedColor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v25 = a2;
  sub_1BAEAD664();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEAD6DC();
  sub_1BA4A2870(&qword_1ED3D0F00, (uint64_t (*)(uint64_t))sub_1BAEAD6DC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v16 - 2);
      v19 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v7;
      MEMORY[0x1E0C80A78](v20);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_75;
      *(&v25 - 3) = sub_1BAEAD75C();
      *(&v25 - 2) = sub_1BA60FB3C();
      *(&v25 - 1) = sub_1BAEAD7A0();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E726D830);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA62C9A0();
  v26 = 0uLL;
  v27 = 0;
  sub_1BB8740D4();
  v17 = v28;
  sub_1BA4AD288(0, &qword_1ED3B94D0, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v26 = xmmword_1BB8A1A10;
  v27 = 0;
  sub_1BA60FB80();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = v28;
  *v12 = v17;
  v12[1] = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA60FB3C()
{
  unint64_t result;

  result = qword_1ED3C90E0;
  if (!qword_1ED3C90E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7F70, &_s10CodingKeysON_75);
    atomic_store(result, (unint64_t *)&qword_1ED3C90E0);
  }
  return result;
}

unint64_t sub_1BA60FB80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B94D8;
  if (!qword_1ED3B94D8)
  {
    sub_1BA4AD288(255, &qword_1ED3B94D0, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA58289C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B94D8);
  }
  return result;
}

uint64_t FormatViewNodeStyle.__deallocating_deinit()
{
  FormatViewNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatViewNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CD8(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96));
  sub_1BA6E8A78(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 184));
  return v0;
}

uint64_t sub_1BA60FC94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSystemFont.init(from:)(a1, a2);
}

uint64_t FormatSystemFont.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  double v23;
  double v24;
  int v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v37;
  __int128 v38;
  __int128 v39;
  double v40;
  int v41;
  int v42;
  __int128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  double v49;
  unsigned __int16 v50;
  __int128 v51;
  char v52;
  __int128 v53;
  __int128 v54;
  __int16 v55;

  v47 = a2;
  sub_1BA610240();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEC38BC();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC3934();
  sub_1BA4A2870(&qword_1ED3D0C80, (uint64_t (*)(uint64_t))sub_1BAEC3934, (uint64_t)&unk_1BB8FFC6C);
  v11 = v48;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_19:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v35 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  v44 = v5;
  v13 = v8;
  v14 = a1[3];
  v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v15 = sub_1BB872874();
  LOBYTE(v14) = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v16 = v7;
  v17 = v46;
  v18 = v47;
  v19 = v45;
  if ((v14 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v31 = *((_QWORD *)v22 - 2);
      v32 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v33 = sub_1BAE15C5C();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v34 = v31;
      *(_QWORD *)(v34 + 8) = v32;
      *(_QWORD *)(v34 + 16) = v33;
      *(_OWORD *)(v34 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v31, v32, 1);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v16);
      a1 = v48;
      goto LABEL_19;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v53 = 0uLL;
  LOBYTE(v54) = 0;
  v23 = 16.0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v51 = 0uLL;
    v52 = 0;
    sub_1BA689CD8();
    sub_1BB8740D4();
    v23 = v49;
  }
  v43 = xmmword_1BB8A1A10;
  v53 = xmmword_1BB8A1A10;
  LOBYTE(v54) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v51 = v43;
    v52 = 0;
    sub_1BA610304();
    sub_1BB8740D4();
    v24 = v49;
    v25 = v50;
  }
  else
  {
    v24 = 0.0;
    v25 = 3072;
  }
  v42 = v25;
  v43 = xmmword_1BB8D2D60;
  v53 = xmmword_1BB8D2D60;
  LOBYTE(v54) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v51 = v43;
    v52 = 0;
    sub_1BA6102C0();
    sub_1BB8740D4();
    v26 = LOBYTE(v49);
  }
  else
  {
    v26 = 5;
  }
  v41 = v26;
  v43 = xmmword_1BB8D2D70;
  v53 = xmmword_1BB8D2D70;
  LOBYTE(v54) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v40 = v24;
    v51 = v43;
    v52 = 0;
    sub_1BA4A2870(&qword_1ED3C45D8, (uint64_t (*)(uint64_t))sub_1BA610240, MEMORY[0x1E0DB3140]);
    v27 = v44;
    sub_1BB8740D4();
    v28 = sub_1BB86DD08();
    v29 = v17;
    v30 = v28;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v29);
    v24 = v40;
  }
  else
  {
    v30 = MEMORY[0x1E0DEE9E8];
  }
  v51 = xmmword_1BB8D2D90;
  v52 = 0;
  sub_1BA6101FC();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v16);
  v37 = v55;
  v38 = v53;
  v39 = v54;
  *(double *)v18 = v23;
  *(double *)(v18 + 8) = v24;
  *(_WORD *)(v18 + 16) = v42;
  *(_BYTE *)(v18 + 18) = v41;
  *(_QWORD *)(v18 + 24) = v30;
  *(_OWORD *)(v18 + 32) = v38;
  *(_OWORD *)(v18 + 48) = v39;
  *(_WORD *)(v18 + 64) = v37;
  v35 = (uint64_t)v48;
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

unint64_t sub_1BA6101B8()
{
  unint64_t result;

  result = qword_1ED3C7718;
  if (!qword_1ED3C7718)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C52D8, &_s10CodingKeysON_26);
    atomic_store(result, (unint64_t *)&qword_1ED3C7718);
  }
  return result;
}

unint64_t sub_1BA6101FC()
{
  unint64_t result;

  result = qword_1ED3BE7E0;
  if (!qword_1ED3BE7E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontAttributes, &type metadata for FormatFontAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED3BE7E0);
  }
  return result;
}

void sub_1BA610240()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C45E0)
  {
    sub_1BA8341EC();
    sub_1BA8342B8();
    sub_1BA834274();
    v0 = sub_1BB86DD14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C45E0);
  }
}

unint64_t sub_1BA6102C0()
{
  unint64_t result;

  result = qword_1ED3B4880;
  if (!qword_1ED3B4880)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontWeight, &type metadata for FormatFontWeight);
    atomic_store(result, (unint64_t *)&qword_1ED3B4880);
  }
  return result;
}

unint64_t sub_1BA610304()
{
  unint64_t result;

  result = qword_1ED3B4BB0;
  if (!qword_1ED3B4BB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScaling, &type metadata for FormatFontScaling);
    atomic_store(result, (unint64_t *)&qword_1ED3B4BB0);
  }
  return result;
}

void sub_1BA610348(_QWORD *a1)
{
  FormatFill.encode(to:)(a1);
}

void FormatFill.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17[8];
  _BYTE v18[136];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7439D4(v2, (uint64_t)v17);
  v12 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v13 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatFill, v14, v12, (uint64_t)&type metadata for FormatFill, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v10, v13, (uint64_t)&off_1E734BD80);
  sub_1BA7439D4(v17, (uint64_t)v18);
  v15 = (char *)sub_1BA6104DC + 4 * byte_1BB8AE6F8[sub_1BAB05900((uint64_t)v18)];
  __asm { BR              X10 }
}

_QWORD *sub_1BA6104DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = (uint64_t *)sub_1BAB0593C(v3 - 216);
  v5 = *v4;
  v6 = v4[1];
  sub_1BA7439D4((__int128 *)(v0 + 328), v0);
  sub_1BAB0593C(v0);
  v7 = qword_1ED3C2478;
  swift_retain();
  swift_retain();
  if (v7 != -1)
    swift_once();
  v8 = sub_1BB86EB84();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v2, v9, v8);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA6108B4(0, v5, v6, v2);
  sub_1BA4A2E80(v2, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA6A0C50((_QWORD *)(v0 + 328), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
}

uint64_t sub_1BA6108B4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF38A0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA610A18();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA610A5C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA610A18()
{
  unint64_t result;

  result = qword_1ED3A1328;
  if (!qword_1ED3A1328)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8D28, &_s10CodingTypeON_100);
    atomic_store(result, (unint64_t *)&qword_1ED3A1328);
  }
  return result;
}

unint64_t sub_1BA610A5C()
{
  unint64_t result;

  result = qword_1ED39B2B8;
  if (!qword_1ED39B2B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSolidFill, &type metadata for FormatSolidFill);
    atomic_store(result, (unint64_t *)&qword_1ED39B2B8);
  }
  return result;
}

uint64_t sub_1BA610AA0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF38A0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA610A18();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA610C04();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA610C04()
{
  unint64_t result;

  result = qword_1ED39B038;
  if (!qword_1ED39B038)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShine, &type metadata for FormatShine);
    atomic_store(result, (unint64_t *)&qword_1ED39B038);
  }
  return result;
}

uint64_t sub_1BA610C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[6];
  _OWORD v8[2];

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString;
  v2 = sub_1BB86C304();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  v3 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 80);
  v7[4] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 64);
  v7[5] = v3;
  v8[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 96);
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 105);
  v4 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 16);
  v7[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle);
  v7[1] = v4;
  v5 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 48);
  v7[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 32);
  v7[3] = v5;
  sub_1BA741B54((uint64_t)v7);
  return swift_deallocClassInstance();
}

_QWORD *initializeWithCopy for FormatOption(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  if (v7 != 1)
    swift_bridgeObjectRetain();
  a1[3] = v7;
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FormatVersionRequirement(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = sub_1BB86EB84();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v19(v9, v10, v18);
      sub_1BA6F3F88();
      v21 = v20;
      v19(&v9[*(int *)(v20 + 48)], &v10[*(int *)(v20 + 48)], v18);
      v17 = *(int *)(v21 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v25 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v9, v10, v25);
        goto LABEL_11;
      }
      v15 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
      sub_1BA8D4E7C();
      v17 = *(int *)(v16 + 48);
    }
    v22 = &v9[v17];
    v23 = &v10[v17];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    return a1;
  }
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  return a1;
}

uint64_t sub_1BA610EDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatStateMachineDefinition.init(from:)(a1, a2);
}

uint64_t FormatStateMachineDefinition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;

  sub_1BA611358(0, &qword_1ED3B9C40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA611314();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
  v38 = 0;
  sub_1BA6113B4();
  sub_1BB8740D4();
  v10 = v30;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9548);
  v38 = 1;
  sub_1BA61140C();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v11 = v30;
  v38 = 2;
  sub_1BA612090();
  v25 = v11;
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v26 = v32;
  v27 = v31;
  v28 = v33;
  v29 = v30;
  LODWORD(v11) = v34;
  v37 = v11;
  v30 = v10;
  v31 = v25;
  v32 = v29;
  v33 = v27;
  v34 = v26;
  v35 = v28;
  v36 = v11;
  sub_1BA7261E0(v29, v27, v26, v28, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v11;
  sub_1BA7261E0(v29, v27, v26, v28, v11);
  sub_1BA61147C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v26;
  LOBYTE(v11) = v24;
  sub_1BA6C1F54(v29, v27, v26, v28, v24);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v28;
  v14 = v29;
  v16 = v27;
  sub_1BA7261E0(v29, v27, v13, v28, v11);
  v17 = v14;
  v18 = v16;
  sub_1BA6C1F54(v17, v16, v13, v15, v11);
  swift_bridgeObjectRelease();
  v19 = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v19;
  v20 = v29;
  *(_QWORD *)(a2 + 16) = v29;
  *(_QWORD *)(a2 + 24) = v18;
  v21 = v28;
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v21;
  *(_BYTE *)(a2 + 48) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA6C1F54(v20, v27, v13, v21, v22);
}

unint64_t sub_1BA611314()
{
  unint64_t result;

  result = qword_1ED3B8258;
  if (!qword_1ED3B8258)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FC58, &type metadata for FormatStateMachineDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B8258);
  }
  return result;
}

void sub_1BA611358(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA611314();
    v7 = a3(a1, &type metadata for FormatStateMachineDefinition.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA6113B4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED3B95F0;
  if (!qword_1ED3B95F0)
  {
    sub_1BA6D249C();
    v2 = MEMORY[0x1E0DEA9A0];
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED3B95F0);
  }
  return result;
}

unint64_t sub_1BA61140C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B9558;
  if (!qword_1ED3B9558)
  {
    sub_1BA4C576C(255, (unint64_t *)&qword_1ED3B9548);
    v2 = v1;
    v3 = sub_1BA828C1C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9558);
  }
  return result;
}

uint64_t sub_1BA61147C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  unint64_t i;
  uint64_t v55;
  _QWORD *v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v1 = *(_QWORD **)v0;
  v76 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v76)
  {
    v2 = *(_QWORD *)(v0 + 8);
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(_BYTE *)(v0 + 48);
    v81 = MEMORY[0x1E0DEE9E8];
    v68 = v3;
    v69 = v4;
    v70 = *(_QWORD *)(v2 + 16);
    if (v70)
    {
      v63 = v7;
      v64 = v6;
      v66 = v5;
      v74 = v2 + 32;
      result = swift_bridgeObjectRetain();
      v9 = 0;
      v72 = result;
      while (1)
      {
        if (v9 >= *(_QWORD *)(result + 16))
        {
          __break(1u);
          goto LABEL_80;
        }
        v10 = (uint64_t *)(v74 + 40 * v9);
        v11 = v10[1];
        v78 = *v10;
        v13 = v10[2];
        v12 = v10[3];
        v14 = v10[4];
        v15 = v1[4] == v12 && v1[5] == v14;
        if (!v15 && (sub_1BB874398() & 1) == 0)
        {
          if (v76 == 1)
            goto LABEL_29;
          if (v1[6] != v12 || v1[7] != v14)
          {
            result = sub_1BB874398();
            if ((result & 1) == 0)
              break;
          }
        }
LABEL_16:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v17 = swift_bridgeObjectRetain();
        v18 = sub_1BA611D00(v17, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v19 = sub_1BA6EB330(v18, v13);
        swift_release();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA98D1F0();
          swift_allocError();
          *v28 = v13;
          v28[1] = (uint64_t)v1;
          v28[2] = 0;
          v28[3] = 0;
          v28[4] = 0xA000000000000000;
          goto LABEL_44;
        }
        v20 = v81;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = sub_1BA761FE4(v78, v11, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA98D1F0();
          swift_allocError();
          *v29 = v78;
          v29[1] = v11;
          v29[2] = 0;
          v29[3] = 0;
          v29[4] = 0xB000000000000000;
          goto LABEL_33;
        }
        ++v9;
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC(&v80, v78, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = v72;
        if (v9 == v70)
        {
          swift_bridgeObjectRelease();
          v6 = v64;
          v3 = v68;
          v4 = v69;
          v5 = v66;
          v7 = v63;
          goto LABEL_34;
        }
      }
      if (v76 == 2)
      {
LABEL_29:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA98D1F0();
        swift_allocError();
        *(_QWORD *)v26 = v12;
        *(_QWORD *)(v26 + 8) = v14;
        *(_QWORD *)(v26 + 16) = v1;
        *(_OWORD *)(v26 + 24) = xmmword_1BB90FA60;
        swift_bridgeObjectRetain();
LABEL_33:
        swift_bridgeObjectRetain();
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v22 = v1 + 9;
      v23 = 2;
      while (1)
      {
        v24 = v23 + 1;
        if (__OFADD__(v23, 1))
          break;
        if (*(v22 - 1) == v12 && *v22 == v14)
          goto LABEL_16;
        result = sub_1BB874398();
        if ((result & 1) != 0)
          goto LABEL_16;
        v22 += 2;
        ++v23;
        if (v24 == v76)
          goto LABEL_29;
      }
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
    }
    else
    {
LABEL_34:
      if ((v7 & 1) != 0)
      {
        v30 = v1[2];
        if (v30)
        {
          v31 = v1 + 5;
          while (*(v31 - 1) != v3 || v4 != *v31)
          {
            if ((sub_1BB874398() & 1) != 0)
            {
              sub_1BA7261E0(v68, v69, v5, v6, 1);
              swift_bridgeObjectRelease();
              return sub_1BA6C1F54(v68, v69, v5, v6, 1);
            }
            v31 += 2;
            --v30;
            v3 = v68;
            v4 = v69;
            if (!v30)
              goto LABEL_43;
          }
          return swift_bridgeObjectRelease();
        }
        else
        {
LABEL_43:
          v33 = v3;
          v34 = v4;
          sub_1BA7261E0(v3, v4, v5, v6, 1);
          swift_bridgeObjectRelease();
          sub_1BA98D1F0();
          swift_allocError();
          *(_QWORD *)v35 = v33;
          *(_QWORD *)(v35 + 8) = v34;
          *(_QWORD *)(v35 + 16) = v1;
          *(_OWORD *)(v35 + 24) = xmmword_1BB90FA80;
LABEL_44:
          swift_bridgeObjectRetain();
          return swift_willThrow();
        }
      }
      else
      {
        v65 = v6;
        v67 = v5;
        v71 = *(_QWORD *)(v4 + 16);
        if (v71)
        {
          v36 = v81;
          v73 = v4 + 32;
          sub_1BA7261E0(v3, v4, v5, v6, 0);
          v79 = v36 + 56;
          result = swift_bridgeObjectRetain();
          v37 = 0;
          while (1)
          {
            if (v37 >= *(_QWORD *)(v69 + 16))
              goto LABEL_81;
            v38 = v73 + 40 * v37;
            v39 = *(_QWORD *)v38;
            v40 = *(_QWORD *)(v38 + 8);
            v41 = *(_BYTE *)(v38 + 16);
            v42 = *(_QWORD *)(v38 + 24);
            v43 = *(_QWORD *)(v38 + 32);
            if (!*(_QWORD *)(v36 + 16))
              break;
            sub_1BB8745CC();
            v75 = v39;
            v77 = v40;
            v44 = v40;
            v45 = v41;
            sub_1BA73B1CC(v39, v44, v41);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            sub_1BB872A90();
            v46 = sub_1BB874608();
            v47 = v36;
            v48 = -1 << *(_BYTE *)(v36 + 32);
            v49 = v46 & ~v48;
            if (((*(_QWORD *)(v79 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
            {
              v59 = v69;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_76;
            }
            v50 = *(_QWORD *)(v36 + 48);
            v51 = (_QWORD *)(v50 + 16 * v49);
            v52 = *v51 == v42 && v51[1] == v43;
            if (!v52 && (sub_1BB874398() & 1) == 0)
            {
              v53 = ~v48;
              for (i = v49 + 1; ; i = v55 + 1)
              {
                v55 = i & v53;
                if (((*(_QWORD *)(v79 + (((i & v53) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v53)) & 1) == 0)
                  break;
                v56 = (_QWORD *)(v50 + 16 * v55);
                v57 = *v56 == v42 && v56[1] == v43;
                if (v57 || (sub_1BB874398() & 1) != 0)
                  goto LABEL_47;
              }
              v59 = v69;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v47 = v36;
LABEL_76:
              v41 = v45;
              v39 = v75;
              v40 = v77;
LABEL_77:
              swift_bridgeObjectRelease();
              sub_1BA98D1F0();
              swift_allocError();
              *(_QWORD *)v62 = v42;
              *(_QWORD *)(v62 + 8) = v43;
              *(_QWORD *)(v62 + 16) = v47;
              *(_OWORD *)(v62 + 24) = xmmword_1BB90FA70;
              swift_bridgeObjectRetain();
              swift_willThrow();
              sub_1BA6C1F54(v68, v59, v67, v65, 0);
              sub_1BA73B1B8(v39, v40, v41);
              return swift_bridgeObjectRelease();
            }
LABEL_47:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            ++v37;
            sub_1BA73B1B8(v75, v77, v45);
            result = swift_bridgeObjectRelease();
            if (v37 == v71)
            {
              swift_bridgeObjectRelease();
              v58 = v65;
              goto LABEL_71;
            }
          }
          sub_1BA73B1CC(v39, v40, v41);
          swift_bridgeObjectRetain();
          v47 = v36;
          v59 = v69;
          goto LABEL_77;
        }
        swift_retain();
        swift_bridgeObjectRetain();
        v58 = v6;
        swift_bridgeObjectRetain();
        v36 = v81;
LABEL_71:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v60 = sub_1BA761FE4(v67, v58, v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v60 & 1) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1BA98D1F0();
          swift_allocError();
          *(_QWORD *)v61 = v67;
          *(_QWORD *)(v61 + 8) = v58;
          *(_QWORD *)(v61 + 16) = v36;
          *(_OWORD *)(v61 + 24) = xmmword_1BB90FA70;
          swift_bridgeObjectRetain();
          swift_willThrow();
        }
        return sub_1BA6C1F54(v68, v69, v67, v58, 0);
      }
    }
  }
  else
  {
    sub_1BA98D1F0();
    swift_allocError();
    *v27 = 2;
    v27[1] = 0;
    v27[2] = 0;
    v27[3] = 0;
    v27[4] = 0xF000000000000000;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BA611D00(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1BA611E80((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1BA611E80((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1BCCE5C38](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1BA611E80(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t i;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v21;
  unint64_t j;
  unint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = a2;
  v31 = *(_QWORD *)(a3 + 16);
  if (!v31)
  {
    v26 = 0;
    goto LABEL_27;
  }
  v32 = a4 + 56;
  v30 = a3 + 32;
  swift_bridgeObjectRetain();
  v28 = 0;
  for (i = 0; i != v31; ++i)
  {
    v7 = (uint64_t *)(v30 + 16 * i);
    v9 = *v7;
    v8 = v7[1];
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v10 = sub_1BB874608();
    v11 = -1 << *(_BYTE *)(a4 + 32);
    v12 = v10 & ~v11;
    v13 = v12 >> 6;
    v14 = 1 << v12;
    if (((1 << v12) & *(_QWORD *)(v32 + 8 * (v12 >> 6))) == 0)
      goto LABEL_3;
    v15 = *(_QWORD *)(a4 + 48);
    v16 = (_QWORD *)(v15 + 16 * v12);
    v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_1BB874398() & 1) == 0)
    {
      v21 = ~v11;
      for (j = v12 + 1; ; j = v23 + 1)
      {
        v23 = j & v21;
        if (((*(_QWORD *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0)
          break;
        v24 = (_QWORD *)(v15 + 16 * v23);
        v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_1BB874398() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v13 = v23 >> 6;
          v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    result = swift_bridgeObjectRelease();
LABEL_12:
    v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  v5 = a2;
  v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1BA6EBA94(a1, v5, v26, a4);
}

unint64_t sub_1BA612090()
{
  unint64_t result;

  result = qword_1ED3B73A8;
  if (!qword_1ED3B73A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInput, &type metadata for FormatStateMachineInput);
    atomic_store(result, (unint64_t *)&qword_1ED3B73A8);
  }
  return result;
}

uint64_t sub_1BA6120D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCornerRadius.Value.init(from:)(a1, a2);
}

uint64_t FormatCornerRadius.Value.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  __int128 v31;
  char v32;

  v3 = v2;
  v27 = a2;
  sub_1BAE8E328();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE8E3A0();
  sub_1BA4A2870(&qword_1ED3D0D00, (uint64_t (*)(uint64_t))sub_1BAE8E3A0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v27;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v16 - 2);
      v19 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v27 = v7;
      MEMORY[0x1E0C80A78](v20);
      *((_QWORD *)&v26 - 4) = &_s10CodingKeysON_148;
      *((_QWORD *)&v26 - 3) = sub_1BAE8E420();
      *((_QWORD *)&v26 - 2) = sub_1BA6124BC();
      *((_QWORD *)&v26 - 1) = sub_1BAE8E464();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E726B3F8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v31 = 0uLL;
  v32 = 0;
  v17 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v29 = 0uLL;
    v30 = 0;
    sub_1BA689CD8();
    sub_1BB8740D4();
    v17 = v28;
  }
  v24 = sub_1BAE0FB28();
  v26 = xmmword_1BB8D2D60;
  v31 = xmmword_1BB8D2D60;
  v32 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v29 = v26;
    v30 = 0;
    sub_1BB8740D4();
    v25 = v28;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  *(_QWORD *)v12 = v17;
  *(_QWORD *)(v12 + 8) = v24;
  *(_BYTE *)(v12 + 16) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA6124BC()
{
  unint64_t result;

  result = qword_1ED3C7C28;
  if (!qword_1ED3C7C28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBE48, &_s10CodingKeysON_148);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C28);
  }
  return result;
}

unint64_t sub_1BA612500()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B93E0;
  if (!qword_1ED3B93E0)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B93D8, (uint64_t)&type metadata for FormatCorner, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA8363F4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B93E0);
  }
  return result;
}

uint64_t sub_1BA612578(_QWORD *a1)
{
  return FormatVOverlayNode.encode(to:)(a1);
}

uint64_t FormatVOverlayNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t *v76;
  char *v77;
  __int128 v78;
  char v79;
  __int128 v80;
  char v81;
  unint64_t v82;
  __int128 v83;
  char v84;
  char v85;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v69 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v70 = (char *)&v66 - v8;
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)&v66 - v10;
  MEMORY[0x1E0C80A78](v11);
  v73 = (char *)&v66 - v12;
  MEMORY[0x1E0C80A78](v13);
  v72 = (char *)&v66 - v14;
  MEMORY[0x1E0C80A78](v15);
  v74 = (char *)&v66 - v16;
  MEMORY[0x1E0C80A78](v17);
  v75 = (char *)&v66 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v66 - v20;
  sub_1BAECAADC(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  v27 = sub_1BAECABCC();
  v28 = sub_1BA4A2870(&qword_1ED3D0D70, (uint64_t (*)(uint64_t))sub_1BAECABCC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v29, v26, v4, v27, (uint64_t)&type metadata for FormatVersions.JazzkonC, v25, (uint64_t)v24, v28, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v30 = v2[2];
  v31 = v2[3];
  v76 = v2;
  v32 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v32 != -1)
    swift_once();
  v33 = sub_1BB86EB84();
  v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476C20);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  v35(v21, v34, v33);
  v36 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v37 = v30;
  v38 = (uint64_t)v24;
  v39 = v77;
  sub_1BAD265E8(v37, v31, 0, 0, 0, (uint64_t)v21, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE505FC, (uint64_t (*)(uint64_t))sub_1BAECAB54, &qword_1ED3AE8B0);
  if (v39)
  {
    sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v77 = v24;
    v40 = v76;
    v41 = v76[4];
    v42 = v76[5];
    v43 = (uint64_t)v75;
    v35(v75, v34, v33);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1D2D4(v41, v42, 1, 0, 0, v43, (uint64_t)sub_1BA90CF04, 0);
    v66 = v34;
    v67 = v35;
    v68 = v36;
    sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v44 = v40[6];
    v45 = qword_1ED3C6D58;
    swift_bridgeObjectRetain();
    if (v45 != -1)
      swift_once();
    v46 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476C08);
    v47 = (uint64_t)v74;
    v48 = v67;
    v67(v74, v46, v33);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2ADD0(v44, 2, 0, 0);
    v75 = 0;
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v50 = (uint64_t)v72;
    v51 = v66;
    v48(v72, v66, v33);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    v48((char *)v50, v51, v33);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    v52 = v40[11];
    v53 = (uint64_t)v73;
    v48(v73, v51, v33);
    swift_storeEnumTagMultiPayload();
    if (((v52 >> 59) & 0x1E | (v52 >> 2) & 1) != 0x16 || v52 != 0xB000000000000000)
    {
      sub_1BA71CA6C(v52);
      v38 = (uint64_t)v77;
      v54 = v75;
      v55 = sub_1BAE505FC(v53, 5, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v54)
      {
LABEL_12:
        sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
        sub_1BA719718(v52);
        return sub_1BA4A2E80(v38, (uint64_t (*)(_QWORD))sub_1BAECAADC);
      }
      v75 = 0;
      if ((v55 & 1) != 0)
      {
        v83 = xmmword_1BB8D2D80;
        v84 = 0;
        v82 = v52;
        sub_1BAECAB54();
        sub_1BA4A2870(&qword_1ED3AE8B0, (uint64_t (*)(uint64_t))sub_1BAECAB54, MEMORY[0x1E0DED188]);
        sub_1BA6371A0();
        v56 = v75;
        sub_1BB874464();
        if (v56)
        {
          v38 = (uint64_t)v77;
          v53 = (uint64_t)v73;
          goto LABEL_12;
        }
        v75 = 0;
        v53 = (uint64_t)v73;
      }
      v51 = v66;
    }
    sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
    sub_1BA719718(v52);
    swift_beginAccess();
    v57 = (uint64_t)v71;
    v58 = v67;
    v67(v71, v51, v33);
    swift_storeEnumTagMultiPayload();
    v59 = swift_bridgeObjectRetain();
    v38 = (uint64_t)v77;
    v60 = v75;
    sub_1BAD2AF20(v59, 6, 0, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    if (!v60)
    {
      swift_beginAccess();
      v61 = v40[13];
      v62 = (uint64_t)v70;
      v58(v70, v51, v33);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      if ((sub_1BAE505FC(v62, 7, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v80 = xmmword_1BB8D2DB0;
        v81 = 0;
        *(_QWORD *)&v78 = v61;
        sub_1BAECAB54();
        sub_1BA4A2870(&qword_1ED3AE8B0, (uint64_t (*)(uint64_t))sub_1BAECAB54, MEMORY[0x1E0DED188]);
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA653FC0();
        sub_1BB874464();
        v62 = (uint64_t)v70;
      }
      sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v63 = *((_BYTE *)v40 + 112);
      v64 = (uint64_t)v69;
      if (qword_1ED3C6D40 != -1)
        swift_once();
      v65 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476BC0);
      v67((char *)v64, v65, v33);
      swift_storeEnumTagMultiPayload();
      if ((v63 & 1) != 0)
      {
        v38 = (uint64_t)v77;
        if ((sub_1BAE505FC(v64, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
        {
          v78 = xmmword_1BB8D2DD0;
          v79 = 0;
          v85 = 1;
          sub_1BAECAB54();
          sub_1BA4A2870(&qword_1ED3AE8B0, (uint64_t (*)(uint64_t))sub_1BAECAB54, MEMORY[0x1E0DED188]);
          sub_1BB874464();
          v38 = (uint64_t)v77;
        }
      }
      else
      {
        v38 = (uint64_t)v77;
      }
      sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
    }
  }
  return sub_1BA4A2E80(v38, (uint64_t (*)(_QWORD))sub_1BAECAADC);
}

uint64_t sub_1BA61302C(_QWORD *a1)
{
  return FormatProcessedColor.encode(to:)(a1);
}

uint64_t FormatProcessedColor.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  sub_1BAEAD7E4(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v25 = v1[1];
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BAEAD6DC();
  v15 = sub_1BA4A2870(&qword_1ED3D0F00, (uint64_t (*)(uint64_t))sub_1BAEAD6DC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatProcessedColor, v16, v12, (uint64_t)&type metadata for FormatProcessedColor, v14, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v15, (uint64_t)&off_1E734BD80);
  v17 = qword_1ED3C2478;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v27;
  sub_1BAD19938(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v21)
  {
    v22 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v23 = swift_bridgeObjectRetain();
    sub_1BAD19A94(v23, 1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAEAD7E4);
}

unint64_t sub_1BA6132EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BEC8;
  if (!qword_1ED39BEC8)
  {
    sub_1BA4AD288(255, &qword_1ED3B94D0, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA5A3EBC();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BEC8);
  }
  return result;
}

void sub_1BA613364(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  FormatSelectorValueSelector.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void FormatSelectorValueSelector.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[26];

  v13[14] = a3;
  v13[15] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13[6] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v13[25] = (char *)v13 - v5;
  v13[9] = v6;
  v13[10] = v7;
  v9 = _s10CodingKeysOMa_224(255, v6, v7, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8CF7C0, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8CF770, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8CF748, v9);
  v13[18] = v9;
  v13[19] = v10;
  v13[7] = v12;
  v13[8] = v11;
  v13[20] = v11;
  v13[21] = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_224);
}

uint64_t FormatSelectorValueSelector.init(selector:value:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  char *v8;

  v7 = a1[1];
  *a5 = *a1;
  a5[1] = v7;
  v8 = (char *)a5 + *(int *)(type metadata accessor for FormatSelectorValueSelector(0, a3, a4, a4) + 36);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v8, a2, a3);
}

id sub_1BA61387C(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_1BA6138CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA6138DC(a1, *(id *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1BA6138DC(uint64_t a1, id a2, char a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v4 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  v8 = a3;
  sub_1BA61394C((uint64_t)&v8);
  v6 = v5;

  return v6;
}

void sub_1BA61394C(uint64_t a1)
{
  __asm { BR              X10 }
}

id sub_1BA613988(uint64_t a1, uint64_t a2, void *a3)
{
  double v3;
  uint64_t v6;
  double v7[4];
  char v8;

  sub_1BB8737EC();
  sub_1BA5D5518((uint64_t)&v6, (uint64_t)v7, &qword_1ED39C318, (void (*)(uint64_t))sub_1BA841DB0);
  if ((v8 & 1) != 0)
    return a3;
  else
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, v3, v7[1], v7[2], v7[3]);
}

uint64_t sub_1BA613C08(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA613C18(a1, *(_BYTE *)(v1 + 16), *(void **)(v1 + 32));
}

uint64_t sub_1BA613C18(uint64_t a1, char a2, void *a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[2];

  v10[1] = a2;
  sub_1BA613CC0();
  v6 = objc_msgSend(a3, sel_resolvedColorWithTraitCollection_, a1);
  v10[0] = a2;
  sub_1BA61394C((uint64_t)v10);
  v8 = v7;

  return v8;
}

void sub_1BA613CC0()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA613CEC()
{
  uint64_t v1;
  uint64_t v2;

  sub_1BB8737EC();
  return sub_1BA5D5518((uint64_t)&v1, (uint64_t)&v2, &qword_1ED39C318, (void (*)(uint64_t))sub_1BA841DB0);
}

void sub_1BA613E4C(void *a1)
{
  sub_1BA613E54(a1);
}

void sub_1BA613E54(void *a1)
{
  objc_msgSend(a1, sel_userInterfaceStyle);
  FormatColor.color.getter();
}

id sub_1BA613EA8(uint64_t a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(id, uint64_t, uint64_t), uint64_t (*a7)(id, uint64_t, unint64_t))
{
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;

  v12 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  swift_retain();
  LOBYTE(a6) = a6(v12, a5, a3);
  swift_release();
  if ((a6 & 1) != 0)
  {
    v13 = *(_QWORD *)(a4 + 16);
    if (v13)
    {
      swift_bridgeObjectRetain_n();
      v14 = v12;
      v15 = 0;
      v12 = v14;
      do
      {
        v16 = v12;
        v17 = *(_QWORD *)(a4 + 8 * v15++ + 32);
        sub_1BA74444C(v17);
        v12 = (id)a7(v12, a5, v17);
        sub_1BA74447C(v17);

      }
      while (v13 != v15);

      swift_bridgeObjectRelease_n();
    }
  }
  return v12;
}

uint64_t sub_1BA613FD8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, char *))
{
  char *v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, *((_QWORD *)v3 + 2), *((_QWORD *)v3 + 3), *((_QWORD *)v3 + 4), &v3[(v5 + 40) & ~v5]);
}

uint64_t sub_1BA61402C(uint64_t a1)
{
  return sub_1BA613FD8(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *))sub_1BA614040);
}

id sub_1BA614040(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BA613EA8(a1, a2, a3, a4, a5, (uint64_t (*)(id, uint64_t, uint64_t))sub_1BA614054, (uint64_t (*)(id, uint64_t, unint64_t))sub_1BA783FD0);
}

void sub_1BA614054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for FormatDecorationContext();
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X10 }
}

uint64_t sub_1BA6140EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  swift_retain();
  swift_retain_n();
  v7 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BA614054)(v1, v2, v5);
  if (v0)
  {
    swift_release();
    swift_release_n();
  }
  else
  {
    v8 = v7;
    swift_release();
    sub_1BA4C2DD8(v2, v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
    if ((v8 & 1) != 0)
    {
      swift_retain();
      LOBYTE(v1) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BA614054)(v1, v4, v6);
      swift_release();
    }
    else
    {
      LOBYTE(v1) = 0;
    }
    sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
    swift_release();
    swift_release();
  }
  return v1 & 1;
}

void sub_1BA6143F4(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA61442C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  __int16 v18;
  uint64_t v19;
  __n128 v20;

  sub_1BB8737EC();
  v19 = sub_1BA5D5518((uint64_t)&a9, (uint64_t)&a14, &qword_1ED39C318, (void (*)(uint64_t))sub_1BA841DB0);
  v20.n128_u64[0] = a14;
  if (a18)
    v20.n128_f64[0] = 0.0;
  return ((uint64_t (*)(uint64_t, __n128))((char *)sub_1BA6145B4 + 4 * byte_1BB88C118[HIBYTE(v18)]))(v19, v20);
}

BOOL sub_1BA6145B4(double a1)
{
  double v1;

  return a1 == v1;
}

void sub_1BA61460C(_QWORD *a1)
{
  FormatAdjustment.encode(to:)(a1);
}

void FormatAdjustment.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD v66[30];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v66[25] = (char *)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v66[24] = (char *)v66 - v6;
  MEMORY[0x1E0C80A78](v7);
  v66[4] = (char *)v66 - v8;
  MEMORY[0x1E0C80A78](v9);
  v66[3] = (char *)v66 - v10;
  MEMORY[0x1E0C80A78](v11);
  v66[23] = (char *)v66 - v12;
  MEMORY[0x1E0C80A78](v13);
  v66[22] = (char *)v66 - v14;
  MEMORY[0x1E0C80A78](v15);
  v66[20] = (char *)v66 - v16;
  MEMORY[0x1E0C80A78](v17);
  v66[21] = (char *)v66 - v18;
  MEMORY[0x1E0C80A78](v19);
  v66[19] = (char *)v66 - v20;
  MEMORY[0x1E0C80A78](v21);
  v66[18] = (char *)v66 - v22;
  MEMORY[0x1E0C80A78](v23);
  v66[17] = (char *)v66 - v24;
  MEMORY[0x1E0C80A78](v25);
  v66[16] = (char *)v66 - v26;
  MEMORY[0x1E0C80A78](v27);
  v66[15] = (char *)v66 - v28;
  MEMORY[0x1E0C80A78](v29);
  v66[14] = (char *)v66 - v30;
  MEMORY[0x1E0C80A78](v31);
  v66[13] = (char *)v66 - v32;
  MEMORY[0x1E0C80A78](v33);
  v66[2] = (char *)v66 - v34;
  MEMORY[0x1E0C80A78](v35);
  v66[12] = (char *)v66 - v36;
  MEMORY[0x1E0C80A78](v37);
  v66[11] = (char *)v66 - v38;
  MEMORY[0x1E0C80A78](v39);
  v66[10] = (char *)v66 - v40;
  MEMORY[0x1E0C80A78](v41);
  v66[9] = (char *)v66 - v42;
  MEMORY[0x1E0C80A78](v43);
  v66[8] = (char *)v66 - v44;
  MEMORY[0x1E0C80A78](v45);
  v66[7] = (char *)v66 - v46;
  MEMORY[0x1E0C80A78](v47);
  v66[6] = (char *)v66 - v48;
  MEMORY[0x1E0C80A78](v49);
  v66[5] = (char *)v66 - v50;
  MEMORY[0x1E0C80A78](v51);
  MEMORY[0x1E0C80A78](v52);
  v66[1] = (char *)v66 - v53;
  MEMORY[0x1E0C80A78](v54);
  MEMORY[0x1E0C80A78](v55);
  MEMORY[0x1E0C80A78](v56);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v57);
  v59 = (char *)v66 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = *v1;
  v61 = a1;
  v63 = a1[3];
  v62 = a1[4];
  __swift_project_boxed_opaque_existential_1(v61, v63);
  v64 = sub_1BA6B8518();
  v66[29] = v59;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAdjustment, v65, v63, (uint64_t)&type metadata for FormatAdjustment, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v62, (uint64_t)v59, v64, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA614ABC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  if (qword_1ED3C2478 != -1)
    swift_once();
  v7 = sub_1BB86EB84();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v1, v8, v7);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v9 = *(_QWORD *)(v2 - 72);
  sub_1BA616730(0, v4, v3, v5, v6, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA615D98(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF823C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA63658C(0);
    sub_1BA4A2870(&qword_1ED39B060, (uint64_t (*)(uint64_t))sub_1BA63658C, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA615F1C()
{
  unint64_t result;

  result = qword_1ED3A58D8;
  if (!qword_1ED3A58D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B36E0, &_s10CodingTypeON_153);
    atomic_store(result, (unint64_t *)&qword_1ED3A58D8);
  }
  return result;
}

uint64_t sub_1BA615F60(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF823C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B3490, (uint64_t (*)(void))sub_1BAE7B3E8, (uint64_t)&type metadata for FormatAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEF8248();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA6160EC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF823C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA616210(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF823C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA616500();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA616374(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF823C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B6860, (uint64_t (*)(void))sub_1BA83335C, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchListValue);
    sub_1BA616544();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA616500()
{
  unint64_t result;

  result = qword_1ED39BB58;
  if (!qword_1ED39BB58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAdjustmentBaseline, &type metadata for FormatTextAdjustmentBaseline);
    atomic_store(result, (unint64_t *)&qword_1ED39BB58);
  }
  return result;
}

unint64_t sub_1BA616544()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B808;
  if (!qword_1ED39B808)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B6860, (uint64_t (*)(void))sub_1BA83335C, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchListValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchListValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B808);
  }
  return result;
}

uint64_t sub_1BA6165AC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF823C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA616730(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF823C;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA6169FC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA616898(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF823C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA616A40();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA6169FC()
{
  unint64_t result;

  result = qword_1ED39B900;
  if (!qword_1ED39B900)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEdgeInsetsEquation, &type metadata for FormatEdgeInsetsEquation);
    atomic_store(result, (unint64_t *)&qword_1ED39B900);
  }
  return result;
}

unint64_t sub_1BA616A40()
{
  unint64_t result;

  result = qword_1ED39B538;
  if (!qword_1ED39B538)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPointEquation, &type metadata for FormatPointEquation);
    atomic_store(result, (unint64_t *)&qword_1ED39B538);
  }
  return result;
}

uint64_t sub_1BA616A84(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF823C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA616BEC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA616BEC()
{
  unint64_t result;

  result = qword_1ED39BD40;
  if (!qword_1ED39BD40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAdjustmentOtherBaseline, &type metadata for FormatTextAdjustmentOtherBaseline);
    atomic_store(result, (unint64_t *)&qword_1ED39BD40);
  }
  return result;
}

uint64_t sub_1BA616C30(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2 & 1;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF823C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA616D9C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA616D9C()
{
  unint64_t result;

  result = qword_1ED39B890;
  if (!qword_1ED39B890)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizeConstraint, &type metadata for FormatResizeConstraint);
    atomic_store(result, (unint64_t *)&qword_1ED39B890);
  }
  return result;
}

uint64_t sub_1BA616DE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorProcessor.init(from:)(a1, a2);
}

uint64_t FormatColorProcessor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  __int128 v22;

  v20[1] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v11 & 1) == 0)
  {
LABEL_8:
    sub_1BA617334();
    v22 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E724F350;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA6172CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA617324);
}

unint64_t sub_1BA617334()
{
  unint64_t result;

  result = qword_1ED3C8C40;
  if (!qword_1ED3C8C40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D19F8, &_s10CodingTypeON_178);
    atomic_store(result, (unint64_t *)&qword_1ED3C8C40);
  }
  return result;
}

unint64_t sub_1BA617378()
{
  unint64_t result;

  result = qword_1ED3B8B20[0];
  if (!qword_1ED3B8B20[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorAssignComponentProcessor, &type metadata for FormatColorAssignComponentProcessor);
    atomic_store(result, qword_1ED3B8B20);
  }
  return result;
}

unint64_t sub_1BA6173BC()
{
  unint64_t result;

  result = qword_1ED39D6F0;
  if (!qword_1ED39D6F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorModifyComponentProcessor, &type metadata for FormatColorModifyComponentProcessor);
    atomic_store(result, (unint64_t *)&qword_1ED39D6F0);
  }
  return result;
}

unint64_t sub_1BA617400()
{
  unint64_t result;

  result = qword_1ED39D4A0;
  if (!qword_1ED39D4A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorConditionalProcessor, &type metadata for FormatColorConditionalProcessor);
    atomic_store(result, (unint64_t *)&qword_1ED39D4A0);
  }
  return result;
}

unint64_t sub_1BA617444()
{
  unint64_t result;

  result = qword_1ED3BF2D0;
  if (!qword_1ED3BF2D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorBlendProcessor, &type metadata for FormatColorBlendProcessor);
    atomic_store(result, (unint64_t *)&qword_1ED3BF2D0);
  }
  return result;
}

uint64_t sub_1BA617488(_QWORD *a1)
{
  return FormatBorder.encode(to:)(a1);
}

uint64_t FormatBorder.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  char *v41;
  int v42;
  char *v43;
  int v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v41 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v43 = (char *)v40 - v6;
  MEMORY[0x1E0C80A78](v7);
  v45 = (char *)v40 - v8;
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)v40 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v40 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v40 - v15;
  sub_1BAE7AA34(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)v1;
  v48 = *(_QWORD *)(v1 + 8);
  v46 = *(_QWORD *)(v1 + 16);
  v44 = *(unsigned __int8 *)(v1 + 24);
  v42 = *(unsigned __int8 *)(v1 + 25);
  v40[1] = *(_QWORD *)(v1 + 32);
  v22 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v23 = sub_1BAE7A8C4();
  v24 = sub_1BA4A2870(&qword_1ED3D14D0, (uint64_t (*)(uint64_t))sub_1BAE7A8C4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBorder, v25, v22, (uint64_t)&type metadata for FormatBorder, v23, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v19, v24, (uint64_t)&off_1E734BD80);
  v26 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v26 != -1)
    swift_once();
  v27 = sub_1BB86EB84();
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C20);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v29(v16, v28, v27);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v30 = v49;
  sub_1BAD2F3B4(v20, 0, 0, 0, (uint64_t)v16, (uint64_t)sub_1BA90CF04, 0);
  if (v30)
  {
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v29(v13, v28, v27);
    swift_storeEnumTagMultiPayload();
    v31 = v48;
    swift_retain();
    sub_1BAD23DD4(v31, 1, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v32 = (uint64_t)v47;
    v49 = v28;
    v29(v47, v28, v27);
    swift_storeEnumTagMultiPayload();
    v33 = v46;
    swift_retain();
    sub_1BAD23F30(v33, 2, 0, 0, v32, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v32, type metadata accessor for FormatVersionRequirement);
    swift_release();
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v34 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C08);
    v35 = (uint64_t)v45;
    v29(v45, v34, v27);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2F57C(v44, 3, 0, 0, v35, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    v36 = (uint64_t)v43;
    v29(v43, v49, v27);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2F71C(v42, 4, 0, 0, v36, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double))sub_1BAE57804, (uint64_t (*)(uint64_t))sub_1BAE7AAAC, &qword_1ED3AF218);
    sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
    v38 = (uint64_t)v41;
    v29(v41, v49, v27);
    swift_storeEnumTagMultiPayload();
    v39 = swift_bridgeObjectRetain();
    sub_1BAD2F8C0(v39, 5, 0, 0);
    sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
  }
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BAE7AA34);
}

uint64_t sub_1BA617A54(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v2 = *(_QWORD *)(result + 56);
  v3 = 1 << *(_BYTE *)(result + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v10 = (unint64_t)(v3 + 63) >> 6;
  if ((v4 & v2) != 0)
  {
    v5 = __clz(__rbit64(v4 & v2));
    goto LABEL_21;
  }
  if ((unint64_t)(v3 + 63) >> 6 <= 1)
    return 1;
  v6 = *(_QWORD *)(result + 64);
  v7 = 1;
  if (v6)
    goto LABEL_20;
  v7 = 2;
  if ((unint64_t)(v3 + 63) >> 6 <= 2)
    return 1;
  v6 = *(_QWORD *)(result + 72);
  if (v6)
  {
LABEL_20:
    v5 = __clz(__rbit64(v6)) + (v7 << 6);
LABEL_21:
    v9 = *(unsigned __int8 *)(*(_QWORD *)(result + 48) + v5);
    sub_1BB8745CC();
    __asm { BR              X8 }
  }
  v7 = 3;
  if ((unint64_t)(v3 + 63) >> 6 <= 3)
    return 1;
  v6 = *(_QWORD *)(result + 80);
  if (v6)
    goto LABEL_20;
  v8 = 4;
  if (v10 <= 4)
    return 1;
  v6 = *(_QWORD *)(result + 88);
  if (v6)
  {
    v7 = 4;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v7 >= v10)
      return 1;
    v6 = *(_QWORD *)(result + 56 + 8 * v7);
    ++v8;
    if (v6)
      goto LABEL_20;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BA617E20()
{
  unint64_t result;

  result = qword_1ED39FC98;
  if (!qword_1ED39FC98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorderInset, &type metadata for FormatBorderInset);
    atomic_store(result, (unint64_t *)&qword_1ED39FC98);
  }
  return result;
}

uint64_t sub_1BA617E64(uint64_t a1)
{
  return sub_1BA6744D8(a1, &qword_1ED3B9E40, (uint64_t)&type metadata for FormatBorderEdge);
}

unint64_t sub_1BA617E78()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A0868;
  if (!qword_1ED3A0868)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3A0860, (uint64_t)&type metadata for FormatBorderEdge, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA8332C4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A0868);
  }
  return result;
}

void sub_1BA617EF0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA617F58(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_1BA617F80(v4);
  *a1 = v2;
}

uint64_t sub_1BA617F58(uint64_t a1)
{
  return sub_1BA617F6C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BA617F6C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA6821F0(a1, a2, a3, a4, &qword_1ED3B9E40, (uint64_t)&type metadata for FormatBorderEdge);
}

void sub_1BA617F80(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *__dst;
  uint64_t v81;

  v2 = v1;
  v4 = a1[1];
  if (sub_1BB8741F4() >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        sub_1BA6189E8(0, v4, 1, (uint64_t)a1);
      return;
    }
    goto LABEL_104;
  }
  if (v4 >= 0)
    v5 = v4;
  else
    v5 = v4 + 1;
  if (v4 < -1)
    goto LABEL_107;
  v76 = a1;
  if (v4 >= 2)
  {
    v81 = v1;
    v6 = v5 >> 1;
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v77 = v7;
    __dst = (char *)(v7 + 32);
    goto LABEL_13;
  }
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
  if (v4 == 1)
  {
    v77 = MEMORY[0x1E0DEE9D8];
    v81 = v1;
LABEL_13:
    v9 = 0;
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v10 = *a1;
    v78 = v4;
    do
    {
      v12 = v9;
      v13 = v9 + 1;
      if (v9 + 1 < v4)
        __asm { BR              X10 }
      if (v13 < v9)
        goto LABEL_99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1BACAA368(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v15 = *((_QWORD *)v8 + 2);
      v14 = *((_QWORD *)v8 + 3);
      v11 = v15 + 1;
      v79 = v13;
      if (v15 >= v14 >> 1)
        v8 = sub_1BACAA368((char *)(v14 > 1), v15 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v11;
      v16 = v8 + 32;
      v17 = &v8[16 * v15 + 32];
      *(_QWORD *)v17 = v12;
      *((_QWORD *)v17 + 1) = v79;
      if (v15)
      {
        while (1)
        {
          v18 = v11 - 1;
          if (v11 >= 4)
          {
            v23 = &v16[16 * v11];
            v24 = *((_QWORD *)v23 - 8);
            v25 = *((_QWORD *)v23 - 7);
            v29 = __OFSUB__(v25, v24);
            v26 = v25 - v24;
            if (v29)
              goto LABEL_88;
            v28 = *((_QWORD *)v23 - 6);
            v27 = *((_QWORD *)v23 - 5);
            v29 = __OFSUB__(v27, v28);
            v21 = v27 - v28;
            v22 = v29;
            if (v29)
              goto LABEL_89;
            v30 = v11 - 2;
            v31 = &v16[16 * v11 - 32];
            v33 = *(_QWORD *)v31;
            v32 = *((_QWORD *)v31 + 1);
            v29 = __OFSUB__(v32, v33);
            v34 = v32 - v33;
            if (v29)
              goto LABEL_91;
            v29 = __OFADD__(v21, v34);
            v35 = v21 + v34;
            if (v29)
              goto LABEL_94;
            if (v35 >= v26)
            {
              v53 = &v16[16 * v18];
              v55 = *(_QWORD *)v53;
              v54 = *((_QWORD *)v53 + 1);
              v29 = __OFSUB__(v54, v55);
              v56 = v54 - v55;
              if (v29)
                goto LABEL_98;
              v46 = v21 < v56;
              goto LABEL_55;
            }
          }
          else
          {
            if (v11 != 3)
            {
              v47 = *((_QWORD *)v8 + 4);
              v48 = *((_QWORD *)v8 + 5);
              v29 = __OFSUB__(v48, v47);
              v40 = v48 - v47;
              v41 = v29;
              goto LABEL_49;
            }
            v20 = *((_QWORD *)v8 + 4);
            v19 = *((_QWORD *)v8 + 5);
            v29 = __OFSUB__(v19, v20);
            v21 = v19 - v20;
            v22 = v29;
          }
          if ((v22 & 1) != 0)
            goto LABEL_90;
          v30 = v11 - 2;
          v36 = &v16[16 * v11 - 32];
          v38 = *(_QWORD *)v36;
          v37 = *((_QWORD *)v36 + 1);
          v39 = __OFSUB__(v37, v38);
          v40 = v37 - v38;
          v41 = v39;
          if (v39)
            goto LABEL_93;
          v42 = &v16[16 * v18];
          v44 = *(_QWORD *)v42;
          v43 = *((_QWORD *)v42 + 1);
          v29 = __OFSUB__(v43, v44);
          v45 = v43 - v44;
          if (v29)
            goto LABEL_96;
          if (__OFADD__(v40, v45))
            goto LABEL_97;
          if (v40 + v45 >= v21)
          {
            v46 = v21 < v45;
LABEL_55:
            if (v46)
              v18 = v30;
            goto LABEL_57;
          }
LABEL_49:
          if ((v41 & 1) != 0)
            goto LABEL_92;
          v49 = &v16[16 * v18];
          v51 = *(_QWORD *)v49;
          v50 = *((_QWORD *)v49 + 1);
          v29 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          if (v29)
            goto LABEL_95;
          if (v52 < v40)
            goto LABEL_15;
LABEL_57:
          v57 = v18 - 1;
          if (v18 - 1 >= v11)
          {
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_108:
            JUMPOUT(0x1BA618984);
          }
          v58 = v10;
          if (!v10)
          {
            __break(1u);
            JUMPOUT(0x1BA618998);
          }
          v59 = v8;
          v60 = &v16[16 * v57];
          v61 = *(_QWORD *)v60;
          v62 = &v16[16 * v18];
          v63 = *((_QWORD *)v62 + 1);
          v64 = v58;
          sub_1BAF36B6C((char *)(v58 + *(_QWORD *)v60), (char *)(v58 + *(_QWORD *)v62), (char *)(v58 + v63), __dst);
          if (v81)
          {
            v66 = v77;
            goto LABEL_66;
          }
          if (v63 < v61)
            goto LABEL_85;
          if (v18 > *((_QWORD *)v59 + 2))
            goto LABEL_86;
          *(_QWORD *)v60 = v61;
          *(_QWORD *)&v16[16 * v57 + 8] = v63;
          v65 = *((_QWORD *)v59 + 2);
          if (v18 >= v65)
            goto LABEL_87;
          v8 = v59;
          v11 = v65 - 1;
          memmove(&v16[16 * v18], v62 + 16, 16 * (v65 - 1 - v18));
          *((_QWORD *)v59 + 2) = v65 - 1;
          v10 = v64;
          if (v65 <= 2)
            goto LABEL_15;
        }
      }
      v11 = 1;
LABEL_15:
      v4 = v78;
      v9 = v79;
    }
    while (v79 < v78);
    v2 = v81;
    v67 = v77;
    goto LABEL_68;
  }
  v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  v67 = MEMORY[0x1E0DEE9D8];
LABEL_68:
  v68 = v8;
  if (v11 < 2)
  {
LABEL_79:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v67 + 16) = 0;
    goto LABEL_80;
  }
  v69 = *v76;
  while (1)
  {
    v70 = v11 - 2;
    if (v11 < 2)
      goto LABEL_100;
    if (!v69)
    {
      __break(1u);
LABEL_107:
      sub_1BB873EA0();
      __break(1u);
      goto LABEL_108;
    }
    v71 = v68;
    v72 = *(_QWORD *)&v68[16 * v70 + 32];
    v73 = *(_QWORD *)&v68[16 * v11 + 24];
    sub_1BAF36B6C((char *)(v69 + v72), (char *)(v69 + *(_QWORD *)&v68[16 * v11 + 16]), (char *)(v69 + v73), __dst);
    if (v2)
      break;
    if (v73 < v72)
      goto LABEL_101;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v71 = sub_1BACAB464((uint64_t)v71);
    if (v70 >= *((_QWORD *)v71 + 2))
      goto LABEL_102;
    v74 = &v71[16 * v70 + 32];
    *(_QWORD *)v74 = v72;
    *((_QWORD *)v74 + 1) = v73;
    v75 = *((_QWORD *)v71 + 2);
    if (v11 > v75)
      goto LABEL_103;
    memmove(&v71[16 * v11 + 16], &v71[16 * v11 + 32], 16 * (v75 - v11));
    v68 = v71;
    *((_QWORD *)v71 + 2) = v75 - 1;
    v11 = v75 - 1;
    if (v75 <= 2)
      goto LABEL_79;
  }
  v66 = v67;
LABEL_66:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v66 + 16) = 0;
LABEL_80:
  swift_bridgeObjectRelease();
}

void sub_1BA6189E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
    __asm { BR              X10 }
}

uint64_t sub_1BA618AA8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&loc_1BA618AF8 + *(int *)(v2 + 4 * a2)))(0x676E696461656CLL, a1, 7368564);
}

void sub_1BA618B10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  char v7;

  if (a1 != 0x676E696461656CLL || v3 != 0xE700000000000000)
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
      goto LABEL_11;
    if (v4)
    {
      v7 = *v5;
      *v5 = *(v5 - 1);
      *(v5 - 1) = v7;
      if (v1 != v2 + 1)
        JUMPOUT(0x1BA618A7CLL);
LABEL_11:
      JUMPOUT(0x1BA618A5CLL);
    }
    __break(1u);
  }
  JUMPOUT(0x1BA618A50);
}

unint64_t sub_1BA618BDC()
{
  unint64_t result;

  result = qword_1ED39B1E0;
  if (!qword_1ED39B1E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLineCap, &type metadata for FormatLineCap);
    atomic_store(result, (unint64_t *)&qword_1ED39B1E0);
  }
  return result;
}

uint64_t sub_1BA618C20()
{
  sub_1BA618CC8();
  return sub_1BB872D0C();
}

uint64_t sub_1BA618C6C()
{
  sub_1BA618CC8();
  return sub_1BB872D60();
}

unint64_t sub_1BA618CC8()
{
  unint64_t result;

  result = qword_1ED3C6440;
  if (!qword_1ED3C6440)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCCF0, &_s10CodingTypeON_57);
    atomic_store(result, (unint64_t *)&qword_1ED3C6440);
  }
  return result;
}

uint64_t destroy for FormatSourceMapNode()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA618D3C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4) + 16);
  result = swift_bridgeObjectRelease();
  *a2 = -v5;
  return result;
}

uint64_t sub_1BA618D90(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA618F20(*(_QWORD *)(v1 + *(int *)(a1 + 28)));
}

uint64_t sub_1BA618D9C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17[2];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  result = MEMORY[0x1E0DEE9D8];
  v21 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = a1 + 32;
    v7 = a2 + 4;
    v8 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1BA4C010C(v6, (uint64_t)&v18);
      v9 = v19;
      v10 = v20;
      __swift_project_boxed_opaque_existential_1(&v18, v19);
      v11 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10) + 16);
      swift_bridgeObjectRelease();
      if (a2[2]
        && (v12 = a2[7],
            v13 = a2[8],
            __swift_project_boxed_opaque_existential_1(v7, v12),
            v14 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13) + 16),
            swift_bridgeObjectRelease(),
            v11 == v14))
      {
        sub_1BA4CECCC(&v18, (uint64_t)v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BA7C0DCC(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v21;
        v16 = *(_QWORD *)(v21 + 16);
        v15 = *(_QWORD *)(v21 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1BA7C0DCC(v15 > 1, v16 + 1, 1);
          v8 = v21;
        }
        *(_QWORD *)(v8 + 16) = v16 + 1;
        sub_1BA4CECCC(v17, v8 + 40 * v16 + 32);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
      }
      v6 += 40;
      --v4;
    }
    while (v4);
    return v21;
  }
  return result;
}

uint64_t sub_1BA618F20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for FeedHeadline(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BA6EFF20(0, v6, 0);
    v7 = v17;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1BA4C2DD8(v8, (uint64_t)v5, type metadata accessor for FeedHeadline);
      v17 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BA6EFF20(v10 > 1, v11 + 1, 1);
        v7 = v17;
      }
      v15 = v2;
      v16 = sub_1BA50AD30(&qword_1ED3B2D40, 255, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v14);
      sub_1BA4C2DD8((uint64_t)v5, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_1BA4CECCC(&v14, v7 + 40 * v11 + 32);
      sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FeedHeadline);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void sub_1BA61909C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1BA6190B8(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_1BA6190B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[22];

  v13[14] = a3;
  v13[15] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13[4] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v13[7] = v5;
  v13[8] = (char *)v13 - v6;
  v13[9] = v7;
  v9 = _s10CodingKeysOMa_279(255, v5, v7, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8D2848, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8D27F8, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8D27D0, v9);
  v13[16] = v9;
  v13[17] = v10;
  v13[5] = v12;
  v13[6] = v11;
  v13[18] = v11;
  v13[19] = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_279(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_279);
}

uint64_t sub_1BA619538@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v7;

  *a5 = *a1;
  v7 = (char *)a5 + *(int *)(type metadata accessor for FormatSwitchValue.CaseValue(0, a3, a4, a4) + 36);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v7, a2, a3);
}

uint64_t type metadata accessor for FormatSwitchValue.CaseValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatSwitchValue.CaseValue);
}

uint64_t sub_1BA6195A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v4 = type metadata accessor for FormatOption();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v8, sel_scale);
  v10 = v9;

  v11 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v27 = a2;
    v28 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v13, 0);
    v14 = v28;
    v15 = *(unsigned __int8 *)(v5 + 80);
    v26 = v12;
    v16 = v12 + ((v15 + 32) & ~v15);
    v17 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_1BA900B30(v16, (uint64_t)v7);
      v18 = swift_allocBox();
      sub_1BA8569CC((uint64_t)v7, v19);
      v28 = v14;
      v21 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1BA76B828(v20 > 1, v21 + 1, 1);
        v14 = v28;
      }
      *(_QWORD *)(v14 + 16) = v21 + 1;
      *(_QWORD *)(v14 + 8 * v21 + 32) = v18 | 0x4000000000000000;
      v16 += v17;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    a2 = v27;
  }
  type metadata accessor for FormatVariableCollection();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = MEMORY[0x1E0DEE9E0];
  type metadata accessor for FormatOptionCollection();
  swift_allocObject();
  v23 = sub_1BA6E1E0C(v14, v22);
  swift_bridgeObjectRelease();
  type metadata accessor for FormatContextLayoutOptions();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = v10;
  *(_QWORD *)(result + 32) = 0x3FF0000000000000;
  *(_QWORD *)(result + 40) = v23;
  v25 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = v25;
  *a2 = result;
  return result;
}

uint64_t sub_1BA6197DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *(_BYTE *)(*(_QWORD *)a1 + 16);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_beginAccess();
  v10 = *(_QWORD *)(a3 + 16);
  type metadata accessor for FormatContextLayoutOptions();
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = v8;
  *(_QWORD *)(v11 + 32) = v9;
  *(_QWORD *)(v11 + 40) = a2;
  *(_QWORD *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 56) = v10;
  *a4 = v11;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA619874@<X0>(char a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BB86D774();
  v9 = v8;
  sub_1BB86D5D0();
  v11 = v10;
  type metadata accessor for FormatContextLayoutOptions();
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v9;
  *(_QWORD *)(v12 + 32) = v11;
  *(_QWORD *)(v12 + 40) = a2;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v12 + 56) = a3;
  *a4 = v12;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA619904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_BYTE *)(a1 + *(int *)(v8 + 44));
  sub_1BB86D774();
  v11 = v10;
  v12 = *(_QWORD *)(a1 + *(int *)(v8 + 32));
  type metadata accessor for FormatContextLayoutOptions();
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v9;
  *(_QWORD *)(v13 + 24) = v11;
  *(_QWORD *)(v13 + 32) = v12;
  *(_QWORD *)(v13 + 40) = a2;
  *(_QWORD *)(v13 + 48) = 0;
  *(_QWORD *)(v13 + 56) = a3;
  *a4 = v13;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA61999C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for GroupLayoutContext() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BA619904(v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_1BA6199FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_BYTE *)(*(_QWORD *)a1 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  type metadata accessor for FormatContextLayoutOptions();
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = v5;
  *(_QWORD *)(v9 + 24) = v6;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v8;
  *(_QWORD *)(v9 + 48) = 0;
  *(_QWORD *)(v9 + 56) = a2;
  *a3 = v9;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA619A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_BYTE *)(*(_QWORD *)a1 + 16);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  type metadata accessor for FormatContextLayoutOptions();
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v8;
  *(_QWORD *)(v10 + 32) = v9;
  *(_QWORD *)(v10 + 40) = a2;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v10 + 56) = a3;
  *a4 = v10;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FormatContextLayoutOptions()
{
  return objc_opt_self();
}

uint64_t sub_1BA619B04(char a1)
{
  if ((a1 & 1) != 0)
    return 1885433183;
  else
    return 0x65756C6176;
}

uint64_t FormatCompilerOptions.Newsroom.Environment.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE74F44(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BAE74E3C();
  v14 = sub_1BA4A2870(&qword_1ED3D0F90, (uint64_t (*)(uint64_t))sub_1BAE74E3C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCompilerOptions.Newsroom.Environment, v15, v11, (uint64_t)&type metadata for FormatCompilerOptions.Newsroom.Environment, v13, (uint64_t)&type metadata for FormatVersions.JazzkonC, v12, (uint64_t)v8, v14, (uint64_t)&off_1E734BD80);
  v16 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD18454(v10, v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE74F44);
}

uint64_t FormatTypeDefinition.Enum.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEC8C70(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAEC8B68();
  v13 = sub_1BA4A2870(&qword_1ED3D0F50, (uint64_t (*)(uint64_t))sub_1BAEC8B68, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTypeDefinition.Enum, v14, v10, (uint64_t)&type metadata for FormatTypeDefinition.Enum, v12, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BD80);
  v15 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v5, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD189B8(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAEC8C70);
}

unint64_t sub_1BA619F2C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BED8;
  if (!qword_1ED39BED8)
  {
    sub_1BA4AD288(255, &qword_1ED3B9500, (uint64_t)&type metadata for FormatTypeDefinition.Case, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82C384();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BED8);
  }
  return result;
}

uint64_t FormatSwitchNodeDefault.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[2];
  char v25;
  uint64_t v26;

  v3 = v2;
  v4 = v1;
  v6 = *v1;
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE7C84C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE7C93C();
  v16 = sub_1BA4A2870(&qword_1ED3D10E0, (uint64_t (*)(uint64_t))sub_1BAE7C93C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v6, v17, v13, v6, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v12, v16, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v18 = v4[2];
  v19 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = sub_1BAE48C54((uint64_t)v9, 0, 0, 0, (uint64_t)sub_1BA90CF04, 0);
  if (!v3 && (v22 & 1) != 0)
  {
    v24[0] = 0;
    v24[1] = 0;
    v25 = 0;
    v26 = v18;
    sub_1BAE7C8C4();
    sub_1BA4A2870(&qword_1ED3AECE0, (uint64_t (*)(uint64_t))sub_1BAE7C8C4, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA653FC0();
    sub_1BB874464();
  }
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE7C84C);
}

uint64_t sub_1BA61A24C()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x7365736163;
}

uint64_t sub_1BA61A27C()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x726F7463656C6573;
}

uint64_t sub_1BA61A2B0()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x6E6572646C696863;
}

BOOL sub_1BA61A2E4@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1BA61A320();
  *a1 = result;
  return result;
}

BOOL sub_1BA61A320()
{
  uint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

NewsFeed::FormatImageResize_optional __swiftcall FormatImageResize.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatImageResize_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FeedGroupPaidVisibility_optional __swiftcall FeedGroupPaidVisibility.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedGroupPaidVisibility_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatItemTrait_optional __swiftcall FormatItemTrait.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatItemTrait_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1BB87450C();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 32;
  switch(v3)
  {
    case 0:
      goto LABEL_34;
    case 1:
      v5 = 1;
      goto LABEL_34;
    case 2:
      v5 = 2;
      goto LABEL_34;
    case 3:
      v5 = 3;
      goto LABEL_34;
    case 4:
      v5 = 4;
      goto LABEL_34;
    case 5:
      v5 = 5;
      goto LABEL_34;
    case 6:
      v5 = 6;
      goto LABEL_34;
    case 7:
      v5 = 7;
      goto LABEL_34;
    case 8:
      v5 = 8;
      goto LABEL_34;
    case 9:
      v5 = 9;
      goto LABEL_34;
    case 10:
      v5 = 10;
      goto LABEL_34;
    case 11:
      v5 = 11;
      goto LABEL_34;
    case 12:
      v5 = 12;
      goto LABEL_34;
    case 13:
      v5 = 13;
      goto LABEL_34;
    case 14:
      v5 = 14;
      goto LABEL_34;
    case 15:
      v5 = 15;
      goto LABEL_34;
    case 16:
      v5 = 16;
      goto LABEL_34;
    case 17:
      v5 = 17;
      goto LABEL_34;
    case 18:
      v5 = 18;
      goto LABEL_34;
    case 19:
      v5 = 19;
      goto LABEL_34;
    case 20:
      v5 = 20;
      goto LABEL_34;
    case 21:
      v5 = 21;
      goto LABEL_34;
    case 22:
      v5 = 22;
      goto LABEL_34;
    case 23:
      v5 = 23;
      goto LABEL_34;
    case 24:
      v5 = 24;
      goto LABEL_34;
    case 25:
      v5 = 25;
      goto LABEL_34;
    case 26:
      v5 = 26;
      goto LABEL_34;
    case 27:
      v5 = 27;
      goto LABEL_34;
    case 28:
      v5 = 28;
      goto LABEL_34;
    case 29:
      v5 = 29;
      goto LABEL_34;
    case 30:
      v5 = 30;
      goto LABEL_34;
    case 31:
      v5 = 31;
LABEL_34:
      v6 = v5;
      break;
    case 32:
      break;
    case 33:
      v6 = 33;
      break;
    case 34:
      v6 = 34;
      break;
    case 35:
      v6 = 35;
      break;
    case 36:
      v6 = 36;
      break;
    case 37:
      v6 = 37;
      break;
    case 38:
      v6 = 38;
      break;
    case 39:
      v6 = 39;
      break;
    case 40:
      v6 = 40;
      break;
    case 41:
      v6 = 41;
      break;
    case 42:
      v6 = 42;
      break;
    case 43:
      v6 = 43;
      break;
    case 44:
      v6 = 44;
      break;
    case 45:
      v6 = 45;
      break;
    case 46:
      v6 = 46;
      break;
    case 47:
      v6 = 47;
      break;
    case 48:
      v6 = 48;
      break;
    case 49:
      v6 = 49;
      break;
    default:
      v6 = 50;
      break;
  }
  *v2 = v6;
  return result;
}

NewsFeed::FormatFontScalingStyle_optional __swiftcall FormatFontScalingStyle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatFontScalingStyle_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatAnchor_optional __swiftcall FormatAnchor.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatAnchor_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatFontWeight_optional __swiftcall FormatFontWeight.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatFontWeight_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatColorComponent_optional __swiftcall FormatColorComponent.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatColorComponent_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatSystemColor_optional __swiftcall FormatSystemColor.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatSystemColor_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1BB87450C();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 23;
  switch(v3)
  {
    case 0:
      goto LABEL_25;
    case 1:
      v5 = 1;
      goto LABEL_25;
    case 2:
      v5 = 2;
      goto LABEL_25;
    case 3:
      v5 = 3;
      goto LABEL_25;
    case 4:
      v5 = 4;
      goto LABEL_25;
    case 5:
      v5 = 5;
      goto LABEL_25;
    case 6:
      v5 = 6;
      goto LABEL_25;
    case 7:
      v5 = 7;
      goto LABEL_25;
    case 8:
      v5 = 8;
      goto LABEL_25;
    case 9:
      v5 = 9;
      goto LABEL_25;
    case 10:
      v5 = 10;
      goto LABEL_25;
    case 11:
      v5 = 11;
      goto LABEL_25;
    case 12:
      v5 = 12;
      goto LABEL_25;
    case 13:
      v5 = 13;
      goto LABEL_25;
    case 14:
      v5 = 14;
      goto LABEL_25;
    case 15:
      v5 = 15;
      goto LABEL_25;
    case 16:
      v5 = 16;
      goto LABEL_25;
    case 17:
      v5 = 17;
      goto LABEL_25;
    case 18:
      v5 = 18;
      goto LABEL_25;
    case 19:
      v5 = 19;
      goto LABEL_25;
    case 20:
      v5 = 20;
      goto LABEL_25;
    case 21:
      v5 = 21;
      goto LABEL_25;
    case 22:
      v5 = 22;
LABEL_25:
      v6 = v5;
      break;
    case 23:
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    case 27:
      v6 = 27;
      break;
    case 28:
      v6 = 28;
      break;
    case 29:
      v6 = 29;
      break;
    case 30:
      v6 = 30;
      break;
    case 31:
      v6 = 31;
      break;
    case 32:
      v6 = 32;
      break;
    case 33:
      v6 = 33;
      break;
    case 34:
      v6 = 34;
      break;
    case 35:
      v6 = 35;
      break;
    case 36:
      v6 = 36;
      break;
    case 37:
      v6 = 37;
      break;
    case 38:
      v6 = 38;
      break;
    case 39:
      v6 = 39;
      break;
    case 40:
      v6 = 40;
      break;
    default:
      v6 = 41;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t sub_1BA61A934@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA61A95C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA61A95C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  char v71;
  __int128 v72;
  char v73;
  unint64_t v74;

  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  *(_QWORD *)&v67 = v2;
  v62 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v64 = (char *)&v52 - v3;
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v65 = v4;
  v61 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v63 = (char *)&v52 - v5;
  sub_1BAEE91B8(0, (unint64_t *)&qword_1ED3BBEC0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v68 = (uint64_t)&v52 - v9;
  sub_1BAEE9204();
  *(_QWORD *)&v66 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAECABCC();
  sub_1BA4A2870(&qword_1ED3D0D70, (uint64_t (*)(uint64_t))sub_1BAECABCC, (uint64_t)&unk_1BB8FFC6C);
  v15 = v69;
  sub_1BB87468C();
  v16 = (void *)v15;
  if (v15)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v69 = v8;
  v60 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17 = sub_1BB872874();
  v18 = Dictionary<>.errorOnUnknownKeys.getter(v17);
  swift_bridgeObjectRelease();
  v19 = v66;
  v20 = (uint64_t)v13;
  v21 = v67;
  if ((v18 & 1) != 0)
  {
    v22 = sub_1BB8740EC();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = (_BYTE *)(v22 + 48);
      while (*v24 != 1)
      {
        v24 += 24;
        if (!--v23)
          goto LABEL_7;
      }
      v30 = *((_QWORD *)v24 - 2);
      v29 = *((_QWORD *)v24 - 1);
      swift_bridgeObjectRetain_n();
      v31 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v31);
      v32 = v19;
      sub_1BAECAC4C();
      sub_1BA61B32C();
      sub_1BAECAC90();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v33 = sub_1BAE71220((uint64_t)&unk_1E72517F0);
      swift_release_n();
      sub_1BA98D1F0();
      v16 = (void *)swift_allocError();
      *(_QWORD *)v34 = v30;
      *(_QWORD *)(v34 + 8) = v29;
      *(_QWORD *)(v34 + 16) = v33;
      *(_OWORD *)(v34 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v30, v29, 1);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v20, v32);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v25 = sub_1BAE0F8F8(v20, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEE9204);
  v27 = v26;
  v59 = v25;
  v72 = xmmword_1BB8A1A10;
  v73 = 0;
  v28 = sub_1BB874098();
  v58 = v35;
  v56 = v28;
  v57 = xmmword_1BB8D2D60;
  v72 = xmmword_1BB8D2D60;
  v73 = 0;
  v36 = sub_1BB8740F8();
  if ((v36 & 1) != 0)
  {
    v70 = v57;
    v71 = 0;
    sub_1BAEE927C();
    sub_1BB8740D4();
    v37 = v68;
    *(_QWORD *)&v57 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v37, v7);
  }
  else
  {
    *(_QWORD *)&v57 = MEMORY[0x1E0DEE9D8];
  }
  v72 = xmmword_1BB8D2D70;
  v73 = 0;
  v68 = sub_1BB87402C();
  v69 = v39;
  v72 = xmmword_1BB8D2D90;
  v73 = 0;
  v53 = sub_1BB87402C();
  v55 = v40;
  v54 = xmmword_1BB8D2D80;
  v72 = xmmword_1BB8D2D80;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v54;
    v71 = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v41 = v19;
    v42 = v74;
  }
  else
  {
    v41 = v19;
    v42 = 0xB000000000000000;
  }
  *(_QWORD *)&v54 = v42;
  v66 = xmmword_1BB8D2DA0;
  v72 = xmmword_1BB8D2DA0;
  v73 = 0;
  v43 = sub_1BB8740F8();
  v44 = v65;
  if ((v43 & 1) != 0)
  {
    v70 = v66;
    v71 = 0;
    sub_1BAEB7D04();
    v45 = v63;
    sub_1BB8740D4();
    v46 = v45;
    v47 = v41;
    v48 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v44);
  }
  else
  {
    v47 = v41;
    v48 = MEMORY[0x1E0DEE9D8];
  }
  v72 = xmmword_1BB8D2DB0;
  v73 = 0;
  sub_1BA4FB6A0();
  v49 = v64;
  sub_1BB8740D4();
  v65 = v48;
  *(_QWORD *)&v66 = v27;
  v50 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v49, v21);
  v67 = xmmword_1BB8D2DD0;
  v72 = xmmword_1BB8D2DD0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v67;
    v71 = 0;
    sub_1BB8740D4();
    v51 = v74;
  }
  else
  {
    v51 = 0;
  }
  *(_QWORD *)&v72 = v54;
  type metadata accessor for FormatVOverlayNode();
  swift_allocObject();
  KeyPath = sub_1BA61B3D4(v59, v66, v56, v58, v57, v68, v69, v53, v55, (uint64_t *)&v72, v65, v50, v51);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v20, v47);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

unint64_t sub_1BA61B32C()
{
  unint64_t result;

  result = qword_1ED3C7EF0;
  if (!qword_1ED3C7EF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4350, &_s10CodingKeysON_9);
    atomic_store(result, (unint64_t *)&qword_1ED3C7EF0);
  }
  return result;
}

void sub_1BA61B370()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBEC0)
  {
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBEC0);
  }
}

uint64_t sub_1BA61B3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, char a13)
{
  return sub_1BA61B3F0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_1BA61B3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v13;
  uint64_t v23;

  v23 = *a10;
  *(_OWORD *)(v13 + 72) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  swift_beginAccess();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  *(_QWORD *)(v13 + 32) = a3;
  *(_QWORD *)(v13 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v13 + 48) = a5;
  swift_beginAccess();
  *(_QWORD *)(v13 + 56) = a6;
  *(_QWORD *)(v13 + 64) = a7;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v13 + 72) = a8;
  *(_QWORD *)(v13 + 80) = a9;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v13 + 88) = v23;
  swift_beginAccess();
  *(_QWORD *)(v13 + 96) = a11;
  swift_beginAccess();
  *(_QWORD *)(v13 + 104) = a12;
  swift_beginAccess();
  *(_BYTE *)(v13 + 112) = a13;
  return v13;
}

uint64_t sub_1BA61B588@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBorder.init(from:)(a1, a2);
}

uint64_t FormatBorder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (**v8)(char *, _QWORD);
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  void (**v41)(char *, _QWORD);
  __int128 v42;
  char v43;
  __int128 v44;
  char v45;
  int v46;
  unsigned __int8 v47;

  v40 = a2;
  sub_1BAEE91B8(0, &qword_1ED3C4770);
  v38 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v34 - v5;
  sub_1BAE7A84C();
  *(_QWORD *)&v39 = v7;
  v8 = *(void (***)(char *, _QWORD))(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7A8C4();
  sub_1BA4A2870(&qword_1ED3D14D0, (uint64_t (*)(uint64_t))sub_1BAE7A8C4, (uint64_t)&unk_1BB8FFC6C);
  v11 = v41;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v36 = v4;
  v37 = v6;
  v41 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v39;
  v16 = v40;
  if ((v14 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v21 = v15;
      v22 = *((_QWORD *)v19 - 2);
      v23 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v24);
      *((_QWORD *)&v34 - 4) = &_s10CodingKeysON_209;
      *((_QWORD *)&v34 - 3) = sub_1BAE7A944();
      *((_QWORD *)&v34 - 2) = sub_1BA61BBD0();
      *((_QWORD *)&v34 - 1) = sub_1BAE7A988();
      swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71220((uint64_t)&unk_1E7250938);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v26 = v22;
      *(_QWORD *)(v26 + 8) = v23;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      v41[1](v10, v21);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v20 = sub_1BAE0FA28((uint64_t)v10);
  v44 = xmmword_1BB8A1A10;
  v45 = 0;
  sub_1BA62C9A0();
  sub_1BB8740D4();
  v28 = v42;
  v44 = xmmword_1BB8D2D60;
  v45 = 0;
  sub_1BA61BC14();
  sub_1BB8740D4();
  v35 = v20;
  v29 = v15;
  v30 = v42;
  v34 = xmmword_1BB8D2D70;
  v44 = xmmword_1BB8D2D70;
  v45 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v42 = v34;
    v43 = 0;
    sub_1BA61BC58();
    sub_1BB8740D4();
    *(_QWORD *)&v34 = v30;
    v46 = v47;
  }
  else
  {
    *(_QWORD *)&v34 = v30;
    v46 = 1;
  }
  v39 = xmmword_1BB8D2D90;
  v44 = xmmword_1BB8D2D90;
  v45 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v42 = v39;
    v43 = 0;
    sub_1BA61CE00();
    sub_1BB8740D4();
    v31 = v47;
  }
  else
  {
    v31 = 0;
  }
  v39 = xmmword_1BB8D2D80;
  v44 = xmmword_1BB8D2D80;
  v45 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v42 = v39;
    v43 = 0;
    sub_1BAE7A9CC();
    v32 = v38;
    sub_1BB8740D4();
    v33 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v32);
  }
  else
  {
    v33 = MEMORY[0x1E0DEE9D8];
  }
  v41[1](v10, v29);
  *(_QWORD *)v16 = v35;
  *(_QWORD *)(v16 + 8) = v28;
  *(_QWORD *)(v16 + 16) = v34;
  *(_BYTE *)(v16 + 24) = v46;
  *(_BYTE *)(v16 + 25) = v31;
  *(_QWORD *)(v16 + 32) = v33;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA61BBD0()
{
  unint64_t result;

  result = qword_1ED3C6758;
  if (!qword_1ED3C6758)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF8D0, &_s10CodingKeysON_209);
    atomic_store(result, (unint64_t *)&qword_1ED3C6758);
  }
  return result;
}

unint64_t sub_1BA61BC14()
{
  unint64_t result;

  result = qword_1ED3B3238;
  if (!qword_1ED3B3238)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFloat, &type metadata for FormatFloat);
    atomic_store(result, (unint64_t *)&qword_1ED3B3238);
  }
  return result;
}

unint64_t sub_1BA61BC58()
{
  unint64_t result;

  result = qword_1ED3BB6D0;
  if (!qword_1ED3BB6D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorderInset, &type metadata for FormatBorderInset);
    atomic_store(result, (unint64_t *)&qword_1ED3BB6D0);
  }
  return result;
}

unint64_t sub_1BA61BC9C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B96B0;
  if (!qword_1ED3B96B0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B96A8, (uint64_t (*)(void))sub_1BA61CDBC, (uint64_t)&type metadata for FormatBorderEdge, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v2 = v1;
    v3 = sub_1BA83323C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3D8], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B96B0);
  }
  return result;
}

uint64_t sub_1BA61BD1C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  char v4;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BB8745CC();
    sub_1BB872A90();
    v2 = sub_1BB874608() & ~(-1 << *(_BYTE *)(a1 + 32));
    if (((*(_QWORD *)(a1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
      __asm { BR              X9 }
  }
  v3 = sub_1BA61C578((uint64_t)&unk_1E724D5A8);
  v4 = sub_1BA617A54(a1, v3);
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
    return sub_1BA8620DC((uint64_t)&unk_1E724D5D0);
  else
    return swift_bridgeObjectRetain();
}

void sub_1BA61BEB8()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BA61BE74);
}

uint64_t sub_1BA61BEC4(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, _QWORD))
{
  uint64_t v6;
  uint64_t result;
  unsigned __int8 *v8;
  unsigned int v9;
  char v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  a2();
  result = sub_1BB873060();
  v11 = result;
  if (v6)
  {
    v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

void sub_1BA61BF38(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA61BF9C()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v5;
  _BYTE *v6;
  uint64_t v7;

  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v2 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v1 + 32));
  if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v5;
  *v5 = 0x8000000000000000;
  sub_1BA61C24C(v0, v2, isUniquelyReferenced_nonNull_native);
  *v5 = v7;
  swift_bridgeObjectRelease();
  result = 1;
  *v6 = (_BYTE)v0;
  return result;
}

void *sub_1BA61C24C(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BA9DC078();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_1BA9E8260();
LABEL_8:
      sub_1BB8745CC();
      __asm { BR              X10 }
    }
    result = sub_1BA9E6E00(&qword_1ED3B9A00, (void (*)(void))sub_1BA61CDBC);
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x1BA61C55CLL);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

uint64_t sub_1BA61C578(uint64_t a1)
{
  return sub_1BA61BEC4(a1, (void (*)(void))sub_1BA61CDBC, (uint64_t)&type metadata for FormatBorderEdge, (void (*)(char *, _QWORD))sub_1BA61BF38);
}

uint64_t sub_1BA61C594(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v8;
  uint64_t v10;

  v4 = *v2;
  sub_1BB8745CC();
  FormatOptionType.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v5 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v8;
  *v8 = 0x8000000000000000;
  sub_1BA61C99C(a2, v5, isUniquelyReferenced_nonNull_native);
  *v8 = v10;
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_1BA61C99C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;

  v5 = *(_QWORD *)(*v3 + 16);
  v6 = *(_QWORD *)(*v3 + 24);
  if (v6 <= v5 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BA9DCBD0();
    }
    else
    {
      if (v6 > v5)
      {
        result = (uint64_t)sub_1BA9E6E00(&qword_1ED3B9A08, (void (*)(void))sub_1BA832824);
        goto LABEL_10;
      }
      sub_1BA9E8CFC();
    }
    v8 = *v3;
    sub_1BB8745CC();
    FormatOptionType.rawValue.getter();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    result = sub_1BB874608();
    a2 = result & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1BA61CDA0);
  }
  *(_QWORD *)(v9 + 16) = v12;
  return result;
}

unint64_t sub_1BA61CDBC()
{
  unint64_t result;

  result = qword_1ED3B4808;
  if (!qword_1ED3B4808)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorderEdge, &type metadata for FormatBorderEdge);
    atomic_store(result, (unint64_t *)&qword_1ED3B4808);
  }
  return result;
}

unint64_t sub_1BA61CE00()
{
  unint64_t result;

  result = qword_1ED3B3AE0;
  if (!qword_1ED3B3AE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLineCap, &type metadata for FormatLineCap);
    atomic_store(result, (unint64_t *)&qword_1ED3B3AE0);
  }
  return result;
}

void sub_1BA61CE44(_QWORD *a1)
{
  FormatNodeStyle.encode(to:)(a1);
}

void FormatNodeStyle.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v46[34];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v46[14] = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v46[15] = (char *)v46 - v6;
  MEMORY[0x1E0C80A78](v7);
  v46[13] = (char *)v46 - v8;
  MEMORY[0x1E0C80A78](v9);
  v46[12] = (char *)v46 - v10;
  MEMORY[0x1E0C80A78](v11);
  v46[11] = (char *)v46 - v12;
  MEMORY[0x1E0C80A78](v13);
  v46[10] = (char *)v46 - v14;
  MEMORY[0x1E0C80A78](v15);
  v46[9] = (char *)v46 - v16;
  MEMORY[0x1E0C80A78](v17);
  v46[8] = (char *)v46 - v18;
  MEMORY[0x1E0C80A78](v19);
  v46[7] = (char *)v46 - v20;
  MEMORY[0x1E0C80A78](v21);
  v46[6] = (char *)v46 - v22;
  MEMORY[0x1E0C80A78](v23);
  v46[5] = (char *)v46 - v24;
  MEMORY[0x1E0C80A78](v25);
  v46[4] = (char *)v46 - v26;
  MEMORY[0x1E0C80A78](v27);
  v46[3] = (char *)v46 - v28;
  MEMORY[0x1E0C80A78](v29);
  v46[2] = (char *)v46 - v30;
  MEMORY[0x1E0C80A78](v31);
  v46[1] = (char *)v46 - v32;
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  MEMORY[0x1E0C80A78](v35);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v46 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v1[2];
  v46[18] = v1[1];
  v46[19] = v39;
  v40 = v1[4];
  v46[20] = v1[3];
  v46[21] = v40;
  v41 = v1[6];
  v46[22] = v1[5];
  v46[33] = v1[7];
  v42 = a1[3];
  v43 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v42);
  v44 = sub_1BA6B8518();
  v46[17] = v38;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatNodeStyle, v45, v42, (uint64_t)&type metadata for FormatNodeStyle, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v43, (uint64_t)v38, v44, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA61D1CC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = qword_1ED3C2478;
  swift_retain();
  if (v4 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v6, v5);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v7 = *(_QWORD *)(v3 - 200);
  sub_1BA61DEF4(0, v2, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA76B698(v2, *(_QWORD *)(v3 - 192), *(_QWORD *)(v3 - 184), *(_QWORD *)(v3 - 176), *(_QWORD *)(v3 - 168), *(_QWORD *)(v3 - 160), v0);
}

uint64_t sub_1BA61DD2C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatTextNodeStyle();
    sub_1BA4A2870(&qword_1ED3A66F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA61DEB0()
{
  unint64_t result;

  result = qword_1ED39B2A0;
  if (!qword_1ED39B2A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E42C0, &type metadata for FormatNodeStyle.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39B2A0);
  }
  return result;
}

uint64_t sub_1BA61DEF4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatViewNodeStyle();
    sub_1BA4A2870(&qword_1ED3A66F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeStyle, (uint64_t)&protocol conformance descriptor for FormatViewNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA61E078(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatImageNodeStyle();
    sub_1BA4A2870(&qword_1ED3A6808, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNodeStyle, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA61E1FC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatLayeredMediaNodeStyle();
    sub_1BA4A2870(&qword_1ED3A7FC0, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeStyle, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA61E380(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatWebEmbedNodeStyle();
    sub_1BA4A2870(&qword_1ED3A72F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbedNodeStyle, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA61E504(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatItemNodeStyle(0);
    sub_1BA4A2870(&qword_1ED3A6620, type metadata accessor for FormatItemNodeStyle, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA61E688(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatCustomNodeStyle();
    sub_1BA4A2870(&qword_1ED3A6AE8, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle, (uint64_t)&protocol conformance descriptor for FormatCustomNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA61E80C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatGroupNodeMaskStyle();
    sub_1BA4A2870(&qword_1ED3A73F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskStyle, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMaskStyle);
    sub_1BB874464();
  }
  return swift_release();
}

void sub_1BA61E990(_QWORD *a1)
{
  FormatTextNodeBinding.encode(to:)(a1);
}

void FormatTextNodeBinding.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD v40[42];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v40[13] = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v40[12] = (char *)v40 - v6;
  MEMORY[0x1E0C80A78](v7);
  v40[11] = (char *)v40 - v8;
  MEMORY[0x1E0C80A78](v9);
  v40[8] = (char *)v40 - v10;
  MEMORY[0x1E0C80A78](v11);
  v40[7] = (char *)v40 - v12;
  MEMORY[0x1E0C80A78](v13);
  v40[6] = (char *)v40 - v14;
  MEMORY[0x1E0C80A78](v15);
  v40[5] = (char *)v40 - v16;
  MEMORY[0x1E0C80A78](v17);
  v40[4] = (char *)v40 - v18;
  MEMORY[0x1E0C80A78](v19);
  v40[9] = (char *)v40 - v20;
  MEMORY[0x1E0C80A78](v21);
  v40[10] = (char *)v40 - v22;
  MEMORY[0x1E0C80A78](v23);
  v40[3] = (char *)v40 - v24;
  MEMORY[0x1E0C80A78](v25);
  v40[2] = (char *)v40 - v26;
  MEMORY[0x1E0C80A78](v27);
  v40[1] = (char *)v40 - v28;
  MEMORY[0x1E0C80A78](v29);
  v40[0] = (char *)v40 - v30;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v40 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40[16] = *(_QWORD *)v1;
  v40[15] = *(_QWORD *)(v1 + 8);
  v40[14] = *(_QWORD *)(v1 + 16);
  v34 = *(_BYTE *)(v1 + 48);
  v35 = *(_BYTE *)(v1 + 49);
  v37 = a1[3];
  v36 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v37);
  v38 = sub_1BA6B8518();
  v40[41] = v33;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextNodeBinding, v39, v37, (uint64_t)&type metadata for FormatTextNodeBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v36, (uint64_t)v33, v38, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA61ECC8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 - 280);
  *(_QWORD *)(v4 - 256) = *(_QWORD *)(v4 - 272);
  *(_QWORD *)(v4 - 248) = v5;
  *(_QWORD *)(v4 - 240) = *(_QWORD *)(v4 - 288);
  *(_QWORD *)(v4 - 232) = v3;
  *(_QWORD *)(v4 - 224) = v1;
  *(_QWORD *)(v4 - 216) = v2;
  *(_BYTE *)(v4 - 208) = v0;
  if (qword_1ED3C2478 != -1)
    swift_once();
  v6 = sub_1BB86EB84();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED476C20);
  v8 = *(_QWORD *)(v4 - 400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v8, v7, v6);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v9 = *(_QWORD *)(v4 - 72);
  sub_1BA61F6DC(0, v4 - 256, v8);
  sub_1BA4A2E80(v8, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA61F6DC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[56];

  v16[55] = a1;
  sub_1BA968048(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA404;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA61F890();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA61F84C()
{
  unint64_t result;

  result = qword_1ED3A6D00;
  if (!qword_1ED3A6D00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1B10, &_s10CodingTypeON_167);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D00);
  }
  return result;
}

unint64_t sub_1BA61F890()
{
  unint64_t result;

  result = qword_1ED39B7D8;
  if (!qword_1ED39B7D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Text, &type metadata for FormatHeadlineBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED39B7D8);
  }
  return result;
}

uint64_t sub_1BA61F8D4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEFA404;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA61FA3C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[56];

  v16[55] = a1;
  sub_1BA968270(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA404;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA61FBAC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA61FBAC()
{
  unint64_t result;

  result = qword_1ED39B4C8;
  if (!qword_1ED39B4C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Text, &type metadata for FormatGroupBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED39B4C8);
  }
  return result;
}

uint64_t sub_1BA61FBF0(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA404;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA61FD54();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA61FD54()
{
  unint64_t result;

  result = qword_1ED39FD50;
  if (!qword_1ED39FD50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Text, &type metadata for FormatIssueBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED39FD50);
  }
  return result;
}

uint64_t sub_1BA61FD98(_QWORD *a1)
{
  return FormatCornerRadius.Value.encode(to:)(a1);
}

uint64_t FormatCornerRadius.Value.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[4];
  int v28;
  _BYTE *v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  char v33;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v29 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v27[-v7];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v27[-v10];
  sub_1BAE8E4A8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *(double *)v1;
  v30 = *(_QWORD *)(v1 + 8);
  v28 = *(unsigned __int8 *)(v1 + 16);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BAE8E3A0();
  v19 = sub_1BA4A2870(&qword_1ED3D0D00, (uint64_t (*)(uint64_t))sub_1BAE8E3A0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCornerRadius.Value, v20, v16, (uint64_t)&type metadata for FormatCornerRadius.Value, v18, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v14, v19, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v23(v11, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD2EEAC(0, 0, 0, v15, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE5190C, (uint64_t (*)(uint64_t))sub_1BAE8E520, &qword_1ED3AE830);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v23(v8, v22, v21);
    swift_storeEnumTagMultiPayload();
    v24 = swift_bridgeObjectRetain();
    sub_1BAD2B920(v24, 1, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v25 = (uint64_t)v29;
    v23(v29, v22, v21);
    swift_storeEnumTagMultiPayload();
    if ((v28 & 1) == 0 && (sub_1BAE5190C(v25, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v32 = xmmword_1BB8D2D60;
      v33 = 0;
      v31 = 0;
      sub_1BAE8E520();
      sub_1BA4A2870(&qword_1ED3AE830, (uint64_t (*)(uint64_t))sub_1BAE8E520, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BAE8E4A8);
}

uint64_t sub_1BA620178(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

unint64_t sub_1BA62036C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BE08;
  if (!qword_1ED39BE08)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B93D8, (uint64_t)&type metadata for FormatCorner, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA836438();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BE08);
  }
  return result;
}

uint64_t sub_1BA6203E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA620418();
  *a1 = result;
  return result;
}

uint64_t sub_1BA620418()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE)
    return 14;
  else
    return v0;
}

unint64_t sub_1BA62045C()
{
  unint64_t result;

  result = qword_1ED3B5138;
  if (!qword_1ED3B5138)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSystemColor, &type metadata for FormatSystemColor);
    atomic_store(result, (unint64_t *)&qword_1ED3B5138);
  }
  return result;
}

uint64_t sub_1BA6204A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA6204D4 + 4 * byte_1BB8AE3B0[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA6204D4()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1BA6204EC()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BA620504()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA620520()
{
  return 1885433183;
}

uint64_t FormatTextNodeFormat.Token.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  __int128 v48;
  char v49;
  uint64_t v50;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v41 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v43 = (char *)&v40 - v6;
  MEMORY[0x1E0C80A78](v7);
  v45 = (char *)&v40 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - v10;
  sub_1BAE7CF9C(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = v1[1];
  v44 = v1[2];
  v42 = v1[3];
  v40 = v1[4];
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BAE7CE94();
  v20 = sub_1BA4A2870(&qword_1ED3D1650, (uint64_t (*)(uint64_t))sub_1BAE7CE94, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextNodeFormat.Token, v21, v17, (uint64_t)&type metadata for FormatTextNodeFormat.Token, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v14, v20, (uint64_t)&off_1E734BD80);
  v22 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v22 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25(v11, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v26 = (uint64_t)v14;
  v27 = v46;
  sub_1BAD257CC(v15, v16, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v27)
  {
    v28 = (uint64_t)v45;
    v25(v45, v24, v23);
    swift_storeEnumTagMultiPayload();
    v29 = v44;
    swift_retain();
    sub_1BAD25924(v29, 1, 0, 0, v28, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v30 = (uint64_t)v43;
    v25(v43, v24, v23);
    swift_storeEnumTagMultiPayload();
    v31 = swift_retain();
    sub_1BAD6EDF0(v31, 2, 0, 0, v30, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v30, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v32 = qword_1ED3C6D58;
    v33 = v40;
    swift_bridgeObjectRetain();
    if (v32 != -1)
      swift_once();
    v34 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C08);
    v35 = (uint64_t)v41;
    v25(v41, v34, v23);
    swift_storeEnumTagMultiPayload();
    if (*(_QWORD *)(v33 + 16) && (sub_1BAE58AC0(v35, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v48 = xmmword_1BB8D2D70;
      v49 = 0;
      v36 = swift_bridgeObjectRetain();
      v37 = sub_1BA67F4CC(v36);
      swift_bridgeObjectRelease();
      v47 = v37;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v47, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v50 = (uint64_t)v47;
      sub_1BAE7D014();
      sub_1BA4A2870(&qword_1ED3AF400, (uint64_t (*)(uint64_t))sub_1BAE7D014, MEMORY[0x1E0DED188]);
      v38 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v38, MEMORY[0x1E0DEA970]);
      sub_1BB874464();
      swift_release();
      v35 = (uint64_t)v41;
    }
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))sub_1BAE7CF9C);
}

uint64_t sub_1BA620A84()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA620AAC + 4 * byte_1BB8AF06D[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1BA620AAC()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BA620AC0()
{
  return 1819044198;
}

uint64_t sub_1BA620ACC()
{
  return 0x6C616E7265746E69;
}

uint64_t sub_1BA620AE4()
{
  return 0x726F6C6F63;
}

uint64_t sub_1BA620AF8()
{
  return 1885433183;
}

uint64_t sub_1BA620B04()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA620B38 + 4 * byte_1BB8AF1D4[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA620B38()
{
  return 0x746E65746E6F63;
}

uint64_t sub_1BA620B50()
{
  return 0x656C797473;
}

uint64_t sub_1BA620B64()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA620B80()
{
  return 1885433183;
}

uint64_t sub_1BA620B90()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA620BC4 + 4 * byte_1BB8AE35A[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA620BC4()
{
  return 0x73646E696BLL;
}

uint64_t sub_1BA620BD8()
{
  return 0x746E756F63;
}

uint64_t sub_1BA620BEC()
{
  return 0x737469617274;
}

uint64_t sub_1BA620C00()
{
  return 1885433183;
}

uint64_t sub_1BA620C10()
{
  return sub_1BA620C24();
}

uint64_t sub_1BA620C24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];

  v2 = *v0;
  v1 = v0[1];
  v4[3] = &type metadata for TraversalOnlyEncoder;
  v4[4] = sub_1BA6ECAA0();
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB872850();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BA620CB8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA620D88();
  *a1 = result;
  return result;
}

uint64_t sub_1BA620CEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA620D88();
  *a1 = result;
  return result;
}

uint64_t sub_1BA620D20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA605DD0();
  *a1 = result;
  return result;
}

uint64_t sub_1BA620D54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA620D88();
  *a1 = result;
  return result;
}

uint64_t sub_1BA620D88()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

void sub_1BA620DCC(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  FormatSwitchValue.init(from:)(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2, a3);
}

void FormatSwitchValue.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v12[1] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 24);
  v14 = v6;
  v8 = _s10CodingKeysOMa_37(255, v6, v13, v7);
  v9 = MEMORY[0x1BCCE5B24](&unk_1BB8C5820, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8C57D0, v8);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8C57A8, v8);
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = v11;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA620ECC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v7 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v8 = sub_1BB8741D0();
  v9 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v8);
  v11 = type metadata accessor for VersionedKeyedEncodingContainer(0, v8, v9, v10);
  *(_QWORD *)(v5 - 128) = v11;
  *(_QWORD *)(v5 - 160) = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v34 - v12;
  v14 = v1[3];
  v15 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v14);
  sub_1BA6EC1EC(v2, v16, v14, v2, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v13, v7, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v5 - 176) = v3;
  *(_QWORD *)(v5 - 72) = *v3;
  *(_QWORD *)(v5 - 112) = 0;
  *(_QWORD *)(v5 - 104) = 0;
  *(_BYTE *)(v5 - 96) = 0;
  v17 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v4, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = type metadata accessor for FormatSwitchValue.CaseValue(255, *(_QWORD *)(v5 - 136), *(_QWORD *)(v5 - 144), v21);
  v23 = sub_1BB872EE0();
  *(_QWORD *)(v5 - 120) = MEMORY[0x1BCCE5B24](&unk_1BB9527F8, v22);
  v24 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v23, v5 - 120);
  v25 = *(_QWORD *)(v5 - 152);
  sub_1BA6EE974(v5 - 72, v5 - 112, v4, (uint64_t)sub_1BA90CF04, 0, *(_QWORD *)(v5 - 128), v23, v24);
  sub_1BA4A2E80(v4, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v25)
    return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v5 - 160) + 8))(v13, *(_QWORD *)(v5 - 128));
  v27 = *(int *)(v2 + 36);
  v28 = *(_QWORD *)(v5 - 168);
  v29 = *(_QWORD *)(v5 - 176) + v27;
  *(_OWORD *)(v5 - 112) = xmmword_1BB8A1A10;
  *(_BYTE *)(v5 - 96) = 0;
  v20(v28, v19, v18);
  swift_storeEnumTagMultiPayload();
  v31 = type metadata accessor for FormatSwitchValue.DefaultValue(0, *(_QWORD *)(v5 - 136), *(_QWORD *)(v5 - 144), v30);
  v32 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>.DefaultValue, v31);
  v33 = *(_QWORD *)(v5 - 128);
  sub_1BA6EE974(v29, v5 - 112, v28, (uint64_t)sub_1BA90CF04, 0, v33, v31, v32);
  sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 160) + 8))(v13, v33);
}

void FormatSwitchValue.init(from:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[9];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19 = a4;
  v15 = type metadata accessor for FormatSwitchValue.DefaultValue(0, a1, a2, a3);
  v14[5] = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v14[8] = (char *)v14 - v8;
  v16 = a1;
  v17 = a2;
  v10 = _s10CodingKeysOMa_37(255, a1, a2, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8C5820, v10);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8C57D0, v10);
  v13 = MEMORY[0x1BCCE5B24](&unk_1BB8C57A8, v10);
  v20 = v10;
  v21 = v11;
  v14[6] = v12;
  v14[7] = v11;
  v22 = v12;
  v23 = v13;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_37);
}

uint64_t sub_1BA6216EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a5 = a1;
  v8 = (char *)a5 + *(int *)(type metadata accessor for FormatSwitchValue(0, a3, a4, a4) + 36);
  v10 = type metadata accessor for FormatSwitchValue.DefaultValue(0, a3, a4, v9);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, a2, v10);
}

uint64_t type metadata accessor for FormatSwitchValue.DefaultValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatSwitchValue.DefaultValue);
}

uint64_t type metadata accessor for FormatSwitchValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatSwitchValue);
}

uint64_t sub_1BA621774@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeBinding.init(from:)(a1, a2);
}

uint64_t FormatTextNodeBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA621FC0();
    v24 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E7254D28;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = v22;
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA621FC0()
{
  unint64_t result;

  result = qword_1ED3C9B68;
  if (!qword_1ED3C9B68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0C68, &_s10CodingTypeON_167);
    atomic_store(result, (unint64_t *)&qword_1ED3C9B68);
  }
  return result;
}

unint64_t sub_1BA622004()
{
  unint64_t result;

  result = qword_1ED3B6698;
  if (!qword_1ED3B6698)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Text, &type metadata for FormatHeadlineBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3B6698);
  }
  return result;
}

unint64_t sub_1BA622048()
{
  unint64_t result;

  result = qword_1ED3B5570;
  if (!qword_1ED3B5570)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Text, &type metadata for FormatGroupBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3B5570);
  }
  return result;
}

unint64_t sub_1BA62208C()
{
  unint64_t result;

  result = qword_1ED3BE240;
  if (!qword_1ED3BE240)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Text, &type metadata for FormatIssueBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3BE240);
  }
  return result;
}

uint64_t sub_1BA6220D0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatSnippetCollection.init(from:)(a1, a2);
}

uint64_t FormatSnippetCollection.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v6;
  __int128 v7;
  _QWORD v8[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1BA6226FC(0, (unint64_t *)&unk_1ED3C0378, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA622894(&qword_1ED3A0838, &qword_1ED39F8E8, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF40]);
    sub_1BB8743D4();
    sub_1BA622218(v8[6], &v7);
    v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA622218@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  int isUniquelyReferenced_nonNull_native;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56[2];
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;

  v58 = a2;
  sub_1BA6226FC(0, &qword_1ED3C6838, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v56 - v5;
  sub_1BA709CA4(0);
  v60 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v63 = (uint64_t)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v56 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)v56 - v14);
  v65 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  sub_1BA622754();
  result = sub_1BB8727C0();
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v56[0] = (uint64_t)v12;
    v56[1] = v2;
    v18 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v19 = *(_QWORD *)(v8 + 72);
    v57 = a1;
    swift_bridgeObjectRetain();
    v59 = v8;
    v61 = v19;
    while (1)
    {
      sub_1BA709A94(v18, (uint64_t)v15);
      v21 = *v15;
      v22 = (uint64_t *)(*v15 + 16);
      swift_beginAccess();
      v23 = v65;
      if (v65[2])
      {
        v24 = *(_QWORD *)(v21 + 24);
        v25 = *v22;
        swift_bridgeObjectRetain();
        v26 = sub_1BA6E35A8(v25, v24);
        if ((v27 & 1) != 0)
        {
          sub_1BA709A94(v23[7] + v26 * v61, (uint64_t)v6);
          v28 = 0;
        }
        else
        {
          v28 = 1;
        }
        v29 = v60;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v60);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v29) != 1)
        {
          swift_bridgeObjectRelease_n();
          v53 = (uint64_t *)v56[0];
          sub_1BA707100((uint64_t)v6, v56[0]);
          type metadata accessor for FormatPackageError();
          sub_1BA4A2870((unint64_t *)&qword_1EF2AC008, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageError, (uint64_t)&unk_1BB8F5900);
          swift_allocError();
          v54 = *v53;
          *v55 = *v15;
          v55[1] = v54;
          swift_storeEnumTagMultiPayload();
          swift_retain();
          swift_retain();
          swift_willThrow();
          sub_1BA7070C4((uint64_t)v53);
          sub_1BA7070C4((uint64_t)v15);
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v60);
      }
      v62 = v18;
      v30 = v17;
      v31 = v6;
      sub_1BA6226B0((uint64_t)v6);
      v32 = *v15;
      swift_beginAccess();
      v33 = *(_QWORD *)(v32 + 16);
      v34 = *(_QWORD *)(v32 + 24);
      v35 = v15;
      sub_1BA709A94((uint64_t)v15, v63);
      swift_bridgeObjectRetain();
      v36 = v65;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v64 = v36;
      v39 = sub_1BA6E35A8(v33, v34);
      v40 = v36[2];
      v41 = (v38 & 1) == 0;
      v42 = v40 + v41;
      if (__OFADD__(v40, v41))
        break;
      v43 = v38;
      if (v36[3] >= v42)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C2350();
      }
      else
      {
        sub_1BB4AEAA0(v42, isUniquelyReferenced_nonNull_native);
        v44 = sub_1BA6E35A8(v33, v34);
        if ((v43 & 1) != (v45 & 1))
          goto LABEL_26;
        v39 = v44;
      }
      v15 = v35;
      v46 = v64;
      v47 = v30;
      if ((v43 & 1) != 0)
      {
        v20 = v61;
        sub_1BB1298EC(v63, v64[7] + v39 * v61);
      }
      else
      {
        v64[(v39 >> 6) + 8] |= 1 << v39;
        v48 = (uint64_t *)(v46[6] + 16 * v39);
        *v48 = v33;
        v48[1] = v34;
        v20 = v61;
        sub_1BA707100(v63, v46[7] + v39 * v61);
        v49 = v46[2];
        v50 = __OFADD__(v49, 1);
        v51 = v49 + 1;
        if (v50)
          goto LABEL_25;
        v46[2] = v51;
        swift_bridgeObjectRetain();
      }
      v65 = v46;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7070C4((uint64_t)v15);
      v18 = v62 + v20;
      v17 = v47 - 1;
      v6 = v31;
      v8 = v59;
      if (!v17)
      {
        a1 = v57;
        result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1BB874560();
    __break(1u);
  }
  else
  {
    v46 = v65;
LABEL_22:
    v52 = v58;
    *v58 = a1;
    v52[1] = v46;
  }
  return result;
}

uint64_t sub_1BA6226B0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA6226FC(0, &qword_1ED3C6838, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA6226FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BA709CA4(255);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BA622754()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C02B0)
  {
    sub_1BA709CA4(255);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C02B0);
  }
}

uint64_t sub_1BA6227B8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA6226FC(0, (unint64_t *)&unk_1ED3C0378, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA622894(&qword_1ED3A0830, &qword_1ED39F8E0, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BA622894(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA6226FC(255, (unint64_t *)&unk_1ED3C0378, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))sub_1BA709CA4, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA622924(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  FormatCompilerPrimitiveProperty.init(from:)(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

void FormatCompilerPrimitiveProperty.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v24[0] = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v24[2] = (char *)v24 - v6;
  MEMORY[0x1E0C80A78](v7);
  v24[1] = (char *)v24 - v8;
  MEMORY[0x1E0C80A78](v9);
  v27 = (char *)v24 - v10;
  MEMORY[0x1E0C80A78](v11);
  v28 = (char *)v24 - v12;
  MEMORY[0x1E0C80A78](v13);
  v29 = (char *)v24 - v14;
  MEMORY[0x1E0C80A78](v15);
  v30 = (char *)v24 - v16;
  MEMORY[0x1E0C80A78](v17);
  v18 = *(_QWORD *)(a2 + 16);
  v25 = *(_QWORD *)(a2 + 24);
  v26 = v18;
  v20 = _s10CodingKeysOMa_165(255, v18, v25, v19);
  v21 = MEMORY[0x1BCCE5B24](&unk_1BB8CC3E0, v20);
  v22 = MEMORY[0x1BCCE5B24](&unk_1BB8CC390, v20);
  v23 = MEMORY[0x1BCCE5B24](&unk_1BB8CC368, v20);
  v31 = v20;
  v32 = v21;
  v33 = v22;
  v34 = v23;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA622AE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v6 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v7 = sub_1BB8741D0();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v7);
  v10 = type metadata accessor for VersionedKeyedEncodingContainer(0, v7, v8, v9);
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v55 - v11;
  v14 = v1[3];
  v13 = v1[4];
  v15 = __swift_project_boxed_opaque_existential_1(v1, v14);
  *(_QWORD *)(v4 - 160) = v3;
  sub_1BA6EC1EC(v3, (uint64_t)v15, v14, v3, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v12, v6, (uint64_t)&off_1E734BD80);
  v16 = *(_QWORD **)(v4 - 72);
  v17 = v16[1];
  v18 = v16;
  *(_QWORD *)(v4 - 128) = *v16;
  *(_QWORD *)(v4 - 120) = v17;
  *(_QWORD *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 104) = 0;
  *(_BYTE *)(v4 - 96) = 0;
  v19 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v2, v21, v20);
  v23 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v24 = *(_QWORD *)(v4 - 136);
  sub_1BA6EE974(v4 - 128, v4 - 112, v2, (uint64_t)sub_1BA90CF04, 0, v10, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA970]);
  if (v24)
  {
    sub_1BA4A2E80(v2, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v12, v10);
  }
  else
  {
    sub_1BA4A2E80(v2, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v25 = v22;
    v26 = v18;
    v27 = v18[3];
    *(_QWORD *)(v4 - 128) = v18[2];
    *(_QWORD *)(v4 - 120) = v27;
    *(_OWORD *)(v4 - 112) = xmmword_1BB8A1A10;
    *(_BYTE *)(v4 - 96) = 0;
    v28 = *(_QWORD *)(v4 - 152);
    *(_QWORD *)(v4 - 136) = v25;
    v25(v28, v21, v20);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BA6EE974(v4 - 128, v4 - 112, v28, (uint64_t)sub_1BA90CF04, 0, v10, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA970]);
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 - 128) = sub_1BA62405C();
    *(_QWORD *)(v4 - 120) = v30;
    *(_OWORD *)(v4 - 112) = xmmword_1BB8D2D60;
    *(_BYTE *)(v4 - 96) = 0;
    v31 = *(_QWORD *)(v4 - 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 136))(v31, v21, v20);
    *(_QWORD *)(v4 - 152) = v23;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BA6478CC(v4 - 128, (uint64_t)&type metadata for FormatCodingEmptyDescriptiveStrategy, v4 - 112, v31, (uint64_t)sub_1BA90CF04, 0, v10, (uint64_t)&type metadata for FormatCodingEmptyDescriptiveStrategy, (uint64_t)&protocol witness table for FormatCodingEmptyDescriptiveStrategy);
    sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v32 = *(_QWORD *)(v4 - 160);
    *(_BYTE *)(v4 - 128) = FormatCompilerPrimitiveProperty.required.getter() & 1;
    *(_OWORD *)(v4 - 112) = xmmword_1BB8D2D70;
    *(_BYTE *)(v4 - 96) = 0;
    v33 = v26;
    v34 = *(_QWORD *)(v4 - 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 136))(v34, v21, v20);
    swift_storeEnumTagMultiPayload();
    sub_1BA6478CC(v4 - 128, (uint64_t)&type metadata for FormatCodingTrueStrategy, v4 - 112, v34, (uint64_t)sub_1BA90CF04, 0, v10, (uint64_t)&type metadata for FormatCodingTrueStrategy, (uint64_t)&protocol witness table for FormatCodingTrueStrategy);
    sub_1BA4A2E80(v34, type metadata accessor for FormatVersionRequirement);
    v35 = (uint64_t)v33 + *(int *)(v32 + 48);
    *(_OWORD *)(v4 - 112) = xmmword_1BB8D2D90;
    *(_BYTE *)(v4 - 96) = 0;
    v36 = *(_QWORD *)(v4 - 184);
    (*(void (**)(void))(v4 - 136))();
    swift_storeEnumTagMultiPayload();
    sub_1BA6232B0(v35, v4 - 112, v36, (uint64_t)sub_1BA90CF04, 0, v10, *(_QWORD *)(v4 - 192), *(_QWORD *)(*(_QWORD *)(v4 - 200) + 16));
    v37 = v32;
    sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
    *(_BYTE *)(v4 - 128) = FormatCompilerPrimitiveProperty.deprecated.getter(v32) & 1;
    *(_OWORD *)(v4 - 112) = xmmword_1BB8D2D80;
    *(_BYTE *)(v4 - 96) = 0;
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v38 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C08);
    v39 = *(_QWORD *)(v4 - 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 136))(v39, v38, v20);
    swift_storeEnumTagMultiPayload();
    sub_1BA6478CC(v4 - 128, (uint64_t)&type metadata for FormatCodingFalseStrategy, v4 - 112, v39, (uint64_t)sub_1BA90CF04, 0, v10, (uint64_t)&type metadata for FormatCodingFalseStrategy, (uint64_t)&protocol witness table for FormatCodingFalseStrategy);
    v40 = *(_QWORD *)(v4 - 208);
    *(_QWORD *)(v4 - 176) = 0;
    *(_QWORD *)(v4 - 168) = v12;
    v41 = v10;
    sub_1BA4A2E80(v39, type metadata accessor for FormatVersionRequirement);
    *(_QWORD *)(v4 - 128) = sub_1BA624050(v37);
    v42 = sub_1BA623EE4();
    *(_OWORD *)(v4 - 112) = xmmword_1BB8D2DA0;
    *(_BYTE *)(v4 - 96) = 0;
    v43 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v43 != -1)
      swift_once();
    v44 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476BD8);
    v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 136);
    v45(v40, v44, v20);
    swift_storeEnumTagMultiPayload();
    v46 = sub_1BA4A2870(&qword_1ED3CCA80, (uint64_t (*)(uint64_t))sub_1BA623EE4, (uint64_t)&protocol conformance descriptor for FormatCodingIgnoreSetStrategy<A>);
    v47 = v42;
    v48 = v42;
    v50 = *(_QWORD *)(v4 - 176);
    v49 = *(_QWORD *)(v4 - 168);
    sub_1BA6478CC(v4 - 128, v47, v4 - 112, v40, (uint64_t)sub_1BA90CF04, 0, v41, v48, v46);
    sub_1BA4A2E80(v40, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    if (!v50)
    {
      v51 = *(_QWORD *)(v4 - 72) + *(int *)(v37 + 60);
      *(_OWORD *)(v4 - 112) = xmmword_1BB8D2DB0;
      *(_BYTE *)(v4 - 96) = 0;
      v52 = *(_QWORD *)(v4 - 224);
      v45(v52, v44, v20);
      swift_storeEnumTagMultiPayload();
      v53 = sub_1BB86E710();
      v54 = sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
      sub_1BA6232B0(v51, v4 - 112, v52, (uint64_t)sub_1BA90CF04, 0, v41, v53, v54);
      sub_1BA4A2E80(v52, type metadata accessor for FormatVersionRequirement);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v49, v41);
  }
}

uint64_t sub_1BA6232B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v59 = a8;
  v60 = a2;
  v47 = a4;
  v48 = a5;
  v49 = a3;
  v58 = a1;
  v61 = a7;
  v11 = sub_1BB873A2C();
  v56 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v45 - v12;
  v54 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v13);
  v46 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a6 + 16);
  v15 = *(_QWORD *)(a6 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v22 = (char *)&v45 - v21;
  v50 = a6;
  v51 = v8;
  v23 = (uint64_t *)(v8 + *(int *)(a6 + 44));
  v24 = v23[1];
  v53 = *v23;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))(v22, v60, AssociatedTypeWitness, v20);
  v25 = (*(unsigned __int8 *)(v18 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v26 = (v19 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (_QWORD *)swift_allocObject();
  v45 = v16;
  v27[2] = v16;
  v28 = v61;
  v27[3] = v61;
  v27[4] = v15;
  v27[5] = v59;
  v29 = (char *)v27 + v25;
  v30 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v32 = v54;
  v31 = v55;
  v33 = AssociatedTypeWitness;
  v34 = v56;
  v30(v29, v22, v33);
  v35 = (_QWORD *)((char *)v27 + v26);
  v37 = v57;
  v36 = v58;
  *v35 = v53;
  v35[1] = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v31, v36, v37);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v31, 1, v28) == 1)
  {
    swift_retain();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v31, v37);
  }
  else
  {
    v58 = v15;
    v39 = v46;
    v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v46, v31, v61);
    MEMORY[0x1E0C80A78](v40);
    v41 = v48;
    *(&v45 - 4) = v47;
    *(&v45 - 3) = v41;
    *(&v45 - 2) = (uint64_t)sub_1BB7E29C0;
    *(&v45 - 1) = (uint64_t)v27;
    swift_retain();
    v42 = v52;
    v43 = sub_1BA647A44(v49, v60, (uint64_t)sub_1BB7E26A8, (uint64_t)(&v45 - 6), v50);
    if (v42)
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v61);
      return swift_release();
    }
    else
    {
      if ((v43 & 1) != 0)
      {
        v44 = v61;
        sub_1BB874464();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v44);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v61);
      }
      return swift_release();
    }
  }
}

void FormatCompilerPrimitiveProperty.init(from:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[8];
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v24 = a3;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v17[6] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v17[7] = (char *)v17 - v8;
  v18 = sub_1BB873A2C();
  v30 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v17[5] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v19 = (char *)v17 - v11;
  v23 = a1;
  v25 = a2;
  v13 = _s10CodingKeysOMa_165(255, a1, a2, v12);
  v14 = MEMORY[0x1BCCE5B24](&unk_1BB8CC3E0, v13);
  v15 = MEMORY[0x1BCCE5B24](&unk_1BB8CC390, v13);
  v16 = MEMORY[0x1BCCE5B24](&unk_1BB8CC368, v13);
  v26 = v13;
  v27 = v14;
  v21 = v15;
  v22 = v14;
  v28 = v15;
  v29 = v16;
  v20 = v16;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_165(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_165);
}

uint64_t sub_1BA623EE4()
{
  uint64_t result;

  result = qword_1ED3CCA88;
  if (!qword_1ED3CCA88)
  {
    sub_1BA8308AC();
    sub_1BA830868();
    sub_1BA830934();
    sub_1BA8308F0();
    type metadata accessor for FormatCodingIgnoreSetStrategy();
  }
  return result;
}

uint64_t sub_1BA623F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = a7;
  v16 = (int *)type metadata accessor for FormatCompilerPrimitiveProperty(0, a13, a14, a4);
  v17 = a9 + v16[12];
  v18 = sub_1BB873A2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a8, v18);
  *(_BYTE *)(a9 + v16[13]) = a10;
  *(_QWORD *)(a9 + v16[14]) = a11;
  return sub_1BA646F54(a12, a9 + v16[15], (uint64_t)&qword_1ED3C47E8, (uint64_t)MEMORY[0x1E0DB48B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4A3FB4);
}

uint64_t type metadata accessor for FormatCompilerPrimitiveProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatCompilerPrimitiveProperty);
}

uint64_t FormatCompilerPrimitiveProperty.required.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_1BA624050(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 56));
}

uint64_t sub_1BA62405C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t FormatCompilerPrimitiveProperty.deprecated.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

void sub_1BA624070(_QWORD *a1)
{
  FormatColorBinding.encode(to:)(a1);
}

void FormatColorBinding.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[10];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v22[3] = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v22[4] = (char *)v22 - v6;
  MEMORY[0x1E0C80A78](v7);
  v22[2] = (char *)v22 - v8;
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v1;
  v22[5] = v1[1];
  v22[6] = v16;
  v22[1] = v1[2];
  v17 = *((unsigned __int8 *)v1 + 24);
  v18 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v20 = sub_1BA6B8518();
  v22[9] = v15;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatColorBinding, v21, v18, (uint64_t)&type metadata for FormatColorBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v19, (uint64_t)v15, v20, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BA624258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA6248B0(0, *(_QWORD *)(v1 - 96), v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA6246C0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF4CD8;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA62486C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA624828()
{
  unint64_t result;

  result = qword_1ED39B530;
  if (!qword_1ED39B530)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionBinding, &type metadata for FormatOptionBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39B530);
  }
  return result;
}

unint64_t sub_1BA62486C()
{
  unint64_t result;

  result = qword_1ED3A5FE0;
  if (!qword_1ED3A5FE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B73F0, &_s10CodingTypeON_115);
    atomic_store(result, (unint64_t *)&qword_1ED3A5FE0);
  }
  return result;
}

uint64_t sub_1BA6248B0(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF4CD8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA62486C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA624A14();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA624A14()
{
  unint64_t result;

  result = qword_1ED39B7E0;
  if (!qword_1ED39B7E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Color, &type metadata for FormatHeadlineBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1ED39B7E0);
  }
  return result;
}

uint64_t sub_1BA624A58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSlotItemObject.Resolved.init(from:)(a1, a2);
}

uint64_t FormatContentSlotItemObject.Resolved.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[22];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char v68;

  v61 = a2;
  v64 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1E0C80A78](v64);
  v56 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v53);
  v54 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3A5A60, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
  MEMORY[0x1E0C80A78](v5);
  v43[6] = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v43[21] = (char *)v43 - v8;
  v46 = type metadata accessor for FormatPuzzleType.Overrides(0);
  v43[15] = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v43[10] = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA625DB0(0, (unint64_t *)&unk_1ED3A3B80, (uint64_t)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v59 = v10;
  v43[17] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v62 = (char *)v43 - v11;
  sub_1BA625DB0(0, (unint64_t *)&unk_1ED3A3B30, (uint64_t)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v55 = v12;
  v43[18] = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v58 = (char *)v43 - v13;
  v51 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v51);
  v52 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA625DB0(0, (unint64_t *)&unk_1ED39A600, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v50 = v15;
  v43[20] = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v49 = (char *)v43 - v16;
  sub_1BA625DB0(0, (unint64_t *)&unk_1ED39DF90, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
  v48 = v17;
  v43[16] = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v47 = (char *)v43 - v18;
  sub_1BA625DB0(0, &qword_1ED3A3B10, (uint64_t)&qword_1ED3B97C0, 0x1E0D58988, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
  v43[13] = v19;
  v43[7] = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v43[8] = (char *)v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v43[5] = (char *)v43 - v22;
  sub_1BA625DB0(0, &qword_1ED39A640, (uint64_t)&qword_1ED39C030, (uint64_t)&protocolRef_FCNewsAppConfiguration, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v43[12] = v23;
  v43[4] = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v43[11] = (char *)v43 - v24;
  sub_1BA4A3FB4(0, &qword_1ED3C2660, (void (*)(uint64_t))type metadata accessor for FormatArticleOverrides);
  MEMORY[0x1E0C80A78](v25);
  v43[19] = (char *)v43 - v26;
  v44 = type metadata accessor for FormatArticleOverrides();
  v43[14] = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v43[9] = (char *)v43 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v60 = v28;
  v45 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v57 = (char *)v43 - v29;
  sub_1BA6273E0(0, &qword_1ED3AB468, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v65 = v30;
  v63 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v31 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v43 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)v43 - v35;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)v43 - v38;
  v40 = a1[3];
  v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v40);
  sub_1BA62739C();
  v41 = v67;
  sub_1BB87468C();
  if (!v41)
  {
    v43[1] = v33;
    v43[2] = v36;
    v67 = v31;
    v43[3] = v39;
    v68 = 0;
    sub_1BA627450();
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
}

void sub_1BA625DB0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1BB86ED40();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void FormatContentSlotItemObject.Resolved.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD v33[10];
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;

  v48 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1E0C80A78](v48);
  v55 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v45);
  v54 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1E0C80A78](v34);
  v35 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA625DB0(0, (unint64_t *)&unk_1ED3A3B80, (uint64_t)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)v33 - v6;
  sub_1BA625DB0(0, (unint64_t *)&unk_1ED3A3B30, (uint64_t)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v49 = v7;
  v47 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)v33 - v8;
  v38 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v38);
  v53 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA625DB0(0, (unint64_t *)&unk_1ED39A600, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  MEMORY[0x1E0C80A78](v10);
  v42 = (char *)v33 - v11;
  sub_1BA625DB0(0, (unint64_t *)&unk_1ED39DF90, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  MEMORY[0x1E0C80A78](v12);
  v39 = (char *)v33 - v13;
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED39DFA0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5088]);
  v33[4] = *(_QWORD *)(v14 - 8);
  v33[5] = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v33[3] = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v33[1] = (char *)v33 - v18;
  MEMORY[0x1E0C80A78](v17);
  v33[2] = (char *)v33 - v19;
  sub_1BA4A3FB4(0, &qword_1ED3C2660, (void (*)(uint64_t))type metadata accessor for FormatArticleOverrides);
  MEMORY[0x1E0C80A78](v20);
  v33[9] = (char *)v33 - v21;
  v22 = type metadata accessor for FormatArticleOverrides();
  v33[7] = *(_QWORD *)(v22 - 8);
  v33[8] = v22;
  MEMORY[0x1E0C80A78](v22);
  v33[6] = (char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1BB86E008();
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v57 = (char *)v33 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v36 = *(_QWORD *)(v25 - 8);
  v37 = v25;
  MEMORY[0x1E0C80A78](v25);
  v26 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v33 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6273E0(0, &qword_1ED3AB6D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v61 = v29;
  v59 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v33 - v30;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA62739C();
  v62 = v31;
  sub_1BB8746C8();
  sub_1BA4C2DD8(v60, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
  v32 = (char *)&loc_1BA626318 + dword_1BB60B434[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA626328()
{
  uint64_t v0;
  void **v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *v1;
  *(_BYTE *)(v3 - 248) = 0;
  *(_BYTE *)(v0 + 320) = 0;
  sub_1BA627494();
  v5 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v3 - 72);
  v7 = *(_QWORD *)(v0 + 280);
  sub_1BB8741AC();
  if (v7)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 288) + 8))(v6, v5);
    return swift_unknownObjectRelease();
  }
  else
  {
    *(_QWORD *)(v0 + 472) = v4;
    v9 = qword_1ED39E360;
    swift_unknownObjectRetain_n();
    if (v9 != -1)
      swift_once();
    v10 = *(_QWORD *)(v0 + 272);
    v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED39A530);
    v12 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 256) + 16);
    v13 = v12(*(_QWORD *)(v0 + 264), v11, v10);
    MEMORY[0x1E0C80A78](v13);
    sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3D4450);
    swift_getKeyPath();
    sub_1BB86ED10();
    swift_unknownObjectRelease();
    *(_BYTE *)(v3 - 248) = 1;
    sub_1BA627FFC();
    v14 = *(_QWORD *)(v0 + 304);
    v15 = *(_QWORD *)(v0 + 104);
    sub_1BB8741AC();
    *(_QWORD *)(v0 + 296) = v12;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 96) + 8))(v2, v15);
    swift_unknownObjectRetain();
    v16 = *(_QWORD *)(v0 + 72);
    sub_1BA6274D8(v4, v16);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 48))(v16, 1, *(_QWORD *)(v0 + 64)) == 1)
    {
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 288) + 8))(*(_QWORD *)(v3 - 72), v14);
      swift_unknownObjectRelease();
      return sub_1BA502AD0(v16, &qword_1ED3C2660, (void (*)(uint64_t))type metadata accessor for FormatArticleOverrides);
    }
    else
    {
      sub_1BA5193C4(v16, *(_QWORD *)(v0 + 48), (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
      *(_BYTE *)(v3 - 248) = 2;
      sub_1BA4A2870(&qword_1ED3A6D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleOverrides, (uint64_t)&protocol conformance descriptor for FormatArticleOverrides);
      sub_1BB8741AC();
      if (qword_1ED39E300 != -1)
        swift_once();
      v17 = *(_QWORD *)(v0 + 272);
      v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED39A4B0);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 296))(*(_QWORD *)(v0 + 264), v18, v17);
      v19 = *(_QWORD *)(v0 + 16);
      sub_1BB86ECF8();
      *(_BYTE *)(v3 - 248) = 3;
      v20 = sub_1BA62AB0C();
      v21 = *(_QWORD *)(v0 + 40);
      sub_1BB8741AC();
      *(_QWORD *)(v0 + 280) = v20;
      v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 32) + 8);
      v22(v19, v21);
      if (qword_1ED3A38B0 != -1)
        swift_once();
      v23 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED3A3890);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 296))(*(_QWORD *)(v0 + 264), v23, v17);
      v24 = *(_QWORD *)(v0 + 8);
      sub_1BB86ECF8();
      *(_BYTE *)(v3 - 248) = 4;
      v25 = *(_QWORD *)(v0 + 304);
      v26 = *(_QWORD *)(v3 - 72);
      sub_1BB8741AC();
      swift_unknownObjectRelease();
      v22(v24, v21);
      sub_1BA4A2E80(*(_QWORD *)(v0 + 48), (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 288) + 8))(v26, v25);
    }
  }
}

unint64_t sub_1BA62739C()
{
  unint64_t result;

  result = qword_1ED3A7EF0;
  if (!qword_1ED3A7EF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933CDC, &_s8ResolvedO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3A7EF0);
  }
  return result;
}

void sub_1BA6273E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA62739C();
    v7 = a3(a1, &_s8ResolvedO10CodingKeysON, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for FormatPuzzleType.Overrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3A5A20);
}

unint64_t sub_1BA627450()
{
  unint64_t result;

  result = qword_1ED3A7F28;
  if (!qword_1ED3A7F28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933CB4, &_s8ResolvedO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A7F28);
  }
  return result;
}

unint64_t sub_1BA627494()
{
  unint64_t result;

  result = qword_1ED3A7F10;
  if (!qword_1ED3A7F10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933C8C, &_s8ResolvedO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A7F10);
  }
  return result;
}

uint64_t sub_1BA6274D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  double v23;
  uint64_t v24;
  uint64_t *v25;
  __objc2_class_ro *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v4);
  v68 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v69 = (uint64_t)&v62 - v7;
  sub_1BA629FB4(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v71 = (uint64_t)&v62 - v12;
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v62 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v62 - v20;
  v22 = (int *)type metadata accessor for FormatArticleOverrides();
  v70 = *((_QWORD *)v22 - 1);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (uint64_t *)((char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = &StubThumbnailProcessor;
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_appliedOverrideMetadata, v23) & 1) != 0)
  {
    v27 = objc_msgSend(a1, sel_appliedOverrideMetadata);
    v28 = v27;
    v64 = v10;
    v65 = a2;
    v67 = v21;
    if (v27)
    {
      if ((objc_msgSend(v27, sel_respondsToSelector_, sel_title) & 1) != 0
        && (v29 = objc_msgSend(v28, sel_title)) != 0)
      {
        v30 = v29;
        v31 = sub_1BB8729A0();
        v33 = v32;

        v34 = HIBYTE(v33) & 0xF;
        v66 = v31;
        if ((v33 & 0x2000000000000000) == 0)
          v34 = v31 & 0xFFFFFFFFFFFFLL;
        if (!v34)
        {
          swift_bridgeObjectRelease();
          v66 = 0;
          v33 = 0;
        }
        v26 = &StubThumbnailProcessor;
      }
      else
      {
        v66 = 0;
        v33 = 0;
      }
      v37 = objc_msgSend(v28, sel_displayDate);
      if (v37)
      {
        v38 = v37;
        sub_1BB86C874();

        v39 = sub_1BB86C8B0();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v18, 0, 1, v39);
      }
      else
      {
        v41 = sub_1BB86C8B0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v18, 1, 1, v41);
      }
      sub_1BA5193C4((uint64_t)v18, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA76D78C);
      if ((objc_msgSend(v28, (SEL)v26[54].weak_ivar_lyt, sel_shortExcerpt) & 1) != 0)
      {
        v42 = objc_msgSend(v28, sel_shortExcerpt);
        v43 = v69;
        if (v42)
        {
          v44 = sub_1BB8729A0();
          v46 = v45;

          v47 = HIBYTE(v46) & 0xF;
          if ((v46 & 0x2000000000000000) == 0)
            v47 = v44 & 0xFFFFFFFFFFFFLL;
          if (v47)
          {
            v42 = (id)v46;
            v62 = v44;
          }
          else
          {
            swift_bridgeObjectRelease();
            v62 = 0;
            v42 = 0;
          }
          v21 = v67;
        }
        else
        {
          v62 = 0;
        }
LABEL_26:
        sub_1BA627BC4(v28, v71);
        v48 = (unint64_t)objc_msgSend(a1, sel_storyType);
        v49 = 0x50403020106uLL >> (8 * v48);
        if (v48 >= 6)
          LODWORD(v49) = 6;
        v63 = v49;
        sub_1BA627D68(v28, v43);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA76D78C);
        v50 = v33;
        if (v33)
        {
          sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA76D78C);
        }
        else
        {
          v57 = sub_1BB86C8B0();
          v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v15, 1, v57);
          sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA76D78C);
          if (v58 == 1 && ((v48 < 6) & (0x3Eu >> v48)) == 0)
          {
            v51 = (uint64_t)v64;
            sub_1BA4C2DD8(v71, (uint64_t)v64, (uint64_t (*)(_QWORD))sub_1BA629FB4);
            if (!v42)
            {
              v59 = type metadata accessor for FormatArticleThumbnail();
              v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v51, 1, v59);
              sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))sub_1BA629FB4);
              v53 = v68;
              v52 = v69;
              sub_1BA4C2DD8(v69, v68, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
              v36 = v70;
              if (v60 == 1)
              {
                v61 = sub_1BB86C67C();
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48))(v53, 1, v61) == 1)
                {
                  swift_bridgeObjectRelease_n();
                  sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
                  sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
                  sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))sub_1BA629FB4);
                  sub_1BA4A2E80((uint64_t)v67, (uint64_t (*)(_QWORD))sub_1BA76D78C);
                  v35 = 1;
                  a2 = v65;
                  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v36 + 56))(a2, v35, 1, v22);
                }
              }
              goto LABEL_32;
            }
LABEL_31:
            sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))sub_1BA629FB4);
            v53 = v68;
            v52 = v69;
            sub_1BA4C2DD8(v69, v68, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            v36 = v70;
LABEL_32:
            sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            v54 = (uint64_t)v67;
            *v25 = v66;
            v25[1] = v50;
            sub_1BA5193C4(v54, (uint64_t)v25 + v22[5], (uint64_t (*)(_QWORD))sub_1BA76D78C);
            *((_BYTE *)v25 + v22[6]) = v63;
            v55 = (uint64_t *)((char *)v25 + v22[7]);
            *v55 = v62;
            v55[1] = (uint64_t)v42;
            sub_1BA5193C4(v71, (uint64_t)v25 + v22[8], (uint64_t (*)(_QWORD))sub_1BA629FB4);
            sub_1BA5193C4(v52, (uint64_t)v25 + v22[9], (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            a2 = v65;
            sub_1BA5193C4((uint64_t)v25, v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
            v35 = 0;
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v36 + 56))(a2, v35, 1, v22);
          }
        }
        v51 = (uint64_t)v64;
        sub_1BA4C2DD8(v71, (uint64_t)v64, (uint64_t (*)(_QWORD))sub_1BA629FB4);
        goto LABEL_31;
      }
    }
    else
    {
      v40 = sub_1BB86C8B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v21, 1, 1, v40);
      v33 = 0;
      v66 = 0;
    }
    v62 = 0;
    v42 = 0;
    v43 = v69;
    goto LABEL_26;
  }
  swift_unknownObjectRelease();
  v35 = 1;
  v36 = v70;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v36 + 56))(a2, v35, 1, v22);
}

id sub_1BA627B48(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void *v3;

  if (*(_QWORD *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    v3 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

uint64_t storeEnumTagSinglePayload for FormatArticleOverrides()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA627BC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1BA629FB4(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (objc_msgSend(a1, sel_respondsToSelector_, sel_formatThumbnail, v5) & 1) != 0)
  {
    v8 = objc_msgSend(a1, sel_formatThumbnail);
    v9 = v8;
    sub_1BA62A440(v8, (uint64_t)v7);
    v10 = type metadata accessor for FormatArticleThumbnail();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
    {

      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA629FB4);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, v10);
    }
    else
    {
      if (sub_1BA9167D8())
      {
        v14 = 1;
      }
      else
      {
        sub_1BA4C2DD8((uint64_t)v7, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
        v14 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v14, 1, v10);

      return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
    }
  }
  else
  {
    v13 = type metadata accessor for FormatArticleThumbnail();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
}

uint64_t storeEnumTagSinglePayload for FormatArticleThumbnail()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA627D68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  sub_1BA6EF3B0();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA627F80(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - v13;
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v6 + 56))((char *)&v23 - v13, 1, 1, v5, v14);
LABEL_10:
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA627F80);
    v21 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21);
  }
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_routeURL, v14) & 1) != 0)
  {
    v16 = objc_msgSend(a1, sel_routeURL);
    if (v16)
    {
      v17 = v16;
      sub_1BB86C5EC();

      v18 = sub_1BB86C67C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
    }
    else
    {
      v20 = sub_1BB86C67C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 1, 1, v20);
    }
    sub_1BA5193C4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, v19, 1, v5);
  sub_1BA5193C4((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA627F80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) == 1)
    goto LABEL_10;
  return sub_1BA5193C4((uint64_t)v15, a2, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
}

void sub_1BA627F80(uint64_t a1)
{
  sub_1BA4A3FB4(a1, &qword_1ED3A2458, (void (*)(uint64_t))sub_1BA6EF3B0);
}

unint64_t sub_1BA627F94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39A630;
  if (!qword_1ED39A630)
  {
    sub_1BA625DB0(255, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB50A0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39A630);
  }
  return result;
}

unint64_t sub_1BA627FFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39A620;
  if (!qword_1ED39A620)
  {
    sub_1BA625DB0(255, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5098], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39A620);
  }
  return result;
}

uint64_t FormatArticle.overrides.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1BA4CDF6C(0, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - v4;
  v6 = v1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BA6287C0(v6, (uint64_t)v5);
  return sub_1BA6286BC((uint64_t)v5, a1);
}

uint64_t sub_1BA62814C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatArticle.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t FormatArticle.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v3 = *v1;
  v33 = a1;
  v34 = v3;
  sub_1BA62A270(0);
  MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatArticleOverrides();
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9BD0, (uint64_t (*)(void))sub_1BA62877C, (uint64_t)&type metadata for FormatArticle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA62877C();
  v15 = v31;
  v14 = v32;
  sub_1BB87468C();
  if (v14)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v17 = v29;
    v16 = (uint64_t)v30;
    v32 = v11;
    v38 = 0;
    *(_QWORD *)(v15 + 16) = sub_1BB874098();
    *(_QWORD *)(v15 + 24) = v18;
    v38 = 1;
    sub_1BA4A2870(qword_1ED3C9BF0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleOverrides, (uint64_t)&protocol conformance descriptor for FormatArticleOverrides);
    sub_1BB874068();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v16, 1, v17) == 1)
    {
      if (qword_1ED3A6D88 != -1)
        swift_once();
      v19 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED3A6D68);
      sub_1BA62908C(v19, (uint64_t)v8);
      sub_1BA628740(v16);
    }
    else
    {
      sub_1BA6286BC(v16, (uint64_t)v8);
    }
    v20 = v15 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
    swift_beginAccess();
    sub_1BA6286BC((uint64_t)v8, v20);
    sub_1BA6BCC84();
    LOBYTE(v36) = 2;
    sub_1BA5DBC84();
    sub_1BB874068();
    v30 = v13;
    if (v37)
      v21 = v37;
    else
      v21 = MEMORY[0x1E0DEE9E8];
    v22 = (_QWORD *)(v15 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
    swift_beginAccess();
    *v22 = v21;
    sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
    LOBYTE(v39) = 3;
    sub_1BA5DBB94((unint64_t *)&qword_1ED3B9478, (uint64_t (*)(void))sub_1BA8350B4, MEMORY[0x1E0DEAF40]);
    sub_1BB874068();
    if (v36)
      v23 = v36;
    else
      v23 = MEMORY[0x1E0DEE9D8];
    v24 = (_QWORD *)(v15 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
    swift_beginAccess();
    *v24 = v23;
    v25 = v30;
    v35 = 4;
    sub_1BA4A2870(&qword_1ED3B38F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle, (uint64_t)&protocol conformance descriptor for FormatArticle);
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v10);
    *(_QWORD *)(v15 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = v39;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return v15;
}

uint64_t getEnumTagSinglePayload for FormatArticleOverrides()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA6286BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatArticleOverrides();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA628700(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatArticleOverrides();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA628740(uint64_t a1)
{
  uint64_t v2;

  sub_1BA62A270(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BA62877C()
{
  unint64_t result;

  result = qword_1ED3B38D8;
  if (!qword_1ED3B38D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F2B54, &type metadata for FormatArticle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B38D8);
  }
  return result;
}

uint64_t sub_1BA6287C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4CDF6C(0, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id FCHeadlineProviding.overridden(by:configuration:assetManager:routeURL:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a2;
  v31 = a3;
  v6 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, &qword_1ED3C9CF0, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - v10;
  v12 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v30 - v17;
  v19 = sub_1BA6290D0();
  sub_1BA57B488(a4, (uint64_t)v18, (unint64_t *)&qword_1ED3D2E70, v12);
  if ((v19 & 1) == 0)
  {
    v20 = sub_1BB86C67C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v18, 1, v20) == 1)
    {
      sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v21 = v33;
LABEL_5:
      swift_unknownObjectRetain();
      return (id)v21;
    }
  }
  v22 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1BA628AD0();
  sub_1BA57B488(a1 + *(int *)(v6 + 32), (uint64_t)v11, &qword_1ED3C9CF0, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  v23 = sub_1BA628B0C((uint64_t)v11, v31);
  sub_1BA62908C(a1, (uint64_t)v8);
  sub_1BA57B488(a4, (uint64_t)v15, (unint64_t *)&qword_1ED3D2E70, v22);
  v24 = objc_allocWithZone((Class)type metadata accessor for FormatArticleOverridesMetadata());
  v25 = v23;
  sub_1BB7CC974(v8);
  v27 = v26;
  v21 = v33;
  v28 = (id)FCAssignSingleHeadlineMetadata();

  if (!v28)
    goto LABEL_5;
  return v28;
}

unint64_t sub_1BA628AD0()
{
  unint64_t result;

  result = qword_1ED3CF9F0;
  if (!qword_1ED3CF9F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3CF9F0);
  }
  return result;
}

id sub_1BA628B0C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - v5;
  sub_1BA4A3FB4(0, &qword_1ED3C9CF0, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v41 - v8;
  v10 = (int *)type metadata accessor for FormatArticleThumbnail();
  v11 = *((_QWORD *)v10 - 1);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA57B488(a1, (uint64_t)v9, &qword_1ED3C9CF0, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10) == 1)
  {

    sub_1BA502AD0(a1, &qword_1ED3C9CF0, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
    sub_1BA502AD0((uint64_t)v9, &qword_1ED3C9CF0, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
    return 0;
  }
  sub_1BA5193C4((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
  if (sub_1BA9167D8())
  {

    sub_1BA502AD0(a1, &qword_1ED3C9CF0, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
    return 0;
  }
  if (*((_QWORD *)v13 + 9))
  {
    swift_bridgeObjectRetain();
    v15 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v16 = (void *)objc_opt_self();
  v50 = objc_msgSend(v16, sel_nullableColorWithHexString_, v15);

  if (*((_QWORD *)v13 + 5))
  {
    swift_bridgeObjectRetain();
    v17 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  v49 = objc_msgSend(v16, sel_nullableColorWithHexString_, v17);

  if (*((_QWORD *)v13 + 3))
  {
    swift_bridgeObjectRetain();
    v18 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  v48 = objc_msgSend(v16, sel_nullableColorWithHexString_, v18);

  v19 = *((_QWORD *)v13 + 7);
  v47 = a1;
  if (v19)
  {
    swift_bridgeObjectRetain();
    v20 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  v45 = objc_msgSend(v16, sel_nullableColorWithHexString_, v20);

  v21 = *(_QWORD *)v13;
  if (v13[8])
    v21 = 0;
  v46 = v21;
  v43 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1BA91AD30();
  sub_1BA57B488((uint64_t)&v13[v10[9]], (uint64_t)v6, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  v22 = a2;
  v44 = sub_1BA84E62C((uint64_t)v6, v22);
  sub_1BA57B488((uint64_t)&v13[v10[10]], (uint64_t)v6, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  v23 = v22;
  v24 = sub_1BA84E62C((uint64_t)v6, v23);
  sub_1BA57B488((uint64_t)&v13[v10[11]], (uint64_t)v6, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  v25 = v23;
  v26 = sub_1BA84E62C((uint64_t)v6, v25);
  v41 = v26;
  sub_1BA57B488((uint64_t)&v13[v10[12]], (uint64_t)v6, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  v27 = v25;
  v28 = sub_1BA84E62C((uint64_t)v6, v27);
  v42 = v28;
  sub_1BA57B488((uint64_t)&v13[v10[13]], (uint64_t)v6, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  v29 = v27;
  v30 = sub_1BA84E62C((uint64_t)v6, v29);
  v40 = v28;
  v38 = v24;
  v39 = v26;
  v31 = v24;
  v32 = v44;
  v34 = v49;
  v33 = v50;
  v35 = v48;
  v36 = v45;
  v14 = objc_msgSend(v43, sel_initWithTextColor_backgroundColor_accentColor_primaryColor_focalFrame_lowQualityImage_defaultQualityImage_mediumQualityImage_highQualityImage_ultraQualityImage_, v50, v49, v48, v45, v46, v44, v38, v39, v40, v30);

  sub_1BA502AD0(v47, &qword_1ED3C9CF0, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
  return v14;
}

uint64_t type metadata accessor for FormatArticleOverridesMetadata()
{
  uint64_t result;

  result = qword_1ED3CCE80;
  if (!qword_1ED3CCE80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA629050(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatArticleOverrides();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA62908C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatArticleOverrides();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA6290D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA629FB4(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1E0C80A78](v10);
  v43 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v40 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v40 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v40 - v22;
  v24 = *(_QWORD *)(v0 + 8);
  sub_1BA4C2DD8(v0, (uint64_t)&v40 - v22, v25);
  if (v24)
  {
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    sub_1BA4C2DD8(v0, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
LABEL_8:
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    sub_1BA4C2DD8(v0, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    goto LABEL_9;
  }
  v41 = v3;
  v42 = v6;
  sub_1BA4C2DD8((uint64_t)&v23[v10[5]], (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  v26 = sub_1BB86C8B0();
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v9, 1, v26);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  sub_1BA4C2DD8(v0, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  if (v27 != 1)
    goto LABEL_8;
  v28 = v20[v10[6]];
  sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  sub_1BA4C2DD8(v0, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  if (v28 != 6)
  {
LABEL_9:
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    sub_1BA4C2DD8(v0, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    goto LABEL_10;
  }
  v29 = *(_QWORD *)&v17[v10[7] + 8];
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8(v0, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  if (v29)
  {
LABEL_10:
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    v38 = v0;
    v34 = v43;
    sub_1BA4C2DD8(v38, v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    goto LABEL_11;
  }
  v30 = (uint64_t)v42;
  sub_1BA4C2DD8((uint64_t)&v14[v10[8]], (uint64_t)v42, (uint64_t (*)(_QWORD))sub_1BA629FB4);
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  v31 = type metadata accessor for FormatArticleThumbnail();
  v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31);
  sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))sub_1BA629FB4);
  v33 = v0;
  v34 = v43;
  sub_1BA4C2DD8(v33, v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  if (v32 != 1)
  {
LABEL_11:
    sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    return 1;
  }
  v35 = (uint64_t)v41;
  sub_1BA4C2DD8(v34 + v10[9], (uint64_t)v41, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  v36 = sub_1BB86C67C();
  v37 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v35, 1, v36) != 1;
  sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  return v37;
}

uint64_t FormatArticleOverrides.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v27 = a2;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA629FB4(0);
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA62A2D0(0, &qword_1ED3CFB10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v30 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - v12;
  v14 = (int *)type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA62A28C();
  v31 = v13;
  v17 = v32;
  sub_1BB87468C();
  if (v17)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = (uint64_t)a1;
  v39 = 0;
  v19 = v30;
  *v16 = sub_1BB87402C();
  v16[1] = v20;
  sub_1BB86C8B0();
  v38 = 1;
  sub_1BA4A2870(&qword_1ED3B0528, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1BB874068();
  sub_1BA5193C4((uint64_t)v9, (uint64_t)v16 + v14[5], (uint64_t (*)(_QWORD))sub_1BA76D78C);
  v36 = 2;
  sub_1BA62A32C();
  sub_1BB874068();
  *((_BYTE *)v16 + v14[6]) = v37;
  v35 = 3;
  v21 = sub_1BB87402C();
  v23 = (uint64_t *)((char *)v16 + v14[7]);
  *v23 = v21;
  v23[1] = v24;
  type metadata accessor for FormatArticleThumbnail();
  v34 = 4;
  sub_1BA4A2870(qword_1ED3C9C98, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleThumbnail, (uint64_t)&protocol conformance descriptor for FormatArticleThumbnail);
  v25 = (uint64_t)v29;
  sub_1BB874068();
  sub_1BA5193C4(v25, (uint64_t)v16 + v14[8], (uint64_t (*)(_QWORD))sub_1BA629FB4);
  sub_1BB86C67C();
  v33 = 5;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  v26 = (uint64_t)v28;
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v31, v19);
  sub_1BA5193C4(v26, (uint64_t)v16 + v14[9], (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4C2DD8((uint64_t)v16, v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  __swift_destroy_boxed_opaque_existential_1(v18);
  return sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
}

uint64_t type metadata accessor for FormatArticleOverrides()
{
  uint64_t result;

  result = qword_1ED3C1670;
  if (!qword_1ED3C1670)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA629A0C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BB86C8B0();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *initializeWithCopy for FormatArticleOverrides(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(_QWORD *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  char *__dst;
  int *v66;
  uint64_t v67;
  int *v68;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1BA76D78C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = v3[7];
  *((_BYTE *)a1 + v3[6]) = *((_BYTE *)a2 + v3[6]);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v3[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = type metadata accessor for FormatArticleThumbnail();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    sub_1BA629FB4(0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v67 = v22;
    v68 = v3;
    *v19 = *v20;
    *((_BYTE *)v19 + 8) = *((_BYTE *)v20 + 8);
    v25 = v20[3];
    v19[2] = v20[2];
    v19[3] = v25;
    v26 = v20[5];
    v19[4] = v20[4];
    v19[5] = v26;
    v27 = (int *)v21;
    v28 = v20[7];
    v19[6] = v20[6];
    v19[7] = v28;
    v29 = v20[9];
    v19[8] = v20[8];
    v19[9] = v29;
    v66 = v27;
    v30 = v27[9];
    __dst = (char *)v19 + v30;
    v31 = (char *)v20 + v30;
    v32 = type metadata accessor for FormatArticleThumbnailImage();
    v64 = *(_QWORD *)(v32 - 8);
    v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33(v31, 1, v32))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      v35 = v64;
    }
    else
    {
      v36 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(__dst, v31, v36);
      *(_QWORD *)&__dst[*(int *)(v32 + 20)] = *(_QWORD *)&v31[*(int *)(v32 + 20)];
      v35 = v64;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(__dst, 0, 1, v32);
    }
    v37 = v66[10];
    v38 = (char *)v19 + v37;
    v39 = (char *)v20 + v37;
    if (v33((char *)v20 + v37, 1, v32))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v41 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v38, v39, v41);
      *(_QWORD *)&v38[*(int *)(v32 + 20)] = *(_QWORD *)&v39[*(int *)(v32 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v32);
    }
    v42 = v66[11];
    v43 = (char *)v19 + v42;
    v44 = (char *)v20 + v42;
    if (v33((char *)v20 + v42, 1, v32))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v46 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v43, v44, v46);
      *(_QWORD *)&v43[*(int *)(v32 + 20)] = *(_QWORD *)&v44[*(int *)(v32 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v43, 0, 1, v32);
    }
    v47 = v66[12];
    v48 = (char *)v19 + v47;
    v49 = (char *)v20 + v47;
    if (v33((char *)v20 + v47, 1, v32))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      v51 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v48, v49, v51);
      *(_QWORD *)&v48[*(int *)(v32 + 20)] = *(_QWORD *)&v49[*(int *)(v32 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v48, 0, 1, v32);
    }
    v52 = v66[13];
    v53 = (char *)v19 + v52;
    v54 = (char *)v20 + v52;
    v3 = v68;
    if (v33(v54, 1, v32))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      v56 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v53, v54, v56);
      *(_QWORD *)&v53[*(int *)(v32 + 20)] = *(_QWORD *)&v54[*(int *)(v32 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v53, 0, 1, v32);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v67 + 56))(v19, 0, 1, v66);
  }
  v57 = v3[9];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  v60 = sub_1BB86C67C();
  v61 = *(_QWORD *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
  {
    sub_1BA6EF3B0();
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
  }
  return a1;
}

void sub_1BA629FB4(uint64_t a1)
{
  sub_1BA4A3FB4(a1, &qword_1ED3C9CF0, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
}

uint64_t destroy for FormatArticleOverrides(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[8];
  v8 = (int *)type metadata accessor for FormatArticleThumbnail();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v7 + v8[9];
    v10 = type metadata accessor for FormatArticleThumbnailImage();
    v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    if (!v11(v9, 1, v10))
    {
      v12 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v9, v12);
    }
    v13 = v7 + v8[10];
    if (!v11(v13, 1, v10))
    {
      v14 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    }
    v15 = v7 + v8[11];
    if (!v11(v15, 1, v10))
    {
      v16 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    }
    v17 = v7 + v8[12];
    if (!v11(v17, 1, v10))
    {
      v18 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    }
    v19 = v7 + v8[13];
    if (!v11(v19, 1, v10))
    {
      v20 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    }
  }
  v21 = a1 + a2[9];
  v22 = sub_1BB86C67C();
  v23 = *(_QWORD *)(v22 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  return result;
}

uint64_t getEnumTagSinglePayload for FormatArticleThumbnail()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for FormatArticleThumbnail()
{
  uint64_t result;

  result = qword_1ED3C1680;
  if (!qword_1ED3C1680)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA62A270(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C2660, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleOverrides, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BA62A28C()
{
  unint64_t result;

  result = qword_1ED3C9BD8;
  if (!qword_1ED3C9BD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91B31C, &type metadata for FormatArticleOverrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3C9BD8);
  }
  return result;
}

void sub_1BA62A2D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA62A28C();
    v7 = a3(a1, &type metadata for FormatArticleOverrides.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA62A32C()
{
  unint64_t result;

  result = qword_1ED3C9C90;
  if (!qword_1ED3C9C90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArticleStoryType, &type metadata for FormatArticleStoryType);
    atomic_store(result, (unint64_t *)&qword_1ED3C9C90);
  }
  return result;
}

unint64_t sub_1BA62A370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39E388;
  if (!qword_1ED39E388)
  {
    sub_1BA625DB0(255, &qword_1ED39A640, (uint64_t)&qword_1ED39C030, (uint64_t)&protocolRef_FCNewsAppConfiguration, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB50A0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39E388);
  }
  return result;
}

unint64_t sub_1BA62A3D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A3B08;
  if (!qword_1ED3A3B08)
  {
    sub_1BA625DB0(255, &qword_1ED3A3B10, (uint64_t)&qword_1ED3B97C0, 0x1E0D58988, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB50A0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A3B08);
  }
  return result;
}

uint64_t sub_1BA62A440@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  char *v62;
  char *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v91 = (uint64_t)&v80 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v80 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v80 - v11;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v80 - v15;
  if (a1)
  {
    v81 = v14;
    v17 = a1;
    v90 = objc_msgSend(v17, sel_focalFrameBuffer);
    v18 = objc_msgSend(v17, sel_accentColor);
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v18, sel_hex);

      v21 = sub_1BB8729A0();
      v88 = v22;
      v89 = v21;

    }
    else
    {
      v88 = 0;
      v89 = 0;
    }
    v25 = objc_msgSend(v17, sel_backgroundColor);
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, sel_hex);

      v28 = sub_1BB8729A0();
      v86 = v29;
      v87 = v28;

    }
    else
    {
      v86 = 0;
      v87 = 0;
    }
    v30 = objc_msgSend(v17, sel_primaryColor);
    if (v30)
    {
      v31 = v30;
      v32 = objc_msgSend(v30, sel_hex);

      v33 = sub_1BB8729A0();
      v84 = v34;
      v85 = v33;

    }
    else
    {
      v84 = 0;
      v85 = 0;
    }
    v35 = objc_msgSend(v17, sel_textColor);
    if (v35)
    {
      v36 = v35;
      v37 = objc_msgSend(v35, sel_hex);

      v38 = sub_1BB8729A0();
      v82 = v39;
      v83 = v38;

    }
    else
    {
      v82 = 0;
      v83 = 0;
    }
    v40 = objc_msgSend(v17, sel_lowQualityImage);
    if (v40)
    {
      v41 = v40;
      v42 = objc_msgSend(v41, "url");
      sub_1BB86C5EC();

      v43 = objc_msgSend(v41, sel_sizeBuffer);
      v44 = type metadata accessor for FormatArticleThumbnailImage();
      *(_QWORD *)&v16[*(int *)(v44 + 20)] = v43;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v16, 0, 1, v44);
    }
    else
    {
      v45 = type metadata accessor for FormatArticleThumbnailImage();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v16, 1, 1, v45);
    }
    v46 = objc_msgSend(v17, sel_defaultQualityImage);
    v47 = v81;
    if (v46)
    {
      v48 = v46;
      v49 = objc_msgSend(v48, "url");
      sub_1BB86C5EC();

      v50 = objc_msgSend(v48, (SEL)&selRef_setFirstLineHeadIndent_ + 1);
      v51 = type metadata accessor for FormatArticleThumbnailImage();
      *(_QWORD *)&v12[*(int *)(v51 + 20)] = v50;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v12, 0, 1, v51);
    }
    else
    {
      v52 = type metadata accessor for FormatArticleThumbnailImage();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v12, 1, 1, v52);
    }
    v53 = objc_msgSend(v17, sel_mediumQualityImage);
    if (v53)
    {
      v54 = v53;
      v55 = objc_msgSend(v54, "url");
      sub_1BB86C5EC();

      v56 = objc_msgSend(v54, (SEL)&selRef_setFirstLineHeadIndent_ + 1);
      v57 = type metadata accessor for FormatArticleThumbnailImage();
      *(_QWORD *)&v9[*(int *)(v57 + 20)] = v56;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v9, 0, 1, v57);
    }
    else
    {
      v58 = type metadata accessor for FormatArticleThumbnailImage();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v9, 1, 1, v58);
    }
    v59 = objc_msgSend(v17, sel_highQualityImage);
    if (v59)
    {
      v60 = v59;
      v61 = objc_msgSend(v60, "url");
      v62 = v12;
      v63 = v9;
      v64 = v91;
      sub_1BB86C5EC();

      v65 = objc_msgSend(v60, (SEL)&selRef_setFirstLineHeadIndent_ + 1);
      v66 = type metadata accessor for FormatArticleThumbnailImage();
      *(_QWORD *)(v64 + *(int *)(v66 + 20)) = v65;
      v67 = v64;
      v9 = v63;
      v12 = v62;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v67, 0, 1, v66);
    }
    else
    {
      v68 = type metadata accessor for FormatArticleThumbnailImage();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v91, 1, 1, v68);
    }
    v69 = objc_msgSend(v17, sel_ultraQualityImage);
    if (v69)
    {
      v70 = v69;
      v71 = objc_msgSend(v70, "url");
      sub_1BB86C5EC();

      v72 = objc_msgSend(v70, (SEL)&selRef_setFirstLineHeadIndent_ + 1);
      v73 = type metadata accessor for FormatArticleThumbnailImage();
      *(_QWORD *)(v47 + *(int *)(v73 + 20)) = v72;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v47, 0, 1, v73);
    }
    else
    {
      v74 = type metadata accessor for FormatArticleThumbnailImage();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v47, 1, 1, v74);
    }

    *(_QWORD *)a2 = v90;
    *(_BYTE *)(a2 + 8) = 0;
    v75 = v88;
    *(_QWORD *)(a2 + 16) = v89;
    *(_QWORD *)(a2 + 24) = v75;
    v76 = v86;
    *(_QWORD *)(a2 + 32) = v87;
    *(_QWORD *)(a2 + 40) = v76;
    v77 = v84;
    *(_QWORD *)(a2 + 48) = v85;
    *(_QWORD *)(a2 + 56) = v77;
    v78 = v82;
    *(_QWORD *)(a2 + 64) = v83;
    *(_QWORD *)(a2 + 72) = v78;
    v79 = (int *)type metadata accessor for FormatArticleThumbnail();
    sub_1BA918C28((uint64_t)v16, a2 + v79[9]);
    sub_1BA918C28((uint64_t)v12, a2 + v79[10]);
    sub_1BA918C28((uint64_t)v9, a2 + v79[11]);
    sub_1BA918C28(v91, a2 + v79[12]);
    sub_1BA918C28(v47, a2 + v79[13]);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v79 - 1) + 56))(a2, 0, 1, v79);
  }
  else
  {
    v23 = type metadata accessor for FormatArticleThumbnail();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 1, 1, v23);
  }
}

unint64_t sub_1BA62AB0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39E390;
  if (!qword_1ED39E390)
  {
    sub_1BA4AD288(255, (unint64_t *)&unk_1ED39DFA0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5088]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5098], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39E390);
  }
  return result;
}

uint64_t sub_1BA62AB70(_QWORD *a1)
{
  return FormatStyle.encode(to:)(a1);
}

uint64_t FormatStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)v37 - v6;
  MEMORY[0x1E0C80A78](v7);
  v42 = (char *)v37 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v37 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v37 - v13;
  sub_1BAEC04D0(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *v1;
  v18 = v1[1];
  v41 = v1[6];
  v39 = v1[7];
  v37[1] = v1[8];
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v22 = sub_1BAEC03C8();
  v23 = sub_1BA4A2870(&qword_1ED3D14C0, (uint64_t (*)(uint64_t))sub_1BAEC03C8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatStyle, v24, v20, (uint64_t)&type metadata for FormatStyle, v22, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v17, v23, (uint64_t)&off_1E734BD80);
  v25 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v25 != -1)
    swift_once();
  v26 = sub_1BB86EB84();
  v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C20);
  v43 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v43(v14, v27, v26);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v28 = v44;
  sub_1BAD2408C(v19, v18, 0, 0, 0, (uint64_t)v14, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v28)
  {
    v29 = v43;
    v43(v11, v27, v26);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    v29(v11, v27, v26);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    v30 = (uint64_t)v42;
    v29(v42, v27, v26);
    swift_storeEnumTagMultiPayload();
    v31 = swift_bridgeObjectRetain();
    sub_1BAD2FA10(v31, 3, 0, 0);
    sub_1BA4A2E80(v30, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v32 = (uint64_t)v40;
    v43(v40, v27, v26);
    swift_storeEnumTagMultiPayload();
    v33 = swift_bridgeObjectRetain();
    sub_1BAD2FB40(v33, 4, 0, 0);
    sub_1BA4A2E80(v32, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v34 = (uint64_t)v38;
    v43(v38, v27, v26);
    swift_storeEnumTagMultiPayload();
    v35 = swift_bridgeObjectRetain();
    sub_1BAD2FC70(v35, 5, 0, 0);
    sub_1BA4A2E80(v34, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BAEC04D0);
}

unint64_t sub_1BA62AFFC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BEA0;
  if (!qword_1ED39BEA0)
  {
    sub_1BA4AD288(255, &qword_1ED39BE98, (uint64_t)&type metadata for FormatNodeStyle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA833E3C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BEA0);
  }
  return result;
}

uint64_t sub_1BA62B074()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA62B0A8 + 4 * byte_1BB8AF33F[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA62B0A8()
{
  return 0x7373616C63;
}

uint64_t sub_1BA62B0BC()
{
  return 0x615272656E726F63;
}

unint64_t sub_1BA62B0DC()
{
  return 0xD000000000000011;
}

unint64_t sub_1BA62B0F8()
{
  return 0xD000000000000018;
}

uint64_t sub_1BA62B130()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA62B14C()
{
  return 1885433183;
}

uint64_t sub_1BA62B15C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA62B188 + 4 * byte_1BB8AE3F2[*v0]))(0x7365676465, 0xE500000000000000);
}

uint64_t sub_1BA62B188()
{
  return 0x726F6C6F63;
}

uint64_t sub_1BA62B198()
{
  return 0x6874646977;
}

uint64_t sub_1BA62B1A8()
{
  return 0x7465736E69;
}

uint64_t sub_1BA62B1B8()
{
  return 0x706143656E696CLL;
}

uint64_t sub_1BA62B1D0()
{
  return 0x74746150656E696CLL;
}

uint64_t sub_1BA62B1F0()
{
  return 1885433183;
}

uint64_t sub_1BA62B200()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA62B234 + 4 * byte_1BB8AEFFB[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA62B234()
{
  return 1701667182;
}

uint64_t sub_1BA62B244()
{
  return 0x7470697263736564;
}

uint64_t sub_1BA62B264()
{
  return 0x73656C797473;
}

uint64_t sub_1BA62B278()
{
  return 0x7365707974;
}

uint64_t sub_1BA62B28C()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BA62B2A4()
{
  return 1885433183;
}

unint64_t sub_1BA62B2B4()
{
  unint64_t result;

  result = qword_1ED3B3228;
  if (!qword_1ED3B3228)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFloat, &type metadata for FormatFloat);
    atomic_store(result, (unint64_t *)&qword_1ED3B3228);
  }
  return result;
}

uint64_t sub_1BA62B2F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA62B324();
  *a1 = result;
  return result;
}

uint64_t sub_1BA62B324()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xF)
    return 15;
  else
    return v0;
}

uint64_t sub_1BA62B36C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BA62B388(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BA62B388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v7 = sub_1BA62B404(a1, a4, a2, a3);
  if (!v4)
  {
    v8 = v7;
    swift_retain();
    v5 = sub_1BAB16104(v8, a4);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v5;
}

uint64_t sub_1BA62B404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  char v11;
  char v12;

  v4 = a4;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v4 = *v9;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA710B08();
      v12 = (v11 & 1) != 0 ? v10(a2, a1) : ((uint64_t (*)(uint64_t))v10)(a2);
      sub_1BA7114E4();
      swift_release();
      if ((v12 & 1) != 0)
        break;
      swift_bridgeObjectRelease();
      swift_release();
      v9 += 2;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        v4 = a4;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_9:
    if (v4)
      swift_bridgeObjectRetain();
    else
      return MEMORY[0x1E0DEE9D8];
  }
  return v4;
}

BOOL sub_1BA62B54C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA62B554(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

BOOL sub_1BA62B554(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return (a3() & 1) == 0;
}

uint64_t sub_1BA62B57C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA62B584(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_1BA62B584(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned __int8 v9;
  _DWORD *v10;
  uint64_t v11;
  int v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  char v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  uint64_t v31;
  CGRect v32;
  CGRect v33;

  v4 = a3;
  v5 = sub_1BB86DBE8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4 == 3)
    v9 = 0;
  else
    v9 = a3;
  sub_1BA75C00C();
  sub_1BB86DBA0();
  v10 = (_DWORD *)MEMORY[0x1E0DB6490];
  if (v9)
  {
    if (v9 == 1)
      v11 = *MEMORY[0x1E0DB6498];
    else
      v11 = *MEMORY[0x1E0DB6490];
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 104))(v8, v11, v5);
  }
  else
  {
    sub_1BB86DAEC();
  }
  swift_release();
  v12 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v12 == *v10)
  {
    sub_1BB86DBA0();
    sub_1BB86DABC();
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v20 = v19;
    swift_release();
    v32.origin.x = v14;
    v32.origin.y = v16;
    v32.size.width = v18;
    v32.size.height = v20;
    CGRectGetWidth(v32);
    v21 = sub_1BB86DC30();
  }
  else if (v12 == *MEMORY[0x1E0DB6498])
  {
    sub_1BB86DBA0();
    sub_1BB86DABC();
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;
    swift_release();
    v33.origin.x = v23;
    v33.origin.y = v25;
    v33.size.width = v27;
    v33.size.height = v29;
    CGRectGetHeight(v33);
    v21 = sub_1BB86DC30();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v21 = 0;
  }
  return v21 & 1;
}

uint64_t sub_1BA62B754(_QWORD *a1)
{
  return FormatSolidFill.encode(to:)(a1);
}

uint64_t FormatSolidFill.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  sub_1BAEBB620(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v25 = v1[1];
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BAEBB518();
  v15 = sub_1BA4A2870(&qword_1ED3D1610, (uint64_t (*)(uint64_t))sub_1BAEBB518, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSolidFill, v16, v12, (uint64_t)&type metadata for FormatSolidFill, v14, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v15, (uint64_t)&off_1E734BD80);
  v17 = qword_1ED3C2478;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v27;
  sub_1BAD2CD38(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v21)
  {
    v22 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v23 = v25;
    swift_retain();
    sub_1BAD2CEA8(v23, 1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAEBB620);
}

unint64_t sub_1BA62BA1C()
{
  unint64_t result;

  result = qword_1ED3B3218;
  if (!qword_1ED3B3218)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColor, &type metadata for FormatColor);
    atomic_store(result, (unint64_t *)&qword_1ED3B3218);
  }
  return result;
}

uint64_t sub_1BA62BA60(_QWORD *a1)
{
  return FormatOptionEnum.encode(to:)(a1);
}

uint64_t FormatOptionEnum.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v38 = (char *)&v33 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  sub_1BAEA844C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v13 = v1[1];
  v15 = v1[3];
  v36 = v1[2];
  v37 = v15;
  v34 = v1[4];
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BAEA8344();
  v19 = sub_1BA4A2870(&qword_1ED3D0C40, (uint64_t (*)(uint64_t))sub_1BAEA8344, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatOptionEnum, v20, v16, (uint64_t)&type metadata for FormatOptionEnum, v18, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v12, v19, (uint64_t)&off_1E734BD80);
  v21 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = sub_1BB86EB84();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C20);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24(v9, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v25 = v39;
  sub_1BAD1FDF4(v14, v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v25)
  {
    v26 = (uint64_t)v38;
    v24(v38, v23, v22);
    swift_storeEnumTagMultiPayload();
    v27 = v37;
    swift_bridgeObjectRetain();
    sub_1BAD1FDF4(v36, v27, 1, 0, 0, v26, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v28 = qword_1ED3C6D18;
    v29 = v34;
    swift_bridgeObjectRetain();
    if (v28 != -1)
      swift_once();
    v30 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476B60);
    v31 = (uint64_t)v35;
    v24(v35, v30, v22);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2C0B8(v29, 2, 0, 0);
    sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAEA844C);
}

unint64_t sub_1BA62BE0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BDC8;
  if (!qword_1ED39BDC8)
  {
    sub_1BA62BE6C();
    v2 = v1;
    v3 = sub_1BA83F060();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BDC8);
  }
  return result;
}

void sub_1BA62BE6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9338)
  {
    sub_1BA50CAA8(255, &qword_1ED3B0CF0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9338);
  }
}

uint64_t sub_1BA62BEE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFill.init(from:)(a1, a2);
}

uint64_t FormatFill.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v22 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  v20 = a1;
  v21 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  v11 = v23;
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA62C338();
    v24 = 0;
    v25 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726B7F8;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v11);
  a1 = v20;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA62C338()
{
  unint64_t result;

  result = qword_1ED3C63F8;
  if (!qword_1ED3C63F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB810, &_s10CodingTypeON_100);
    atomic_store(result, (unint64_t *)&qword_1ED3C63F8);
  }
  return result;
}

unint64_t sub_1BA62C37C()
{
  unint64_t result;

  result = qword_1ED3B44F8;
  if (!qword_1ED3B44F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSolidFill, &type metadata for FormatSolidFill);
    atomic_store(result, (unint64_t *)&qword_1ED3B44F8);
  }
  return result;
}

unint64_t sub_1BA62C3C0()
{
  unint64_t result;

  result = qword_1ED39C9B0;
  if (!qword_1ED39C9B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShine, &type metadata for FormatShine);
    atomic_store(result, (unint64_t *)&qword_1ED39C9B0);
  }
  return result;
}

uint64_t destroy for FormatOption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 24) != 1)
    swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for FormatVersionRequirement(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    result = swift_getEnumCaseMultiPayload();
    switch((_DWORD)result)
    {
      case 2:
        v8 = sub_1BB86EB84();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(v4, v8);
        sub_1BA6F3F88();
        v9(v4 + *(int *)(v10 + 48), v8);
        break;
      case 1:
        v11 = sub_1BB86EB84();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v4, v11);
        sub_1BA8D4E7C();
        break;
      case 0:
        v7 = sub_1BB86EB84();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
      default:
        return result;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA62C550@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAE77C8C();
  *a1 = result;
  return result;
}

uint64_t sub_1BA62C57C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAE77C3C();
  *a1 = result;
  return result;
}

uint64_t sub_1BA62C5A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSolidFill.init(from:)(a1, a2);
}

uint64_t FormatSolidFill.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  __int128 v31;
  char v32;
  uint64_t v33;

  v28 = a2;
  sub_1BAEBB4A0();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEBB518();
  sub_1BA4A2870(&qword_1ED3D1610, (uint64_t (*)(uint64_t))sub_1BAEBB518, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
    v18 = v2;
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v18);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)v28;
  v12 = v8;
  if ((v10 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v28 = v6;
      v21 = *((_QWORD *)v15 - 2);
      v22 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v23);
      *((_QWORD *)&v27 - 4) = &_s10CodingKeysON_47;
      *((_QWORD *)&v27 - 3) = sub_1BAEBB598();
      *((_QWORD *)&v27 - 2) = sub_1BA62C9E4();
      *((_QWORD *)&v27 - 1) = sub_1BAEBB5DC();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E726E5C8);
      swift_release_n();
      sub_1BA98D1F0();
      v18 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v5);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v31 = 0uLL;
  v32 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v29 = 0uLL;
    v30 = 0;
    sub_1BA62C9A0();
    sub_1BB8740D4();
    v16 = v33;
  }
  else
  {
    v17 = swift_allocObject();
    *(_BYTE *)(v17 + 16) = 21;
    *(_QWORD *)(v17 + 24) = 0x3FF0000000000000;
    *(_BYTE *)(v17 + 32) = 0;
    v16 = v17 | 0x1000000000000000;
  }
  v27 = xmmword_1BB8A1A10;
  v31 = xmmword_1BB8A1A10;
  v32 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v29 = v27;
    v30 = 0;
    sub_1BA62C9A0();
    sub_1BB8740D4();
    v26 = v33;
  }
  else
  {
    v20 = swift_allocObject();
    *(_BYTE *)(v20 + 16) = 2;
    *(_QWORD *)(v20 + 24) = 0;
    *(_BYTE *)(v20 + 32) = 0;
    v26 = v20 | 0x1000000000000000;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  *v11 = v16;
  v11[1] = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA62C9A0()
{
  unint64_t result;

  result = qword_1ED3B3220;
  if (!qword_1ED3B3220)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColor, &type metadata for FormatColor);
    atomic_store(result, (unint64_t *)&qword_1ED3B3220);
  }
  return result;
}

unint64_t sub_1BA62C9E4()
{
  unint64_t result;

  result = qword_1ED3C70D8;
  if (!qword_1ED3C70D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6698, &_s10CodingKeysON_47);
    atomic_store(result, (unint64_t *)&qword_1ED3C70D8);
  }
  return result;
}

uint64_t sub_1BA62CA28@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatTypeDefinition.Case.init(from:)(a1, a2);
}

uint64_t FormatTypeDefinition.Case.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t *v31;
  __int128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  __int128 v38;
  char v39;
  __int128 v40;
  char v41;

  v3 = v2;
  v35 = a2;
  sub_1BAEC8880();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC88F8();
  sub_1BA4A2870(&qword_1ED3D0F40, (uint64_t (*)(uint64_t))sub_1BAEC88F8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v33 = a1;
  v34 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v15 - 2);
      v20 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v21);
      *((_QWORD *)&v32 - 4) = &_s10CodingKeysON_13;
      *((_QWORD *)&v32 - 3) = sub_1BAEC8978();
      *((_QWORD *)&v32 - 2) = sub_1BA62CE18();
      *((_QWORD *)&v32 - 1) = sub_1BAEC89BC();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726F2E8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
      a1 = v33;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v40 = 0uLL;
  v41 = 0;
  v16 = sub_1BB874098();
  v18 = v17;
  v40 = xmmword_1BB8A1A10;
  v41 = 0;
  v26 = sub_1BB874098();
  v28 = v27;
  v32 = xmmword_1BB8D2D60;
  v40 = xmmword_1BB8D2D60;
  v41 = 0;
  v29 = sub_1BB8740F8();
  if ((v29 & 1) != 0)
  {
    v38 = v32;
    v39 = 0;
    sub_1BB8740D4();
    v30 = v37;
    *(_QWORD *)&v32 = v36;
  }
  else
  {
    *(_QWORD *)&v32 = 0;
    v30 = 0xE000000000000000;
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v6);
  v31 = v35;
  *v35 = v16;
  v31[1] = v18;
  v31[2] = v26;
  v31[3] = v28;
  v31[4] = v32;
  v31[5] = v30;
  v24 = (uint64_t)v33;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

unint64_t sub_1BA62CE18()
{
  unint64_t result;

  result = qword_1ED3C9300;
  if (!qword_1ED3C9300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4820, &_s10CodingKeysON_13);
    atomic_store(result, (unint64_t *)&qword_1ED3C9300);
  }
  return result;
}

uint64_t sub_1BA62CE5C(_QWORD *a1)
{
  return FormatAndExpression.encode(to:)(a1);
}

uint64_t FormatAndExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  sub_1BAE71684(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v25 = v1[1];
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BAE7157C();
  v15 = sub_1BA4A2870(&qword_1ED3D0DA0, (uint64_t (*)(uint64_t))sub_1BAE7157C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAndExpression, v16, v12, (uint64_t)&type metadata for FormatAndExpression, v14, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v15, (uint64_t)&off_1E734BD80);
  v17 = qword_1ED3C2478;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v27;
  sub_1BAD1CAB8(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v21)
  {
    v22 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v23 = v25;
    swift_retain();
    sub_1BAD1CAB8(v23, 1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE71684);
}

uint64_t sub_1BA62D124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1ED3B0718, (uint64_t (*)(void))sub_1BA62D620, (uint64_t)&type metadata for FeedBannerAdViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = &v14[-v10];
  v17 = a1;
  v15 = a2;
  v16 = a3;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v8 + 104))(&v14[-v10], *MEMORY[0x1E0DB63C0], v7, v9);
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BA62D260(0, &qword_1ED3B06B0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA62D304(&qword_1ED3B06A8, &qword_1ED3B06B0, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_1BA62D260(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for FeedBannerAdViewLayout;
    v8[1] = type metadata accessor for FeedBannerAdViewLayout.Attributes(255);
    v8[2] = sub_1BA62D620();
    v8[3] = sub_1BA4A2870(&qword_1ED3B1FE0, type metadata accessor for FeedBannerAdViewLayout.Attributes, (uint64_t)&protocol conformance descriptor for FeedBannerAdViewLayout.Attributes);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BA62D304(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA62D260(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA62D344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *boxed_opaque_existential_0;
  uint64_t (*v16)(uint64_t);
  uint64_t (*v17)(uint64_t, _QWORD *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[7];

  v6 = sub_1BB87204C();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA62E9EC();
  v20 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B0718, (uint64_t (*)(void))sub_1BA62D620, (uint64_t)&type metadata for FeedBannerAdViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  v19 = v10;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v19 - v13;
  v22[6] = a1;
  swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DB6408], v11);
  v22[5] = *(_QWORD *)(a2 + 32);
  v22[3] = type metadata accessor for FeedBannerAd();
  v22[4] = sub_1BA4A2870(&qword_1ED3D35E0, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v22);
  sub_1BA7353AC(a3, (uint64_t)boxed_opaque_existential_0);
  swift_retain();
  sub_1BB872040();
  sub_1BA62D774(0, &qword_1ED3B05F0, (void (*)(uint64_t))MEMORY[0x1E0D535B0], (void (*)(void))sub_1BA83F380);
  sub_1BB8720E8();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53648];
  sub_1BA62D620();
  sub_1BA62EAC8();
  sub_1BA4A2870((unint64_t *)&unk_1ED3B0BF0, v16, MEMORY[0x1E0D53640]);
  sub_1BB86D684();
  v17 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA62D260(0, &qword_1ED3B05A8, MEMORY[0x1E0DB5A10]);
  sub_1BA62D304(&qword_1ED3B05A0, &qword_1ED3B05A8, v17, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v19);
}

unint64_t sub_1BA62D620()
{
  unint64_t result;

  result = qword_1ED3B20F8[0];
  if (!qword_1ED3B20F8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedBannerAdViewLayout, &type metadata for FeedBannerAdViewLayout);
    atomic_store(result, qword_1ED3B20F8);
  }
  return result;
}

uint64_t sub_1BA62D664@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t result;
  _OWORD v9[2];
  char v10;

  sub_1BA62E998();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v9, 0, sizeof(v9));
  v10 = 1;
  sub_1BA62D774(0, (unint64_t *)&qword_1ED3B0628, type metadata accessor for CGRect, (void (*)(void))sub_1BAC9AEB8);
  swift_allocObject();
  v5 = sub_1BB86D450();
  v6 = sub_1BB8720A0();
  v7 = (void (*)(uint64_t))MEMORY[0x1E0D535B0];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_1BA62D774(0, &qword_1ED3B05F0, v7, (void (*)(void))sub_1BA83F380);
  swift_allocObject();
  result = sub_1BB86D450();
  *a1 = v5;
  a1[1] = result;
  return result;
}

void sub_1BA62D774(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BB86D444();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BA62D7D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    type metadata accessor for CGRect(255);
    v7 = v6;
    v8 = sub_1BA4A2870(&qword_1ED3B9908, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0DB6508]);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BA62D854(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BA4A2870(a4, a3, a5);
    v9 = sub_1BB86D444();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t FeedBannerAdViewLayout.Attributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  char v29;

  v21 = a2;
  v23 = sub_1BB8720A0();
  v20 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v22 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9BC0, (uint64_t (*)(void))sub_1BA62E954, (uint64_t)&type metadata for FeedBannerAdViewLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v25 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - v6;
  v8 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA62E954();
  v24 = v7;
  v11 = v26;
  sub_1BB87468C();
  if (v11)
  {
    v18 = (uint64_t)a1;
  }
  else
  {
    v12 = v10;
    v13 = v5;
    v26 = a1;
    v14 = v22;
    v15 = v23;
    type metadata accessor for CGRect(0);
    v29 = 0;
    sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    sub_1BB8740D4();
    v16 = v28;
    *(_OWORD *)v12 = v27;
    *((_OWORD *)v12 + 1) = v16;
    LOBYTE(v27) = 1;
    sub_1BA4A2870(&qword_1ED3B0BD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D535B0], MEMORY[0x1E0D535C8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v24, v25);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v12[*(int *)(v8 + 20)], v14, v15);
    sub_1BA62E910((uint64_t)v12, v21);
    v18 = (uint64_t)v26;
  }
  return __swift_destroy_boxed_opaque_existential_1(v18);
}

uint64_t HeadlineViewLayout.Attributes.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  char v66;

  sub_1BA4CDF6C(0, &qword_1ED3B9C28, (uint64_t (*)(void))sub_1BA62E8CC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v63 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA62E8CC();
  sub_1BB87468C();
  if (!v2)
  {
    v62 = a2;
    type metadata accessor for CGRect(0);
    v66 = 0;
    sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    sub_1BB8740D4();
    v9 = v64;
    v10 = v65;
    v66 = 1;
    sub_1BB8740D4();
    v11 = v64;
    v12 = v65;
    v66 = 2;
    sub_1BB8740D4();
    v58 = *((_QWORD *)&v12 + 1);
    v59 = v12;
    v60 = *((_QWORD *)&v11 + 1);
    v61 = v11;
    v13 = v64;
    v14 = v65;
    v66 = 3;
    sub_1BB8740D4();
    v54 = *((_QWORD *)&v14 + 1);
    v55 = v14;
    v56 = *((_QWORD *)&v13 + 1);
    v57 = v13;
    v15 = v64;
    v16 = v65;
    v66 = 4;
    sub_1BB8740D4();
    v50 = *((_QWORD *)&v16 + 1);
    v51 = v16;
    v52 = *((_QWORD *)&v15 + 1);
    v53 = v15;
    v17 = v64;
    v18 = v65;
    v66 = 5;
    sub_1BB8740D4();
    v46 = *((_QWORD *)&v18 + 1);
    v47 = v18;
    v48 = *((_QWORD *)&v17 + 1);
    v49 = v17;
    v19 = v64;
    v20 = v65;
    v66 = 6;
    sub_1BB8740D4();
    v44 = *((_QWORD *)&v64 + 1);
    v45 = v64;
    v42 = *((_QWORD *)&v65 + 1);
    v43 = v65;
    v66 = 7;
    sub_1BB8740D4();
    v40 = *((_QWORD *)&v64 + 1);
    v41 = v64;
    v38 = *((_QWORD *)&v65 + 1);
    v39 = v65;
    type metadata accessor for UIRectCorner(0);
    v66 = 8;
    sub_1BA4A2870(&qword_1ED3B9780, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, MEMORY[0x1E0DB6500]);
    sub_1BB8740D4();
    v37 = v64;
    v66 = 9;
    sub_1BA689CD8();
    sub_1BB8740D4();
    v36 = v64;
    v66 = 10;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v63);
    v22 = v62;
    *v62 = v9;
    v22[1] = v10;
    v23 = v60;
    *((_QWORD *)v22 + 4) = v61;
    *((_QWORD *)v22 + 5) = v23;
    v24 = v58;
    *((_QWORD *)v22 + 6) = v59;
    *((_QWORD *)v22 + 7) = v24;
    v25 = v56;
    *((_QWORD *)v22 + 8) = v57;
    *((_QWORD *)v22 + 9) = v25;
    v26 = v54;
    *((_QWORD *)v22 + 10) = v55;
    *((_QWORD *)v22 + 11) = v26;
    v27 = v52;
    *((_QWORD *)v22 + 12) = v53;
    *((_QWORD *)v22 + 13) = v27;
    v28 = v50;
    *((_QWORD *)v22 + 14) = v51;
    *((_QWORD *)v22 + 15) = v28;
    v29 = v48;
    *((_QWORD *)v22 + 16) = v49;
    *((_QWORD *)v22 + 17) = v29;
    v30 = v46;
    *((_QWORD *)v22 + 18) = v47;
    *((_QWORD *)v22 + 19) = v30;
    v22[10] = v19;
    v22[11] = v20;
    v31 = v44;
    *((_QWORD *)v22 + 24) = v45;
    *((_QWORD *)v22 + 25) = v31;
    v32 = v42;
    *((_QWORD *)v22 + 26) = v43;
    *((_QWORD *)v22 + 27) = v32;
    v33 = v40;
    *((_QWORD *)v22 + 28) = v41;
    *((_QWORD *)v22 + 29) = v33;
    v34 = v38;
    *((_QWORD *)v22 + 30) = v39;
    *((_QWORD *)v22 + 31) = v34;
    *((_QWORD *)v22 + 32) = v37;
    *((_QWORD *)v22 + 33) = v36;
    v35 = v65;
    v22[17] = v64;
    v22[18] = v35;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1BA4AD288(a1, &qword_1ED3B9920, (uint64_t)&unk_1E72720D0, MEMORY[0x1E0DEEC78]);
}

uint64_t sub_1BA62E16C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
  sub_1BA4AD288(a1, &qword_1ED3B9788, (uint64_t)&unk_1E7272050, MEMORY[0x1E0DEEC78]);
}

uint64_t HeadlineViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BA62D854(0, (unint64_t *)&qword_1ED3B0628, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, &qword_1ED3B9908, MEMORY[0x1E0DB6508]);
  swift_allocObject();
  v12 = sub_1BB86D450();
  swift_allocObject();
  v11 = sub_1BB86D450();
  swift_allocObject();
  v10 = sub_1BB86D450();
  swift_allocObject();
  v2 = sub_1BB86D450();
  swift_allocObject();
  v3 = sub_1BB86D450();
  swift_allocObject();
  v4 = sub_1BB86D450();
  swift_allocObject();
  v5 = sub_1BB86D450();
  sub_1BA62D854(0, &qword_1ED3B0618, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, &qword_1ED3B9778, MEMORY[0x1E0DB64F0]);
  swift_allocObject();
  v6 = sub_1BB86D450();
  sub_1BA4CDF6C(0, &qword_1ED3B05E0, (uint64_t (*)(void))sub_1BA841D38, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  swift_allocObject();
  v7 = sub_1BB86D450();
  swift_allocObject();
  v8 = sub_1BB86D450();
  swift_allocObject();
  result = sub_1BB86D450();
  *a1 = v12;
  a1[1] = v11;
  a1[2] = v10;
  a1[3] = v2;
  a1[4] = v3;
  a1[5] = v4;
  a1[6] = v5;
  a1[7] = v6;
  a1[8] = v7;
  a1[9] = v8;
  a1[10] = result;
  return result;
}

uint64_t FormatLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _OWORD v17[2];
  char v18;

  v2 = sub_1BB86C8E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v17, 0, sizeof(v17));
  v18 = 1;
  sub_1BA62E724();
  swift_allocObject();
  v6 = sub_1BB86D450();
  sub_1BB86C8D4();
  v7 = sub_1BB86C8C8();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)&v17[0] = v7;
  *((_QWORD *)&v17[0] + 1) = v9;
  sub_1BA62E870();
  swift_allocObject();
  v10 = sub_1BB86D450();
  v17[0] = xmmword_1BB87FC90;
  sub_1BA62E6B8(0, &qword_1ED3B0610, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (void (*)(void))sub_1BA81E324);
  swift_allocObject();
  v11 = sub_1BB86D450();
  v17[0] = 0uLL;
  swift_allocObject();
  v12 = sub_1BB86D450();
  v17[0] = 0uLL;
  swift_allocObject();
  v13 = sub_1BB86D450();
  sub_1BA62E79C();
  swift_allocObject();
  v14 = sub_1BB86D7C8();
  sub_1BA62E7F4();
  swift_allocObject();
  v15 = sub_1BB86D7C8();
  LOBYTE(v17[0]) = 8;
  sub_1BA62E6B8(0, (unint64_t *)&qword_1ED3BBDD8, (unint64_t *)&qword_1ED3B7108, (uint64_t)&type metadata for FormatAccessibilityRole, (void (*)(void))sub_1BA8296B0);
  swift_allocObject();
  result = sub_1BB86D450();
  *a1 = v6;
  a1[1] = v10;
  a1[2] = v11;
  a1[3] = v12;
  a1[4] = v13;
  a1[5] = v14;
  a1[6] = v15;
  a1[7] = result;
  return result;
}

void sub_1BA62E6B8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BA4CF8F4(255, a3);
    a5();
    v7 = sub_1BB86D444();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BA62E724()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0628)
  {
    type metadata accessor for CGRect(255);
    sub_1BA4A2870(&qword_1ED3B9908, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0DB6508]);
    v0 = sub_1BB86D444();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0628);
  }
}

void sub_1BA62E79C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B06D8)
  {
    sub_1BA831688();
    v0 = sub_1BB86D7D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B06D8);
  }
}

void sub_1BA62E7F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4588)
  {
    type metadata accessor for FormatAccessibilityLayoutValue();
    sub_1BA50AD30(&qword_1ED3CCD90, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t)&protocol conformance descriptor for FormatAccessibilityLayoutValue);
    v0 = sub_1BB86D7D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4588);
  }
}

void sub_1BA62E870()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0600)
  {
    v0 = sub_1BB86D444();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0600);
  }
}

unint64_t sub_1BA62E8CC()
{
  unint64_t result;

  result = qword_1ED3B5730;
  if (!qword_1ED3B5730)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FA584, &type metadata for HeadlineViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B5730);
  }
  return result;
}

uint64_t sub_1BA62E910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BA62E954()
{
  unint64_t result;

  result = qword_1ED3B1FB8;
  if (!qword_1ED3B1FB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AB7EC, &type metadata for FeedBannerAdViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B1FB8);
  }
  return result;
}

void sub_1BA62E998()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0BD8)
  {
    sub_1BB8720A0();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0BD8);
  }
}

void sub_1BA62E9EC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3B0680)
  {
    sub_1BA62D774(255, &qword_1ED3B05F0, (void (*)(uint64_t))MEMORY[0x1E0D535B0], (void (*)(void))sub_1BA83F380);
    sub_1BB8720E8();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53648];
    sub_1BA62D620();
    sub_1BA62EAC8();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B0BF0, v0, MEMORY[0x1E0D53640]);
    v1 = sub_1BB86D690();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3B0680);
  }
}

unint64_t sub_1BA62EAC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B05E8;
  if (!qword_1ED3B05E8)
  {
    sub_1BA62D774(255, &qword_1ED3B05F0, (void (*)(uint64_t))MEMORY[0x1E0D535B0], (void (*)(void))sub_1BA83F380);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5A60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B05E8);
  }
  return result;
}

uint64_t sub_1BA62EB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  *(CFTimeInterval *)(v0 + 64) = CACurrentMediaTime();
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v3 + 104);
  v10 = v1;
  v4 = *(_QWORD *)(v3 + 16);
  v5 = swift_allocObject();
  v6 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v5 + 16) = v6;
  v7 = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(v0 + 88) = v7;
  *(_QWORD *)(v5 + 24) = v7;
  *(_QWORD *)(v0 + 96) = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t (*)(uint64_t), uint64_t))(v7 + 40))(&v10, v4, sub_1BA838520, v5);
  swift_release();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v8;
  *v8 = v0;
  v8[1] = sub_1BA4CEBD4;
  return sub_1BB86E908();
}

uint64_t static FeedLocation.container(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 < 0)
  {
    v6 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v6;
    v5 = 0x7000000000000000;
  }
  else
  {
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = a1;
    v5 = 0x2000000000000000;
  }
  *a2 = v5 | v4;
  return swift_retain();
}

unint64_t sub_1BA62EC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  if ((v1 & 0x4000000000000000) != 0)
  {
    v3 = v1 & 0xBFFFFFFFFFFFFFFFLL;
    swift_retain();
  }
  else
  {
    v2 = swift_retain();
    v3 = FeedCursorStore.get(token:)(v2);
    sub_1BA4B0900();
  }
  return v3;
}

uint64_t sub_1BA62ECD4(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t FeedCursorStore.get(token:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;

  v2 = v1;
  v4 = *v1;
  sub_1BB86DD20();
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v7 = v2[3];
  v12[0] = v6;
  v12[1] = v5;
  v9 = type metadata accessor for FeedCursorContainer(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), v8);
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE3148](&v13, v12, v7, MEMORY[0x1E0DEA968], v9, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  v10 = v13;
  swift_endAccess();
  sub_1BB86DD2C();
  return v10;
}

uint64_t type metadata accessor for FeedCursorResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedCursorResult);
}

uint64_t sub_1BA62EDB8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = FeedCursorContainer.init(cursor:)();
  *a2 = result;
  a2[1] = a1;
  return result;
}

uint64_t sub_1BA62EDE0()
{
  uint64_t v0;
  void (*v1)(uint64_t *, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  _OWORD v70[5];
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  __int16 v74;

  v1 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v0 + 264) + 16);
  v1(*(uint64_t **)(v0 + 280), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 256));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v4 = *(_QWORD *)(v0 + 280);
      v6 = *(_QWORD *)(v0 + 232);
      v5 = *(_QWORD *)(v0 + 240);
      v7 = *(_QWORD *)(v0 + 224);
      type metadata accessor for FeedCursor(255, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 216), v3);
      v8 = *(_QWORD *)(v4 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v4, v7);
      v9 = (uint64_t *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 264));
      swift_beginAccess();
      v11 = *v9;
      v13 = *(_QWORD *)(v0 + 232);
      v12 = *(_QWORD *)(v0 + 240);
      v15 = *(_QWORD *)(v0 + 216);
      v14 = *(_QWORD *)(v0 + 224);
      v16 = *(_QWORD *)(v0 + 184);
      if (v11)
      {
        v17 = *(_QWORD *)(*(_QWORD *)(v0 + 144) + 40);
        v18 = sub_1BB87330C();
        sub_1BB86EF44("Service converted last group to next group for chained cursor", 61, 2, &dword_1BA493000, v17, v18, MEMORY[0x1E0DEE9D8]);
        type metadata accessor for FeedCursorContainer(255, v16, v15, v19);
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        v21 = swift_allocBox();
        v23 = v22;
        v24 = *(int *)(TupleTypeMetadata2 + 48);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v22, v12, v14);
        *(_QWORD *)(v23 + v24) = FeedCursorContainer.init(cursor:)(v8);
        swift_retain();
        v25 = v21;
      }
      else
      {
        type metadata accessor for FeedCursorContainer(255, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 216), v10);
        v49 = swift_getTupleTypeMetadata2();
        v50 = swift_allocBox();
        v52 = v51;
        v53 = *(int *)(v49 + 48);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v51, v12, v14);
        *(_QWORD *)(v52 + v53) = FeedCursorContainer.init(cursor:)(v8);
        swift_retain();
        v25 = v50 | 0x4000000000000000;
      }
      v39 = sub_1BA62F504(v25);
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    }
    else
    {
      v40 = **(_QWORD **)(v0 + 280);
      *(_QWORD *)(v0 + 296) = v40;
      v41 = (uint64_t *)(v40 + *(_QWORD *)(*(_QWORD *)v40 + 264));
      swift_beginAccess();
      v42 = *v41;
      *(_QWORD *)(v0 + 304) = *v41;
      if (v42)
      {
        v43 = swift_retain();
        *(_QWORD *)(v0 + 312) = sub_1BB638188(v43, v44, v45, v46);
        v47 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 320) = v47;
        *v47 = v0;
        v47[1] = sub_1BAAE1BD8;
        return sub_1BB86E908();
      }
      if ((*(_QWORD *)(v0 + 288) >> 60) - 5 >= 2)
      {
        v63 = *(uint64_t **)(v0 + 272);
        v64 = *(_QWORD *)(v0 + 256);
        v65 = *(_QWORD *)(v0 + 216);
        v66 = *(_QWORD *)(v0 + 184);
        v67 = *(_QWORD *)(v0 + 128);
        swift_release();
        v1(v63, v67, v64);
        v39 = sub_1BB5620E8(v63, v66, v65, v68);
      }
      else
      {
        v55 = *(_QWORD *)(v0 + 200);
        v54 = *(_QWORD *)(v0 + 208);
        v56 = *(_QWORD *)(v0 + 192);
        v58 = *(_QWORD *)(v0 + 152);
        v57 = *(_QWORD *)(v0 + 160);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 184) - 8) + 56))(v54, 1, 1);
        v69 = 3;
        v59 = sub_1BB86C8B0();
        v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
        v60(v57, 1, 1, v59);
        v60(v58, 1, 1, v59);
        memset(v70, 0, sizeof(v70));
        v72 = 0;
        v73 = 0;
        v71 = 0u;
        v74 = 256;
        v61 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v54, 0, &v69, v57, v58, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
                0,
                0,
                (uint64_t)v70,
                (uint64_t *)&v71,
                (uint64_t)&v73,
                0,
                0,
                0);
        swift_release();
        sub_1BA76D750(v58);
        sub_1BA76D750(v57);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
        v62 = swift_allocObject();
        *(_QWORD *)(v62 + 16) = FeedCursorContainer.init(cursor:)(v61);
        v39 = v62 | 0x8000000000000000;
      }
    }
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 280);
    v27 = *(_QWORD *)(v0 + 248);
    v28 = *(_QWORD *)(v0 + 224);
    v29 = *(_QWORD *)(v0 + 232);
    v30 = *(_QWORD *)(v0 + 216);
    v31 = *(_QWORD *)(v0 + 184);
    type metadata accessor for FeedCursor(255, v31, v30, v3);
    v32 = *(_QWORD *)(v26 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v27, v26, v28);
    type metadata accessor for FeedCursorContainer(255, v31, v30, v33);
    v34 = swift_getTupleTypeMetadata2();
    v35 = swift_allocBox();
    v37 = v36;
    v38 = *(int *)(v34 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v36, v27, v28);
    *(_QWORD *)(v37 + v38) = FeedCursorContainer.init(cursor:)(v32);
    swift_retain();
    v39 = sub_1BA62F504(v35);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v39);
}

uint64_t type metadata accessor for FeedCursor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedCursor);
}

_QWORD *sub_1BA62F394(_QWORD *a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  char v10;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8)
    v7 = 8;
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = *((unsigned __int8 *)a2 + v7);
  if (v8 >= 3 && (v7 & 0xFFFFFFF8) != 0)
    v8 = *a2 + 3;
  if (v8 == 2)
  {
    *a1 = *(_QWORD *)a2;
    v10 = 2;
  }
  else if (v8 == 1)
  {
    (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v10 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = 0;
    *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  *((_BYTE *)a1 + v7) = v10;
  swift_retain();
  return a1;
}

uint64_t sub_1BA62F504(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  if (*(_BYTE *)(v1 + 56) == 1)
  {
    swift_checkMetadataState();
    FeedServiceFetchResult.feedContext.getter(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1BA6DB13C(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v6 & 1) == 0)
      __asm { BR              X10 }
  }
  swift_retain();
  return a1;
}

void sub_1BA62F6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  type metadata accessor for FeedCursorContainer(255, *(_QWORD *)(v8 - 200), v5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = swift_projectBox();
  v11 = *(_QWORD *)(v10 + *(int *)(TupleTypeMetadata2 + 48));
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v12(v7, v10, v4);
  v13 = swift_allocObject();
  sub_1BA6325A8(v4, v4);
  swift_allocObject();
  swift_retain();
  v14 = sub_1BB872E2C();
  v12(v15, v7, v4);
  sub_1BA69C794(v14);
  v16 = sub_1BA62FAA0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v4);
  *(_QWORD *)(v13 + 16) = v16;
  *(_QWORD *)(v13 + 24) = v11;
  JUMPOUT(0x1BA62F6B8);
}

void sub_1BA62F7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_allocObject();
  swift_retain();
  *(_QWORD *)(v2 + 16) = sub_1BA62FAA0();
  *(_QWORD *)(v2 + 24) = v1;
  JUMPOUT(0x1BA62F6B8);
}

void sub_1BA62F838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  type metadata accessor for FeedCursorContainer(255, *(_QWORD *)(v8 - 200), v5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = swift_projectBox();
  v11 = *(_QWORD *)(v10 + *(int *)(TupleTypeMetadata2 + 48));
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v12(v7, v10, v4);
  v13 = swift_allocObject();
  sub_1BA6325A8(v4, v4);
  swift_allocObject();
  swift_retain();
  v14 = sub_1BB872E2C();
  v12(v15, v7, v4);
  sub_1BA69C794(v14);
  v16 = sub_1BA62FAA0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v4);
  *(_QWORD *)(v13 + 16) = v16;
  *(_QWORD *)(v13 + 24) = v11;
  JUMPOUT(0x1BA62F6B8);
}

void sub_1BA62F940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_allocObject();
  swift_retain();
  *(_QWORD *)(v2 + 16) = sub_1BA62FAA0();
  *(_QWORD *)(v2 + 24) = v1;
  JUMPOUT(0x1BA62F6B8);
}

void FeedServiceFetchResult.feedContext.getter(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA62F9BC()
{
  uint64_t v0;
  uint64_t v1;

  return FeedCursorContainer.feedContext.getter(*(_QWORD *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x18), v0);
}

uint64_t sub_1BA62FAA0()
{
  uint64_t v0;
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v2 = sub_1BB872E68();
  v0 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v0);
  sub_1BB872C70();
  return v2;
}

char *FeedCursorFactory.init(emitterFactory:feedPoolManager:bundleSubscriptionManager:offlineProvider:loggingChannel:feedContextFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v11;
  char *v12;

  v11 = *v7;
  v12 = sub_1BB83C180(a1, a2, a3, a4, a5, a6, a7);

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v11 + 88) - 8) + 8))(a2);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v11 + 80) - 8) + 8))(a1);
  return v12;
}

_QWORD *sub_1BA62FC5C(void *a1)
{
  swift_allocObject();
  return sub_1BA62FC94(a1);
}

_QWORD *sub_1BA62FC94(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v2 = v1;
  v4 = *v1;
  v5 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v5);
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  v1[2] = sub_1BB86DD50();
  v6 = *(_QWORD *)(v4 + 80);
  v7 = *(_QWORD *)(v4 + 88);
  type metadata accessor for FeedCursorContainer(0, v6, v7, v8);
  v2[3] = sub_1BB87273C();
  type metadata accessor for FeedCursorStore.WeakWrapper(255, v6, v7, v9);
  sub_1BB872EE0();
  v10 = sub_1BB87273C();
  v11 = MEMORY[0x1E0DEE9E8];
  v2[5] = a1;
  v2[6] = v11;
  v2[4] = v10;
  v12 = qword_1ED3C5AA8;
  v13 = a1;
  if (v12 != -1)
    swift_once();
  sub_1BA62FDE4();
  return v2;
}

uint64_t sub_1BA62FDE4()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1BB86DD20();
  type metadata accessor for FeedCursorStoreManager.WeakWrapper();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v1 = (_QWORD *)(v0 + 24);
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 24);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v3 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_14;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v6 = MEMORY[0x1BCCE4630](i, v2);
    }
    else
    {
      v6 = *(_QWORD *)(v2 + 8 * i + 32);
      swift_retain();
    }
    v7 = MEMORY[0x1BCCE5D40](v6 + 16);
    swift_unknownObjectRelease();
    if (v7)
    {
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v8 = v10;
LABEL_15:
  *v1 = v8;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = swift_retain();
  MEMORY[0x1BCCE36AC](v9);
  if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  sub_1BB872DCC();
  swift_endAccess();
  swift_release();
  return sub_1BB86DD2C();
}

uint64_t type metadata accessor for FeedCursorStoreManager.WeakWrapper()
{
  return objc_opt_self();
}

uint64_t sub_1BA630038(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22[2];

  v3 = *v1;
  sub_1BB86DD20();
  swift_beginAccess();
  v4 = v1[6];
  v5 = *(_QWORD *)(v3 + 80);
  v6 = *(_QWORD *)(v3 + 88);
  v7 = sub_1BA630F34(a1);
  v9 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v7) = sub_1BA761FE4(v7, v9, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    v10 = v1[5];
    sub_1BA7AA598();
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
    v12 = sub_1BA630F34(a1);
    v14 = v13;
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v11 + 32) = v12;
    *(_QWORD *)(v11 + 40) = v14;
    swift_bridgeObjectRetain();
    v15 = sub_1BB87330C();
    sub_1BB86EF44("Feed cursor store will store cursor %{public}@", 46, 2, &dword_1BA493000, v10, v15, v11);
    swift_bridgeObjectRelease();
    v16 = sub_1BA630F34(a1);
    v18 = v17;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BA6EE5AC(v22, v16, v18);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  v22[0] = sub_1BA630F34(a1);
  v22[1] = v19;
  swift_beginAccess();
  type metadata accessor for FeedCursorContainer(255, v5, v6, v20);
  sub_1BB872814();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB872838();
  swift_endAccess();
  return sub_1BB86DD2C();
}

uint64_t FeedCursorStoreManager.createToken<A>(cursorContainer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  if ((~a1 & 0xF000000000000007) == 0)
    return 0;
  v6 = a1;
  swift_retain();
  sub_1BB86DD20();
  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 24);
  if (v7 >> 62)
    goto LABEL_21;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v8)
  {
LABEL_5:
    v14 = v6;
    v6 = 4;
    while (1)
    {
      v9 = v6 - 4;
      if ((v7 & 0xC000000000000001) != 0)
      {
        v10 = MEMORY[0x1BCCE4630](v6 - 4, v7);
        v11 = v6 - 3;
        if (__OFADD__(v9, 1))
          goto LABEL_20;
      }
      else
      {
        v10 = *(_QWORD *)(v7 + 8 * v6);
        swift_retain();
        v11 = v6 - 3;
        if (__OFADD__(v9, 1))
        {
LABEL_20:
          __break(1u);
LABEL_21:
          swift_bridgeObjectRetain();
          v8 = sub_1BB873F30();
          if (!v8)
            break;
          goto LABEL_5;
        }
      }
      if (MEMORY[0x1BCCE5D40](v10 + 16))
      {
        type metadata accessor for FeedCursorStore(0, a2, a3, v12);
        if (swift_dynamicCastClass())
        {
          v4 = FeedCursorStore.createToken(cursorContainer:)(v14);
          swift_release();
          swift_unknownObjectRelease();
          if (v4)
            goto LABEL_19;
          goto LABEL_8;
        }
        swift_unknownObjectRelease();
      }
      swift_release();
LABEL_8:
      ++v6;
      if (v11 == v8)
      {
        v4 = 0;
LABEL_19:
        v6 = v14;
        goto LABEL_23;
      }
    }
  }
  v4 = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  sub_1BB86DD2C();
  sub_1BA62ECD4(v6);
  return v4;
}

unint64_t FeedCursorStoreManager.get<A>(token:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  if (!a1)
    return 0xF000000000000007;
  v5 = a1;
  swift_retain();
  sub_1BB86DD20();
  swift_beginAccess();
  v6 = *(_QWORD *)(v3 + 24);
  if (v6 >> 62)
    goto LABEL_22;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v8 = 0xF000000000000007;
  while (v7)
  {
    v15 = v5;
    v5 = 4;
    while (1)
    {
      v9 = v5 - 4;
      if ((v6 & 0xC000000000000001) == 0)
        break;
      v10 = MEMORY[0x1BCCE4630](v5 - 4, v6);
      v11 = v5 - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_21;
LABEL_13:
      if (MEMORY[0x1BCCE5D40](v10 + 16))
      {
        type metadata accessor for FeedCursorStore(0, a2, a3, v12);
        if (swift_dynamicCastClass())
        {
          v13 = sub_1BA630FB4(v15);
          swift_release();
          swift_unknownObjectRelease();
          if ((~v13 & 0xF000000000000007) != 0)
          {
            v8 = v13;
            goto LABEL_19;
          }
          goto LABEL_7;
        }
        swift_unknownObjectRelease();
      }
      swift_release();
LABEL_7:
      ++v5;
      if (v11 == v7)
      {
        v8 = 0xF000000000000007;
        goto LABEL_19;
      }
    }
    v10 = *(_QWORD *)(v6 + 8 * v5);
    swift_retain();
    v11 = v5 - 3;
    if (!__OFADD__(v9, 1))
      goto LABEL_13;
LABEL_21:
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    v8 = 0xF000000000000007;
  }
LABEL_19:
  swift_bridgeObjectRelease();
  sub_1BB86DD2C();
  swift_release();
  return v8;
}

uint64_t type metadata accessor for FeedCursorStore(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedCursorStore);
}

uint64_t FeedCursorStore.createToken(cursorContainer:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t result;
  int64_t v37;
  unint64_t v38;
  unint64_t i;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  int64_t v76;
  unint64_t v77;
  int64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  int64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v2 = v1;
  v4 = *v1;
  sub_1BB86DD20();
  swift_beginAccess();
  v5 = v1[6];
  v6 = *(_QWORD *)(v4 + 80);
  v7 = *(_QWORD *)(v4 + 88);
  v8 = sub_1BA630F34(a1);
  v10 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v8) = sub_1BA761FE4(v8, v10, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = 0;
  if ((v8 & 1) == 0)
  {
LABEL_51:
    sub_1BB86DD2C();
    return v11;
  }
  v12 = sub_1BA630F34(a1);
  v14 = v13;
  type metadata accessor for FeedCursorToken();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v12;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = sub_1BA630F34(a1);
  v18 = v17;
  swift_beginAccess();
  v19 = v2[4];
  v90 = v16;
  v91 = v18;
  type metadata accessor for FeedCursorStore.WeakWrapper(255, v6, v7, v20);
  v21 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v81 = v21;
  MEMORY[0x1BCCE3148](&v87, &v90, v19, MEMORY[0x1E0DEA968], v21, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  v22 = v87;
  swift_endAccess();
  if (!v22)
    v22 = sub_1BB872E68();
  v94 = v22;
  v79 = v15;
  v93 = sub_1BA631130();
  sub_1BB872EB0();
  v23 = sub_1BA630F34(a1);
  v87 = v94;
  v90 = v23;
  v91 = v24;
  swift_beginAccess();
  sub_1BB872814();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB872838();
  swift_endAccess();
  v25 = sub_1BA630F34(a1);
  v87 = a1;
  v90 = v25;
  v91 = v26;
  v27 = v2 + 3;
  swift_beginAccess();
  v84 = type metadata accessor for FeedCursorContainer(255, v6, v7, v28);
  sub_1BB872814();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB872838();
  v29 = swift_endAccess();
  v92 = MEMORY[0x1E0DEE9E8];
  MEMORY[0x1E0C80A78](v29);
  swift_bridgeObjectRetain();
  v30 = sub_1BB872808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v2[4] = v30;
  swift_bridgeObjectRelease();
  v80 = v2;
  v31 = v2[4];
  v32 = v21;
  v82 = v31 + 64;
  v33 = 1 << *(_BYTE *)(v31 + 32);
  v34 = -1;
  if (v33 < 64)
    v34 = ~(-1 << v33);
  v35 = v34 & *(_QWORD *)(v31 + 64);
  v83 = (unint64_t)(v33 + 63) >> 6;
  v86 = v31;
  result = swift_bridgeObjectRetain();
  v37 = 0;
  v85 = v27;
  if (v35)
    goto LABEL_10;
LABEL_11:
  while (2)
  {
    v40 = v37 + 1;
    if (!__OFADD__(v37, 1))
    {
      if (v40 < v83)
      {
        v41 = *(_QWORD *)(v82 + 8 * v40);
        ++v37;
        if (v41)
          goto LABEL_22;
        v37 = v40 + 1;
        if (v40 + 1 < v83)
        {
          v41 = *(_QWORD *)(v82 + 8 * v37);
          if (!v41)
          {
            v42 = v40 + 2;
            if (v42 < v83)
            {
              v41 = *(_QWORD *)(v82 + 8 * v42);
              if (v41)
              {
                v37 = v42;
                goto LABEL_22;
              }
              while (1)
              {
                v37 = v42 + 1;
                if (__OFADD__(v42, 1))
                  goto LABEL_53;
                if (v37 >= v83)
                  goto LABEL_29;
                v41 = *(_QWORD *)(v82 + 8 * v37);
                ++v42;
                if (v41)
                  goto LABEL_22;
              }
            }
            goto LABEL_29;
          }
LABEL_22:
          v35 = (v41 - 1) & v41;
          for (i = __clz(__rbit64(v41)) + (v37 << 6); ; i = v38 | (v37 << 6))
          {
            v43 = (uint64_t *)(*(_QWORD *)(v86 + 48) + 16 * i);
            v44 = *v43;
            v45 = v43[1];
            v90 = *(_QWORD *)(*(_QWORD *)(v86 + 56) + 8 * i);
            swift_bridgeObjectRetain();
            MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v32);
            if ((sub_1BB873168() & 1) != 0)
              goto LABEL_9;
            swift_beginAccess();
            v46 = *v27;
            v87 = v44;
            v88 = v45;
            swift_bridgeObjectRetain();
            MEMORY[0x1BCCE3148](&v89, &v87, v46, MEMORY[0x1E0DEA968], v84, MEMORY[0x1E0DEA978]);
            swift_bridgeObjectRelease();
            v47 = v89;
            if ((~v89 & 0xF000000000000007) == 0)
              break;
            swift_endAccess();
            swift_bridgeObjectRelease();
            v48 = (uint64_t)FeedCursorContainer.rootCursorContainer.getter(v47);
            sub_1BA62ECD4(v47);
            do
            {
              swift_retain();
              v49 = sub_1BA630F34(v48);
              v51 = v50;
              swift_bridgeObjectRetain();
              sub_1BA6EE5AC(&v90, v49, v51);
              swift_bridgeObjectRelease();
              sub_1BA62ECD4(v48);
              v48 = FeedCursorContainer.nextCursorContainer.getter(v48);
              result = swift_release();
            }
            while ((~v48 & 0xF000000000000007) != 0);
            v27 = v85;
            v32 = v81;
            if (!v35)
              goto LABEL_11;
LABEL_10:
            v38 = __clz(__rbit64(v35));
            v35 &= v35 - 1;
          }
          swift_endAccess();
LABEL_9:
          result = swift_bridgeObjectRelease();
          if (!v35)
            continue;
          goto LABEL_10;
        }
      }
LABEL_29:
      swift_release();
      v90 = *v27;
      v52 = MEMORY[0x1E0DEA968];
      v53 = sub_1BB8727E4();
      swift_bridgeObjectRetain();
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DE9ED0], v53);
      sub_1BB8730A8();
      swift_bridgeObjectRetain();
      v54 = sub_1BB873048();
      swift_bridgeObjectRelease();
      if ((sub_1BB873078() & 1) == 0)
      {
        v55 = v80[5];
        sub_1BA7AA598();
        v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = xmmword_1BB87A390;
        v57 = sub_1BB87303C();
        v59 = v58;
        *(_QWORD *)(v56 + 56) = v52;
        v60 = sub_1BA6A2D8C();
        *(_QWORD *)(v56 + 64) = v60;
        *(_QWORD *)(v56 + 32) = v57;
        *(_QWORD *)(v56 + 40) = v59;
        v61 = sub_1BB87303C();
        v63 = v62;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v56 + 96) = v52;
        *(_QWORD *)(v56 + 104) = v60;
        *(_QWORD *)(v56 + 72) = v61;
        *(_QWORD *)(v56 + 80) = v63;
        v64 = sub_1BB87330C();
        sub_1BB86EF44("Feed cursor store clearing references, clearing %{public}@ cursors from store, keeping %{public}@ cursors", 105, 2, &dword_1BA493000, v55, v64, v56);
        result = swift_bridgeObjectRelease();
        v65 = 0;
        v66 = v54 + 56;
        v67 = 1 << *(_BYTE *)(v54 + 32);
        v68 = -1;
        if (v67 < 64)
          v68 = ~(-1 << v67);
        v69 = v68 & *(_QWORD *)(v54 + 56);
        v70 = (unint64_t)(v67 + 63) >> 6;
        while (1)
        {
          if (v69)
          {
            v71 = __clz(__rbit64(v69));
            v69 &= v69 - 1;
            v72 = v71 | (v65 << 6);
          }
          else
          {
            v76 = v65 + 1;
            if (__OFADD__(v65, 1))
              goto LABEL_54;
            if (v76 >= v70)
            {
LABEL_49:
              swift_release();
              goto LABEL_50;
            }
            v77 = *(_QWORD *)(v66 + 8 * v76);
            ++v65;
            if (!v77)
            {
              v65 = v76 + 1;
              if (v76 + 1 >= v70)
                goto LABEL_49;
              v77 = *(_QWORD *)(v66 + 8 * v65);
              if (!v77)
              {
                v78 = v76 + 2;
                if (v78 >= v70)
                  goto LABEL_49;
                v77 = *(_QWORD *)(v66 + 8 * v78);
                if (!v77)
                {
                  while (1)
                  {
                    v65 = v78 + 1;
                    if (__OFADD__(v78, 1))
                      goto LABEL_55;
                    if (v65 >= v70)
                      goto LABEL_49;
                    v77 = *(_QWORD *)(v66 + 8 * v65);
                    ++v78;
                    if (v77)
                      goto LABEL_48;
                  }
                }
                v65 = v78;
              }
            }
LABEL_48:
            v69 = (v77 - 1) & v77;
            v72 = __clz(__rbit64(v77)) + (v65 << 6);
          }
          v73 = (uint64_t *)(*(_QWORD *)(v54 + 48) + 16 * v72);
          v74 = v73[1];
          v87 = *v73;
          v75 = v87;
          v88 = v74;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_1BB872784();
          swift_endAccess();
          sub_1BA62ECD4(v89);
          v87 = v75;
          v88 = v74;
          swift_beginAccess();
          sub_1BB872784();
          swift_endAccess();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_50:
      v11 = v79;
      goto LABEL_51;
    }
    break;
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1BA630F34(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t type metadata accessor for FeedCursorStore.WeakWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedCursorStore.WeakWrapper);
}

uint64_t type metadata accessor for FeedCursorToken()
{
  return objc_opt_self();
}

_QWORD *FeedCursorContainer.rootCursorContainer.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = a1;
  if (a1 < 0)
  {
    swift_retain();
  }
  else
  {
    v2 = swift_retain();
    v6 = FeedCursor.rootCursor.getter(v2, v3, v4, v5);
    swift_release();
    return v6;
  }
  return (_QWORD *)v1;
}

uint64_t sub_1BA630FB4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;

  v2 = v1;
  v4 = *v1;
  sub_1BB86DD20();
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v7 = v2[3];
  v12[0] = v6;
  v12[1] = v5;
  v9 = type metadata accessor for FeedCursorContainer(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), v8);
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE3148](&v13, v12, v7, MEMORY[0x1E0DEA968], v9, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  v10 = v13;
  swift_endAccess();
  sub_1BB86DD2C();
  return v10;
}

uint64_t type metadata accessor for FeedCursorContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedCursorContainer);
}

uint64_t storeEnumTagSinglePayload for FormatVideoPlayerContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t FeedCursorContainer.nextCursorContainer.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  if (a1 < 0)
    return 0xF000000000000007;
  v1 = (_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 264));
  swift_beginAccess();
  if (!*v1)
    return 0xF000000000000007;
  result = FeedNextCursor.syncCursor.getter();
  if (!result)
    return 0xF000000000000007;
  return result;
}

uint64_t sub_1BA631130()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  return v0;
}

_QWORD *sub_1BA631178()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char v36[16];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = *v0;
  v39 = sub_1BA632490();
  v4 = *(_QWORD *)(v2 + 80);
  v3 = *(_QWORD *)(v2 + 88);
  v37 = v4;
  v38 = v3;
  type metadata accessor for FeedCursorGroup(255, v4, v3, v5);
  v6 = sub_1BB872EE0();
  v7 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v6);
  v9 = sub_1BAA52384((void (*)(char *, char *))sub_1BA5183F8, (uint64_t)v36, v6, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v7, MEMORY[0x1E0DEDD18], v8);
  swift_bridgeObjectRelease();
  v10 = sub_1BA6E43EC(v9);
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9E8];
  v40 = MEMORY[0x1E0DEE9E8];
  v41 = MEMORY[0x1E0DEE9E8];
  v34 = v3;
  v35 = v4;
  type metadata accessor for FeedNextCursor(0, v4, v3, v12);
  swift_allocObject();
  v13 = swift_retain();
  v33 = v1;
  sub_1BA631958(v13);
  v14 = sub_1BA6319D0();
  if (v14)
  {
    do
    {
      v16 = *(_QWORD *)(v14 + 16);
      if (v16 < 0)
      {
        swift_retain();
        if ((v16 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        {
          v25 = v33[2];
          v26 = v33[3];
          swift_retain();
          v29 = FeedCursorManifest.consumedGroupIdentifiers(excludingCursorIdentifier:)(v25, v26, v27, v28);
          swift_release();
          sub_1BA6E3FB8(v29);
          swift_release();
        }
      }
      else
      {
        v17 = swift_retain();
        if (v16)
        {
          v39 = *(_QWORD *)(v16 + qword_1ED4768A0);
          MEMORY[0x1E0C80A78](v17);
          type metadata accessor for FeedDatabaseGroup(255, v35, v34, v18);
          v19 = sub_1BB872EE0();
          swift_bridgeObjectRetain();
          MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v19);
          v20 = sub_1BB872BF8();
          swift_bridgeObjectRelease();
          v21 = *(_QWORD *)(v20 + 16);
          if (v21)
          {
            v22 = (uint64_t *)(v20 + 40);
            do
            {
              v24 = *(v22 - 1);
              v23 = *v22;
              swift_bridgeObjectRetain();
              sub_1BA6EE5AC(&v39, v24, v23);
              swift_bridgeObjectRelease();
              v22 += 2;
              --v21;
            }
            while (v21);
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
      swift_release();
      v14 = sub_1BA6319D0();
    }
    while (v14);
    v11 = v40;
    v30 = v41;
  }
  else
  {
    v30 = v11;
  }
  type metadata accessor for FeedCursorDedupper(0, v35, v34, v15);
  v31 = sub_1BA632A2C(v10, v30, v11);
  swift_release();
  return v31;
}

_QWORD *FeedCursor.rootCursor.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t Cursor;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;

  v5 = v4;
  Cursor = type metadata accessor for FeedNextCursor(0, *(_QWORD *)(*v4 + 80), *(_QWORD *)(*v4 + 88), a4);
  v47 = sub_1BB87273C();
  v7 = v4[2];
  v8 = v4[3];
  swift_allocObject();
  swift_bridgeObjectRetain();
  v9 = swift_retain();
  sub_1BA631958(v9);
  v10 = sub_1BA631A28();
  swift_release();
  v44[0] = v10;
  sub_1BB872814();
  sub_1BB872838();
  swift_bridgeObjectRetain();
  v11 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_1BA6EA0D0((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[2 * v13];
  v14[4] = v7;
  v14[5] = v8;
  v43 = Cursor;
  swift_allocObject();
  v15 = swift_retain();
  sub_1BA631958(v15);
  v16 = sub_1BA6319D0();
  if (v16)
  {
    v17 = v16;
    do
    {
      swift_bridgeObjectRetain();
      swift_retain();
      v44[0] = sub_1BA631A28();
      sub_1BB872838();
      v18 = *(_QWORD *)(v17 + 16);
      v20 = *(_QWORD *)(v18 + 16);
      v19 = *(_QWORD *)(v18 + 24);
      v22 = v11[2];
      v21 = v11[3];
      swift_bridgeObjectRetain();
      if (v22 >= v21 >> 1)
        v11 = sub_1BA6EA0D0((_QWORD *)(v21 > 1), v22 + 1, 1, v11);
      v11[2] = v22 + 1;
      v23 = &v11[2 * v22];
      v23[4] = v20;
      v23[5] = v19;
      swift_release();
      swift_release();
      v17 = sub_1BA6319D0();
    }
    while (v17);
  }
  v46 = v11;
  v24 = v43;
  swift_allocObject();
  v25 = swift_retain();
  sub_1BA631958(v25);
  swift_retain();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    do
    {
      v5 = (_QWORD *)Strong;
      swift_allocObject();
      v27 = swift_retain();
      sub_1BA631958(v27);
      swift_release();
      swift_release();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v28 = sub_1BA631A28();
      swift_release();
      v44[0] = v28;
      sub_1BB872838();
      v29 = v5[2];
      v30 = v5[3];
      swift_bridgeObjectRetain();
      sub_1BAA67FE0(0, 0, v29, v30);
      swift_release();
      Strong = swift_weakLoadStrong();
    }
    while (Strong);
    v11 = v46;
  }
  v31 = v11[2];
  if (v31)
  {
    v41 = v5;
    v32 = 0;
    v33 = 0;
    v34 = v47;
    v35 = v11 + 5;
    v42 = v47;
    do
    {
      v36 = *v35;
      v44[0] = *(v35 - 1);
      v44[1] = v36;
      swift_bridgeObjectRetain();
      MEMORY[0x1BCCE3148](&v45, v44, v34, MEMORY[0x1E0DEA968], v24, MEMORY[0x1E0DEA978]);
      swift_bridgeObjectRelease();
      v37 = v45;
      if (v45)
      {
        swift_retain();
        swift_weakAssign();
        sub_1BA631F44();
        swift_release();
        if (v33)
        {
          v38 = (_QWORD *)(v33 + *(_QWORD *)(*(_QWORD *)v33 + 264));
          swift_beginAccess();
          *v38 = v37;
          swift_retain();
          v34 = v42;
          swift_release();
        }
        v39 = *(_QWORD *)(v37 + 16);
        if (v39 < 0)
          v39 = 0;
        else
          swift_retain();
        swift_release();
        if (!v32)
        {
          v32 = *(_QWORD *)(v37 + 16);
          if ((v32 & 0x8000000000000000) != 0)
            v32 = 0;
          else
            swift_retain();
        }
        swift_release();
        v33 = v39;
        v24 = v43;
      }
      v35 += 2;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    if (v32)
    {
      swift_release();
      v5 = (_QWORD *)v32;
    }
    else
    {
      v5 = v41;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BA631958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1;
  swift_weakInit();
  *(_QWORD *)(v2 + 16) = a1;
  swift_retain();
  sub_1BB6386BC();
  swift_release();
  swift_weakAssign();
  swift_release();
  return v2;
}

uint64_t type metadata accessor for FeedNextCursor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedNextCursor);
}

uint64_t sub_1BA6319D0()
{
  uint64_t v0;

  if ((*(_QWORD *)(v0 + 16) & 0x8000000000000000) != 0)
    return 0;
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1BA631A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  if (v1 < 0)
  {
    v4 = sub_1BB63AABC();
    v3 = swift_allocObject();
    sub_1BB63AA5C((uint64_t)v4);
  }
  else
  {
    v2 = sub_1BA631AC8();
    v3 = swift_allocObject();
    sub_1BA631958((uint64_t)v2);
  }
  swift_release();
  return v3;
}

uint64_t *sub_1BA631AC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, double);
  uint64_t v11;
  void *v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 *v58;
  char v59;
  _QWORD v60[3];
  void *v61;
  char v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;

  v1 = *v0;
  v2 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v4;
  v6 = MEMORY[0x1E0C80A78](v5);
  v50 = (uint64_t)&v33 - v7;
  v52 = v0[2];
  v57 = v0[3];
  v8 = *(_QWORD *)(v1 + 256);
  v51 = (uint64_t)v0 + *(_QWORD *)(v1 + 248);
  v56 = *(uint64_t *)((char *)v0 + v8);
  v74 = *((_BYTE *)v0 + 32);
  v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16);
  v10((char *)&v33 - v7, (uint64_t)v0 + qword_1ED4767C0, v2, v6);
  ((void (*)(char *, char *, uint64_t))v10)(v4, (char *)v0 + qword_1ED476780, v2);
  v45 = *(uint64_t *)((char *)v0 + qword_1ED4767C8);
  v55 = *(uint64_t *)((char *)v0 + qword_1ED4767E0);
  v44 = *(uint64_t *)((char *)v0 + qword_1ED476898);
  v11 = *(uint64_t *)((char *)v0 + qword_1ED4769B0);
  v53 = *(uint64_t *)((char *)v0 + qword_1ED4767D0);
  v54 = v11;
  v38 = *(uint64_t *)((char *)v0 + qword_1ED4768A0);
  v48 = *(uint64_t *)((char *)v0 + qword_1ED4767F0);
  v47 = *(uint64_t *)((char *)v0 + qword_1ED476770);
  v46 = *(uint64_t *)((char *)v0 + qword_1ED476798);
  v34 = *(uint64_t *)((char *)v0 + qword_1ED4767D8);
  v35 = *(uint64_t *)((char *)v0 + qword_1ED4767F8);
  v12 = *(void **)((char *)v0 + qword_1ED476788);
  LOBYTE(v11) = *((_BYTE *)v0 + qword_1ED476788 + 8);
  v13 = *((_BYTE *)v0 + qword_1ED476788 + 9);
  v14 = *((_BYTE *)v0 + qword_1ED476788 + 10);
  v15 = *((_BYTE *)v0 + qword_1ED476788 + 11);
  v16 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 16);
  v17 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 24);
  v19 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 32);
  v18 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 40);
  v20 = *((_BYTE *)v0 + qword_1ED476788 + 48);
  v36 = *(id *)((char *)v0 + qword_1ED476788 + 56);
  v21 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 72);
  v39 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 64);
  v42 = v21;
  v61 = v12;
  v62 = v11;
  v63 = v13;
  v64 = v14;
  v65 = v15;
  v66 = v16;
  v67 = v17;
  v68 = v19;
  v69 = v18;
  v70 = v20;
  v71 = v36;
  v72 = v39;
  v73 = v21;
  v22 = *(uint64_t *)((char *)v0 + qword_1ED476790);
  v41 = *(uint64_t *)((char *)v0 + qword_1ED476790 + 8);
  v43 = *(uint64_t *)((char *)v0 + qword_1ED476790 + 16);
  v60[0] = v22;
  v60[1] = v41;
  v60[2] = v43;
  LOBYTE(v21) = *((_BYTE *)v0 + qword_1ED476778 + 8);
  v58 = *(unsigned __int8 **)((char *)v0 + qword_1ED476778);
  v59 = v21;
  v23 = *(_QWORD *)(*v0 + 280);
  v37 = *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 272));
  v40 = *(uint64_t *)((char *)v0 + v23);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v38;
  swift_bridgeObjectRetain();
  v25 = v34;
  swift_bridgeObjectRetain();
  v26 = v35;
  swift_retain();
  v27 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v19, v18);
  swift_allocObject();
  v28 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v37;
  swift_retain();
  v30 = swift_bridgeObjectRetain();
  v31 = sub_1BB63B86C(v52, v57, v51, v56, &v74, v50, (uint64_t)v49, v45, v55, v44, v54, v53, v24, v48, v47, v46, v25, v26, (uint64_t *)&v61,
          (uint64_t)v60,
          &v58,
          v29,
          v30,
          0,
          0);
  swift_release();
  swift_release();
  return v31;
}

uint64_t sub_1BA631F44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_weakLoadStrong();
  swift_retain();
  if (v1 < 0)
  {
    swift_weakAssign();
    sub_1BB63B2A4();
  }
  else
  {
    sub_1BB63B810();
  }
  swift_release();
  return swift_release();
}

uint64_t FeedCursor.nextEmitterCursor(for:isLast:slots:gapPromise:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  char v63;
  id v64;
  char v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;

  v6 = v5;
  v58 = a5;
  v59 = a4;
  v60 = a3;
  v9 = *v5;
  v10 = sub_1BB86C8B0();
  v11 = MEMORY[0x1E0C80A78](v10);
  v57 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v9 + 80);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void (**)(void))(v16 + 16);
  v56 = v15;
  v17();
  v55 = sub_1BA6324AC();
  v54 = sub_1BA632608();
  v53 = *(_QWORD *)((char *)v5 + qword_1ED4767D0);
  swift_bridgeObjectRetain();
  v52 = sub_1BA632490();
  v51 = sub_1BA6323F0((uint64_t (*)(uint64_t))FeedCursor.allEmittedGroups.getter, (void (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for FeedCursorGroup);
  v50 = *(_QWORD *)((char *)v5 + qword_1ED4768A0);
  swift_bridgeObjectRetain();
  v49 = sub_1BA6325EC();
  v48 = sub_1BA6323F0((uint64_t (*)(uint64_t))sub_1BB63A0E8, (void (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for FeedDatabaseGroup);
  v18 = *(_QWORD *)((char *)v5 + qword_1ED4767F8);
  v19 = *(_QWORD *)((char *)v5 + qword_1ED4767D8);
  v20 = *(_QWORD *)(v19 + 16);
  swift_retain();
  if (v20)
  {
    swift_bridgeObjectRetain();
    v22 = sub_1BA6E35A8(a1, a2);
    if ((v23 & 1) != 0)
    {
      v24 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v22);
      swift_retain();
    }
    else
    {
      v24 = 0;
    }
    v47 = v24;
    swift_bridgeObjectRelease();
  }
  else
  {
    v47 = 0;
  }
  v46 = type metadata accessor for FeedGroupEmitterCursor(0, v13, *(_QWORD *)(v9 + 88), v21);
  v25 = v6[qword_1ED476788 + 8];
  v26 = v6[qword_1ED476788 + 9];
  v27 = v6[qword_1ED476788 + 10];
  v28 = v6[qword_1ED476788 + 11];
  v29 = *(_QWORD *)&v6[qword_1ED476788 + 16];
  v30 = *(_QWORD *)&v6[qword_1ED476788 + 24];
  v32 = *(_QWORD *)&v6[qword_1ED476788 + 32];
  v31 = *(_QWORD *)&v6[qword_1ED476788 + 40];
  v33 = v6[qword_1ED476788 + 48];
  v35 = *(void **)&v6[qword_1ED476788 + 56];
  v34 = *(_QWORD *)&v6[qword_1ED476788 + 64];
  v36 = *(_QWORD *)&v6[qword_1ED476788 + 72];
  v64 = *(id *)&v6[qword_1ED476788];
  v65 = v25;
  v66 = v26;
  v67 = v27;
  v68 = v28;
  v69 = v29;
  v70 = v30;
  v71 = v32;
  v72 = v31;
  v73 = v33;
  v74 = v35;
  v75 = v34;
  v76 = v36;
  v37 = v6[qword_1ED476778 + 8];
  v62 = *(_QWORD *)&v6[qword_1ED476778];
  v63 = v37;
  v61 = v6[32];
  v38 = *(_QWORD *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 272)];
  v39 = *(_QWORD *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 280)];
  v40 = v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v32, v31);
  v41 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v42 = v59;
  swift_bridgeObjectRetain();
  v43 = v58;
  swift_retain();
  swift_bridgeObjectRetain();
  v44 = (uint64_t)v57;
  sub_1BB86C8A4();
  return FeedGroupEmitterCursor.__allocating_init(serviceConfig:priorServiceConfigs:nextServiceConfigs:cursorGroups:priorGroups:nextGroups:databaseGroups:priorDatabaseGroups:nextDatabaseGroups:pool:cursor:context:cachePolicy:kind:tracker:currentDate:isLast:slots:gapPromise:sidecars:)((uint64_t)v56, v55, v54, v53, v52, v51, v50, v49, v48, v18, v47, (uint64_t *)&v64, &v62, &v61, v38, v44, v60 & 1, v42, v43,
           v39);
}

uint64_t sub_1BA63232C(void (*a1)(void), void (*a2)(_QWORD, uint64_t, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v2;
  if (sub_1BB6386BC())
  {
    a1();
    swift_release();
    v6 = *(_QWORD *)(v5 + 80);
    v7 = *(_QWORD *)(v5 + 88);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 80);
    v7 = *(_QWORD *)(v5 + 88);
    a2(0, v6, v7);
    sub_1BB872E68();
  }
  a2(0, v6, v7);
  v8 = sub_1BB872E5C();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BA6323F0(uint64_t (*a1)(uint64_t), void (*a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  v6 = (uint64_t)v2 + *(_QWORD *)(*v2 + 264);
  swift_beginAccess();
  if (*(_QWORD *)v6
    && (v7 = *(_QWORD *)(*(_QWORD *)v6 + 16), (v7 & 0x8000000000000000) == 0)
    && (v8 = swift_retain(), v7))
  {
    v9 = a1(v8);
    swift_release();
  }
  else
  {
    a2(0, *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88));
    return sub_1BB872E68();
  }
  return v9;
}

uint64_t sub_1BA632490()
{
  return sub_1BA63232C((void (*)(void))sub_1BA632490, (void (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedCursorGroup);
}

uint64_t sub_1BA6324AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  if (sub_1BB6386BC())
  {
    sub_1BA6324AC();
    swift_release();
    v2 = *(_QWORD *)(v1 + 80);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 80);
    sub_1BB872E68();
  }
  sub_1BA6325A8(v2, v2);
  v3 = *(_QWORD *)(v2 - 8);
  swift_allocObject();
  v4 = sub_1BB872E2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, (uint64_t)v0 + *(_QWORD *)(*v0 + 248), v2);
  sub_1BA69C794(v4);
  v6 = sub_1BB872E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1BA6325A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    sub_1BA65E330();
  else
    sub_1BB874218();
}

uint64_t sub_1BA6325EC()
{
  return sub_1BA63232C((void (*)(void))sub_1BA6325EC, (void (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedDatabaseGroup);
}

uint64_t sub_1BA632608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 264);
  swift_beginAccess();
  if (!*(_QWORD *)v1)
    return sub_1BB872E68();
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v2 < 0)
    return sub_1BB872E68();
  swift_retain();
  if (!v2)
    return sub_1BB872E68();
  v3 = sub_1BB63A1F0();
  swift_release();
  return v3;
}

uint64_t type metadata accessor for FeedGroupEmitterCursor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupEmitterCursor);
}

uint64_t FeedGroupEmitterCursor.__allocating_init(serviceConfig:priorServiceConfigs:nextServiceConfigs:cursorGroups:priorGroups:nextGroups:databaseGroups:priorDatabaseGroups:nextDatabaseGroups:pool:cursor:context:cachePolicy:kind:tracker:currentDate:isLast:slots:gapPromise:sidecars:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t *a13, char *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v25;

  v25 = swift_allocObject();
  FeedGroupEmitterCursor.init(serviceConfig:priorServiceConfigs:nextServiceConfigs:cursorGroups:priorGroups:nextGroups:databaseGroups:priorDatabaseGroups:nextDatabaseGroups:pool:cursor:context:cachePolicy:kind:tracker:currentDate:isLast:slots:gapPromise:sidecars:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
  return v25;
}

uint64_t FeedGroupEmitterCursor.init(serviceConfig:priorServiceConfigs:nextServiceConfigs:cursorGroups:priorGroups:nextGroups:databaseGroups:priorDatabaseGroups:nextDatabaseGroups:pool:cursor:context:cachePolicy:kind:tracker:currentDate:isLast:slots:gapPromise:sidecars:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t *a13, char *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  char v41;
  uint64_t v42;
  char v44;

  v38 = *a12;
  v37 = *((_BYTE *)a12 + 8);
  v36 = *((_BYTE *)a12 + 9);
  v35 = *((_BYTE *)a12 + 10);
  v34 = *((_BYTE *)a12 + 11);
  v42 = *a13;
  v41 = *((_BYTE *)a13 + 8);
  v44 = *a14;
  v25 = a12[4];
  v24 = a12[5];
  v26 = *((_BYTE *)a12 + 48);
  v27 = a12[7];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v20 + 80) - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)v20 + 96), a1);
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 104)) = a2;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 112)) = a3;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 120)) = a4;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 136)) = a5;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 152)) = a6;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 128)) = a7;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 144)) = a8;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 160)) = a9;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 168)) = a10;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 176)) = a11;
  v28 = v20 + *(_QWORD *)(*(_QWORD *)v20 + 184);
  *(_QWORD *)v28 = v38;
  *(_BYTE *)(v28 + 8) = v37;
  *(_BYTE *)(v28 + 9) = v36;
  *(_BYTE *)(v28 + 10) = v35;
  *(_BYTE *)(v28 + 11) = v34;
  *(_OWORD *)(v28 + 16) = *((_OWORD *)a12 + 1);
  *(_QWORD *)(v28 + 32) = v25;
  *(_QWORD *)(v28 + 40) = v24;
  *(_BYTE *)(v28 + 48) = v26;
  *(_QWORD *)(v28 + 56) = v27;
  *(_OWORD *)(v28 + 64) = *((_OWORD *)a12 + 4);
  v29 = v20 + *(_QWORD *)(*(_QWORD *)v20 + 192);
  *(_QWORD *)v29 = v42;
  *(_BYTE *)(v29 + 8) = v41;
  *(_BYTE *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 200)) = v44;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 240)) = a15;
  v30 = v20 + *(_QWORD *)(*(_QWORD *)v20 + 208);
  v31 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v30, a16, v31);
  *(_BYTE *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 216)) = a17;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 224)) = a18;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 232)) = a19;
  *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 248)) = a20;
  return v20;
}

uint64_t type metadata accessor for FeedCursorDedupper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedCursorDedupper);
}

_QWORD *sub_1BA632A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

uint64_t sub_1BA632A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t initializeWithCopy for FormatTextNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 128);
  if (v6 >> 1 == 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v7;
    v8 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v8;
    v9 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v9;
    v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 32);
    v13 = *(_QWORD *)(a2 + 40);
    v14 = *(_QWORD *)(a2 + 48);
    v15 = *(_QWORD *)(a2 + 56);
    v16 = *(_QWORD *)(a2 + 64);
    v17 = *(_QWORD *)(a2 + 72);
    v32 = *(_QWORD *)(a2 + 80);
    v33 = *(_QWORD *)(a2 + 88);
    v34 = *(_QWORD *)(a2 + 96);
    v35 = *(_QWORD *)(a2 + 104);
    v36 = *(_QWORD *)(a2 + 112);
    v37 = *(_QWORD *)(a2 + 120);
    v38 = *(_QWORD *)(a2 + 136);
    v39 = *(_QWORD *)(a2 + 144);
    sub_1BA6E8AE0(v11, v12, v13, v14, v15, v16, v17, v32, v33, v34, v35, v36, v37, v6);
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v13;
    *(_QWORD *)(a1 + 48) = v14;
    *(_QWORD *)(a1 + 56) = v15;
    *(_QWORD *)(a1 + 64) = v16;
    *(_QWORD *)(a1 + 72) = v17;
    *(_QWORD *)(a1 + 80) = v32;
    *(_QWORD *)(a1 + 88) = v33;
    *(_QWORD *)(a1 + 96) = v34;
    *(_QWORD *)(a1 + 104) = v35;
    *(_QWORD *)(a1 + 112) = v36;
    *(_QWORD *)(a1 + 120) = v37;
    *(_QWORD *)(a1 + 128) = v6;
    *(_QWORD *)(a1 + 136) = v38;
    *(_QWORD *)(a1 + 144) = v39;
  }
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v18 = *(unsigned __int8 *)(a2 + 240);
  swift_bridgeObjectRetain();
  if (v18 == 254)
  {
    v19 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v19;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    v20 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 225) = *(_OWORD *)(a2 + 225);
    swift_retain();
  }
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  v21 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v21;
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  v22 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v22;
  v23 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v23;
  v24 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v24;
  v25 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v25;
  v26 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v26;
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  v27 = *(unsigned __int8 *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27 == 9)
  {
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  }
  else
  {
    *(_BYTE *)(a1 + 480) = v27;
    v28 = *(_QWORD *)(a2 + 488);
    *(_QWORD *)(a1 + 488) = v28;
    if ((~v28 & 0xF000000000000007) != 0)
      swift_retain();
  }
  v29 = *(unsigned __int8 *)(a2 + 496);
  if (v29 == 9)
  {
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  }
  else
  {
    *(_BYTE *)(a1 + 496) = v29;
    v30 = *(_QWORD *)(a2 + 504);
    *(_QWORD *)(a1 + 504) = v30;
    if ((~v30 & 0xF000000000000007) != 0)
      swift_retain();
  }
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for FormatViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0)
    swift_retain();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v7 <= 0xFD)
  {
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(_QWORD *)(a2 + 40);
    sub_1BA6F2B04(v8, v9, v7);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    *(_BYTE *)(a1 + 48) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  if (*(unsigned __int8 *)(a2 + 136) == 254)
  {
    v10 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v10;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    swift_retain();
  }
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for FormatImageNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0)
    swift_retain();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v7 <= 0xFD)
  {
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(_QWORD *)(a2 + 40);
    sub_1BA6F2B04(v8, v9, v7);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    *(_BYTE *)(a1 + 48) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  if (*(unsigned __int8 *)(a2 + 136) == 254)
  {
    v10 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v10;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    swift_retain();
  }
  v13 = *(_QWORD *)(a2 + 144);
  if ((~v13 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(a1 + 144) = v13;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  v14 = *(_QWORD *)(a2 + 160);
  if (v14 >= 3)
  {
    if (v14 == 3)
    {
      *(_QWORD *)(a1 + 160) = 3;
    }
    else
    {
      *(_QWORD *)(a1 + 160) = v14;
      swift_retain();
    }
  }
  else
  {
    *(_QWORD *)(a1 + 160) = v14;
  }
  v15 = *(_QWORD *)(a2 + 184);
  v16 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 == 1)
  {
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  }
  else
  {
    v17 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = v15;
    *(_QWORD *)(a1 + 192) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for FormatGroupNodeMaskStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(unsigned __int8 *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    v14 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v14;
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 24);
    v19 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    v10 = *(_QWORD *)(a2 + 56);
    v11 = *(_QWORD *)(a2 + 64);
    v12 = *(_QWORD *)(a2 + 72);
    sub_1BA7AF9FC(v19, v6, v7, v8, v9, v10, v11, v12, v5);
    *(_QWORD *)(a1 + 16) = v19;
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v12;
    *(_BYTE *)(a1 + 80) = v5;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v15 = *(unsigned __int8 *)(a2 + 176);
  swift_bridgeObjectRetain();
  if (v15 == 254)
  {
    v16 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v16;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    v17 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v17;
  }
  else
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
    swift_retain();
  }
  return a1;
}

uint64_t FormatNodeBinderContext.__deallocating_deinit()
{
  FormatNodeBinderContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatNodeBinderContext.deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void **)(v0 + 80);
  swift_bridgeObjectRelease();
  sub_1BA70AB94(v1, v2);
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger);
  sub_1BA63333C(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 16), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 24), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 32), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 40), *(_BYTE *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1BA63333C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t result;

  if (a7 != 255)
    return sub_1BB334EA0();
  return result;
}

uint64_t sub_1BA633354@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatNodeStyle.init(from:)(a1, a2);
}

uint64_t FormatNodeStyle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[2];
  uint64_t v21;

  v3 = v2;
  v21 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_8:
    sub_1BA633FEC();
    v20[1] = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726D008;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA633FEC()
{
  unint64_t result;

  result = qword_1ED3B44D8;
  if (!qword_1ED3B44D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4388, &type metadata for FormatNodeStyle.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B44D8);
  }
  return result;
}

uint64_t type metadata accessor for FormatCustomNodeStyle()
{
  return objc_opt_self();
}

void sub_1BA634050(_QWORD *a1)
{
  FormatTextContent.encode(to:)(a1);
}

void FormatTextContent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[52];

  v2 = v1;
  v4 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1E0C80A78](v4);
  v31[7] = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v6);
  v31[6] = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v31[5] = (char *)v31 - v9;
  MEMORY[0x1E0C80A78](v10);
  v31[4] = (char *)v31 - v11;
  MEMORY[0x1E0C80A78](v12);
  v31[3] = (char *)v31 - v13;
  MEMORY[0x1E0C80A78](v14);
  v31[2] = (char *)v31 - v15;
  MEMORY[0x1E0C80A78](v16);
  v31[1] = (char *)v31 - v17;
  MEMORY[0x1E0C80A78](v18);
  v31[0] = (char *)v31 - v19;
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *v2;
  v28 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  v29 = sub_1BA6B8518();
  v31[51] = v25;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextContent, v30, v28, (uint64_t)&type metadata for FormatTextContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v29, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA6342C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BAE79BFC(v1 + 16, v0 + 72);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v4 = sub_1BB86EB84();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v2, v5, v4);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v3 - 72);
  sub_1BA634B64(0, v0 + 72, v2);
  sub_1BA4A2E80(v2, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v6, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA634B64(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[56];

  v16[55] = a1;
  sub_1BAE79BFC(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE9BCC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA634CD4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA634D18();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA634CD4()
{
  unint64_t result;

  result = qword_1ED3A5CC8;
  if (!qword_1ED3A5CC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2048, &_s10CodingTypeON_9);
    atomic_store(result, (unint64_t *)&qword_1ED3A5CC8);
  }
  return result;
}

unint64_t sub_1BA634D18()
{
  unint64_t result;

  result = qword_1ED39B810;
  if (!qword_1ED39B810)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeBinding, &type metadata for FormatTextNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39B810);
  }
  return result;
}

uint64_t sub_1BA634D5C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE9BCC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA634CD4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE9BD8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA634EE8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE9BCC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA634CD4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA63504C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA63504C()
{
  unint64_t result;

  result = qword_1ED39A790;
  if (!qword_1ED39A790)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeFormat, &type metadata for FormatTextNodeFormat);
    atomic_store(result, (unint64_t *)&qword_1ED39A790);
  }
  return result;
}

uint64_t sub_1BA635090(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE9BCC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA634CD4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B50B0, (uint64_t (*)(void))sub_1BA830FA0, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BA63521C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA63521C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B438;
  if (!qword_1ED39B438)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B50B0, (uint64_t (*)(void))sub_1BA830FA0, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B438);
  }
  return result;
}

uint64_t sub_1BA635284(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = *((_BYTE *)a2 + 32);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE9BCC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA634CD4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA6353F4();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA6353F4()
{
  unint64_t result;

  result = qword_1ED39B928;
  if (!qword_1ED39B928)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAttachment, &type metadata for FormatTextNodeAttachment);
    atomic_store(result, (unint64_t *)&qword_1ED39B928);
  }
  return result;
}

uint64_t sub_1BA635438@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAdjustment.init(from:)(a1, a2);
}

uint64_t FormatAdjustment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  __int128 v22;
  uint64_t v23;

  v23 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_8:
    sub_1BA636548();
    v22 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E7268BB8;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA636548()
{
  unint64_t result;

  result = qword_1ED3C7238;
  if (!qword_1ED3C7238)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF598, &_s10CodingTypeON_153);
    atomic_store(result, (unint64_t *)&qword_1ED3C7238);
  }
  return result;
}

void sub_1BA63658C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3B34B0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B4028, (uint64_t (*)(void))sub_1BA835D64, (uint64_t)&type metadata for FormatInteger, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    v3 = v2;
    v4 = sub_1BAE7B308();
    v6 = type metadata accessor for FormatValue(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3B34B0);
  }
}

unint64_t sub_1BA63660C()
{
  unint64_t result;

  result = qword_1ED3B7740;
  if (!qword_1ED3B7740)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEdgeInsetsEquation, &type metadata for FormatEdgeInsetsEquation);
    atomic_store(result, (unint64_t *)&qword_1ED3B7740);
  }
  return result;
}

unint64_t sub_1BA636650()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B6858;
  if (!qword_1ED3B6858)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B6860, (uint64_t (*)(void))sub_1BA83335C, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchListValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchListValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B6858);
  }
  return result;
}

unint64_t sub_1BA6366B8()
{
  unint64_t result;

  result = qword_1ED3B8288[0];
  if (!qword_1ED3B8288[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAdjustmentBaseline, &type metadata for FormatTextAdjustmentBaseline);
    atomic_store(result, qword_1ED3B8288);
  }
  return result;
}

unint64_t sub_1BA6366FC()
{
  unint64_t result;

  result = qword_1ED3B6D08;
  if (!qword_1ED3B6D08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizeConstraint, &type metadata for FormatResizeConstraint);
    atomic_store(result, (unint64_t *)&qword_1ED3B6D08);
  }
  return result;
}

unint64_t sub_1BA636740()
{
  unint64_t result;

  result = qword_1ED3BF6F0;
  if (!qword_1ED3BF6F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAdjustmentMetric, &type metadata for FormatTextAdjustmentMetric);
    atomic_store(result, (unint64_t *)&qword_1ED3BF6F0);
  }
  return result;
}

_QWORD *sub_1BA636784@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BA6367AC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_1BA6367AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(char *, _QWORD);
  uint64_t v8;
  char *v9;
  _QWORD *KeyPath;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  void (**v32)(char *, _QWORD);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (**v44)(char *, _QWORD);
  __int128 v45;
  char v46;
  __int128 v47;
  char v48;

  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - v3;
  sub_1BAEFB61C();
  v6 = v5;
  v7 = *(void (***)(char *, _QWORD))(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = (_QWORD *)sub_1BAE72828();
  sub_1BA4A2870(&qword_1ED3D1620, (uint64_t (*)(uint64_t))sub_1BAE72828, (uint64_t)&unk_1BB8FFC6C);
  v11 = v44;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v41 = v4;
  v44 = v7;
  v13 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v17 = v42;
  v16 = v43;
  if ((v15 & 1) != 0)
  {
    v18 = sub_1BB8740EC();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = (_BYTE *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19)
          goto LABEL_7;
      }
      v24 = *((_QWORD *)v20 - 2);
      v25 = *((_QWORD *)v20 - 1);
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v26);
      *(&v36 - 4) = (uint64_t)&_s10CodingKeysON_251;
      *(&v36 - 3) = sub_1BAE728A8();
      *(&v36 - 2) = sub_1BA636CD8();
      *(&v36 - 1) = sub_1BAE728EC();
      KeyPath = (_QWORD *)swift_getKeyPath();
      swift_retain();
      v27 = sub_1BAE71220((uint64_t)&unk_1E724E508);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v28 = v24;
      *(_QWORD *)(v28 + 8) = v25;
      *(_QWORD *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v24, v25, 1);
      v44[1](v9, v13);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v21 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEFB61C);
  v23 = v22;
  v40 = v21;
  v47 = xmmword_1BB8A1A10;
  v48 = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v39 = v23;
  v30 = v45;
  v38 = xmmword_1BB8D2D60;
  v47 = xmmword_1BB8D2D60;
  v48 = 0;
  v31 = sub_1BB8740F8();
  v32 = v44;
  if ((v31 & 1) != 0)
  {
    v37 = v30;
    v45 = v38;
    v46 = 0;
    sub_1BAEB7D04();
    v33 = v41;
    sub_1BB8740D4();
    v34 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v33, v16);
    v30 = v37;
  }
  else
  {
    v34 = MEMORY[0x1E0DEE9D8];
  }
  v32[1](v9, v13);
  type metadata accessor for FormatSpaceNode();
  KeyPath = (_QWORD *)swift_allocObject();
  swift_beginAccess();
  v35 = v39;
  KeyPath[2] = v40;
  KeyPath[3] = v35;
  KeyPath[4] = v30;
  swift_beginAccess();
  KeyPath[5] = v34;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

unint64_t sub_1BA636C74()
{
  unint64_t result;

  result = qword_1ED3B3148;
  if (!qword_1ED3B3148)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSize, &type metadata for FormatSize);
    atomic_store(result, (unint64_t *)&qword_1ED3B3148);
  }
  return result;
}

uint64_t type metadata accessor for FormatSpaceNode()
{
  return objc_opt_self();
}

unint64_t sub_1BA636CD8()
{
  unint64_t result;

  result = qword_1ED3C70F0;
  if (!qword_1ED3C70F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1A98, &_s10CodingKeysON_251);
    atomic_store(result, (unint64_t *)&qword_1ED3C70F0);
  }
  return result;
}

uint64_t sub_1BA636D1C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

uint64_t sub_1BA636D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a5 & 0x8000) == 0)
    return sub_1BA636D1C(a3, a4, a5 & 1);
  return result;
}

uint64_t sub_1BA636D88()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA636DC4(_QWORD *a1)
{
  return FormatSpaceNode.encode(to:)(a1);
}

uint64_t FormatSpaceNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t);

  v3 = v2;
  v4 = v1;
  v6 = *v4;
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v34 = (char *)&v32 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - v12;
  sub_1BAE72738(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BAE72828();
  v20 = sub_1BA4A2870(&qword_1ED3D1620, (uint64_t (*)(uint64_t))sub_1BAE72828, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v6, v21, v17, v6, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v16, v20, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v22 = v4[2];
  v23 = v4[3];
  v24 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C20);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v35(v13, v26, v25);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD265E8(v22, v23, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE548B4, (uint64_t (*)(uint64_t))sub_1BAE727B0, &qword_1ED3AF390);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    swift_beginAccess();
    v27 = v4[4];
    v28 = (uint64_t)v34;
    v35(v34, v26, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BA71CA6C(v27);
    sub_1BAD20D00(v27, 1, 0, 0, v28, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    sub_1BA719718(v27);
    swift_beginAccess();
    v29 = (uint64_t)v33;
    v35(v33, v26, v25);
    swift_storeEnumTagMultiPayload();
    v30 = swift_bridgeObjectRetain();
    sub_1BAD2CC08(v30, 2, 0, 0);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BAE72738);
}

unint64_t sub_1BA6371A0()
{
  unint64_t result;

  result = qword_1ED3B3140;
  if (!qword_1ED3B3140)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSize, &type metadata for FormatSize);
    atomic_store(result, (unint64_t *)&qword_1ED3B3140);
  }
  return result;
}

void sub_1BA6371E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  FormatUserInterfaceValue.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void FormatUserInterfaceValue.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[24];

  v17[15] = a3;
  v17[11] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17[6] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v17[17] = (char *)v17 - v5;
  MEMORY[0x1E0C80A78](v6);
  v17[10] = (char *)v17 - v7;
  MEMORY[0x1E0C80A78](v8);
  v17[16] = (char *)v17 - v9;
  v17[14] = v10;
  v17[12] = v11;
  v13 = _s10CodingKeysOMa_11(255, v10, v11, v12);
  v14 = MEMORY[0x1BCCE5B24](&unk_1BB8C4500, v13);
  v15 = MEMORY[0x1BCCE5B24](&unk_1BB8C44B0, v13);
  v16 = MEMORY[0x1BCCE5B24](&unk_1BB8C4488, v13);
  v17[18] = v13;
  v17[19] = v14;
  v17[8] = v15;
  v17[9] = v14;
  v17[20] = v15;
  v17[21] = v16;
  v17[7] = v16;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_11);
}

uint64_t FormatUserInterfaceValue.init(light:dark:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t);

  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32);
  v12(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for FormatUserInterfaceValue(0, a3, a4, v9) + 36);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v10, a2, a3);
}

uint64_t type metadata accessor for FormatUserInterfaceValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatUserInterfaceValue);
}

uint64_t sub_1BA6377A4@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return FormatMetadata.init(from:)(a1, a2);
}

uint64_t FormatMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1BA4CDF6C(0, &qword_1ED3B9BF8, (uint64_t (*)(void))sub_1BA637DB4, (uint64_t)&type metadata for FormatMetadata.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  v10 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BA637DB4();
  sub_1BB87468C();
  if (!v2)
  {
    LOBYTE(v38) = 0;
    v11 = sub_1BB87402C();
    v13 = v12;
    LOBYTE(v38) = 2;
    v32 = sub_1BB87402C();
    LOBYTE(v38) = 3;
    v30 = sub_1BB87402C();
    v31 = v14;
    LOBYTE(v38) = 1;
    v26 = sub_1BB87402C();
    v29 = v15;
    sub_1BA637C70();
    v17 = v16;
    LOBYTE(v37) = 4;
    v27 = sub_1BA637E54(&qword_1ED3B96F8, MEMORY[0x1E0DEDBF8], MEMORY[0x1E0DEB3D8]);
    v28 = v17;
    sub_1BB874068();
    v25 = v38;
    LOBYTE(v36) = 5;
    sub_1BB874068();
    v28 = v37;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3CF880, (uint64_t (*)(void))sub_1BA837F80, (uint64_t)&type metadata for FeedPlatform, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v19 = v18;
    LOBYTE(v35) = 6;
    v20 = sub_1BA637D30(&qword_1ED3CF888, (uint64_t (*)(void))sub_1BA837EF8, MEMORY[0x1E0DEB3D8]);
    v27 = v19;
    v24 = v20;
    sub_1BB874068();
    v23 = v36;
    v34 = 7;
    sub_1BB874068();
    FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(v11, v13, v30, v31, v26, v29, a2, v25, v28, v23, v35);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
}

void sub_1BA637C70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B96F0)
  {
    v0 = sub_1BB87309C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B96F0);
  }
}

uint64_t sub_1BA637CCC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA661760();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA637D30(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3CF880, (uint64_t (*)(void))sub_1BA837F80, (uint64_t)&type metadata for FeedPlatform, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA637DB4()
{
  unint64_t result;

  result = qword_1ED3B4080;
  if (!qword_1ED3B4080)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB943A44, &type metadata for FormatMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B4080);
  }
  return result;
}

uint64_t sub_1BA637DF8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9 = a3;
    result = MEMORY[0x1BCCE5B24](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA637E54(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BA637C70();
    v8 = a2;
    result = MEMORY[0x1BCCE5B24](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA637EB0(_QWORD *a1)
{
  return FormatOptionExpression.encode(to:)(a1);
}

uint64_t FormatOptionExpression.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int16 v30;
  __int128 v31;
  __int128 v32;
  __int16 v33;
  uint64_t v34;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v25 - v7;
  v10 = *(_QWORD *)v1;
  v9 = *(_QWORD *)(v1 + 8);
  v11 = *(_QWORD *)(v1 + 16);
  v12 = *(__int16 *)(v1 + 32);
  if (v12 < 0)
  {
    v20 = a1[3];
    v27 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v20);
    if (qword_1ED3C2478 != -1)
      swift_once();
    v21 = sub_1BB86EB84();
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v5, v22, v21);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v23 = swift_storeEnumTagMultiPayload();
    MEMORY[0x1E0C80A78](v23);
    v25[-4] = v10;
    v25[-3] = v9;
    LOBYTE(v25[-2]) = v11;
    BYTE1(v25[-2]) = BYTE1(v11) & 1;
    v24 = v34;
    sub_1BA69F160((uint64_t)v5, (uint64_t)sub_1BAA36010, (uint64_t)&v25[-6], v20, v27);
    result = sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    if (!v24)
    {
      *(_QWORD *)&v28 = v10;
      *((_QWORD *)&v28 + 1) = v9;
      LOWORD(v29) = v11 & 0x1FF;
      return FormatOptionExpression.Exists.encode(to:)(a1);
    }
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)&v31 = *(_QWORD *)v1;
    *((_QWORD *)&v31 + 1) = v9;
    *(_QWORD *)&v32 = v11;
    *((_QWORD *)&v32 + 1) = v13;
    v33 = v12 & 0xFF01;
    v14 = a1[3];
    v26 = a1[4];
    v27 = v10;
    v25[1] = __swift_project_boxed_opaque_existential_1(a1, v14);
    swift_bridgeObjectRetain();
    sub_1BA7114EC(v11, v13, v12 & 1);
    if (qword_1ED3C2478 != -1)
      swift_once();
    v15 = sub_1BB86EB84();
    v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v8, v16, v15);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v17 = swift_storeEnumTagMultiPayload();
    MEMORY[0x1E0C80A78](v17);
    v25[-2] = &v31;
    v18 = v34;
    sub_1BA69F160((uint64_t)v8, (uint64_t)sub_1BAA36030, (uint64_t)&v25[-4], v14, v26);
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    if (!v18)
    {
      v28 = v31;
      v29 = v32;
      v30 = v33;
      FormatOptionExpression.Compare.encode(to:)(a1);
    }
    return sub_1BA636D30(v27, v9, v11, v13, v12);
  }
  return result;
}

uint64_t FormatOptionExpression.Compare.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[12];
  int v27;
  _BYTE *v28;
  _QWORD *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v28 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v26[-v6];
  sub_1BA6384BC(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)v1;
  v12 = *(_QWORD *)(v1 + 8);
  v13 = *(_QWORD *)(v1 + 16);
  v31 = *(_QWORD *)(v1 + 24);
  v32 = v13;
  v30 = *(unsigned __int8 *)(v1 + 32);
  v27 = *(unsigned __int8 *)(v1 + 33);
  v14 = a1[3];
  v15 = a1[4];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BA63BB38();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatOptionExpression.Compare, v17, v14, (uint64_t)&type metadata for FormatOptionExpression.Compare, (uint64_t)&type metadata for FormatOptionExpression.Compare.CodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v10, v16, (uint64_t)&off_1E734BD80);
  v18 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v36;
  sub_1BA63852C(v11, v12, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v23 = v20;
    v33 = v32;
    v34 = v31;
    v35 = v30;
    FormatOptionCompareValue.encode(to:)(v29);
    v24 = (uint64_t)v28;
    v21(v28, v23, v19);
    swift_storeEnumTagMultiPayload();
    sub_1BA638838(v27);
    sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6384BC);
}

void sub_1BA6384BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3A9550)
  {
    sub_1BA63BB7C(255, &qword_1ED39C178, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    v3 = v2;
    v4 = sub_1BA638658();
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3A9550);
  }
}

uint64_t sub_1BA63852C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[7];
  char v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v21 = a2;
  v19 = a3;
  sub_1BA6384BC(0);
  v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  v15 = *v13;
  v14 = v13[1];
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = v15;
  *(_QWORD *)(v16 + 32) = v14;
  v18[2] = a5;
  v18[3] = a6;
  v18[4] = sub_1BAEF9D28;
  v18[5] = v16;
  swift_retain();
  sub_1BA6386B0(a4, a3, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  if (!v7)
  {
    sub_1BA4CDF6C(0, &qword_1ED39C178, (uint64_t (*)(void))sub_1BA63BB38, (uint64_t)&type metadata for FormatOptionExpression.Compare.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA638658();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA638658()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB6A8;
  if (!qword_1ED3AB6A8)
  {
    sub_1BA63BB7C(255, &qword_1ED39C178, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB6A8);
  }
  return result;
}

uint64_t sub_1BA6386B0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  _BYTE v19[16];
  uint64_t (*v20)();
  uint64_t v21;
  _QWORD v22[4];

  sub_1BA6384BC(0);
  v10 = v9;
  v11 = (uint64_t *)(v4 + *(int *)(v9 + 44));
  v12 = *v11;
  v13 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v12;
  *(_QWORD *)(v14 + 32) = v13;
  sub_1BA4CDF6C(0, &qword_1ED39C178, (uint64_t (*)(void))sub_1BA63BB38, (uint64_t)&type metadata for FormatOptionExpression.Compare.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BA638658();
  swift_retain();
  v15 = sub_1BB87444C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = a2;
  sub_1BA4C010C(v4 + *(int *)(v10 + 36), (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v20 = sub_1BAEFDB74;
  v21 = v16;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = sub_1BAEF9D28;
  v18[5] = v14;
  sub_1BA6EC658(a1, (uint64_t)sub_1BAEFCC04, (uint64_t)v19, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

void sub_1BA638838(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA63889C()
{
  return swift_bridgeObjectRelease();
}

uint64_t FormatOptionCompareValue.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  sub_1BA63BDD8(0, &qword_1ED3AB6C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v11 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - v5;
  v8 = *(_QWORD *)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v9 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA63BD94();
  sub_1BB8746C8();
  if (v9 == 1)
  {
    v12 = v8;
    v13 = v7;
    v14 = 1;
    sub_1BAFF09B8();
    sub_1BB8741AC();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v6, v4);
  }
  else
  {
    v12 = v8;
    v14 = 0;
    sub_1BA640C5C();
    swift_retain();
    sub_1BB8741AC();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v4);
    return sub_1BA636D1C(v8, v7, 0);
  }
}

uint64_t initializeWithCopy for FormatSourceMapNode(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA638C40(_QWORD *a1)
{
  return FormatSnippet.encode(to:)(a1);
}

uint64_t FormatSnippet.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t *v65;
  char *v66;
  char *v67;
  _QWORD *v68;
  __int128 v69;
  char v70;
  uint64_t v71;
  __int128 v72;
  char v73;
  uint64_t v74;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v61 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v62 = (uint64_t)&v57 - v8;
  MEMORY[0x1E0C80A78](v9);
  v63 = (char *)&v57 - v10;
  MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v57 - v12;
  MEMORY[0x1E0C80A78](v13);
  v64 = (char *)&v57 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v57 - v16;
  sub_1BAE7130C(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v23 = sub_1BAE713FC();
  v24 = sub_1BA4A2870(&qword_1ED3D1520, (uint64_t (*)(uint64_t))sub_1BAE713FC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v25, v22, v4, v23, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v20, v24, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v26 = v2[2];
  v27 = v2[3];
  v65 = v2;
  v28 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v28 != -1)
    swift_once();
  v29 = sub_1BB86EB84();
  v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED476C20);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  v31(v17, v30, v29);
  v32 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v33 = v26;
  v34 = (uint64_t)v20;
  v35 = v67;
  sub_1BAD22DCC(v33, v27, 0, 0, 0, (uint64_t)v17, (uint64_t)sub_1BA90CF04, 0);
  if (v35)
    goto LABEL_5;
  v67 = v20;
  v60 = 0;
  sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v36 = (uint64_t)v64;
  v31(v64, v30, v29);
  swift_storeEnumTagMultiPayload();
  sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
  v31((char *)v36, v30, v29);
  swift_storeEnumTagMultiPayload();
  v37 = v36;
  v34 = (uint64_t)v67;
  sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
  v38 = v30;
  v39 = v65;
  swift_beginAccess();
  v40 = v39[8];
  v17 = v66;
  v31(v66, v38, v29);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v41 = v60;
  v42 = sub_1BAE56CEC((uint64_t)v17, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
LABEL_5:
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    v64 = (char *)v31;
    v58 = v29;
    v59 = v32;
    v60 = v38;
    if ((v42 & 1) != 0)
    {
      v72 = xmmword_1BB8D2D70;
      v73 = 0;
      v71 = v40;
      sub_1BAE71384();
      sub_1BA4A2870(&qword_1ED3AF270, (uint64_t (*)(uint64_t))sub_1BAE71384, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA653FC0();
      sub_1BB874464();
      v17 = v66;
    }
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v45 = (uint64_t)v63;
    v44 = (void (*)(uint64_t, uint64_t, uint64_t))v64;
    v46 = v60;
    v47 = v58;
    ((void (*)(char *, uint64_t, uint64_t))v64)(v63, v60, v58);
    swift_storeEnumTagMultiPayload();
    v48 = swift_bridgeObjectRetain();
    sub_1BAD2E1E4(v48, 4, 0, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v49 = v39[10];
    v50 = v62;
    v44(v62, v46, v47);
    swift_storeEnumTagMultiPayload();
    v51 = *(_QWORD *)(v49 + 16);
    swift_bridgeObjectRetain();
    if (v51 && (sub_1BAE56CEC(v50, 5, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v69 = xmmword_1BB8D2D80;
      v70 = 0;
      v52 = swift_bridgeObjectRetain();
      v53 = sub_1BA67F4CC(v52);
      swift_bridgeObjectRelease();
      v68 = v53;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v68, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v74 = (uint64_t)v68;
      sub_1BAE71384();
      sub_1BA4A2870(&qword_1ED3AF270, (uint64_t (*)(uint64_t))sub_1BAE71384, MEMORY[0x1E0DED188]);
      v54 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v54, MEMORY[0x1E0DEA970]);
      sub_1BB874464();
      swift_release();
      v47 = v58;
    }
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v55 = (uint64_t)v61;
    ((void (*)(char *, uint64_t, uint64_t))v64)(v61, v60, v47);
    swift_storeEnumTagMultiPayload();
    v56 = swift_bridgeObjectRetain();
    v34 = (uint64_t)v67;
    sub_1BAD2E314(v56, 6, 0, 0);
    sub_1BA4A2E80(v55, type metadata accessor for FormatVersionRequirement);
  }
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))sub_1BAE7130C);
}

unint64_t sub_1BA639454()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED39BE80;
  if (!qword_1ED39BE80)
  {
    sub_1BA584114();
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3AFE80, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BE80);
  }
  return result;
}

uint64_t sub_1BA6394CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA6394F4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA6394F4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t KeyPath;
  void *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  char v75;
  __int128 v76;
  char v77;

  sub_1BAEFBAC0(0, &qword_1ED3BBE50, (void (*)(void))sub_1BA8374B4, (void (*)(void))sub_1BA8374F8);
  v65 = v2;
  v62 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v66 = (char *)&v55 - v3;
  sub_1BA6927D0();
  *(_QWORD *)&v70 = v4;
  v63 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA692844();
  v68 = v6;
  v64 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v69 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v71 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v55 - v10;
  sub_1BAEFBDB4();
  v72 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE713FC();
  sub_1BA4A2870(&qword_1ED3D1520, (uint64_t (*)(uint64_t))sub_1BAE713FC, (uint64_t)&unk_1BB8FFC6C);
  v17 = (void *)v73;
  sub_1BB87468C();
  v18 = v17;
  if (v17)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v18);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v19 = v11;
  *(_QWORD *)&v73 = v9;
  v20 = v71;
  v61 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v21 = sub_1BB872874();
  v22 = Dictionary<>.errorOnUnknownKeys.getter(v21);
  swift_bridgeObjectRelease();
  v23 = v72;
  if ((v22 & 1) != 0)
  {
    v24 = sub_1BB8740EC();
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v26 = (_BYTE *)(v24 + 48);
      while (*v26 != 1)
      {
        v26 += 24;
        if (!--v25)
          goto LABEL_7;
      }
      v32 = *((_QWORD *)v26 - 2);
      v31 = *((_QWORD *)v26 - 1);
      swift_bridgeObjectRetain_n();
      v33 = swift_bridgeObjectRelease();
      v34 = v23;
      MEMORY[0x1E0C80A78](v33);
      *(&v55 - 4) = (uint64_t)&_s10CodingKeysON_257;
      *(&v55 - 3) = sub_1BAE7147C();
      v53 = sub_1BA639DEC();
      v54 = sub_1BAE714C0();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v35 = sub_1BAE71220((uint64_t)&unk_1E724CF80);
      swift_release_n();
      sub_1BA98D1F0();
      v18 = (void *)swift_allocError();
      *(_QWORD *)v36 = v32;
      *(_QWORD *)(v36 + 8) = v31;
      *(_QWORD *)(v36 + 16) = v35;
      *(_OWORD *)(v36 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v32, v31, 1);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v34);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v76 = 0uLL;
  v77 = 0;
  v27 = sub_1BB874098();
  v29 = v28;
  v60 = v27;
  v76 = xmmword_1BB8A1A10;
  v77 = 0;
  v30 = sub_1BB87402C();
  v39 = v38;
  v59 = v30;
  v76 = xmmword_1BB8D2D60;
  v77 = 0;
  v56 = sub_1BB87402C();
  v57 = v40;
  v58 = v39;
  v76 = xmmword_1BB8D2D70;
  v77 = 0;
  sub_1BA4FB6A0();
  sub_1BB8740D4();
  v41 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v19, v20);
  v73 = xmmword_1BB8D2D90;
  v76 = xmmword_1BB8D2D90;
  v77 = 0;
  v42 = sub_1BB8740F8();
  if ((v42 & 1) != 0)
  {
    v55 = v41;
    v74 = v73;
    v75 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v44 = v68;
    v43 = v69;
    sub_1BB8740D4();
    v71 = v29;
    *(_QWORD *)&v73 = a1;
    v45 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v43, v44);
    v41 = v55;
  }
  else
  {
    v71 = v29;
    *(_QWORD *)&v73 = a1;
    v45 = MEMORY[0x1E0DEE9D8];
  }
  v69 = xmmword_1BB8D2D80;
  v76 = xmmword_1BB8D2D80;
  v77 = 0;
  v46 = sub_1BB8740F8();
  v47 = v70;
  if ((v46 & 1) != 0)
  {
    v74 = v69;
    v75 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v48 = v67;
    sub_1BB8740D4();
    v49 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v47);
  }
  else
  {
    v49 = MEMORY[0x1E0DEE9E8];
  }
  v70 = xmmword_1BB8D2DA0;
  v76 = xmmword_1BB8D2DA0;
  v77 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v74 = v70;
    v75 = 0;
    sub_1BAE7C1AC();
    v50 = v65;
    v51 = v66;
    sub_1BB8740D4();
    v52 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v51, v50);
  }
  else
  {
    v52 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for FormatSnippet();
  swift_allocObject();
  KeyPath = FormatSnippet.init(identifier:name:description:children:options:selectors:types:)(v60, v71, v59, v58, v56, v57, v41, v45, v49, v52);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v23);
  __swift_destroy_boxed_opaque_existential_1(v73);
  return KeyPath;
}

unint64_t sub_1BA639DEC()
{
  unint64_t result;

  result = qword_1ED3C69C8;
  if (!qword_1ED3C69C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1F08, &_s10CodingKeysON_257);
    atomic_store(result, (unint64_t *)&qword_1ED3C69C8);
  }
  return result;
}

uint64_t type metadata accessor for FormatSnippet()
{
  return objc_opt_self();
}

uint64_t FormatSnippet.init(identifier:name:description:children:options:selectors:types:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  *(_OWORD *)(v10 + 48) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  swift_beginAccess();
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 56) = a6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v10 + 64) = a7;
  swift_beginAccess();
  *(_QWORD *)(v10 + 72) = a8;
  swift_beginAccess();
  *(_QWORD *)(v10 + 80) = a9;
  swift_beginAccess();
  *(_QWORD *)(v10 + 88) = a10;
  return v10;
}

uint64_t sub_1BA639F7C(_QWORD *a1)
{
  return FormatLocalizationString.encode(to:)(a1);
}

uint64_t FormatLocalizationString.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v30 = (char *)&v29 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - v8;
  sub_1BAEA1AF8(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v14 = v1[1];
  v31 = v1[4];
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAEA1988();
  v18 = sub_1BA4A2870(&qword_1ED3D1150, (uint64_t (*)(uint64_t))sub_1BAEA1988, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatLocalizationString, v19, v15, (uint64_t)&type metadata for FormatLocalizationString, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v12, v18, (uint64_t)&off_1E734BD80);
  v20 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v23(v9, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v24 = v33;
  sub_1BAD13E2C(v13, v14, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    v25 = (uint64_t)v30;
    v23(v30, v22, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    v26 = (uint64_t)v32;
    v23(v32, v22, v21);
    swift_storeEnumTagMultiPayload();
    v27 = swift_bridgeObjectRetain();
    sub_1BAD27DBC(v27, 2, 0, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAEA1AF8);
}

unint64_t sub_1BA63A294()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BF18;
  if (!qword_1ED39BF18)
  {
    sub_1BA4AD288(255, &qword_1ED39BF10, (uint64_t)&type metadata for FormatLocalizationString.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA826CA8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BF18);
  }
  return result;
}

uint64_t sub_1BA63A30C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatOption.init(from:)(a1, a2);
}

uint64_t FormatOption.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(char *, _QWORD);
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  void (**v38)(char *, _QWORD);
  __int128 v39;
  char v40;
  uint64_t v41;

  v37 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - v4;
  sub_1BAEA7D84();
  v7 = v6;
  v8 = *(void (***)(char *, _QWORD))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA7DFC();
  sub_1BA4A2870(&qword_1ED3D14F0, (uint64_t (*)(uint64_t))sub_1BAEA7DFC, (uint64_t)&unk_1BB8FFC6C);
  v11 = v38;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v32 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  v38 = v8;
  v13 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_1BB872874();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v15 = v37;
  v16 = v10;
  if ((v13 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v24 = *((_QWORD *)v19 - 2);
      v25 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v26);
      *(&v34 - 4) = (uint64_t)&_s10CodingKeysON_90;
      *(&v34 - 3) = sub_1BAEA7E7C();
      *(&v34 - 2) = sub_1BA63A84C();
      *(&v34 - 1) = sub_1BAEA7EC0();
      swift_getKeyPath();
      swift_retain();
      v27 = sub_1BAE71220((uint64_t)&unk_1E726D120);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v28 = v24;
      *(_QWORD *)(v28 + 8) = v25;
      *(_QWORD *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v24, v25, 1);
      v38[1](v10, v7);
      a1 = v36;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v20 = v15;
  v39 = 0uLL;
  v40 = 0;
  v21 = sub_1BB874098();
  v23 = v22;
  v39 = xmmword_1BB8A1A10;
  v40 = 0;
  sub_1BA63A808();
  sub_1BB8740D4();
  v29 = v41;
  v39 = xmmword_1BB8D2D60;
  v40 = 0;
  sub_1BA63A890();
  sub_1BB874068();
  v34 = v41;
  v35 = v29;
  type metadata accessor for FormatVersionRequirement(0);
  v39 = xmmword_1BB8D2D70;
  v40 = 0;
  sub_1BA4A2870(&qword_1ED3D0B40, type metadata accessor for FormatVersionRequirement, (uint64_t)&unk_1BB88F0F4);
  sub_1BB874068();
  v38[1](v16, v7);
  v31 = type metadata accessor for FormatOption();
  sub_1BA646EFC((uint64_t)v5, (uint64_t)v20 + *(int *)(v31 + 28), (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
  *v20 = v21;
  v20[1] = v23;
  v32 = (uint64_t)v36;
  v33 = v34;
  v20[2] = v35;
  v20[3] = v33;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

unint64_t sub_1BA63A808()
{
  unint64_t result;

  result = qword_1ED3B4E18;
  if (!qword_1ED3B4E18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionValue, &type metadata for FormatOptionValue);
    atomic_store(result, (unint64_t *)&qword_1ED3B4E18);
  }
  return result;
}

unint64_t sub_1BA63A84C()
{
  unint64_t result;

  result = qword_1ED3C6840;
  if (!qword_1ED3C6840)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8BE8, &_s10CodingKeysON_90);
    atomic_store(result, (unint64_t *)&qword_1ED3C6840);
  }
  return result;
}

unint64_t sub_1BA63A890()
{
  unint64_t result;

  result = qword_1ED3CA0E8;
  if (!qword_1ED3CA0E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94F7B0, &type metadata for FormatOptionDependency);
    atomic_store(result, (unint64_t *)&qword_1ED3CA0E8);
  }
  return result;
}

uint64_t sub_1BA63A8D4(_QWORD *a1)
{
  return FormatLocalizationString.Selector.encode(to:)(a1);
}

uint64_t FormatLocalizationString.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - v6;
  sub_1BAEA1D68(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v12 = v1[1];
  v13 = v1[3];
  v28 = v1[2];
  v29 = v13;
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAEA1C60();
  v17 = sub_1BA4A2870(&qword_1ED3D1160, (uint64_t (*)(uint64_t))sub_1BAEA1C60, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatLocalizationString.Selector, v18, v14, (uint64_t)&type metadata for FormatLocalizationString.Selector, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v10, v17, (uint64_t)&off_1E734BD80);
  v19 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v7, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v23 = v31;
  sub_1BAD13F84(v11, v12, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v23)
  {
    v24 = (uint64_t)v30;
    v22(v30, v21, v20);
    swift_storeEnumTagMultiPayload();
    v25 = v29;
    swift_bridgeObjectRetain();
    sub_1BAD140E0(v28, v25, 1, 0, 0, v24, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAEA1D68);
}

uint64_t sub_1BA63ABA4(_QWORD *a1)
{
  return FormatImageNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatImageNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  unint64_t v80;
  char *v81;
  int v82;
  int v83;
  int v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  _BYTE v100[48];
  uint64_t v101;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v73 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v76 = (char *)&v73 - v6;
  MEMORY[0x1E0C80A78](v7);
  v79 = (char *)&v73 - v8;
  MEMORY[0x1E0C80A78](v9);
  v81 = (char *)&v73 - v10;
  MEMORY[0x1E0C80A78](v11);
  v87 = (char *)&v73 - v12;
  MEMORY[0x1E0C80A78](v13);
  v86 = (char *)&v73 - v14;
  MEMORY[0x1E0C80A78](v15);
  v85 = (char *)&v73 - v16;
  MEMORY[0x1E0C80A78](v17);
  v89 = (char *)&v73 - v18;
  MEMORY[0x1E0C80A78](v19);
  v90 = (char *)&v73 - v20;
  MEMORY[0x1E0C80A78](v21);
  v94 = (char *)&v73 - v22;
  MEMORY[0x1E0C80A78](v23);
  v96 = (char *)&v73 - v24;
  MEMORY[0x1E0C80A78](v25);
  v98 = (char *)&v73 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v73 - v28;
  sub_1BAE9B5FC(0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v73 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(v1 + 8);
  v99 = *(_QWORD *)v1;
  v97 = *(_QWORD *)(v1 + 16);
  v95 = *(_QWORD *)(v1 + 24);
  v91 = *(_QWORD *)(v1 + 32);
  v93 = *(_QWORD *)(v1 + 40);
  v92 = *(unsigned __int8 *)(v1 + 48);
  sub_1BA6A09F0(v1 + 56, (uint64_t)v100, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v88 = *(_QWORD *)(v1 + 144);
  v84 = *(unsigned __int8 *)(v1 + 152);
  v83 = *(unsigned __int8 *)(v1 + 153);
  v82 = *(unsigned __int8 *)(v1 + 154);
  v80 = *(_QWORD *)(v1 + 160);
  v78 = *(_QWORD *)(v1 + 168);
  v77 = *(_QWORD *)(v1 + 176);
  v75 = *(_QWORD *)(v1 + 184);
  v74 = *(_QWORD *)(v1 + 192);
  v34 = a1[3];
  v35 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v34);
  v36 = sub_1BAE9B4F4();
  v37 = sub_1BA4A2870(&qword_1ED3D0EE0, (uint64_t (*)(uint64_t))sub_1BAE9B4F4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatImageNodeStyle.Selector, v38, v34, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, v36, (uint64_t)&type metadata for FormatVersions.JazzkonC, v35, (uint64_t)v32, v37, (uint64_t)&off_1E734BD80);
  v39 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v39 != -1)
    swift_once();
  v40 = sub_1BB86EB84();
  v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1ED476C20);
  v42 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
  v42(v29, v41, v40);
  v43 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v44 = v32;
  v45 = v101;
  sub_1BAD1A2D8(v99, v33, 0, 0, 0, (uint64_t)v29, (uint64_t)sub_1BA90CF04, 0);
  if (v45)
  {
    sub_1BA4A2E80((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v61 = (uint64_t)v32;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v46 = (uint64_t)v98;
    v42(v98, v41, v40);
    swift_storeEnumTagMultiPayload();
    v47 = v97;
    sub_1BA6E6C68(v97);
    sub_1BAD544F8(v47, 1, 0, 0, v46, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v47);
    v48 = (uint64_t)v96;
    v42(v96, v41, v40);
    swift_storeEnumTagMultiPayload();
    v49 = swift_bridgeObjectRetain();
    sub_1BAD54710(v49, 2, 0, 0, v48, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v50 = (uint64_t)v94;
    v42(v94, v41, v40);
    swift_storeEnumTagMultiPayload();
    v101 = v43;
    v51 = v91;
    v52 = v93;
    v53 = v92;
    sub_1BA6E6C54(v91, v93, v92);
    sub_1BAD54940(v51, v52, v53, 3, 0, 0, v50, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v51, v52, v53);
    v54 = (uint64_t)v90;
    v42(v90, v41, v40);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v100, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD54B74((uint64_t)v100, 4, 0, 0, v54, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v54, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v100, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    v55 = (uint64_t)v89;
    v42(v89, v41, v40);
    swift_storeEnumTagMultiPayload();
    v56 = v88;
    sub_1BA5E7FF4(v88);
    sub_1BAD54E5C(v56, 5, 0, 0, v55, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v55, type metadata accessor for FormatVersionRequirement);
    sub_1BA5E800C(v56);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v57 = __swift_project_value_buffer(v40, (uint64_t)qword_1ED476B78);
    v58 = (uint64_t)v85;
    v42(v85, v57, v40);
    swift_storeEnumTagMultiPayload();
    sub_1BAD55074(v84, 6, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    v59 = (uint64_t)v87;
    v60 = (uint64_t)v86;
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v42((char *)v60, v41, v40);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5523C(v83, 7, 0, 0, v60, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
    v42((char *)v59, v41, v40);
    swift_storeEnumTagMultiPayload();
    sub_1BAD55404(v82, 8, 0, 0, v59, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v59, type metadata accessor for FormatVersionRequirement);
    v63 = (uint64_t)v81;
    v42(v81, v41, v40);
    swift_storeEnumTagMultiPayload();
    v64 = v80;
    sub_1BA6E6C80(v80);
    sub_1BAD555CC(v64, 9, 0, 0, v63, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v63, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CF0(v64);
    v65 = (uint64_t)v79;
    v42(v79, v41, v40);
    swift_storeEnumTagMultiPayload();
    v66 = swift_bridgeObjectRetain();
    sub_1BAD557D8(v66, 10, 0, 0, v65, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v67 = qword_1ED3C6D58;
    swift_bridgeObjectRetain();
    if (v67 != -1)
      swift_once();
    v68 = __swift_project_value_buffer(v40, (uint64_t)qword_1ED476C08);
    v69 = (uint64_t)v76;
    v42(v76, v68, v40);
    swift_storeEnumTagMultiPayload();
    sub_1BAD559F8(v77, 11, 0, 0, v69, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v69, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    sub_1BA6E6C90(v75);
    if (qword_1ED3C6D70 != -1)
      swift_once();
    v70 = __swift_project_value_buffer(v40, (uint64_t)qword_1ED476C50);
    v71 = (uint64_t)v73;
    v42(v73, v70, v40);
    swift_storeEnumTagMultiPayload();
    v72 = v75;
    sub_1BAD55C28(v75, v74, 12, 0, 0, v71, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v71, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6D00(v72);
    v61 = (uint64_t)v44;
  }
  return sub_1BA4A2E80(v61, (uint64_t (*)(_QWORD))sub_1BAE9B5FC);
}

unint64_t sub_1BA63B770()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BEE0;
  if (!qword_1ED39BEE0)
  {
    sub_1BA4AD288(255, &qword_1ED3B9520, (uint64_t)&type metadata for FormatImageAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82AEFC();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BEE0);
  }
  return result;
}

void sub_1BA63B7E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  FormatOptionExpression.init(from:)(a1, a2);
}

void FormatOptionExpression.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int128 v8;
  __int16 v9;
  _QWORD v10[5];
  uint64_t v11;
  uint64_t v12;
  unsigned __int128 v13;
  unsigned __int8 v14;
  unsigned __int8 v15;

  sub_1BA4C010C(a1, (uint64_t)v10);
  FormatOptionExpression.Compare.init(from:)(v10, (uint64_t)&v11);
  if (v2)
  {
    sub_1BA4C010C(a1, (uint64_t)v10);
    FormatOptionExpression.Exists.init(from:)(v10, (uint64_t)&v11);
    __swift_destroy_boxed_opaque_existential_1(a1);

    v5 = v11;
    v6 = v12;
    v7 = 256;
    if (!BYTE1(v13))
      v7 = 0;
    v8 = (unint64_t)v7 | (unsigned __int128)v13;
    v9 = 0x8000;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v5 = v11;
    v6 = v12;
    v8 = v13;
    v9 = v14 | (v15 << 8);
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  *(_OWORD *)(a2 + 16) = v8;
  *(_WORD *)(a2 + 32) = v9;
}

uint64_t FormatOptionExpression.Compare.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  _QWORD v24[2];
  char v25;
  char v26;

  sub_1BA63BB7C(0, &qword_1ED3B9C38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA63BB38();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v23[0]) = 0;
  v11 = sub_1BB874098();
  v13 = v12;
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v23);
  FormatOptionCompareValue.init(from:)(v23, (uint64_t)v24);
  v20 = v24[0];
  v21 = v24[1];
  v22 = v13;
  v26 = v25;
  LOBYTE(v24[0]) = 2;
  sub_1BA63BE34();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = v23[0];
  if (LOBYTE(v23[0]) == 12)
    v14 = 0;
  v15 = v26;
  v17 = v21;
  v16 = v22;
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v16;
  v18 = v20;
  *(_QWORD *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v17;
  *(_BYTE *)(a2 + 32) = v15;
  *(_BYTE *)(a2 + 33) = v14;
  swift_bridgeObjectRetain();
  sub_1BA7114EC(v18, v17, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1BA636D1C(v18, v17, v15);
}

unint64_t sub_1BA63BB38()
{
  unint64_t result;

  result = qword_1ED3B6B98;
  if (!qword_1ED3B6B98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89216C, &type metadata for FormatOptionExpression.Compare.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B6B98);
  }
  return result;
}

void sub_1BA63BB7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA63BB38();
    v7 = a3(a1, &type metadata for FormatOptionExpression.Compare.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t FormatOptionCompareValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1BA63BDD8(0, &qword_1ED3CFB18, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA63BD94();
  sub_1BB87468C();
  if (!v2)
  {
    v12 = 0;
    sub_1BA63A808();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_QWORD *)a2 = v11;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = 0;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA63BD94()
{
  unint64_t result;

  result = qword_1ED3CACE8;
  if (!qword_1ED3CACE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0410, &type metadata for FormatOptionCompareValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3CACE8);
  }
  return result;
}

void sub_1BA63BDD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA63BD94();
    v7 = a3(a1, &type metadata for FormatOptionCompareValue.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA63BE34()
{
  unint64_t result;

  result = qword_1ED3B4160;
  if (!qword_1ED3B4160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOperator, &type metadata for FormatOperator);
    atomic_store(result, (unint64_t *)&qword_1ED3B4160);
  }
  return result;
}

uint64_t FormatOptionExpression.Exists.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  char v31;

  v3 = v2;
  v28 = a2;
  sub_1BAE7733C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE773B4();
  sub_1BA4A2870(&qword_1ED3D1040, (uint64_t (*)(uint64_t))sub_1BAE773B4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v28 = v7;
      v19 = *((_QWORD *)v15 - 2);
      v20 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v21);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_227;
      *(&v28 - 3) = sub_1BAE77434();
      *(&v28 - 2) = sub_1BA63C230();
      *(&v28 - 1) = sub_1BAE77478();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E7254FC0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v29 = 0uLL;
  v30 = 0;
  v16 = sub_1BB874098();
  v18 = v17;
  v29 = xmmword_1BB8A1A10;
  v30 = 0;
  sub_1BA74E2A8();
  sub_1BB8740D4();
  v25 = v31;
  v29 = xmmword_1BB8D2D60;
  v30 = 0;
  sub_1BA63C274();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v26 = v31;
  v27 = v28;
  *(_QWORD *)v28 = v16;
  *(_QWORD *)(v27 + 8) = v18;
  *(_BYTE *)(v27 + 16) = v25;
  *(_BYTE *)(v27 + 17) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA63C230()
{
  unint64_t result;

  result = qword_1ED3CA0F0;
  if (!qword_1ED3CA0F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D06E8, &_s10CodingKeysON_227);
    atomic_store(result, (unint64_t *)&qword_1ED3CA0F0);
  }
  return result;
}

unint64_t sub_1BA63C274()
{
  unint64_t result;

  result = qword_1ED3B6B90;
  if (!qword_1ED3B6B90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionExpression.Exists.Operator, &type metadata for FormatOptionExpression.Exists.Operator);
    atomic_store(result, (unint64_t *)&qword_1ED3B6B90);
  }
  return result;
}

unint64_t sub_1BA63C2B8()
{
  unint64_t result;

  result = qword_1ED3C6C00;
  if (!qword_1ED3C6C00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionId, &type metadata for FormatOptionId);
    atomic_store(result, (unint64_t *)&qword_1ED3C6C00);
  }
  return result;
}

uint64_t sub_1BA63C2FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA63C324(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA63C324(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(char *, _QWORD);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  void (**v22)(char *, _QWORD);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)(char *, _QWORD);
  __int128 v36;
  char v37;
  uint64_t v38;

  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - v3;
  sub_1BAEEA558();
  v6 = v5;
  v7 = *(void (***)(char *, _QWORD))(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC2964();
  sub_1BA4A2870(&qword_1ED3D0F30, (uint64_t (*)(uint64_t))sub_1BAEC2964, (uint64_t)&unk_1BB8FFC6C);
  v11 = v35;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  v32 = v4;
  v13 = v34;
  v35 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v16 = v6;
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v23 = v9;
      v10 = *((_QWORD *)v19 - 2);
      v24 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v25 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v25);
      *(&v31 - 4) = (uint64_t)&_s10CodingKeysON_32;
      *(&v31 - 3) = sub_1BAEC29E4();
      *(&v31 - 2) = sub_1BA63C800();
      *(&v31 - 1) = sub_1BAEC2A28();
      swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71220((uint64_t)&unk_1E726EC80);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v27 = v10;
      *(_QWORD *)(v27 + 8) = v24;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v10, v24, 1);
      v35[1](v23, v16);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA63C7BC();
  v36 = 0uLL;
  v37 = 0;
  v20 = v6;
  sub_1BB8740D4();
  v31 = v38;
  v36 = xmmword_1BB8A1A10;
  v37 = 0;
  sub_1BA4FB6A0();
  v21 = v32;
  sub_1BB8740D4();
  v22 = v35;
  v29 = v20;
  v30 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v13);
  v22[1](v9, v29);
  type metadata accessor for FormatSwitchNodeCase();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v31;
  swift_beginAccess();
  *(_QWORD *)(v10 + 24) = v30;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v10;
}

void sub_1BA63C758()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4000)
  {
    sub_1BA82E430();
    sub_1BA49B0D0();
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4000);
  }
}

unint64_t sub_1BA63C7BC()
{
  unint64_t result;

  result = qword_1ED3B4860;
  if (!qword_1ED3B4860)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatExpression, &type metadata for FormatExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B4860);
  }
  return result;
}

unint64_t sub_1BA63C800()
{
  unint64_t result;

  result = qword_1ED3C9228;
  if (!qword_1ED3C9228)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5880, &_s10CodingKeysON_32);
    atomic_store(result, (unint64_t *)&qword_1ED3C9228);
  }
  return result;
}

uint64_t type metadata accessor for FormatSwitchNodeCase()
{
  return objc_opt_self();
}

void sub_1BA63C864(_QWORD *a1)
{
  FormatOptionValue.encode(to:)(a1);
}

void FormatOptionValue.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD v40[22];

  sub_1BA7125BC(0);
  MEMORY[0x1E0C80A78](v3);
  v40[13] = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA712634(0);
  MEMORY[0x1E0C80A78](v5);
  v40[12] = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v40[11] = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v40[10] = (char *)v40 - v10;
  MEMORY[0x1E0C80A78](v11);
  v40[9] = (char *)v40 - v12;
  MEMORY[0x1E0C80A78](v13);
  v40[8] = (char *)v40 - v14;
  MEMORY[0x1E0C80A78](v15);
  v40[6] = (char *)v40 - v16;
  MEMORY[0x1E0C80A78](v17);
  v40[7] = (char *)v40 - v18;
  MEMORY[0x1E0C80A78](v19);
  v40[5] = (char *)v40 - v20;
  MEMORY[0x1E0C80A78](v21);
  v40[4] = (char *)v40 - v22;
  MEMORY[0x1E0C80A78](v23);
  v40[3] = (char *)v40 - v24;
  MEMORY[0x1E0C80A78](v25);
  v40[2] = (char *)v40 - v26;
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  v40[1] = (char *)v40 - v29;
  MEMORY[0x1E0C80A78](v30);
  MEMORY[0x1E0C80A78](v31);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)v40 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *v1;
  v36 = a1[3];
  v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v36);
  v38 = sub_1BA6B8518();
  v40[15] = v34;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatOptionValue, v39, v36, (uint64_t)&type metadata for FormatOptionValue, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v37, (uint64_t)v34, v38, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA63CB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v6, v5);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v7 = v3;
  v8 = *(_QWORD *)(v2 - 136);
  sub_1BA63D57C(0, v7, v4, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v8, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA63D57C(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  char v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF96E0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, &qword_1ED3B5F20, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BA63D750();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA63D70C()
{
  unint64_t result;

  result = qword_1ED3A5C60;
  if (!qword_1ED3A5C60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B25F0, &_s10CodingTypeON_161);
    atomic_store(result, (unint64_t *)&qword_1ED3A5C60);
  }
  return result;
}

unint64_t sub_1BA63D750()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B550;
  if (!qword_1ED39B550)
  {
    sub_1BA50CAA8(255, &qword_1ED3B5F20, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B550);
  }
  return result;
}

uint64_t sub_1BA63D7B8(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = *((_QWORD *)a2 + 4);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF96E0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA63D928();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA63D928()
{
  unint64_t result;

  result = qword_1ED39B358;
  if (!qword_1ED39B358)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionEnum, &type metadata for FormatOptionEnum);
    atomic_store(result, (unint64_t *)&qword_1ED39B358);
  }
  return result;
}

uint64_t sub_1BA63D96C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF96E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA63DAD0(char a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  double v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a4;
  v18 = a2;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF96E0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B5F00, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BA63DC60();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA63DC60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B548;
  if (!qword_1ED39B548)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B5F00, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B548);
  }
  return result;
}

uint64_t sub_1BA63DCC8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF96E0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, &qword_1ED3B5F30, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BA63DE54();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA63DE54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B558;
  if (!qword_1ED39B558)
  {
    sub_1BA50CAA8(255, &qword_1ED3B5F30, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B558);
  }
  return result;
}

uint64_t sub_1BA63DEBC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF96E0;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, &qword_1ED3B5F10, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BA63E04C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA63E04C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39CEB8;
  if (!qword_1ED39CEB8)
  {
    sub_1BA50CAA8(255, &qword_1ED3B5F10, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39CEB8);
  }
  return result;
}

void sub_1BA63E0B4(_QWORD *a1)
{
  FormatSize.encode(to:)(a1);
}

void FormatSize.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD v68[30];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v68[25] = (char *)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v68[24] = (char *)v68 - v6;
  MEMORY[0x1E0C80A78](v7);
  v68[23] = (char *)v68 - v8;
  MEMORY[0x1E0C80A78](v9);
  v68[22] = (char *)v68 - v10;
  MEMORY[0x1E0C80A78](v11);
  v68[21] = (char *)v68 - v12;
  MEMORY[0x1E0C80A78](v13);
  v68[6] = (char *)v68 - v14;
  MEMORY[0x1E0C80A78](v15);
  v68[5] = (char *)v68 - v16;
  MEMORY[0x1E0C80A78](v17);
  v68[20] = (char *)v68 - v18;
  MEMORY[0x1E0C80A78](v19);
  v68[19] = (char *)v68 - v20;
  MEMORY[0x1E0C80A78](v21);
  v68[18] = (char *)v68 - v22;
  MEMORY[0x1E0C80A78](v23);
  v68[4] = (char *)v68 - v24;
  MEMORY[0x1E0C80A78](v25);
  v68[3] = (char *)v68 - v26;
  MEMORY[0x1E0C80A78](v27);
  v68[2] = (char *)v68 - v28;
  MEMORY[0x1E0C80A78](v29);
  v68[17] = (char *)v68 - v30;
  MEMORY[0x1E0C80A78](v31);
  v68[16] = (char *)v68 - v32;
  MEMORY[0x1E0C80A78](v33);
  v68[15] = (char *)v68 - v34;
  MEMORY[0x1E0C80A78](v35);
  v68[14] = (char *)v68 - v36;
  MEMORY[0x1E0C80A78](v37);
  v68[13] = (char *)v68 - v38;
  MEMORY[0x1E0C80A78](v39);
  v68[12] = (char *)v68 - v40;
  MEMORY[0x1E0C80A78](v41);
  v68[11] = (char *)v68 - v42;
  MEMORY[0x1E0C80A78](v43);
  v68[10] = (char *)v68 - v44;
  MEMORY[0x1E0C80A78](v45);
  v68[9] = (char *)v68 - v46;
  MEMORY[0x1E0C80A78](v47);
  v68[8] = (char *)v68 - v48;
  MEMORY[0x1E0C80A78](v49);
  v68[7] = (char *)v68 - v50;
  MEMORY[0x1E0C80A78](v51);
  v68[1] = (char *)v68 - v52;
  MEMORY[0x1E0C80A78](v53);
  v68[0] = (char *)v68 - v54;
  MEMORY[0x1E0C80A78](v55);
  MEMORY[0x1E0C80A78](v56);
  MEMORY[0x1E0C80A78](v57);
  MEMORY[0x1E0C80A78](v58);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v59);
  v61 = (char *)v68 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = *v1;
  v63 = a1;
  v65 = a1[3];
  v64 = a1[4];
  __swift_project_boxed_opaque_existential_1(v63, v65);
  v66 = sub_1BA6B8518();
  v68[29] = v61;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSize, v67, v65, (uint64_t)&type metadata for FormatSize, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v64, (uint64_t)v61, v66, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA63E588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v0 + 16);
  v4 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v6, v5);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v7 = *(_QWORD *)(v2 - 72);
  sub_1BA63FA34(1, v3, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80(v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA63F8CC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEC40C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA63F9F0()
{
  unint64_t result;

  result = qword_1ED3A53B8;
  if (!qword_1ED3A53B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFA80, &_s10CodingTypeON_30);
    atomic_store(result, (unint64_t *)&qword_1ED3A53B8);
  }
  return result;
}

uint64_t sub_1BA63FA34(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEC40C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA63FBB8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEC40C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA63FEA8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA63FD1C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEC40C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B50F0, (uint64_t (*)(void))sub_1BA8375CC, (uint64_t)&type metadata for FormatSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BA63FEEC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA63FEA8()
{
  unint64_t result;

  result = qword_1ED39B7B8;
  if (!qword_1ED39B7B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDimensionSizing, &type metadata for FormatDimensionSizing);
    atomic_store(result, (unint64_t *)&qword_1ED39B7B8);
  }
  return result;
}

unint64_t sub_1BA63FEEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B458;
  if (!qword_1ED39B458)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B50F0, (uint64_t (*)(void))sub_1BA8375CC, (uint64_t)&type metadata for FormatSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B458);
  }
  return result;
}

uint64_t sub_1BA63FF54(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEC40C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA6400BC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA6400BC()
{
  unint64_t result;

  result = qword_1ED39B028;
  if (!qword_1ED39B028)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRatio, &type metadata for FormatRatio);
    atomic_store(result, (unint64_t *)&qword_1ED39B028);
  }
  return result;
}

uint64_t sub_1BA640100(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEC40C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, &qword_1ED3C76E0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSizeColumn);
    sub_1BA640290();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA640290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A5AF8;
  if (!qword_1ED3A5AF8)
  {
    sub_1BA50CAA8(255, &qword_1ED3C76E0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSizeColumn);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSizeColumn<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A5AF8);
  }
  return result;
}

uint64_t sub_1BA6402F8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEC40C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA655200(0);
    sub_1BA4A2870(&qword_1ED3A5AF0, (uint64_t (*)(uint64_t))sub_1BA655200, (uint64_t)&protocol conformance descriptor for FormatSizeColumn<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA640480(char a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEEC40C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA6405EC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA6405EC()
{
  unint64_t result;

  result = qword_1ED39B8D8;
  if (!qword_1ED39B8D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPublisherLogoSize, &type metadata for FormatPublisherLogoSize);
    atomic_store(result, (unint64_t *)&qword_1ED39B8D8);
  }
  return result;
}

uint64_t sub_1BA640630(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEEC40C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA640798();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA640798()
{
  unint64_t result;

  result = qword_1ED39B518;
  if (!qword_1ED39B518)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColumnRowSpan, &type metadata for FormatColumnRowSpan);
    atomic_store(result, (unint64_t *)&qword_1ED39B518);
  }
  return result;
}

uint64_t sub_1BA6407DC(_QWORD *a1)
{
  return FormatOption.encode(to:)(a1);
}

uint64_t FormatOption.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)&v38 - v7;
  MEMORY[0x1E0C80A78](v8);
  v42 = (char *)&v38 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - v11;
  sub_1BAEA7F04(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = type metadata accessor for FormatOption();
  v19 = sub_1BAEA7DFC();
  v20 = sub_1BA4A2870(&qword_1ED3D14F0, (uint64_t (*)(uint64_t))sub_1BAEA7DFC, (uint64_t)&unk_1BB8FFC6C);
  v39 = v18;
  sub_1BA6EC1EC(v18, v21, v16, v18, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v15, v20, (uint64_t)&off_1E734BD80);
  v22 = *v2;
  v23 = v2[1];
  v43 = v2;
  v24 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C20);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v27(v12, v26, v25);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v28 = v44;
  sub_1BAD236D8(v22, v23, 0, 0, 0, (uint64_t)v12, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v28)
  {
    v29 = (uint64_t)v42;
    v30 = v43[2];
    v27(v42, v26, v25);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_1BAD23830(v30, 1, 0, 0, v29, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v31 = v43[3];
    sub_1BA6E9BC8(v31);
    if (qword_1ED3C6D88 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C80);
    v33 = (uint64_t)v41;
    v27(v41, v32, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6D354(v31, 2, 0, 0, v33, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v33, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E9B40(v31);
    v34 = (uint64_t)v43 + *(int *)(v39 + 28);
    if (qword_1ED3C4170 != -1)
      swift_once();
    v35 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476998);
    v36 = (uint64_t)v40;
    v27(v40, v35, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6D568(v34, 3, 0, 0, v36, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BAEA7F04);
}

unint64_t sub_1BA640C5C()
{
  unint64_t result;

  result = qword_1ED39B418;
  if (!qword_1ED39B418)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionValue, &type metadata for FormatOptionValue);
    atomic_store(result, (unint64_t *)&qword_1ED39B418);
  }
  return result;
}

void FeedItemLayoutAttributes.visualRankValue.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA640CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x1E0DB6978];
  v2 = sub_1BB86F514();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

void sub_1BA640DAC()
{
  FeedItemLayoutAttributes.visualRankValue.getter();
}

void FeedItemLayoutAttributes.frame.getter()
{
  uint64_t v1;

  v1 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

void sub_1BA640F84(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 40) = *(_QWORD *)(a1 + 16);
  FeedItemLayoutAttributes.frame.getter();
  JUMPOUT(0x1BA640F68);
}

uint64_t type metadata accessor for FeedBannerAdViewLayout.Attributes(uint64_t a1)
{
  return sub_1BA4B8364(a1, &qword_1ED3B1FF8);
}

void sub_1BA640FB4()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1ED3B5830)
  {
    type metadata accessor for HeadlineViewLayout.Context(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1ED3B5830);
  }
}

void sub_1BA641024()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1ED3CC0A0)
  {
    type metadata accessor for FormatItemNodeLayoutContext();
    type metadata accessor for FormatItemNodeDataLayoutAttributes();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1ED3CC0A0);
  }
}

void sub_1BA64109C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B20F0)
  {
    type metadata accessor for FeedBannerAdViewLayout.Context(255);
    type metadata accessor for FeedBannerAdViewLayout.Attributes(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B20F0);
  }
}

uint64_t type metadata accessor for FormatItemNodeLayoutContext()
{
  uint64_t result;

  result = qword_1ED3B8040;
  if (!qword_1ED3B8040)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t destroy for HeadlineViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v5 = (int *)type metadata accessor for FeedHeadline(0);
  v6 = v4 + v5[10];
  v7 = v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  v8 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);

    v10 = v7 + *(int *)(v8 + 28);
    v11 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = v4 + v5[11];
  v13 = sub_1BB871B24();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  if (*(_QWORD *)(v4 + v5[12] + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + v5[13]) >= 3uLL)
    swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for FormatItemNodeLayoutContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int *v66;
  uint64_t v67;
  char *v68;
  int *v69;
  unsigned int (*v70)(char *, uint64_t, int *);
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  id v76;
  id v77;
  __int128 v78;
  int v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  id v84;
  id v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unsigned int (*v103)(char *, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  int *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  unint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  unint64_t v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(char *, char *, void *);
  void *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  id v142;
  _QWORD *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  __int128 v156;
  _OWORD *v157;
  _OWORD *v158;
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  unsigned int (*v166)(char *, uint64_t, uint64_t);
  uint64_t v167;
  __int128 v168;
  _OWORD *v169;
  _OWORD *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  int *v178;
  uint64_t v179;
  char *v180;
  int *v181;
  unsigned int (*v182)(char *, uint64_t, int *);
  uint64_t v183;
  __int128 v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(char *, char *, uint64_t);
  id v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  __int128 v198;
  _OWORD *v199;
  _OWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  unint64_t v206;
  uint64_t v207;
  unint64_t v208;
  __int128 v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  __int128 v214;
  __int128 v215;
  void *v216;
  uint64_t v217;
  void *v218;
  uint64_t v219;
  id v220;
  id v221;
  __int128 v222;
  uint64_t v223;
  void *v224;
  id v225;
  __int128 v226;
  uint64_t v227;
  uint64_t v228;
  void *v229;
  id v230;
  _QWORD *v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  void *v238;
  id v239;
  _QWORD *v240;
  unint64_t v241;
  void *v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  uint64_t v246;
  id v247;
  id v248;
  __int128 v249;
  uint64_t v250;
  uint64_t v251;
  void *v252;
  uint64_t v253;
  char *v254;
  id v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  _QWORD *v264;
  unint64_t v265;
  uint64_t v266;
  unint64_t v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  uint64_t v272;
  uint64_t v273;
  void *v274;
  id v275;
  _QWORD *v276;
  unint64_t v277;
  uint64_t v278;
  void *v279;
  void (*v280)(char *, _QWORD, uint64_t, int *);
  id v281;
  uint64_t v282;
  char *v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  int EnumCaseMultiPayload;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  char *v294;
  __int128 v295;
  uint64_t v296;
  uint64_t v297;
  _OWORD *v298;
  _OWORD *v299;
  __int128 v300;
  _OWORD *v301;
  _OWORD *v302;
  __int128 v303;
  _QWORD *result;
  uint64_t v305;
  char *v306;
  char *v307;
  _QWORD *v308;
  void *v309;
  uint64_t v310;
  int *v311;
  char *__dst;
  void *__dsta;
  int *v314;
  uint64_t v315;
  void (*v316)(char *, char *, void *);
  _QWORD *v317;
  char *v318;
  char *v319;
  char *v320;
  char *v321;
  uint64_t v322;
  int *v323;
  char *v324;
  _QWORD *v325;
  _QWORD *v326;
  _QWORD *v327;
  _QWORD *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FeedItem(0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v12 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v12;
      v13 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v13;
      v9[32] = v10[32];
      v14 = v10 + 40;
      v15 = *((_QWORD *)v10 + 6);
      swift_bridgeObjectRetain();
      if (v15 >= 0x11)
      {
        *((_QWORD *)v9 + 5) = *v14;
        *((_QWORD *)v9 + 6) = v15;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 40) = *(_OWORD *)v14;
      }
      goto LABEL_142;
    case 1u:
      v55 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v55;
      v56 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v56;
      v9[32] = v10[32];
      v57 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v57;
      v58 = *((_QWORD *)v10 + 8);
      *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
      *((_QWORD *)v9 + 8) = v58;
      v59 = v10 + 72;
      v60 = *((_QWORD *)v10 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v60 >= 0x11)
      {
        *((_QWORD *)v9 + 9) = *v59;
        *((_QWORD *)v9 + 10) = v60;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 72) = *(_OWORD *)v59;
      }
      goto LABEL_142;
    case 2u:
      v329 = v3;
      v16 = v4;
      v17 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v17;
      v18 = (int *)type metadata accessor for FeedBannerAd();
      v19 = v18[5];
      v20 = &v9[v19];
      v21 = &v10[v19];
      v22 = sub_1BB8721C0();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      *(_QWORD *)&v9[v18[6]] = *(_QWORD *)&v10[v18[6]];
      v24 = v18[7];
      v25 = &v9[v24];
      v26 = &v10[v24];
      *(_QWORD *)v25 = *(_QWORD *)v26;
      v25[8] = v26[8];
      v27 = v18[8];
      v28 = &v9[v27];
      v29 = &v10[v27];
      v30 = *((_QWORD *)v29 + 1);
      if (v30 >= 0x11)
      {
        *(_QWORD *)v28 = *(_QWORD *)v29;
        *((_QWORD *)v28 + 1) = v30;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v28 = *(_OWORD *)v29;
      }
      v4 = v16;
      v3 = v329;
      goto LABEL_142;
    case 3u:
      v331 = v3;
      v61 = *((_QWORD *)v10 + 1);
      v325 = v4;
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v61;
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      v9[24] = v10[24];
      v62 = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 5) = v62;
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      v9[56] = v10[56];
      v314 = (int *)type metadata accessor for FeedHeadline(0);
      v63 = v314[10];
      v64 = &v9[v63];
      v65 = &v10[v63];
      *v64 = v10[v63];
      v64[1] = v10[v63 + 1];
      v66 = (int *)type metadata accessor for FeedHeadline.State(0);
      v67 = v66[6];
      __dst = &v64[v67];
      v68 = &v65[v67];
      v69 = (int *)type metadata accessor for SharedItem();
      v310 = *((_QWORD *)v69 - 1);
      v70 = *(unsigned int (**)(char *, uint64_t, int *))(v310 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v70(v68, 1, v69))
      {
        v71 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        v185 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(__dst, v68, v185);
        __dst[v69[5]] = v68[v69[5]];
        v186 = v69[6];
        v309 = *(void **)&v68[v186];
        *(_QWORD *)&__dst[v186] = v309;
        v187 = v69[7];
        v320 = &v68[v187];
        v324 = &__dst[v187];
        v188 = sub_1BB86C67C();
        v189 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 16);
        v190 = v309;
        v189(v324, v320, v188);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v310 + 56))(__dst, 0, 1, v69);
      }
      v4 = v325;
      v64[v66[7]] = v65[v66[7]];
      v64[v66[8]] = v65[v66[8]];
      v64[v66[9]] = v65[v66[9]];
      v64[v66[10]] = v65[v66[10]];
      v191 = v314[11];
      v192 = &v9[v191];
      v193 = &v10[v191];
      v194 = sub_1BB871B24();
      v195 = *(_QWORD *)(v194 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
        memcpy(v192, v193, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v192, v193, v194);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
      }
      v3 = v331;
      v203 = v314[12];
      v204 = &v9[v203];
      v205 = &v10[v203];
      v206 = *((_QWORD *)v205 + 1);
      if (v206 >= 0x11)
      {
        *(_QWORD *)v204 = *(_QWORD *)v205;
        *((_QWORD *)v204 + 1) = v206;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v204 = *(_OWORD *)v205;
      }
      v207 = v314[13];
      v208 = *(_QWORD *)&v10[v207];
      if (v208 >= 2)
      {
        if (v208 == 2)
        {
          *(_QWORD *)&v9[v207] = 2;
        }
        else
        {
          *(_QWORD *)&v9[v207] = v208;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(_QWORD *)&v9[v207] = v208;
      }
      v223 = v314[14];
      v224 = *(void **)&v10[v223];
      *(_QWORD *)&v9[v223] = v224;
      v225 = v224;
      goto LABEL_142;
    case 4u:
      v31 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v31;
      v9[16] = v10[16];
      v32 = v10 + 24;
      v33 = *((_QWORD *)v10 + 4);
      v317 = v5;
      if (v33 >= 0x11)
      {
        *((_QWORD *)v9 + 3) = *v32;
        *((_QWORD *)v9 + 4) = v33;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 24) = *(_OWORD *)v32;
      }
      v125 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v125;
      v126 = (int *)type metadata accessor for FeedWebEmbed();
      v127 = v126[8];
      v128 = &v9[v127];
      v129 = &v10[v127];
      v130 = sub_1BB86C67C();
      v131 = *(_QWORD *)(v130 - 8);
      v132 = *(void (**)(char *, char *, void *))(v131 + 16);
      v133 = (void *)v130;
      swift_bridgeObjectRetain();
      v316 = v132;
      v132(v128, v129, v133);
      v323 = v126;
      v134 = v126[9];
      v135 = &v9[v134];
      v136 = &v10[v134];
      v328 = v4;
      v334 = v3;
      __dsta = v133;
      if ((*(unsigned int (**)(char *, uint64_t, void *))(v131 + 48))(&v10[v134], 1, v133))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
      }
      else
      {
        v132(v135, v136, v133);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v131 + 56))(v135, 0, 1, v133);
      }
      v161 = v126;
      *(_QWORD *)&v9[v126[10]] = *(_QWORD *)&v10[v126[10]];
      *(_QWORD *)&v9[v126[11]] = *(_QWORD *)&v10[v126[11]];
      v162 = v126[12];
      v319 = &v9[v162];
      v163 = &v10[v162];
      v164 = type metadata accessor for FeedHeadline(0);
      v165 = *(_QWORD *)(v164 - 8);
      v166 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48);
      swift_retain();
      swift_retain();
      v5 = v317;
      if (v166(v163, 1, v164))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v319, v163, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
      }
      else
      {
        v173 = *((_QWORD *)v163 + 1);
        *(_QWORD *)v319 = *(_QWORD *)v163;
        *((_QWORD *)v319 + 1) = v173;
        *((_QWORD *)v319 + 2) = *((_QWORD *)v163 + 2);
        v319[24] = v163[24];
        v174 = *((_QWORD *)v163 + 5);
        *((_QWORD *)v319 + 4) = *((_QWORD *)v163 + 4);
        *((_QWORD *)v319 + 5) = v174;
        *((_QWORD *)v319 + 6) = *((_QWORD *)v163 + 6);
        v319[56] = v163[56];
        v311 = (int *)v164;
        v175 = *(int *)(v164 + 40);
        v176 = &v319[v175];
        v308 = v163;
        v177 = &v163[v175];
        *v176 = v163[v175];
        v176[1] = v163[v175 + 1];
        v178 = (int *)type metadata accessor for FeedHeadline.State(0);
        v179 = v178[6];
        v307 = &v176[v179];
        v180 = &v177[v179];
        v181 = (int *)type metadata accessor for SharedItem();
        v305 = *((_QWORD *)v181 - 1);
        v182 = *(unsigned int (**)(char *, uint64_t, int *))(v305 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v182(v180, 1, v181))
        {
          v183 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v307, v180, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
        }
        else
        {
          v250 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v250 - 8) + 16))(v307, v180, v250);
          v307[v181[5]] = v180[v181[5]];
          v251 = v181[6];
          v252 = *(void **)&v180[v251];
          *(_QWORD *)&v307[v251] = v252;
          v253 = v181[7];
          v306 = &v307[v253];
          v254 = &v180[v253];
          v255 = v252;
          v316(v306, v254, __dsta);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v305 + 56))(v307, 0, 1, v181);
        }
        v176[v178[7]] = v177[v178[7]];
        v176[v178[8]] = v177[v178[8]];
        v176[v178[9]] = v177[v178[9]];
        v176[v178[10]] = v177[v178[10]];
        v256 = v311[11];
        v257 = &v319[v256];
        v258 = (char *)v308 + v256;
        v259 = sub_1BB871B24();
        v260 = *(_QWORD *)(v259 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v260 + 48))(v258, 1, v259))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v257, v258, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v260 + 16))(v257, v258, v259);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v260 + 56))(v257, 0, 1, v259);
        }
        v161 = v323;
        v262 = v311[12];
        v263 = &v319[v262];
        v264 = (_QWORD *)((char *)v308 + v262);
        v265 = v264[1];
        if (v265 >= 0x11)
        {
          *(_QWORD *)v263 = *v264;
          *((_QWORD *)v263 + 1) = v265;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v263 = *(_OWORD *)v264;
        }
        v266 = v311[13];
        v267 = *(_QWORD *)((char *)v308 + v266);
        if (v267 >= 2)
        {
          if (v267 == 2)
          {
            *(_QWORD *)&v319[v266] = 2;
          }
          else
          {
            *(_QWORD *)&v319[v266] = v267;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&v319[v266] = v267;
        }
        v278 = v311[14];
        v279 = *(void **)((char *)v308 + v278);
        *(_QWORD *)&v319[v278] = v279;
        v280 = *(void (**)(char *, _QWORD, uint64_t, int *))(v165 + 56);
        v281 = v279;
        v280(v319, 0, 1, v311);
      }
      v282 = v161[13];
      v283 = &v9[v282];
      v284 = &v10[v282];
      v285 = type metadata accessor for WebEmbedDataVisualization();
      v286 = *(_QWORD *)(v285 - 8);
      v4 = v328;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v286 + 48))(v284, 1, v285))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v283, v284, *(_QWORD *)(*(_QWORD *)(v287 - 8) + 64));
        v3 = v334;
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v289 = *(_QWORD *)v284;
        if (EnumCaseMultiPayload == 1)
        {
          v290 = *((_QWORD *)v284 + 1);
          *(_QWORD *)v283 = v289;
          *((_QWORD *)v283 + 1) = v290;
          v291 = type metadata accessor for GenericDataVisualization();
          v292 = *(int *)(v291 + 20);
          v293 = &v283[v292];
          v321 = &v284[v292];
          swift_bridgeObjectRetain();
          v294 = v293;
          v4 = v328;
          v316(v294, v321, __dsta);
          *(_QWORD *)&v283[*(int *)(v291 + 24)] = *(_QWORD *)&v284[*(int *)(v291 + 24)];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_QWORD *)v283 = v289;
          swift_retain();
        }
        v3 = v334;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v286 + 56))(v283, 0, 1, v285);
      }
      v9[v323[14]] = v10[v323[14]];
      goto LABEL_142;
    case 5u:
      v72 = *(void **)v10;
      v73 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v73;
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_WORD *)v9 + 12) = *((_WORD *)v10 + 12);
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      v9[40] = v10[40];
      v74 = (void *)*((_QWORD *)v10 + 7);
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 7) = v74;
      v9[64] = v10[64];
      v75 = *((_QWORD *)v10 + 10);
      v76 = v72;
      swift_bridgeObjectRetain();
      v77 = v74;
      if (v75 == 1)
      {
        v78 = *(_OWORD *)(v10 + 88);
        *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
        *(_OWORD *)(v9 + 88) = v78;
        *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 104);
      }
      else
      {
        *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
        *((_QWORD *)v9 + 10) = v75;
        v139 = *((_QWORD *)v10 + 12);
        *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
        *((_QWORD *)v9 + 12) = v139;
        v141 = (void *)*((_QWORD *)v10 + 13);
        v140 = *((_QWORD *)v10 + 14);
        *((_QWORD *)v9 + 13) = v141;
        *((_QWORD *)v9 + 14) = v140;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v142 = v141;
      }
      v143 = v10 + 120;
      v144 = *((_QWORD *)v10 + 16);
      if (v144 >= 0x11)
      {
        *((_QWORD *)v9 + 15) = *v143;
        *((_QWORD *)v9 + 16) = v144;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 120) = *(_OWORD *)v143;
      }
      v9[136] = v10[136];
      goto LABEL_142;
    case 6u:
      v326 = v4;
      v79 = v10[281];
      if (v79 == 2)
      {
        v210 = *((_QWORD *)v10 + 1);
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = v210;
        *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
        v9[24] = v10[24];
        *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        v9[40] = v10[40];
        v211 = *((_QWORD *)v10 + 7);
        *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
        *((_QWORD *)v9 + 7) = v211;
        v212 = *((_QWORD *)v10 + 9);
        *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
        *((_QWORD *)v9 + 9) = v212;
        v213 = *((_QWORD *)v10 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v213 == 1)
        {
          v214 = *((_OWORD *)v10 + 8);
          *((_OWORD *)v9 + 7) = *((_OWORD *)v10 + 7);
          *((_OWORD *)v9 + 8) = v214;
          v9[144] = v10[144];
          v215 = *((_OWORD *)v10 + 6);
          *((_OWORD *)v9 + 5) = *((_OWORD *)v10 + 5);
          *((_OWORD *)v9 + 6) = v215;
        }
        else
        {
          v233 = v3;
          *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
          *((_QWORD *)v9 + 11) = v213;
          v234 = *((_QWORD *)v10 + 15);
          swift_bridgeObjectRetain();
          if (v234)
          {
            v235 = *((_QWORD *)v10 + 16);
            *((_QWORD *)v9 + 15) = v234;
            *((_QWORD *)v9 + 16) = v235;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v234 - 8))((uint64_t)(v9 + 96), (uint64_t)(v10 + 96), v234);
            *((_QWORD *)v9 + 17) = *((_QWORD *)v10 + 17);
          }
          else
          {
            v295 = *((_OWORD *)v10 + 7);
            *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
            *((_OWORD *)v9 + 7) = v295;
            *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
          }
          v9[144] = v10[144];
          v3 = v233;
        }
      }
      else if (v79 == 1)
      {
        v80 = *(void **)v10;
        v81 = *((_QWORD *)v10 + 1);
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = v81;
        *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
        *((_WORD *)v9 + 12) = *((_WORD *)v10 + 12);
        *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        v9[40] = v10[40];
        v82 = (void *)*((_QWORD *)v10 + 7);
        *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
        *((_QWORD *)v9 + 7) = v82;
        v9[64] = v10[64];
        v83 = *((_QWORD *)v10 + 10);
        v84 = v80;
        swift_bridgeObjectRetain();
        v85 = v82;
        if (v83 == 1)
        {
          v86 = *(_OWORD *)(v10 + 88);
          *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
          *(_OWORD *)(v9 + 88) = v86;
          *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 104);
        }
        else
        {
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
          *((_QWORD *)v9 + 10) = v83;
          v227 = *((_QWORD *)v10 + 12);
          *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
          *((_QWORD *)v9 + 12) = v227;
          v229 = (void *)*((_QWORD *)v10 + 13);
          v228 = *((_QWORD *)v10 + 14);
          *((_QWORD *)v9 + 13) = v229;
          *((_QWORD *)v9 + 14) = v228;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v230 = v229;
        }
        v231 = v10 + 120;
        v232 = *((_QWORD *)v10 + 16);
        if (v232 >= 0x11)
        {
          *((_QWORD *)v9 + 15) = *v231;
          *((_QWORD *)v9 + 16) = v232;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v9 + 120) = *(_OWORD *)v231;
        }
        v242 = (void *)*((_QWORD *)v10 + 18);
        v9[136] = v10[136];
        if (v242)
        {
          v243 = *((_QWORD *)v10 + 19);
          v244 = *((_QWORD *)v10 + 20);
          *((_QWORD *)v9 + 18) = v242;
          *((_QWORD *)v9 + 19) = v243;
          *((_QWORD *)v9 + 20) = v244;
          *((_WORD *)v9 + 84) = *((_WORD *)v10 + 84);
          *((_QWORD *)v9 + 22) = *((_QWORD *)v10 + 22);
          v9[184] = v10[184];
          v245 = (void *)*((_QWORD *)v10 + 25);
          *((_QWORD *)v9 + 24) = *((_QWORD *)v10 + 24);
          *((_QWORD *)v9 + 25) = v245;
          v9[208] = v10[208];
          v246 = *((_QWORD *)v10 + 28);
          v247 = v242;
          swift_bridgeObjectRetain();
          v248 = v245;
          if (v246 == 1)
          {
            v249 = *(_OWORD *)(v10 + 232);
            *(_OWORD *)(v9 + 216) = *(_OWORD *)(v10 + 216);
            *(_OWORD *)(v9 + 232) = v249;
            *(_OWORD *)(v9 + 248) = *(_OWORD *)(v10 + 248);
          }
          else
          {
            *((_QWORD *)v9 + 27) = *((_QWORD *)v10 + 27);
            *((_QWORD *)v9 + 28) = v246;
            v272 = *((_QWORD *)v10 + 30);
            *((_QWORD *)v9 + 29) = *((_QWORD *)v10 + 29);
            *((_QWORD *)v9 + 30) = v272;
            v274 = (void *)*((_QWORD *)v10 + 31);
            v273 = *((_QWORD *)v10 + 32);
            *((_QWORD *)v9 + 31) = v274;
            *((_QWORD *)v9 + 32) = v273;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v275 = v274;
          }
          v276 = v10 + 264;
          v277 = *((_QWORD *)v10 + 34);
          if (v277 >= 0x11)
          {
            *((_QWORD *)v9 + 33) = *v276;
            *((_QWORD *)v9 + 34) = v277;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v9 + 264) = *(_OWORD *)v276;
          }
          v9[280] = v10[280];
        }
        else
        {
          v268 = *((_OWORD *)v10 + 16);
          *((_OWORD *)v9 + 15) = *((_OWORD *)v10 + 15);
          *((_OWORD *)v9 + 16) = v268;
          *(_OWORD *)(v9 + 265) = *(_OWORD *)(v10 + 265);
          v269 = *((_OWORD *)v10 + 12);
          *((_OWORD *)v9 + 11) = *((_OWORD *)v10 + 11);
          *((_OWORD *)v9 + 12) = v269;
          v270 = *((_OWORD *)v10 + 14);
          *((_OWORD *)v9 + 13) = *((_OWORD *)v10 + 13);
          *((_OWORD *)v9 + 14) = v270;
          v271 = *((_OWORD *)v10 + 10);
          *((_OWORD *)v9 + 9) = *((_OWORD *)v10 + 9);
          *((_OWORD *)v9 + 10) = v271;
        }
      }
      else
      {
        v216 = *(void **)v10;
        v217 = *((_QWORD *)v10 + 1);
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = v217;
        *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
        *((_WORD *)v9 + 12) = *((_WORD *)v10 + 12);
        *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        v9[40] = v10[40];
        v218 = (void *)*((_QWORD *)v10 + 7);
        *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
        *((_QWORD *)v9 + 7) = v218;
        v9[64] = v10[64];
        v219 = *((_QWORD *)v10 + 10);
        v220 = v216;
        swift_bridgeObjectRetain();
        v221 = v218;
        if (v219 == 1)
        {
          v222 = *(_OWORD *)(v10 + 88);
          *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
          *(_OWORD *)(v9 + 88) = v222;
          *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 104);
        }
        else
        {
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
          *((_QWORD *)v9 + 10) = v219;
          v236 = *((_QWORD *)v10 + 12);
          *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
          *((_QWORD *)v9 + 12) = v236;
          v238 = (void *)*((_QWORD *)v10 + 13);
          v237 = *((_QWORD *)v10 + 14);
          *((_QWORD *)v9 + 13) = v238;
          *((_QWORD *)v9 + 14) = v237;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v239 = v238;
        }
        v240 = v10 + 120;
        v241 = *((_QWORD *)v10 + 16);
        if (v241 >= 0x11)
        {
          *((_QWORD *)v9 + 15) = *v240;
          *((_QWORD *)v9 + 16) = v241;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v9 + 120) = *(_OWORD *)v240;
        }
        v9[136] = v10[136];
      }
      v9[281] = v79;
      swift_storeEnumTagMultiPayload();
      v4 = v326;
      break;
    case 7u:
      v87 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v87;
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      v9[24] = v10[24];
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      v9[40] = v10[40];
      v88 = *((_QWORD *)v10 + 7);
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 7) = v88;
      v89 = *((_QWORD *)v10 + 9);
      *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
      *((_QWORD *)v9 + 9) = v89;
      v90 = *((_QWORD *)v10 + 11);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v90 == 1)
      {
        v91 = *((_OWORD *)v10 + 8);
        *((_OWORD *)v9 + 7) = *((_OWORD *)v10 + 7);
        *((_OWORD *)v9 + 8) = v91;
        v9[144] = v10[144];
        v92 = *((_OWORD *)v10 + 6);
        *((_OWORD *)v9 + 5) = *((_OWORD *)v10 + 5);
        *((_OWORD *)v9 + 6) = v92;
      }
      else
      {
        v145 = v3;
        *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
        *((_QWORD *)v9 + 11) = v90;
        v146 = *((_QWORD *)v10 + 15);
        swift_bridgeObjectRetain();
        if (v146)
        {
          v147 = *((_QWORD *)v10 + 16);
          *((_QWORD *)v9 + 15) = v146;
          *((_QWORD *)v9 + 16) = v147;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v146 - 8))((uint64_t)(v9 + 96), (uint64_t)(v10 + 96), v146);
          *((_QWORD *)v9 + 17) = *((_QWORD *)v10 + 17);
        }
        else
        {
          v226 = *((_OWORD *)v10 + 7);
          *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
          *((_OWORD *)v9 + 7) = v226;
          *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
        }
        v9[144] = v10[144];
        v3 = v145;
      }
      goto LABEL_142;
    case 8u:
      v332 = v3;
      v327 = v4;
      v93 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v93;
      v94 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v95 = &v9[v94];
      v96 = &v10[v94];
      v97 = *(_QWORD *)&v10[v94 + 8];
      *(_QWORD *)v95 = *(_QWORD *)&v10[v94];
      *((_QWORD *)v95 + 1) = v97;
      v98 = *(_QWORD *)&v10[v94 + 24];
      *((_QWORD *)v95 + 2) = *(_QWORD *)&v10[v94 + 16];
      *((_QWORD *)v95 + 3) = v98;
      v99 = type metadata accessor for FormatCustomItem.Resolved();
      v100 = *(int *)(v99 + 24);
      v318 = &v95[v100];
      v322 = v99;
      v101 = &v96[v100];
      v102 = type metadata accessor for FormatCustomItem.Action();
      v315 = *(_QWORD *)(v102 - 8);
      v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v315 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v103(v101, 1, v102))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v318, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        v197 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(v318, v101, v197);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v315 + 56))(v318, 0, 1, v102);
      }
      v4 = v327;
      v3 = v332;
      *(_QWORD *)&v95[*(int *)(v322 + 28)] = *(_QWORD *)&v96[*(int *)(v322 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 9u:
      v34 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v34;
      v35 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v35;
      v36 = *((_QWORD *)v10 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v36)
      {
        v37 = *((_QWORD *)v10 + 8);
        *((_QWORD *)v9 + 7) = v36;
        *((_QWORD *)v9 + 8) = v37;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v36 - 8))((uint64_t)(v9 + 32), (uint64_t)(v10 + 32), v36);
      }
      else
      {
        v156 = *((_OWORD *)v10 + 3);
        *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
        *((_OWORD *)v9 + 3) = v156;
        *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
      }
      v157 = v9 + 72;
      v158 = v10 + 72;
      v159 = *((_QWORD *)v10 + 12);
      if (v159)
      {
        v160 = *((_QWORD *)v10 + 13);
        *((_QWORD *)v9 + 12) = v159;
        *((_QWORD *)v9 + 13) = v160;
        (**(void (***)(_OWORD *, _OWORD *))(v159 - 8))(v157, v158);
      }
      else
      {
        v168 = *(_OWORD *)(v10 + 88);
        *v157 = *v158;
        *(_OWORD *)(v9 + 88) = v168;
        *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      }
      v169 = v9 + 112;
      v170 = v10 + 112;
      v171 = *((_QWORD *)v10 + 17);
      if (v171)
      {
        v172 = *((_QWORD *)v10 + 18);
        *((_QWORD *)v9 + 17) = v171;
        *((_QWORD *)v9 + 18) = v172;
        (**(void (***)(_OWORD *, _OWORD *))(v171 - 8))(v169, v170);
      }
      else
      {
        v184 = *((_OWORD *)v10 + 8);
        *v169 = *v170;
        *((_OWORD *)v9 + 8) = v184;
        *((_QWORD *)v9 + 18) = *((_QWORD *)v10 + 18);
      }
      goto LABEL_142;
    case 0xAu:
      v333 = v3;
      v105 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v105;
      v106 = (int *)type metadata accessor for FeedEngagementBanner();
      v107 = v106[5];
      v108 = &v9[v107];
      v109 = &v10[v107];
      v110 = sub_1BB86EDAC();
      v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
      swift_bridgeObjectRetain();
      v111(v108, v109, v110);
      *(_QWORD *)&v9[v106[6]] = *(_QWORD *)&v10[v106[6]];
      v112 = v106[7];
      v113 = &v9[v112];
      v114 = &v10[v112];
      *(_QWORD *)v113 = *(_QWORD *)v114;
      v113[8] = v114[8];
      v115 = v106[8];
      v116 = &v9[v115];
      v117 = &v10[v115];
      v118 = *((_QWORD *)v117 + 1);
      if (v118 >= 0x11)
      {
        *(_QWORD *)v116 = *(_QWORD *)v117;
        *((_QWORD *)v116 + 1) = v118;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v116 = *(_OWORD *)v117;
      }
      v3 = v333;
      goto LABEL_142;
    case 0xBu:
      *(_QWORD *)v9 = *(_QWORD *)v10;
      swift_retain();
      goto LABEL_142;
    case 0xCu:
      v38 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v38;
      v39 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v39;
      v9[32] = v10[32];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_142;
    case 0xDu:
      v119 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v119;
      v9[16] = v10[16];
      v120 = v10 + 24;
      v121 = *((_QWORD *)v10 + 4);
      if (v121 >= 0x11)
      {
        *((_QWORD *)v9 + 3) = *v120;
        *((_QWORD *)v9 + 4) = v121;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 24) = *(_OWORD *)v120;
      }
      v148 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v148;
      v149 = (void *)*((_QWORD *)v10 + 8);
      *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
      *((_QWORD *)v9 + 8) = v149;
      v9[72] = v10[72];
      *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
      v150 = *((_QWORD *)v10 + 14);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v151 = v149;
      swift_bridgeObjectRetain();
      if (v150)
      {
        v152 = *((_QWORD *)v10 + 15);
        *((_QWORD *)v9 + 14) = v150;
        *((_QWORD *)v9 + 15) = v152;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v150 - 8))((uint64_t)(v9 + 88), (uint64_t)(v10 + 88), v150);
      }
      else
      {
        v198 = *(_OWORD *)(v10 + 104);
        *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
        *(_OWORD *)(v9 + 104) = v198;
        *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      }
      v199 = v9 + 128;
      v200 = v10 + 128;
      v201 = *((_QWORD *)v10 + 19);
      if (v201)
      {
        v202 = *((_QWORD *)v10 + 20);
        *((_QWORD *)v9 + 19) = v201;
        *((_QWORD *)v9 + 20) = v202;
        (**(void (***)(_OWORD *, _OWORD *))(v201 - 8))(v199, v200);
      }
      else
      {
        v209 = *((_OWORD *)v10 + 9);
        *v199 = *v200;
        *((_OWORD *)v9 + 9) = v209;
        *((_QWORD *)v9 + 20) = *((_QWORD *)v10 + 20);
      }
      goto LABEL_142;
    case 0xEu:
      v40 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v40;
      v9[16] = v10[16];
      v41 = v10 + 24;
      v42 = *((_QWORD *)v10 + 4);
      if (v42 >= 0x11)
      {
        *((_QWORD *)v9 + 3) = *v41;
        *((_QWORD *)v9 + 4) = v42;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 24) = *(_OWORD *)v41;
      }
      v138 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v138;
      *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_142;
    case 0xFu:
      v122 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v122;
      v9[16] = v10[16];
      v123 = v10 + 24;
      v124 = *((_QWORD *)v10 + 4);
      if (v124 >= 0x11)
      {
        *((_QWORD *)v9 + 3) = *v123;
        *((_QWORD *)v9 + 4) = v124;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 24) = *(_OWORD *)v123;
      }
      v153 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v153;
      v154 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)&v9[v154] = *(_QWORD *)&v10[v154];
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v155 = (char *)&loc_1BA641E7C + 4 * word_1BB8ED6F2[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x10u:
      v330 = v3;
      v43 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v43;
      v44 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v44;
      v45 = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 5) = v45;
      *((_WORD *)v9 + 24) = *((_WORD *)v10 + 24);
      *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
      v46 = *((_QWORD *)v10 + 10);
      *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
      *((_QWORD *)v9 + 10) = v46;
      v47 = *((_QWORD *)v10 + 12);
      *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
      *((_QWORD *)v9 + 12) = v47;
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      v9[112] = v10[112];
      v48 = *((_QWORD *)v10 + 16);
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      *((_QWORD *)v9 + 16) = v48;
      v9[136] = v10[136];
      v49 = *((_QWORD *)v10 + 19);
      *((_QWORD *)v9 + 18) = *((_QWORD *)v10 + 18);
      *((_QWORD *)v9 + 19) = v49;
      v50 = *((_QWORD *)v10 + 21);
      *((_QWORD *)v9 + 20) = *((_QWORD *)v10 + 20);
      *((_QWORD *)v9 + 21) = v50;
      v9[184] = v10[184];
      *((_QWORD *)v9 + 22) = *((_QWORD *)v10 + 22);
      v51 = *((_QWORD *)v10 + 25);
      *((_QWORD *)v9 + 24) = *((_QWORD *)v10 + 24);
      *((_QWORD *)v9 + 25) = v51;
      v9[224] = v10[224];
      v52 = *((_QWORD *)v10 + 27);
      *((_QWORD *)v9 + 26) = *((_QWORD *)v10 + 26);
      *((_QWORD *)v9 + 27) = v52;
      v53 = v10 + 232;
      v54 = *((_QWORD *)v10 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v54 >= 0x11)
      {
        *((_QWORD *)v9 + 29) = *v53;
        *((_QWORD *)v9 + 30) = v54;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 232) = *(_OWORD *)v53;
      }
      v3 = v330;
LABEL_142:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      break;
  }
  v296 = *(int *)(v3 + 32);
  v297 = *(int *)(v3 + 36);
  v298 = (_OWORD *)((char *)v5 + v296);
  v299 = (_OWORD *)((char *)v4 + v296);
  v300 = v299[1];
  *v298 = *v299;
  v298[1] = v300;
  v301 = (_OWORD *)((char *)v5 + v297);
  v302 = (_OWORD *)((char *)v4 + v297);
  v303 = v302[1];
  *v301 = *v302;
  v301[1] = v303;
  return v5;
}

void destroy for FormatItemNodeLayoutContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  int EnumCaseMultiPayload;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 48) < 0x11uLL)
        return;
      goto LABEL_71;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 80) < 0x11uLL)
        return;
      goto LABEL_71;
    case 2u:
      swift_bridgeObjectRelease();
      v5 = type metadata accessor for FeedBannerAd();
      v6 = v4 + *(int *)(v5 + 20);
      v7 = sub_1BB8721C0();
      goto LABEL_53;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v8 = (int *)type metadata accessor for FeedHeadline(0);
      v9 = v4 + v8[10];
      v10 = v9 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v11 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
      {
        v12 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);

        v13 = v10 + *(int *)(v11 + 28);
        v14 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      }
      v15 = v4 + v8[11];
      v16 = sub_1BB871B24();
      v17 = *(_QWORD *)(v16 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      if (*(_QWORD *)(v4 + v8[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + v8[13]) >= 3uLL)
        swift_unknownObjectRelease();

      return;
    case 4u:
      if (*(_QWORD *)(v4 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = (int *)type metadata accessor for FeedWebEmbed();
      v19 = v4 + v18[8];
      v20 = sub_1BB86C67C();
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v22(v19, v20);
      v23 = v4 + v18[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v20))
        v22(v23, v20);
      swift_release();
      swift_release();
      v24 = v4 + v18[12];
      v25 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v25 - 1) + 48))(v24, 1, v25))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v26 = v25[10];
        v27 = v24 + v26 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v28 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v27, 1, v28))
        {
          v29 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v27, v29);

          v22(v27 + *(int *)(v28 + 28), v20);
        }
        v30 = v24 + v25[11];
        v31 = sub_1BB871B24();
        v32 = *(_QWORD *)(v31 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
          (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
        if (*(_QWORD *)(v24 + v25[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        if (*(_QWORD *)(v24 + v25[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v33 = v4 + v18[13];
      v34 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v33, 1, v34))
        return;
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_55;
      swift_bridgeObjectRelease();
      v35 = type metadata accessor for GenericDataVisualization();
      v22(v33 + *(int *)(v35 + 20), v20);
      goto LABEL_71;
    case 5u:
      goto LABEL_36;
    case 6u:
      v36 = *(unsigned __int8 *)(v4 + 281);
      if (v36 == 2)
        goto LABEL_40;
      if (v36 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v4 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v4 + 128) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v44 = *(void **)(v4 + 144);
        if (!v44)
          return;

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v4 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v4 + 272) < 0x11uLL)
          return;
LABEL_71:
        swift_bridgeObjectRelease();
        return;
      }
      if (*(_BYTE *)(v4 + 281))
        return;
LABEL_36:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(v4 + 128) >= 0x11uLL)
        goto LABEL_71;
      return;
    case 7u:
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 88) == 1)
        return;
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v4 + 120))
        return;
      v37 = v4 + 96;
      goto LABEL_62;
    case 8u:
      swift_bridgeObjectRelease();
      v38 = v4 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = v38 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v40 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40))
      {
        v41 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v39, v41);
      }
      goto LABEL_71;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 56))
        __swift_destroy_boxed_opaque_existential_1(v4 + 32);
      if (*(_QWORD *)(v4 + 96))
        __swift_destroy_boxed_opaque_existential_1(v4 + 72);
      if (!*(_QWORD *)(v4 + 136))
        return;
      v37 = v4 + 112;
      goto LABEL_62;
    case 0xAu:
      swift_bridgeObjectRelease();
      v5 = type metadata accessor for FeedEngagementBanner();
      v6 = v4 + *(int *)(v5 + 20);
      v7 = sub_1BB86EDAC();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      if (*(_QWORD *)(v4 + *(int *)(v5 + 32) + 8) < 0x11uLL)
        return;
      goto LABEL_71;
    case 0xBu:
LABEL_55:
      swift_release();
      return;
    case 0xCu:
      goto LABEL_65;
    case 0xDu:
      if (*(_QWORD *)(v4 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 112))
        __swift_destroy_boxed_opaque_existential_1(v4 + 88);
      if (!*(_QWORD *)(v4 + 152))
        return;
      v37 = v4 + 128;
LABEL_62:
      __swift_destroy_boxed_opaque_existential_1(v37);
      return;
    case 0xEu:
      if (*(_QWORD *)(v4 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_65:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return;
    case 0xFu:
      if (*(_QWORD *)(v4 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v42 = v4 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v43 = v42 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_90;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v46 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v43, 1, v46))
            {
              v47 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v43, v47);
            }
          }
          v48 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v49 = v43 + *(int *)(v48 + 20);
          v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 5 || v50 == 4)
          {
            v51 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v49, 1, v51))
            {
              v52 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v49, v52);
            }
          }
          v43 += *(int *)(v48 + 24);
LABEL_90:
          v53 = swift_getEnumCaseMultiPayload();
          if (v53 == 5 || v53 == 4)
          {
            v54 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v43, 1, v54))goto LABEL_103;
          }
          return;
        case 2u:
          v55 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v43, 1, v55))
            return;
          v56 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v43, v56);
          v57 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v58 = v43 + *(int *)(v57 + 24);
          swift_bridgeObjectRelease();
          v59 = *(_QWORD *)(v58 + 24);
          if (v59 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v58 + 16), v59);
          goto LABEL_71;
        case 3u:
          v60 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v61 = v43 + *(int *)(v60 + 24);
          v62 = type metadata accessor for PuzzleStreak();
          v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48);
          if (!v63(v61, 1, v62))
          {
            v64 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v61, v64);
          }
          v43 += *(int *)(v60 + 28);
          if (v63(v43, 1, v62))
            return;
LABEL_103:
          v65 = sub_1BB86BEC0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v43, v65);
          return;
        default:
          return;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 240) >= 0x11uLL)
        goto LABEL_71;
      return;
    default:
      return;
  }
}

uint64_t sub_1BA643F0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorBinding.init(from:)(a1, a2);
}

uint64_t FormatColorBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  __int128 v23;
  uint64_t v24;

  v3 = v2;
  v24 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA6443C0();
    v23 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X9 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726AF48;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA64437C()
{
  unint64_t result;

  result = qword_1ED3B5E38;
  if (!qword_1ED3B5E38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionBinding, &type metadata for FormatOptionBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3B5E38);
  }
  return result;
}

unint64_t sub_1BA6443C0()
{
  unint64_t result;

  result = qword_1ED3C7BB8;
  if (!qword_1ED3C7BB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCAE8, &_s10CodingTypeON_115);
    atomic_store(result, (unint64_t *)&qword_1ED3C7BB8);
  }
  return result;
}

unint64_t sub_1BA644404()
{
  unint64_t result;

  result = qword_1ED3B66A0;
  if (!qword_1ED3B66A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Color, &type metadata for FormatHeadlineBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1ED3B66A0);
  }
  return result;
}

unint64_t sub_1BA644448()
{
  unint64_t result;

  result = qword_1ED3C7790;
  if (!qword_1ED3C7790)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Color, &type metadata for FormatTagBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1ED3C7790);
  }
  return result;
}

uint64_t sub_1BA64448C@<X0>(uint64_t *a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v5;

  return sub_1BA6444B0(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), a1, a2, a3, a4, a5);
}

uint64_t sub_1BA6444B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, CGFloat a9@<D0>, CGFloat a10@<D1>, CGFloat a11@<D2>, CGFloat a12@<D3>)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  char v35;
  id v36;
  char *v37;
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  unint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;

  v86 = a7;
  v84 = a5;
  v83 = (_QWORD *)a4;
  v80 = a3;
  v85 = a8;
  sub_1BA7226D8();
  MEMORY[0x1E0C80A78](v19);
  v81 = (uint64_t)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v82 = (uint64_t)&v75 - v22;
  v79 = type metadata accessor for FormatNodeStateData.Data();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v24 = (uint64_t *)((char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v77 = sub_1BB86C8B0();
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v26 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1BB86D9CC();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = a1;
  v88 = a2;
  v31 = sub_1BB86D6CC();
  if (!v31)
  {
    v95 = 0u;
    v96 = 0u;
    v33 = v24;
LABEL_10:
    sub_1BA6EDA74((uint64_t)&v95);
    goto LABEL_11;
  }
  v32 = v31;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v30, *MEMORY[0x1E0DB6150], v27);
  v33 = v24;
  if (*(_QWORD *)(v32 + 16) && (v34 = sub_1BA64531C((uint64_t)v30), (v35 & 1) != 0))
  {
    sub_1BA747A10(*(_QWORD *)(v32 + 56) + 32 * v34, (uint64_t)&v95);
  }
  else
  {
    v95 = 0u;
    v96 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  if (!*((_QWORD *)&v96 + 1))
    goto LABEL_10;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9860);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v36 = v93;
    sub_1BB86C8A4();
    sub_1BA732C20(0);
    v37 = (char *)swift_allocObject();
    *((_QWORD *)v37 + 4) = v36;
    *(_QWORD *)&v37[*(_QWORD *)(*(_QWORD *)v37 + 112)] = v36;
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(&v37[*(_QWORD *)(*(_QWORD *)v37 + 104)], v26, v77);
    *((_QWORD *)v37 + 2) = 0;
    v37[24] = -1;
    v38 = &v37[*(_QWORD *)(*(_QWORD *)v37 + 120)];
    type metadata accessor for FormatTextLink();
    *(_QWORD *)v38 = 0;
    *((_QWORD *)v38 + 1) = 0;
    swift_allocObject();
    v39 = v36;
    v40 = sub_1BA644F74(v39, a9, a10, a11, a12);
    type metadata accessor for FormatText();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v37;
    *(_QWORD *)(v41 + 24) = v40;
    *v33 = v41;
    v42 = v79;
    swift_storeEnumTagMultiPayload();
    v43 = v82;
    sub_1BA4C2DD8((uint64_t)v33, v82, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v43, 0, 1, v42);
    v44 = v81;
    sub_1BA4C2DD8(v43, v81, (uint64_t (*)(_QWORD))sub_1BA7226D8);
    swift_beginAccess();
    swift_retain();
    v45 = v88;
    swift_bridgeObjectRetain();
    sub_1BA722740(v44, v87, v45);
    swift_endAccess();
    sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))sub_1BA7226D8);

    goto LABEL_13;
  }
LABEL_11:
  v46 = v83[2];
  v47 = *(void **)(v46 + 32);
  type metadata accessor for FormatTextLink();
  swift_allocObject();
  v48 = sub_1BA644F74(v47, a9, a10, a11, a12);
  if (!v48)
    goto LABEL_14;
  v49 = v48;
  type metadata accessor for FormatText();
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = v46;
  *(_QWORD *)(v50 + 24) = v49;
  *v33 = v50;
  v51 = v79;
  swift_storeEnumTagMultiPayload();
  v52 = v82;
  sub_1BA4C2DD8((uint64_t)v33, v82, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v52, 0, 1, v51);
  v53 = v81;
  sub_1BA4C2DD8(v52, v81, (uint64_t (*)(_QWORD))sub_1BA7226D8);
  swift_beginAccess();
  swift_retain();
  swift_retain();
  v54 = v88;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BA722740(v53, v87, v54);
  swift_endAccess();
  sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))sub_1BA7226D8);
  swift_release();
LABEL_13:
  swift_release();
  sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
LABEL_14:
  v55 = v84;
  v56 = *(_QWORD *)(v84 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_unownedRetainStrong();
  swift_beginAccess();
  v58 = *(_QWORD **)(a6 + 16);
  v57 = *(_QWORD *)(a6 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  v59 = *(_QWORD *)(v56 + 40);
  if (v59)
  {
    v93 = *(id *)(v56 + 32);
    v94 = v59;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v60);
    sub_1BB872AFC(v61);
    swift_bridgeObjectRelease();
    v58 = v93;
    v57 = v94;
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  v62 = *(_QWORD *)(a6 + 24);
  v82 = *(_QWORD *)(a6 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  swift_unownedRetainStrong();
  v63 = *(_QWORD *)(a6 + 40);
  swift_retain();
  swift_release();
  v83 = v58;
  if (v63)
  {
    v64 = *(_QWORD *)(v63 + 16);
    swift_retain();
    swift_release();
  }
  else
  {
    v64 = 0;
  }
  v65 = swift_allocObject();
  v97 = v64;
  swift_unownedRetainStrong();
  swift_beginAccess();
  v81 = *(_QWORD *)(a6 + 112);
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  v66 = *(_QWORD *)(a6 + 120);
  sub_1BA67D3F4(v66);
  swift_release();
  v91 = v66;
  sub_1BA67C978(v55, &v92);
  sub_1BA6EEDB4(v66);
  swift_unownedRetainStrong();
  swift_beginAccess();
  LOBYTE(v66) = *(_BYTE *)(a6 + 128);
  swift_release();
  sub_1BB86DD80();
  v67 = v89;
  swift_unownedRetainStrong();
  v68 = *(_QWORD *)(a6 + 136);
  v69 = *(_BYTE *)(a6 + 144);
  swift_release();
  v89 = v68;
  v90 = v69;
  swift_unownedRetainStrong();
  v71 = *(_QWORD *)(a6 + 160);
  v70 = *(_QWORD *)(a6 + 168);
  swift_bridgeObjectRetain();
  swift_release();
  type metadata accessor for FormatTextNodeLayoutAttributes();
  swift_allocObject();
  v72 = v86;
  swift_retain();
  v73 = v88;
  swift_bridgeObjectRetain();
  result = FormatTextNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(v87, v73, (uint64_t)v83, v57, v82, v62, v72, &v97, a9, a10, a11, a12, v81, &v92, v66, v67, &v89, v71, v70);
  *(_QWORD *)(v65 + 16) = result;
  *v85 = v65 | 0x2000000000000000;
  return result;
}

uint64_t type metadata accessor for FormatTextNodeLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t FormatTextNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[128];
  __int128 v30[8];

  v21 = *a8;
  v22 = *a14;
  v23 = *a17;
  v24 = *((_BYTE *)a17 + 8);
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  *(_QWORD *)(v19 + 32) = a3;
  *(_QWORD *)(v19 + 40) = a4;
  *(_QWORD *)(v19 + 48) = a5;
  *(_QWORD *)(v19 + 56) = a6;
  *(double *)(v19 + 64) = a9;
  *(double *)(v19 + 72) = a10;
  *(double *)(v19 + 80) = a11;
  *(double *)(v19 + 88) = a12;
  *(_QWORD *)(v19 + 96) = a7;
  *(_QWORD *)(v19 + 104) = v21;
  *(_QWORD *)(v19 + 112) = a13;
  *(_QWORD *)(v19 + 120) = v22;
  swift_beginAccess();
  *(_BYTE *)(v19 + 128) = a15;
  *(_QWORD *)(v19 + 136) = a16;
  *(_QWORD *)(v19 + 144) = v23;
  *(_BYTE *)(v19 + 152) = v24;
  *(_QWORD *)(v19 + 160) = a18;
  *(_QWORD *)(v19 + 168) = a19;
  if (a7)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F90, (uint64_t (*)(uint64_t))sub_1BAA7FD74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA7443B4(a7 + 64, (uint64_t)v29);
    sub_1BA7443B4((uint64_t)v29, (uint64_t)v30);
    if (sub_1BAB05F98((uint64_t)v30) == 1)
    {
      *(_QWORD *)(inited + 64) = 0;
      *(_OWORD *)(inited + 32) = 0u;
      *(_OWORD *)(inited + 48) = 0u;
    }
    else
    {
      *(_QWORD *)(inited + 56) = &type metadata for FormatFill;
      *(_QWORD *)(inited + 64) = &protocol witness table for FormatFill;
      v27 = swift_allocObject();
      *(_QWORD *)(inited + 32) = v27;
      sub_1BA7439D4(v30, v27 + 16);
    }
    swift_retain_n();
    swift_retain();
    sub_1BB539598((uint64_t)v29);
    v26 = sub_1BA67DB8C(inited);
    swift_setDeallocating();
    sub_1BAA7FD74(0);
    swift_arrayDestroy();
    swift_release();
    swift_release_n();
  }
  else
  {
    v26 = MEMORY[0x1E0DEE9E8];
  }
  *(_QWORD *)(v19 + 176) = v26;
  return v19;
}

uint64_t type metadata accessor for FormatTextLink()
{
  return objc_opt_self();
}

uint64_t sub_1BA644F74(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t result;
  id v17;
  id v18;
  id v19;
  double x;
  double y;
  double width;
  double height;
  CGFloat v24;
  CGFloat v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _QWORD aBlock[6];
  uint64_t v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v31 = MEMORY[0x1E0DEE9D8];
  v11 = objc_msgSend(a1, sel_length);
  v12 = *MEMORY[0x1E0DC10F8];
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = &v31;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BA5D1CC8;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_1BA4D7950;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA5D1C30;
  aBlock[3] = &block_descriptor_19;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateAttribute_inRange_options_usingBlock_, v12, 0, v11, 0, v15);
  _Block_release(v15);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v11 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (*(_QWORD *)(v31 + 16))
    {
      v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1280]), sel_init);
      v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12C0]), sel_initWithSize_, 0.0, 0.0);
      v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1320]), sel_initWithAttributedString_, a1);
      objc_msgSend(v17, sel_addTextContainer_, v18);
      objc_msgSend(v19, sel_addLayoutManager_, v17);
      objc_msgSend(v18, sel_setLineFragmentPadding_, 0.0);
      objc_msgSend(v18, sel_setLineBreakMode_, 4);
      objc_msgSend(v18, sel_setMaximumNumberOfLines_, 0);
      objc_msgSend(v18, sel_setSize_, a4, a5);
      objc_msgSend(v17, sel_usedRectForTextContainer_, v18);
      v33 = CGRectIntegral(v32);
      x = v33.origin.x;
      y = v33.origin.y;
      width = v33.size.width;
      height = v33.size.height;
      v33.origin.x = a2;
      v33.origin.y = a3;
      v33.size.width = a4;
      v33.size.height = a5;
      v24 = (CGRectGetWidth(v33) - width) * 0.5 - x;
      v34.origin.x = a2;
      v34.origin.y = a3;
      v34.size.width = a4;
      v34.size.height = a5;
      v25 = CGRectGetHeight(v34);
      *(CGFloat *)(v5 + 24) = v24;
      *(CGFloat *)(v5 + 32) = (v25 - height) * 0.5 - y;
      MEMORY[0x1E0C80A78](v26);
      v29[2] = v17;
      v29[3] = v18;
      v27 = swift_bridgeObjectRetain();
      v28 = sub_1BAAC581C(v27, (void (*)(_QWORD, _QWORD, char *))sub_1BAAC5814, (uint64_t)v29);

      swift_bridgeObjectRelease();
      *(_QWORD *)(v5 + 16) = v28;
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_deallocPartialClassInstance();
      swift_release();
      return 0;
    }
    return v5;
  }
  return result;
}

unint64_t sub_1BA64531C(uint64_t a1)
{
  return sub_1BB4AB684(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6158], &qword_1ED39EDB8, MEMORY[0x1E0DB6160], (void (*)(uint64_t))sub_1BB4CD500);
}

unint64_t sub_1BA645340(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, unint64_t, uint64_t, __n128);
  uint64_t v17;
  char v18;
  uint64_t v20;
  void (*v21)(uint64_t);

  v20 = a1;
  v21 = a4;
  v5 = v4;
  v7 = a3(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9.n128_f64[0] = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - v10;
  v12 = -1 << *(_BYTE *)(v5 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v5 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v8 + 72);
    v16 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16);
    do
    {
      v17 = v16(v11, *(_QWORD *)(v5 + 48) + v15 * v13, v7, v9);
      v21(v17);
      v18 = sub_1BB872958();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      if ((v18 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1BA645468@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_1BA645488(a1, a2);
}

unint64_t sub_1BA645488@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;

  v3 = v2;
  v6 = sub_1BB8726B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v9 = sub_1BB87345C();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = sub_1BB8726D0();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v6 = type metadata accessor for DisposablePuzzleHistoryObserver();
  v9 = (_QWORD *)swift_allocObject();
  v9[3] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v9[3] = a1;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  v11 = (_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistoryObservers);
  swift_beginAccess();
  v12 = swift_retain();
  MEMORY[0x1BCCE36AC](v12);
  if (*(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_5:
    sub_1BB872E44();
  sub_1BB872E8C();
  sub_1BB872DCC();
  swift_endAccess();
  a2[3] = v6;
  result = sub_1BB5DF3DC();
  a2[4] = result;
  *a2 = v9;
  return result;
}

uint64_t type metadata accessor for DisposablePuzzleHistoryObserver()
{
  return objc_opt_self();
}

uint64_t sub_1BA645668@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextContent.init(from:)(a1, a2);
}

uint64_t FormatTextContent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (**v7)(char *, _QWORD);
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[4];
  uint64_t v23;
  void (**v24)(char *, _QWORD);
  __int128 v25;
  uint64_t v27;

  v27 = a2;
  v3 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v23 = v6;
  v7 = *(void (***)(char *, _QWORD))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v10 = v24;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
    goto LABEL_10;
  v22[1] = v5;
  v22[2] = v3;
  v24 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v14 = v23;
  if ((v13 & 1) == 0)
  {
LABEL_8:
    sub_1BA646304();
    v25 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v15 = sub_1BB8740EC();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v17 = (unint64_t *)(v15 + 40);
  while (1)
  {
    v18 = *v17;
    if (*v17 >= 4)
      break;
    v17 += 2;
    if (!--v16)
      goto LABEL_7;
  }
  v19 = *(v17 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v11 = (void *)swift_allocError();
  *(_QWORD *)v20 = v19;
  *(_QWORD *)(v20 + 8) = v18;
  *(_QWORD *)(v20 + 16) = &unk_1E726F0B8;
  *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v19, v18);
  v24[1](v9, v14);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v11);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA645F4C()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

uint64_t sub_1BA645FEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v4 - 72) = *(_QWORD *)(a1 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA645F4C(v2, v3);
  if (!v1)
    sub_1BA64638C(v2, (__int128 *)(v4 - 176), v5);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t type metadata accessor for FormatTextNodeLink()
{
  uint64_t result;

  result = qword_1ED3BA770;
  if (!qword_1ED3BA770)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA6462A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B34C0)
  {
    v4 = type metadata accessor for FormatValue(0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B34C0);
  }
}

unint64_t sub_1BA646304()
{
  unint64_t result;

  result = qword_1ED3C7A28;
  if (!qword_1ED3C7A28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4F50, &_s10CodingTypeON_9);
    atomic_store(result, (unint64_t *)&qword_1ED3C7A28);
  }
  return result;
}

unint64_t sub_1BA646348()
{
  unint64_t result;

  result = qword_1ED3B6868;
  if (!qword_1ED3B6868)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeBinding, &type metadata for FormatTextNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3B6868);
  }
  return result;
}

uint64_t sub_1BA64638C(uint64_t result, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v14 = result;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v8 = a3 + 64;
    do
    {
      v9 = *(_QWORD *)(v8 - 8);
      v21 = *(_QWORD *)(v8 - 16);
      v10 = a2[3];
      v17 = a2[2];
      v18 = v10;
      v19 = a2[4];
      v20 = *((_QWORD *)a2 + 10);
      v11 = a2[1];
      v15 = *a2;
      v16 = v11;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA645F4C(v14, &v15);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      swift_release();
      if (v9)
      {
        v12 = a2[3];
        v17 = a2[2];
        v18 = v12;
        v19 = a2[4];
        v20 = *((_QWORD *)a2 + 10);
        v13 = a2[1];
        v15 = *a2;
        v16 = v13;
        sub_1BA7538E0(v14, (uint64_t)&v15);
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v8 += 40;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA646540(uint64_t a1, __int128 *a2, uint64_t a3)
{
  return sub_1BA64655C(a1, a2, a3, (void (*)(uint64_t, __int128 *))sub_1BA645F4C);
}

uint64_t sub_1BA64655C(uint64_t result, __int128 *a2, uint64_t a3, void (*a4)(uint64_t, __int128 *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v5 = v4;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v9 = result;
    swift_bridgeObjectRetain();
    v10 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v11 = *v10;
      v23 = *(v10 - 1);
      v12 = a2[3];
      v19 = a2[2];
      v20 = v12;
      v21 = a2[4];
      v22 = *((_QWORD *)a2 + 10);
      v13 = a2[1];
      v17 = *a2;
      v18 = v13;
      swift_retain();
      swift_retain();
      sub_1BA6F9BF4(v9, &v17);
      if (v5)
        break;
      v23 = v11;
      v14 = a2[3];
      v19 = a2[2];
      v20 = v14;
      v21 = a2[4];
      v22 = *((_QWORD *)a2 + 10);
      v15 = a2[1];
      v17 = *a2;
      v18 = v15;
      a4(v9, &v17);
      v5 = 0;
      v10 += 2;
      swift_release();
      swift_release();
      if (!--v6)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1BA6466A8()
{
  unint64_t result;

  result = qword_1ED3B0C58;
  if (!qword_1ED3B0C58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeFormat, &type metadata for FormatTextNodeFormat);
    atomic_store(result, (unint64_t *)&qword_1ED3B0C58);
  }
  return result;
}

void sub_1BA6466EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12[5];
  uint64_t v13;

  v4 = v3;
  v7 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  v12[3] = v7;
  v12[4] = *(_OWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 16);
  v9 = *v2;
  v10 = (unint64_t)*v2 >> 62;
  v12[0] = *(_OWORD *)a2;
  v12[1] = v8;
  if ((_DWORD)v10)
  {
    if ((_DWORD)v10 != 1)
    {
      v11 = *(_QWORD *)(v9 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BA6466EC(a1, a2);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BB569D10(a1, v12, v11);
        swift_release();
        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    sub_1BA73D0A8();
  }
}

unint64_t sub_1BA646844()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B50A8;
  if (!qword_1ED3B50A8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B50B0, (uint64_t (*)(void))sub_1BA830FA0, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B50A8);
  }
  return result;
}

unint64_t sub_1BA6468AC()
{
  unint64_t result;

  result = qword_1ED3B7940[0];
  if (!qword_1ED3B7940[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAttachment, &type metadata for FormatTextNodeAttachment);
    atomic_store(result, qword_1ED3B7940);
  }
  return result;
}

uint64_t type metadata accessor for FormatValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatValue);
}

uint64_t sub_1BA6468FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA646924(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA646924(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  unsigned __int8 v33;
  __int128 v34;
  char v35;
  __int128 v36;
  char v37;
  uint64_t v38;

  v2 = v1;
  sub_1BAEEA664();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC2508();
  sub_1BA4A2870(&qword_1ED3D0C70, (uint64_t (*)(uint64_t))sub_1BAEC2508, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v1)
  {
LABEL_10:
    sub_1BA7F8B78(a1, v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v2;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = sub_1BB8740EC();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = (_BYTE *)(v11 + 48);
      while (*v13 != 1)
      {
        v13 += 24;
        if (!--v12)
          goto LABEL_7;
      }
      v17 = *((_QWORD *)v13 - 2);
      v18 = *((_QWORD *)v13 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v19 = sub_1BAE15BCC();
      sub_1BA98D1F0();
      v2 = swift_allocError();
      *(_QWORD *)v20 = v17;
      *(_QWORD *)(v20 + 8) = v18;
      *(_QWORD *)(v20 + 16) = v19;
      *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v17, v18, 1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v14 = sub_1BAE0F8F8((uint64_t)v8, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEEA664);
  v16 = v15;
  sub_1BA4B07F0(0, &qword_1ED3CF770, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v36 = xmmword_1BB8A1A10;
  v37 = 0;
  sub_1BA646E6C();
  sub_1BB8740D4();
  v21 = v34;
  type metadata accessor for FormatSwitchNodeDefault();
  v36 = xmmword_1BB8D2D60;
  v37 = 0;
  sub_1BA4A2870(&qword_1ED3CA568, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeDefault, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeDefault);
  sub_1BB874068();
  v38 = v34;
  v32 = xmmword_1BB8D2D70;
  v36 = xmmword_1BB8D2D70;
  v37 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v34 = v32;
    v35 = 0;
    sub_1BB8740D4();
    v23 = v33;
  }
  else
  {
    v23 = 0;
  }
  LODWORD(v32) = v23;
  v36 = xmmword_1BB8D2D90;
  v37 = 0;
  v24 = sub_1BB87402C();
  v30 = v25;
  v31 = v24;
  type metadata accessor for FormatSwitchNode();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  v29 = (uint64_t *)(v2 + 56);
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = v14;
  *(_QWORD *)(v2 + 24) = v16;
  v26 = v38;
  *(_QWORD *)(v2 + 32) = v21;
  *(_QWORD *)(v2 + 40) = v26;
  swift_beginAccess();
  *(_BYTE *)(v2 + 48) = v32;
  v27 = v29;
  swift_beginAccess();
  *v27 = v31;
  *(_QWORD *)(v2 + 64) = v30;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t type metadata accessor for FormatSwitchNodeDefault()
{
  return objc_opt_self();
}

unint64_t sub_1BA646E28()
{
  unint64_t result;

  result = qword_1ED3C7700;
  if (!qword_1ED3C7700)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5930, &_s10CodingKeysON_33);
    atomic_store(result, (unint64_t *)&qword_1ED3C7700);
  }
  return result;
}

unint64_t sub_1BA646E6C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3CF778;
  if (!qword_1ED3CF778)
  {
    sub_1BA4B07F0(255, &qword_1ED3CF770, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3C9240, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeCase);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3CF778);
  }
  return result;
}

uint64_t sub_1BA646EFC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BA4B07F0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BA646F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t destroy for FormatSlotDefinitionItemSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1BB86E710();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1BA647038@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatOptionBinding.init(from:)(a1, a2);
}

uint64_t FormatOptionBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  _QWORD *v46;
  __int128 v47;
  char v48;
  __int128 v49;
  char v50;

  v45 = a2;
  sub_1BAEFBAC0(0, &qword_1ED3C4728, (void (*)(void))sub_1BA823D28, (void (*)(void))sub_1BA823D6C);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - v4;
  sub_1BAEA7FF4();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA806C();
  sub_1BA4A2870(&qword_1ED3D0E10, (uint64_t (*)(uint64_t))sub_1BAEA806C, (uint64_t)&unk_1BB8FFC6C);
  v11 = v46;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
    goto LABEL_14;
  v40 = v5;
  *(_QWORD *)&v41 = 0;
  v42 = v8;
  v13 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_1BB872874();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v15 = v7;
  v17 = v44;
  v16 = v45;
  v18 = v43;
  if ((v13 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v30 = v15;
      v31 = *((_QWORD *)v21 - 2);
      v32 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v33 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v33);
      *(&v39 - 4) = (uint64_t)&_s10CodingKeysON_89;
      *(&v39 - 3) = sub_1BAEA80EC();
      *(&v39 - 2) = sub_1BA64745C();
      *(&v39 - 1) = sub_1BAEA8130();
      swift_getKeyPath();
      swift_retain();
      v34 = sub_1BAE71220((uint64_t)&unk_1E726D148);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v35 = v31;
      *(_QWORD *)(v35 + 8) = v32;
      *(_QWORD *)(v35 + 16) = v34;
      *(_OWORD *)(v35 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v31, v32, 1);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v30);
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v49 = 0uLL;
  v50 = 0;
  v22 = (void *)v41;
  v23 = sub_1BB874098();
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v15);
    v12 = v22;
LABEL_13:
    a1 = v46;
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v36 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v36);
  }
  v25 = v23;
  v26 = v24;
  v41 = xmmword_1BB8A1A10;
  v49 = xmmword_1BB8A1A10;
  v50 = 0;
  v27 = sub_1BB8740F8();
  v28 = v42;
  if ((v27 & 1) != 0)
  {
    v39 = v25;
    v47 = v41;
    v48 = 0;
    sub_1BAEA8174();
    v29 = v40;
    sub_1BB8740D4();
    v38 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v29, v17);
    v25 = v39;
    v28 = v42;
  }
  else
  {
    v38 = MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v15);
  *v16 = v25;
  v16[1] = v26;
  v16[2] = v38;
  v36 = (uint64_t)v46;
  return __swift_destroy_boxed_opaque_existential_1(v36);
}

unint64_t sub_1BA64745C()
{
  unint64_t result;

  result = qword_1ED3C8498;
  if (!qword_1ED3C8498)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8B38, &_s10CodingKeysON_89);
    atomic_store(result, (unint64_t *)&qword_1ED3C8498);
  }
  return result;
}

void sub_1BA6474A0(uint64_t a1, uint64_t a2)
{
  FormatSelectorValue.encode(to:)(a1, a2);
}

void FormatSelectorValue.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v13[3] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v13[4] = (char *)v13 - v6;
  v7 = *(_QWORD *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 24);
  v15 = v7;
  v9 = _s10CodingKeysOMa_225(255, v7, v14, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8CF870, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8CF820, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8CF7F8, v9);
  v16 = v9;
  v17 = v10;
  v18 = v11;
  v19 = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA647598(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v6 = sub_1BB8741D0();
  v7 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v6);
  v9 = type metadata accessor for VersionedKeyedEncodingContainer(0, v6, v7, v8);
  *(_QWORD *)(v3 - 136) = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v34 - v10;
  v12 = v1[3];
  v13 = v1[4];
  v14 = __swift_project_boxed_opaque_existential_1(v1, v12);
  *(_QWORD *)(v3 - 176) = v2;
  sub_1BA6EC1EC(v2, (uint64_t)v14, v12, v2, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v11, v5, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v3 - 112) = 0;
  *(_QWORD *)(v3 - 104) = 0;
  *(_BYTE *)(v3 - 96) = 0;
  if (qword_1ED3C2478 != -1)
    swift_once();
  v15 = sub_1BB86EB84();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED476C20);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v18 = *(_QWORD *)(v3 - 160);
  v17(v18, v16, v15);
  v19 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v20 = *(_QWORD *)(v3 - 152);
  sub_1BA6EE974(*(_QWORD *)(v3 - 144), v3 - 112, v18, (uint64_t)sub_1BA90CF04, 0, v9, *(_QWORD *)(v3 - 120), *(_QWORD *)(*(_QWORD *)(v3 - 128) + 16));
  if (v20)
  {
    sub_1BA4A2E80(v18, type metadata accessor for FormatVersionRequirement);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v11, v9);
  }
  else
  {
    *(_QWORD *)(v3 - 192) = v11;
    *(_QWORD *)(v3 - 184) = v19;
    *(_QWORD *)(v3 - 152) = v17;
    sub_1BA4A2E80(v18, type metadata accessor for FormatVersionRequirement);
    *(_QWORD *)(v3 - 72) = sub_1BA647A38(*(_QWORD *)(v3 - 176));
    v23 = type metadata accessor for FormatSelectorValueSelector(255, *(_QWORD *)(v3 - 120), *(_QWORD *)(v3 - 128), v22);
    v24 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValueSelector<A>, v23);
    v25 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValueSelector<A>, v23);
    v26 = type metadata accessor for FormatCodingEmptyArrayStrategy(0, v23, v24, v25);
    *(_OWORD *)(v3 - 112) = xmmword_1BB8A1A10;
    *(_BYTE *)(v3 - 96) = 0;
    v27 = qword_1ED3C6D18;
    swift_bridgeObjectRetain();
    if (v27 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED476B60);
    v29 = *(_QWORD *)(v3 - 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 - 152))(v29, v28, v15);
    swift_storeEnumTagMultiPayload();
    v30 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingEmptyArrayStrategy<A>, v26);
    v31 = v26;
    v32 = v26;
    v33 = *(_QWORD *)(v3 - 192);
    sub_1BA6478CC(v3 - 72, v31, v3 - 112, v29, (uint64_t)sub_1BA90CF04, 0, v9, v32, v30);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v33, v9);
  }
}

uint64_t sub_1BA6478CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  _QWORD v19[4];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a4;
  v16 = *(_QWORD *)(a9 + 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 72))(a1, a8, v16);
  if ((result & 1) != 0)
  {
    v20 = a1;
    MEMORY[0x1E0C80A78](result);
    v19[2] = a5;
    v19[3] = a6;
    v18 = v22;
    result = sub_1BA647A44(v21, a3, (uint64_t)sub_1BA4D7950, (uint64_t)v19, a7);
    if (!v9 && (result & 1) != 0)
      return static FormatCodingStrategy.encode<A>(_:into:forKey:)(v20, v18, a3, a8, *(_QWORD *)(a7 + 16), v16, *(_QWORD *)(a7 + 24));
  }
  return result;
}

BOOL sub_1BA6479D4()
{
  return static FormatCodingEmptyArrayStrategy.shouldEncode(wrappedValue:)();
}

BOOL static FormatCodingEmptyArrayStrategy.shouldEncode(wrappedValue:)()
{
  uint64_t v0;

  v0 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v0);
  return (sub_1BB873168() & 1) == 0;
}

uint64_t sub_1BA647A38(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_1BA647A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, double);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[16];
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  _BYTE v45[16];
  uint64_t (*v46)();
  _QWORD *v47;
  _QWORD v48[4];
  uint64_t v49;

  v37 = a3;
  v38 = a4;
  v35 = a2;
  v36 = a5;
  v39 = a1;
  v7 = *(_QWORD *)(a5 + 24);
  v49 = *(_QWORD *)(a5 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v32 = *(_QWORD *)(v10 + 64);
  v11 = v32;
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v27 - v13;
  v15 = (uint64_t *)(v5 + *(int *)(a5 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = v17;
  v28 = v16;
  v34 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  v34(v14, a2, AssociatedTypeWitness, v12);
  v18 = *(unsigned __int8 *)(v10 + 80);
  v19 = (v18 + 32) & ~v18;
  v31 = v18 | 7;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v49;
  *(_QWORD *)(v20 + 24) = v7;
  v30 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v30(v20 + v19, v14, AssociatedTypeWitness);
  v21 = (_QWORD *)(v20 + ((v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
  v22 = v28;
  *v21 = v29;
  v21[1] = v22;
  swift_retain();
  v23 = v33;
  v24 = sub_1BB87444C();
  ((void (*)(char *, uint64_t, uint64_t))v34)(v14, v35, AssociatedTypeWitness);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v49;
  v25[3] = v7;
  v25[4] = v24;
  v30((uint64_t)v25 + ((v18 + 40) & ~v18), v14, AssociatedTypeWitness);
  sub_1BA4C010C(v23 + *(int *)(v36 + 36), (uint64_t)v48);
  __swift_project_boxed_opaque_existential_1(v48, v48[3]);
  v46 = sub_1BB7E26A4;
  v47 = v25;
  v41 = v37;
  v42 = v38;
  v43 = sub_1BB7E269C;
  v44 = v20;
  LOBYTE(AssociatedTypeWitness) = sub_1BA6EC410(v39, (uint64_t)sub_1BA4D7950, (uint64_t)v45, (uint64_t)sub_1BB7E26A8, (uint64_t)v40);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return AssociatedTypeWitness & 1;
}

uint64_t static FormatCodingStrategy.encode<A>(_:into:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  _QWORD v16[4];

  v16[0] = a5;
  v16[3] = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)v16 - v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(a6 + 80))(a1, a4, a6, v12);
  swift_getAssociatedConformanceWitness();
  sub_1BB874464();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, AssociatedTypeWitness);
}

BOOL sub_1BA647DE4(_BYTE *a1)
{
  return (*a1 & 1) == 0;
}

void sub_1BA647DF4(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t sub_1BA647E00()
{
  return 1;
}

uint64_t sub_1BA647E08()
{
  return 0;
}

uint64_t sub_1BA647E10(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1BA647E18@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BA647E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static FormatCodingStrategy<>.encode(wrappedValue:)(a1, a2);
}

uint64_t static FormatCodingStrategy<>.encode(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_1BA647E8C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v5 = sub_1BB8743B0();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA647F4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCustomItem.init(from:)(a1, a2);
}

uint64_t FormatCustomItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v31 = a2;
  sub_1BA6927D0();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA648404(0);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA648420(0, &qword_1ED39DB88, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - v10;
  v12 = (int *)type metadata accessor for FormatCustomItem();
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA648680();
  v15 = (uint64_t)v33;
  sub_1BB87468C();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = (uint64_t)v32;
  v33 = a1;
  v40 = 0;
  v17 = v11;
  v19 = v8;
  v20 = (uint64_t)v14;
  *v14 = sub_1BB874098();
  v14[1] = v21;
  v39 = 1;
  v14[2] = sub_1BB874098();
  v14[3] = v22;
  type metadata accessor for FormatCustomItem.Action();
  v38 = 2;
  sub_1BA4A2870(&qword_1ED3A5948, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t)&protocol conformance descriptor for FormatCustomItem.Action);
  v27 = 0;
  sub_1BB874068();
  sub_1BA5193C4(v16, (uint64_t)v14 + v12[6], (uint64_t (*)(_QWORD))sub_1BA648404);
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
  v37 = 3;
  sub_1BA5DBB94((unint64_t *)&qword_1ED3B9478, (uint64_t (*)(void))sub_1BA8350B4, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  *(uint64_t *)((char *)v14 + v12[7]) = v34;
  v36 = 4;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v35 = 4;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v24 = v29;
    v23 = v30;
    sub_1BB8740D4();
    v25 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v24);
  }
  else
  {
    v25 = MEMORY[0x1E0DEE9E8];
  }
  v26 = v31;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v19);
  *(_QWORD *)(v20 + v12[8]) = v25;
  sub_1BA4C2DD8(v20, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_1BA4A2E80(v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem);
}

void sub_1BA648404(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C7270, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA648420(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA648680();
    v7 = a3(a1, &type metadata for FormatCustomItem.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *initializeWithCopy for FormatCustomItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FormatCustomItem.Action();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1BA648404(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v16 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FormatCustomItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for FormatCustomItem.Action();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA648624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3C7270, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BA648680()
{
  unint64_t result;

  result = qword_1ED39CC28;
  if (!qword_1ED39CC28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915EC4, &type metadata for FormatCustomItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CC28);
  }
  return result;
}

uint64_t FormatContent.requirements.getter()
{
  int64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  unint64_t v13;
  int64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  int64_t v55;
  int64_t v56;
  _QWORD *v57;
  int64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v66;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  int64_t v71;
  unint64_t v72;
  uint64_t v74;
  uint64_t v75;
  int64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v88;
  uint64_t v89;
  int64_t v90;
  uint64_t result;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  int64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;

  v1 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatContent(0);
  v5 = (uint64_t *)(v0 + *(int *)(v4 + 24));
  v6 = v5[1];
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = (_QWORD *)MEMORY[0x1E0DEE9E8];
  if (v6)
  {
    v9 = *v5;
    type metadata accessor for FormatTag();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v9;
    *(_QWORD *)(v10 + 24) = v6;
    swift_beginAccess();
    *(_QWORD *)(v10 + 32) = v8;
    swift_beginAccess();
    *(_QWORD *)(v10 + 40) = v7;
    swift_bridgeObjectRetain();
    v11 = sub_1BA6493B4(0, 1, 1, (_QWORD *)v7, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
    v13 = v11[2];
    v12 = (uint64_t *)v11[3];
    v14 = v13 + 1;
    if (v13 >= (unint64_t)v12 >> 1)
      goto LABEL_150;
    goto LABEL_3;
  }
  v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_5:
  v16 = (uint64_t *)(v0 + *(int *)(v4 + 28));
  v17 = v16[1];
  if (v17)
  {
    v18 = *v16;
    type metadata accessor for FormatIssue();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v18;
    *(_QWORD *)(v19 + 24) = v17;
    *(_OWORD *)(v19 + 32) = 0u;
    *(_OWORD *)(v19 + 48) = 0u;
    swift_beginAccess();
    *(_QWORD *)(v19 + 64) = v8;
    swift_beginAccess();
    *(_QWORD *)(v19 + 72) = v7;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BA6493B4(0, v11[2] + 1, 1, v11, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
    v21 = v11[2];
    v20 = v11[3];
    if (v21 >= v20 >> 1)
      v11 = sub_1BA6493B4((_QWORD *)(v20 > 1), v21 + 1, 1, v11, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
    v11[2] = v21 + 1;
    v22 = &v11[6 * v21];
    v22[4] = v19;
    *(_OWORD *)(v22 + 5) = 0u;
    *(_OWORD *)(v22 + 7) = 0u;
    *((_BYTE *)v22 + 72) = 2;
  }
  v23 = (uint64_t *)(v0 + *(int *)(v4 + 32));
  v24 = v23[1];
  if (v24)
  {
    v25 = *v23;
    v26 = qword_1ED3A6D88;
    swift_bridgeObjectRetain();
    if (v26 != -1)
      swift_once();
    v27 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3A6D68);
    sub_1BA4C2DD8(v27, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    type metadata accessor for FormatArticle();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v25;
    *(_QWORD *)(v28 + 24) = v24;
    v29 = v28 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
    swift_beginAccess();
    sub_1BA5193C4((uint64_t)v3, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    v30 = (_QWORD *)(v28 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
    swift_beginAccess();
    *v30 = v8;
    v31 = (uint64_t *)(v28 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
    swift_beginAccess();
    *v31 = v7;
    *(_QWORD *)(v28 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BA6493B4(0, v11[2] + 1, 1, v11, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
    v33 = v11[2];
    v32 = v11[3];
    if (v33 >= v32 >> 1)
      v11 = sub_1BA6493B4((_QWORD *)(v32 > 1), v33 + 1, 1, v11, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
    v11[2] = v33 + 1;
    v34 = &v11[6 * v33];
    v34[4] = v28;
    *(_OWORD *)(v34 + 5) = 0u;
    *(_OWORD *)(v34 + 7) = 0u;
    *((_BYTE *)v34 + 72) = 0;
  }
  v35 = *(_QWORD *)(v0 + *(int *)(v4 + 60));
  v95 = *(_QWORD *)(v35 + 16);
  if (!v95)
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_132;
  }
  v93 = v11;
  v7 = type metadata accessor for FormatContentSubgroup();
  v36 = *(_QWORD *)(v7 - 8);
  v3 = (char *)(v35 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80)));
  v1 = *(_QWORD *)(v36 + 72);
  v92 = v35;
  swift_bridgeObjectRetain_n();
  v14 = 0;
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v98 = v7;
  v97 = v3;
  v96 = v1;
LABEL_21:
  v37 = *(_QWORD *)&v3[v1 * v14 + *(int *)(v7 + 32)];
  v107 = *(_QWORD *)(v37 + 16);
  if (!v107)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    goto LABEL_110;
  }
  v108 = v37 + 32;
  v94 = v37;
  swift_bridgeObjectRetain_n();
  v38 = 0;
  v13 = MEMORY[0x1E0DEE9D8];
  v100 = v14;
  v99 = v8;
LABEL_25:
  v109 = v38;
  v12 = (uint64_t *)(v108 + 48 * v38);
  v40 = v12[4];
  v110 = *(_QWORD **)(v40 + 16);
  if (!v110)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_92;
  }
  v106 = (_QWORD *)v13;
  v41 = v12[1];
  v42 = v12[2];
  v43 = v12[3];
  v44 = v12[5];
  v116 = type metadata accessor for FormatContentSlotItem();
  v45 = *(_QWORD *)(v116 - 8);
  v115 = v40 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
  v114 = *(_QWORD *)(v45 + 72);
  v105 = v40;
  swift_bridgeObjectRetain_n();
  v104 = v41;
  swift_bridgeObjectRetain();
  v103 = v42;
  swift_bridgeObjectRetain();
  v102 = v43;
  swift_bridgeObjectRetain();
  v101 = v44;
  swift_bridgeObjectRetain();
  v1 = 0;
  v3 = (char *)MEMORY[0x1E0DEE9D8];
  v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v8 = v110;
  while (1)
  {
    v46 = v115 + v114 * v1;
    sub_1BA64B454();
    v13 = (unint64_t)v47;
    v12 = (uint64_t *)(v46 + *(int *)(v116 + 20));
    v48 = *v12;
    if (*v12)
    {
      v49 = v12[1];
      v14 = *(_QWORD *)(v49 + 16);
      if (v14)
        break;
    }
    v4 = (uint64_t)v3;
LABEL_54:
    v0 = *(_QWORD *)(v4 + 16);
    v10 = *(_QWORD *)(v13 + 16);
    v7 = v10 + v0;
    if (__OFADD__(v10, v0))
    {
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      v11 = sub_1BA6493B4((_QWORD *)((unint64_t)v12 > 1), v14, 1, v11, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
LABEL_3:
      v11[2] = v14;
      v15 = &v11[6 * v13];
      v15[4] = v10;
      *(_OWORD *)(v15 + 5) = 0u;
      *(_OWORD *)(v15 + 7) = 0u;
      *((_BYTE *)v15 + 72) = 3;
      goto LABEL_5;
    }
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native
      && (v12 = *(uint64_t **)(v13 + 24), v7 <= (uint64_t)((unint64_t)v12 >> 1)))
    {
      v10 = *(_QWORD *)(v4 + 16);
      if (!v10)
        goto LABEL_71;
    }
    else
    {
      if (v10 <= v7)
        v69 = v10 + v0;
      else
        v69 = v10;
      v13 = (unint64_t)sub_1BA6493B4(isUniquelyReferenced_nonNull_native, v69, 1, (_QWORD *)v13, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
      v10 = *(_QWORD *)(v4 + 16);
      if (!v10)
      {
LABEL_71:
        if (v0)
          goto LABEL_139;
        goto LABEL_72;
      }
    }
    v12 = *(uint64_t **)(v13 + 16);
    if ((*(_QWORD *)(v13 + 24) >> 1) - (_QWORD)v12 < v10)
      goto LABEL_142;
    v66 = v13 + 48 * (_QWORD)v12 + 32;
    if (v4 + 32 < v66 + 48 * v10 && v66 < v4 + 32 + 48 * v10)
      goto LABEL_155;
    swift_arrayInitWithCopy();
    if (v10 < (unint64_t)v0)
      goto LABEL_139;
    v68 = *(_QWORD *)(v13 + 16);
    v63 = __OFADD__(v68, v10);
    v12 = (uint64_t *)(v68 + v10);
    if (v63)
      goto LABEL_143;
    *(_QWORD *)(v13 + 16) = v12;
LABEL_72:
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v13 + 16);
    v0 = v11[2];
    v4 = v0 + v10;
    if (__OFADD__(v0, v10))
      goto LABEL_140;
    v70 = swift_isUniquelyReferenced_nonNull_native();
    if ((v70 & 1) != 0 && v4 <= v11[3] >> 1)
    {
      v12 = *(uint64_t **)(v13 + 16);
      if (v12)
        goto LABEL_81;
    }
    else
    {
      if (v0 <= v4)
        v71 = v0 + v10;
      else
        v71 = v0;
      v11 = sub_1BA6493B4((_QWORD *)v70, v71, 1, v11, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
      v12 = *(uint64_t **)(v13 + 16);
      if (v12)
      {
LABEL_81:
        v12 = (uint64_t *)v11[2];
        if ((v11[3] >> 1) - (_QWORD)v12 < v10)
          goto LABEL_144;
        v72 = (unint64_t)&v11[6 * (_QWORD)v12 + 4];
        if (v13 + 32 < v72 + 48 * v10 && v72 < v13 + 32 + 48 * v10)
          goto LABEL_155;
        swift_arrayInitWithCopy();
        if (v10)
        {
          v74 = v11[2];
          v63 = __OFADD__(v74, v10);
          v12 = (uint64_t *)(v74 + v10);
          if (v63)
            goto LABEL_145;
          v11[2] = v12;
        }
        goto LABEL_28;
      }
    }
    if (v10)
      goto LABEL_141;
LABEL_28:
    ++v1;
    swift_bridgeObjectRelease();
    if ((_QWORD *)v1 == v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v7 = v98;
      v3 = v97;
      v1 = v96;
      v14 = v100;
      v8 = v99;
      v12 = (uint64_t *)&v117;
      v13 = (unint64_t)v106;
LABEL_92:
      v10 = v11[2];
      v0 = *(_QWORD *)(v13 + 16);
      v4 = v0 + v10;
      if (__OFADD__(v0, v10))
        goto LABEL_146;
      v75 = swift_isUniquelyReferenced_nonNull_native();
      if ((v75 & 1) == 0 || v4 > *(_QWORD *)(v13 + 24) >> 1)
      {
        if (v0 <= v4)
          v76 = v0 + v10;
        else
          v76 = v0;
        v13 = (unint64_t)sub_1BA6493B4((_QWORD *)v75, v76, 1, (_QWORD *)v13, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
      }
      v77 = v109;
      v12 = (uint64_t *)v11[2];
      if (v12)
      {
        v12 = *(uint64_t **)(v13 + 16);
        if ((*(_QWORD *)(v13 + 24) >> 1) - (_QWORD)v12 < v10)
          goto LABEL_148;
        v78 = v13 + 48 * (_QWORD)v12 + 32;
        if ((unint64_t)(v11 + 4) < v78 + 48 * v10 && v78 < (unint64_t)&v11[6 * v10 + 4])
        {
LABEL_155:
          result = sub_1BB873F84();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        v77 = v109;
        if (v10)
        {
          v80 = *(_QWORD *)(v13 + 16);
          v63 = __OFADD__(v80, v10);
          v12 = (uint64_t *)(v80 + v10);
          if (v63)
            goto LABEL_149;
          *(_QWORD *)(v13 + 16) = v12;
        }
      }
      else if (v10)
      {
        goto LABEL_147;
      }
      v39 = v77 + 1;
      swift_bridgeObjectRelease();
      v38 = v39;
      if (v39 != v107)
        goto LABEL_25;
      swift_bridgeObjectRelease_n();
LABEL_110:
      v81 = *(_QWORD *)(v13 + 16);
      v82 = v8[2];
      v83 = v82 + v81;
      if (__OFADD__(v82, v81))
      {
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
        goto LABEL_155;
      }
      v84 = swift_isUniquelyReferenced_nonNull_native();
      if ((v84 & 1) == 0 || v83 > v8[3] >> 1)
      {
        if (v82 <= v83)
          v90 = v82 + v81;
        else
          v90 = v82;
        v8 = sub_1BA6493B4((_QWORD *)v84, v90, 1, v8, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
        if (!*(_QWORD *)(v13 + 16))
          goto LABEL_127;
LABEL_114:
        v85 = v8[2];
        if ((v8[3] >> 1) - v85 < v81)
          goto LABEL_153;
        v86 = (unint64_t)&v8[6 * v85 + 4];
        if (v13 + 32 < v86 + 48 * v81 && v86 < v13 + 32 + 48 * v81)
          goto LABEL_155;
        swift_arrayInitWithCopy();
        if (!v81)
          goto LABEL_128;
        v88 = v8[2];
        v63 = __OFADD__(v88, v81);
        v89 = v88 + v81;
        if (!v63)
        {
          v8[2] = v89;
          goto LABEL_128;
        }
        goto LABEL_154;
      }
      if (*(_QWORD *)(v13 + 16))
        goto LABEL_114;
LABEL_127:
      if (v81)
        goto LABEL_152;
LABEL_128:
      ++v14;
      swift_bridgeObjectRelease();
      if (v14 == v95)
        goto LABEL_137;
      goto LABEL_21;
    }
  }
  v113 = v11;
  v50 = *(_QWORD *)(type metadata accessor for FormatContentSlotItemObject() - 8);
  v51 = v49 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
  swift_bridgeObjectRetain_n();
  v112 = v48;
  v111 = v49;
  sub_1BA5DCC20(v48);
  v52 = *(_QWORD *)(v50 + 72);
  v4 = (uint64_t)v3;
  while (1)
  {
    sub_1BA64B454();
    v54 = v53[2];
    v55 = *(_QWORD *)(v4 + 16);
    v56 = v55 + v54;
    if (__OFADD__(v55, v54))
      break;
    v8 = v53;
    v57 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)v57 && v56 <= *(_QWORD *)(v4 + 24) >> 1)
    {
      if (v8[2])
        goto LABEL_43;
    }
    else
    {
      if (v55 <= v56)
        v58 = v55 + v54;
      else
        v58 = v55;
      v4 = (uint64_t)sub_1BA6493B4(v57, v58, 1, (_QWORD *)v4, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
      if (v8[2])
      {
LABEL_43:
        v59 = *(_QWORD *)(v4 + 16);
        if ((*(_QWORD *)(v4 + 24) >> 1) - v59 < v54)
          goto LABEL_135;
        v60 = v4 + 48 * v59 + 32;
        if ((unint64_t)(v8 + 4) < v60 + 48 * v54 && v60 < (unint64_t)&v8[6 * v54 + 4])
          goto LABEL_155;
        swift_arrayInitWithCopy();
        if (v54)
        {
          v62 = *(_QWORD *)(v4 + 16);
          v63 = __OFADD__(v62, v54);
          v64 = v62 + v54;
          if (v63)
            goto LABEL_136;
          *(_QWORD *)(v4 + 16) = v64;
        }
        goto LABEL_33;
      }
    }
    if (v54)
      goto LABEL_134;
LABEL_33:
    swift_bridgeObjectRelease();
    v51 += v52;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      sub_1BA5DCC4C(v112);
      v3 = (char *)MEMORY[0x1E0DEE9D8];
      v11 = v113;
      v12 = &v118;
      v8 = v110;
      goto LABEL_54;
    }
  }
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  swift_bridgeObjectRelease_n();
  v11 = v93;
LABEL_132:
  v117 = v8;
  sub_1BA64AE30((uint64_t)v11, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
  return (uint64_t)v117;
}

_QWORD *sub_1BA6493B4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 48);
      v14 = v12 + 4;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[6 * v10 + 4])
          memmove(v14, a4 + 4, 48 * v10);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA6494F0(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6494F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

_QWORD *sub_1BA6495E0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6493B4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
}

uint64_t FormatContentSlotItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[3];
  _QWORD *v20;

  v17 = a2;
  v3 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1E0C80A78](v3);
  v18 = (uint64_t)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA649838(0, &qword_1ED3CFB00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for FormatContentSlotItem();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA64ADEC();
  v13 = (uint64_t)v20;
  sub_1BB87468C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = v17;
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v19);
  v15 = v18;
  FormatContentSlotItemObject.init(from:)(v19, v18);
  v20 = a1;
  sub_1BA64A0DC(v15, (uint64_t)v12);
  sub_1BA649894();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_OWORD *)&v12[*(int *)(v10 + 20)] = v19[0];
  sub_1BA4C2DD8((uint64_t)v12, v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
}

void sub_1BA649838(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA64ADEC();
    v7 = a3(a1, &type metadata for FormatContentSlotItem.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA649894()
{
  unint64_t result;

  result = qword_1ED3CCEA0;
  if (!qword_1ED3CCEA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSlotItemAuxiliary, &type metadata for FormatContentSlotItemAuxiliary);
    atomic_store(result, (unint64_t *)&qword_1ED3CCEA0);
  }
  return result;
}

uint64_t type metadata accessor for FormatContentSlotItem()
{
  uint64_t result;

  result = qword_1ED3C9670;
  if (!qword_1ED3C9670)
    return swift_getSingletonMetadata();
  return result;
}

void initializeWithCopy for FormatContentSlotItem()
{
  char *v0;

  type metadata accessor for FormatContentSlotItemObject();
  v0 = (char *)sub_1BA649974 + 4 * byte_1BB94F464[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BA649974(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__dst, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  *v22 = *v23;
  swift_retain();
  swift_storeEnumTagMultiPayload();
  v25 = *(int *)(v24 + 20);
  v26 = (_QWORD *)((char *)v22 + v25);
  v27 = (_QWORD *)((char *)v23 + v25);
  if (*v27)
  {
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  return v22;
}

uint64_t _s6ActionOwst(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t destroy for FormatContentSlotItem(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for FormatContentSlotItemObject();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 6u:
    case 7u:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
      swift_release();
      break;
    case 5u:
      swift_bridgeObjectRelease();
      v5 = type metadata accessor for FormatWebEmbed();
      v6 = a1 + *(int *)(v5 + 20);
      v7 = sub_1BB86C67C();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v9(v6, v7);
      v10 = a1 + *(int *)(v5 + 24);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
        v9(v10, v7);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 8u:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 9u:
      goto LABEL_13;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = a1 + *(int *)(type metadata accessor for FormatCustomItem() + 24);
      v12 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
      {
        v13 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
      }
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  result = *(_QWORD *)(a1 + *(int *)(a2 + 20));
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for FormatCustomItem.Action()
{
  uint64_t result;

  result = qword_1ED3C2488;
  if (!qword_1ED3C2488)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s6ActionOwet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BA64A0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatContentSlotItemObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatContentSlotItemObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v18;
  uint64_t v20;

  v16 = a2;
  v15 = type metadata accessor for FormatCustomItem();
  MEMORY[0x1E0C80A78](v15);
  v14 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1E0C80A78](v13);
  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v17 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BA6B8518();
  v10 = v20;
  sub_1BB87468C();
  if (!v10)
  {
    v20 = v5;
    v12[2] = v8;
    sub_1BA64ADA8();
    v18 = 0uLL;
    sub_1BB8740D4();
    v12[1] = 0;
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t type metadata accessor for FormatCustomItem()
{
  uint64_t result;

  result = qword_1ED3C7370;
  if (!qword_1ED3C7370)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FormatWebEmbed()
{
  uint64_t result;

  result = qword_1ED3D3810;
  if (!qword_1ED3D3810)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA64ADA8()
{
  unint64_t result;

  result = qword_1ED3CBF00[0];
  if (!qword_1ED3CBF00[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AC31C, &type metadata for FormatContentSlotItemObject.CodingType);
    atomic_store(result, qword_1ED3CBF00);
  }
  return result;
}

unint64_t sub_1BA64ADEC()
{
  unint64_t result;

  result = qword_1ED3C9650;
  if (!qword_1ED3C9650)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94F6BC, &type metadata for FormatContentSlotItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3C9650);
  }
  return result;
}

uint64_t sub_1BA64AE30(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  int64_t v6;
  int64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  int64_t v19;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    v12 = *(_QWORD *)(a1 + 16);
    if (v12)
      goto LABEL_5;
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v6 <= v7)
    v19 = v6 + v4;
  else
    v19 = v6;
  v5 = sub_1BA6493B4(isUniquelyReferenced_nonNull_native, v19, 1, v5, a2, a3);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    goto LABEL_18;
LABEL_5:
  v13 = v5[2];
  if ((v5[3] >> 1) - v13 < (uint64_t)v12)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v14 = (unint64_t)&v5[6 * v13 + 4];
  if (a1 + 32 < v14 + 48 * v12 && v14 < a1 + 32 + 48 * v12)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v12 < v4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v16 = v5[2];
  v17 = __OFADD__(v16, v12);
  v18 = v16 + v12;
  if (!v17)
  {
    v5[2] = v18;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v5;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA64AFA0(uint64_t a1)
{
  return sub_1BA64AE30(a1, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
}

void initializeWithCopy for FormatContentSlotItemObject()
{
  char *v0;

  v0 = (char *)sub_1BA64B008 + 4 * byte_1BB8AC0E2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BA64B008(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  _QWORD *v23;

  *v22 = *v23;
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return v22;
}

void sub_1BA64B454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4C2DD8(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)&loc_1BA64B514 + *((int *)qword_1BACBAD90 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BA64B524()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = *v0;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 - 104) = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
  swift_retain_n();
  while (1)
  {
    swift_retain();
    v5 = swift_retain();
    MEMORY[0x1BCCE36AC](v5);
    if (*(_QWORD *)((*(_QWORD *)(v1 - 104) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v1 - 104) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
    swift_release();
    if (!v4)
      break;
    v4 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
  }
  swift_release();
  v6 = *(_QWORD *)(v1 - 104);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_8;
LABEL_18:
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    goto LABEL_18;
LABEL_8:
  *(_QWORD *)(v1 - 136) = v2;
  *(_QWORD *)(v1 - 104) = v3;
  sub_1BA64D834(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
    __break(1u);
    JUMPOUT(0x1BA64C14CLL);
  }
  v8 = 0;
  v9 = *(_QWORD *)(v1 - 104);
  do
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      v10 = MEMORY[0x1BCCE4630](v8, v6);
    }
    else
    {
      v10 = *(_QWORD *)(v6 + 8 * v8 + 32);
      swift_retain();
    }
    *(_QWORD *)(v1 - 104) = v9;
    v12 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v9 + 24);
    if (v12 >= v11 >> 1)
    {
      sub_1BA64D834(v11 > 1, v12 + 1, 1);
      v9 = *(_QWORD *)(v1 - 104);
    }
    *(_QWORD *)(v9 + 16) = v12 + 1;
    v13 = v9 + 48 * v12;
    *(_QWORD *)(v13 + 32) = v10;
    ++v8;
    *(_OWORD *)(v13 + 40) = 0u;
    *(_OWORD *)(v13 + 56) = 0u;
    *(_BYTE *)(v13 + 72) = 0;
  }
  while (v7 != v8);
  swift_bridgeObjectRelease();
  swift_release();
  return v9;
}

uint64_t type metadata accessor for FormatArticle()
{
  uint64_t result;

  result = qword_1ED3B38F8;
  if (!qword_1ED3B38F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FormatContent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  void *v84;
  void *v85;
  uint64_t *v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  char v110;
  uint64_t v111;

  v97 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BA4CDF6C(0, &qword_1ED3C2990, (uint64_t (*)(void))sub_1BA64D528, (uint64_t)&type metadata for FormatContent.AltCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v95 = *(_QWORD *)(v4 - 8);
  v96 = v4;
  MEMORY[0x1E0C80A78](v4);
  v98 = (char *)&v91 - v5;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3C0980, (uint64_t (*)(uint64_t))sub_1BA64D4C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v100 = (char *)&v91 - v8;
  sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v6);
  MEMORY[0x1E0C80A78](v9);
  v99 = (char *)&v91 - v10;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v6);
  MEMORY[0x1E0C80A78](v11);
  v104 = (char *)&v91 - v12;
  v105 = sub_1BB86C8B0();
  v103 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v102 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1BB86C8E0();
  v107 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v106 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9BD8, (uint64_t (*)(void))sub_1BA64D56C, (uint64_t)&type metadata for FormatContent.CodingKeys, v3);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v91 - v18;
  v20 = type metadata accessor for FormatContent(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (uint64_t *)((char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = a1[3];
  v109 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_1BA64D56C();
  v24 = v108;
  sub_1BB87468C();
  if (v24)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
  v26 = v106;
  v25 = v107;
  v108 = v17;
  v93 = (int *)v20;
  v94 = v22;
  LOBYTE(v111) = 0;
  v27 = sub_1BB87402C();
  v30 = v28;
  v92 = v16;
  if (v28)
  {
    v31 = v27;
  }
  else
  {
    sub_1BB86C8D4();
    v31 = sub_1BB86C8C8();
    v30 = v32;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v101);
  }
  v34 = v93;
  v33 = v94;
  *v94 = v31;
  v33[1] = v30;
  v35 = (char *)v33;
  LOBYTE(v111) = 1;
  sub_1BA4A2870(&qword_1ED3B0528, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v36 = v104;
  sub_1BB874068();
  v37 = v103;
  v38 = (uint64_t)v36;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v36, 1, v105) == 1)
  {
    v39 = v102;
    sub_1BB86C8A4();
    sub_1BA6ED6EC(v38, (uint64_t)&qword_1ED3B0540, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v35[v34[5]], v39, v105);
  }
  else
  {
    v40 = v36;
    v41 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v42 = v102;
    v41(v102, v40, v105);
    v41(&v35[v34[5]], v42, v105);
  }
  LOBYTE(v111) = 2;
  v43 = v92;
  v44 = sub_1BB87402C();
  v45 = (uint64_t *)&v35[v34[6]];
  *v45 = v44;
  v45[1] = v46;
  LOBYTE(v111) = 3;
  v47 = sub_1BB87402C();
  v106 = 0;
  v48 = (uint64_t *)&v35[v34[7]];
  *v48 = v47;
  v48[1] = v49;
  LOBYTE(v111) = 4;
  v50 = sub_1BB87402C();
  v51 = (uint64_t *)&v35[v34[8]];
  *v51 = v50;
  v51[1] = v52;
  LOBYTE(v111) = 5;
  v53 = sub_1BB87402C();
  v54 = (uint64_t *)&v35[v34[9]];
  *v54 = v53;
  v54[1] = v55;
  sub_1BA64D4C8(0);
  v57 = v56;
  LOBYTE(v111) = 13;
  sub_1BA4A2870(&qword_1ED3C4030, (uint64_t (*)(uint64_t))sub_1BA64D4C8, MEMORY[0x1E0DB50A0]);
  v58 = (uint64_t)v100;
  sub_1BB874068();
  v107 = 0;
  v104 = v19;
  v59 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v58, 1, v57) == 1)
  {
    sub_1BA6ED6EC(v58, (uint64_t)&qword_1ED3C0980, (uint64_t)sub_1BA64D4C8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v60 = sub_1BB871E24();
    v61 = (uint64_t)v99;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v99, 1, 1, v60);
  }
  else
  {
    v61 = (uint64_t)v99;
    sub_1BB86ED1C();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v57);
    v62 = sub_1BB871E24();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v61, 0, 1, v62);
  }
  sub_1BB388484(v61, (uint64_t)&v35[v34[10]]);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v110 = 6;
  sub_1BA585B04((unint64_t *)&qword_1ED3B95F0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  v63 = v104;
  v64 = v107;
  sub_1BB874068();
  v107 = v64;
  if (!v64)
  {
    v67 = v111;
    v68 = MEMORY[0x1E0DEE9D8];
    if (!v111)
      v67 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v35[v34[11]] = v67;
    v110 = 7;
    v69 = v107;
    sub_1BB874068();
    v70 = v69;
    if (v69)
    {
      (*(void (**)(char *, uint64_t))(v108 + 8))(v63, v43);
      v71 = 0;
      v72 = 0;
      v73 = 0;
      v107 = v69;
      goto LABEL_37;
    }
    v74 = v111;
    if (!v111)
      v74 = v68;
    *(_QWORD *)&v35[v34[12]] = v74;
    v110 = 8;
    sub_1BB874068();
    v107 = 0;
    v75 = v111;
    if (!v111)
      v75 = v68;
    *(uint64_t *)((char *)v94 + v93[13]) = v75;
    v110 = 10;
    sub_1BA64D4E4();
    v76 = v107;
    sub_1BB8740D4();
    v107 = v76;
    if (v76)
    {
      (*(void (**)(char *, uint64_t))(v108 + 8))(v104, v43);
      v72 = 0;
      v73 = 0;
      v71 = 1;
LABEL_36:
      v34 = v93;
      v35 = (char *)v94;
LABEL_37:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v103 + 8))(&v35[v34[5]], v105);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6ED6EC((uint64_t)&v35[v34[10]], (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      result = swift_bridgeObjectRelease();
      if (v70)
      {
        if (v71)
          goto LABEL_39;
      }
      else
      {
        result = swift_bridgeObjectRelease();
        if ((v71 & 1) != 0)
        {
LABEL_39:
          result = swift_bridgeObjectRelease();
          if ((v72 & 1) == 0)
            goto LABEL_40;
          goto LABEL_44;
        }
      }
      if (!v72)
      {
LABEL_40:
        if (v73)
          return swift_bridgeObjectRelease();
        return result;
      }
LABEL_44:
      result = swift_bridgeObjectRelease();
      if ((v73 & 1) != 0)
        return swift_bridgeObjectRelease();
      return result;
    }
    v77 = v93[15];
    *(uint64_t *)((char *)v94 + v77) = v111;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9470, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v110 = 11;
    sub_1BA5DBC08((unint64_t *)&qword_1ED3B9478, (uint64_t (*)(void))sub_1BA8350B4, MEMORY[0x1E0DEAF40]);
    v78 = v107;
    sub_1BB874068();
    v107 = v78;
    if (v78)
    {
      (*(void (**)(char *, uint64_t))(v108 + 8))(v104, v43);
      v73 = 0;
      v71 = 1;
      v72 = 1;
      goto LABEL_36;
    }
    v79 = v111;
    if (!v111)
      v79 = v68;
    *(uint64_t *)((char *)v94 + v93[16]) = v79;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B96C0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v110 = 12;
    sub_1BA64D430((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    v80 = v107;
    sub_1BB874068();
    v107 = v80;
    if (v80)
    {
      (*(void (**)(char *, uint64_t))(v108 + 8))(v104, v43);
      v71 = 1;
      v72 = 1;
      v73 = 1;
      goto LABEL_36;
    }
    v81 = v111;
    if (!v111)
      v81 = MEMORY[0x1E0DEE9E8];
    *(uint64_t *)((char *)v94 + v93[17]) = v81;
    __swift_project_boxed_opaque_existential_1(v109, v109[3]);
    v82 = sub_1BB872874();
    v83 = Dictionary<>.bindingContent.getter(v82);
    swift_bridgeObjectRelease();
    if ((v83 & 1) != 0)
    {
      *(uint64_t *)((char *)v94 + v93[14]) = v68;
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v109, v109[3]);
      sub_1BA64D528();
      v84 = (void *)v107;
      sub_1BB87468C();
      v85 = v84;
      if (!v84)
      {
        sub_1BA6BCD04(0);
        sub_1BA4A2870(&qword_1ED3CF0D0, (uint64_t (*)(uint64_t))sub_1BA6BCD04, (uint64_t)&protocol conformance descriptor for FormatFileVersionURIReferenceCollection<A>);
        sub_1BB874068();
        v107 = 0;
        v89 = v111;
        if (v111)
        {
          if (*(_QWORD *)(v111 + 16))
          {
            (*(void (**)(char *, uint64_t))(v95 + 8))(v98, v96);
            *(uint64_t *)((char *)v94 + v93[14]) = v89;
            goto LABEL_53;
          }
          swift_bridgeObjectRelease();
        }
        sub_1BA89B940();
        v85 = (void *)swift_allocError();
        *v90 = 1;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v95 + 8))(v98, v96);
      }
      sub_1BA64D5B0(0);
      v110 = 9;
      sub_1BA4A2870((unint64_t *)&unk_1ED3B8400, (uint64_t (*)(uint64_t))sub_1BA64D5B0, (uint64_t)&protocol conformance descriptor for FormatFileReferenceCollection<A>);
      sub_1BB8740D4();
      v107 = 0;

      *(uint64_t *)((char *)v94 + v93[14]) = v111;
    }
LABEL_53:
    if (*(_QWORD *)(*(uint64_t *)((char *)v94 + v77) + 16))
    {
      (*(void (**)(char *, uint64_t))(v108 + 8))(v104, v43);
      v86 = v94;
      sub_1BA4C2DD8((uint64_t)v94, v97, type metadata accessor for FormatContent);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
      return sub_1BA4A2E80((uint64_t)v86, type metadata accessor for FormatContent);
    }
    sub_1BA89B940();
    v87 = swift_allocError();
    *v88 = 0;
    v107 = v87;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v104, v43);
    v65 = 1;
    v34 = v93;
    v35 = (char *)v94;
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v108 + 8))(v63, v43);
  v65 = 0;
LABEL_16:
  v66 = v106;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
  swift_bridgeObjectRelease();
  if (!v66)
    (*(void (**)(char *, uint64_t))(v103 + 8))(&v35[v34[5]], v105);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1BA6ED6EC((uint64_t)&v35[v34[10]], (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  if ((v65 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for FormatContent(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3B39F8);
}

uint64_t destroy for FormatContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 40);
  v7 = sub_1BB871E24();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA64D3D4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BA6BCC84();
    v8 = a2;
    result = MEMORY[0x1BCCE5B24](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA64D430(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BA50CAA8(255, (unint64_t *)&qword_1ED3B96C0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v8 = a2;
    result = MEMORY[0x1BCCE5B24](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA64D4AC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C0980, (uint64_t (*)(uint64_t))sub_1BA64D4C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA64D4C8(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3C0970, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
}

unint64_t sub_1BA64D4E4()
{
  unint64_t result;

  result = qword_1ED3B8760;
  if (!qword_1ED3B8760)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupCollection, &type metadata for FormatContentSubgroupCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B8760);
  }
  return result;
}

unint64_t sub_1BA64D528()
{
  unint64_t result;

  result = qword_1ED3C6998;
  if (!qword_1ED3C6998)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E904, &type metadata for FormatContent.AltCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3C6998);
  }
  return result;
}

unint64_t sub_1BA64D56C()
{
  unint64_t result;

  result = qword_1ED3B39E0;
  if (!qword_1ED3B39E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E8B4, &type metadata for FormatContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B39E0);
  }
  return result;
}

void sub_1BA64D5B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3B8410)
  {
    v2 = type metadata accessor for FormatPackage();
    v3 = sub_1BA4A2870((unint64_t *)&unk_1ED3C69B0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
    v5 = type metadata accessor for FormatFileReferenceCollection(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3B8410);
  }
}

unint64_t sub_1BA64D628()
{
  unint64_t result;

  result = qword_1ED3B4E50;
  if (!qword_1ED3B4E50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPlaceholder, &type metadata for FormatPlaceholder);
    atomic_store(result, (unint64_t *)&qword_1ED3B4E50);
  }
  return result;
}

uint64_t destroy for FormatContentSlotItemObject(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return swift_release();
    case 5:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for FormatWebEmbed();
      v4 = a1 + *(int *)(v3 + 20);
      v5 = sub_1BB86C67C();
      v6 = *(_QWORD *)(v5 - 8);
      v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v7(v4, v5);
      v8 = a1 + *(int *)(v3 + 24);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
        v7(v8, v5);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 8:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 9:
      goto LABEL_10;
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = a1 + *(int *)(type metadata accessor for FormatCustomItem() + 24);
      v10 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
      {
        v11 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
      }
      swift_bridgeObjectRelease();
LABEL_10:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA64D834(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA64D860(a1, a2, a3, *v3, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA64D860(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 48);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  v16 = 48 * v10;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t destroy for FeedContext(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA64DA48(_QWORD *a1)
{
  return FormatViewNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatViewNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_BYTE *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[4];
  int v50;
  _BYTE *v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE v64[96];
  uint64_t v65;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v51 = &v49[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v53 = &v49[-v6];
  MEMORY[0x1E0C80A78](v7);
  v54 = &v49[-v8];
  MEMORY[0x1E0C80A78](v9);
  v58 = &v49[-v10];
  MEMORY[0x1E0C80A78](v11);
  v60 = &v49[-v12];
  MEMORY[0x1E0C80A78](v13);
  v62 = &v49[-v14];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v49[-v16];
  sub_1BAED0014(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = &v49[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = *(_QWORD *)v1;
  v21 = *(_QWORD *)(v1 + 8);
  v61 = *(_QWORD *)(v1 + 16);
  v59 = *(_QWORD *)(v1 + 24);
  v23 = *(_QWORD *)(v1 + 32);
  v56 = *(_QWORD *)(v1 + 40);
  v57 = v23;
  v55 = *(unsigned __int8 *)(v1 + 48);
  sub_1BA6A09F0(v1 + 56, (uint64_t)v64, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v52 = *(_QWORD *)(v1 + 144);
  v50 = *(unsigned __int8 *)(v1 + 152);
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v26 = sub_1BAECFF0C();
  v27 = sub_1BA4A2870(&qword_1ED3D0E80, (uint64_t (*)(uint64_t))sub_1BAECFF0C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatViewNodeStyle.Selector, v28, v24, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, v26, (uint64_t)&type metadata for FormatVersions.JazzkonC, v25, (uint64_t)v20, v27, (uint64_t)&off_1E734BD80);
  v29 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v29 != -1)
    swift_once();
  v30 = sub_1BB86EB84();
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C20);
  v32 = *(void (**)(_BYTE *))(*(_QWORD *)(v30 - 8) + 16);
  v63 = v31;
  v32(v17);
  v33 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v34 = v65;
  sub_1BAD1B370(v22, v21, 0, 0, 0, (uint64_t)v17, (uint64_t)sub_1BA90CF04, 0);
  if (v34)
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v35 = (uint64_t)v62;
    v36 = v63;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v32)(v62, v63, v30);
    swift_storeEnumTagMultiPayload();
    v37 = v61;
    sub_1BA6E6C68(v61);
    sub_1BAD58F30(v37, 1, 0, 0, v35, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v37);
    v39 = (uint64_t)v60;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v32)(v60, v36, v30);
    swift_storeEnumTagMultiPayload();
    v40 = swift_bridgeObjectRetain();
    sub_1BAD59148(v40, 2, 0, 0, v39, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v39, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v41 = (uint64_t)v58;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v32)(v58, v36, v30);
    swift_storeEnumTagMultiPayload();
    v65 = v33;
    v42 = v56;
    v43 = v57;
    LOBYTE(v36) = v55;
    sub_1BA6E6C54(v57, v56, v55);
    sub_1BAD59378(v43, v42, v36, 3, 0, 0, v41, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v41, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v43, v42, v36);
    v44 = (uint64_t)v54;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v32)(v54, v63, v30);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD595AC((uint64_t)v64, 4, 0, 0, v44, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v44, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    v45 = (uint64_t)v53;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v32)(v53, v63, v30);
    swift_storeEnumTagMultiPayload();
    v46 = swift_bridgeObjectRetain();
    sub_1BAD59894(v46, 5, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v47 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476B78);
    v48 = (uint64_t)v51;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v32)(v51, v47, v30);
    swift_storeEnumTagMultiPayload();
    sub_1BAD59AB4(v50, 6, 0, 0, v48, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BAED0014);
}

unint64_t sub_1BA64E10C()
{
  unint64_t result;

  result = qword_1ED39B4B8;
  if (!qword_1ED39B4B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius, &type metadata for FormatCornerRadius);
    atomic_store(result, (unint64_t *)&qword_1ED39B4B8);
  }
  return result;
}

unint64_t sub_1BA64E150()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BE00;
  if (!qword_1ED39BE00)
  {
    sub_1BA4AD288(255, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA8365E8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BE00);
  }
  return result;
}

uint64_t sub_1BA64E1C8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BA64E1EC(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1BA64E1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86F778();
  sub_1BB86F76C();
  (*(void (**)(uint64_t, uint64_t))(a6 + 8))(a3, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a3);
}

unint64_t destroy for FeedBannerAd(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB8721C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 32) + 8);
  if (result >= 0x11)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t destroy for SportsDataVisualizationEventStatus()
{
  return swift_release();
}

uint64_t sub_1BA64E328@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA64FC18(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA64E350(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  _BYTE v50[12];
  int v51;
  uint64_t v52;
  int v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  _QWORD *v67;
  __int128 v68;
  char v69;
  uint64_t v70;
  __int128 v71;
  char v72;
  unint64_t v73;

  sub_1BA6927D0();
  v62 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  MEMORY[0x1E0C80A78](v2);
  v64 = &v50[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v66 = &v50[-v7];
  sub_1BAEE85B4();
  v65 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v50[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAECF684();
  sub_1BA4A2870(&qword_1ED3D15B0, (uint64_t (*)(uint64_t))sub_1BAECF684, (uint64_t)&unk_1BB8FFC6C);
  v13 = (uint64_t)v67;
  sub_1BB87468C();
  v14 = (void *)v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v60 = v6;
  v61 = v9;
  v15 = a1[3];
  v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v16 = sub_1BB872874();
  LOBYTE(v15) = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v17 = v65;
  if ((v15 & 1) != 0)
  {
    v18 = sub_1BB8740EC();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = (_BYTE *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19)
          goto LABEL_7;
      }
      v25 = *((_QWORD *)v20 - 2);
      v24 = *((_QWORD *)v20 - 1);
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v26);
      sub_1BAECF704();
      sub_1BA64EEAC();
      sub_1BAECF748();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v27 = sub_1BAE71220((uint64_t)&unk_1E7250C38);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v28 = v25;
      *(_QWORD *)(v28 + 8) = v24;
      *(_QWORD *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v25, v24, 1);
      (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v11, v17);
      a1 = v67;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v21 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEE85B4);
  v23 = v22;
  v71 = xmmword_1BB8A1A10;
  v72 = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v29 = v68;
  v71 = xmmword_1BB8D2D60;
  v72 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  *(_QWORD *)&v59 = v68;
  v58 = xmmword_1BB8D2D70;
  v71 = xmmword_1BB8D2D70;
  v72 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v68 = v58;
    v69 = 0;
    sub_1BAEB7D04();
    sub_1BB8740D4();
    v57 = v21;
    *(_QWORD *)&v58 = v29;
    v31 = v66;
    v32 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v31, v5);
  }
  else
  {
    v57 = v21;
    *(_QWORD *)&v58 = v29;
    v32 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for FormatViewNodeStyle();
  v71 = xmmword_1BB8D2D90;
  v72 = 0;
  sub_1BA4A2870(&qword_1ED3C88B8, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeStyle, (uint64_t)&protocol conformance descriptor for FormatViewNodeStyle);
  sub_1BB874068();
  v33 = v59;
  v34 = (_BYTE *)v68;
  type metadata accessor for FormatAnimationNodeStyle();
  v71 = xmmword_1BB8D2D80;
  v72 = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v66 = v34;
  v60 = v68;
  v56 = xmmword_1BB8D2DA0;
  v71 = xmmword_1BB8D2DA0;
  v72 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v68 = v56;
    v69 = 0;
    sub_1BB8740D4();
    v35 = v33;
    *(_QWORD *)&v56 = v73;
  }
  else
  {
    *(_QWORD *)&v56 = 0;
    v35 = v33;
  }
  v59 = xmmword_1BB8D2DB0;
  v71 = xmmword_1BB8D2DB0;
  v72 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v68 = v59;
    v69 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v36 = v73;
  }
  else
  {
    v36 = 0x8000000000000000;
  }
  v59 = xmmword_1BB8D2DD0;
  v71 = xmmword_1BB8D2DD0;
  v72 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v68 = v59;
    v69 = 0;
    sub_1BB8740D4();
    v37 = v73;
  }
  else
  {
    v37 = 1;
  }
  v71 = xmmword_1BB8D2DE0;
  v72 = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  v53 = v37;
  v55 = v36;
  *(_QWORD *)&v59 = v23;
  v52 = v68;
  v51 = BYTE8(v68);
  v54 = xmmword_1BB8D2DF0;
  v71 = xmmword_1BB8D2DF0;
  v72 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v38 = v35;
    v68 = v54;
    v69 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v39 = v63;
    v40 = v64;
    v41 = v11;
    sub_1BB8740D4();
    v42 = v17;
    v43 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v40, v39);
    v35 = v38;
  }
  else
  {
    v41 = v11;
    v42 = v17;
    v43 = MEMORY[0x1E0DEE9E8];
  }
  v71 = xmmword_1BB8D2E00;
  v72 = 0;
  v44 = sub_1BB87402C();
  v45 = (uint64_t)v66;
  v46 = v44;
  v48 = v47;
  (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v41, v42);
  *(_QWORD *)&v68 = v58;
  v73 = v35;
  v70 = v55;
  *(_QWORD *)&v71 = v52;
  BYTE8(v71) = v51;
  type metadata accessor for FormatViewNode();
  swift_allocObject();
  *((_QWORD *)&v49 + 1) = v46;
  *(_QWORD *)&v49 = v43;
  KeyPath = FormatViewNode.init(identifier:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:)(v57, v59, (uint64_t *)&v68, (uint64_t *)&v73, v32, v45, v60, v56, &v70, v53, (uint64_t *)&v71, v49, v48);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  return KeyPath;
}

unint64_t sub_1BA64EEAC()
{
  unint64_t result;

  result = qword_1ED3C6DA0;
  if (!qword_1ED3C6DA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3D30, &_s10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_1ED3C6DA0);
  }
  return result;
}

uint64_t sub_1BA64EEF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void (**v9)(_BYTE *, _QWORD);
  uint64_t v10;
  _BYTE *v11;
  uint64_t KeyPath;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  _BYTE *v41;
  char v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[4];
  int v50;
  uint64_t v51;
  __int128 v52;
  int v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  _BYTE *v60;
  _QWORD *v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (**v67)(_BYTE *, _QWORD);
  __int128 v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  char v73;
  uint64_t v74;

  sub_1BA6927D0();
  v64 = v2;
  v62 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v63 = &v49[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v66 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v49[-v6];
  sub_1BAEF1924();
  v65 = v8;
  v9 = *(void (***)(_BYTE *, _QWORD))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v49[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE9A098();
  sub_1BA4A2870(&qword_1ED3D15F0, (uint64_t (*)(uint64_t))sub_1BAE9A098, (uint64_t)&unk_1BB8FFC6C);
  v13 = v67;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v59 = v5;
  v60 = v7;
  v67 = v9;
  v15 = a1[3];
  v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v16 = sub_1BB872874();
  LOBYTE(v15) = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v17 = v65;
  v18 = v66;
  if ((v15 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v21 - 2);
      v25 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      sub_1BAE9A118();
      sub_1BA650EC0();
      sub_1BAE9A15C();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7250CE8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v29 = v26;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v25, 1);
      v67[1](v11, v17);
      a1 = v61;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF1924);
  v24 = v23;
  v72 = xmmword_1BB8A1A10;
  v73 = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v30 = v68;
  v72 = xmmword_1BB8D2D60;
  v73 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v32 = v68;
  v58 = xmmword_1BB8D2D70;
  v72 = xmmword_1BB8D2D70;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    *(_QWORD *)&v57 = v32;
    v68 = v58;
    v69 = 0;
    sub_1BAEB7D04();
    v33 = (uint64_t)v60;
    sub_1BB8740D4();
    *(_QWORD *)&v58 = v30;
    v34 = sub_1BB86DD08();
    v35 = v18;
    v36 = v34;
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v33, v35);
    v32 = v57;
  }
  else
  {
    *(_QWORD *)&v58 = v30;
    v36 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for FormatImageNodeStyle();
  v72 = xmmword_1BB8D2D90;
  v73 = 0;
  sub_1BA4A2870(&qword_1ED3C8E98, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNodeStyle, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
  sub_1BB874068();
  v66 = v22;
  v37 = v68;
  type metadata accessor for FormatAnimationNodeStyle();
  v72 = xmmword_1BB8D2D80;
  v73 = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v60 = (_BYTE *)v68;
  v72 = xmmword_1BB8D2DA0;
  v73 = 0;
  sub_1BA650F04();
  sub_1BB8740D4();
  v59 = v68;
  v57 = xmmword_1BB8D2DB0;
  v72 = xmmword_1BB8D2DB0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v68 = v57;
    v69 = 0;
    sub_1BB8740D4();
    v56 = v74;
  }
  else
  {
    v56 = 0;
  }
  v57 = xmmword_1BB8D2DD0;
  v72 = xmmword_1BB8D2DD0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v68 = v57;
    v69 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v38 = v74;
  }
  else
  {
    v38 = 0x8000000000000000;
  }
  *(_QWORD *)&v57 = v38;
  v55 = xmmword_1BB8D2DE0;
  v72 = xmmword_1BB8D2DE0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v68 = v55;
    v69 = 0;
    sub_1BB8740D4();
    *(_QWORD *)&v55 = v36;
    v39 = v74;
  }
  else
  {
    *(_QWORD *)&v55 = v36;
    v39 = 1;
  }
  v53 = v39;
  v54 = xmmword_1BB8D2DF0;
  v72 = xmmword_1BB8D2DF0;
  v73 = 0;
  v40 = v17;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v68 = v54;
    v69 = 0;
    sub_1BB8740D4();
    v41 = v11;
    v42 = v74;
  }
  else
  {
    v42 = 0;
    v41 = v11;
  }
  v72 = xmmword_1BB8D2E00;
  v73 = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  *(_QWORD *)&v54 = v24;
  v51 = v68;
  v50 = BYTE8(v68);
  v52 = xmmword_1BB8D2E10;
  v72 = xmmword_1BB8D2E10;
  v73 = 0;
  v43 = v41;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v68 = v52;
    v69 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v44 = v63;
    v45 = v64;
    *(_QWORD *)&v52 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v44, v45);
  }
  else
  {
    *(_QWORD *)&v52 = MEMORY[0x1E0DEE9E8];
  }
  v72 = xmmword_1BB8868A0;
  v73 = 0;
  v46 = sub_1BB87402C();
  v48 = v47;
  *(_QWORD *)&v68 = v58;
  v74 = v32;
  v70 = v57;
  v71 = v59;
  *(_QWORD *)&v72 = v51;
  BYTE8(v72) = v50;
  type metadata accessor for FormatImageNode();
  swift_allocObject();
  KeyPath = FormatImageNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:shouldCancelContextMenu:accessibilityRole:selectors:name:)(v66, v54, (uint64_t *)&v68, &v74, v55, v37, (uint64_t)v60, &v71, v56, &v70, v53, v42, (uint64_t *)&v72, v52, v46, v48);
  v67[1](v43, v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  return KeyPath;
}

uint64_t sub_1BA64FC18(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void (**v9)(_BYTE *, _QWORD);
  uint64_t v10;
  _BYTE *v11;
  uint64_t KeyPath;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  _BYTE v48[4];
  int v49;
  uint64_t v50;
  __int128 v51;
  unint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  _BYTE *v61;
  _QWORD *v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (**v68)(_BYTE *, _QWORD);
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  char v74;
  __int128 v75;
  uint64_t v76;
  unsigned __int16 v77;
  unint64_t v78;

  sub_1BA6927D0();
  v65 = v2;
  v63 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v64 = &v48[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v67 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v48[-v6];
  sub_1BAEF9584();
  v66 = v8;
  v9 = *(void (***)(_BYTE *, _QWORD))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v48[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE78364();
  sub_1BA4A2870(&qword_1ED3D1590, (uint64_t (*)(uint64_t))sub_1BAE78364, (uint64_t)&unk_1BB8FFC6C);
  v13 = v68;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v61 = v7;
  v60 = v5;
  v68 = v9;
  v15 = a1[3];
  v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v16 = sub_1BB872874();
  LOBYTE(v15) = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v17 = v66;
  v18 = v67;
  if ((v15 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v21 - 2);
      v25 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      sub_1BAE783E4();
      sub_1BA650C48();
      sub_1BAE78428();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7250BD8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v29 = v26;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v25, 1);
      v68[1](v11, v17);
      a1 = v62;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF9584);
  v24 = v23;
  v75 = xmmword_1BB8A1A10;
  LOBYTE(v76) = 0;
  sub_1BA650CD0();
  sub_1BB8740D4();
  v30 = v73;
  v75 = xmmword_1BB8D2D60;
  LOBYTE(v76) = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v32 = v73;
  v59 = xmmword_1BB8D2D70;
  v75 = xmmword_1BB8D2D70;
  LOBYTE(v76) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v58 = v32;
    v73 = v59;
    v74 = 0;
    sub_1BAEB7D04();
    v33 = (uint64_t)v61;
    sub_1BB8740D4();
    *(_QWORD *)&v59 = v22;
    v34 = sub_1BB86DD08();
    v35 = v18;
    v36 = v34;
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v33, v35);
    v32 = v58;
  }
  else
  {
    *(_QWORD *)&v59 = v22;
    v36 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for FormatTextNodeStyle();
  v75 = xmmword_1BB8D2D90;
  LOBYTE(v76) = 0;
  sub_1BA4A2870(&qword_1ED3C8748, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
  sub_1BB874068();
  v67 = v30;
  v37 = v73;
  type metadata accessor for FormatAnimationNodeStyle();
  v75 = xmmword_1BB8D2D80;
  LOBYTE(v76) = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v61 = (_BYTE *)v73;
  v75 = xmmword_1BB8D2DA0;
  LOBYTE(v76) = 0;
  sub_1BA650B5C();
  sub_1BB8740D4();
  v60 = v37;
  v38 = v73;
  v73 = xmmword_1BB8D2DB0;
  v74 = 0;
  sub_1BA650C04();
  sub_1BB874068();
  v57 = v38;
  v56 = v75;
  v39 = v76;
  LODWORD(v58) = v77;
  v55 = xmmword_1BB8D2DD0;
  v75 = xmmword_1BB8D2DD0;
  LOBYTE(v76) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v73 = v55;
    v74 = 0;
    sub_1BB8740D4();
    v52 = v78;
  }
  else
  {
    v52 = 0;
  }
  v55 = xmmword_1BB8D2DE0;
  v75 = xmmword_1BB8D2DE0;
  LOBYTE(v76) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v73 = v55;
    v74 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)&v55 = v24;
    v40 = v78;
  }
  else
  {
    *(_QWORD *)&v55 = v24;
    v40 = 0x8000000000000000;
  }
  v54 = v40;
  v53 = xmmword_1BB8D2DF0;
  v75 = xmmword_1BB8D2DF0;
  LOBYTE(v76) = 0;
  v41 = v11;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v73 = v53;
    v74 = 0;
    sub_1BB8740D4();
    LODWORD(v53) = v78;
  }
  else
  {
    LODWORD(v53) = 1;
  }
  v75 = xmmword_1BB8D2E00;
  LOBYTE(v76) = 0;
  sub_1BA650C8C();
  sub_1BB874068();
  LODWORD(v66) = v73;
  v75 = xmmword_1BB8D2E10;
  LOBYTE(v76) = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  v50 = v73;
  v49 = BYTE8(v73);
  v51 = xmmword_1BB8868A0;
  v75 = xmmword_1BB8868A0;
  LOBYTE(v76) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v73 = v51;
    v74 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v43 = v64;
    v42 = v65;
    *(_QWORD *)&v51 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v43, v42);
  }
  else
  {
    *(_QWORD *)&v51 = MEMORY[0x1E0DEE9E8];
  }
  v75 = xmmword_1BB8D2E20;
  LOBYTE(v76) = 0;
  v44 = sub_1BB87402C();
  v46 = v45;
  v68[1](v41, v17);
  v78 = v67;
  v71 = v57;
  v72 = v32;
  v75 = v56;
  v76 = v39;
  v77 = v58;
  v70 = v54;
  v69 = v66;
  *(_QWORD *)&v73 = v50;
  BYTE8(v73) = v49;
  type metadata accessor for FormatTextNode();
  swift_allocObject();
  *((_QWORD *)&v47 + 1) = v44;
  *(_QWORD *)&v47 = v51;
  KeyPath = sub_1BA650D14(v59, v55, (uint64_t *)&v78, &v72, v36, v60, (uint64_t)v61, &v71, &v75, v52, &v70, v53, &v69, (uint64_t *)&v73, v47, v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  return KeyPath;
}

unint64_t sub_1BA650B18()
{
  unint64_t result;

  result = qword_1ED3C6868;
  if (!qword_1ED3C6868)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResize, &type metadata for FormatResize);
    atomic_store(result, (unint64_t *)&qword_1ED3C6868);
  }
  return result;
}

unint64_t sub_1BA650B5C()
{
  unint64_t result;

  result = qword_1ED3B5160;
  if (!qword_1ED3B5160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextContent, &type metadata for FormatTextContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B5160);
  }
  return result;
}

unint64_t sub_1BA650BA0()
{
  unint64_t result;

  result = qword_1ED3B80E0;
  if (!qword_1ED3B80E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeAccessibilityRole, &type metadata for FormatNodeAccessibilityRole);
    atomic_store(result, (unint64_t *)&qword_1ED3B80E0);
  }
  return result;
}

uint64_t type metadata accessor for FormatAnimationNodeStyle()
{
  return objc_opt_self();
}

unint64_t sub_1BA650C04()
{
  unint64_t result;

  result = qword_1ED3B7E08;
  if (!qword_1ED3B7E08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatComputedInvalidation, &type metadata for FormatComputedInvalidation);
    atomic_store(result, (unint64_t *)&qword_1ED3B7E08);
  }
  return result;
}

unint64_t sub_1BA650C48()
{
  unint64_t result;

  result = qword_1ED3C6CD0;
  if (!qword_1ED3C6CD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0338, &_s10CodingKeysON_223);
    atomic_store(result, (unint64_t *)&qword_1ED3C6CD0);
  }
  return result;
}

unint64_t sub_1BA650C8C()
{
  unint64_t result;

  result = qword_1ED3B5AA0;
  if (!qword_1ED3B5AA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibility, &type metadata for FormatAccessibility);
    atomic_store(result, (unint64_t *)&qword_1ED3B5AA0);
  }
  return result;
}

unint64_t sub_1BA650CD0()
{
  unint64_t result;

  result = qword_1ED3B4258;
  if (!qword_1ED3B4258)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextSize, &type metadata for FormatTextSize);
    atomic_store(result, (unint64_t *)&qword_1ED3B4258);
  }
  return result;
}

uint64_t sub_1BA650D14(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, __int128 *a9, uint64_t a10, uint64_t *a11, char a12, char *a13, uint64_t *a14, __int128 a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  char v24;
  uint64_t v25;
  __int128 v27;
  char v28;
  uint64_t v32;

  v19 = *a3;
  v20 = *a4;
  v21 = *a8;
  v27 = *a9;
  v22 = *((_QWORD *)a9 + 2);
  v23 = *((_WORD *)a9 + 12);
  v32 = *a11;
  v24 = *a13;
  v25 = *a14;
  v28 = *((_BYTE *)a14 + 8);
  swift_beginAccess();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = v19;
  *(_QWORD *)(v16 + 40) = v20;
  swift_beginAccess();
  *(_QWORD *)(v16 + 48) = a5;
  *(_QWORD *)(v16 + 56) = a6;
  *(_QWORD *)(v16 + 64) = a7;
  *(_QWORD *)(v16 + 72) = v21;
  *(_OWORD *)(v16 + 80) = v27;
  *(_QWORD *)(v16 + 96) = v22;
  *(_WORD *)(v16 + 104) = v23;
  swift_beginAccess();
  *(_QWORD *)(v16 + 112) = a10;
  *(_BYTE *)(v16 + 129) = v24;
  *(_QWORD *)(v16 + 136) = v25;
  *(_BYTE *)(v16 + 144) = v28;
  swift_beginAccess();
  *(_OWORD *)(v16 + 152) = a15;
  *(_QWORD *)(v16 + 168) = a16;
  swift_beginAccess();
  *(_QWORD *)(v16 + 120) = v32;
  swift_beginAccess();
  *(_BYTE *)(v16 + 128) = a12;
  return v16;
}

uint64_t type metadata accessor for FormatImageNode()
{
  return objc_opt_self();
}

unint64_t sub_1BA650EC0()
{
  unint64_t result;

  result = qword_1ED3C6EE0;
  if (!qword_1ED3C6EE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA2C0, &_s10CodingKeysON_116);
    atomic_store(result, (unint64_t *)&qword_1ED3C6EE0);
  }
  return result;
}

unint64_t sub_1BA650F04()
{
  unint64_t result;

  result = qword_1ED3B7118;
  if (!qword_1ED3B7118)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAsyncImageContent, &type metadata for FormatAsyncImageContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B7118);
  }
  return result;
}

uint64_t FormatImageNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:shouldCancelContextMenu:accessibilityRole:selectors:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t *a10, char a11, char a12, uint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v21 = *a3;
  v22 = *a4;
  v23 = *a8;
  v26 = *a10;
  v27 = *a13;
  v28 = *((_BYTE *)a13 + 8);
  *(_QWORD *)(v16 + 136) = 0;
  *(_QWORD *)(v16 + 128) = 0;
  swift_beginAccess();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = v21;
  *(_QWORD *)(v16 + 40) = v22;
  swift_beginAccess();
  *(_QWORD *)(v16 + 48) = a5;
  *(_QWORD *)(v16 + 56) = a6;
  *(_QWORD *)(v16 + 64) = a7;
  *(_QWORD *)(v16 + 72) = v23;
  swift_beginAccess();
  *(_QWORD *)(v16 + 80) = a9;
  swift_beginAccess();
  *(_QWORD *)(v16 + 88) = v26;
  swift_beginAccess();
  *(_BYTE *)(v16 + 96) = a11;
  swift_beginAccess();
  *(_BYTE *)(v16 + 97) = a12;
  *(_QWORD *)(v16 + 104) = v27;
  *(_BYTE *)(v16 + 112) = v28;
  swift_beginAccess();
  *(_QWORD *)(v16 + 120) = a14;
  swift_beginAccess();
  *(_QWORD *)(v16 + 128) = a15;
  *(_QWORD *)(v16 + 136) = a16;
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t FormatViewNode.init(identifier:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, char a10, uint64_t *a11, __int128 a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;

  v20 = *a3;
  v21 = *a4;
  v22 = *a9;
  v24 = *a11;
  v25 = *((_BYTE *)a11 + 8);
  swift_beginAccess();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  *(_QWORD *)(v13 + 32) = v20;
  *(_QWORD *)(v13 + 40) = v21;
  swift_beginAccess();
  *(_QWORD *)(v13 + 48) = a5;
  *(_QWORD *)(v13 + 56) = a6;
  *(_QWORD *)(v13 + 64) = a7;
  swift_beginAccess();
  *(_QWORD *)(v13 + 72) = a8;
  swift_beginAccess();
  *(_QWORD *)(v13 + 80) = v22;
  swift_beginAccess();
  *(_BYTE *)(v13 + 88) = a10;
  *(_QWORD *)(v13 + 96) = v24;
  *(_BYTE *)(v13 + 104) = v25;
  swift_beginAccess();
  *(_OWORD *)(v13 + 112) = a12;
  *(_QWORD *)(v13 + 128) = a13;
  return v13;
}

unint64_t sub_1BA651250()
{
  unint64_t result;

  result = qword_1ED3BDD70;
  if (!qword_1ED3BDD70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVisibility, &type metadata for FormatVisibility);
    atomic_store(result, (unint64_t *)&qword_1ED3BDD70);
  }
  return result;
}

void sub_1BA651294(_QWORD *a1)
{
  FormatExpression.encode(to:)(a1);
}

void FormatExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD v38[48];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v38[11] = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v38[10] = (char *)v38 - v7;
  MEMORY[0x1E0C80A78](v8);
  v38[9] = (char *)v38 - v9;
  MEMORY[0x1E0C80A78](v10);
  v38[8] = (char *)v38 - v11;
  MEMORY[0x1E0C80A78](v12);
  v38[7] = (char *)v38 - v13;
  MEMORY[0x1E0C80A78](v14);
  v38[6] = (char *)v38 - v15;
  MEMORY[0x1E0C80A78](v16);
  v38[5] = (char *)v38 - v17;
  MEMORY[0x1E0C80A78](v18);
  v38[4] = (char *)v38 - v19;
  MEMORY[0x1E0C80A78](v20);
  v38[3] = (char *)v38 - v21;
  MEMORY[0x1E0C80A78](v22);
  v38[1] = (char *)v38 - v23;
  MEMORY[0x1E0C80A78](v24);
  v38[2] = (char *)v38 - v25;
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78](v29);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v38 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *v2;
  v35 = a1[3];
  v34 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  v36 = sub_1BA6B8518();
  v38[47] = v32;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatExpression, v37, v35, (uint64_t)&type metadata for FormatExpression, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v34, (uint64_t)v32, v36, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA65159C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_BYTE *)(v1 + 16);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v4 = sub_1BB86EB84();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v0, v5, v4);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v2 - 72);
  sub_1BA6533F0(0, v3, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v6, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA652144(__int128 *a1, uint64_t a2)
{
  __swift_memcpy107_8(a2, a1);
  return a2;
}

uint64_t sub_1BA652180(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[40];

  v16[39] = a1;
  sub_1BA711488(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3984;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA652334();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA6522F0()
{
  unint64_t result;

  result = qword_1ED3A5958;
  if (!qword_1ED3A5958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8C60, &_s10CodingTypeON_101);
    atomic_store(result, (unint64_t *)&qword_1ED3A5958);
  }
  return result;
}

unint64_t sub_1BA652334()
{
  unint64_t result;

  result = qword_1ED39B848;
  if (!qword_1ED39B848)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionExpression, &type metadata for FormatOptionExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39B848);
  }
  return result;
}

uint64_t sub_1BA652378(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[112];

  v16[111] = a1;
  sub_1BA652144(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3984;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA6524E8();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA6524E8()
{
  unint64_t result;

  result = qword_1ED39B8B8;
  if (!qword_1ED39B8B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingExpression, &type metadata for FormatBindingExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39B8B8);
  }
  return result;
}

uint64_t sub_1BA65252C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3984;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA652690();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA652690()
{
  unint64_t result;

  result = qword_1ED39B508;
  if (!qword_1ED39B508)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAndExpression, &type metadata for FormatAndExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39B508);
  }
  return result;
}

uint64_t sub_1BA6526D4(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = *((_QWORD *)a2 + 4);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3984;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA652844();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA652844()
{
  unint64_t result;

  result = qword_1ED39B620;
  if (!qword_1ED39B620)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindExpression, &type metadata for FormatBindExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39B620);
  }
  return result;
}

uint64_t sub_1BA652888(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3984;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA6529F0();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA6529F0()
{
  unint64_t result;

  result = qword_1ED39B838;
  if (!qword_1ED39B838)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayoutExpression, &type metadata for FormatLayoutExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39B838);
  }
  return result;
}

uint64_t sub_1BA652A34(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3984;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA652B98();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA652B98()
{
  unint64_t result;

  result = qword_1ED39B920;
  if (!qword_1ED39B920)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorExpression, &type metadata for FormatSelectorExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39B920);
  }
  return result;
}

uint64_t sub_1BA652BDC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3984;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA652D40();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA652D40()
{
  unint64_t result;

  result = qword_1ED3A0428;
  if (!qword_1ED3A0428)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorsExpression, &type metadata for FormatSelectorsExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3A0428);
  }
  return result;
}

uint64_t sub_1BA652D84(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3984;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA652EE8();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA652EE8()
{
  unint64_t result;

  result = qword_1ED39B4E0;
  if (!qword_1ED39B4E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOrExpression, &type metadata for FormatOrExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39B4E0);
  }
  return result;
}

uint64_t sub_1BA652F2C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3984;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA653090();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA653090()
{
  unint64_t result;

  result = qword_1ED39B528;
  if (!qword_1ED39B528)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNotExpression, &type metadata for FormatNotExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39B528);
  }
  return result;
}

uint64_t sub_1BA6530D4(char a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  char v20;

  v20 = a1;
  v17 = a2;
  v18 = a3;
  v19 = BYTE2(a3) & 1;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3984;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5E97C0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA653244(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF3984;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA6533AC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA6533AC()
{
  unint64_t result;

  result = qword_1ED39BA08;
  if (!qword_1ED39BA08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBindExpression, &type metadata for FormatGroupBindExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39BA08);
  }
  return result;
}

uint64_t sub_1BA6533F0(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3984;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v15 = 0uLL;
    sub_1BB874464();
    if (v16 != 3)
    {
      v15 = xmmword_1BB87FC90;
      sub_1BA827EEC();
      sub_1BB874464();
    }
  }
  return swift_release();
}

void sub_1BA653560(uint64_t a1, uint64_t a2)
{
  FormatValue.encode(to:)(a1, a2);
}

void FormatValue.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = _s10CodingKeysOMa_9(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v4);
  MEMORY[0x1BCCE5B24](&unk_1BB8C42F0, v5);
  MEMORY[0x1BCCE5B24](&unk_1BB8C42A0, v5);
  MEMORY[0x1BCCE5B24](&unk_1BB8C4278, v5);
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA653638(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v7 = sub_1BB8741D0();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v7);
  v10 = type metadata accessor for VersionedKeyedEncodingContainer(0, v7, v8, v9);
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - v11;
  v13 = v3[3];
  v14 = v3[4];
  v15 = __swift_project_boxed_opaque_existential_1(v3, v13);
  sub_1BA6EC1EC(v1, (uint64_t)v15, v13, v1, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v12, v6, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 104) = 0;
  *(_BYTE *)(v4 - 96) = 0;
  if (qword_1ED3C2478 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v2, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA6EE974(*(_QWORD *)(v4 - 120), v4 - 112, v2, (uint64_t)sub_1BA90CF04, 0, v10, *(_QWORD *)(v4 - 128), *(_QWORD *)(*(_QWORD *)(v4 - 136) + 16));
  sub_1BA4A2E80(v2, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v12, v10);
}

uint64_t sub_1BA6537F8()
{
  return sub_1BB86DEE8();
}

uint64_t type metadata accessor for FeedGroupEmitterInitialCursorContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupEmitterInitialCursorContext);
}

uint64_t FeedGroupConfig.identifier.getter()
{
  uint64_t v0;

  v0 = sub_1BA653870();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BA653870()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1BA653878(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = a1 + 15;
  swift_release();
  v4 = v3 & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v4 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v4 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1BA653904(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA6E3434(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA7904E4);
}

uint64_t sub_1BA653910(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(void **)(a1 + 56);
  v5 = *(id *)a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v2, v3);
  v6 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t FeedCursorContainer.feedContext.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void *v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t result;

  if (a1 < 0)
    v3 = (a1 & 0x7FFFFFFFFFFFFFFFLL) + qword_1ED476448;
  else
    v3 = a1 + qword_1ED476788;
  v4 = *(void **)v3;
  v5 = *(_BYTE *)(v3 + 8);
  v6 = *(_BYTE *)(v3 + 9);
  v7 = *(_BYTE *)(v3 + 10);
  v8 = *(_BYTE *)(v3 + 11);
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v3 + 24);
  v11 = *(_QWORD *)(v3 + 32);
  v12 = *(_QWORD *)(v3 + 40);
  v13 = *(_BYTE *)(v3 + 48);
  v15 = *(void **)(v3 + 56);
  v14 = *(_QWORD *)(v3 + 64);
  v16 = *(_QWORD *)(v3 + 72);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_BYTE *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 9) = v6;
  *(_BYTE *)(a2 + 10) = v7;
  *(_BYTE *)(a2 + 11) = v8;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v12;
  *(_BYTE *)(a2 + 48) = v13;
  v17 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v11, v12);
  v18 = v15;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  *(_QWORD *)(a2 + 56) = v15;
  *(_QWORD *)(a2 + 64) = v14;
  *(_QWORD *)(a2 + 72) = v16;
  return result;
}

uint64_t FeedModel.context.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;

  v3 = v2 + *(int *)(a1 + 52);
  v4 = *(void **)v3;
  v5 = *(_BYTE *)(v3 + 8);
  v6 = *(_BYTE *)(v3 + 9);
  v7 = *(_BYTE *)(v3 + 10);
  v8 = *(_BYTE *)(v3 + 11);
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v3 + 24);
  v11 = *(_QWORD *)(v3 + 32);
  v12 = *(_QWORD *)(v3 + 40);
  v13 = *(_BYTE *)(v3 + 48);
  v15 = *(void **)(v3 + 56);
  v14 = *(_QWORD *)(v3 + 64);
  v16 = *(_QWORD *)(v3 + 72);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_BYTE *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 9) = v6;
  *(_BYTE *)(a2 + 10) = v7;
  *(_BYTE *)(a2 + 11) = v8;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v12;
  *(_BYTE *)(a2 + 48) = v13;
  *(_QWORD *)(a2 + 56) = v15;
  *(_QWORD *)(a2 + 64) = v14;
  *(_QWORD *)(a2 + 72) = v16;
  v17 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v11, v12);
  v18 = v15;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA653B2C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BA653B44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  __int128 v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a6 + 24) = *((_OWORD *)a2 + 1);
  v10 = *a2;
  v11 = *((_BYTE *)a2 + 8);
  v12 = *((_BYTE *)a2 + 9);
  v13 = *((_BYTE *)a2 + 10);
  v14 = *((_BYTE *)a2 + 11);
  v15 = *((_BYTE *)a2 + 48);
  v16 = a2[7];
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = v10;
  *(_BYTE *)(a6 + 16) = v11;
  *(_BYTE *)(a6 + 17) = v12;
  *(_BYTE *)(a6 + 18) = v13;
  *(_BYTE *)(a6 + 19) = v14;
  *(_OWORD *)(a6 + 40) = v9;
  *(_BYTE *)(a6 + 56) = v15;
  *(_QWORD *)(a6 + 64) = v16;
  *(_OWORD *)(a6 + 72) = *((_OWORD *)a2 + 4);
  v17 = a6 + *(int *)(type metadata accessor for FeedGroupEmitterInitialCursorContext(0, a4, a5, a4) + 40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v17, a3, a4);
}

uint64_t sub_1BA653BE4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1BA653C04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 88))();
}

uint64_t sub_1BA653C3C(_QWORD *a1)
{
  return FormatSwitchNodeCase.encode(to:)(a1);
}

uint64_t FormatSwitchNodeCase.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v29;
  char *v30;
  __int128 v31;
  char v32;
  uint64_t v33;

  v3 = v2;
  v4 = v1;
  v6 = *v1;
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v30 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  sub_1BAEC2874(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAEC2964();
  v18 = sub_1BA4A2870(&qword_1ED3D0F30, (uint64_t (*)(uint64_t))sub_1BAEC2964, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v6, v19, v15, v6, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v14, v18, (uint64_t)&off_1E734BD80);
  v29 = v4;
  v20 = v4[2];
  v21 = qword_1ED3C2478;
  swift_retain();
  if (v21 != -1)
    swift_once();
  v22 = sub_1BB86EB84();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C20);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24(v11, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD18DEC(v20, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v3)
  {
    v25 = v29;
    swift_beginAccess();
    v26 = v25[3];
    v27 = (uint64_t)v30;
    v24(v30, v23, v22);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if ((sub_1BAE4C344(v27, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v31 = xmmword_1BB8A1A10;
      v32 = 0;
      v33 = v26;
      sub_1BAEC28EC();
      sub_1BA4A2870(&qword_1ED3AEAA0, (uint64_t (*)(uint64_t))sub_1BAEC28EC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA653FC0();
      v27 = (uint64_t)v30;
      sub_1BB874464();
    }
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BAEC2874);
}

unint64_t sub_1BA653FC0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A2F50;
  if (!qword_1ED3A2F50)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA49B0D0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A2F50);
  }
  return result;
}

unint64_t sub_1BA654038()
{
  unint64_t result;

  result = qword_1ED39B340;
  if (!qword_1ED39B340)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatExpression, &type metadata for FormatExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39B340);
  }
  return result;
}

uint64_t sub_1BA65407C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSize.init(from:)(a1, a2);
}

uint64_t FormatSize.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[2];
  uint64_t v22;

  v22 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_8:
    sub_1BA654FE4();
    v20[1] = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726E348;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA654FE4()
{
  unint64_t result;

  result = qword_1ED3C6468;
  if (!qword_1ED3C6468)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6CB8, &_s10CodingTypeON_30);
    atomic_store(result, (unint64_t *)&qword_1ED3C6468);
  }
  return result;
}

void sub_1BA655028(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3B34A0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    v3 = v2;
    v4 = sub_1BA83585C();
    v6 = type metadata accessor for FormatValue(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3B34A0);
  }
}

unint64_t sub_1BA6550A8()
{
  unint64_t result;

  result = qword_1ED3B3310;
  if (!qword_1ED3B3310)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRatio, &type metadata for FormatRatio);
    atomic_store(result, (unint64_t *)&qword_1ED3B3310);
  }
  return result;
}

unint64_t sub_1BA6550EC()
{
  unint64_t result;

  result = qword_1ED3B6680;
  if (!qword_1ED3B6680)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDimensionSizing, &type metadata for FormatDimensionSizing);
    atomic_store(result, (unint64_t *)&qword_1ED3B6680);
  }
  return result;
}

unint64_t sub_1BA655130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B50E8;
  if (!qword_1ED3B50E8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B50F0, (uint64_t (*)(void))sub_1BA8375CC, (uint64_t)&type metadata for FormatSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B50E8);
  }
  return result;
}

unint64_t sub_1BA655198()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C76D8;
  if (!qword_1ED3C76D8)
  {
    sub_1BA50CAA8(255, &qword_1ED3C76E0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSizeColumn);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSizeColumn<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C76D8);
  }
  return result;
}

void sub_1BA655200(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3C76D0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    v3 = v2;
    v4 = sub_1BA83585C();
    v6 = type metadata accessor for FormatSizeColumn(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3C76D0);
  }
}

unint64_t sub_1BA655280()
{
  unint64_t result;

  result = qword_1ED3B7388;
  if (!qword_1ED3B7388)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPublisherLogoSize, &type metadata for FormatPublisherLogoSize);
    atomic_store(result, (unint64_t *)&qword_1ED3B7388);
  }
  return result;
}

unint64_t sub_1BA6552C4()
{
  unint64_t result;

  result = qword_1ED3B5B38[0];
  if (!qword_1ED3B5B38[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColumnRowSpan, &type metadata for FormatColumnRowSpan);
    atomic_store(result, qword_1ED3B5B38);
  }
  return result;
}

unint64_t sub_1BA655308()
{
  unint64_t result;

  result = qword_1ED3BEB90;
  if (!qword_1ED3BEB90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontMetricSizing, &type metadata for FormatFontMetricSizing);
    atomic_store(result, (unint64_t *)&qword_1ED3BEB90);
  }
  return result;
}

uint64_t sub_1BA65534C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, _QWORD *);
  uint64_t v20;
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v24 - v11);
  v13 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = objc_msgSend(*(id *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20) + 40), sel_hasThumbnail);
  sub_1BA4C2DD8(a3, (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Options);
  if (v16)
  {
    v17 = *v15;
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Options);
    if ((v17 & 2) == 0)
    {
      v25 = a1;
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = 0x401C000000000000;
      *v12 = v18;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB63F0], v9);
      v19 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
      sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v19, MEMORY[0x1E0DB5A18]);
      sub_1BB86D4EC();
      (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Options);
  }
  v25 = a1;
  v20 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB63C0], v9);
  MEMORY[0x1E0C80A78](v20);
  *(&v24 - 4) = a4;
  *(&v24 - 3) = a2;
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  v23 = sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v21, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BA655600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  void (*v29)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v30)(uint64_t, _QWORD *);
  void (*v31)(uint64_t *, uint64_t);
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  void (*v52)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, _QWORD *);
  _QWORD v57[4];
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;

  v59 = a1;
  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v60 = (_QWORD *)((char *)v57 - v10);
  sub_1BA6566D4();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (_QWORD *)((char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20);
  v57[2] = a2;
  v18 = a2 + v17;
  v19 = objc_msgSend(*(id *)(v18 + 40), sel_hasThumbnail);
  v58 = a3;
  sub_1BA4C2DD8(a3, (uint64_t)v16, type metadata accessor for HeadlineViewLayout.Options);
  v20 = (unsigned int *)MEMORY[0x1E0DB63C0];
  v57[3] = a4;
  if (v19)
  {
    v21 = *v16;
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for HeadlineViewLayout.Options);
    if ((v21 & 2) == 0)
    {
      v61 = v59;
      v57[1] = swift_getKeyPath();
      v22 = sub_1BB86DA2C();
      v23 = swift_allocBox();
      v25 = v24;
      sub_1BA4C2DD8(v58 + *(int *)(v14 + 20), (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA6566D4);
      v26 = sub_1BB86DA20();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v13, 1, v26) == 1)
      {
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 104))(v25, *MEMORY[0x1E0DB61C8], v26);
        sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA6566D4);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v25, v13, v26);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v25, *MEMORY[0x1E0DB61E8], v22);
      v28 = v60;
      *v60 = v23;
      v29 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104);
      v29(v28, *MEMORY[0x1E0DB63E0], v8);
      v30 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
      sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v30, MEMORY[0x1E0DB5A18]);
      sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
      sub_1BB86D4E0();
      swift_release();
      v31 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
      v31(v28, v8);
      if (objc_msgSend(*(id *)(v18 + 40), sel_hasVideo))
      {
        v32 = v60;
        v61 = v59;
        v29(v60, *v20, v8);
        sub_1BB86D540();
        v31(v32, v8);
      }
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for HeadlineViewLayout.Options);
  }
  v61 = v59;
  sub_1BA657B88();
  v34 = v33;
  v59 = swift_allocBox();
  v36 = v35;
  v37 = (uint64_t *)(v35 + *(int *)(v34 + 48));
  v38 = (uint64_t *)(v35 + *(int *)(v34 + 64));
  v39 = *MEMORY[0x1E0DB5B38];
  sub_1BA6577C0(0, &qword_1ED3B0630, MEMORY[0x1E0DB5B40]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v36, v39, v40);
  sub_1BA71C838();
  v42 = v41;
  v43 = swift_allocBox();
  v45 = v44;
  v46 = v44 + *(int *)(v42 + 48);
  v47 = *MEMORY[0x1E0DB5F98];
  v48 = sub_1BB86D894();
  v49 = v9;
  v50 = v8;
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104);
  v51(v45, v47, v48);
  v51(v46, *MEMORY[0x1E0DB5FB8], v48);
  *v37 = v43;
  v52 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v49 + 104);
  v52(v37, *MEMORY[0x1E0DB63D0], v50);
  v52(v38, *MEMORY[0x1E0DB63C0], v50);
  v53 = v60;
  *v60 = v59;
  v54 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v52)(v53, *MEMORY[0x1E0DB63B0], v50);
  MEMORY[0x1E0C80A78](v54);
  v55 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v55, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v49 + 8))(v53, v50);
}

uint64_t sub_1BA655BB8(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t (*v26)(uint64_t, _QWORD *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t *);
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t result;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  void (*v60)(void);
  uint64_t v61;
  id v62;
  void (*v63)(uint64_t *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t *);
  id v74;
  void (*v75)(uint64_t *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD v88[2];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(void);
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  unsigned int v110;
  uint64_t v111;
  void (*v112)(uint64_t *, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t *);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  v109 = a4;
  v6 = type metadata accessor for HeadlineViewLayout.Context(0);
  v103 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v104 = v7;
  v108 = (uint64_t)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6577C0(0, &qword_1ED3B0630, MEMORY[0x1E0DB5B40]);
  v106 = *(_QWORD *)(v8 - 8);
  v107 = v8;
  MEMORY[0x1E0C80A78](v8);
  v105 = (char *)&v91 - v9;
  v102 = sub_1BB8726B8();
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v100 = (uint64_t *)((char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v91 - v17;
  v117 = a1;
  v120 = a1;
  swift_getKeyPath();
  sub_1BB86D930();
  v20 = round(v19 * 56.0 * 0.25);
  if (byte_1EF3D0978)
    v21 = v20;
  else
    v21 = 14.0;
  v113 = v6;
  v22 = *(int *)(v6 + 20);
  v118 = a3;
  v23 = objc_msgSend(*(id *)(a3 + v22 + 40), sel_sourceChannel);
  if (v23)
  {
    v24 = objc_msgSend(v23, sel_theme);
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0;
  }
  v25 = objc_msgSend((id)objc_opt_self(), sel_defaultMetrics);
  sub_1BA6578EC(v24, v25, (uint64_t)v18, v21);

  swift_unknownObjectRelease();
  v26 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  v28 = v27;
  v29 = sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v26, MEMORY[0x1E0DB5A18]);
  v111 = sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  v30 = *(void (**)(char *, uint64_t))(v13 + 8);
  v30(v18, v12);
  v31 = v117;
  v120 = v117;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = 0x4014000000000000;
  *v15 = v32;
  v33 = *(void (**)(uint64_t *))(v13 + 104);
  v110 = *MEMORY[0x1E0DB63F0];
  v33(v15);
  sub_1BB86D4EC();
  v34 = ((uint64_t (*)(uint64_t *, uint64_t))v30)(v15, v12);
  v120 = v31;
  v35 = MEMORY[0x1E0C80A78](v34);
  v36 = v118;
  v89 = v118;
  v37 = *MEMORY[0x1E0DB63C0];
  v116 = v33;
  ((void (*)(uint64_t *, uint64_t, uint64_t, double))v33)(v15, v37, v12, v35);
  v114 = v29;
  v90 = v29;
  v115 = v28;
  v88[1] = v88;
  v89 = v28;
  v88[0] = sub_1BA8151B8;
  sub_1BB86D540();
  v112 = (void (*)(uint64_t *, uint64_t))v30;
  v30((char *)v15, v12);
  v119 = v31;
  swift_getKeyPath();
  v38 = *(_QWORD *)(v36 + *(int *)(v113 + 28));
  if ((*(_BYTE *)(v38 + qword_1ED3B2F88) & 1) != 0)
    goto LABEL_9;
  sub_1BA657D64();
  v39 = sub_1BB87345C();
  v40 = v100;
  *v100 = v39;
  v41 = v101;
  v42 = v102;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v101 + 104))(v40, *MEMORY[0x1E0DEF738], v102);
  v43 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v41 + 8))(v40, v42);
  if ((v43 & 1) != 0)
  {
LABEL_9:
    v45 = swift_allocObject();
    v46 = *(void **)(v38 + *(_QWORD *)(*(_QWORD *)v38 + 136));
    *(_QWORD *)(v45 + 16) = v46;
    *v15 = v45;
    v99 = *MEMORY[0x1E0DB6398];
    v116(v15);
    sub_1BA656FEC();
    v48 = v47;
    sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v50 = v49;
    v51 = *(_QWORD *)(v49 - 8);
    v52 = *(unsigned __int8 *)(v51 + 80);
    v53 = (v52 + 32) & ~v52;
    v54 = v53 + *(_QWORD *)(v51 + 72);
    v97 = v48;
    v95 = v54;
    v94 = v52 | 7;
    v55 = swift_allocObject();
    v93 = xmmword_1BB87CE70;
    *(_OWORD *)(v55 + 16) = xmmword_1BB87CE70;
    v96 = v53;
    v56 = (_QWORD *)(v55 + v53);
    v57 = type metadata accessor for HeadlineViewLayout.Options(0);
    v58 = v109;
    *v56 = *(_QWORD *)&v109[*(int *)(v57 + 24)];
    v59 = *MEMORY[0x1E0DB5BB8];
    v60 = *(void (**)(void))(v51 + 104);
    v61 = v118;
    v98 = v50;
    v92 = v60;
    ((void (*)(_QWORD *, uint64_t, uint64_t))v60)(v56, v59, v50);
    v62 = v46;
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    v63 = v112;
    v112(v15, v12);
    if ((*v58 & 1) == 0)
      goto LABEL_14;
    v64 = *(_QWORD *)(v61 + *(int *)(v113 + 32));
    if (!v64)
      goto LABEL_14;
    if ((*(_BYTE *)(v64 + qword_1ED3B2F88) & 1) != 0)
      goto LABEL_13;
    sub_1BA657D64();
    v65 = sub_1BB87345C();
    v66 = v100;
    *v100 = v65;
    v67 = v101;
    v68 = v102;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v101 + 104))(v66, *MEMORY[0x1E0DEF738], v102);
    v69 = sub_1BB8726D0();
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v67 + 8))(v66, v68);
    if ((v69 & 1) != 0)
    {
LABEL_13:
      v70 = *(void **)(v64 + *(_QWORD *)(*(_QWORD *)v64 + 136));
      v71 = v117;
      v119 = v117;
      v72 = swift_allocObject();
      *(_QWORD *)(v72 + 16) = 0x401C000000000000;
      *v15 = v72;
      v73 = v116;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v116)(v15, v110, v12);
      v74 = v70;
      sub_1BB86D4EC();
      v75 = v112;
      v112(v15, v12);
      v119 = v71;
      swift_getKeyPath();
      v76 = swift_allocObject();
      *(_QWORD *)(v76 + 16) = v74;
      *v15 = v76;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v73)(v15, v99, v12);
      v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = v93;
      *(_QWORD *)(v77 + v96) = 2;
      v92();
      v63 = v75;
      v78 = v74;
      sub_1BB86D4E0();

      swift_release();
      swift_bridgeObjectRelease();
      v63(v15, v12);
      v61 = v118;
LABEL_14:
      v79 = v117;
      v120 = v117;
      v80 = swift_allocObject();
      *(_QWORD *)(v80 + 16) = 0x4024000000000000;
      *v15 = v80;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v116)(v15, v110, v12);
      sub_1BB86D4EC();
      v63(v15, v12);
      v120 = v79;
      v82 = v105;
      v81 = v106;
      v83 = v107;
      (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v105, *MEMORY[0x1E0DB5B38], v107);
      v84 = v108;
      sub_1BA4C2DD8(v61, v108, type metadata accessor for HeadlineViewLayout.Context);
      v85 = (*(unsigned __int8 *)(v103 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
      v86 = swift_allocObject();
      sub_1BA656690(v84, v86 + v85);
      sub_1BB86D48C();
      swift_release();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v83);
      sub_1BA4C2DD8(v61, v84, type metadata accessor for HeadlineViewLayout.Context);
      v87 = swift_allocObject();
      sub_1BA656690(v84, v87 + v85);
      sub_1BB86DBF4();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *initializeWithCopy for HeadlineViewLayout.Options(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86DA20();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B06F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB61D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v13 = *(void **)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v13;
  v14 = v13;
  return a1;
}

uint64_t sub_1BA656690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeadlineViewLayout.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA6566D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B06F0)
  {
    sub_1BB86DA20();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B06F0);
  }
}

uint64_t sub_1BA656728(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA656740(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BA656740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, _QWORD *);
  id v23;
  _QWORD v24[2];

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v24 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 36));
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6340], v5);
    sub_1BA656FEC();
    sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v21 + v20) = 1;
    (*(void (**)(void))(v19 + 104))();
    v22 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
    sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v22, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v23 = v17;
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA656A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  double *v26;
  uint64_t (*v27)(void);
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = &v29[-v20];
  v33 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v18 + 104))(&v29[-v20], *MEMORY[0x1E0DB63C0], v17, v19);
  sub_1BA656FEC();
  sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
  v26 = (double *)(v25 + v24);
  *v26 = a5;
  v26[1] = a6;
  v26[2] = a7;
  v26[3] = a8;
  (*(void (**)(void))(v23 + 104))();
  v30 = a2;
  v31 = a3;
  v32 = a4;
  v27 = MEMORY[0x1E0DB5DD0];
  sub_1BA65781C(0, &qword_1ED3B0690, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA657898(&qword_1ED3B0688, &qword_1ED3B0690, (uint64_t (*)(uint64_t, _QWORD *))v27, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v21, v17);
}

id sub_1BA656BE8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t *, _QWORD, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(unint64_t, _QWORD, uint64_t);
  uint64_t (*v25)(uint64_t, _QWORD *);
  void (*v26)(uint64_t *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD, _QWORD, _QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD, _QWORD, _QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v35 = a1;
  v36 = a4;
  v33 = a2;
  v34 = a3;
  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v6 = v5;
  v32 = *(_QWORD *)(v5 - 8);
  v7 = v32;
  MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v31 - v11);
  v41 = a1;
  v13 = sub_1BB86DA2C();
  v14 = swift_allocBox();
  *v15 = 0x3FF0000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, *MEMORY[0x1E0DB61A8], v13);
  *v12 = v14;
  v16 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104);
  v16(v12, *MEMORY[0x1E0DB63E0], v6);
  sub_1BA656FEC();
  sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  v20 = *(_QWORD *)(v19 + 72);
  v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BB87A390;
  v23 = v22 + v21;
  v24 = *(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104);
  v24(v22 + v21, *MEMORY[0x1E0DB5C70], v18);
  sub_1BB86D9A8();
  v24(v23 + v20, *MEMORY[0x1E0DB5B98], v18);
  v37 = v33;
  v38 = v34;
  v39 = v36;
  v25 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v25, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  v26 = *(void (**)(uint64_t *, uint64_t))(v32 + 8);
  v27 = v35;
  v26(v12, v6);
  v40 = v27;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 0x4030000000000000;
  *v9 = v28;
  v16(v9, *MEMORY[0x1E0DB63E8], v6);
  sub_1BB86D4EC();
  v26(v9, v6);
  v40 = v27;
  swift_getKeyPath();
  v29 = *MEMORY[0x1E0DB63C0];
  v34 = (void (*)(_QWORD, _QWORD, _QWORD))v16;
  v16(v9, v29, v6);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  v26(v9, v6);
  result = objc_msgSend(*(id *)(v36 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20) + 40), sel_hasVideo);
  if ((_DWORD)result)
  {
    v40 = v27;
    v34(v9, v29, v6);
    sub_1BB86D540();
    return (id)((uint64_t (*)(uint64_t *, uint64_t))v26)(v9, v6);
  }
  return result;
}

void sub_1BA656FEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9C70)
  {
    sub_1BA6577C0(255, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9C70);
  }
}

uint64_t sub_1BA657050(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  void (*v8)(_QWORD, _QWORD, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  double v17;
  double v18;
  double v19;
  id v20;
  id v21;
  id v22;
  uint64_t (*v23)(uint64_t, _QWORD *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *, _QWORD, uint64_t);
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char v40;
  uint64_t result;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, _QWORD *);
  uint64_t v58;
  uint64_t v59;
  id v60;
  void (*v61)(uint64_t *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[2];
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(_QWORD, _QWORD, _QWORD);
  uint64_t v81;
  void (*v82)(uint64_t *, uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v7 = sub_1BB8726B8();
  v8 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v82 = (void (*)(uint64_t *, uint64_t, uint64_t))((char *)v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v87 = v10;
  v84 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v75 - v14;
  v16 = *a2;
  v85 = a1;
  v86 = a4;
  if ((v16 & 4) == 0)
  {
    KeyPath = (uint64_t)a2;
    v88 = a1;
    swift_getKeyPath();
    sub_1BB86D930();
    v18 = round(v17 * 56.0 * 0.25);
    if (byte_1EF3D0978)
      v19 = v18;
    else
      v19 = 14.0;
    v20 = objc_msgSend(*(id *)(a4 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20) + 40), sel_sourceChannel);
    v80 = v8;
    v81 = v7;
    if (v20)
    {
      v21 = objc_msgSend(v20, sel_theme);
      swift_unknownObjectRelease();
    }
    else
    {
      v21 = 0;
    }
    v22 = objc_msgSend((id)objc_opt_self(), sel_defaultMetrics);
    sub_1BA6578EC(v21, v22, (uint64_t)v15, v19);

    swift_unknownObjectRelease();
    v23 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
    v25 = v24;
    v26 = sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v23, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    sub_1BB86D4E0();
    swift_release();
    v27 = v84;
    v28 = *(void (**)(char *, uint64_t))(v84 + 8);
    v29 = v87;
    v28(v15, v87);
    v30 = v85;
    v88 = v85;
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = 0x4010000000000000;
    *v12 = v31;
    v32 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v27 + 104);
    v32(v12, *MEMORY[0x1E0DB63F0], v29);
    sub_1BB86D4EC();
    v33 = ((uint64_t (*)(uint64_t *, uint64_t))v28)(v12, v29);
    v88 = v30;
    v34 = MEMORY[0x1E0C80A78](v33);
    a4 = v86;
    v73 = v86;
    ((void (*)(uint64_t *, _QWORD, uint64_t, double))v32)(v12, *MEMORY[0x1E0DB63C0], v29, v34);
    v73 = v25;
    v74 = v26;
    v72[0] = sub_1BA812A40;
    v72[1] = v72;
    sub_1BB86D540();
    v35 = v29;
    a1 = v30;
    v28((char *)v12, v35);
    a2 = (char *)KeyPath;
    v8 = v80;
    v7 = v81;
  }
  v88 = a1;
  KeyPath = swift_getKeyPath();
  v36 = type metadata accessor for HeadlineViewLayout.Context(0);
  v37 = *(_QWORD *)(a4 + *(int *)(v36 + 28));
  if ((*(_BYTE *)(v37 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        v38 = sub_1BB87345C(),
        v39 = (char *)v82,
        *(_QWORD *)v82 = v38,
        (*((void (**)(char *, _QWORD, uint64_t))v8 + 13))(v39, *MEMORY[0x1E0DEF738], v7),
        v40 = sub_1BB8726D0(),
        result = (*((uint64_t (**)(char *, uint64_t))v8 + 1))(v39, v7),
        (v40 & 1) != 0))
  {
    v42 = swift_allocObject();
    v43 = *(void **)(v37 + *(_QWORD *)(*(_QWORD *)v37 + 136));
    *(_QWORD *)(v42 + 16) = v43;
    *v12 = v42;
    v44 = *MEMORY[0x1E0DB6398];
    v45 = v84;
    v82 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v84 + 104);
    v82(v12, v44, v87);
    sub_1BA656FEC();
    v79 = v46;
    sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v48 = v47;
    v49 = *(_QWORD *)(v47 - 8);
    v81 = v47;
    v50 = *(_QWORD *)(v49 + 72);
    v51 = *(unsigned __int8 *)(v49 + 80);
    v52 = (v51 + 32) & ~v51;
    v77 = v51 | 7;
    v78 = v52 + v50;
    v53 = swift_allocObject();
    v76 = xmmword_1BB87CE70;
    *(_OWORD *)(v53 + 16) = xmmword_1BB87CE70;
    v54 = (_QWORD *)(v53 + v52);
    *v54 = *(_QWORD *)&a2[*(int *)(type metadata accessor for HeadlineViewLayout.Options(0) + 24)];
    v55 = *MEMORY[0x1E0DB5BB8];
    v80 = *(void (**)(_QWORD, _QWORD, _QWORD))(v49 + 104);
    v80(v54, v55, v48);
    v56 = v36;
    v57 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
    v75[1] = v58;
    v59 = sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v57, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v60 = v43;
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    v61 = *(void (**)(uint64_t *, uint64_t))(v45 + 8);
    v62 = v87;
    v61(v12, v87);
    v88 = v85;
    v63 = swift_allocObject();
    v64 = (_QWORD *)(v86 + *(int *)(v56 + 24));
    v66 = v64[3];
    v65 = v64[4];
    __swift_project_boxed_opaque_existential_1(v64, v66);
    *(double *)(v63 + 16) = (*(double (**)(uint64_t, uint64_t))(v65 + 16))(v66, v65);
    *v12 = v63;
    v82(v12, *MEMORY[0x1E0DB63F0], v62);
    v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = v76;
    v68 = v67 + v52;
    v69 = *MEMORY[0x1E0DB5C30];
    sub_1BA6577C0(0, &qword_1ED3B0658, MEMORY[0x1E0DB5C60]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 104))(v68, v69, v70);
    v71 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v80)(v68, *MEMORY[0x1E0DB5C68], v81);
    MEMORY[0x1E0C80A78](v71);
    v73 = v59;
    sub_1BB86D498();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t *, uint64_t))v61)(v12, v62);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BA6577C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA657B44();
    v7 = a3(a1, &type metadata for HeadlineViewLayout, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BA65781C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for HeadlineViewLayout;
    v8[1] = &type metadata for HeadlineViewLayout.Attributes;
    v8[2] = sub_1BA657B44();
    v8[3] = sub_1BA6592A0();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BA657898(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA65781C(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1BA6578D8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 32), sel_lineHeight);
}

uint64_t sub_1BA6578EC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(double *, _QWORD, uint64_t);
  id v27;
  void (*v28)(double *, uint64_t);
  void (*v29)(uint64_t *, uint64_t);
  _QWORD v31[2];

  v31[1] = a3;
  sub_1BA4CDF6C(0, &qword_1ED3B0668, (uint64_t (*)(void))sub_1BA657B44, (uint64_t)&type metadata for HeadlineViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (double *)((char *)v31 - v10);
  sub_1BA4CDF6C(0, &qword_1ED3B0730, (uint64_t (*)(void))sub_1BA657B44, (uint64_t)&type metadata for HeadlineViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (_QWORD *)((char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v31 - v19;
  if (a1)
  {
    objc_msgSend(a1, sel_bannerImageScale, v18);
    v22 = v21;
    objc_msgSend(a1, sel_bannerImageBaselineOffsetPercentage);
    v24 = v23;
  }
  else
  {
    v22 = 1.0;
    v24 = 0;
  }
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a2;
  *(double *)(v25 + 24) = a4;
  *v16 = v25;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DB6370], v13);
  *v11 = v22;
  v26 = *(void (**)(double *, _QWORD, uint64_t))(v9 + 104);
  v26(v11, *MEMORY[0x1E0DB5C10], v8);
  sub_1BA657B44();
  v27 = a2;
  sub_1BB86D948();
  v28 = *(void (**)(double *, uint64_t))(v9 + 8);
  v28(v11, v8);
  v29 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  v29(v16, v13);
  *v11 = 0.0;
  *((_QWORD *)v11 + 1) = v24;
  v26(v11, *MEMORY[0x1E0DB5BA0], v8);
  sub_1BB86D948();
  v28(v11, v8);
  return ((uint64_t (*)(char *, uint64_t))v29)(v20, v13);
}

unint64_t sub_1BA657B44()
{
  unint64_t result;

  result = qword_1ED3B58D0;
  if (!qword_1ED3B58D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for HeadlineViewLayout, &type metadata for HeadlineViewLayout);
    atomic_store(result, (unint64_t *)&qword_1ED3B58D0);
  }
  return result;
}

void sub_1BA657B88()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1ED3B0638)
  {
    sub_1BA6577C0(255, &qword_1ED3B0630, MEMORY[0x1E0DB5B40]);
    sub_1BA6577C0(255, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1ED3B0638);
  }
}

uint64_t storeEnumTagSinglePayload for FeedHeadline.State()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ImageRequestOptions()
{
  uint64_t result;

  result = qword_1ED3B6020;
  if (!qword_1ED3B6020)
    return swift_getSingletonMetadata();
  return result;
}

id sub_1BA657C64(uint64_t a1)
{
  return sub_1BA657C84(a1);
}

id sub_1BA657C84(uint64_t a1)
{
  void *v1;
  id result;
  uint64_t v3;

  if (a1 == 1)
  {
    result = objc_msgSend(v1, sel_textAlignment);
    if (result != (id)2)
    {
      v3 = 2;
      return objc_msgSend(v1, sel_setTextAlignment_, v3);
    }
  }
  else if (a1)
  {
    result = (id)sub_1BB873EAC();
    __break(1u);
  }
  else
  {
    result = objc_msgSend(v1, sel_textAlignment);
    if (result)
    {
      result = objc_msgSend(v1, sel_textAlignment);
      if (result != (id)4)
      {
        v3 = 0;
        return objc_msgSend(v1, sel_setTextAlignment_, v3);
      }
    }
  }
  return result;
}

unint64_t sub_1BA657D64()
{
  unint64_t result;

  result = qword_1ED3B9850;
  if (!qword_1ED3B9850)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B9850);
  }
  return result;
}

uint64_t sub_1BA657DA0(uint64_t a1, _QWORD *a2, void *a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  __int128 v16;
  uint64_t v17;
  _BYTE v18[40];

  sub_1BA5E01A4(a1, (uint64_t)&v16, (unint64_t *)&qword_1ED3C2258, (uint64_t (*)(uint64_t))sub_1BA54B1AC);
  if (v17)
  {
    sub_1BA4CECCC(&v16, (uint64_t)v18);
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v9 = sub_1BB86F904();
    if (v9)
    {
      v10 = (void *)v9;
      if (a4)
        a4(0);
      v11 = v10;
      sub_1BB871710();

      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    else
    {
      if (a4)
        a4(1);
      sub_1BB871710();
      v13 = swift_allocObject();
      swift_weakInit();
      v14 = (_QWORD *)swift_allocObject();
      v14[2] = v13;
      v14[3] = a4;
      v14[4] = a5;
      v14[5] = a3;
      swift_retain();
      sub_1BA4BEB58((uint64_t)a4);
      v15 = a3;
      sub_1BB8716EC();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      return swift_release();
    }
  }
  else
  {
    sub_1BA5C699C((uint64_t)&v16, (unint64_t *)&qword_1ED3C2258, (uint64_t (*)(uint64_t))sub_1BA54B1AC);
    if (a4)
      a4(5);
    return sub_1BB871710();
  }
}

uint64_t type metadata accessor for ThumbnailProcessorRequest()
{
  uint64_t result;

  result = qword_1ED3B7D30;
  if (!qword_1ED3B7D30)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *initializeWithCopy for ImageRequestOptions(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  id v11;
  uint64_t v12;

  v4 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86F550();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v11 = v4;
  if (v10(v7, 1, v8))
  {
    sub_1BA65805C();
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void sub_1BA65805C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0940)
  {
    sub_1BB86F550();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0940);
  }
}

uint64_t sub_1BA6580B0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for ImageRequestOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BB86F550();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1BA658180(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2258, (uint64_t (*)(uint64_t))sub_1BA54B1AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BA6581D4()
{
  unint64_t result;

  result = qword_1ED3B99A8;
  if (!qword_1ED3B99A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B99A8);
  }
  return result;
}

uint64_t type metadata accessor for VideoView()
{
  uint64_t result;

  result = qword_1ED3B9180;
  if (!qword_1ED3B9180)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for PublisherLogoProcessorRequest(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3B84B0);
}

uint64_t sub_1BA658260(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v21;
  id v22;
  void *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _BYTE v41[24];
  uint64_t v42;
  _BYTE v43[24];
  uint64_t v44;
  uint64_t v45[5];
  uint64_t v46[6];

  v17 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[3] = a6;
  v46[4] = a8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v46);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_0, a2, a6);
  v45[3] = a7;
  v45[4] = a9;
  v21 = __swift_allocate_boxed_opaque_existential_0(v45);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(v21, a3, a7);
  v22 = objc_msgSend(a1, sel_sourceChannel);
  if (v22)
  {
    v23 = v22;
    sub_1BA4C010C((uint64_t)v46, (uint64_t)v43);
    sub_1BA4C010C((uint64_t)v45, (uint64_t)v41);
    sub_1BA4C2DD8(a4, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
    v39 = a9;
    v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
    v40 = v37;
    v25 = MEMORY[0x1E0C80A78](v24);
    v27 = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v28 + 16))(v27, v25);
    v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v41, v42);
    v37[1] = a1;
    v38 = a4;
    v30 = MEMORY[0x1E0C80A78](v29);
    v32 = a8;
    v33 = (char *)v37 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v34 + 16))(v33, v30);
    v35 = sub_1BB80FF48(v23, (uint64_t)v27, (uint64_t)v33, (uint64_t)v19, a5, a6, a7, v32, v39);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    swift_unknownObjectRelease();
    swift_retain();
    sub_1BA4A2E80(v38, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    if (v35)
      swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    sub_1BA4A2E80(a4, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    return 0;
  }
  return v35;
}

uint64_t type metadata accessor for PublisherLogoProcessorOptions(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3B8418);
}

id sub_1BA65852C(void *a1, const void *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  double *v14;
  uint64_t v15;
  id v16;
  id v17;
  id result;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[40];
  _QWORD v62[6];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v54 - v11;
  v62[3] = &type metadata for HeadlineViewLayout.Attributes;
  v62[4] = &protocol witness table for HeadlineViewLayout.Attributes;
  v13 = (_QWORD *)swift_allocObject();
  v62[0] = v13;
  memcpy(v13 + 2, a2, 0x130uLL);
  v14 = (double *)__swift_project_boxed_opaque_existential_1(v62, (uint64_t)&type metadata for HeadlineViewLayout.Attributes);
  v15 = *a3;
  v16 = (id)FCThumbnailForHeadlineMinimumSize();
  if (!v16)
  {
    sub_1BA5E01A4(a5, (uint64_t)&v58, (unint64_t *)&qword_1ED3C2250, (uint64_t (*)(uint64_t))sub_1BA840CF0);
    if (v59)
    {
      v41 = type metadata accessor for ThumbnailProcessorRequest();
      sub_1BA4CECCC(&v58, (uint64_t)v61);
      sub_1BA4C010C((uint64_t)v61, (uint64_t)&v58);
      v42 = v14[28];
      v43 = v14[29];
      v44 = v14[30];
      v45 = v14[31];
      v46 = v13[34];
      v47 = v13[35];
      v48 = type metadata accessor for ImageRequestOptions();
      sub_1BA5E01A4((uint64_t)a3 + *(int *)(v48 + 24), (uint64_t)v12, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60]);
      v50 = v59;
      v49 = v60;
      v51 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v58, v59);
      v40 = sub_1BA99C0A0(v51, v46, (uint64_t)v12, v42, v43, v44, v45, 0.0, 0.0, 1.0, 1.0, v41, v50, v49, v52, v53, v15, v47);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
      swift_unknownObjectRelease();
      sub_1BA5C699C(a5, (unint64_t *)&qword_1ED3C2250, (uint64_t (*)(uint64_t))sub_1BA840CF0);
      sub_1BA5C699C(a4, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60]);
      sub_1BA4A2E80((uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    }
    else
    {
      swift_unknownObjectRelease();
      sub_1BA5C699C(a5, (unint64_t *)&qword_1ED3C2250, (uint64_t (*)(uint64_t))sub_1BA840CF0);
      sub_1BA5C699C(a4, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60]);
      sub_1BA4A2E80((uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
      sub_1BA5C699C((uint64_t)&v58, (unint64_t *)&qword_1ED3C2250, (uint64_t (*)(uint64_t))sub_1BA840CF0);
      v40 = 0;
    }
    goto LABEL_7;
  }
  v56 = v15;
  v57 = a4;
  v17 = v16;
  result = objc_msgSend(v17, sel_thumbnailAssetHandle);
  if (result)
  {
    v19 = result;
    v20 = v14[29];
    v55 = v14[28];
    v21 = v14[30];
    v22 = v14[31];
    objc_msgSend(a1, sel_thumbnailFocalFrame);
    v24 = v23;
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v31 = v13[34];
    v32 = v13[35];
    v33 = type metadata accessor for ImageRequestOptions();
    v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60];
    sub_1BA5E01A4((uint64_t)a3 + *(int *)(v33 + 24), (uint64_t)v12, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60]);
    type metadata accessor for ThumbnailProcessorRequest();
    v35 = swift_allocObject();
    v40 = sub_1BA65895C(v19, v31, (uint64_t)v12, v35, v55, v20, v21, v22, v24, v26, v28, v30, v36, v37, v38, v39, v56, v32);
    swift_unknownObjectRelease();

    sub_1BA5C699C(a5, (unint64_t *)&qword_1ED3C2250, (uint64_t (*)(uint64_t))sub_1BA840CF0);
    sub_1BA5C699C(v57, (unint64_t *)&qword_1ED3B0940, v34);
    sub_1BA4A2E80((uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    return (id)v40;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA65895C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t inited;
  double v33;
  id v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  double v47;
  double v48;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  _QWORD v59[6];

  v52 = a12;
  v51 = a6;
  v50 = a5;
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v50 - v30;
  v59[3] = sub_1BA749984();
  v59[4] = sub_1BA4A2870((unint64_t *)&qword_1ED3CF8C0, (uint64_t (*)(uint64_t))sub_1BA749984, (uint64_t)&protocol conformance descriptor for FCAssetHandle);
  v59[0] = a1;
  sub_1BA4C010C((uint64_t)v59, a4 + 24);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FB8, (uint64_t (*)(uint64_t))sub_1BA81E240, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0x69616E626D756874;
  *(_QWORD *)(inited + 40) = 0xE90000000000006CLL;
  sub_1BA4C010C((uint64_t)v59, inited + 48);
  *(_QWORD *)(a4 + 16) = sub_1BA739C1C(inited);
  *(double *)(a4 + 80) = a5;
  v33 = v51;
  *(double *)(a4 + 88) = v51;
  *(double *)(a4 + 96) = a7;
  *(double *)(a4 + 104) = a8;
  *(double *)(a4 + 112) = a9;
  *(double *)(a4 + 120) = a10;
  *(double *)(a4 + 128) = a11;
  *(double *)(a4 + 136) = v52;
  *(_QWORD *)(a4 + 144) = a17;
  *(double *)(a4 + 152) = *(double *)&a2;
  *(_QWORD *)(a4 + 160) = a18;
  sub_1BA5E01A4(a3, a4 + OBJC_IVAR____TtC8NewsFeed25ThumbnailProcessorRequest_border, (unint64_t *)&qword_1ED3B0940, v28);
  v53 = 0.0;
  v54 = -2.68156159e154;
  sub_1BB873CB4();
  v57 = v53;
  v58 = v54;
  v34 = objc_msgSend(a1, sel_uniqueKey);
  sub_1BB8729A0();

  sub_1BB872AFC(v35);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v36);
  v53 = v50;
  v54 = v33;
  v55 = a7;
  v56 = a8;
  type metadata accessor for CGRect(0);
  sub_1BB873E34();
  sub_1BB872AFC(v37);
  v53 = a9;
  v54 = a10;
  v55 = a11;
  v56 = v52;
  sub_1BB873E34();
  sub_1BB872AFC(v38);
  sub_1BB872FDC();
  sub_1BB872AFC(v39);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v40);
  v53 = *(double *)&a2;
  type metadata accessor for UIRectCorner(0);
  sub_1BB873E34();
  sub_1BB872AFC(v41);
  sub_1BB872FDC();
  sub_1BB872AFC(v42);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v43);
  sub_1BA5E01A4(a3, (uint64_t)v31, (unint64_t *)&qword_1ED3B0940, v28);
  v44 = sub_1BB86F550();
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v31, 1, v44) == 1)
  {
    sub_1BA5C699C((uint64_t)v31, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60]);
  }
  else
  {
    sub_1BB86F544();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v44);
  }
  sub_1BB872AFC(v46);
  swift_bridgeObjectRelease();
  v47 = v57;
  v48 = v58;
  sub_1BA5C699C(a3, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60]);
  *(double *)(a4 + 64) = v47;
  *(double *)(a4 + 72) = v48;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  return a4;
}

void sub_1BA658DE0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1BA658E38(a1, *(_QWORD *)(v1 + 16), v1 + v4, (_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_1BA658E38(char a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *boxed_opaque_existential_0;
  id v14;
  uint64_t v15[4];

  v4 = a2 + 16;
  if (((1 << a1) & 0x15) != 0)
  {
    swift_beginAccess();
    v5 = MEMORY[0x1BCCE5D40](v4);
    if (!v5)
      return;
    v6 = (void *)v5;
    v7 = *(id *)(v5 + qword_1ED3B3830);

    objc_msgSend(v7, sel_setAttributedText_, 0);
    goto LABEL_7;
  }
  if (((1 << a1) & 0x22) != 0)
  {
    swift_beginAccess();
    v9 = MEMORY[0x1BCCE5D40](v4);
    if (v9)
    {
      v10 = (void *)v9;
      v7 = *(id *)(v9 + qword_1ED3B3830);

      type metadata accessor for HeadlineViewLayout.Context(0);
      v11 = a4[3];
      v12 = __swift_project_boxed_opaque_existential_1(a4, v11);
      v15[3] = v11;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v15);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_0, v12, v11);
      v14 = (id)sub_1BB2D2ECC((uint64_t)v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      objc_msgSend(v7, sel_setAttributedText_, v14);

LABEL_7:
    }
  }
}

void sub_1BA658FAC(void *a1, double a2)
{
  uint64_t v2;
  id v5;

  objc_msgSend(a1, sel_setBackgroundColor_, *(_QWORD *)(*(_QWORD *)v2 + 96));
  v5 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v5, sel_setCornerRadius_, a2);

}

void sub_1BA659024(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  id v15;
  Swift::String v16;
  UIColor v17;
  Class isa;
  uint64_t v19;

  sub_1BA4B07F0(0, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (unsigned __int8 *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - v8;
  sub_1BA5E01A4(a2, (uint64_t)&v19 - v8, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State);
  v10 = type metadata accessor for FeedHeadline.State(0);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (v11(v9, 1, v10) == 1)
  {
    sub_1BA5C699C((uint64_t)v9, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State);
    v12 = 2;
  }
  else
  {
    v12 = v9[1];
    sub_1BA659264((uint64_t)v9);
  }
  sub_1BA5E01A4(a2, (uint64_t)v6, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State);
  if (v11((char *)v6, 1, v10) == 1)
  {
    sub_1BA5C699C((uint64_t)v6, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State);
    v13 = 3;
  }
  else
  {
    v13 = *v6;
    sub_1BA659264((uint64_t)v6);
  }
  if (v12 != 2 && (v12 & 1) == 0)
  {
    v15 = objc_msgSend((id)objc_opt_self(), sel_systemOrangeColor);
LABEL_17:
    v17.super.isa = (Class)v15;
    goto LABEL_18;
  }
  if ((v13 - 2) < 2)
  {
    objc_msgSend(a1, sel_setTintColor_, 0);
    return;
  }
  if (v13)
  {
    v15 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
    goto LABEL_17;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  v16._countAndFlagsBits = 0x433830434335;
  v16._object = (void *)0xE600000000000000;
  v17.super.isa = UIColor.init(hex:)(v16).super.isa;
LABEL_18:
  isa = v17.super.isa;
  objc_msgSend(a1, sel_setTintColor_, v17.super.isa);

}

uint64_t sub_1BA659264(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedHeadline.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BA6592A0()
{
  unint64_t result;

  result = qword_1ED3B5758;
  if (!qword_1ED3B5758)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for HeadlineViewLayout.Attributes, &type metadata for HeadlineViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3B5758);
  }
  return result;
}

void sub_1BA6592E4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B3EC0)
  {
    v2 = sub_1BA831B14();
    v4 = type metadata accessor for CellAutomation(a1, (uint64_t)&type metadata for ArticleAutomation, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B3EC0);
  }
}

void sub_1BA65933C()
{
  __asm { BR              X9 }
}

uint64_t sub_1BA659370()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

uint64_t sub_1BA659580(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  int v11;
  int v12;
  BOOL v13;
  void *v14;
  id v15;
  uint64_t v17;

  sub_1BA4B07F0(0, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (unsigned __int8 *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - v7;
  sub_1BA5E01A4(a2, (uint64_t)&v17 - v7, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State);
  v9 = type metadata accessor for FeedHeadline.State(0);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  if (v10(v8, 1, v9) == 1)
  {
    sub_1BA5C699C((uint64_t)v8, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State);
    v11 = 2;
  }
  else
  {
    v11 = v8[1];
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedHeadline.State);
  }
  sub_1BA5E01A4(a2, (uint64_t)v5, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State);
  if (v10((char *)v5, 1, v9) == 1)
  {
    sub_1BA5C699C((uint64_t)v5, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State);
    v12 = 3;
  }
  else
  {
    v12 = *v5;
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FeedHeadline.State);
  }
  v13 = v11 != 2 && (v11 & 1) == 0;
  if (v13 || (v12 - 2) >= 2)
  {
    v14 = (void *)sub_1BB872970();
    v15 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v14);

  }
  return sub_1BB871710();
}

uint64_t getEnumTagSinglePayload for FeedHeadline.State()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for FeedItem.SharedState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

id sub_1BA6597E0(uint64_t a1)
{
  return sub_1BA659800(a1);
}

id sub_1BA659800(uint64_t a1)
{
  void *v1;
  id result;
  uint64_t v3;

  if (a1 == 1)
  {
    result = objc_msgSend(v1, sel_contentMode);
    if (result != (id)8)
    {
      v3 = 8;
      return objc_msgSend(v1, sel_setContentMode_, v3);
    }
  }
  else if (a1)
  {
    result = (id)sub_1BB873EAC();
    __break(1u);
  }
  else
  {
    result = objc_msgSend(v1, sel_contentMode);
    if (result != (id)7)
    {
      v3 = 7;
      return objc_msgSend(v1, sel_setContentMode_, v3);
    }
  }
  return result;
}

uint64_t (*sub_1BA6598C4(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11))(_QWORD)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unsigned __int8 v59;
  void (*v60)(char *, unint64_t, uint64_t);
  char v61;
  void (*v62)(char *, uint64_t);
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v68;
  char *v69;
  double v70;
  CGFloat v71;
  double v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  double v76;
  CGFloat v77;
  void (*v78)(char *, uint64_t);
  double Width;
  char *v80;
  uint64_t v81;
  char *v82;
  double v83;
  CGFloat v84;
  double v85;
  CGFloat v86;
  double v87;
  CGFloat v88;
  double v89;
  CGFloat v90;
  unint64_t v91;
  CGFloat v92;
  char *v93;
  double v94;
  CGFloat v95;
  double v96;
  CGFloat v97;
  double v98;
  CGFloat v99;
  double v100;
  CGFloat v101;
  CGFloat Height;
  unint64_t v103;
  char **v104;
  id *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  double v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t *v127;
  uint64_t v128;
  id *v129;
  id v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t *v140;
  uint64_t v141;
  CGFloat v142;
  CGFloat v143;
  CGFloat v144;
  CGFloat v145;
  void (*v146)(char *, uint64_t);
  char *v147;
  char *v148;
  char *v149;
  int v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  void (*v163)(uint64_t, unint64_t, uint64_t);
  uint64_t v164;
  uint64_t v165;
  char v166;
  void (*v167)(uint64_t, uint64_t);
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t *v181;
  CGFloat v182;
  CGFloat v183;
  CGFloat v184;
  CGFloat v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t *v192;
  void (*v193)(uint64_t *, char *, uint64_t);
  CGFloat v194;
  CGFloat v195;
  CGFloat v196;
  CGFloat v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  uint64_t v203;
  _QWORD *v204;
  uint64_t *boxed_opaque_existential_0;
  CGFloat v206;
  CGFloat v207;
  CGFloat v208;
  CGFloat v209;
  void (*v210)(char *, uint64_t);
  char *v211;
  double v212;
  id v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  id v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  uint64_t v224;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t *v235;
  char *v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  char *v243;
  unint64_t v244;
  uint64_t v245;
  _QWORD *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  __int128 v267;
  __int128 v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  CGRect v274;
  CGRect v275;
  CGRect v276;
  CGRect v277;
  CGRect v278;
  CGRect v279;
  CGRect v280;
  CGRect v281;
  CGRect v282;
  CGRect v283;
  CGRect v284;
  CGRect v285;

  v244 = a2;
  v259 = a1;
  v233 = sub_1BB872688();
  v232 = *(_QWORD *)(v233 - 8);
  v14 = MEMORY[0x1E0C80A78](v233);
  v231 = (char *)&v221 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v253 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v14);
  v252 = (char *)&v221 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = sub_1BB87027C();
  v255 = *(_QWORD *)(v256 - 8);
  v17 = MEMORY[0x1E0C80A78](v256);
  v251 = (char *)&v221 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v226 = (char *)&v221 - v20;
  MEMORY[0x1E0C80A78](v19);
  v236 = (char *)&v221 - v21;
  v270 = a6;
  v271 = a7;
  v240 = a7;
  v257 = a10;
  v272 = a10;
  v273 = a11;
  v258 = a11;
  v230 = sub_1BB870600();
  v229 = *(_QWORD *)(v230 - 8);
  v22 = MEMORY[0x1E0C80A78](v230);
  v228 = (char *)&v221 - v23;
  v260 = a6;
  v237 = *(_QWORD *)(a6 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v227 = (char *)&v221 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v238 = (char *)&v221 - v26;
  v264 = sub_1BB86CBE0();
  v265 = *(_QWORD *)(v264 - 8);
  v27 = MEMORY[0x1E0C80A78](v264);
  v225 = (char *)&v221 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v254 = (char *)&v221 - v30;
  MEMORY[0x1E0C80A78](v29);
  v263 = (uint64_t)&v221 - v31;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0A18, (void (*)(uint64_t))MEMORY[0x1E0DBB2A8]);
  MEMORY[0x1E0C80A78](v32);
  v250 = (char *)&v221 - v33;
  v262 = sub_1BB870E7C();
  v261 = *(_QWORD *)(v262 - 8);
  v34 = MEMORY[0x1E0C80A78](v262);
  v248 = (char *)&v221 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v249 = (char *)&v221 - v36;
  v234 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1E0C80A78](v234);
  v235 = (uint64_t *)((char *)&v221 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, &qword_1ED3D2C58, (void (*)(uint64_t))MEMORY[0x1E0DB7A20]);
  v39 = MEMORY[0x1E0C80A78](v38);
  v241 = (unint64_t)&v221 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v42 = (char *)&v221 - v41;
  v245 = sub_1BB86FC70();
  v242 = *(_QWORD *)(v245 - 8);
  v43 = MEMORY[0x1E0C80A78](v245);
  v243 = (char *)&v221 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x1E0C80A78](v43);
  v247 = (char *)&v221 - v46;
  MEMORY[0x1E0C80A78](v45);
  v239 = (char *)&v221 - v47;
  v48 = sub_1BB870B7C();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = MEMORY[0x1E0C80A78](v48);
  v52 = (char *)&v221 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v50);
  v54 = (char *)&v221 - v53;
  v55 = sub_1BB8705C4();
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v58 = (char *)&v221 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = objc_msgSend((id)objc_opt_self(), sel_isMainThread);
  v60 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  v266 = a3;
  v60(v58, a3, v55);
  if ((v59 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v55);
    return nullsub_1;
  }
  sub_1BB8705A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v52, *MEMORY[0x1E0DBA690], v48);
  v61 = sub_1BB870B70();
  v62 = *(void (**)(char *, uint64_t))(v49 + 8);
  v62(v52, v48);
  v62(v54, v48);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v55);
  if ((v61 & 1) == 0)
    return nullsub_1;
  v63 = v246;
  v64 = (uint64_t)v246 + OBJC_IVAR____TtC8NewsFeed33FeedItemRendererPipelineProcessor_lastRendererOptions;
  swift_beginAccess();
  sub_1BA65F880(v64, (uint64_t)v42);
  v65 = v242;
  v66 = v245;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v242 + 48))(v42, 1, v245) == 1)
  {
    sub_1BA502AD0((uint64_t)v42, &qword_1ED3D2C58, (void (*)(uint64_t))MEMORY[0x1E0DB7A20]);
  }
  else
  {
    v68 = v239;
    (*(void (**)(void))(v65 + 32))();
    v69 = v247;
    sub_1BB8704EC();
    sub_1BB86FC64();
    v71 = v70;
    v73 = v72;
    v75 = v74;
    v77 = v76;
    v78 = *(void (**)(char *, uint64_t))(v65 + 8);
    v78(v69, v66);
    v274.origin.x = v71;
    v274.origin.y = v73;
    v274.size.width = v75;
    v274.size.height = v77;
    Width = CGRectGetWidth(v274);
    sub_1BB86FC64();
    if (Width == CGRectGetWidth(v275))
    {
      v80 = v68;
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v63 + 2, v63[5]);
      sub_1BB86F910();
      __swift_project_boxed_opaque_existential_1(v63 + 7, v63[10]);
      sub_1BB86F910();
      __swift_project_boxed_opaque_existential_1(v63 + 12, v63[15]);
      sub_1BB86F910();
      v80 = v239;
    }
    v78(v80, v66);
  }
  v81 = v241;
  sub_1BB8704EC();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v81, 0, 1, v66);
  swift_beginAccess();
  sub_1BA65F82C(v81, v64);
  swift_endAccess();
  v82 = v247;
  sub_1BB8704EC();
  sub_1BB86FC64();
  v84 = v83;
  v86 = v85;
  v88 = v87;
  v90 = v89;
  v91 = *(_QWORD *)(v65 + 8);
  ((void (*)(char *, uint64_t))v91)(v82, v66);
  v276.origin.x = v84;
  v276.origin.y = v86;
  v276.size.width = v88;
  v276.size.height = v90;
  v92 = CGRectGetWidth(v276);
  v93 = v243;
  sub_1BB8704EC();
  sub_1BB86FC64();
  v95 = v94;
  v97 = v96;
  v99 = v98;
  v101 = v100;
  ((void (*)(char *, uint64_t))v91)(v93, v66);
  v277.origin.x = v95;
  v277.origin.y = v97;
  v277.size.width = v99;
  v277.size.height = v101;
  Height = CGRectGetHeight(v277);
  v103 = sub_1BB66031C();
  v104 = (char **)&unk_1ED3BA000;
  v105 = (id *)&unk_1ED476000;
  if (v103)
  {
    v106 = v103;
    v107 = v103 >> 62;
    if (v103 >> 62)
      goto LABEL_68;
    v108 = *(_QWORD *)((v103 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v108)
    {
      v109 = CACurrentMediaTime();
      if (v104[255] != (char *)-1)
        swift_once();
      v110 = v105[268];
      sub_1BB8732E8();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v222 = v111;
      v112 = swift_allocObject();
      *(_OWORD *)(v112 + 16) = xmmword_1BB87CE70;
      v245 = v106 & 0xFFFFFFFFFFFFFF8;
      if (v107)
      {
        swift_bridgeObjectRetain();
        v113 = sub_1BB873F30();
        swift_bridgeObjectRelease();
      }
      else
      {
        v113 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v114 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v112 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v112 + 64) = v114;
      v221 = v113;
      *(_QWORD *)(v112 + 32) = v113;
      sub_1BB86EF44("Feed item renderer pipeline starting, processing=%ld", v221);

      swift_bridgeObjectRelease();
      v115 = v247;
      sub_1BB8704EC();
      v116 = sub_1BB86FC58();
      ((void (*)(char *, uint64_t))v91)(v115, v66);
      sub_1BB870504();
      v118 = v117;
      v119 = sub_1BB870540();
      v120 = v235;
      v121 = (char *)v235 + *(int *)(v234 + 24);
      v122 = sub_1BB86F550();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v121, 1, 1, v122);
      *v120 = v118;
      v120[1] = v119;
      type metadata accessor for FeedItemRendererPipelineProcessor.Context(0);
      v123 = swift_allocObject();
      *(_QWORD *)(v123
                + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount) = 0;
      v124 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_loadingGroup;
      *(_QWORD *)(v123 + v124) = dispatch_group_create();
      v125 = MEMORY[0x1E0DEE9E8];
      *(_QWORD *)(v123
                + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_supplementaryIndicesSeen) = MEMORY[0x1E0DEE9E8];
      v105 = (id *)&unk_1ED3B2000;
      *(_QWORD *)(v123
                + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_supplementaryIndexPathsSeen) = v125;
      *(_BYTE *)(v123
               + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_isLiveResizing) = v116 & 1;
      sub_1BA65F7C8((uint64_t)v120, v123+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions);
      v126 = (_QWORD *)(v123
                      + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_supplementaryIndexPathsSeen);
      v127 = (uint64_t *)(v123
                       + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_supplementaryIndicesSeen);
      v266 = v106 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      v235 = v127;
      swift_beginAccess();
      v223 = v126;
      swift_beginAccess();
      v91 = 0;
      v247 = (char *)(v106 + 32);
      LODWORD(v239) = *MEMORY[0x1E0DBB2A0];
      LODWORD(v234) = *MEMORY[0x1E0DBB298];
      v104 = &selRef_isSports;
      v107 = v240;
      v128 = v262;
      v244 = v106;
      v243 = (char *)v108;
      v224 = v123;
      while (1)
      {
        if (v266)
        {
          v129 = (id *)MEMORY[0x1BCCE4630](v91, v106);
        }
        else
        {
          if (v91 >= *(_QWORD *)(v245 + 16))
            goto LABEL_67;
          v129 = (id *)*(id *)&v247[8 * v91];
        }
        v105 = v129;
        if (__OFADD__(v91++, 1))
          break;
        v131 = objc_msgSend(v129, v104[158]);
        if (v131)
        {
          if (v131 == (id)1)
          {
            v132 = (uint64_t)v250;
            sub_1BB86F40C();
            v133 = v261;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v261 + 48))(v132, 1, v128) == 1)
            {

              sub_1BA502AD0(v132, (unint64_t *)&qword_1ED3B0A18, (void (*)(uint64_t))MEMORY[0x1E0DBB2A8]);
LABEL_62:
              v104 = &selRef_isSports;
              goto LABEL_21;
            }
            v148 = v249;
            (*(void (**)(char *, uint64_t, uint64_t))(v133 + 32))(v249, v132, v128);
            v149 = v248;
            (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v248, v148, v128);
            v150 = (*(uint64_t (**)(char *, uint64_t))(v133 + 88))(v149, v128);
            if (v150 == (_DWORD)v239)
            {
              v151 = objc_msgSend(v105, sel_indexPath);
              v152 = v263;
              sub_1BB86CBA4();

              v153 = sub_1BB86CBD4();
              (*(void (**)(uint64_t, uint64_t))(v265 + 8))(v152, v264);
              if (sub_1BA79296C(v153, *v235))
              {
                v128 = v262;
                (*(void (**)(char *, uint64_t))(v261 + 8))(v249, v262);

LABEL_55:
                v106 = v244;
                v108 = (uint64_t)v243;
                goto LABEL_62;
              }
              swift_beginAccess();
              sub_1BA65F06C((uint64_t *)&v267, v153);
              swift_endAccess();
              v186 = v260;
              v270 = v260;
              v271 = v107;
              v272 = v257;
              v273 = v258;
              sub_1BB86FAD8();
              v187 = v238;
              v188 = v228;
              sub_1BB86FAF0();
              v189 = v230;
              sub_1BB8705D0();
              v190 = v188;
              v191 = v237;
              (*(void (**)(char *, uint64_t))(v229 + 8))(v190, v189);
              v273 = v186;
              v192 = __swift_allocate_boxed_opaque_existential_0(&v270);
              v193 = *(void (**)(uint64_t *, char *, uint64_t))(v191 + 16);
              v193(v192, v187, v186);
              objc_msgSend(v105, sel_frame);
              v284.origin.x = v194;
              v284.origin.y = v195;
              v284.size.width = v196;
              v284.size.height = v197;
              v280.origin.x = 0.0;
              v280.origin.y = 0.0;
              v280.size.width = v92;
              v280.size.height = Height;
              CGRectIntersectsRect(v280, v284);
              sub_1BA65D3C0((uint64_t)&v270, v123);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v270);
              v193((uint64_t *)v227, v187, v186);
              v198 = MEMORY[0x1E0DBC0E8];
              sub_1BA4D9CE8(0, &qword_1ED3B0A48);
              if ((swift_dynamicCast() & 1) != 0)
              {
                sub_1BA4CECCC(&v267, (uint64_t)&v270);
                __swift_project_boxed_opaque_existential_1(&v270, v273);
                v199 = sub_1BB87129C();
                if (v199)
                {
                  v200 = *(_QWORD *)(v199 + 16);
                  v201 = v224;
                  if (v200)
                  {
                    v202 = (_QWORD *)(v199 + 32);
                    do
                    {
                      v203 = v202[3];
                      v204 = __swift_project_boxed_opaque_existential_1(v202, v203);
                      *((_QWORD *)&v268 + 1) = v203;
                      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v267);
                      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v203 - 8) + 16))(boxed_opaque_existential_0, v204, v203);
                      objc_msgSend(v105, sel_frame);
                      v285.origin.x = v206;
                      v285.origin.y = v207;
                      v285.size.width = v208;
                      v285.size.height = v209;
                      v281.origin.x = 0.0;
                      v281.origin.y = 0.0;
                      v281.size.width = v92;
                      v281.size.height = Height;
                      CGRectIntersectsRect(v281, v285);
                      sub_1BA65D3C0((uint64_t)&v267, v201);
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v267);
                      v202 += 5;
                      --v200;
                    }
                    while (v200);
                  }
                  swift_bridgeObjectRelease();

                  (*(void (**)(char *, uint64_t))(v237 + 8))(v238, v260);
                  v128 = v262;
                  (*(void (**)(char *, uint64_t))(v261 + 8))(v249, v262);
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v270);
                  v107 = v240;
                  v106 = v244;
                  v108 = (uint64_t)v243;
                  v123 = v201;
                  goto LABEL_62;
                }

                (*(void (**)(char *, uint64_t))(v191 + 8))(v238, v260);
                v128 = v262;
                (*(void (**)(char *, uint64_t))(v261 + 8))(v249, v262);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v270);
              }
              else
              {
                v269 = 0;
                v268 = 0u;
                v267 = 0u;

                (*(void (**)(char *, uint64_t))(v191 + 8))(v187, v186);
                v128 = v262;
                (*(void (**)(char *, uint64_t))(v261 + 8))(v249, v262);
                sub_1BA65DBBC((uint64_t)&v267, &qword_1ED39C3F8, &qword_1ED3B0A48, v198);
              }
              v106 = v244;
              v108 = (uint64_t)v243;
LABEL_61:
              v123 = v224;
              goto LABEL_62;
            }
            if (v150 != (_DWORD)v234)
            {
              v210 = *(void (**)(char *, uint64_t))(v261 + 8);
              v210(v249, v262);

              v210(v248, v262);
              v128 = v262;
              goto LABEL_55;
            }
            v154 = v248;
            (*(void (**)(char *, uint64_t))(v261 + 96))(v248, v128);
            sub_1BAACDE18();
            v156 = v254;
            v157 = v264;
            (*(void (**)(char *, char *, uint64_t))(v265 + 32))(v254, &v154[*(int *)(v155 + 48)], v264);
            v158 = *v223;
            if (*(_QWORD *)(*v223 + 16))
            {
              sub_1BB6608EC(&qword_1ED39C240, MEMORY[0x1E0CB1668]);
              swift_bridgeObjectRetain();
              v159 = sub_1BB87285C();
              v160 = -1 << *(_BYTE *)(v158 + 32);
              v161 = v159 & ~v160;
              v242 = v158 + 56;
              if (((*(_QWORD *)(v158 + 56 + ((v161 >> 3) & 0xFFFFFFFFFFFFF8)) >> v161) & 1) != 0)
              {
                v241 = ~v160;
                v162 = *(_QWORD *)(v265 + 72);
                v163 = *(void (**)(uint64_t, unint64_t, uint64_t))(v265 + 16);
                while (1)
                {
                  v164 = v263;
                  v165 = v264;
                  v163(v263, *(_QWORD *)(v158 + 48) + v162 * v161, v264);
                  sub_1BB6608EC(&qword_1ED3B0560, MEMORY[0x1E0CB1680]);
                  v166 = sub_1BB872958();
                  v167 = *(void (**)(uint64_t, uint64_t))(v265 + 8);
                  v167(v164, v165);
                  if ((v166 & 1) != 0)
                    break;
                  v161 = (v161 + 1) & v241;
                  if (((*(_QWORD *)(v242 + ((v161 >> 3) & 0xFFFFFFFFFFFFF8)) >> v161) & 1) == 0)
                    goto LABEL_41;
                }

                swift_bridgeObjectRelease();
                v167((uint64_t)v254, v264);
                v128 = v262;
                (*(void (**)(char *, uint64_t))(v261 + 8))(v249, v262);
                v107 = v240;
                v106 = v244;
                v108 = (uint64_t)v243;
                goto LABEL_61;
              }
LABEL_41:
              swift_bridgeObjectRelease();
              v107 = v240;
              v157 = v264;
              v156 = v254;
            }
            v168 = v265;
            v169 = v225;
            (*(void (**)(char *, char *, uint64_t))(v265 + 16))(v225, v156, v157);
            swift_beginAccess();
            v170 = v263;
            sub_1BA9DB8B8(v263, v169);
            swift_endAccess();
            v242 = *(_QWORD *)(v168 + 8);
            ((void (*)(uint64_t, uint64_t))v242)(v170, v157);
            v270 = v260;
            v271 = v107;
            v272 = v257;
            v273 = v258;
            sub_1BB86FAD8();
            v171 = v236;
            sub_1BB86FAE4();
            v172 = v255;
            v173 = v256;
            (*(void (**)(char *, char *, uint64_t))(v255 + 16))(v226, v171, v256);
            v174 = MEMORY[0x1E0DBC0E8];
            sub_1BA4D9CE8(0, &qword_1ED3B0A48);
            if ((swift_dynamicCast() & 1) == 0)
            {
              v269 = 0;
              v268 = 0u;
              v267 = 0u;

              (*(void (**)(char *, uint64_t))(v172 + 8))(v171, v173);
              ((void (*)(char *, uint64_t))v242)(v254, v157);
              v128 = v262;
              (*(void (**)(char *, uint64_t))(v261 + 8))(v249, v262);
              sub_1BA65DBBC((uint64_t)&v267, &qword_1ED39C3F8, &qword_1ED3B0A48, v174);
LABEL_64:
              v106 = v244;
              v108 = (uint64_t)v243;
              v123 = v224;
              v104 = &selRef_isSports;
              goto LABEL_21;
            }
            sub_1BA4CECCC(&v267, (uint64_t)&v270);
            __swift_project_boxed_opaque_existential_1(&v270, v273);
            v175 = sub_1BB87129C();
            if (!v175)
            {

              (*(void (**)(char *, uint64_t))(v255 + 8))(v171, v256);
              ((void (*)(char *, uint64_t))v242)(v254, v264);
              v128 = v262;
              (*(void (**)(char *, uint64_t))(v261 + 8))(v249, v262);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v270);
              goto LABEL_64;
            }
            v176 = *(_QWORD *)(v175 + 16);
            v177 = v224;
            if (v176)
            {
              v178 = (_QWORD *)(v175 + 32);
              do
              {
                v179 = v178[3];
                v180 = __swift_project_boxed_opaque_existential_1(v178, v179);
                *((_QWORD *)&v268 + 1) = v179;
                v181 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v267);
                (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v181, v180, v179);
                objc_msgSend(v105, sel_frame);
                v283.origin.x = v182;
                v283.origin.y = v183;
                v283.size.width = v184;
                v283.size.height = v185;
                v279.origin.x = 0.0;
                v279.origin.y = 0.0;
                v279.size.width = v92;
                v279.size.height = Height;
                CGRectIntersectsRect(v279, v283);
                sub_1BA65D3C0((uint64_t)&v267, v177);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v267);
                v178 += 5;
                --v176;
              }
              while (v176);
            }
            swift_bridgeObjectRelease();

            (*(void (**)(char *, uint64_t))(v255 + 8))(v236, v256);
            ((void (*)(char *, uint64_t))v242)(v254, v264);
            v128 = v262;
            (*(void (**)(char *, uint64_t))(v261 + 8))(v249, v262);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v270);
            v107 = v240;
            v106 = v244;
            v108 = (uint64_t)v243;
            v123 = v177;
            goto LABEL_62;
          }

        }
        else
        {
          v134 = objc_msgSend(v105, sel_indexPath);
          v135 = v263;
          sub_1BB86CBA4();

          v270 = v260;
          v271 = v107;
          v272 = v257;
          v273 = v258;
          sub_1BB86FAD8();
          v136 = v251;
          sub_1BB86FAE4();
          (*(void (**)(uint64_t, uint64_t))(v265 + 8))(v135, v264);
          v137 = v252;
          v138 = v256;
          sub_1BB870270();
          v139 = v136;
          v108 = (uint64_t)v243;
          (*(void (**)(char *, uint64_t))(v255 + 8))(v139, v138);
          v273 = v107;
          v140 = __swift_allocate_boxed_opaque_existential_0(&v270);
          v141 = v253;
          (*(void (**)(uint64_t *, char *, uint64_t))(v253 + 16))(v140, v137, v107);
          objc_msgSend(v105, sel_frame);
          v282.origin.x = v142;
          v282.origin.y = v143;
          v282.size.width = v144;
          v282.size.height = v145;
          v278.origin.x = 0.0;
          v278.origin.y = 0.0;
          v278.size.width = v92;
          v278.size.height = Height;
          CGRectIntersectsRect(v278, v282);
          sub_1BA65D3C0((uint64_t)&v270, v123);
          v104 = &selRef_isSports;

          v146 = *(void (**)(char *, uint64_t))(v141 + 8);
          v128 = v262;
          v147 = v137;
          v106 = v244;
          v146(v147, v107);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v270);
        }
LABEL_21:
        if (v91 == v108)
        {
          swift_bridgeObjectRelease();
          v211 = v231;
          sub_1BB872670();
          sub_1BB873408();
          (*(void (**)(char *, uint64_t))(v232 + 8))(v211, v233);
          v212 = CACurrentMediaTime();
          v213 = (id)qword_1ED476860;
          sub_1BB8732E8();
          v214 = swift_allocObject();
          *(_OWORD *)(v214 + 16) = xmmword_1BB87FC80;
          swift_bridgeObjectRelease();
          v215 = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v214 + 56) = MEMORY[0x1E0DEB418];
          v216 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v214 + 32) = v221;
          v217 = *(_QWORD *)(v123
                           + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount);
          *(_QWORD *)(v214 + 96) = v215;
          *(_QWORD *)(v214 + 104) = v216;
          *(_QWORD *)(v214 + 64) = v216;
          *(_QWORD *)(v214 + 72) = v217;
          v218 = MEMORY[0x1E0DEB100];
          *(_QWORD *)(v214 + 136) = MEMORY[0x1E0DEB070];
          *(_QWORD *)(v214 + 144) = v218;
          *(double *)(v214 + 112) = (v212 - v109) * 1000.0;
          sub_1BB86EF44("Feed item renderer pipeline finished, processed=%ld, prewarmwedRequests=%ld, time=%fms", v221, v222, *(double *)&v223);

          swift_bridgeObjectRelease();
          swift_release();
          return nullsub_1;
        }
      }
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      swift_bridgeObjectRetain();
      v66 = v245;
      v108 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (v104[255] != (char *)-1)
    swift_once();
  v219 = v105[268];
  v220 = sub_1BB8732E8();
  sub_1BB86EF44("Feed item renderer pipeline bailed, no layout attributes to process", 67, 2, &dword_1BA493000, v219, v220, MEMORY[0x1E0DEE9D8]);

  return nullsub_1;
}

uint64_t sub_1BA65B3CC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  double *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  _QWORD v32[5];
  _BYTE v33[40];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[2];
  char v44;

  v7 = *a3;
  v8 = (unint64_t)*a3 >> 61;
  if (((1 << v8) & 0x5D) != 0)
    goto LABEL_2;
  v10 = (double *)result;
  if ((_DWORD)v8 == 1)
  {
    v12 = *(_OWORD *)(v7 + 112);
    v39 = *(_OWORD *)(v7 + 96);
    v40 = v12;
    v13 = *(_OWORD *)(v7 + 144);
    v41 = *(_OWORD *)(v7 + 128);
    v42 = v13;
    v14 = *(_OWORD *)(v7 + 48);
    v35 = *(_OWORD *)(v7 + 32);
    v36 = v14;
    v15 = *(_OWORD *)(v7 + 80);
    v37 = *(_OWORD *)(v7 + 64);
    v38 = v15;
    v34 = *(_OWORD *)(v7 + 16);
    if (a4 && (v16 = *(_QWORD *)(a4 + 120), v16 != 3))
    {
      v25 = *(_QWORD *)(a4 + 120);
      v18 = *(void **)(result + 8);
      sub_1BB0A416C((uint64_t)&v34);
      sub_1BA6E6C80(v16);
      v17 = sub_1BA65D2C0(v18);
      sub_1BA6E6CF0(v16);
    }
    else
    {
      sub_1BB0A416C((uint64_t)&v34);
      v17 = 0;
      v18 = (void *)*((_QWORD *)v10 + 1);
    }
    ((void (*)(uint64_t *__return_ptr, void *, uint64_t))v42)(&v25, v18, v17);
    if (!(_QWORD)v27)
    {
      sub_1BB0A41A0((uint64_t)&v34);
      result = sub_1BA728544((uint64_t)&v25);
LABEL_2:
      *(_QWORD *)(a5 + 32) = 0;
      *(_OWORD *)a5 = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
      return result;
    }
    sub_1BA4CECCC((__int128 *)&v25, (uint64_t)v33);
    sub_1BA4C010C((uint64_t)v33, (uint64_t)v32);
    v20 = *(double *)(v5 + 80);
    v21 = *(double *)(v5 + 88);
    v43[0] = v34;
    v43[1] = v35;
    v27 = v38;
    v28 = v39;
    v22 = *v10;
    v44 = v36;
    v25 = *((_QWORD *)&v36 + 1);
    v26 = v37;
    v29 = v40;
    v30 = v41;
    v31 = BYTE8(v41);
    v23 = type metadata accessor for FormatImageRequest();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v24 = sub_1BB70FFD8(v32, a4, a2, v17, 0, v18, (uint64_t)v43, (uint64_t)&v25, v20, v21, v22);
    *(_QWORD *)(a5 + 24) = v23;
    *(_QWORD *)(a5 + 32) = sub_1BA50AD30(&qword_1ED3C7CB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageRequest, (uint64_t)&unk_1BB94216C);
    sub_1BB0A41A0((uint64_t)&v34);
    *(_QWORD *)a5 = v24;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    v19 = *(_QWORD *)(v7 + 24);
    *(_QWORD *)&v34 = *(_QWORD *)(v7 + 16);
    swift_retain();
    swift_retain();
    sub_1BA65B3CC(v10, a2, &v34, v19);
    swift_release();
    return swift_release();
  }
}

uint64_t type metadata accessor for FormatImageRequest()
{
  return objc_opt_self();
}

uint64_t sub_1BA65B690(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[12];
  __int128 v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v14 = a1;
  v15 = a2;
  v11 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v11);
  v10 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(v2 + 112);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = v5 + 32;
    v8[3] = *(_QWORD *)(v2 + 112);
    v13 = v6;
    swift_bridgeObjectRetain();
    v9 = xmmword_1BB87CE70;
    v12 = v7;
    __asm { BR              X9 }
  }
  if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FormatVideoPlayerData()
{
  uint64_t result;

  result = qword_1ED3BE988;
  if (!qword_1ED3BE988)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA65D2C0(void *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v2 = *v1;
  if ((unint64_t)*v1 < 3)
    return qword_1BB93ADA0[v2];
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  sub_1BA6E6E84(v5);
  sub_1BA6E6E84(v6);
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
  {
    sub_1BA6E6E84(v6);
    v3 = sub_1BA65D2C0(a1);
    sub_1BA6E7468(v5);
    sub_1BA6E7468(v6);
    v7 = v6;
  }
  else
  {
    sub_1BA6E6E84(v5);
    v3 = sub_1BA65D2C0(a1);
    sub_1BA6E7468(v5);
    sub_1BA6E7468(v6);
    v7 = v5;
  }
  sub_1BA6E7468(v7);
  return v3;
}

uint64_t sub_1BA65D3A4(uint64_t a1)
{
  return sub_1BA6ECBC8(a1, (void (*)(_QWORD))sub_1BA6F616C, (unint64_t *)&qword_1ED3B0A08);
}

void sub_1BA65D3C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  __int128 v47;
  uint64_t v48;
  _BYTE v49[40];
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;

  v3 = v2;
  v4 = a1;
  sub_1BA747A10(a1, (uint64_t)v49);
  sub_1BA4D9CE8(0, &qword_1ED3B86D8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(&v50, (uint64_t)v53);
    v5 = v54;
    v6 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v6 + 8))(&v50, a2+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions, v5, v6);
    sub_1BB6606E4(v2 + 2, (uint64_t)&v50);
    sub_1BA65DBBC((uint64_t)&v50, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, MEMORY[0x1E0DBA438]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  }
  else
  {
    v52 = 0;
    v50 = 0u;
    v51 = 0u;
    sub_1BA65DBBC((uint64_t)&v50, (unint64_t *)&unk_1ED3B86E0, &qword_1ED3B86D8, (uint64_t)&protocol descriptor for ThumbnailImageRequestProviding);
  }
  sub_1BA747A10(v4, (uint64_t)v49);
  sub_1BA4D9CE8(0, &qword_1ED3B8A68);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(&v50, (uint64_t)v53);
    v7 = v54;
    v8 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v8 + 8))(&v50, a2+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions, v7, v8);
    sub_1BB6606E4(v2 + 7, (uint64_t)&v50);
    sub_1BA65DBBC((uint64_t)&v50, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, MEMORY[0x1E0DBA438]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  }
  else
  {
    v52 = 0;
    v50 = 0u;
    v51 = 0u;
    sub_1BA65DBBC((uint64_t)&v50, &qword_1ED3B8A70, &qword_1ED3B8A68, (uint64_t)&protocol descriptor for PublisherLogoImageRequestProviding);
  }
  sub_1BA747A10(v4, (uint64_t)v49);
  sub_1BA4D9CE8(0, &qword_1ED3B8030);
  v45 = v2;
  if ((swift_dynamicCast() & 1) == 0)
  {
    v52 = 0;
    v50 = 0u;
    v51 = 0u;
    sub_1BA65DBBC((uint64_t)&v50, &qword_1ED3B8038, &qword_1ED3B8030, (uint64_t)&protocol descriptor for FormatImageRequestProviding);
    goto LABEL_24;
  }
  sub_1BA4CECCC(&v50, (uint64_t)v53);
  v9 = v54;
  v10 = v55;
  __swift_project_boxed_opaque_existential_1(v53, v54);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a2+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions, v9, v10);
  if (!v11)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
LABEL_24:
    sub_1BA747A10(v4, (uint64_t)v49);
    sub_1BA4D9CE8(0, &qword_1ED3C2928);
    if ((swift_dynamicCast() & 1) == 0)
    {
      v52 = 0;
      v50 = 0u;
      v51 = 0u;
      sub_1BA65DBBC((uint64_t)&v50, &qword_1ED3CD960, &qword_1ED3C2928, (uint64_t)&protocol descriptor for IssueCoverImageRequestProviding);
      return;
    }
    sub_1BA4CECCC(&v50, (uint64_t)v53);
    v25 = v54;
    v26 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 8))(a2+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions, v25, v26);
    if (v27)
    {
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        v44 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_isLiveResizing;
        v40 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_loadingGroup;
        v29 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount;
        v30 = v27 + 32;
        v31 = MEMORY[0x1E0DBA438];
        v41 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount;
        while (1)
        {
          sub_1BA4C010C(v30, (uint64_t)&v50);
          sub_1BA65DC54((uint64_t)&v50, (uint64_t)&v47);
          if (!v48)
          {
            sub_1BA65DBBC((uint64_t)&v47, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, v31);
            goto LABEL_29;
          }
          sub_1BA4CECCC(&v47, (uint64_t)v49);
          v32 = *(_BYTE *)(a2 + v44);
          sub_1BA4C010C((uint64_t)v49, (uint64_t)&v47);
          if ((v32 & 1) == 0)
            break;
          __swift_project_boxed_opaque_existential_1(&v47, v48);
          v33 = ProcessedImageRequestType.isDownloaded.getter();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
          if ((v33 & 1) == 0)
            goto LABEL_35;
          dispatch_group_enter(*(dispatch_group_t *)(a2 + v40));
          v34 = 1;
LABEL_36:
          v35 = *(_QWORD *)(a2 + v29);
          v20 = __OFADD__(v35, 1);
          v36 = v35 + 1;
          if (v20)
            goto LABEL_43;
          *(_QWORD *)(a2 + v29) = v36;
          __swift_project_boxed_opaque_existential_1(v45 + 17, v45[20]);
          v37 = swift_allocObject();
          *(_BYTE *)(v37 + 16) = v34;
          *(_QWORD *)(v37 + 24) = a2;
          swift_retain();
          v29 = v41;
          v31 = MEMORY[0x1E0DBA438];
          sub_1BB86F8F8();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
LABEL_29:
          sub_1BA65DBBC((uint64_t)&v50, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, v31);
          v30 += 40;
          if (!--v28)
            goto LABEL_39;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
LABEL_35:
        v34 = 0;
        goto LABEL_36;
      }
LABEL_39:
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    return;
  }
  v38 = v4;
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    v4 = v38;
    goto LABEL_24;
  }
  v42 = v2 + 12;
  v43 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_isLiveResizing;
  v39 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_loadingGroup;
  v13 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount;
  v14 = v11 + 32;
  v15 = MEMORY[0x1E0DBA438];
  while (1)
  {
    sub_1BA4C010C(v14, (uint64_t)&v50);
    sub_1BA65DC54((uint64_t)&v50, (uint64_t)&v47);
    if (v48)
      break;
    sub_1BA65DBBC((uint64_t)&v47, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, v15);
LABEL_12:
    sub_1BA65DBBC((uint64_t)&v50, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, v15);
    v14 += 40;
    if (!--v12)
      goto LABEL_22;
  }
  sub_1BA4CECCC(&v47, (uint64_t)v49);
  v16 = *(_BYTE *)(a2 + v43);
  sub_1BA4C010C((uint64_t)v49, (uint64_t)&v47);
  if ((v16 & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(&v47, v48);
    v17 = ProcessedImageRequestType.isDownloaded.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
    if ((v17 & 1) != 0)
    {
      dispatch_group_enter(*(dispatch_group_t *)(a2 + v39));
      v18 = 1;
      goto LABEL_19;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
  }
  v18 = 0;
LABEL_19:
  v19 = *(_QWORD *)(a2 + v13);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (!v20)
  {
    *(_QWORD *)(a2 + v13) = v21;
    v22 = v3[15];
    v23 = v18;
    __swift_project_boxed_opaque_existential_1(v42, v22);
    v24 = swift_allocObject();
    *(_BYTE *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 24) = a2;
    swift_retain();
    v3 = v45;
    sub_1BB86F8F8();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    goto LABEL_12;
  }
  __break(1u);
LABEL_43:
  __break(1u);
}

uint64_t sub_1BA65DB80(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_1BA65DC00(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BA65DBBC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v5;

  sub_1BA5B089C(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1BA65DC00(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA4D9CE8(255, a3);
    v4 = sub_1BB873A2C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BA65DC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, MEMORY[0x1E0DBA438], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA65DCB8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FeedItemSupplementaryAttributes();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA65DCF8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;

  v52 = a8;
  v53 = a7;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v45 - v15;
  v17 = type metadata accessor for FormatButtonNodeData();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5E01A4(a1, (uint64_t)v16, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v20 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v16, 1, v20) == 1)
  {
    sub_1BA5C699C((uint64_t)v16, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 6)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  v48 = a4;
  v49 = a5;
  v50 = a6;
  v51 = v19;
  sub_1BA5193C4((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 7)
  {
    v21 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v22 = *(double **)(v21 + 16);
    v23 = *(_BYTE *)(v21 + 80);
    v54 = *(_QWORD *)(v21 + 72);
    v55 = v23;
    swift_retain();
    v47 = sub_1BA760848(v22, (uint64_t)&v54, a3);
    v24 = *(_QWORD *)(v21 + 24);
    MEMORY[0x1E0C80A78](v47);
    *(&v45 - 2) = a3;
    *(&v45 - 1) = v21;
    swift_bridgeObjectRetain();
    v46 = sub_1BA65E06C((void (*)(__int128 *__return_ptr, __int128 *))sub_1BA65F704, (uint64_t)(&v45 - 4), v24);
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v21 + 32);
    v26 = *(_QWORD *)(v21 + 40);
    v27 = *(_QWORD *)(v21 + 48);
    v28 = *(_BYTE *)(v21 + 56);
    v30 = *(_QWORD *)(v21 + 64);
    v29 = *(_QWORD *)(v21 + 72);
    v31 = *(_BYTE *)(v21 + 80);
    v32 = *(_QWORD *)(v21 + 96);
    v45 = *(_QWORD *)(v21 + 88);
    swift_retain();
    sub_1BA67D3F4(v27);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    type metadata accessor for FormatButtonNodeDataLayoutAttributes();
    v33 = swift_allocObject();
    v34 = v46;
    *(_QWORD *)(v33 + 16) = v47;
    *(_QWORD *)(v33 + 24) = v34;
    *(_QWORD *)(v33 + 32) = v25;
    *(_QWORD *)(v33 + 40) = v26;
    *(_QWORD *)(v33 + 48) = v27;
    *(_BYTE *)(v33 + 56) = v28;
    *(_QWORD *)(v33 + 64) = v30;
    *(_QWORD *)(v33 + 72) = v29;
    *(_BYTE *)(v33 + 80) = v31;
    *(_QWORD *)(v33 + 88) = v45;
    *(_QWORD *)(v33 + 96) = v32;
    sub_1BA572014(0, (unint64_t *)&qword_1ED3C8C20, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1ED3CEFB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
    v36 = v35;
    v37 = swift_allocBox();
    v39 = (uint64_t *)(v38 + *(int *)(v36 + 48));
    sub_1BA5193C4((uint64_t)v51, v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeData);
    v40 = v48;
    v41 = v49;
    *v39 = v33;
    v39[1] = v40;
    v42 = v50;
    v39[2] = v41;
    v39[3] = v42;
    v43 = v52;
    v39[4] = v53;
    *v43 = v37 | 0x1000000000000004;
    swift_retain();
    return sub_1BA8E9488(v41, v42);
  }
LABEL_7:
  result = sub_1BA4A2E80((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeData);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatButtonNodeDataLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t sub_1BA65E06C(void (*a1)(__int128 *__return_ptr, __int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t i;
  BOOL v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  sub_1BA65E2D0();
  result = sub_1BB873F48();
  v6 = (_QWORD *)result;
  v7 = 0;
  v29 = a3;
  v8 = *(_QWORD *)(a3 + 64);
  v22 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v23 = (unint64_t)(v9 + 63) >> 6;
  v24 = result + 64;
  if ((v10 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v12 | (v7 << 6); ; i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v29 + 48) + 8 * i);
    v28 = *(_OWORD *)(*(_QWORD *)(v29 + 56) + 16 * i);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    a1(&v26, &v28);
    swift_release();
    result = swift_release();
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v6;
    }
    *(_QWORD *)(v24 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v6[6] + 8 * i) = v17;
    v18 = v6[7] + 24 * i;
    v19 = v27;
    *(_OWORD *)v18 = v26;
    *(_QWORD *)(v18 + 16) = v19;
    v20 = v6[2];
    v14 = __OFADD__(v20, 1);
    v21 = v20 + 1;
    if (v14)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6[2] = v21;
    if (v11)
      goto LABEL_4;
LABEL_5:
    v14 = __OFADD__(v7++, 1);
    if (v14)
      goto LABEL_27;
    if (v7 >= v23)
      return (uint64_t)v6;
    v15 = *(_QWORD *)(v22 + 8 * v7);
    if (!v15)
      break;
LABEL_15:
    v11 = (v15 - 1) & v15;
  }
  v16 = v7 + 1;
  if (v7 + 1 >= v23)
    return (uint64_t)v6;
  v15 = *(_QWORD *)(v22 + 8 * v16);
  if (v15)
    goto LABEL_14;
  v16 = v7 + 2;
  if (v7 + 2 >= v23)
    return (uint64_t)v6;
  v15 = *(_QWORD *)(v22 + 8 * v16);
  if (v15)
    goto LABEL_14;
  v16 = v7 + 3;
  if (v7 + 3 >= v23)
    return (uint64_t)v6;
  v15 = *(_QWORD *)(v22 + 8 * v16);
  if (v15)
  {
LABEL_14:
    v7 = v16;
    goto LABEL_15;
  }
  while (1)
  {
    v7 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v7 >= v23)
      return (uint64_t)v6;
    v15 = *(_QWORD *)(v22 + 8 * v7);
    ++v16;
    if (v15)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1BA65E2D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9A60)
  {
    sub_1BA8262E8();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9A60);
  }
}

void sub_1BA65E330()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BA020)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BA020);
  }
}

uint64_t FormatContent.Resolved.issues.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;

  v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v66 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  result = MEMORY[0x1E0DEE9D8];
  v70 = MEMORY[0x1E0DEE9D8];
  v41 = *(_QWORD *)(v4 + 16);
  if (v41)
  {
    v40 = v4 + 32;
    v39 = v4;
    swift_bridgeObjectRetain_n();
    v6 = 0;
    v7 = 0;
    v56 = v1;
    do
    {
      v53 = v7;
      v43 = v6;
      v9 = (uint64_t *)(v40 + 80 * v6);
      v10 = *v9;
      v55 = v9[1];
      v11 = v9[2];
      v50 = v9[3];
      v12 = v9[4];
      v13 = v9[5];
      v14 = v9[6];
      v51 = v9[7];
      v16 = v9[8];
      v15 = v9[9];
      v49 = v12 & 0x7FFFFFFFFFFFFFFFLL;
      v48 = v15;
      v52 = v11;
      v45 = v13;
      sub_1BA6D78DC();
      v46 = v10;
      v54 = v14;
      v17 = v51;
      sub_1BA6D78DC();
      sub_1BA6D78DC();
      v44 = v12;
      sub_1BA6D78DC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v18 = v53;
      v19 = sub_1BB4A4184(v16);
      v53 = v18;
      swift_bridgeObjectRelease();
      v69 = v17;
      swift_bridgeObjectRetain();
      sub_1BA6D74C4(v19);
      swift_bridgeObjectRelease();
      v47 = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v69;
      v21 = MEMORY[0x1E0DEE9D8];
      v69 = MEMORY[0x1E0DEE9D8];
      v58 = *(_QWORD *)(v20 + 16);
      if (v58)
      {
        v57 = v20 + 32;
        v42 = v20;
        swift_bridgeObjectRetain();
        v22 = 0;
        v23 = v21;
        do
        {
          v24 = (_QWORD *)(v57 + (v22 << 6));
          v25 = v24[1];
          v26 = v24[2];
          v27 = v24[3];
          v28 = v24[4];
          v30 = v24[5];
          v29 = v24[6];
          v31 = v24[7];
          v68 = v23;
          v32 = v23;
          v33 = *(_QWORD *)(v28 + 16);
          if (v33)
          {
            v34 = v29;
            v35 = v30;
            v36 = v28 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
            v65 = v25;
            swift_bridgeObjectRetain();
            v63 = v26;
            swift_bridgeObjectRetain();
            v62 = v27;
            swift_bridgeObjectRetain();
            v64 = v28;
            swift_bridgeObjectRetain_n();
            v61 = v35;
            swift_bridgeObjectRetain();
            v60 = v34;
            swift_bridgeObjectRetain();
            v59 = v31;
            swift_bridgeObjectRetain();
            v37 = *(_QWORD *)(v66 + 72);
            do
            {
              sub_1BA4C2DD8(v36, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                MEMORY[0x1BCCE36AC]();
                if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_1BB872E44();
                sub_1BB872E8C();
                sub_1BB872DCC();
              }
              else
              {
                sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
              }
              v36 += v37;
              --v33;
            }
            while (v33);
            v67 = v68;
            v23 = MEMORY[0x1E0DEE9D8];
          }
          else
          {
            v38 = v32;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v67 = v38;
            v23 = v38;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          ++v22;
          sub_1BB384000(v67);
        }
        while (v22 != v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v67 = v69;
        v8 = v43;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v67 = v21;
        v8 = v43;
      }
      v6 = v8 + 1;
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BB384000(v67);
      v7 = v53;
    }
    while (v6 != v41);
    swift_bridgeObjectRelease_n();
    return v70;
  }
  return result;
}

uint64_t sub_1BA65EAE0(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1BCCE463C](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1BB872DCC();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA65EC9C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BA6CA500(0, &qword_1ED3BB4A0, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
        sub_1BA865CE0();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BB4CBAC8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3BA820);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA65EEC0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1BA861560(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for FormatPackageInventory, (uint64_t (*)(uint64_t))sub_1BA865108, &qword_1EF2A91B8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1BB4CBA74);
}

uint64_t sub_1BA65EEE4(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unsigned int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v7;

  MEMORY[0x1E0C80A78](a1);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6A81A0(v3, (uint64_t)v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2)
    return 0;
  if (EnumCaseMultiPayload != 2)
  {
    sub_1BA4A2E80((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
    return 0;
  }
  v5 = sub_1BA79B7B8();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BA65EFE4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1BA65F06C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1BB8745C0();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BA65F164(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1BA65F164(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BA4A20B8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1BA9E674C();
      goto LABEL_14;
    }
    sub_1BA65F284();
  }
  v8 = *v3;
  result = sub_1BB8745C0();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1BB874554();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1BA65F284()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  sub_1BA6EE8F0(0, &qword_1ED3B9A28);
  result = sub_1BB873C60();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_1BB8745C0();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BA65F4F8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BA865418(0);
        sub_1BA4A2870((unint64_t *)&unk_1EF2A9270, (uint64_t (*)(uint64_t))sub_1BA865418, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BB4CBB70(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BB86F418();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA65F704@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA65F71C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BA65F71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  double *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;

  v5 = *(double **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a3 + 80);
  v11 = *(_QWORD *)(a3 + 72);
  v12 = v7;
  *a4 = sub_1BA760848(v5, (uint64_t)&v11, a2);
  a4[1] = v6;
  swift_retain();
  v8 = sub_1BA863F8C((uint64_t)&unk_1E7271148);
  type metadata accessor for FormatResizeAuto();
  v9 = swift_allocObject();
  result = swift_beginAccess();
  *(_QWORD *)(v9 + 16) = v8;
  a4[2] = v9;
  return result;
}

uint64_t sub_1BA65F7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImageRequestOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA65F80C(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA65F4F8);
}

uint64_t type metadata accessor for FeedItemRendererPipelineProcessor.Context(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3B2900);
}

uint64_t sub_1BA65F82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3D2C58, (void (*)(uint64_t))MEMORY[0x1E0DB7A20]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA65F880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3D2C58, (void (*)(uint64_t))MEMORY[0x1E0DB7A20]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BA65F8D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BA65F938()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9C90)
  {
    sub_1BB86F4A8();
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9C90);
  }
}

uint64_t sub_1BA65F98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA65FA58(0, (unint64_t *)&unk_1ED3C4A20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA65FA58(0, (unint64_t *)&unk_1ED3C4A80, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3C4C20 = result;
  return result;
}

void sub_1BA65FA58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA65FAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  sub_1BA4AD288(0, &qword_1ED3C4A10, (uint64_t)&type metadata for SportsScoreConcern, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  sub_1BA4AD288(0, &qword_1ED3C4A68, (uint64_t)&type metadata for SportsScoreConcern, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBC3F8], v6);
  result = sub_1BB871458();
  *a4 = result;
  return result;
}

void sub_1BA65FBAC(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BB874218();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t FormatOptionBinding.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - v6;
  sub_1BAEA81DC(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v11 = v1[1];
  v28 = v1[2];
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAEA806C();
  v16 = sub_1BA4A2870(&qword_1ED3D0E10, (uint64_t (*)(uint64_t))sub_1BAEA806C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatOptionBinding, v17, v13, (uint64_t)&type metadata for FormatOptionBinding, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v10, v16, (uint64_t)&off_1E734BD80);
  v18 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v30;
  sub_1BAD1BE8C(v12, v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v23 = qword_1ED3C6D60;
    v24 = v28;
    swift_bridgeObjectRetain();
    if (v23 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C38);
    v26 = (uint64_t)v29;
    v21(v29, v25, v19);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2A580(v24, 1, 0, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAEA81DC);
}

uint64_t sub_1BA65FED8(char a1)
{
  if (!a1)
    return 0x746867696CLL;
  if (a1 == 1)
    return 1802658148;
  return 1885433183;
}

uint64_t sub_1BA65FF1C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E6572646C696863;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x6973736572707865;
}

uint64_t sub_1BA65FF74()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x756F72676B636162;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x756F726765726F66;
}

uint64_t sub_1BA65FFC8(char a1)
{
  if (!a1)
    return 0x65756C6176;
  if (a1 == 1)
    return 0x726F7463656C6573;
  return 1885433183;
}

uint64_t sub_1BA660018()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7265696669646F6DLL;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

unint64_t sub_1BA660074()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BF40;
  if (!qword_1ED39BF40)
  {
    sub_1BA4AD288(255, &qword_1ED3B95A0, (uint64_t)&type metadata for FormatOptionBindingModifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA823D6C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BF40);
  }
  return result;
}

uint64_t sub_1BA6600EC(_QWORD *a1)
{
  return FormatFeedGroup.encode(to:)(a1);
}

uint64_t FormatFeedGroup.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v12;
  char v13;
  __int128 v14;

  v3 = v1;
  sub_1BA6618D0(0, &qword_1ED3A0998, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA66188C();
  sub_1BB8746C8();
  v10 = (int *)type metadata accessor for FormatFeedGroup();
  LOBYTE(v14) = 0;
  type metadata accessor for FormatContent.Resolved();
  sub_1BA4A2870((unint64_t *)&unk_1ED39F8F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatContent.Resolved, (uint64_t)&protocol conformance descriptor for FormatContent.Resolved);
  sub_1BB8741AC();
  if (!v2)
  {
    v14 = *(_OWORD *)(v3 + v10[6]);
    v13 = 1;
    sub_1BA76D834();
    sub_1BA6604A4();
    sub_1BB8741AC();
    LOBYTE(v14) = *(_BYTE *)(v3 + v10[7]);
    v13 = 2;
    sub_1BA6604FC();
    sub_1BB8741AC();
    LOBYTE(v14) = *(_BYTE *)(v3 + v10[8]);
    v13 = 3;
    sub_1BB8741AC();
    LOBYTE(v14) = 4;
    sub_1BB874194();
    LOBYTE(v14) = 5;
    sub_1BB874194();
    LOBYTE(v14) = 11;
    sub_1BB874194();
    LOBYTE(v14) = 6;
    sub_1BB874140();
    LOBYTE(v14) = 7;
    sub_1BB874140();
    LOBYTE(v14) = 8;
    sub_1BB874140();
    LOBYTE(v14) = 9;
    sub_1BB874140();
    LOBYTE(v14) = *(_BYTE *)(v3 + v10[16]);
    v13 = 10;
    sub_1BA660540();
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BA6604A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED39BDB0;
  if (!qword_1ED39BDB0)
  {
    sub_1BA76D834();
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED39BDB0);
  }
  return result;
}

unint64_t sub_1BA6604FC()
{
  unint64_t result;

  result = qword_1ED39ACF0;
  if (!qword_1ED39ACF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupPaidVisibility, &type metadata for FeedGroupPaidVisibility);
    atomic_store(result, (unint64_t *)&qword_1ED39ACF0);
  }
  return result;
}

unint64_t sub_1BA660540()
{
  unint64_t result;

  result = qword_1ED39AB60;
  if (!qword_1ED39AB60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupRepooling, &type metadata for FeedGroupRepooling);
    atomic_store(result, (unint64_t *)&qword_1ED39AB60);
  }
  return result;
}

uint64_t FormatFeedGroup.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  double v40;
  int v41;
  _QWORD *v42;
  _BYTE *v43;
  uint64_t v44;
  _QWORD *v45;
  char v46;
  char v47;
  _BYTE v48[2];
  char v49;
  char v50;

  type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78]();
  v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA6618D0(0, &qword_1ED3A0970, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v44 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78]();
  v10 = &v31[-v9];
  v11 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1BA66188C();
  v43 = v10;
  sub_1BB87468C();
  if (!v2)
  {
    v42 = a2;
    v12 = v8;
    v50 = 0;
    sub_1BA4A2870(&qword_1ED39F900, (uint64_t (*)(uint64_t))type metadata accessor for FormatContent.Resolved, (uint64_t)&protocol conformance descriptor for FormatContent.Resolved);
    sub_1BB8740D4();
    v13 = (uint64_t)v6;
    v50 = 1;
    v15 = sub_1BB87402C();
    v17 = v16;
    v49 = 2;
    sub_1BA66171C();
    sub_1BB8740D4();
    v49 = v50;
    v48[0] = 3;
    sub_1BB8740D4();
    v48[0] = v48[1];
    v47 = 4;
    sub_1BB8740B0();
    v19 = v18;
    v47 = 5;
    v20 = sub_1BB874044();
    v41 = v21;
    v47 = 11;
    *(double *)&v22 = COERCE_DOUBLE(sub_1BB874044());
    v39 = v23;
    v40 = *(double *)&v22;
    v47 = 6;
    v24 = sub_1BB874050();
    v36 = v25;
    v38 = v24;
    v47 = 7;
    v37 = sub_1BB874050();
    v35 = v26;
    v47 = 8;
    v27 = sub_1BB874050();
    v34 = v28;
    v29 = v27;
    v47 = 9;
    v33 = sub_1BB874050();
    v32 = v30;
    v46 = 10;
    sub_1BA66192C();
    sub_1BB874068();
    v46 = v47;
    FormatFeedGroup.init(content:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)(v13, v15, v17, &v49, v48, *(double *)&v20, v41 & 1, v40, v42, v19, v39 & 1, v38, v36 & 1, v37, v35 & 1, v29, v34 & 1, v33, v32 & 1,
      &v46,
      0);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v43, v44);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
}

uint64_t FeedGroupConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  void (*v27)(void);
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  char *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68[6];
  char v69;

  v56 = a5;
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v58 = (char *)&v52 - v12;
  v13 = sub_1BB86C8E0();
  v60 = *(_QWORD *)(v13 - 8);
  v61 = v13;
  MEMORY[0x1E0C80A78](v13);
  v59 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FeedGroupConfig.CodingKeys(255, a2, a3, a4);
  v64 = (int *)MEMORY[0x1BCCE5B24](&unk_1BB8D8A60, v15);
  v16 = sub_1BB874104();
  v17 = *(_QWORD *)(v16 - 8);
  v62 = v16;
  v63 = v17;
  MEMORY[0x1E0C80A78](v16);
  v65 = (char *)&v52 - v18;
  v19 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v20);
  v21 = type metadata accessor for FeedGroupConfig(0, a2, a3, a4);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v66 = (uint64_t *)((char *)&v52 - v23);
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v68);
  v24 = v67;
  sub_1BB87300C();
  if (v24)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v26 = (char *)v66 + *(int *)(v21 + 88);
  v55 = v19;
  v27 = *(void (**)(void))(v19 + 32);
  v53 = v22;
  v54 = v26;
  v67 = a2;
  v27();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v28 = v65;
  sub_1BB87468C();
  v64 = (int *)v21;
  LOBYTE(v68[0]) = 0;
  v29 = sub_1BB874098();
  v30 = v66;
  *v66 = v29;
  v30[1] = v31;
  LOBYTE(v68[0]) = 1;
  v32 = sub_1BB87402C();
  v52 = a1;
  v34 = v33;
  if (v33)
  {
    v35 = v32;
  }
  else
  {
    v36 = v59;
    sub_1BB86C8D4();
    v35 = sub_1BB86C8C8();
    v34 = v37;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v61);
  }
  v30[2] = v35;
  v30[3] = v34;
  LOBYTE(v68[0]) = 2;
  v30[4] = sub_1BB87402C();
  v30[5] = v38;
  v69 = 3;
  sub_1BA661808();
  sub_1BB874068();
  v39 = v68[0];
  if (v68[0] == 1)
    v39 = 0;
  v30[6] = v39;
  v69 = 4;
  sub_1BA66171C();
  sub_1BB874068();
  v40 = v68[0];
  if (LOBYTE(v68[0]) == 4)
    v40 = 2;
  *((_BYTE *)v30 + 56) = v40;
  sub_1BB86EB84();
  LOBYTE(v68[0]) = 6;
  v41 = sub_1BA66184C(&qword_1ED3B0918, MEMORY[0x1E0DB4DF0]);
  v42 = (uint64_t)v58;
  v61 = v41;
  sub_1BB874068();
  sub_1BA6BFD64(v42, (uint64_t)v30 + v64[15]);
  LOBYTE(v68[0]) = 5;
  v43 = (uint64_t)v57;
  sub_1BB874068();
  sub_1BA6BFD64(v43, (uint64_t)v30 + v64[16]);
  sub_1BA637C70();
  v69 = 7;
  sub_1BA637DF8(&qword_1ED3B96F8, (uint64_t (*)(uint64_t))sub_1BA637C70, MEMORY[0x1E0DEDBF8], MEMORY[0x1E0DEB3D8]);
  sub_1BB874068();
  v44 = v68[0];
  v45 = MEMORY[0x1E0DEE9E8];
  if (!v68[0])
    v44 = MEMORY[0x1E0DEE9E8];
  *(uint64_t *)((char *)v30 + v64[17]) = v44;
  v69 = 8;
  sub_1BB874068();
  v46 = v68[0];
  if (!v68[0])
    v46 = v45;
  *(uint64_t *)((char *)v66 + v64[18]) = v46;
  sub_1BA661760();
  v69 = 9;
  sub_1BA637CCC(&qword_1ED3CF888, (uint64_t (*)(void))sub_1BA837EF8, MEMORY[0x1E0DEB3D8]);
  sub_1BB874068();
  v47 = v68[0];
  if (!v68[0])
    v47 = v45;
  *(uint64_t *)((char *)v66 + v64[19]) = v47;
  v69 = 10;
  sub_1BB874068();
  v48 = v68[0];
  if (!v68[0])
    v48 = v45;
  *(uint64_t *)((char *)v66 + v64[20]) = v48;
  v69 = 11;
  sub_1BA6617B8();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v28, v62);
  v49 = v64;
  v50 = v66;
  *((_BYTE *)v66 + v64[21]) = (LOBYTE(v68[0]) == 2) | v68[0] & 1;
  v51 = v53;
  (*(void (**)(uint64_t, uint64_t *, int *))(v53 + 16))(v56, v50, v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return (*(uint64_t (**)(uint64_t *, int *))(v51 + 8))(v50, v49);
}

_QWORD *sub_1BA66147C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  int v16;
  size_t v17;
  size_t v18;
  size_t v19;
  void *v20;
  const void *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v4[1] = v5[1];
  v6 = (_QWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  v10 = sub_1BB86EB84();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v38 = v12 + 9 + v8;
  v39 = ~v12;
  v13 = (void *)(v38 & ~v12);
  v37 = v12 + 9 + v9;
  v14 = (const void *)(v37 & ~v12);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v14, 1, v10))
  {
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
    if (v16)
      v18 = *(_QWORD *)(v11 + 64);
    else
      v18 = v17 + 1;
    memcpy(v13, v14, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v13, v14, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
  }
  if (v16)
    v19 = v17;
  else
    v19 = v17 + 1;
  v20 = (void *)(((v38 | v12) + v19) & v39);
  v21 = (const void *)(((v37 | v12) + v19) & v39);
  if (v15(v21, 1, v10))
  {
    memcpy(v20, v21, v19);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v20, v21, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  }
  v22 = (_QWORD *)(((unint64_t)v21 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v20 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v22;
  v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v25 = *v24;
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v27 = *v26;
  v28 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  v30 = *(_QWORD *)(a3 + 16);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 + 9 + v28) & ~v32;
  v34 = (v32 + 9 + v29) & ~v32;
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35(v33, v34, v30);
  return a1;
}

uint64_t type metadata accessor for FeedGroupConfig(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupConfig);
}

unint64_t sub_1BA66171C()
{
  unint64_t result;

  result = qword_1ED3B23B0;
  if (!qword_1ED3B23B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupPaidVisibility, &type metadata for FeedGroupPaidVisibility);
    atomic_store(result, (unint64_t *)&qword_1ED3B23B0);
  }
  return result;
}

void sub_1BA661760()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CF880)
  {
    sub_1BA837F80();
    v0 = sub_1BB87309C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CF880);
  }
}

unint64_t sub_1BA6617B8()
{
  unint64_t result;

  result = qword_1ED3AFDC0[0];
  if (!qword_1ED3AFDC0[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitterPriority, &type metadata for FeedGroupEmitterPriority);
    atomic_store(result, qword_1ED3AFDC0);
  }
  return result;
}

uint64_t type metadata accessor for FeedGroupConfig.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupConfig.CodingKeys);
}

unint64_t sub_1BA661808()
{
  unint64_t result;

  result = qword_1ED3B0DD8[0];
  if (!qword_1ED3B0DD8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupSlots, &type metadata for FeedGroupSlots);
    atomic_store(result, qword_1ED3B0DD8);
  }
  return result;
}

uint64_t sub_1BA66184C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BB86EB84();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA66188C()
{
  unint64_t result;

  result = qword_1ED39F2D8;
  if (!qword_1ED39F2D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F603C, &type metadata for FormatFeedGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39F2D8);
  }
  return result;
}

void sub_1BA6618D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA66188C();
    v7 = a3(a1, &type metadata for FormatFeedGroup.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA66192C()
{
  unint64_t result;

  result = qword_1ED39AB70;
  if (!qword_1ED39AB70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupRepooling, &type metadata for FeedGroupRepooling);
    atomic_store(result, (unint64_t *)&qword_1ED39AB70);
  }
  return result;
}

uint64_t FormatFeedGroup.init(content:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X3>, _BYTE *a5@<X4>, double a6@<X5>, int a7@<W6>, double a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, unsigned __int8 a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, unsigned __int8 a15, unint64_t a16, unsigned __int8 a17, uint64_t a18, char a19, char *a20,uint64_t a21)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  int *v31;
  _QWORD *v32;
  uint64_t v33;
  double v34;
  double v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  double v60;
  double *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  char v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  _BOOL8 v94;
  uint64_t v95;
  char v96;
  unint64_t v97;
  char v98;
  unint64_t v99;
  char v100;
  char v101;
  char isUniquelyReferenced_nonNull_native;
  void *v103;
  uint64_t *v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t result;
  int *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  double v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  double v144;
  uint64_t v145;
  char *v146;
  unint64_t v147;
  char *v148;
  unint64_t v149;
  unint64_t v150;
  void *v151;
  unint64_t v152;
  unint64_t v153;
  _QWORD *v154;

  v144 = a8;
  LODWORD(v140) = a7;
  v139 = a6;
  v136 = a3;
  v122 = 0;
  LODWORD(v150) = a17;
  v147 = a16;
  LODWORD(v143) = a15;
  v141 = a14;
  LODWORD(v138) = a13;
  v137 = a12;
  LODWORD(v135) = a11;
  sub_1BA4A3FB4(0, &qword_1ED3D2C50, (void (*)(uint64_t))sub_1BA6C5A68);
  MEMORY[0x1E0C80A78]();
  v146 = (char *)&v114 - v27;
  v145 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78]();
  v134 = (char *)&v114 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v142 = *(_QWORD *)(v149 - 8);
  MEMORY[0x1E0C80A78]();
  v148 = (char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a4) = *a4;
  LOBYTE(a5) = *a5;
  v30 = *a20;
  *a9 = 0;
  v31 = (int *)type metadata accessor for FormatFeedGroup();
  v32 = (_QWORD *)((char *)a9 + v31[6]);
  sub_1BA4C2DD8(a1, (uint64_t)a9 + v31[5], (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v33 = v136;
  *v32 = a2;
  v32[1] = v33;
  *((_BYTE *)a9 + v31[7]) = (_BYTE)a4;
  *((_BYTE *)a9 + v31[8]) = (_BYTE)a5;
  *(double *)((char *)a9 + v31[9]) = a10;
  v34 = v139;
  if ((v140 & 1) != 0)
    v34 = 0.0;
  *(double *)((char *)a9 + v31[10]) = v34;
  v35 = v144;
  if ((v135 & 1) != 0)
    v35 = 0.0;
  *(double *)((char *)a9 + v31[11]) = v35;
  v36 = (char *)a9 + v31[12];
  *(_QWORD *)v36 = v137;
  v36[8] = v138 & 1;
  v37 = (char *)a9 + v31[13];
  *(_QWORD *)v37 = v141;
  v37[8] = v143 & 1;
  v38 = (char *)a9 + v31[14];
  *(_QWORD *)v38 = v147;
  v38[8] = v150 & 1;
  v39 = (char *)a9 + v31[15];
  *(_QWORD *)v39 = a18;
  v39[8] = a19 & 1;
  v116 = v31;
  v40 = v31[16];
  v117 = a9;
  *((_BYTE *)a9 + v40) = v30;
  v41 = *(int *)(type metadata accessor for FormatContent.Resolved() + 32);
  v115 = a1;
  v42 = *(_QWORD *)(a1 + v41);
  v43 = MEMORY[0x1E0DEE9D8];
  v154 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v119 = *(_QWORD *)(v42 + 16);
  if (v119)
  {
    v118 = v42 + 32;
    v114 = v42;
    swift_bridgeObjectRetain_n();
    v44 = 0;
    v45 = (uint64_t)v148;
    do
    {
      v121 = v44;
      v46 = (uint64_t *)(v118 + 80 * v44);
      v47 = *v46;
      v48 = v46[1];
      v49 = v46[2];
      v133 = v46[3];
      v51 = v46[4];
      v50 = v46[5];
      v52 = v46[7];
      v132 = v46[6];
      v128 = v52;
      v54 = v46[8];
      v53 = v46[9];
      v126 = v51 & 0x7FFFFFFFFFFFFFFFLL;
      v131 = v53;
      v127 = v54;
      v130 = v48;
      v124 = v49;
      v129 = v50;
      sub_1BA6D78DC();
      v125 = v47;
      v55 = v128;
      sub_1BA6D78DC();
      v56 = v127;
      sub_1BA6D78DC();
      v123 = v51;
      sub_1BA6D78DC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v57 = v122;
      v58 = sub_1BB4A4184(v56);
      v122 = v57;
      swift_bridgeObjectRelease();
      v153 = v55;
      swift_bridgeObjectRetain();
      sub_1BA6D74C4(v58);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v59 = v153;
      v153 = v43;
      v136 = *(_QWORD *)(v59 + 16);
      if (v136)
      {
        v135 = v59 + 32;
        v120 = v59;
        swift_bridgeObjectRetain();
        v60 = 0.0;
        do
        {
          v144 = v60;
          v61 = (double *)(v135 + (*(_QWORD *)&v60 << 6));
          v62 = *((_QWORD *)v61 + 1);
          v63 = *((_QWORD *)v61 + 2);
          v65 = v61[3];
          v64 = *((_QWORD *)v61 + 4);
          v67 = *((_QWORD *)v61 + 5);
          v66 = *((_QWORD *)v61 + 6);
          v147 = *((_QWORD *)v61 + 7);
          v152 = v43;
          v68 = *(_QWORD *)(v64 + 16);
          v143 = v62;
          if (v68)
          {
            v69 = v64;
            v70 = v64 + ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80));
            swift_bridgeObjectRetain_n();
            v140 = v63;
            swift_bridgeObjectRetain_n();
            v139 = v65;
            swift_bridgeObjectRetain_n();
            v141 = v69;
            swift_bridgeObjectRetain_n();
            v138 = v67;
            swift_bridgeObjectRetain_n();
            v137 = v66;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            v150 = *(_QWORD *)(v142 + 72);
            sub_1BA4C2DD8(v70, v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
            v71 = (char *)&loc_1BA662264 + dword_1BB1C3F64[swift_getEnumCaseMultiPayload()];
            __asm { BR              X9 }
          }
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v150 = v43;
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          *(_QWORD *)&v60 = *(_QWORD *)&v144 + 1;
          sub_1BA66293C(v150);
        }
        while (*(_QWORD *)&v60 != v136);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v150 = v153;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v150 = v43;
      }
      v44 = v121 + 1;
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA66293C(v150);
    }
    while (v44 != v119);
    swift_bridgeObjectRelease_n();
    v43 = (unint64_t)v154;
  }
  if (!(v43 >> 62))
  {
    v72 = v43 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_1BB874428();
    sub_1BA4EFE00(0, &qword_1ED3C0458);
    v73 = swift_dynamicCastMetatype();
    v74 = v43;
    if (!v73)
    {
      v108 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v74 = v43;
      if (v108)
      {
        v109 = v72 + 32;
        while (1)
        {
          v151 = &unk_1EF41E670;
          if (!swift_dynamicCastObjCProtocolConditional())
            break;
          v109 += 8;
          if (!--v108)
          {
            v74 = v43;
            goto LABEL_19;
          }
        }
        v74 = v72 | 1;
      }
    }
LABEL_19:
    *(_QWORD *)((char *)v117 + v116[17]) = v74;
    v75 = (_QWORD *)sub_1BA662948(MEMORY[0x1E0DEE9D8]);
    v76 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v76)
      goto LABEL_20;
LABEL_57:
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v115, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    result = swift_bridgeObjectRelease();
    v112 = v116;
    v113 = v117;
    *(_QWORD *)((char *)v117 + v116[18]) = v75;
    *(_QWORD *)((char *)v113 + v112[19]) = a21;
    return result;
  }
LABEL_56:
  sub_1BA4EFE00(0, &qword_1ED3C0458);
  swift_bridgeObjectRetain();
  v110 = sub_1BB873EB8();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v117 + v116[17]) = v110;
  v75 = (_QWORD *)sub_1BA662948(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRetain_n();
  v76 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v76)
    goto LABEL_57;
LABEL_20:
  v148 = (char *)v76;
  v149 = v43 & 0xC000000000000001;
  v77 = 4;
  v147 = v43;
  while (1)
  {
    v80 = v77 - 4;
    if (v149)
    {
      v81 = (void *)MEMORY[0x1BCCE4630](v77 - 4, v43);
      v79 = v77 - 3;
      if (__OFADD__(v80, 1))
        goto LABEL_53;
    }
    else
    {
      v81 = *(void **)(v43 + 8 * v77);
      swift_unknownObjectRetain();
      v79 = v77 - 3;
      if (__OFADD__(v80, 1))
      {
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
    }
    v82 = objc_msgSend(v81, sel_identifier);
    v83 = sub_1BB8729A0();
    v85 = v84;

    v86 = objc_msgSend(v81, sel_scoreProfile);
    if (!v86)
    {
      swift_bridgeObjectRetain();
      v99 = sub_1BA6E35A8(v83, v85);
      v101 = v100;
      swift_bridgeObjectRelease();
      if ((v101 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v154 = v75;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BB4C7130();
          v75 = v154;
        }
        swift_bridgeObjectRelease();
        v103 = *(void **)(v75[7] + 8 * v99);
        sub_1BA81C280(v99, v75);
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    v87 = v86;
    v150 = v79;
    v88 = swift_isUniquelyReferenced_nonNull_native();
    v89 = v85;
    v90 = v88;
    v154 = v75;
    v91 = v89;
    v43 = sub_1BA6E35A8(v83, v89);
    v93 = v75[2];
    v94 = (v92 & 1) == 0;
    v95 = v93 + v94;
    if (__OFADD__(v93, v94))
      goto LABEL_54;
    v96 = v92;
    if (v75[3] < v95)
      break;
    if ((v90 & 1) != 0)
    {
      v75 = v154;
      if ((v92 & 1) == 0)
        goto LABEL_41;
    }
    else
    {
      sub_1BB4C7130();
      v75 = v154;
      if ((v96 & 1) == 0)
      {
LABEL_41:
        v75[(v43 >> 6) + 8] |= 1 << v43;
        v104 = (uint64_t *)(v75[6] + 16 * v43);
        *v104 = v83;
        v104[1] = v91;
        *(_QWORD *)(v75[7] + 8 * v43) = v87;
        v105 = v75[2];
        v106 = __OFADD__(v105, 1);
        v107 = v105 + 1;
        if (v106)
          goto LABEL_55;
        v75[2] = v107;
        swift_bridgeObjectRetain();
        goto LABEL_22;
      }
    }
LABEL_21:
    v78 = v75[7];

    *(_QWORD *)(v78 + 8 * v43) = v87;
LABEL_22:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 = v147;
    v76 = (uint64_t)v148;
    v79 = v150;
LABEL_23:
    ++v77;
    if (v79 == v76)
      goto LABEL_57;
  }
  sub_1BB4B5D60(v95, v90);
  v97 = sub_1BA6E35A8(v83, v91);
  if ((v96 & 1) == (v98 & 1))
  {
    v43 = v97;
    v75 = v154;
    if ((v96 & 1) == 0)
      goto LABEL_41;
    goto LABEL_21;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA66293C(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA7B98EC);
}

unint64_t sub_1BA662948(uint64_t a1)
{
  return sub_1BA662964(a1, (unint64_t *)&qword_1ED3CFAE8, (uint64_t)&unk_1ED3CFA00, 0x1E0D58B48);
}

unint64_t sub_1BA662964(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F62B0(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
  v5 = (_QWORD *)sub_1BB873F6C();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (void **)(a1 + 48);
  while (1)
  {
    v8 = (uint64_t)*(v7 - 2);
    v9 = (uint64_t)*(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain();
    v11 = v10;
    result = sub_1BA6E35A8(v8, v9);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v5[6] + 16 * result);
    *v14 = v8;
    v14[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v11;
    v15 = v5[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BA662A80(uint64_t a1, uint64_t a2)
{
  id *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  void *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  void *v59;
  char *v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t (*v64)(char *, unint64_t, uint64_t);
  uint64_t result;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  BOOL v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t);
  uint64_t (*v116)(char *, char *, uint64_t, uint64_t);
  unint64_t *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  int v135;
  int v136;
  __int128 v137;
  uint64_t v138;
  __int128 v139;
  unint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  id *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  _QWORD *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  void (*v162)(char *, uint64_t);
  void (*v163)(uint64_t, uint64_t);
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  unint64_t v180;
  char v181;
  char v182;
  char v183;
  char v184;
  __int128 v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;

  v170 = a1;
  v4 = *((_QWORD *)*v2 + 12);
  v5 = *((_QWORD *)*v2 + 10);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v174 = v4;
  v169 = v5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v8 = swift_getAssociatedConformanceWitness();
  v168 = swift_getAssociatedTypeWitness();
  v167 = *(_QWORD *)(v168 - 8);
  MEMORY[0x1E0C80A78](v168);
  v166 = (char *)&v131 - v9;
  sub_1BA4A3FB4(0, &qword_1ED3C5B90, (void (*)(uint64_t))type metadata accessor for FeedGroupConfigSidecar);
  MEMORY[0x1E0C80A78](v10);
  v159 = (char *)&v131 - v11;
  v148 = type metadata accessor for FeedGroupConfigSidecar();
  v150 = *(_QWORD *)(v148 - 8);
  MEMORY[0x1E0C80A78](v148);
  v138 = (uint64_t)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v153 = (uint64_t *)((char *)&v131 - v14);
  v175 = v8;
  swift_getAssociatedTypeWitness();
  v145 = swift_getAssociatedConformanceWitness();
  v152 = swift_getAssociatedTypeWitness();
  v157 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v173 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v151 = (char *)&v131 - v17;
  MEMORY[0x1E0C80A78](v18);
  v154 = (char *)&v131 - v19;
  MEMORY[0x1E0C80A78](v20);
  v158 = (char *)&v131 - v21;
  MEMORY[0x1E0C80A78](v22);
  v155 = (char *)&v131 - v23;
  v132 = v24;
  MEMORY[0x1E0C80A78](v25);
  v149 = (char *)&v131 - v26;
  v172 = swift_getAssociatedTypeWitness();
  v171 = *(_QWORD *)(v172 - 8);
  MEMORY[0x1E0C80A78](v172);
  v142 = (char *)&v131 - v27;
  v28 = swift_checkMetadataState();
  v161 = *(char **)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v131 - v29;
  v31 = swift_checkMetadataState();
  v165 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v131 - v32;
  v140 = *(_QWORD *)a2;
  LODWORD(v139) = *(unsigned __int8 *)(a2 + 8);
  LODWORD(v137) = *(unsigned __int8 *)(a2 + 9);
  v136 = *(unsigned __int8 *)(a2 + 10);
  v135 = *(unsigned __int8 *)(a2 + 11);
  v147 = *(_QWORD *)(a2 + 32);
  v146 = *(_QWORD *)(a2 + 40);
  LODWORD(v143) = *(unsigned __int8 *)(a2 + 48);
  v141 = *(_QWORD *)(a2 + 56);
  v35 = type metadata accessor for FeedGroupEmitter(0, AssociatedTypeWitness, AssociatedConformanceWitness, v34);
  v133 = *(_OWORD *)(a2 + 16);
  v134 = *(_OWORD *)(a2 + 64);
  v194 = sub_1BB872E68();
  v36 = sub_1BB872EE0();
  swift_getTupleTypeMetadata2();
  sub_1BB872E68();
  v193 = sub_1BB8727CC();
  v160 = v35;
  v192 = sub_1BB872E68();
  v144 = v2;
  v37 = objc_msgSend(v2[2], sel_cachedSubscription);
  v38 = objc_msgSend(v37, sel_isSubscribed);

  v39 = AssociatedConformanceWitness;
  v40 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  v41 = v170;
  v163 = v40;
  v40(AssociatedTypeWitness, v39);
  (*(void (**)(uint64_t))(v175 + 40))(v31);
  v42 = *(void (**)(char *, uint64_t))(v165 + 8);
  v164 = v33;
  v165 = v31;
  v162 = v42;
  v42(v33, v31);
  v43 = v142;
  v44 = v39;
  (*(void (**)(uint64_t, uint64_t))(v39 + 48))(AssociatedTypeWitness, v39);
  v45 = v43;
  v46 = (*(uint64_t (**)(char *, id, uint64_t))(v145 + 56))(v43, v38, v28);
  (*(void (**)(char *, uint64_t))(v171 + 8))(v45, v172);
  v47 = (void (*)(char *, uint64_t))*((_QWORD *)v161 + 1);
  v142 = (char *)v28;
  v47(v30, v28);
  v48 = v152;
  v191 = sub_1BB872E68();
  v172 = AssociatedTypeWitness;
  v49 = AssociatedTypeWitness;
  v171 = v44;
  v50 = v48;
  type metadata accessor for FeedGroupEmitterCursor(0, v49, v44, v51);
  v180 = v140;
  v181 = v139;
  v182 = v137;
  v183 = v136;
  v184 = v135;
  v185 = v133;
  v186 = v147;
  v187 = v146;
  v188 = v143;
  v189 = v141;
  v190 = v134;
  v143 = sub_1BA512EAC(v41, (uint64_t)&v180);
  if (MEMORY[0x1BCCE37E4](v46, v48))
  {
    v52 = 0;
    v53 = *v144;
    v140 = MEMORY[0x1E0DEE9D8];
    v54 = &protocol descriptor for FeedGroupConfigSidecarConvertible;
    v141 = v53[18];
    v139 = xmmword_1BB87FC80;
    v137 = xmmword_1BB87A390;
    v55 = v157;
    v56 = v155;
    v57 = v149;
    v156 = v46;
    while (1)
    {
      v62 = sub_1BB872E80();
      sub_1BB872E38();
      if ((v62 & 1) != 0)
      {
        v63 = v46
            + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))
            + *(_QWORD *)(v55 + 72) * v52;
        v64 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v55 + 16);
        result = v64(v57, v63, v50);
        v66 = (char *)(v52 + 1);
        if (__OFADD__(v52, 1))
          goto LABEL_44;
      }
      else
      {
        result = sub_1BB873D08();
        if (v132 != 8)
          goto LABEL_45;
        v180 = result;
        v64 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v55 + 16);
        v64(v57, (unint64_t)&v180, v50);
        result = swift_unknownObjectRelease();
        v66 = (char *)(v52 + 1);
        if (__OFADD__(v52, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
      }
      v161 = v66;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v56, v57, v50);
      v64(v158, (unint64_t)v56, v50);
      sub_1BA4D9CE8(0, &qword_1ED3C6228);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1BA4CECCC(&v177, (uint64_t)&v180);
        v67 = *((_QWORD *)&v185 + 1);
        v68 = v186;
        __swift_project_boxed_opaque_existential_1(&v180, *((uint64_t *)&v185 + 1));
        v69 = v67;
        v70 = (uint64_t)v159;
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v68);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))(v70, 1, v148) != 1)
        {
          sub_1BB83CE20(v70, (uint64_t)v153);
          v71 = swift_getAssociatedConformanceWitness();
          v72 = v172;
          v73 = v171;
          v74 = FeedGroupConfigType.rules<A>()(v50, v172, v71, v171);
          v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 40))(v50, v71);
          v77 = type metadata accessor for FeedGroupEmitterRule(0, v72, v73, v76);
          v78 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitterRule<A>, v77);
          Array<A>.evaluate(cursor:slots:)(v143, v75, v74, v77, v78, (uint64_t)&v177);
          swift_bridgeObjectRelease();
          if (v178 < 2u)
          {
            sub_1BA5F1DE8(v177, *((uint64_t *)&v177 + 1), v178);
            goto LABEL_14;
          }
          if (v177 == 0)
          {
            swift_bridgeObjectRelease();
            v147 = *(uint64_t *)((char *)v144 + v141);
            sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            v91 = swift_allocObject();
            *(_OWORD *)(v91 + 16) = v137;
            v92 = v153;
            v93 = *v153;
            v94 = v153[1];
            *(_QWORD *)(v91 + 56) = MEMORY[0x1E0DEA968];
            v95 = sub_1BA6A2D8C();
            *(_QWORD *)(v91 + 64) = v95;
            *(_QWORD *)(v91 + 32) = v93;
            *(_QWORD *)(v91 + 40) = v94;
            swift_bridgeObjectRetain();
            v96 = sub_1BB86DEE8();
            *(_QWORD *)(v91 + 96) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v91 + 104) = v95;
            *(_QWORD *)(v91 + 72) = v96;
            *(_QWORD *)(v91 + 80) = v97;
            v98 = sub_1BB87330C();
            sub_1BB86EF44("Service creating sidecar, type=%{public}@, identifier=%{public}@", 64, 2, &dword_1BA493000, v147, v98, v91);
            swift_bridgeObjectRelease();
            sub_1BB83CE64((uint64_t)v92, v138);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v140 = sub_1BB39166C(0, *(_QWORD *)(v140 + 16) + 1, 1, v140);
            v57 = v149;
            v54 = &protocol descriptor for FeedGroupConfigSidecarConvertible;
            v100 = *(_QWORD *)(v140 + 16);
            v99 = *(_QWORD *)(v140 + 24);
            v56 = v155;
            if (v100 >= v99 >> 1)
              v140 = sub_1BB39166C(v99 > 1, v100 + 1, 1, v140);
            v101 = v140;
            *(_QWORD *)(v140 + 16) = v100 + 1;
            sub_1BB83CE20(v138, v101+ ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80))+ *(_QWORD *)(v150 + 72) * v100);
            v90 = v153;
          }
          else
          {
LABEL_14:
            v147 = *(uint64_t *)((char *)v144 + v141);
            sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            v79 = swift_allocObject();
            *(_OWORD *)(v79 + 16) = v139;
            v146 = v77;
            v80 = *v153;
            v81 = v153[1];
            *(_QWORD *)(v79 + 56) = MEMORY[0x1E0DEA968];
            v82 = sub_1BA6A2D8C();
            *(_QWORD *)(v79 + 64) = v82;
            *(_QWORD *)(v79 + 32) = v80;
            *(_QWORD *)(v79 + 40) = v81;
            swift_bridgeObjectRetain();
            v83 = v155;
            v84 = sub_1BB86DEE8();
            *(_QWORD *)(v79 + 96) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v79 + 104) = v82;
            *(_QWORD *)(v79 + 72) = v84;
            *(_QWORD *)(v79 + 80) = v85;
            v86 = MEMORY[0x1BCCE36DC](v74, v146);
            v88 = v87;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v79 + 136) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v79 + 144) = v82;
            *(_QWORD *)(v79 + 112) = v86;
            *(_QWORD *)(v79 + 120) = v88;
            v56 = v83;
            v89 = sub_1BB87330C();
            sub_1BB86EF44("Service filtering out sidecar, type=%{public}@, identifier=%{public}@, rules=%{public}@", 87, 2, &dword_1BA493000, v147, v89, v79);
            swift_bridgeObjectRelease();
            v90 = v153;
            v57 = v149;
            v54 = &protocol descriptor for FeedGroupConfigSidecarConvertible;
          }
          sub_1BB83CEA8((uint64_t)v90);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v50);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v180);
          v46 = v156;
          v60 = v161;
          goto LABEL_5;
        }
        sub_1BA502AD0(v70, &qword_1ED3C5B90, (void (*)(uint64_t))type metadata accessor for FeedGroupConfigSidecar);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v180);
        v56 = v155;
        v58 = v149;
        v59 = &protocol descriptor for FeedGroupConfigSidecarConvertible;
      }
      else
      {
        v58 = v57;
        v179 = 0;
        v177 = 0u;
        v178 = 0u;
        sub_1BA65DBBC((uint64_t)&v177, &qword_1ED3C6230, &qword_1ED3C6228, (uint64_t)v54);
        v59 = v54;
      }
      v60 = v161;
      v64(v154, (unint64_t)v56, v50);
      sub_1BB872EE0();
      sub_1BB872EB0();
      v61 = v157;
      (*(void (**)(char *, uint64_t))(v157 + 8))(v56, v50);
      v46 = v156;
      v54 = v59;
      v57 = v58;
      v55 = v61;
LABEL_5:
      ++v52;
      if (v60 == (char *)MEMORY[0x1BCCE37E4](v46, v50))
        goto LABEL_26;
    }
  }
  v140 = MEMORY[0x1E0DEE9D8];
  v55 = v157;
LABEL_26:
  swift_bridgeObjectRelease();
  v102 = v191;
  v103 = MEMORY[0x1BCCE37E4](v191, v50);
  v104 = v173;
  v105 = v151;
  if (!v103)
    goto LABEL_43;
  v106 = 0;
  v155 = (char *)swift_getAssociatedConformanceWitness();
  v154 = (char *)*((_QWORD *)v155 + 5);
  v161 = (char *)v144 + *((_QWORD *)*v144 + 16);
  v107 = MEMORY[0x1E0DEB418];
  v156 = v102;
  while (1)
  {
    v109 = sub_1BB872E80();
    sub_1BB872E38();
    if ((v109 & 1) == 0)
      break;
    (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v105, v102+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * (_QWORD)v106, v50);
    v110 = __OFADD__(v106, 1);
    v111 = v106 + 1;
    if (v110)
      goto LABEL_42;
LABEL_32:
    v159 = v111;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v104, v105, v50);
    v112 = ((uint64_t (*)(uint64_t, char *))v154)(v50, v155);
    if (v112)
    {
      v158 = (char *)v112;
      v113 = *(_QWORD *)(v112 + 16);
      v114 = MEMORY[0x1E0DEB428];
      if (v113)
      {
        v115 = *(void (**)(uint64_t, uint64_t))(v175 + 48);
        v116 = *(uint64_t (**)(char *, char *, uint64_t, uint64_t))(v174 + 24);
        v117 = (unint64_t *)(v158 + 32);
        do
        {
          v123 = *v117++;
          v122 = v123;
          v180 = v123;
          MEMORY[0x1BCCE3148](&v177, &v180, v193, v107, v36, v114);
          v124 = v177;
          if (!(_QWORD)v177)
            v124 = sub_1BB872E68();
          v180 = v124;
          v118 = v164;
          v163(v172, v171);
          v119 = v166;
          v120 = v165;
          v115(v165, v175);
          v162(v118, v120);
          v121 = v116(v173, v119, v169, v174);
          (*(void (**)(char *, uint64_t))(v167 + 8))(v119, v168);
          *(_QWORD *)&v177 = v121;
          swift_retain();
          sub_1BB872EB0();
          *(_QWORD *)&v177 = v121;
          swift_retain();
          sub_1BB872EB0();
          v176 = v122;
          *(_QWORD *)&v177 = v180;
          v107 = MEMORY[0x1E0DEB418];
          v114 = MEMORY[0x1E0DEB428];
          sub_1BB872814();
          sub_1BB872838();
          swift_release();
          --v113;
        }
        while (v113);
      }
      swift_bridgeObjectRelease();
      v55 = v157;
      v104 = v173;
      v50 = v152;
      (*(void (**)(char *, uint64_t))(v157 + 8))(v173, v152);
      v105 = v151;
    }
    else
    {
      v125 = v164;
      v163(v172, v171);
      v126 = v166;
      v127 = v165;
      (*(void (**)(uint64_t))(v175 + 48))(v165);
      v128 = v125;
      v107 = MEMORY[0x1E0DEB418];
      v162(v128, v127);
      v129 = (*(uint64_t (**)(char *, char *, uint64_t))(v174 + 24))(v104, v126, v169);
      (*(void (**)(char *, uint64_t))(v167 + 8))(v126, v168);
      v180 = v129;
      sub_1BB872EB0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v104, v50);
    }
    v102 = v156;
    v108 = MEMORY[0x1BCCE37E4](v156, v50);
    v106 = v159;
    if (v159 == (char *)v108)
      goto LABEL_43;
  }
  result = sub_1BB873D08();
  if (v132 != 8)
    goto LABEL_46;
  v180 = result;
  (*(void (**)(char *, unint64_t *, uint64_t))(v55 + 16))(v105, &v180, v50);
  swift_unknownObjectRelease();
  v110 = __OFADD__(v106, 1);
  v111 = v106 + 1;
  if (!v110)
    goto LABEL_32;
LABEL_42:
  __break(1u);
LABEL_43:
  swift_release();
  swift_bridgeObjectRelease();
  v130 = v194;
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitter<A>, v160);
  return v130;
}

uint64_t sub_1BA663E08(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v5 = sub_1BB86EB84();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v4 + v7 + 9;
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v9(v8 & ~v7, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8 & ~v7, v5);
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  v11 = ((v8 | v7) + v10) & ~v7;
  if (!v9(v11, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((((((((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t getEnumTagSinglePayload for FeedGroupConfigSidecar()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA663F6C(_QWORD *a1)
{
  return FormatImageNodeStyle.encode(to:)(a1);
}

uint64_t FormatImageNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  void (*v124)(char *, uint64_t, uint64_t);
  uint64_t *v125;
  uint64_t v126;
  __int128 v127;
  char v128;
  _BYTE v129[16];
  uint64_t v130;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v111 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v112 = (char *)&v109 - v8;
  MEMORY[0x1E0C80A78](v9);
  v113 = (char *)&v109 - v10;
  MEMORY[0x1E0C80A78](v11);
  v114 = (char *)&v109 - v12;
  MEMORY[0x1E0C80A78](v13);
  v115 = (char *)&v109 - v14;
  MEMORY[0x1E0C80A78](v15);
  v116 = (char *)&v109 - v16;
  MEMORY[0x1E0C80A78](v17);
  v117 = (char *)&v109 - v18;
  MEMORY[0x1E0C80A78](v19);
  v118 = (char *)&v109 - v20;
  MEMORY[0x1E0C80A78](v21);
  v119 = (char *)&v109 - v22;
  MEMORY[0x1E0C80A78](v23);
  v120 = (char *)&v109 - v24;
  MEMORY[0x1E0C80A78](v25);
  v121 = (char *)&v109 - v26;
  MEMORY[0x1E0C80A78](v27);
  v122 = (char *)&v109 - v28;
  MEMORY[0x1E0C80A78](v29);
  v123 = (char *)&v109 - v30;
  MEMORY[0x1E0C80A78](v31);
  v124 = (void (*)(char *, uint64_t, uint64_t))((char *)&v109 - v32);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v109 - v34;
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v109 - v37;
  sub_1BAE9B20C(0);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v109 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a1[3];
  v43 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v42);
  v44 = sub_1BAE9B2FC();
  v45 = sub_1BA4A2870(&qword_1ED3D0ED0, (uint64_t (*)(uint64_t))sub_1BAE9B2FC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v46, v42, v4, v44, (uint64_t)&type metadata for FormatVersions.JazzkonC, v43, (uint64_t)v41, v45, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v48 = v2[2];
  v47 = v2[3];
  v125 = v2;
  v49 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v49 != -1)
    swift_once();
  v50 = sub_1BB86EB84();
  v51 = __swift_project_value_buffer(v50, (uint64_t)qword_1ED476C20);
  v52 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
  v52(v38, v51, v50);
  v53 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v54 = v126;
  sub_1BAD265E8(v48, v47, 0, 0, 0, (uint64_t)v38, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE4CEB4, (uint64_t (*)(uint64_t))sub_1BAE9B284, &qword_1ED3AEA30);
  if (v54)
  {
    sub_1BA4A2E80((uint64_t)v38, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v61 = (uint64_t)v41;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v38, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v55 = v125;
    v57 = v125[4];
    v56 = v125[5];
    v110 = v50;
    ((void (*)(char *, uint64_t))v52)(v35, v51);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1A180(v57, v56, 1, 0, 0, (uint64_t)v35, (uint64_t)sub_1BA90CF04, 0);
    v58 = v53;
    sub_1BA4A2E80((uint64_t)v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v59 = (uint64_t)v124;
    v52((char *)v124, v51, v110);
    swift_storeEnumTagMultiPayload();
    v60 = swift_bridgeObjectRetain();
    sub_1BAD297A0(v60, 2, 0, 0);
    v63 = v51;
    sub_1BA4A2E80(v59, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v64 = (uint64_t)v123;
    v52(v123, v63, v110);
    swift_storeEnumTagMultiPayload();
    v65 = swift_bridgeObjectRetain();
    sub_1BAD52AC0(v65, 3, 0, 0, v64, (uint64_t)sub_1BA90CF04, 0);
    v126 = v63;
    v109 = v58;
    sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v66 = v55[8];
    v67 = qword_1ED3C6D60;
    swift_bridgeObjectRetain();
    if (v67 != -1)
      swift_once();
    v68 = v110;
    v69 = __swift_project_value_buffer(v110, (uint64_t)qword_1ED476C38);
    v70 = (uint64_t)v122;
    v52(v122, v69, v68);
    swift_storeEnumTagMultiPayload();
    if (v66 && (sub_1BAE4CEB4(v70, 4, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v127 = xmmword_1BB8D2D90;
      v128 = 0;
      v130 = v66;
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BAE81178(0, &qword_1ED3B9530, &qword_1ED3B9520, (uint64_t)&type metadata for FormatImageAdjustment);
      sub_1BAE9B404();
      sub_1BB874464();
      v55 = v125;
      v70 = (uint64_t)v122;
    }
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v71 = v55[9];
    v72 = (uint64_t)v121;
    v73 = v126;
    v124 = v52;
    v52(v121, v126, v68);
    swift_storeEnumTagMultiPayload();
    sub_1BA6E6C68(v71);
    sub_1BAD52CE0(v71, 5, 0, 0, v72, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v72, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v71);
    v74 = (uint64_t)v120;
    v124(v120, v73, v68);
    swift_storeEnumTagMultiPayload();
    v75 = swift_bridgeObjectRetain();
    sub_1BAD52EF8(v75, 6, 0, 0, v74, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v74, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v71) = *((_BYTE *)v55 + 88);
    v76 = (uint64_t)v119;
    v124(v119, v73, v68);
    swift_storeEnumTagMultiPayload();
    sub_1BAD53128(v71, 7, 0, 0, v76, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v76, type metadata accessor for FormatVersionRequirement);
    v77 = v55[12];
    v78 = v55[13];
    v79 = v68;
    v80 = *((_BYTE *)v55 + 112);
    v81 = (uint64_t)v118;
    v124(v118, v73, v79);
    swift_storeEnumTagMultiPayload();
    sub_1BA6E6C54(v77, v78, v80);
    sub_1BAD532F0(v77, v78, v80, 8, 0, 0, v81, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v81, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v77, v78, v80);
    v82 = v55[15];
    v83 = v73;
    v84 = (uint64_t)v117;
    v85 = v124;
    v124(v117, v83, v110);
    swift_storeEnumTagMultiPayload();
    sub_1BA6E6C80(v82);
    sub_1BAD53524(v82, 9, 0, 0, v84, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v84, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CF0(v82);
    LOBYTE(v82) = *((_BYTE *)v55 + 128);
    v86 = (uint64_t)v116;
    v87 = v85;
    v85(v116, v83, v110);
    swift_storeEnumTagMultiPayload();
    sub_1BAD53730(v82, 10, 0, 0, v86, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v86, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A09F0((uint64_t)(v125 + 17), (uint64_t)v129, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
    v88 = (uint64_t)v115;
    v85(v115, v126, v110);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v129, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v123 = 0;
    sub_1BAD538F8((uint64_t)v129, 11, 0, 0, v88, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v115, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v129, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    v89 = v125[28];
    v90 = (uint64_t)v114;
    v87(v114, v126, v110);
    swift_storeEnumTagMultiPayload();
    sub_1BA5E7FF4(v89);
    sub_1BAD53BE0(v89, 12, 0, 0, v90, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v90, type metadata accessor for FormatVersionRequirement);
    sub_1BA5E800C(v89);
    v91 = *((_BYTE *)v125 + 232);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v92 = v110;
    v93 = __swift_project_value_buffer(v110, (uint64_t)qword_1ED476B78);
    v94 = (uint64_t)v113;
    v87(v113, v93, v92);
    swift_storeEnumTagMultiPayload();
    sub_1BAD53DF8(v91, 13, 0, 0, v94, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v94, type metadata accessor for FormatVersionRequirement);
    v96 = v125[30];
    v95 = v125[31];
    sub_1BA6E6C90(v96);
    if (qword_1ED3C6D70 != -1)
      swift_once();
    v97 = v110;
    v98 = __swift_project_value_buffer(v110, (uint64_t)qword_1ED476C50);
    v99 = (uint64_t)v112;
    v87(v112, v98, v97);
    swift_storeEnumTagMultiPayload();
    sub_1BAD53FC0(v96, v95, 14, 0, 0, v99, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v99, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6D00(v96);
    v100 = (uint64_t)v125 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask;
    sub_1BA6F3F88();
    v102 = &v111[*(int *)(v101 + 48)];
    v103 = &v111[*(int *)(v101 + 64)];
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v104 = v110;
    v105 = __swift_project_value_buffer(v110, (uint64_t)qword_1ED476C08);
    v106 = (uint64_t)v111;
    v87(v111, v105, v104);
    v87(v102, v98, v104);
    *(_QWORD *)v103 = 0;
    *((_QWORD *)v103 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    v107 = v100;
    v108 = v123;
    sub_1BAD541E4(v107, 15, 0, 0, v106, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v106, type metadata accessor for FormatVersionRequirement);
    v61 = (uint64_t)v108;
  }
  return sub_1BA4A2E80(v61, (uint64_t (*)(_QWORD))sub_1BAE9B20C);
}

uint64_t FormatParagraphStyle.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  _BYTE *v63;
  void (*v64)(_BYTE *, uint64_t, uint64_t);
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[4];
  int v73;
  _BYTE *v74;
  int v75;
  uint64_t v76;
  _BYTE *v77;
  int v78;
  uint64_t v79;
  _BYTE *v80;
  int v81;
  uint64_t v82;
  _BYTE *v83;
  int v84;
  uint64_t v85;
  _BYTE *v86;
  int v87;
  uint64_t v88;
  _BYTE *v89;
  int v90;
  uint64_t v91;
  _BYTE *v92;
  int v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  _BYTE *v99;
  int v100;
  _BYTE *v101;
  _BYTE *v102;
  _BYTE *v103;
  int v104;
  _BYTE *v105;
  int v106;
  uint64_t v107;
  _BYTE *v108;
  int v109;
  uint64_t v110;
  _BYTE *v111;
  int v112;
  uint64_t v113;
  uint64_t v114;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v74 = &v72[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v77 = &v72[-v6];
  MEMORY[0x1E0C80A78](v7);
  v80 = &v72[-v8];
  MEMORY[0x1E0C80A78](v9);
  v83 = &v72[-v10];
  MEMORY[0x1E0C80A78](v11);
  v86 = &v72[-v12];
  MEMORY[0x1E0C80A78](v13);
  v89 = &v72[-v14];
  MEMORY[0x1E0C80A78](v15);
  v92 = &v72[-v16];
  MEMORY[0x1E0C80A78](v17);
  v103 = &v72[-v18];
  MEMORY[0x1E0C80A78](v19);
  v102 = &v72[-v20];
  MEMORY[0x1E0C80A78](v21);
  v99 = &v72[-v22];
  MEMORY[0x1E0C80A78](v23);
  v101 = &v72[-v24];
  MEMORY[0x1E0C80A78](v25);
  v105 = &v72[-v26];
  MEMORY[0x1E0C80A78](v27);
  v108 = &v72[-v28];
  MEMORY[0x1E0C80A78](v29);
  v111 = &v72[-v30];
  MEMORY[0x1E0C80A78](v31);
  v33 = &v72[-v32];
  MEMORY[0x1E0C80A78](v34);
  v36 = &v72[-v35];
  sub_1BAE72CDC(0);
  MEMORY[0x1E0C80A78](v37);
  v39 = &v72[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = *(_BYTE *)v1;
  v113 = *(_QWORD *)(v1 + 8);
  v112 = *(unsigned __int8 *)(v1 + 16);
  v110 = *(_QWORD *)(v1 + 24);
  v109 = *(unsigned __int8 *)(v1 + 32);
  v107 = *(_QWORD *)(v1 + 40);
  v106 = *(unsigned __int8 *)(v1 + 48);
  v104 = *(unsigned __int8 *)(v1 + 49);
  v100 = *(unsigned __int8 *)(v1 + 50);
  v98 = *(_QWORD *)(v1 + 56);
  v97 = *(unsigned __int8 *)(v1 + 64);
  v96 = *(_QWORD *)(v1 + 72);
  v95 = *(unsigned __int8 *)(v1 + 80);
  v94 = *(_QWORD *)(v1 + 88);
  v93 = *(unsigned __int8 *)(v1 + 96);
  v91 = *(_QWORD *)(v1 + 104);
  v90 = *(unsigned __int8 *)(v1 + 112);
  v88 = *(_QWORD *)(v1 + 120);
  v87 = *(unsigned __int8 *)(v1 + 128);
  v85 = *(_QWORD *)(v1 + 136);
  v84 = *(unsigned __int8 *)(v1 + 144);
  v82 = *(_QWORD *)(v1 + 152);
  v81 = *(unsigned __int8 *)(v1 + 160);
  v79 = *(_QWORD *)(v1 + 168);
  v78 = *(unsigned __int8 *)(v1 + 176);
  v76 = *(_QWORD *)(v1 + 184);
  v75 = *(unsigned __int8 *)(v1 + 192);
  v73 = *(unsigned __int8 *)(v1 + 193);
  v41 = a1[3];
  v42 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v41);
  v43 = sub_1BAE72BD4();
  v44 = sub_1BA4A2870(&qword_1ED3D0EF0, (uint64_t (*)(uint64_t))sub_1BAE72BD4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatParagraphStyle, v45, v41, (uint64_t)&type metadata for FormatParagraphStyle, v43, (uint64_t)&type metadata for FormatVersions.JazzkonC, v42, (uint64_t)v39, v44, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v46 = sub_1BB86EB84();
  v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1ED476C20);
  v48 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
  v48(v36, v47, v46);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v49 = (uint64_t)v39;
  v50 = v114;
  sub_1BAD516AC(v40, 0, 0, 0, (uint64_t)v36, (uint64_t)sub_1BA90CF04, 0);
  if (v50)
  {
    v60 = (uint64_t)v36;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v36, type metadata accessor for FormatVersionRequirement);
    v48(v33, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51874(v113, v112, 1, 0, 0, (uint64_t)v33, (uint64_t)sub_1BA90CF04, 0);
    v51 = v47;
    sub_1BA4A2E80((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
    v52 = (uint64_t)v111;
    v48(v111, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51874(v110, v109, 2, 0, 0, v52, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v52, type metadata accessor for FormatVersionRequirement);
    v53 = (uint64_t)v108;
    v48(v108, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51874(v107, v106, 3, 0, 0, v53, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
    v54 = (uint64_t)v105;
    v48(v105, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51A54(v104, 4, 0, 0, v54, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v54, type metadata accessor for FormatVersionRequirement);
    if (qword_1ED3C4168 != -1)
      swift_once();
    v55 = __swift_project_value_buffer(v46, (uint64_t)qword_1ED476900);
    v56 = (uint64_t)v101;
    v48(v101, v55, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51C1C(v100, 5, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v58 = (uint64_t)v102;
    v57 = (uint64_t)v103;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    v59 = (uint64_t)v99;
    v48(v99, v51, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51874(v98, v97, 6, 0, 0, v59, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v59, type metadata accessor for FormatVersionRequirement);
    v48((_BYTE *)v58, v51, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51874(v96, v95, 7, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v48((_BYTE *)v57, v51, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51874(v94, v93, 8, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v62 = (uint64_t)v92;
    v48(v92, v51, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51874(v91, v90, 9, 0, 0, v62, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    v63 = v89;
    v114 = v51;
    v64 = v48;
    v48(v89, v51, v46);
    swift_storeEnumTagMultiPayload();
    v65 = v49;
    sub_1BAD51874(v88, v87, 10, 0, 0, (uint64_t)v63, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v89, type metadata accessor for FormatVersionRequirement);
    v66 = v86;
    v48(v86, v114, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51874(v85, v84, 11, 0, 0, (uint64_t)v66, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v86, type metadata accessor for FormatVersionRequirement);
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v67 = __swift_project_value_buffer(v46, (uint64_t)qword_1ED476C38);
    v68 = (uint64_t)v83;
    v64(v83, v67, v46);
    swift_storeEnumTagMultiPayload();
    v49 = v65;
    sub_1BAD51874(v82, v81, 12, 0, 0, v68, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    v69 = (uint64_t)v80;
    v64(v80, v114, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51874(v79, v78, 13, 0, 0, v69, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v69, type metadata accessor for FormatVersionRequirement);
    v70 = (uint64_t)v77;
    v64(v77, v114, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51874(v76, v75, 14, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
    v71 = (uint64_t)v74;
    v64(v74, v114, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51DE4(v73, 15, 0, 0, v71, (uint64_t)sub_1BA90CF04, 0);
    v60 = v71;
  }
  sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BAE72CDC);
}

uint64_t sub_1BA665C48()
{
  unsigned __int8 *v0;

  return sub_1BADCA870(*v0);
}

uint64_t sub_1BA665C50()
{
  unsigned __int8 *v0;

  return sub_1BADB3AFC(*v0);
}

unint64_t sub_1BA665C58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAE90;
  if (!qword_1ED3AAE90)
  {
    sub_1BA4AD288(255, &qword_1ED3AAE88, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82D2A4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAE90);
  }
  return result;
}

unint64_t sub_1BA665CD0()
{
  unint64_t result;

  result = qword_1ED39B408;
  if (!qword_1ED39B408)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageResize, &type metadata for FormatImageResize);
    atomic_store(result, (unint64_t *)&qword_1ED39B408);
  }
  return result;
}

unint64_t sub_1BA665D14()
{
  unint64_t result;

  result = qword_1ED3B7848;
  if (!qword_1ED3B7848)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageRenderingMode, &type metadata for FormatImageRenderingMode);
    atomic_store(result, (unint64_t *)&qword_1ED3B7848);
  }
  return result;
}

unint64_t sub_1BA665D58()
{
  unint64_t result;

  result = qword_1ED39B568;
  if (!qword_1ED39B568)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAlignment, &type metadata for FormatTextAlignment);
    atomic_store(result, (unint64_t *)&qword_1ED39B568);
  }
  return result;
}

unint64_t sub_1BA665D9C()
{
  unint64_t result;

  result = qword_1ED39B3C8;
  if (!qword_1ED39B3C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentMode, &type metadata for FormatContentMode);
    atomic_store(result, (unint64_t *)&qword_1ED39B3C8);
  }
  return result;
}

_QWORD *sub_1BA665DE0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __int128 v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _OWORD *v43;
  __int128 *v44;
  __int128 v45;
  __int128 v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  unint64_t v50;
  _QWORD *result;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8;
  v11 = v10 | 7;
  v10 += 15;
  v12 = ((unint64_t)v6 + v10) & ~v11;
  v13 = ((unint64_t)v7 + v10) & ~v11;
  v14 = *(_QWORD *)(v9 + 64);
  v15 = v14 + 7;
  if (v14 <= ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v14 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v14 <= 0x10)
    v16 = 16;
  else
    v16 = v14;
  if ((v16 & 0xFFFFFFFFFFFFFFF8) + 48 <= v16)
    v17 = v16;
  else
    v17 = (v16 & 0xFFFFFFFFFFFFFFF8) + 48;
  v19 = v16 + 1;
  switch(*(_BYTE *)(v13 + v17))
  {
    case 0:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v12, v13, AssociatedTypeWitness);
      v20 = (v15 + v12) & 0xFFFFFFFFFFFFFFF8;
      v21 = (v15 + v13) & 0xFFFFFFFFFFFFFFF8;
      v22 = *(_QWORD *)(v21 + 24);
      if (v22 < 0xFFFFFFFF)
      {
        v30 = *(_OWORD *)(v21 + 16);
        *(_OWORD *)v20 = *(_OWORD *)v21;
        *(_OWORD *)(v20 + 16) = v30;
      }
      else
      {
        *(_QWORD *)(v20 + 24) = v22;
        (**(void (***)(void))(v22 - 8))();
      }
      *(_BYTE *)(v12 + v17) = 0;
      break;
    case 1:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v12, v13, AssociatedTypeWitness);
      v23 = (v15 + v12) & 0xFFFFFFFFFFFFFFF8;
      v24 = (v15 + v13) & 0xFFFFFFFFFFFFFFF8;
      v25 = *(_QWORD *)(v24 + 24);
      if (v25 < 0xFFFFFFFF)
      {
        v31 = *(_OWORD *)(v24 + 16);
        *(_OWORD *)v23 = *(_OWORD *)v24;
        *(_OWORD *)(v23 + 16) = v31;
      }
      else
      {
        *(_QWORD *)(v23 + 24) = v25;
        (**(void (***)(void))(v25 - 8))();
      }
      v26 = 1;
      goto LABEL_41;
    case 2:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v12, v13, AssociatedTypeWitness);
      v26 = 2;
      goto LABEL_41;
    case 3:
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      v27 = 3;
      goto LABEL_24;
    case 4:
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      v27 = 4;
      goto LABEL_24;
    case 5:
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      v27 = 5;
LABEL_24:
      *(_BYTE *)(v12 + v17) = v27;
      swift_bridgeObjectRetain();
      break;
    case 6:
      v28 = *(unsigned __int8 *)(v13 + v16);
      if (v28 >= 3)
      {
        if (v16 <= 3)
          v29 = v16;
        else
          v29 = 4;
        __asm { BR              X13 }
      }
      if (v28 == 2)
      {
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
        *(_BYTE *)(v12 + v16) = 2;
        swift_bridgeObjectRetain();
      }
      else if (v28 == 1)
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v12, v13, AssociatedTypeWitness);
        *(_BYTE *)(v12 + v16) = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v12, v13, AssociatedTypeWitness);
        v32 = (v15 + v12) & 0xFFFFFFFFFFFFFFF8;
        v33 = (v15 + v13) & 0xFFFFFFFFFFFFFFF8;
        v34 = *(_QWORD *)(v33 + 24);
        if (v34 < 0xFFFFFFFF)
        {
          v35 = *(_OWORD *)(v33 + 16);
          *(_OWORD *)v32 = *(_OWORD *)v33;
          *(_OWORD *)(v32 + 16) = v35;
        }
        else
        {
          *(_QWORD *)(v32 + 24) = v34;
          (**(void (***)(void))(v34 - 8))();
        }
        *(_BYTE *)(v12 + v16) = 0;
      }
      v36 = ((v12 | 7) + v19) & 0xFFFFFFFFFFFFFFF8;
      v37 = ((v13 | 7) + v19) & 0xFFFFFFFFFFFFFFF8;
      v38 = *(_QWORD *)(v37 + 24);
      *(_QWORD *)(v36 + 24) = v38;
      *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
      (**(void (***)(void))(v38 - 8))();
      v26 = 6;
LABEL_41:
      *(_BYTE *)(v12 + v17) = v26;
      break;
    default:
      if (v17 <= 3)
        v18 = v17;
      else
        v18 = 4;
      __asm { BR              X13 }
      return result;
  }
  v39 = (_QWORD *)(((v12 | 7) + v17 + 1) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((v13 | 7) + v17 + 1) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  v41 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFF8);
  v42 = (_QWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v41 = *v42;
  v43 = (_OWORD *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
  v44 = (__int128 *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  v45 = *v44;
  v46 = v44[1];
  *(_OWORD *)((char *)v43 + 26) = *(__int128 *)((char *)v44 + 26);
  *v43 = v45;
  v43[1] = v46;
  *(_QWORD *)(((unint64_t)v43 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v44 + 49) & 0xFFFFFFFFFFFFF8);
  v47 = ((v11 + 24) & ~v11)
      + (((((((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v48 = (_QWORD *)(((unint64_t)a1 + v47 + 7) & 0xFFFFFFFFFFFFFFF8);
  v49 = (_QWORD *)(((unint64_t)a2 + v47 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v48 = *v49;
  v50 = v49[1];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v50 >= 2)
    swift_bridgeObjectRetain();
  v48[1] = v50;
  v48[2] = v49[2];
  *(_QWORD *)(((unint64_t)v48 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v49 + 31) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA66630C(uint64_t a1)
{
  unint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;

  v1 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_DWORD *)(v3 + 80) & 0xF8 | 7;
  v5 = (v1 + v4 + 8) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7)
    v7 = *(_QWORD *)(v3 + 64);
  if (v7 <= 0x10)
    v8 = 16;
  else
    v8 = v7;
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8)
    v9 = v8;
  else
    v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  switch(*(_BYTE *)(v5 + v9))
  {
    case 0:
    case 1:
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
      v11 = ((v5 | 7) + v6) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v11 + 24) < 0xFFFFFFFFuLL)
        goto LABEL_31;
      goto LABEL_30;
    case 2:
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
      goto LABEL_31;
    case 3:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_31;
    case 6:
      v12 = *(unsigned __int8 *)(v5 + v8);
      if (v12 >= 3)
      {
        if (v8 <= 3)
          v13 = v8;
        else
          v13 = 4;
        __asm { BR              X13 }
      }
      if (v12 == 2)
      {
        swift_bridgeObjectRelease();
      }
      else if (v12 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
        v14 = ((v5 | 7) + v6) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v14 + 24) >= 0xFFFFFFFFuLL)
          __swift_destroy_boxed_opaque_existential_1(v14);
      }
      v11 = (v5 + v8 + 8) & 0xFFFFFFFFFFFFFFF8;
LABEL_30:
      __swift_destroy_boxed_opaque_existential_1(v11);
LABEL_31:
      swift_release();
      return swift_bridgeObjectRelease();
    default:
      if (v9 <= 3)
        v10 = v9;
      else
        v10 = 4;
      __asm { BR              X13 }
      return result;
  }
}

uint64_t sub_1BA6665C8(int *a1, int a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_QWORD *)(v4 + 64);
  if (v5 <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v5 <= 0x10)
    v5 = 16;
  if ((v5 & 0xFFFFFFFFFFFFFFF8) + 48 > v5)
    v5 = (v5 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (!a2)
    return 0;
  v6 = *(_DWORD *)(v4 + 80) & 0xF8;
  v7 = v6 | 7;
  if ((a2 & 0x80000000) == 0)
    goto LABEL_9;
  v10 = ((v6 + 31) & ~v7)
      + (((((((v5 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v11 = v10 & 0xFFFFFFF8;
  v12 = a2 - 2147483646;
  if ((v10 & 0xFFFFFFF8) != 0)
    v12 = 2;
  if (v12 >= 0x10000)
    v13 = 4;
  else
    v13 = 2;
  if (v12 < 0x100)
    v14 = 1;
  else
    v14 = v13;
  if (v14 == 4)
  {
    v15 = *(int *)((char *)a1 + v10);
    if (!v15)
      goto LABEL_9;
  }
  else if (v14 == 2)
  {
    v15 = *(unsigned __int16 *)((char *)a1 + v10);
    if (!v15)
      goto LABEL_9;
  }
  else
  {
    v15 = *((unsigned __int8 *)a1 + v10);
    if (!v15)
    {
LABEL_9:
      v8 = *(_QWORD *)(((((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7)
                      + v5
                      + 8) & 0xFFFFFFFFFFFFF8);
      if (v8 >= 0xFFFFFFFF)
        LODWORD(v8) = -1;
      return (v8 + 1);
    }
  }
  v16 = v15 - 1;
  if (v11)
  {
    v16 = 0;
    v17 = *a1;
  }
  else
  {
    v17 = 0;
  }
  return (v17 | v16) ^ 0x80000000;
}

uint64_t sub_1BA6667A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[7];
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitter(0, AssociatedTypeWitness, AssociatedConformanceWitness, v8);
  v14[6] = a1;
  v15 = sub_1BB872E68();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = &v15;
  type metadata accessor for FeedScoredResult(255, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  v10 = sub_1BB872EE0();
  v11 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v10);
  return sub_1BAA52384((void (*)(char *, char *))sub_1BA5B0310, (uint64_t)v14, v10, (uint64_t)&type metadata for FeedJournalGroup, MEMORY[0x1E0DEDCE8], v11, MEMORY[0x1E0DEDD18], v12);
}

uint64_t type metadata accessor for FeedGroupEmitTask(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupEmitTask);
}

uint64_t sub_1BA6668CC(uint64_t a1, uint64_t *a2, uint64_t a3, double a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  _QWORD *v108;
  _QWORD *v109;
  id v110;
  id v111;
  void *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  id v123;
  void *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t TupleTypeMetadata2;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151[16];
  uint64_t v152;
  uint64_t v153;
  char v154;
  unsigned __int8 v155[24];
  uint64_t v156;

  v144 = a3;
  v8 = *v4;
  v9 = *a2;
  v138 = sub_1BB87261C();
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v136 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = v4;
  v11 = (void *)v4[5];
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v133 = v12;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
  v146 = a1;
  *(_QWORD *)v155 = a1;
  v139 = v8;
  v15 = *(_QWORD *)(v8 + 80);
  v14 = *(_QWORD *)(v8 + 88);
  v152 = v15;
  v153 = v14;
  v16 = *(_QWORD *)(v9 + 88);
  v148 = *(_QWORD *)(v9 + 80);
  v149 = v14;
  v147 = v16;
  v140 = type metadata accessor for FeedGroupEmitter(255, v148, v16, v17);
  v18 = sub_1BB872EE0();
  v19 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v18);
  v20 = MEMORY[0x1E0DEA968];
  v141 = v19;
  sub_1BAA52384((void (*)(char *, char *))sub_1BA4F5A68, (uint64_t)v151, v18, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v19, MEMORY[0x1E0DEDD18], v21);
  v142 = 0;
  v22 = MEMORY[0x1BCCE36DC]();
  v24 = v23;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 56) = v20;
  v25 = sub_1BA6A2D8C();
  *(_QWORD *)(v13 + 64) = v25;
  *(_QWORD *)(v13 + 32) = v22;
  *(_QWORD *)(v13 + 40) = v24;
  v26 = v11;
  v27 = sub_1BB87330C();
  sub_1BB86EF44("Service starting emit tasks for emitters: %{public}@", 52, 2, &dword_1BA493000, v11, v27, v13);
  swift_bridgeObjectRelease();
  sub_1BA4AD288(0, &qword_1ED3C47C8, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DB45B0]);
  swift_allocObject();
  v28 = sub_1BB86E680();
  swift_retain();
  sub_1BB86E1AC();
  swift_release();
  v143 = v26;
  v134 = (uint64_t *)v25;
  if (v155[0] == 1)
  {
    v29 = sub_1BB87330C();
    sub_1BB86EF44("Gap was already on screen during feed emitting, so timeouts will start immediately", 82, 2, &dword_1BA493000, v26, v29, MEMORY[0x1E0DEE9D8]);
    sub_1BB86E674();
    v40 = v149;
  }
  else
  {
    v30 = v26;
    v31 = swift_allocObject();
    swift_weakInit();
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v30;
    *(_QWORD *)(v32 + 24) = v31;
    swift_retain();
    v33 = v30;
    v34 = (void *)sub_1BB86E854();
    sub_1BB86E1C4();
    swift_release();
    swift_release();

    __swift_project_boxed_opaque_existential_1(v155, v156);
    swift_retain();
    sub_1BB86DCF0();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
    v35 = swift_allocObject();
    swift_weakInit();
    v36 = (_QWORD *)swift_allocObject();
    v37 = v149;
    v36[2] = v15;
    v36[3] = v37;
    v36[4] = v33;
    v36[5] = v35;
    v38 = v33;
    swift_retain();
    v39 = (void *)sub_1BB86E854();
    sub_1BB86E1C4();
    swift_release();
    swift_release();

    __swift_project_boxed_opaque_existential_1(v155, v156);
    swift_retain();
    sub_1BB86DCF0();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
    v40 = v37;
  }
  v41 = v141;
  v42 = v146;
  v43 = MEMORY[0x1BCCE37B4](v146, v140);
  v47 = sub_1BA6677E0(v43, v44, v45, v46);
  *(_QWORD *)v155 = v42;
  v48 = MEMORY[0x1E0C80A78](v47);
  *(&v129 - 6) = (uint64_t)a2;
  LODWORD(v132) = v48 & 1;
  *((_BYTE *)&v129 - 40) = v48 & 1;
  *(&v129 - 4) = v144;
  *(&v129 - 3) = v28;
  v140 = v28;
  *(&v129 - 2) = (uint64_t)v145;
  v50 = type metadata accessor for FeedGroupEmitTask(0, v148, v147, v49);
  v52 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAECE98, (uint64_t)(&v129 - 8), v18, v50, MEMORY[0x1E0DEDCE8], v41, MEMORY[0x1E0DEDD18], v51);
  *(_QWORD *)v155 = v52;
  MEMORY[0x1E0C80A78](v52);
  v150 = v15;
  *(&v129 - 2) = v15;
  *(&v129 - 1) = v40;
  v53 = sub_1BB872EE0();
  v54 = sub_1BA667938();
  v135 = v52;
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v53);
  v55 = sub_1BB8727FC();
  v154 = 1;
  MEMORY[0x1BCCE3148](v155, &v154, v55, &type metadata for FeedGroupEmitterPriority, v53, v54);
  v56 = *(_QWORD *)v155;
  if (!*(_QWORD *)v155)
    v56 = sub_1BB872E68();
  v154 = 0;
  MEMORY[0x1BCCE3148](v155, &v154, v55, &type metadata for FeedGroupEmitterPriority, v53, v54);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)v155)
    v142 = *(_QWORD *)v155;
  else
    v142 = sub_1BB872E68();
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1BB87FC80;
  v58 = MEMORY[0x1E0DEAFD8];
  *(_QWORD *)(v57 + 56) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v57 + 64) = v58;
  *(_BYTE *)(v57 + 32) = v132;
  *(_QWORD *)v155 = v56;
  MEMORY[0x1E0C80A78](v57);
  v59 = v149;
  v60 = v150;
  *(&v129 - 2) = v150;
  *(&v129 - 1) = v59;
  v61 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v53);
  v141 = v53;
  v62 = MEMORY[0x1E0DEA968];
  v132 = v56;
  v63 = v61;
  sub_1BAA52384((void (*)(char *, char *))sub_1BAAECED0, (uint64_t)(&v129 - 4), v53, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v61, MEMORY[0x1E0DEDD18], v64);
  v65 = MEMORY[0x1BCCE36DC]();
  v67 = v66;
  v68 = swift_bridgeObjectRelease();
  v133 = &v129;
  v69 = v134;
  *(_QWORD *)(v57 + 96) = v62;
  *(_QWORD *)(v57 + 104) = v69;
  *(_QWORD *)(v57 + 72) = v65;
  *(_QWORD *)(v57 + 80) = v67;
  *(_QWORD *)v155 = v142;
  MEMORY[0x1E0C80A78](v68);
  *(&v129 - 2) = v60;
  v70 = v149;
  *(&v129 - 1) = v149;
  v131 = v63;
  sub_1BAA52384((void (*)(char *, char *))sub_1BAAECED0, (uint64_t)(&v129 - 4), v53, v62, MEMORY[0x1E0DEDCE8], v63, MEMORY[0x1E0DEDD18], v71);
  v72 = MEMORY[0x1BCCE36DC]();
  v74 = v73;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v57 + 136) = v62;
  *(_QWORD *)(v57 + 144) = v69;
  *(_QWORD *)(v57 + 112) = v72;
  *(_QWORD *)(v57 + 120) = v74;
  v75 = sub_1BB87330C();
  sub_1BB86EF44("Service will run emit tasks, isLast=%d, normal=%{public}@ and low=%{public}@", 76, 2, &dword_1BA493000, v143, v75, v57);
  v76 = swift_bridgeObjectRelease();
  v134 = &v129;
  *(_QWORD *)v155 = v132;
  MEMORY[0x1E0C80A78](v76);
  v77 = v150;
  *(&v129 - 2) = v150;
  *(&v129 - 1) = v70;
  v78 = v70;
  v133 = (uint64_t *)type metadata accessor for FeedGroupEmitTask.Result(255, v148, v147, v79);
  v80 = sub_1BB86EAAC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v82 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAECEEC, (uint64_t)(&v129 - 4), v141, TupleTypeMetadata2, MEMORY[0x1E0DEDCE8], v63, MEMORY[0x1E0DEDD18], v81);
  v83 = swift_bridgeObjectRelease();
  *(_QWORD *)v155 = v82;
  MEMORY[0x1E0C80A78](v83);
  *(&v129 - 2) = v77;
  *(&v129 - 1) = v70;
  v84 = sub_1BB872EE0();
  v85 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v84);
  v132 = sub_1BAA52384((void (*)(char *, char *))sub_1BA4A4164, (uint64_t)(&v129 - 4), v84, v80, MEMORY[0x1E0DEDCE8], v85, MEMORY[0x1E0DEDD18], v86);
  *(_QWORD *)v155 = v82;
  MEMORY[0x1E0C80A78](v132);
  v87 = v77;
  *(&v129 - 2) = v77;
  *(&v129 - 1) = v78;
  v88 = v78;
  v134 = (uint64_t *)sub_1BAA52384((void (*)(char *, char *))sub_1BAAF03C4, (uint64_t)(&v129 - 4), v84, v80, MEMORY[0x1E0DEDCE8], v85, MEMORY[0x1E0DEDD18], v89);
  v90 = swift_bridgeObjectRelease();
  *(_QWORD *)v155 = v142;
  MEMORY[0x1E0C80A78](v90);
  *(&v129 - 2) = v87;
  *(&v129 - 1) = v78;
  v91 = v87;
  v92 = v88;
  v94 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAECEEC, (uint64_t)(&v129 - 4), v141, TupleTypeMetadata2, MEMORY[0x1E0DEDCE8], v131, MEMORY[0x1E0DEDD18], v93);
  v95 = swift_bridgeObjectRelease();
  *(_QWORD *)v155 = v94;
  MEMORY[0x1E0C80A78](v95);
  *(&v129 - 2) = v91;
  *(&v129 - 1) = v92;
  v97 = sub_1BAA52384((void (*)(char *, char *))sub_1BA4A4178, (uint64_t)(&v129 - 4), v84, v80, MEMORY[0x1E0DEDCE8], v85, MEMORY[0x1E0DEDD18], v96);
  *(_QWORD *)v155 = v94;
  MEMORY[0x1E0C80A78](v97);
  *(&v129 - 2) = v91;
  *(&v129 - 1) = v92;
  v99 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAECF38, (uint64_t)(&v129 - 4), v84, v80, MEMORY[0x1E0DEDCE8], v85, MEMORY[0x1E0DEDD18], v98);
  swift_bridgeObjectRelease();
  sub_1BA657D64();
  v100 = v137;
  v101 = v136;
  v102 = v138;
  (*(void (**)(char *, _QWORD, uint64_t))(v137 + 104))(v136, *MEMORY[0x1E0DEF530], v138);
  v103 = (void *)sub_1BB873498();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
  v104 = sub_1BB86ECBC();
  v141 = v104;
  sub_1BB872E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v105 = sub_1BB86ECBC();
  v142 = v105;
  v106 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v106);
  *(&v129 - 4) = v150;
  *(&v129 - 3) = v92;
  *(&v129 - 2) = v104;
  *(&v129 - 1) = v105;
  sub_1BB872EE0();
  sub_1BA5B089C(255, (unint64_t *)&qword_1ED3B9670, (unint64_t *)&qword_1ED3BA030, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_getTupleTypeMetadata2();
  sub_1BB86EC14();
  v107 = (void *)sub_1BB86E854();
  v108 = v145;
  sub_1BB86E980();
  swift_release();

  v109 = (_QWORD *)swift_allocObject();
  v110 = v143;
  v109[2] = v143;
  v109[3] = v103;
  v109[4] = v134;
  v109[5] = v99;
  v109[6] = v108;
  v111 = v110;
  v143 = v103;
  swift_retain();
  v112 = (void *)sub_1BB86E854();
  sub_1BB86EA28();
  swift_release();
  swift_release();

  v113 = (_QWORD *)swift_allocObject();
  v115 = v149;
  v114 = v150;
  v113[2] = v150;
  v113[3] = v115;
  v116 = v135;
  v113[4] = v135;
  v117 = (_QWORD *)swift_allocObject();
  v117[2] = v114;
  v117[3] = v115;
  v117[4] = sub_1BAAECFF0;
  v117[5] = v113;
  swift_bridgeObjectRetain();
  v118 = (void *)sub_1BB86E854();
  sub_1BB86E968();
  swift_release();
  swift_release();

  v119 = swift_allocObject();
  v120 = v140;
  *(_QWORD *)(v119 + 16) = v116;
  *(_QWORD *)(v119 + 24) = v120;
  *(_QWORD *)(v119 + 32) = v111;
  *(_QWORD *)(v119 + 40) = v108;
  v121 = v144;
  *(_QWORD *)(v119 + 48) = v146;
  *(_QWORD *)(v119 + 56) = v121;
  *(double *)(v119 + 64) = a4;
  v122 = (_QWORD *)swift_allocObject();
  v122[2] = v114;
  v122[3] = v115;
  v122[4] = sub_1BAAED048;
  v122[5] = v119;
  swift_bridgeObjectRetain();
  v123 = v111;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v124 = (void *)sub_1BB86E854();
  type metadata accessor for FeedChosenEmitterResult(0, v148, v147, v125);
  sub_1BB86E968();
  swift_release();
  swift_release();

  swift_retain();
  v126 = (void *)sub_1BB86E854();
  v127 = sub_1BB86E9A4();

  swift_release();
  swift_release();
  swift_release();
  swift_release_n();

  return v127;
}

uint64_t sub_1BA6677E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v5 = v4;
  v7 = *v4;
  v8 = *(uint64_t *)((char *)v4 + qword_1ED4767D0);
  v9 = *(_QWORD *)(*v4 + 80);
  v10 = *(_QWORD *)(v7 + 88);
  v11 = type metadata accessor for FeedCursorGroup(0, v9, v10, a4);
  result = MEMORY[0x1BCCE37B4](v8, v11);
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else if (result + 1 == *(uint64_t *)((char *)v5 + qword_1ED4767E8))
  {
    return 1;
  }
  else
  {
    v14 = *(uint64_t *)((char *)v5 + qword_1ED4767E0);
    type metadata accessor for FeedGroupEmitter(255, v9, v10, v13);
    sub_1BB872EE0();
    nullsub_1(v14);
    v15 = sub_1BB8727E4();
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DE9ED0], v15);
    v16 = sub_1BB872C94();
    return (v21 == 1 || FeedCursor.nextSlotIndex.getter(v16, v17, v18, v19) >= v20) && a1 == 1;
  }
  return result;
}

unint64_t sub_1BA667938()
{
  unint64_t result;

  result = qword_1ED3AFDB0;
  if (!qword_1ED3AFDB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitterPriority, &type metadata for FeedGroupEmitterPriority);
    atomic_store(result, (unint64_t *)&qword_1ED3AFDB0);
  }
  return result;
}

uint64_t sub_1BA66797C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;

  v11 = *a2;
  v12 = a2[1];
  v13 = a2[2];
  v14 = type metadata accessor for FeedScoredResult(0, a4, a5, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a6, a1, v14);
  result = type metadata accessor for FeedChosenEmitterResult(0, a4, a5, v15);
  v17 = (_QWORD *)(a6 + *(int *)(result + 36));
  *v17 = v11;
  v17[1] = v12;
  v17[2] = v13;
  *(_QWORD *)(a6 + *(int *)(result + 40)) = a3;
  return result;
}

uint64_t type metadata accessor for FeedScoredResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedScoredResult);
}

uint64_t type metadata accessor for FeedChosenEmitterResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedChosenEmitterResult);
}

void sub_1BA667A38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;

  v1 = v0[80];
  v2 = v0[79];
  v3 = v0[78];
  v4 = v0[77];
  v5 = v0[75];
  v6 = v0[73];
  v8 = v0[39];
  v7 = v0[40];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[74] + 16))(v5, v0[82], v6);
  v9 = v5 + *(int *)(v6 + 44);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v10(v1, v9, v4);
  v12 = type metadata accessor for FeedGroupEmitTask.Result(0, v8, v7, v11);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v9, v12);
  v10(v2, v1, v4);
  v13 = (char *)sub_1BA667B34 + 4 * word_1BB89CF38[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA667B34()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(unint64_t, uint64_t, uint64_t);
  void *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v4 = *(_QWORD *)(v1 + 632);
  v5 = *(_QWORD *)(v1 + 576);
  v6 = *(_QWORD *)(v1 + 536);
  v7 = *(_QWORD *)(v1 + 528);
  sub_1BA4AD288(255, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = v4 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v4, v7);
  v9 = v76;
  sub_1BA78DE64(v8, v76);
  v77 = *(_QWORD *)(v1 + 656);
  v78 = v2;
  v59 = *(_QWORD *)(v1 + 640);
  v60 = *(_QWORD *)(v1 + 648);
  v56 = *(_QWORD *)(v1 + 624);
  v58 = *(_QWORD *)(v1 + 616);
  v10 = *(_QWORD *)(v1 + 600);
  v43 = *(_QWORD *)(v1 + 584);
  v44 = *(_QWORD *)(v1 + 560);
  v66 = *(_QWORD *)(v1 + 536);
  v71 = *(_QWORD *)(v1 + 528);
  v64 = *(_QWORD *)(v1 + 576);
  v65 = *(_QWORD *)(v1 + 488);
  v62 = *(_QWORD *)(v1 + 512);
  v63 = *(_QWORD *)(v1 + 480);
  v53 = *(_QWORD *)(v1 + 464);
  v46 = *(_QWORD *)(v1 + 472);
  v47 = *(_QWORD *)(v1 + 448);
  v48 = *(_QWORD *)(v1 + 456);
  v49 = *(_QWORD *)(v1 + 440);
  v50 = *(_QWORD *)(v1 + 432);
  v51 = *(_QWORD *)(v1 + 424);
  v54 = *(_QWORD *)(v1 + 408);
  v55 = *(_QWORD *)(v1 + 400);
  v68 = *(_QWORD *)(v1 + 392);
  v69 = *(_QWORD *)(v1 + 384);
  v70 = *(_QWORD *)(v1 + 416);
  v42 = *(_QWORD *)(v1 + 280);
  v57 = *(_QWORD *)(v1 + 272);
  v11 = *(_QWORD *)(v42 + qword_1ED4767D8);
  v61 = *(_QWORD *)(v1 + 320);
  v72 = *(_QWORD *)(v1 + 328);
  v73 = *(_QWORD *)(v1 + 312);
  v52 = *(_QWORD *)(v1 + 304);
  (*(void (**)(uint64_t))(v3 - 256))(v10);
  v12 = v10 + *(int *)(v80 + 44);
  swift_bridgeObjectRetain();
  swift_retain();
  v2(v12, v0);
  v13 = sub_1BA4D7950();
  v15 = v14;
  swift_release();
  sub_1BA78DE64(v9, v74);
  sub_1BA670B14();
  swift_allocObject();
  v16 = sub_1BB86E9E0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 - 248) = 0x8000000000000000;
  *(_QWORD *)(v3 - 240) = v11;
  sub_1BA653904(v16, v13, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 - 248) = *(_QWORD *)(v3 - 240);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v75 = sub_1BA66CF9C(v42, (uint64_t *)(v3 - 248), 0, v72);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16);
  v45(v44, v64, v71);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 - 256))(v10, v77, v43);
  v18 = v10 + *(int *)(v80 + 44);
  swift_retain();
  v78(v18, v0);
  sub_1BA5F1270();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v48, v42 + *(_QWORD *)(*(_QWORD *)v42 + 248), v73);
  sub_1BB86C8A4();
  FeedCursorGroup.init(createdDate:group:config:serviceConfig:)(v49, v44, v46, v48, v73, v61, v62);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v70, 1, 1, v73);
  *(_BYTE *)(v3 + 31) = 7;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56);
  v19(v68, 1, 1, v51);
  v19(v69, 1, 1, v51);
  sub_1BB874218();
  swift_allocObject();
  v20 = sub_1BB872E2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v21, v62, v63);
  sub_1BA69C794(v20);
  v81 = sub_1BB872E5C();
  swift_bridgeObjectRelease();
  v79 = *(_QWORD *)(v3 - 248);
  v45(v44, v64, v71);
  v22 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v52 + 80);
  *(_QWORD *)(v23 + 24) = v53;
  v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v66 + 32);
  *(_QWORD *)(v3 - 256) = v24;
  v24(v23 + v22, v44, v71);
  v25 = (void *)sub_1BB86E854();
  sub_1BB873A2C();
  v67 = sub_1BB86E974();
  swift_release();

  *(_OWORD *)(v3 - 192) = 0u;
  *(_OWORD *)(v3 - 176) = 0u;
  *(_OWORD *)(v3 - 224) = 0u;
  *(_OWORD *)(v3 - 208) = 0u;
  *(_OWORD *)(v3 - 240) = 0u;
  v26 = *(_QWORD *)(v42 + qword_1ED476790 + 16);
  *(_OWORD *)(v3 - 128) = *(_OWORD *)(v42 + qword_1ED476790);
  v27 = (uint64_t *)(v77 + *(int *)(v72 + 36));
  v28 = *v27;
  v29 = v27[1];
  v30 = v27[2];
  *(_QWORD *)(v3 - 112) = v26;
  *(_QWORD *)(v3 - 104) = v28;
  *(_QWORD *)(v3 - 96) = v29;
  *(_QWORD *)(v3 - 88) = v30;
  sub_1BA66AB08((_QWORD *)(v3 - 128), (uint64_t *)(v3 - 104), v73, v61, (_QWORD *)(v3 - 152));
  v31 = *(_QWORD *)(v3 - 144);
  v32 = *(_QWORD *)(v3 - 136);
  *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 152);
  *(_QWORD *)(v3 - 96) = v31;
  *(_QWORD *)(v3 - 88) = v32;
  *(_QWORD *)(v3 - 128) = 0;
  *(_WORD *)(v3 - 120) = 256;
  v33 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v70, 0, (unsigned __int8 *)(v3 + 31), v68, v69, v75, 0, 0, 0, v81, 0, 0, 1, 0, 1, 0, 1,
          v79,
          v67,
          v3 - 240,
          (uint64_t *)(v3 - 104),
          v3 - 128,
          0,
          0,
          0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA76D750(v69);
  sub_1BA76D750(v68);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v70, v55);
  FeedCursor.reachedEnd.getter(v34, v35, v36, v37);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v62, v63);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v59, v58);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v77, v72);
  type metadata accessor for FeedCursor(255, v73, v61, v38);
  v39 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 - 256))(v57, v64, v71);
  *(_QWORD *)(v57 + v39) = v33;
  type metadata accessor for FeedServiceFetchResult.Internal(0, v73, v61, v40);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v3 - 256) = *(_QWORD *)(v1 + 352);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1BA669C3C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v4 > v5)
    v5 = *(_QWORD *)(v3 + 64);
  if (v5 <= 0x10)
    v6 = 16;
  else
    v6 = v5;
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 48 <= v6)
    v7 = v6;
  else
    v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  switch(*(_BYTE *)(a1 + v7))
  {
    case 0:
    case 1:
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
      v9 = (a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v9 + 24) < 0xFFFFFFFFuLL)
        goto LABEL_31;
      goto LABEL_30;
    case 2:
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
      goto LABEL_31;
    case 3:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_31;
    case 6:
      v10 = *(unsigned __int8 *)(a1 + v6);
      if (v10 >= 3)
      {
        if (v6 <= 3)
          v11 = v6;
        else
          v11 = 4;
        __asm { BR              X13 }
      }
      if (v10 == 2)
      {
        swift_bridgeObjectRelease();
      }
      else if (v10 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
        v12 = (a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v12 + 24) >= 0xFFFFFFFFuLL)
          __swift_destroy_boxed_opaque_existential_1(v12);
      }
      v9 = (a1 + v6 + 8) & 0xFFFFFFFFFFFFFFF8;
LABEL_30:
      __swift_destroy_boxed_opaque_existential_1(v9);
LABEL_31:
      swift_release();
      return swift_bridgeObjectRelease();
    default:
      if (v7 <= 3)
        v8 = v7;
      else
        v8 = 4;
      __asm { BR              X13 }
      return result;
  }
}

unint64_t sub_1BA669ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t result;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v4 > v5)
    v5 = *(_QWORD *)(v3 + 64);
  if (v5 <= 0x10)
    v6 = 16;
  else
    v6 = v5;
  v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (v7 <= v6)
    v7 = v6;
  switch(*(_BYTE *)(a1 + v7))
  {
    case 0:
    case 1:
      (*(void (**)(uint64_t))(v3 + 8))(a1);
      result = (a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(result + 24) < 0xFFFFFFFFuLL)
        return result;
      return __swift_destroy_boxed_opaque_existential_1(result);
    case 2:
      return (*(uint64_t (**)(uint64_t))(v3 + 8))(a1);
    case 3:
    case 4:
    case 5:
      return swift_bridgeObjectRelease();
    case 6:
      v10 = *(unsigned __int8 *)(a1 + v6);
      if (v10 >= 3)
      {
        if (v6 <= 3)
          v11 = v6;
        else
          v11 = 4;
        __asm { BR              X13 }
      }
      if (v10 == 2)
      {
        swift_bridgeObjectRelease();
      }
      else if (v10 == 1)
      {
        (*(void (**)(uint64_t))(v3 + 8))(a1);
      }
      else
      {
        (*(void (**)(uint64_t))(v3 + 8))(a1);
        v12 = (a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v12 + 24) >= 0xFFFFFFFFuLL)
          __swift_destroy_boxed_opaque_existential_1(v12);
      }
      result = (a1 + v6 + 8) & 0xFFFFFFFFFFFFFFF8;
      return __swift_destroy_boxed_opaque_existential_1(result);
    default:
      if (*(unsigned __int8 *)(a1 + v7) <= 3u)
        v8 = *(unsigned __int8 *)(a1 + v7);
      else
        v8 = 4;
      __asm { BR              X14 }
      return result;
  }
}

uint64_t sub_1BA66A0F4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;

  v1 = a1 + 15;
  v2 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  v6 = (v2 + v5 + 8) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v7 > v8)
    v8 = *(_QWORD *)(v4 + 64);
  if (v8 <= 0x10)
    v9 = 16;
  else
    v9 = v8;
  if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v9)
    v10 = v9;
  else
    v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
  switch(*(_BYTE *)(v6 + v10))
  {
    case 0:
    case 1:
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
      v12 = ((v6 | 7) + v7) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v12 + 24) < 0xFFFFFFFFuLL)
        goto LABEL_31;
      goto LABEL_30;
    case 2:
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
      goto LABEL_31;
    case 3:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_31;
    case 6:
      v13 = *(unsigned __int8 *)(v6 + v9);
      if (v13 >= 3)
      {
        if (v9 <= 3)
          v14 = v9;
        else
          v14 = 4;
        __asm { BR              X13 }
      }
      if (v13 == 2)
      {
        swift_bridgeObjectRelease();
      }
      else if (v13 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
        v15 = ((v6 | 7) + v7) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v15 + 24) >= 0xFFFFFFFFuLL)
          __swift_destroy_boxed_opaque_existential_1(v15);
      }
      v12 = (v6 + v9 + 8) & 0xFFFFFFFFFFFFFFF8;
LABEL_30:
      __swift_destroy_boxed_opaque_existential_1(v12);
LABEL_31:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(((v1
                       + ((v5 + 24) & ~v5)
                       + (((((((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 49) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)
                     + 8) >= 2uLL)
        swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    default:
      if (v10 <= 3)
        v11 = v10;
      else
        v11 = 4;
      __asm { BR              X13 }
      return result;
  }
}

uint64_t sub_1BA66A414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  v7 = *(_QWORD *)(a2 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = (v6 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v10, AssociatedTypeWitness);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))((v11 + *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80), v7);
}

uint64_t sub_1BA66A524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 + v12 + a1) & ~v12;
  v14 = (v8 + v12 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  v18 = *(_QWORD *)(v9 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = ((unint64_t)v16 + v19 + 16) & ~v19;
  v21 = ((unint64_t)v17 + v19 + 16) & ~v19;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  swift_bridgeObjectRetain();
  v22(v20, v21, v9);
  return a1;
}

_QWORD *sub_1BA66A67C(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _OWORD *v44;
  __int128 *v45;
  __int128 v46;
  __int128 v47;
  _QWORD *result;

  *a1 = *a2;
  v3 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  v4 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFF8);
  *v3 = *v4;
  v5 = (_QWORD *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  v10 = v9 + 15;
  v11 = (unint64_t)v5 + v9 + 15;
  v12 = ~v9 & 0xFFFFFFFFFFFFFFF8;
  v13 = v11 & v12;
  v14 = ((unint64_t)v6 + v10) & v12;
  v15 = *(_QWORD *)(v8 + 64);
  v16 = v15 + 7;
  if (v15 <= ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v15 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v15 <= 0x10)
    v17 = 16;
  else
    v17 = v15;
  if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17)
    v18 = v17;
  else
    v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
  v20 = v17 + 1;
  switch(*(_BYTE *)(v14 + v18))
  {
    case 0:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v13, v14, AssociatedTypeWitness);
      v21 = (v16 + v13) & 0xFFFFFFFFFFFFFFF8;
      v22 = (v16 + v14) & 0xFFFFFFFFFFFFFFF8;
      v23 = *(_QWORD *)(v22 + 24);
      if (v23 < 0xFFFFFFFF)
      {
        v31 = *(_OWORD *)(v22 + 16);
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *(_OWORD *)(v21 + 16) = v31;
      }
      else
      {
        *(_QWORD *)(v21 + 24) = v23;
        (**(void (***)(void))(v23 - 8))();
      }
      *(_BYTE *)(v13 + v18) = 0;
      break;
    case 1:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v13, v14, AssociatedTypeWitness);
      v24 = (v16 + v13) & 0xFFFFFFFFFFFFFFF8;
      v25 = (v16 + v14) & 0xFFFFFFFFFFFFFFF8;
      v26 = *(_QWORD *)(v25 + 24);
      if (v26 < 0xFFFFFFFF)
      {
        v32 = *(_OWORD *)(v25 + 16);
        *(_OWORD *)v24 = *(_OWORD *)v25;
        *(_OWORD *)(v24 + 16) = v32;
      }
      else
      {
        *(_QWORD *)(v24 + 24) = v26;
        (**(void (***)(void))(v26 - 8))();
      }
      v27 = 1;
      goto LABEL_41;
    case 2:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v13, v14, AssociatedTypeWitness);
      v27 = 2;
      goto LABEL_41;
    case 3:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
      v28 = 3;
      goto LABEL_24;
    case 4:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
      v28 = 4;
      goto LABEL_24;
    case 5:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
      v28 = 5;
LABEL_24:
      *(_BYTE *)(v13 + v18) = v28;
      swift_bridgeObjectRetain();
      break;
    case 6:
      v29 = *(unsigned __int8 *)(v14 + v17);
      if (v29 >= 3)
      {
        if (v17 <= 3)
          v30 = v17;
        else
          v30 = 4;
        __asm { BR              X13 }
      }
      if (v29 == 2)
      {
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
        *(_BYTE *)(v13 + v17) = 2;
        swift_bridgeObjectRetain();
      }
      else if (v29 == 1)
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v13, v14, AssociatedTypeWitness);
        *(_BYTE *)(v13 + v17) = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v13, v14, AssociatedTypeWitness);
        v33 = (v16 + v13) & 0xFFFFFFFFFFFFFFF8;
        v34 = (v16 + v14) & 0xFFFFFFFFFFFFFFF8;
        v35 = *(_QWORD *)(v34 + 24);
        if (v35 < 0xFFFFFFFF)
        {
          v36 = *(_OWORD *)(v34 + 16);
          *(_OWORD *)v33 = *(_OWORD *)v34;
          *(_OWORD *)(v33 + 16) = v36;
        }
        else
        {
          *(_QWORD *)(v33 + 24) = v35;
          (**(void (***)(void))(v35 - 8))();
        }
        *(_BYTE *)(v13 + v17) = 0;
      }
      v37 = ((v13 | 7) + v20) & 0xFFFFFFFFFFFFFFF8;
      v38 = ((v14 | 7) + v20) & 0xFFFFFFFFFFFFFFF8;
      v39 = *(_QWORD *)(v38 + 24);
      *(_QWORD *)(v37 + 24) = v39;
      *(_QWORD *)(v37 + 32) = *(_QWORD *)(v38 + 32);
      (**(void (***)(void))(v39 - 8))();
      v27 = 6;
LABEL_41:
      *(_BYTE *)(v13 + v18) = v27;
      break;
    default:
      if (v18 <= 3)
        v19 = v18;
      else
        v19 = 4;
      __asm { BR              X13 }
      return result;
  }
  v40 = (_QWORD *)(((v13 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  v41 = (_QWORD *)(((v14 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  *v40 = *v41;
  v42 = (_QWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFF8);
  v43 = (_QWORD *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v42 = *v43;
  v44 = (_OWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  v45 = (__int128 *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  v46 = *v45;
  v47 = v45[1];
  *(_OWORD *)((char *)v44 + 26) = *(__int128 *)((char *)v45 + 26);
  *v44 = v46;
  v44[1] = v47;
  *(_QWORD *)(((unint64_t)v44 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v45 + 49) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA66AB08@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];

  v6 = a1[1];
  v7 = a1[2];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  *a5 = *a1;
  a5[1] = v6;
  a5[2] = v7;
  v12[0] = v8;
  v12[1] = v9;
  v12[2] = v10;
  type metadata accessor for FeedJournal(0, a3, a4, a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return FeedJournal.add(entry:)(v12);
}

uint64_t type metadata accessor for FeedJournal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedJournal);
}

uint64_t FeedLayoutSolver.Cursor.layout(regions:decorationProvider:allOrNothing:startingOffset:groupLayoutMarginAdjuster:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, void *a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  _QWORD v9[4];
  char v10;
  uint64_t v11;

  v9[2] = a1;
  v9[3] = a7;
  v10 = a3;
  v11 = a2;
  return FeedLayoutSolver.Cursor.withTracking<A>(startingOffset:block:)(a4, a5, a6 & 1, (void (*)(__int128 *))sub_1BA66BE28, (uint64_t)v9, a8);
}

uint64_t FeedLayoutSolver.cursor(session:log:feedKind:feedContext:columnSystem:layoutOptions:solverOptions:)(uint64_t a1, unint64_t a2, void *a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  char *v9;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, unint64_t, id, uint64_t, uint64_t);
  id v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t ObjectType;
  unint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94[2];
  uint64_t v95;
  char v96;
  char v97;
  char v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int8 v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  __int128 v119[2];
  __int128 v120[3];

  v9 = v8;
  v70 = a8;
  v16 = *(_QWORD *)v8;
  v17 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1E0C80A78](v17);
  v93 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BB86D7A4();
  v68 = *(_QWORD *)(v19 - 8);
  v69 = v19;
  MEMORY[0x1E0C80A78](v19);
  v92 = (uint64_t)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v16;
  v86 = *(_QWORD *)(v16 + 80);
  v21 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v22);
  v91 = (uint64_t)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BB86D660();
  v89 = *(_QWORD *)(v24 - 8);
  v90 = v24;
  MEMORY[0x1E0C80A78](v24);
  v88 = (uint64_t)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  LODWORD(v67) = *a4;
  v27 = *(_QWORD *)(a5 + 8);
  v85 = *(void **)a5;
  v28 = *(_QWORD *)(a5 + 16);
  v29 = *(_QWORD *)(a5 + 24);
  v77 = *(_QWORD *)(a5 + 32);
  v78 = v29;
  v30 = *(_QWORD *)(a5 + 40);
  v81 = *(_QWORD *)(a5 + 48);
  v82 = v28;
  v75 = *(void **)(a5 + 56);
  v76 = v30;
  v31 = *(_QWORD *)(a5 + 64);
  v73 = *(_QWORD *)(a5 + 72);
  v74 = v31;
  v87 = (char *)&v58 - v32;
  sub_1BB86D66C();
  if (a2)
    v33 = a1;
  else
    v33 = 0x746C7561666564;
  v34 = 0xE700000000000000;
  if (a2)
    v34 = a2;
  v83 = v34;
  v84 = v33;
  v79 = v27;
  v71 = a7;
  if (a3)
  {
    swift_bridgeObjectRetain();
    v35 = a3;
  }
  else
  {
    v36 = qword_1ED3BA7F8;
    swift_bridgeObjectRetain();
    if (v36 != -1)
      swift_once();
    v35 = (id)qword_1ED476860;
  }
  v37 = &v9[*(_QWORD *)(*(_QWORD *)v9 + 104)];
  v39 = *((_QWORD *)v37 + 3);
  v38 = *((_QWORD *)v37 + 4);
  __swift_project_boxed_opaque_existential_1(v37, v39);
  v40 = *(void (**)(uint64_t, unint64_t, id, uint64_t, uint64_t))(v38 + 8);
  v41 = a3;
  v72 = (uint64_t)v35;
  v40(v84, v83, v35, v39, v38);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v91, &v9[*(_QWORD *)(*(_QWORD *)v9 + 96)], v86);
  sub_1BA4C010C((uint64_t)v37, (uint64_t)v120);
  v42 = v87;
  (*(void (**)(uint64_t, char *, uint64_t))(v89 + 16))(v88, v87, v90);
  v43 = v71;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v92, v71, v69);
  sub_1BA4C2DD8(v70, v93, type metadata accessor for FeedLayoutSolverOptions);
  v44 = &v9[*(_QWORD *)(*(_QWORD *)v9 + 112)];
  v45 = *((_QWORD *)v44 + 3);
  v46 = *((_QWORD *)v44 + 4);
  __swift_project_boxed_opaque_existential_1(v44, v45);
  v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 8))(v42, v43, v45, v46);
  sub_1BA4C010C((uint64_t)&v9[*(_QWORD *)(*(_QWORD *)v9 + 120)], (uint64_t)v119);
  v118 = v67;
  if (v85)
  {
    v108 = (uint64_t)v85;
    v49 = v78;
    v48 = v79;
    LODWORD(v70) = v79 & 1;
    v109 = v79 & 0x1010101;
    v110 = v82;
    v111 = v78;
    v69 = (v79 >> 8) & 1;
    v67 = (v79 >> 16) & 1;
    v50 = v76;
    v51 = v77;
    v112 = v77;
    v113 = v76;
    v65 = v73;
    v66 = (v79 >> 24) & 1;
    LODWORD(v68) = v81 & 1;
    v114 = v81 & 1;
    v52 = v75;
    v63 = v75;
    v64 = v74;
    v61 = v77;
    v62 = v76;
    v115 = v75;
    v116 = v74;
    v59 = v82;
    v60 = v78;
    v58 = (uint64_t)v85;
    v117 = v73;
  }
  else
  {
    v53 = *(_QWORD *)&v9[*(_QWORD *)(*(_QWORD *)v9 + 136) + 8];
    ObjectType = swift_getObjectType();
    FeedContextFactoryType.createFeedContext()(ObjectType, v53);
    LODWORD(v70) = v109;
    v69 = BYTE1(v109);
    v67 = BYTE2(v109);
    v66 = HIBYTE(v109);
    v58 = v108;
    v59 = v110;
    v60 = v111;
    v61 = v112;
    LODWORD(v68) = v114;
    v62 = v113;
    v63 = v115;
    v64 = v116;
    v65 = v117;
    v49 = v78;
    v48 = v79;
    v50 = v76;
    v51 = v77;
    v52 = v75;
  }
  type metadata accessor for FeedLayoutSolver.Cursor(0, v86, *(_QWORD *)(v80 + 88), v47);
  v95 = v58;
  v96 = v70;
  v97 = v69;
  v98 = v67;
  v99 = v66;
  v100 = v59;
  v101 = v60;
  v102 = v61;
  v103 = v62;
  v104 = v68;
  v105 = v63;
  v106 = v64;
  v107 = v65;
  sub_1BA4C010C((uint64_t)&v9[*(_QWORD *)(*(_QWORD *)v9 + 128)], (uint64_t)v94);
  sub_1BA66B198(v85, v48, v82, v49, v51, v50, v81, v52);
  v55 = sub_1BA66B904(MEMORY[0x1E0DEE9D8]);
  v56 = swift_allocObject();
  sub_1BA6A78EC(v91, v120, v88, v92, v93, v71, v119, v72, v55, &v118, &v95, v94, v84, v83);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v87, v90);
  return v56;
}

void *sub_1BA66B198(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v11;
  id v12;

  if (result)
  {
    v11 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(a5, a6);
    v12 = a8;
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t FeedLayoutSolver.Cursor.withTracking<A>(startingOffset:block:)@<X0>(char *a1@<X0>, void *a2@<X1>, int a3@<W2>, void (*a4)(__int128 *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(__int128 *);
  uint64_t v73;
  __int128 v74[2];
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int16 v85;
  char v86;
  __int128 v87;
  unsigned __int16 v88;
  unsigned __int16 v89;
  __int128 v90;

  v7 = v6;
  v71 = a5;
  v72 = a4;
  LODWORD(v63) = a3;
  v64 = a2;
  v65 = a1;
  v70 = a6;
  v8 = *(_QWORD *)v6;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D24E0, (void (*)(uint64_t))type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v60 - v10;
  v12 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v73 = (uint64_t)&v60 - v16;
  v17 = sub_1BB86D7A4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v20;
  v21 = sub_1BB86D660();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v24;
  v66 = v8;
  v26 = MEMORY[0x1E0C80A78](v25);
  v69 = (uint64_t)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(v28 + 16))(v26);
  sub_1BA4C010C((uint64_t)&v7[*(_QWORD *)(*(_QWORD *)v7 + 104)], (uint64_t)&v90);
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v24, &v7[*(_QWORD *)(*(_QWORD *)v7 + 112)], v21);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, &v7[*(_QWORD *)(*(_QWORD *)v7 + 120)], v17);
  sub_1BA4C2DD8((uint64_t)&v7[*(_QWORD *)(*(_QWORD *)v7 + 128)], (uint64_t)v14, type metadata accessor for FeedLayoutSolverOptions);
  v29 = v64;
  if ((v63 & 1) != 0)
    v29 = 0;
  v30 = (uint64_t)v65;
  if ((v63 & 1) != 0)
    v30 = 0;
  v75 = v30;
  v76 = v29;
  LOWORD(v77) = 0;
  v86 = 0;
  v85 = 2;
  v89 = 2;
  v88 = 2;
  *(_QWORD *)&v74[0] = 2;
  v31 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v11, 1, 1, v31);
  *(_QWORD *)&v87 = 0;
  BYTE8(v87) = 1;
  FeedLayoutSolverOptions.with(cursorTracking:headlineOptions:categoryOptions:coverOptions:issueStripOptions:pluginOptions:traits:)(&v75, &v85, &v89, &v88, (unint64_t *)v74, (uint64_t)v11, (uint64_t)&v87, v73);
  sub_1BB2BED08((uint64_t)v11);
  sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FeedLayoutSolverOptions);
  v32 = *(_QWORD *)(*(_QWORD *)v7 + 144);
  v63 = *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 136)];
  sub_1BA4C010C((uint64_t)&v7[v32], (uint64_t)&v87);
  v33 = *(_QWORD *)(*(_QWORD *)v7 + 160);
  v64 = *(id *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 168)];
  v34 = (uint64_t *)&v7[v33];
  v65 = &v7[v33];
  swift_beginAccess();
  v35 = *v34;
  v36 = *(_QWORD *)v7;
  v37 = *(_QWORD *)(*(_QWORD *)v7 + 184);
  LOBYTE(v89) = v7[*(_QWORD *)(*(_QWORD *)v7 + 176)];
  v38 = &v7[v37];
  v39 = *(void **)&v7[v37];
  LOBYTE(v37) = v7[v37 + 8];
  v40 = v38[9];
  v41 = v38[10];
  v42 = v38[11];
  v43 = *((_QWORD *)v38 + 2);
  v44 = *((_QWORD *)v38 + 3);
  v45 = *((_QWORD *)v38 + 4);
  v46 = *((_QWORD *)v38 + 5);
  v47 = v38[48];
  v48 = (void *)*((_QWORD *)v38 + 7);
  v49 = *((_QWORD *)v38 + 8);
  v61 = *((_QWORD *)v38 + 9);
  v75 = (uint64_t)v39;
  LOBYTE(v76) = v37;
  BYTE1(v76) = v40;
  BYTE2(v76) = v41;
  BYTE3(v76) = v42;
  v77 = v43;
  v78 = v44;
  v79 = v45;
  v80 = v46;
  v81 = v47;
  v82 = v48;
  v83 = v49;
  v50 = (uint64_t)&v7[*(_QWORD *)(v36 + 192)];
  v84 = v61;
  sub_1BA4C010C(v50, (uint64_t)v74);
  v51 = (uint64_t *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 200)];
  v52 = v51[1];
  v62 = *v51;
  v53 = v63;
  swift_retain();
  v64 = v64;
  swift_bridgeObjectRetain();
  v54 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v45, v46);
  v55 = swift_allocObject();
  v56 = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6A78EC(v69, &v90, (uint64_t)v68, (uint64_t)v67, v73, v53, &v87, (uint64_t)v64, v35, (char *)&v89, &v75, v74, v62, v52);
  *(_QWORD *)&v90 = v55;
  v72(&v90);
  v57 = (uint64_t *)(v90 + *(_QWORD *)(*(_QWORD *)v90 + 160));
  swift_beginAccess();
  v58 = *v57;
  swift_bridgeObjectRetain();
  swift_release();
  *(_QWORD *)v65 = v58;
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupLayoutInventory(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 16;
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  swift_retain();
  v7(a1 + 16, v4, v6);
  return a1;
}

unint64_t sub_1BA66B7F8(uint64_t a1, void (*a2)(_QWORD))
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a2(0);
  v3 = (_QWORD *)sub_1BB873F6C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5 += 3;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA66B904(uint64_t a1)
{
  return sub_1BA66B7F8(a1, (void (*)(_QWORD))sub_1BA6A4C78);
}

uint64_t sub_1BA66B910()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = sub_1BA66B968();
  v3 = *(_QWORD *)(v1 + 96);
  type metadata accessor for FeedLayoutContext();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  swift_retain();
  return v4;
}

uint64_t sub_1BA66B968()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19[2];
  __int128 v20[2];

  v1 = v0;
  v2 = sub_1BB86D93C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D60C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v19 - v11;
  sub_1BB86D630();
  sub_1BB86D600();
  sub_1BA66BDE0();
  v13 = sub_1BB873B7C();
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  v14(v12, v6);
  v15 = v1[10];
  v16 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v15);
  LOBYTE(v19[0]) = (v13 & 1) != 0;
  sub_1BB86D750();
  (*(void (**)(__int128 *__return_ptr, __int128 *, char *, uint64_t, uint64_t))(v16 + 8))(v20, v19, v5, v15, v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1BA4C010C((uint64_t)(v1 + 2), (uint64_t)v19);
  type metadata accessor for FeedLayoutStylerFactory();
  v17 = swift_allocObject();
  sub_1BA4CECCC(v20, v17 + 16);
  sub_1BA4CECCC(v19, v17 + 56);
  *(_QWORD *)(v17 + 96) = 0x3FF0000000000000;
  return v17;
}

uint64_t type metadata accessor for FeedLayoutStylerFactory()
{
  return objc_opt_self();
}

void sub_1BA66BB58(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  ValueMetadata *v11;
  _UNKNOWN **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1BB86D93C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    v11 = &type metadata for DefaultFontBook;
    v12 = &protocol witness table for DefaultFontBook;
    goto LABEL_5;
  }
  if (*a1 == 1)
  {
    v11 = &type metadata for CondensedFontBook;
    v12 = &protocol witness table for CondensedFontBook;
LABEL_5:
    a3[3] = (uint64_t)v11;
    a3[4] = (uint64_t)v12;
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, a2, v6, v8);
  v13 = type metadata accessor for ScalingFontBook();
  v14 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v14 + OBJC_IVAR____TtC8NewsFeed15ScalingFontBook_contentResizeScale, v10, v6);
  a3[3] = v13;
  a3[4] = (uint64_t)&protocol witness table for ScalingFontBook;
  *a3 = v14;
}

uint64_t type metadata accessor for FeedLayoutContext()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedLayoutSolver.Cursor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedLayoutSolver.Cursor);
}

uint64_t sub_1BA66BC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FeedLayoutCache.set(session:log:)(a1, a2, a3);
}

uint64_t FeedLayoutCache.set(session:log:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v4 = v3;
  v7 = *(_QWORD *)(v3 + 72);
  if (v7)
  {
    v8 = *(_QWORD *)(v3 + 64);
    v9 = v8 == a1 && v7 == a2;
    if (!v9 && (sub_1BB874398() & 1) == 0)
    {
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1BB87A390;
      v12 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
      v13 = sub_1BA6A2D8C();
      *(_QWORD *)(v11 + 32) = v8;
      *(_QWORD *)(v11 + 40) = v7;
      *(_QWORD *)(v11 + 96) = v12;
      *(_QWORD *)(v11 + 104) = v13;
      *(_QWORD *)(v11 + 64) = v13;
      *(_QWORD *)(v11 + 72) = a1;
      *(_QWORD *)(v11 + 80) = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1BB87330C();
      sub_1BB86EF44("Feed layout cache busting cache for new session, old=%{public}@, new=%{public}@", 79, 2, &dword_1BA493000, a3, v14, v11);
      swift_bridgeObjectRelease();
      sub_1BB86E794();
    }
  }
  *(_QWORD *)(v4 + 64) = a1;
  *(_QWORD *)(v4 + 72) = a2;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BA66BDE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B0678;
  if (!qword_1ED3B0678)
  {
    v1 = sub_1BB86D60C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5D40], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B0678);
  }
  return result;
}

uint64_t sub_1BA66BE28@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA66BE38(a1, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD, _QWORD, _QWORD))(v2 + 24), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_1BA66BE38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(_QWORD, _QWORD, _QWORD)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, double *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  double *v19;
  double width;
  uint64_t v21;
  double height;
  double x;
  double y;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  unsigned __int8 *v50;
  uint64_t v51;
  int v52;
  int v53;
  BOOL v54;
  unsigned int v55;
  double *v56;
  _QWORD v57[2];
  double *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;

  v12 = sub_1BB86D660();
  v65 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v64 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86D7A4();
  v62 = *(_QWORD *)(v14 - 8);
  v63 = v14;
  MEMORY[0x1E0C80A78](v14);
  v61 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = a2;
  v16 = sub_1BA66C580(a2, a1, a3);
  v17 = v16;
  v18 = v16[2];
  v58 = a6;
  v60 = v12;
  v59 = a4;
  if (v18)
  {
    v19 = (double *)(v16 + 10);
    width = 0.0;
    v21 = v18;
    height = 0.0;
    x = 0.0;
    y = 0.0;
    do
    {
      v26 = *(v19 - 6);
      v25 = *(v19 - 5);
      v28 = *(v19 - 4);
      v27 = *(v19 - 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v75.origin.x = 0.0;
      v75.origin.y = 0.0;
      v75.size.width = 0.0;
      v75.size.height = 0.0;
      v73.origin.x = x;
      v73.origin.y = y;
      v73.size.width = width;
      v73.size.height = height;
      if (CGRectEqualToRect(v73, v75))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        x = v26;
        y = v25;
        width = v28;
        height = v27;
      }
      else
      {
        v71.origin.x = x;
        v71.origin.y = y;
        v71.size.width = width;
        v71.size.height = height;
        v74.origin.x = v26;
        v74.origin.y = v25;
        v74.size.width = v28;
        v74.size.height = v27;
        v72 = CGRectUnion(v71, v74);
        x = v72.origin.x;
        y = v72.origin.y;
        width = v72.size.width;
        height = v72.size.height;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v19 += 8;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRetain();
    v29 = MEMORY[0x1E0DEE9D8];
    v30 = 64;
    v31 = v18;
    do
    {
      v68[0] = v29;
      swift_bridgeObjectRetain();
      v32 = swift_bridgeObjectRetain();
      sub_1BA66C470(v32);
      swift_bridgeObjectRelease();
      v29 = v68[0];
      v30 += 64;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v33 = MEMORY[0x1E0DEE9D8];
    v34 = 9;
    v35 = v18;
    v12 = v60;
    do
    {
      a1 = v17[v34];
      v68[0] = v33;
      swift_bridgeObjectRetain();
      v36 = swift_bridgeObjectRetain();
      sub_1BA66C45C(v36);
      swift_bridgeObjectRelease();
      v33 = v68[0];
      v34 += 8;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
  }
  else
  {
    x = 0.0;
    v33 = MEMORY[0x1E0DEE9D8];
    v29 = MEMORY[0x1E0DEE9D8];
    y = 0.0;
    width = 0.0;
    height = 0.0;
  }
  sub_1BA6A4404(v59, (uint64_t)v68, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
  v37 = v69;
  v38 = v66;
  if (!v69)
  {
    sub_1BA65DBBC((uint64_t)v68, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
    v45 = MEMORY[0x1E0DEE9D8];
    if (v18)
      goto LABEL_29;
    goto LABEL_23;
  }
  v39 = v70;
  a1 = (uint64_t)__swift_project_boxed_opaque_existential_1(v68, v69);
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, a5 + *(_QWORD *)(*(_QWORD *)a5 + 120), v63);
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, a5 + *(_QWORD *)(*(_QWORD *)a5 + 112), v12);
  v67 = *(_BYTE *)(a5 + *(_QWORD *)(*(_QWORD *)a5 + 176));
  if (v38 >> 62)
  {
LABEL_49:
    swift_bridgeObjectRetain();
    v38 = v66;
    result = sub_1BB873F30();
    v40 = result;
  }
  else
  {
    v40 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v59 = v39;
  v57[1] = a1;
  if (!v40)
  {
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x1E0DEE9E8];
    goto LABEL_28;
  }
  if (v40 >= 1)
  {
    if ((v38 & 0xC000000000000001) != 0)
    {
      v66 = v37;
      v42 = v38;
      v43 = 0;
      a1 = MEMORY[0x1E0DEE9E8];
      do
      {
        MEMORY[0x1BCCE4630](v43++, v42);
        swift_bridgeObjectRetain();
        v44 = swift_bridgeObjectRetain();
        a1 = sub_1BA6E4124(v44, a1);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      while (v40 != v43);
      swift_bridgeObjectRelease();
      v12 = v60;
      v37 = v66;
    }
    else
    {
      v46 = 0;
      a1 = MEMORY[0x1E0DEE9E8];
      do
      {
        ++v46;
        swift_bridgeObjectRetain();
        v47 = swift_bridgeObjectRetain();
        a1 = sub_1BA6E4124(v47, a1);
        swift_bridgeObjectRelease();
      }
      while (v40 != v46);
      swift_bridgeObjectRelease();
      v12 = v60;
    }
LABEL_28:
    v48 = v61;
    v49 = v64;
    v45 = (*(uint64_t (**)(char *, char *, char *, uint64_t, uint64_t, double, double, double, double))(v59 + 8))(v61, v64, &v67, a1, v37, x, y, width, height);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v49, v12);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v48, v63);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    if (v18)
    {
LABEL_29:
      v50 = (unsigned __int8 *)(v17 + 11);
      sub_1BA66CF04();
      LOBYTE(v39) = 2;
      v51 = 1;
      while (1)
      {
        v53 = *v50;
        v50 += 64;
        v52 = v53;
        v54 = v53 == 1 || v39 == 1;
        v55 = v54 ? 1 : 2;
        v39 = v52 ? v55 : 0;
        if (v18 == v51)
          goto LABEL_47;
        if (__OFADD__(v51, 1))
        {
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        ++v51;
        if (!v52)
        {
          while (v18 != v51)
          {
            if (__OFADD__(v51, 1))
              goto LABEL_48;
            ++v51;
          }
          LOBYTE(v39) = 0;
          goto LABEL_47;
        }
      }
    }
LABEL_23:
    LOBYTE(v39) = 2;
LABEL_47:
    result = swift_bridgeObjectRelease();
    v56 = v58;
    *v58 = x;
    v56[1] = y;
    v56[2] = width;
    v56[3] = height;
    *((_QWORD *)v56 + 4) = v29;
    *((_QWORD *)v56 + 5) = v33;
    *((_QWORD *)v56 + 6) = v45;
    *((_BYTE *)v56 + 56) = v39;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA66C45C(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BA6C209C, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
}

uint64_t sub_1BA66C470(uint64_t a1)
{
  return sub_1BB3874E4(a1, &qword_1ED3B9D08, (uint64_t)&type metadata for FeedItemLayoutAttributes);
}

uint64_t sub_1BA66C484(void *a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v8;
  _QWORD *v16;
  unsigned __int8 v17;
  int64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD v26[7];
  unsigned __int8 v27;
  double v28;
  double v29;
  double v30;
  double v31;
  unsigned __int8 v32;

  v16 = *(_QWORD **)v8;
  v18 = *(int64_t **)(*(_QWORD *)v8 + 112);
  v32 = *a3;
  v17 = v32;
  v19 = v16[18];
  v20 = v16[19];
  v21 = __swift_project_boxed_opaque_existential_1(v16 + 15, v19);
  v22 = sub_1BB3BDD40(a1, a2, &v32, (uint64_t)v21, v18, v19, v20);
  v23 = v16[2];
  v26[2] = a2;
  v26[3] = v16;
  v26[4] = v22;
  v26[5] = a4;
  v26[6] = a1;
  v27 = v17;
  v28 = a5;
  v29 = a6;
  v30 = a7;
  v31 = a8;
  swift_bridgeObjectRetain();
  v24 = sub_1BA791DFC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BB7CBD24, (uint64_t)v26, v23);
  swift_release();
  swift_bridgeObjectRelease();
  return v24;
}

_QWORD *sub_1BA66C580(unint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  __int128 v27;
  _QWORD *v28;
  _OWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[4];
  __int128 v33;
  uint64_t v34;
  char v35;

  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v7 = 4;
      v25 = v5;
      while (1)
      {
        v8 = v7 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v9 = MEMORY[0x1BCCE4630](v7 - 4, a1);
          v10 = v7 - 3;
          if (__OFADD__(v8, 1))
            goto LABEL_16;
        }
        else
        {
          v9 = *(_QWORD *)(a1 + 8 * v7);
          swift_retain();
          v10 = v7 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_16:
            __break(1u);
            __break(1u);
            goto LABEL_17;
          }
        }
        v28 = v6;
        v31 = v9;
        v30 = 0;
        memset(v29, 0, sizeof(v29));
        v11 = type metadata accessor for FeedGroupRegion();
        v12 = sub_1BA66CEA8();
        swift_retain();
        sub_1BA6A14C8((uint64_t)&v31, (uint64_t)v29, a3, v11, v12, v32);
        sub_1BA65DBBC((uint64_t)v29, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
        swift_release();
        v13 = v32[0];
        v14 = v32[1];
        v15 = v32[2];
        v16 = v32[3];
        v27 = v33;
        v17 = v34;
        v18 = v35;
        v19 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_1BA66CEF0(0, v28[2] + 1, 1, v28);
        v21 = v19[2];
        v20 = v19[3];
        v22 = v19;
        if (v21 >= v20 >> 1)
          v22 = sub_1BA66CEF0((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
        v22[2] = v21 + 1;
        v23 = &v22[8 * v21];
        v6 = v22;
        v23[4] = v13;
        v23[5] = v14;
        v23[6] = v15;
        v23[7] = v16;
        *((_OWORD *)v23 + 4) = v27;
        v23[10] = v17;
        *((_BYTE *)v23 + 88) = v18;
        swift_release();
        ++v7;
        if (v10 == v25)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

unint64_t sub_1BA66CEA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C5220;
  if (!qword_1ED3C5220)
  {
    v1 = type metadata accessor for FeedGroupRegion();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupRegion, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C5220);
  }
  return result;
}

_QWORD *sub_1BA66CEF0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38FAD0(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9CE0, (uint64_t)&type metadata for FeedLayoutResult);
}

void sub_1BA66CF04()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C5418)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C5418);
  }
}

uint64_t sub_1BA66CF64(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA66CF9C(uint64_t a1, uint64_t *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t result;
  int64_t v35;
  unint64_t v36;
  unint64_t i;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v50 = a3;
  v51 = a1;
  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(a4 + 24);
  v9 = type metadata accessor for FeedScoredResult(0, v7, v8, a4);
  v48 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - v10;
  v12 = *(int *)(a4 + 40);
  v49 = v4;
  v13 = *(_QWORD *)(v4 + v12);
  v53 = v8;
  v54 = v13;
  v52 = v7;
  KeyPath = swift_getKeyPath();
  type metadata accessor for FeedGroupEmitter(255, v7, v8, v15);
  v16 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v16);
  v19 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAD6728, KeyPath, v16, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v17, MEMORY[0x1E0DEDD18], v18);
  swift_release();
  swift_bridgeObjectRelease();
  v20 = sub_1BA6E43EC(v19);
  swift_bridgeObjectRelease();
  v55 = v20;
  if ((v50 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v11, v49, v9);
    v21 = &v11[*(int *)(v9 + 44)];
    v23 = type metadata accessor for FeedGroupEmitTask.Result(0, v7, v8, v22);
    v24 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8);
    swift_retain();
    v24(v21, v23);
    v25 = sub_1BA4D7950();
    v27 = v26;
    swift_release();
    sub_1BA6EE5AC(&v54, v25, v27);
    swift_bridgeObjectRelease();
  }
  v54 = *(_QWORD *)(v51 + qword_1ED4767C8);
  MEMORY[0x1E0C80A78](v54);
  *(&v48 - 4) = v7;
  *(&v48 - 3) = v8;
  *(&v48 - 2) = (uint64_t)&v55;
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v16);
  v51 = sub_1BB873DA4();
  v28 = v55;
  v29 = v55 + 56;
  v30 = 1 << *(_BYTE *)(v55 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & *(_QWORD *)(v55 + 56);
  v33 = (unint64_t)(v30 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v35 = 0;
  if (v32)
    goto LABEL_8;
LABEL_9:
  v38 = v35 + 1;
  if (!__OFADD__(v35, 1))
  {
    if (v38 < v33)
    {
      v39 = *(_QWORD *)(v29 + 8 * v38);
      ++v35;
      if (v39)
        goto LABEL_22;
      v35 = v38 + 1;
      if (v38 + 1 >= v33)
        goto LABEL_28;
      v39 = *(_QWORD *)(v29 + 8 * v35);
      if (v39)
        goto LABEL_22;
      v35 = v38 + 2;
      if (v38 + 2 >= v33)
        goto LABEL_28;
      v39 = *(_QWORD *)(v29 + 8 * v35);
      if (v39)
      {
LABEL_22:
        v32 = (v39 - 1) & v39;
        for (i = __clz(__rbit64(v39)) + (v35 << 6); ; i = v36 | (v35 << 6))
        {
          v41 = (uint64_t *)(*(_QWORD *)(v28 + 48) + 16 * i);
          v42 = *v41;
          v43 = v41[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v44 = sub_1BA6E35A8(v42, v43);
          LOBYTE(v42) = v45;
          swift_bridgeObjectRelease();
          if ((v42 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v47 = *a2;
            v54 = *a2;
            *a2 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1BA7F2580();
              v47 = v54;
            }
            swift_bridgeObjectRelease();
            sub_1BA81C280(v44, v47);
            *a2 = v47;
            swift_bridgeObjectRelease();
            swift_release();
            result = swift_bridgeObjectRelease();
            if (!v32)
              goto LABEL_9;
          }
          else
          {
            result = swift_bridgeObjectRelease();
            if (!v32)
              goto LABEL_9;
          }
LABEL_8:
          v36 = __clz(__rbit64(v32));
          v32 &= v32 - 1;
        }
      }
      v40 = v38 + 3;
      if (v40 < v33)
      {
        v39 = *(_QWORD *)(v29 + 8 * v40);
        if (v39)
        {
          v35 = v40;
          goto LABEL_22;
        }
        while (1)
        {
          v35 = v40 + 1;
          if (__OFADD__(v40, 1))
            goto LABEL_30;
          if (v35 >= v33)
            break;
          v39 = *(_QWORD *)(v29 + 8 * v35);
          ++v40;
          if (v39)
            goto LABEL_22;
        }
      }
    }
LABEL_28:
    swift_release();
    swift_bridgeObjectRelease();
    return v51;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

int *sub_1BA66D3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  CFTimeInterval v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;

  v24 = a1;
  v25 = a4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - v13;
  v15 = *(_QWORD *)a3;
  LOBYTE(AssociatedTypeWitness) = *(_BYTE *)(a3 + 8);
  v16 = *(_QWORD *)(a3 + 16);
  v17 = *(_BYTE *)(a3 + 24);
  v18 = *(_QWORD *)(a3 + 32);
  v19 = *(_BYTE *)(a3 + 40);
  LOBYTE(a3) = *(_BYTE *)(a3 + 41);
  (*(void (**)(char *, uint64_t))(v20 + 16))((char *)&v24 - v13, v24);
  v21 = *(_QWORD *)(v5 + 56);
  v26 = v15;
  v27 = AssociatedTypeWitness;
  v28 = v16;
  v29 = v17;
  v30 = v18;
  v31 = v19;
  v32 = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  v22 = CACurrentMediaTime();
  return sub_1BA66D58C((uint64_t)v14, v21, a2, &v26, v25, (v22 - a5) * 1000.0);
}

int *sub_1BA66D58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *result;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;

  v10 = *a4;
  v25 = *((_BYTE *)a4 + 8);
  v24 = a4[2];
  v23 = *((_BYTE *)a4 + 24);
  v22 = a4[4];
  v20 = *((_BYTE *)a4 + 41);
  v21 = *((_BYTE *)a4 + 40);
  v12 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v11 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16 = type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a5, a1, v16);
  result = (int *)type metadata accessor for FeedGroupEmitTask.Result(0, v12, v11, v17);
  *(_QWORD *)(a5 + result[9]) = a2;
  *(_QWORD *)(a5 + result[10]) = a3;
  v19 = a5 + result[11];
  *(_QWORD *)v19 = v10;
  *(_BYTE *)(v19 + 8) = v25;
  *(_QWORD *)(v19 + 16) = v24;
  *(_BYTE *)(v19 + 24) = v23;
  *(_QWORD *)(v19 + 32) = v22;
  *(_BYTE *)(v19 + 40) = v21;
  *(_BYTE *)(v19 + 41) = v20;
  *(double *)(a5 + result[12]) = a6;
  return result;
}

void sub_1BA66D73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = v0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for FeedGroupEmitterEmbeddedOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  MEMORY[0x1E0C80A78](v5);
  v7 = type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v11 - v9, v1, v7);
  v10 = (char *)sub_1BA66D8A8 + 4 * byte_1BB880950[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA66D8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 1, 1, v1);
}

void sub_1BA66DB1C(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  _DWORD v20[8];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v20[7] = a2;
  v27 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for FeedGroupEmitTask.Result(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v26 = (char *)v20 - v8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v9 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v21 = swift_getAssociatedConformanceWitness();
  v11 = type metadata accessor for FeedGroupEmitterOutput(0, v9, v21, v10);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v20 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v25 = a1;
  v18((char *)v20 - v16, a1, v11);
  v18(v15, (uint64_t)v17, v11);
  v19 = (char *)sub_1BA66DD4C + 4 * byte_1BB89CF46[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA66DD4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  v5 = *(_QWORD *)(v4 - 128);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v4 - 152) + 16))(v5, *(_QWORD *)(v4 - 136), *(_QWORD *)(v4 - 144));
  v6 = swift_checkMetadataState();
  return sub_1BA66F9A0(v5, v6, v0, v7, *(double **)(v4 - 120), -200000.0, 1.0, -1.79769313e308);
}

uint64_t sub_1BA66E088@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FD0, (uint64_t (*)(uint64_t))sub_1BA81E0F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  *(_QWORD *)(inited + 32) = 0x72657474696D65;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v7 = *(_QWORD *)(v3 + *(int *)(a1 + 36));
  v9 = type metadata accessor for FeedGroupEmitter(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v8);
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = 0x74757074756FLL;
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
  *(_QWORD *)(inited + 120) = v13;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 96));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_0, v3, v13);
  *(_QWORD *)(inited + 128) = 0xD000000000000016;
  *(_QWORD *)(inited + 136) = 0x80000001BB9615F0;
  v15 = *(_QWORD *)(v3 + *(int *)(a1 + 48));
  *(_QWORD *)(inited + 168) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 144) = v15;
  swift_retain();
  sub_1BA76E994(inited);
  v16 = sub_1BB86E320();
  a2[3] = v16;
  a2[4] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3C80], v16);
  __swift_allocate_boxed_opaque_existential_0(a2);
  return sub_1BB86E314();
}

void sub_1BA66E2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v7 = type metadata accessor for FeedGroupEmitterEmbeddedOutput(0, a2, a3, a4);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = type metadata accessor for FeedGroupEmitterOutput(0, a2, a3, v9);
  v11 = MEMORY[0x1E0C80A78](v10);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v15 - v13, a1, v10, v11);
  v14 = (char *)sub_1BA66E3B4 + 4 * byte_1BB92C4B5[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_1BA66E3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v7;

  sub_1BA6EDAC4();
  v4 = v2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  sub_1BA6D24F0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0x6F7267207478656ELL;
  *(_QWORD *)(inited + 40) = 0xEA00000000007075;
  *(_QWORD *)(inited + 72) = v0;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(boxed_opaque_existential_0, v1, v0);
  v7 = sub_1BA76E994(inited);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  sub_1BA6EDA74(v4);
  return v7;
}

_QWORD *sub_1BA66E70C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *result;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7)
    v7 = *(_QWORD *)(v5 + 64);
  if (v7 <= 0x10)
    v8 = 16;
  else
    v8 = v7;
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8)
    v9 = v8;
  else
    v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  v11 = v8 + 1;
  switch(*((_BYTE *)a2 + v9))
  {
    case 0:
      (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
      v12 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v13 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v14 = *(_QWORD *)(v13 + 24);
      if (v14 < 0xFFFFFFFF)
      {
        v25 = *(_OWORD *)(v13 + 16);
        *(_OWORD *)v12 = *(_OWORD *)v13;
        *(_OWORD *)(v12 + 16) = v25;
      }
      else
      {
        *(_QWORD *)(v12 + 24) = v14;
        (**(void (***)(void))(v14 - 8))();
      }
      *((_BYTE *)a1 + v9) = 0;
      return a1;
    case 1:
      (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
      v15 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v16 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v17 = *(_QWORD *)(v16 + 24);
      if (v17 < 0xFFFFFFFF)
      {
        v26 = *(_OWORD *)(v16 + 16);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *(_OWORD *)(v15 + 16) = v26;
      }
      else
      {
        *(_QWORD *)(v15 + 24) = v17;
        (**(void (***)(void))(v17 - 8))();
      }
      v18 = 1;
      goto LABEL_41;
    case 2:
      (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
      v18 = 2;
      goto LABEL_41;
    case 3:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      v20 = 3;
      goto LABEL_24;
    case 4:
      v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      v20 = 4;
      goto LABEL_24;
    case 5:
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      v20 = 5;
LABEL_24:
      *((_BYTE *)a1 + v9) = v20;
      swift_bridgeObjectRetain();
      break;
    case 6:
      v23 = *((unsigned __int8 *)a2 + v8);
      if (v23 >= 3)
      {
        if (v8 <= 3)
          v24 = v8;
        else
          v24 = 4;
        __asm { BR              X13 }
      }
      if (v23 == 2)
      {
        v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        *((_BYTE *)a1 + v8) = 2;
        swift_bridgeObjectRetain();
      }
      else if (v23 == 1)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
        *((_BYTE *)a1 + v8) = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
        v28 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v29 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v30 = *(_QWORD *)(v29 + 24);
        if (v30 < 0xFFFFFFFF)
        {
          v31 = *(_OWORD *)(v29 + 16);
          *(_OWORD *)v28 = *(_OWORD *)v29;
          *(_OWORD *)(v28 + 16) = v31;
        }
        else
        {
          *(_QWORD *)(v28 + 24) = v30;
          (**(void (***)(void))(v30 - 8))();
        }
        *((_BYTE *)a1 + v8) = 0;
      }
      v32 = ((unint64_t)a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
      v33 = ((unint64_t)a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
      v34 = *(_QWORD *)(v33 + 24);
      *(_QWORD *)(v32 + 24) = v34;
      *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
      (**(void (***)(void))(v34 - 8))();
      v18 = 6;
LABEL_41:
      *((_BYTE *)a1 + v9) = v18;
      break;
    default:
      if (v9 <= 3)
        v10 = v9;
      else
        v10 = 4;
      __asm { BR              X13 }
      return result;
  }
  return a1;
}

uint64_t type metadata accessor for FeedGroupEmitterOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupEmitterOutput);
}

uint64_t type metadata accessor for FeedGroupEmitterEmbeddedOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupEmitterEmbeddedOutput);
}

double FeedGroupable.scoreThreshold.getter()
{
  return 0.0;
}

uint64_t sub_1BA66EA88(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  uint64_t v5;

  sub_1BA4AD288(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1BA66EAC4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t AssociatedConformanceWitness;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[14];
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = &v16[-v8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(&v16[-v8], a1, AssociatedTypeWitness);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v11 = (*(double (**)(uint64_t))(*(_QWORD *)(AssociatedConformanceWitness + 8) + 64))(AssociatedTypeWitness);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
    if (v11 <= 0.0)
      return;
  }
  v12 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  (*(void (**)(uint64_t, uint64_t))(v12 + 56))(AssociatedTypeWitness, v12);
  (*(double (**)(uint64_t, uint64_t))(v12 + 48))(AssociatedTypeWitness, v12);
  v13 = a3 + 8;
  v15 = a3[11];
  v14 = a3[12];
  __swift_project_boxed_opaque_existential_1(v13, v15);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 96))(&v17, AssociatedTypeWitness, AssociatedConformanceWitness);
  FeedPersonalizationServiceType.score<A>(group:context:)(a1, (uint64_t)&v17, v15, AssociatedTypeWitness, v14, v12);
}

void sub_1BA66ED18(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  _OWORD v52[2];

  v44 = (__int128 *)a4;
  v45 = a1;
  v47 = a3;
  v48 = a5;
  v8 = *(_QWORD *)(*a2 + 80);
  v9 = *(_QWORD *)(*a2 + 88);
  v10 = type metadata accessor for FeedGroupEmitTask.State(0, v8, v9, a4);
  v49 = *(_QWORD *)(v10 - 8);
  v50 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v42 - v11;
  v43 = a2[4];
  sub_1BA7AA598();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87D7A0;
  v46 = a2;
  v14 = sub_1BA4F5ADC();
  v16 = v15;
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v18 = sub_1BA6A2D8C();
  *(_QWORD *)(v13 + 64) = v18;
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v16;
  v19 = sub_1BA4D7950();
  *(_QWORD *)(v13 + 96) = v17;
  *(_QWORD *)(v13 + 104) = v18;
  *(_QWORD *)(v13 + 72) = v19;
  *(_QWORD *)(v13 + 80) = v20;
  v21 = (CACurrentMediaTime() - a6) * 1000.0;
  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v21 < 9.22337204e18)
  {
    v22 = MEMORY[0x1E0DEDCD8];
    *(_QWORD *)(v13 + 136) = MEMORY[0x1E0DEDC60];
    *(_QWORD *)(v13 + 144) = v22;
    *(_QWORD *)(v13 + 112) = (uint64_t)v21;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v26 = type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v25);
    v27 = v45;
    sub_1BA66F5C8(v26, v28, v29, v30);
    *(_QWORD *)(v13 + 176) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 184) = v18;
    *(_QWORD *)(v13 + 152) = v31;
    *(_QWORD *)(v13 + 160) = v32;
    v33 = sub_1BB87330C();
    sub_1BB86EF44("Emit task finished emitting from %{public}@ emitter, identifier=%{public}@, time=%llums, output=%{public}@", 106, 2, &dword_1BA493000, v43, v33, v13);
    swift_bridgeObjectRelease();
    v34 = v44[1];
    v51 = *v44;
    v52[0] = v34;
    *(_OWORD *)((char *)v52 + 10) = *(__int128 *)((char *)v44 + 26);
    v35 = v48;
    sub_1BA66D3D8(v27, v47, (uint64_t)&v51, v48, a6);
    v37 = type metadata accessor for FeedGroupEmitTask.Result(0, v8, v9, v36);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v12, v35, v37);
    v38 = v50;
    swift_storeEnumTagMultiPayload();
    sub_1BA5F0CF8((uint64_t)v12, v39, v40, v41);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v38);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1BA66F008@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t inited;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FD0, (uint64_t (*)(uint64_t))sub_1BA81E0F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  *(_QWORD *)(inited + 32) = 0x746C75736572;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v6 = (char *)v2 + *(int *)(a1 + 44);
  v8 = type metadata accessor for FeedGroupEmitTask.Result(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v7);
  *(_QWORD *)(inited + 72) = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0, v6, v8);
  strcpy((char *)(inited + 80), "rankMultiplier");
  *(_BYTE *)(inited + 95) = -18;
  v10 = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 96) = v2[1];
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 128) = 0x65726F6373;
  *(_QWORD *)(inited + 136) = 0xE500000000000000;
  v11 = *v2;
  *(_QWORD *)(inited + 168) = v10;
  *(_QWORD *)(inited + 144) = v11;
  sub_1BA76E994(inited);
  v12 = sub_1BB86E320();
  a2[3] = v12;
  a2[4] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3C80], v12);
  __swift_allocate_boxed_opaque_existential_0(a2);
  return sub_1BB86E314();
}

_QWORD *sub_1BA66F178(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _OWORD *v39;
  __int128 *v40;
  __int128 v41;
  __int128 v42;
  _QWORD *result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7)
    v7 = *(_QWORD *)(v5 + 64);
  if (v7 <= 0x10)
    v8 = 16;
  else
    v8 = v7;
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8)
    v9 = v8;
  else
    v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  v11 = v8 + 1;
  switch(*((_BYTE *)a2 + v9))
  {
    case 0:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v12 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v13 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v14 = *(_QWORD *)(v13 + 24);
      if (v14 < 0xFFFFFFFF)
      {
        v25 = *(_OWORD *)(v13 + 16);
        *(_OWORD *)v12 = *(_OWORD *)v13;
        *(_OWORD *)(v12 + 16) = v25;
      }
      else
      {
        *(_QWORD *)(v12 + 24) = v14;
        (**(void (***)(void))(v14 - 8))();
      }
      *((_BYTE *)a1 + v9) = 0;
      break;
    case 1:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v15 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v16 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v17 = *(_QWORD *)(v16 + 24);
      if (v17 < 0xFFFFFFFF)
      {
        v26 = *(_OWORD *)(v16 + 16);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *(_OWORD *)(v15 + 16) = v26;
      }
      else
      {
        *(_QWORD *)(v15 + 24) = v17;
        (**(void (***)(void))(v17 - 8))();
      }
      v18 = 1;
      goto LABEL_41;
    case 2:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v18 = 2;
      goto LABEL_41;
    case 3:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      v20 = 3;
      goto LABEL_24;
    case 4:
      v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      v20 = 4;
      goto LABEL_24;
    case 5:
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      v20 = 5;
LABEL_24:
      *((_BYTE *)a1 + v9) = v20;
      swift_bridgeObjectRetain();
      break;
    case 6:
      v23 = *((unsigned __int8 *)a2 + v8);
      if (v23 >= 3)
      {
        if (v8 <= 3)
          v24 = v8;
        else
          v24 = 4;
        __asm { BR              X13 }
      }
      if (v23 == 2)
      {
        v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        *((_BYTE *)a1 + v8) = 2;
        swift_bridgeObjectRetain();
      }
      else if (v23 == 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        *((_BYTE *)a1 + v8) = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        v28 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v29 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v30 = *(_QWORD *)(v29 + 24);
        if (v30 < 0xFFFFFFFF)
        {
          v31 = *(_OWORD *)(v29 + 16);
          *(_OWORD *)v28 = *(_OWORD *)v29;
          *(_OWORD *)(v28 + 16) = v31;
        }
        else
        {
          *(_QWORD *)(v28 + 24) = v30;
          (**(void (***)(void))(v30 - 8))();
        }
        *((_BYTE *)a1 + v8) = 0;
      }
      v32 = ((unint64_t)a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
      v33 = ((unint64_t)a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
      v34 = *(_QWORD *)(v33 + 24);
      *(_QWORD *)(v32 + 24) = v34;
      *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
      (**(void (***)(void))(v34 - 8))();
      v18 = 6;
LABEL_41:
      *((_BYTE *)a1 + v9) = v18;
      break;
    default:
      if (v9 <= 3)
        v10 = v9;
      else
        v10 = 4;
      __asm { BR              X13 }
      return result;
  }
  v35 = (_QWORD *)(((unint64_t)a1 + v9 + 8) & 0xFFFFFFFFFFFFFFF8);
  v36 = (_QWORD *)(((unint64_t)a2 + v9 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v35 = *v36;
  v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = (_OWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  v40 = (__int128 *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  v41 = *v40;
  v42 = v40[1];
  *(_OWORD *)((char *)v39 + 26) = *(__int128 *)((char *)v40 + 26);
  *v39 = v41;
  v39[1] = v42;
  *(_QWORD *)(((unint64_t)v39 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v40 + 49) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for FeedGroupEmitTask.Result(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupEmitTask.Result);
}

void sub_1BA66F5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for FeedGroupEmitterEmbeddedOutput(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  v7 = MEMORY[0x1E0C80A78](v6);
  v8 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a1);
  v11 = (char *)sub_1BA66F6C4 + 4 * byte_1BB92C4A0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA66F6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  sub_1BA6EDAC4();
  v5 = v2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  *(_QWORD *)(v4 - 96) = 0x756F72477478656ELL;
  *(_QWORD *)(v4 - 88) = 0xEA00000000002870;
  sub_1BB86DEE8();
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  v8 = *(_QWORD *)(v4 - 96);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  sub_1BA6EDA74(v5);
  return v8;
}

uint64_t sub_1BA66F97C()
{
  return sub_1BA4D7950();
}

uint64_t sub_1BA66F9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>)
{
  char *v11;
  uint64_t v12;
  uint64_t v13;

  *a5 = a6;
  a5[1] = a7;
  a5[2] = a8;
  v11 = (char *)a5 + *(int *)(type metadata accessor for FeedScoredResult(0, a2, a3, a4) + 44);
  v13 = type metadata accessor for FeedGroupEmitTask.Result(0, a2, a3, v12);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, a1, v13);
}

uint64_t FeedCursorGroup.init(createdDate:group:config:serviceConfig:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v25;
  uint64_t v27;

  v25 = sub_1BB86C8B0();
  v27 = *(_QWORD *)(v25 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(a7, a1, v25);
  v14 = (int *)type metadata accessor for FeedCursorGroup(0, a5, a6, v13);
  v15 = a7 + v14[9];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, a2, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v18 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v19 = sub_1BB86DEE8();
  v21 = v20;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a3, v18);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(a1, v25);
  v22 = (uint64_t *)(a7 + v14[10]);
  *v22 = v19;
  v22[1] = v21;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7 + v14[11], a4, a5);
}

void *sub_1BA66FC6C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_1BA670AB0();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = v18[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v17 + v20);
    v22 = *(_QWORD *)(v17 + v20 + 8);
    v23 = *(_QWORD *)(v17 + v20 + 16);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v24 = *v18;
    v24[1] = v19;
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v25 = v21;
    v25[1] = v22;
    v25[2] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)sub_1BA67035C(v22);
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BA66FE40(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  char v41;

  v3 = v2;
  v5 = *v2;
  sub_1BA670AB0();
  v41 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v40 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = *(_QWORD *)(v40 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v41 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v40 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = *(_QWORD *)(v40 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 24 * v21);
    v35 = *v33;
    v34 = v33[1];
    v36 = v33[2];
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA67035C(v34);
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v17);
    *v19 = v35;
    v19[1] = v34;
    v19[2] = v36;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = (_QWORD *)(v5 + 64);
  if ((v41 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t FeedJournal.add(entry:)(uint64_t *a1)
{
  _QWORD **v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  double v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v3 = *a1;
  v4 = a1[1];
  v5 = *((double *)a1 + 2);
  v6 = *v1;
  swift_bridgeObjectRetain();
  sub_1BA67035C(v4);
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1BA670884(0, v6[2] + 1, 1, v6);
    v6 = (_QWORD *)result;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    result = (uint64_t)sub_1BA670884((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    v6 = (_QWORD *)result;
  }
  v6[2] = v9 + 1;
  v10 = (double *)&v6[3 * v9];
  *((_QWORD *)v10 + 4) = v3;
  *((_QWORD *)v10 + 5) = v4;
  v10[6] = v5;
  *v2 = v6;
  if (*(_QWORD *)(v3 + 16))
  {
    sub_1BA670450(v3 + 32, (uint64_t)&v20);
    v11 = v20;
    v12 = v21;
    swift_bridgeObjectRetain();
    sub_1BA67036C((uint64_t)&v20);
    swift_bridgeObjectRetain();
    sub_1BA67035C(v4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = v2[1];
    v2[1] = 0x8000000000000000;
    sub_1BA6706CC(v3, v4, v11, v12, isUniquelyReferenced_nonNull_native, v5);
    v2[1] = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA670450(v3 + 32, (uint64_t)&v20);
    v14 = v20;
    v15 = v21;
    swift_bridgeObjectRetain();
    sub_1BA67036C((uint64_t)&v20);
    v16 = *(_QWORD *)(*v2 + 16) - 1;
    v17 = swift_isUniquelyReferenced_nonNull_native();
    v19 = v2[2];
    v2[2] = 0x8000000000000000;
    sub_1BA6706C0(v16, v14, v15, v17);
    v2[2] = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1BA67035C(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BA67036C(uint64_t a1)
{
  destroy for FeedJournalGroupResult(a1);
  return a1;
}

uint64_t destroy for FeedJournalGroupResult(uint64_t a1)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  swift_bridgeObjectRelease();
  v2 = a1 + 128;
  switch(*(_BYTE *)(a1 + 192))
  {
    case 0:
    case 1:
    case 2:
      __swift_destroy_boxed_opaque_existential_1(v2);
      goto LABEL_5;
    case 3:
      __swift_destroy_boxed_opaque_existential_1(v2);
      goto LABEL_8;
    case 4:
    case 5:
    case 6:
LABEL_8:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 200))
        goto LABEL_9;
      return swift_release();
    default:
LABEL_5:
      if (!*(_QWORD *)(a1 + 200))
        return swift_release();
LABEL_9:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 208) >= 2uLL)
        swift_bridgeObjectRelease();
      return swift_release();
  }
}

uint64_t sub_1BA670450(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FeedJournalGroup(a2, a1);
  return a2;
}

void initializeWithCopy for FeedJournalGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 32;
  v7 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(v6 + 32);
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v10 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 106) = *(_OWORD *)(a2 + 106);
  v11 = *(unsigned __int8 *)(a2 + 192);
  swift_bridgeObjectRetain();
  __asm { BR              X9 }
}

uint64_t sub_1BA670548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(v0 + 152) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(v3, v2);
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v1 + 168);
  *(_BYTE *)(v0 + 192) = 0;
  v5 = *(_QWORD *)(v1 + 200);
  if (v5)
  {
    *(_QWORD *)(v0 + 200) = v5;
    v6 = *(_QWORD *)(v1 + 208);
    swift_bridgeObjectRetain();
    if (v6 >= 2)
      swift_bridgeObjectRetain();
    v7 = *(_QWORD *)(v1 + 216);
    *(_QWORD *)(v0 + 208) = v6;
    *(_QWORD *)(v0 + 216) = v7;
  }
  else
  {
    *(_OWORD *)(v0 + 200) = *(_OWORD *)(v1 + 200);
    *(_QWORD *)(v0 + 216) = *(_QWORD *)(v1 + 216);
  }
  v8 = *(_QWORD *)(v1 + 232);
  v9 = *(_QWORD *)(v1 + 240);
  *(_QWORD *)(v0 + 224) = *(_QWORD *)(v1 + 224);
  *(_QWORD *)(v0 + 232) = v8;
  *(_QWORD *)(v0 + 240) = v9;
  swift_retain();
  return v0;
}

uint64_t sub_1BA6706C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA6A3CB0(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA6B3D08);
}

uint64_t sub_1BA6706CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_1BA6E35A8(a3, a4);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a5 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7] + 24 * v16;
        v24 = *(_QWORD *)(v23 + 8);
        swift_bridgeObjectRelease();
        result = sub_1BA5B18CC(v24);
        *(_QWORD *)v23 = a1;
        *(_QWORD *)(v23 + 8) = a2;
        *(double *)(v23 + 16) = a6;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a5 & 1) == 0)
    {
      sub_1BA66FC6C();
      goto LABEL_7;
    }
    sub_1BA66FE40(v19, a5 & 1);
    v26 = sub_1BA6E35A8(a3, a4);
    if ((v20 & 1) == (v27 & 1))
    {
      v16 = v26;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BA670830(v16, a3, a4, a1, a2, v22, a6);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

unint64_t sub_1BA670830(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, double a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a6[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a6[6] + 16 * result);
  *v7 = a2;
  v7[1] = a3;
  v8 = a6[7] + 24 * result;
  *(_QWORD *)v8 = a4;
  *(_QWORD *)(v8 + 8) = a5;
  *(double *)(v8 + 16) = a7;
  v9 = a6[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a6[2] = v11;
  return result;
}

_QWORD *sub_1BA670884(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3CFB60, (uint64_t)&type metadata for FeedJournalEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA6709BC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6709BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA670AB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFA98)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFA98);
  }
}

void sub_1BA670B14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B08F0)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B08F0);
  }
}

uint64_t sub_1BA670B84(_QWORD *a1, uint64_t *a2, uint64_t a3, double a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v5 + 304) = v4;
  *(double *)(v5 + 296) = a4;
  *(_QWORD *)(v5 + 280) = a2;
  *(_QWORD *)(v5 + 288) = a3;
  v7 = *v4;
  v8 = *a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  *(_QWORD *)(v5 + 312) = swift_task_alloc();
  *(_QWORD *)(v5 + 320) = swift_task_alloc();
  *(_QWORD *)(v5 + 328) = swift_task_alloc();
  *(_QWORD *)(v5 + 336) = swift_task_alloc();
  *(_QWORD *)(v5 + 344) = swift_task_alloc();
  *(_QWORD *)(v5 + 352) = swift_task_alloc();
  v9 = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v5 + 360) = v9;
  v10 = sub_1BB873A2C();
  *(_QWORD *)(v5 + 368) = v10;
  *(_QWORD *)(v5 + 376) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v5 + 384) = swift_task_alloc();
  *(_QWORD *)(v5 + 392) = swift_task_alloc();
  *(_QWORD *)(v5 + 400) = swift_task_alloc();
  *(_QWORD *)(v5 + 408) = *(_QWORD *)(v7 + 88);
  *(_QWORD *)(v5 + 416) = *(_QWORD *)(v7 + 80);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v5 + 424) = AssociatedConformanceWitness;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  *(_QWORD *)(v5 + 432) = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v5 + 440) = AssociatedTypeWitness;
  *(_QWORD *)(v5 + 448) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v5 + 456) = swift_task_alloc();
  *(_QWORD *)(v5 + 464) = swift_task_alloc();
  v13 = swift_checkMetadataState();
  *(_QWORD *)(v5 + 472) = v13;
  *(_QWORD *)(v5 + 480) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v5 + 488) = swift_task_alloc();
  v15 = type metadata accessor for FeedServiceFetchResult.Internal(0, v9, AssociatedConformanceWitness, v14);
  *(_QWORD *)(v5 + 496) = v15;
  *(_QWORD *)(v5 + 504) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v5 + 512) = swift_task_alloc();
  *(_QWORD *)(v5 + 520) = swift_task_alloc();
  *(_QWORD *)(v5 + 528) = *a1;
  return swift_task_switch();
}

uint64_t type metadata accessor for FeedServiceFetchResult.Internal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedServiceFetchResult.Internal);
}

uint64_t sub_1BA670E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  uint64_t v45;
  uint64_t (*v46)(void);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(void);
  uint64_t v59;
  unint64_t v60;

  v5 = FeedCursor.nextSlotIndex.getter(a1, a2, a3, a4);
  if ((FeedCursor.reachedEnd.getter(v5, v6, v7, v8) & 1) != 0)
  {
    sub_1BAAECCA4(*(_QWORD *)(v4 + 176) + 112, v4 + 16);
    if (*(_QWORD *)(v4 + 40))
    {
      sub_1BA4CECCC((__int128 *)(v4 + 16), v4 + 56);
      v10 = *(_QWORD *)(v4 + 80);
      v11 = *(_QWORD *)(v4 + 88);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 56), v10);
      if (FeedOfflineProviding.isOffline.getter(v10, v11))
      {
        FeedCursor.feedMode.getter(&v59);
        if (v59 == 1)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v41 = sub_1BB874398();
          swift_bridgeObjectRelease();
          if ((v41 & 1) == 0)
          {
            v54 = type metadata accessor for FeedServiceError(0, *(_QWORD *)(*(_QWORD *)(v4 + 184) + 80), *(_QWORD *)(*(_QWORD *)(v4 + 184) + 88), v42);
            MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceError<A>, v54);
            swift_allocError();
            *(_QWORD *)v55 = 2;
            *(_QWORD *)(v55 + 8) = 0;
            *(_QWORD *)(v55 + 16) = 0;
            *(_QWORD *)(v55 + 24) = 0;
            *(_BYTE *)(v55 + 32) = 6;
            swift_willThrow();
            __swift_destroy_boxed_opaque_existential_1(v4 + 56);
            v44 = *(uint64_t (**)(void))(v4 + 8);
            return v44();
          }
        }
      }
      __swift_destroy_boxed_opaque_existential_1(v4 + 56);
    }
    else
    {
      sub_1BA65DBBC(v4 + 16, &qword_1ED3B1DE0, &qword_1ED3B1DD8, (uint64_t)&protocol descriptor for FeedOfflineProviding);
    }
    v43 = *(_QWORD *)(v4 + 184);
    **(_QWORD **)(v4 + 152) = *(_QWORD *)(v4 + 160);
    type metadata accessor for FeedServiceFetchResult.Internal(0, *(_QWORD *)(v43 + 80), *(_QWORD *)(v43 + 88), v26);
    swift_storeEnumTagMultiPayload();
    v58 = *(uint64_t (**)(void))(v4 + 8);
    swift_retain();
    v44 = v58;
    return v44();
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v4 + 160) + qword_1ED4768A0);
  *(_QWORD *)(v4 + 136) = v12;
  v13 = *(_QWORD *)(v4 + 184);
  v14 = *(_QWORD *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 88);
  v16 = type metadata accessor for FeedDatabaseGroup(255, v14, v15, v9);
  v17 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v17);
  sub_1BB873144();
  v19 = *(uint64_t **)(v4 + 112);
  *(_QWORD *)(v4 + 192) = v19;
  if (v19)
  {
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v20 = swift_allocObject();
    v21 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v20 + 16) = xmmword_1BB87A390;
    v22 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v20 + 56) = v21;
    *(_QWORD *)(v20 + 64) = v22;
    *(_QWORD *)(v20 + 32) = v5;
    v23 = MEMORY[0x1BCCE37B4](v12, v16);
    *(_QWORD *)(v20 + 96) = v21;
    *(_QWORD *)(v20 + 104) = v22;
    *(_QWORD *)(v20 + 72) = v23;
    sub_1BB87330C();
    sub_1BB86EF44("Service attempting to create group from a database group, slot=%ld, available=%ld", v56, v57);
    swift_bridgeObjectRelease();
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 200) = v24;
    *v24 = v4;
    v24[1] = sub_1BAAE1A88;
    return sub_1BAAE2E50(*(_QWORD *)(v4 + 152), v19, *(_QWORD *)(v4 + 160), *(double *)(v4 + 168));
  }
  v27 = *(_QWORD *)(*(_QWORD *)(v4 + 160) + qword_1ED4767E0);
  *(_QWORD *)(v4 + 104) = v5;
  type metadata accessor for FeedGroupEmitter(255, v14, v15, v18);
  v28 = sub_1BB872EE0();
  v29 = MEMORY[0x1E0DEB418];
  MEMORY[0x1BCCE3148](v4 + 104, v27, MEMORY[0x1E0DEB418], v28, MEMORY[0x1E0DEB428]);
  v30 = *(_QWORD *)(v4 + 96);
  *(_QWORD *)(v4 + 216) = v30;
  if (!v30)
  {
LABEL_12:
    v31 = *(_QWORD *)(v4 + 160);
    v32 = *(_QWORD *)(*(_QWORD *)(v4 + 176) + 40);
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87A390;
    v34 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v33 + 56) = v29;
    *(_QWORD *)(v33 + 64) = v34;
    *(_QWORD *)(v33 + 32) = v5;
    v59 = 0;
    v60 = 0xE000000000000000;
    *(_QWORD *)(v4 + 144) = *(_QWORD *)(v31 + qword_1ED4767C8);
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF68], v28);
    sub_1BB874350();
    v36 = v59;
    v35 = v60;
    *(_QWORD *)(v33 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v33 + 104) = sub_1BA6A2D8C();
    *(_QWORD *)(v33 + 72) = v36;
    *(_QWORD *)(v33 + 80) = v35;
    v37 = sub_1BB87330C();
    sub_1BB86EF44("Service attempting to create group from open emitters, slot=%ld, available=%{public}@", 85, 2, &dword_1BA493000, v32, v37, v33);
    swift_bridgeObjectRelease();
    v38 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 248) = v38;
    *v38 = v4;
    v38[1] = sub_1BAAE1B20;
    return sub_1BA54D5F4(*(_QWORD *)(v4 + 152), *(uint64_t **)(v4 + 160), *(double *)(v4 + 168), v39, v40);
  }
  *(_QWORD *)(v4 + 120) = v30;
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v28);
  if ((sub_1BB873168() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v45 = *(_QWORD *)(*(_QWORD *)(v4 + 176) + 40);
  v46 = MEMORY[0x1E0DED1E8];
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1BB87A390;
  v48 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v47 + 56) = v29;
  *(_QWORD *)(v47 + 64) = v48;
  *(_QWORD *)(v47 + 32) = v5;
  v59 = 0;
  v60 = 0xE000000000000000;
  *(_QWORD *)(v4 + 128) = v30;
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF68], v28);
  sub_1BB874350();
  v49 = v59;
  v50 = v60;
  *(_QWORD *)(v47 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v47 + 104) = sub_1BA6A2D8C();
  *(_QWORD *)(v47 + 72) = v49;
  *(_QWORD *)(v47 + 80) = v50;
  v51 = sub_1BB87330C();
  sub_1BB86EF44("Service attempting to create group from slotted emitter, slot=%ld, available=%{public}@", 87, 2, &dword_1BA493000, v45, v51, v47);
  swift_bridgeObjectRelease();
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9FF0, v29, (uint64_t (*)(_QWORD, uint64_t))v46);
  v52 = swift_allocObject();
  *(_QWORD *)(v4 + 224) = v52;
  *(_OWORD *)(v52 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v52 + 32) = v5;
  v53 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 232) = v53;
  *v53 = v4;
  v53[1] = sub_1BA49B5CC;
  return sub_1BA4ECF08(*(_QWORD *)(v4 + 152), v30, *(uint64_t **)(v4 + 160), v52, *(double *)(v4 + 168));
}

uint64_t FeedCursor.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t inited;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v82;

  v2 = v1;
  v3 = *v1;
  v4 = (uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 264));
  swift_beginAccess();
  v5 = *v4;
  if (*v4)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FD0, (uint64_t (*)(uint64_t))sub_1BA81E0F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BB881B80;
    *(_QWORD *)(v6 + 32) = 0x696669746E656469;
    *(_QWORD *)(v6 + 40) = 0xEA00000000007265;
    v7 = v2[3];
    v8 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 48) = v2[2];
    *(_QWORD *)(v6 + 56) = v7;
    *(_QWORD *)(v6 + 72) = v8;
    *(_QWORD *)(v6 + 80) = 1684957547;
    *(_QWORD *)(v6 + 88) = 0xE400000000000000;
    *(_BYTE *)(v6 + 96) = *((_BYTE *)v2 + 32);
    *(_QWORD *)(v6 + 120) = &type metadata for FeedCursorKind;
    *(_QWORD *)(v6 + 128) = 0x65646F4D64656566;
    *(_QWORD *)(v6 + 136) = 0xE800000000000000;
    v9 = v3;
    v10 = *(_QWORD *)(*v2 + 80);
    v11 = *(_QWORD *)(*v2 + 88);
    swift_bridgeObjectRetain();
    swift_retain();
    FeedServiceConfigType.feedMode.getter(v10, v11, &v82);
    v13 = 0x746C7561666564;
    if (v82)
      v13 = 0x656E696C66666FLL;
    *(_QWORD *)(v6 + 144) = v13;
    *(_QWORD *)(v6 + 152) = 0xE700000000000000;
    v14 = *(uint64_t *)((char *)v2 + qword_1ED4767E8);
    v15 = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v6 + 168) = v8;
    *(_QWORD *)(v6 + 176) = 0x6F72476C61746F74;
    *(_QWORD *)(v6 + 184) = 0xEF746E756F437075;
    *(_QWORD *)(v6 + 192) = v14;
    *(_QWORD *)(v6 + 216) = v15;
    strcpy((char *)(v6 + 224), "openEmitters");
    *(_BYTE *)(v6 + 237) = 0;
    *(_WORD *)(v6 + 238) = -5120;
    v16 = *(uint64_t *)((char *)v2 + qword_1ED4767C8);
    v17 = *(_QWORD *)(v9 + 80);
    v18 = *(_QWORD *)(v9 + 88);
    type metadata accessor for FeedGroupEmitter(255, v17, v18, v12);
    v19 = sub_1BB872EE0();
    *(_QWORD *)(v6 + 240) = v16;
    *(_QWORD *)(v6 + 264) = v19;
    strcpy((char *)(v6 + 272), "stagedEmitters");
    v20 = *(uint64_t *)((char *)v2 + qword_1ED476898);
    v80 = v5;
    *(_BYTE *)(v6 + 287) = -18;
    *(_QWORD *)(v6 + 288) = v20;
    *(_QWORD *)(v6 + 312) = v19;
    *(_QWORD *)(v6 + 320) = 0x45646574746F6C73;
    *(_QWORD *)(v6 + 328) = 0xEF7372657474696DLL;
    v21 = *(uint64_t *)((char *)v2 + qword_1ED4767E0);
    v22 = sub_1BB872814();
    *(_QWORD *)(v6 + 336) = v21;
    v23 = *(uint64_t *)((char *)v2 + qword_1ED4769B0);
    *(_QWORD *)(v6 + 360) = v22;
    strcpy((char *)(v6 + 368), "expandEmitters");
    *(_BYTE *)(v6 + 383) = -18;
    *(_QWORD *)(v6 + 384) = v23;
    *(_QWORD *)(v6 + 408) = v19;
    strcpy((char *)(v6 + 416), "nextSlotIndex");
    *(_WORD *)(v6 + 430) = -4864;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = swift_bridgeObjectRetain();
    v28 = FeedCursor.nextSlotIndex.getter(v24, v25, v26, v27);
    *(_QWORD *)(v6 + 432) = v28;
    v29 = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v6 + 456) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v6 + 464) = 0x4564656863616572;
    *(_QWORD *)(v6 + 472) = 0xEA0000000000646ELL;
    v33 = FeedCursor.reachedEnd.getter(v28, v30, v31, v32);
    v34 = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(v6 + 480) = v33 & 1;
    *(_QWORD *)(v6 + 504) = v34;
    *(_QWORD *)(v6 + 512) = 0xD000000000000012;
    *(_QWORD *)(v6 + 520) = 0x80000001BB962450;
    v35 = *(uint64_t *)((char *)v2 + qword_1ED4767D0);
    v37 = type metadata accessor for FeedCursorGroup(0, v17, v18, v36);
    v38 = MEMORY[0x1BCCE37B4](v35, v37);
    *(_QWORD *)(v6 + 552) = v29;
    *(_QWORD *)(v6 + 528) = v38;
    *(_QWORD *)(v6 + 560) = 0xD000000000000013;
    *(_QWORD *)(v6 + 568) = 0x80000001BB962470;
    v39 = *(uint64_t *)((char *)v2 + qword_1ED4768A0);
    v41 = type metadata accessor for FeedDatabaseGroup(0, v17, v18, v40);
    v42 = MEMORY[0x1BCCE37B4](v39, v41);
    *(_QWORD *)(v6 + 600) = v29;
    *(_QWORD *)(v6 + 576) = v42;
    *(_QWORD *)(v6 + 608) = 0x737275437478656ELL;
    *(_QWORD *)(v6 + 616) = 0xEA0000000000726FLL;
    *(_QWORD *)(v6 + 648) = type metadata accessor for FeedNextCursor(0, v17, v18, v43);
    *(_QWORD *)(v6 + 624) = v80;
    swift_retain();
    sub_1BA76E994(v6);
    v44 = sub_1BB86E320();
    a1[3] = v44;
    a1[4] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3C80], v44);
    __swift_allocate_boxed_opaque_existential_0(a1);
    sub_1BB86E314();
    return swift_release();
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FD0, (uint64_t (*)(uint64_t))sub_1BA81E0F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB8F8740;
    *(_QWORD *)(inited + 32) = 0x696669746E656469;
    *(_QWORD *)(inited + 40) = 0xEA00000000007265;
    v47 = v2[3];
    v48 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v2[2];
    *(_QWORD *)(inited + 56) = v47;
    *(_QWORD *)(inited + 72) = v48;
    *(_QWORD *)(inited + 80) = 1684957547;
    *(_QWORD *)(inited + 88) = 0xE400000000000000;
    *(_BYTE *)(inited + 96) = *((_BYTE *)v2 + 32);
    *(_QWORD *)(inited + 120) = &type metadata for FeedCursorKind;
    *(_QWORD *)(inited + 128) = 0x65646F4D64656566;
    *(_QWORD *)(inited + 136) = 0xE800000000000000;
    v49 = *(_QWORD *)(*v2 + 80);
    v50 = *(_QWORD *)(*v2 + 88);
    swift_bridgeObjectRetain();
    FeedServiceConfigType.feedMode.getter(v49, v50, &v82);
    v52 = 0x746C7561666564;
    if (v82)
      v52 = 0x656E696C66666FLL;
    *(_QWORD *)(inited + 144) = v52;
    *(_QWORD *)(inited + 152) = 0xE700000000000000;
    *(_QWORD *)(inited + 168) = v48;
    *(_QWORD *)(inited + 176) = 0x6F72476C61746F74;
    *(_QWORD *)(inited + 184) = 0xEF746E756F437075;
    v53 = MEMORY[0x1E0DEB418];
    *(_QWORD *)(inited + 192) = *(uint64_t *)((char *)v2 + qword_1ED4767E8);
    *(_QWORD *)(inited + 216) = v53;
    strcpy((char *)(inited + 224), "openEmitters");
    *(_BYTE *)(inited + 237) = 0;
    *(_WORD *)(inited + 238) = -5120;
    v54 = *(uint64_t *)((char *)v2 + qword_1ED4767C8);
    v55 = *(_QWORD *)(v3 + 80);
    v56 = *(_QWORD *)(v3 + 88);
    type metadata accessor for FeedGroupEmitter(255, v55, v56, v51);
    v57 = sub_1BB872EE0();
    *(_QWORD *)(inited + 240) = v54;
    *(_QWORD *)(inited + 264) = v57;
    *(_QWORD *)(inited + 272) = 0x45646574746F6C73;
    *(_QWORD *)(inited + 280) = 0xEF7372657474696DLL;
    v58 = *(uint64_t *)((char *)v2 + qword_1ED4767E0);
    v59 = sub_1BB872814();
    *(_QWORD *)(inited + 288) = v58;
    *(_QWORD *)(inited + 312) = v59;
    strcpy((char *)(inited + 320), "stagedEmitters");
    *(_BYTE *)(inited + 335) = -18;
    *(_QWORD *)(inited + 336) = *(uint64_t *)((char *)v2 + qword_1ED476898);
    *(_QWORD *)(inited + 360) = v57;
    strcpy((char *)(inited + 368), "expandEmitters");
    *(_BYTE *)(inited + 383) = -18;
    *(_QWORD *)(inited + 384) = *(uint64_t *)((char *)v2 + qword_1ED4769B0);
    *(_QWORD *)(inited + 408) = v57;
    strcpy((char *)(inited + 416), "nextSlotIndex");
    *(_WORD *)(inited + 430) = -4864;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60 = swift_bridgeObjectRetain();
    v64 = FeedCursor.nextSlotIndex.getter(v60, v61, v62, v63);
    *(_QWORD *)(inited + 432) = v64;
    v65 = MEMORY[0x1E0DEB418];
    *(_QWORD *)(inited + 456) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(inited + 464) = 0x4564656863616572;
    *(_QWORD *)(inited + 472) = 0xEA0000000000646ELL;
    v69 = FeedCursor.reachedEnd.getter(v64, v66, v67, v68);
    v70 = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(inited + 480) = v69 & 1;
    *(_QWORD *)(inited + 504) = v70;
    *(_QWORD *)(inited + 512) = 0xD000000000000012;
    *(_QWORD *)(inited + 520) = 0x80000001BB962450;
    v71 = *(uint64_t *)((char *)v2 + qword_1ED4767D0);
    v73 = type metadata accessor for FeedCursorGroup(0, v55, v56, v72);
    v74 = MEMORY[0x1BCCE37B4](v71, v73);
    *(_QWORD *)(inited + 552) = v65;
    *(_QWORD *)(inited + 528) = v74;
    *(_QWORD *)(inited + 560) = 0xD000000000000013;
    *(_QWORD *)(inited + 568) = 0x80000001BB962470;
    v75 = *(uint64_t *)((char *)v2 + qword_1ED4768A0);
    v77 = type metadata accessor for FeedDatabaseGroup(0, v55, v56, v76);
    v78 = MEMORY[0x1BCCE37B4](v75, v77);
    *(_QWORD *)(inited + 600) = v65;
    *(_QWORD *)(inited + 576) = v78;
    sub_1BA76E994(inited);
    v79 = sub_1BB86E320();
    a1[3] = v79;
    a1[4] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3C80], v79);
    __swift_allocate_boxed_opaque_existential_0(a1);
    return sub_1BB86E314();
  }
}

uint64_t FeedCursor.reachedEnd.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v5 = v4;
  v6 = *v4;
  v7 = *(_QWORD *)((char *)v4 + qword_1ED4767D0);
  v8 = *(_QWORD *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 88);
  v10 = type metadata accessor for FeedCursorGroup(0, v8, v9, a4);
  if (MEMORY[0x1BCCE37B4](v7, v10) == *(_QWORD *)((char *)v5 + qword_1ED4767E8))
    return 1;
  type metadata accessor for FeedDatabaseGroup(255, v8, v9, v11);
  v13 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v13);
  if ((sub_1BB873168() & 1) == 0)
    return 0;
  type metadata accessor for FeedGroupEmitter(255, v8, v9, v14);
  v15 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v15);
  if ((sub_1BB873168() & 1) == 0)
    return 0;
  v16 = *(_QWORD *)((char *)v5 + qword_1ED4767E0);
  v17 = v16 + 64;
  v18 = 1 << *(_BYTE *)(v16 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v16 + 64);
  v21 = (unint64_t)(v18 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v23 = 0;
  while (v20)
  {
    v24 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    v25 = v24 | (v23 << 6);
LABEL_23:
    v29 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v25);
    v30 = swift_bridgeObjectRetain();
    if (v29 < FeedCursor.nextSlotIndex.getter(v30, v31, v32, v33))
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v34 = sub_1BB873168();
      result = swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        v12 = 0;
LABEL_28:
        swift_release();
        return v12;
      }
    }
  }
  v26 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v26 >= v21)
    goto LABEL_27;
  v27 = *(_QWORD *)(v17 + 8 * v26);
  ++v23;
  if (v27)
    goto LABEL_22;
  v23 = v26 + 1;
  if (v26 + 1 >= v21)
    goto LABEL_27;
  v27 = *(_QWORD *)(v17 + 8 * v23);
  if (v27)
  {
LABEL_22:
    v20 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v23 << 6);
    goto LABEL_23;
  }
  v28 = v26 + 2;
  if (v28 >= v21)
  {
LABEL_27:
    v12 = 1;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v17 + 8 * v28);
  if (v27)
  {
    v23 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    v23 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v23 >= v21)
      goto LABEL_27;
    v27 = *(_QWORD *)(v17 + 8 * v23);
    ++v28;
    if (v27)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FeedGroupEmitter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupEmitter);
}

uint64_t type metadata accessor for FeedDatabaseGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedDatabaseGroup);
}

uint64_t FeedCursor.nextSlotIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v4 + qword_1ED4767D0);
  v6 = type metadata accessor for FeedCursorGroup(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  result = MEMORY[0x1BCCE37B4](v5, v6);
  v8 = *(_QWORD *)(v4 + qword_1ED4767F0);
  v9 = __OFADD__(result, v8);
  v10 = result + v8;
  if (v9)
  {
    __break(1u);
    goto LABEL_5;
  }
  v11 = *(_QWORD *)(v4 + qword_1ED476770);
  result = v10 + v11;
  if (__OFADD__(v10, v11))
LABEL_5:
    __break(1u);
  return result;
}

uint64_t FeedServiceConfigType.feedMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  _BYTE *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t result;
  uint64_t v13;
  _BYTE *v14;

  v14 = a3;
  type metadata accessor for FeedServiceOptions(0);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78]();
  v10 = (char *)&v13 - v9;
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  LOBYTE(v8) = *v6;
  result = sub_1BA672260((uint64_t)v6);
  *v14 = v8;
  return result;
}

uint64_t FeedServiceContextType.serviceOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3C20E8 != -1)
    swift_once();
  v2 = type metadata accessor for FeedServiceOptions(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3C40C8);
  return sub_1BA67229C(v3, a1);
}

uint64_t sub_1BA672260(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedServiceOptions(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA67229C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedServiceOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FeedCursorContainer.feedMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)&v14 - v10;
  FeedCursorContainer.serviceContext.getter(a1, a2, a3, (uint64_t)&v14 - v10);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  FeedServiceContextType.feedMode.getter(AssociatedTypeWitness, AssociatedConformanceWitness, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
}

uint64_t FeedServiceContextType.feedMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  uint64_t v10;

  v6 = type metadata accessor for FeedServiceOptions(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  LOBYTE(a2) = *v8;
  result = sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedServiceOptions);
  *a3 = a2;
  return result;
}

uint64_t type metadata accessor for FeedServiceOptions(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3C20F0);
}

uint64_t FeedCursorContainer.serviceContext.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v7)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t AssociatedTypeWitness;

  if (a1 < 0)
  {
    v9 = *(_QWORD *)(a1 + qword_1ED476488) + *(_QWORD *)(**(_QWORD **)(a1 + qword_1ED476488) + 96);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a4, v9, AssociatedTypeWitness);
  }
  else
  {
    v7 = *(void (**)(uint64_t, uint64_t))(a3 + 48);
    swift_retain();
    v7(a2, a3);
    return swift_release();
  }
}

void sub_1BA672668(_QWORD *a1)
{
  FormatColor.encode(to:)(a1);
}

void FormatColor.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v32[22];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v32[7] = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v32[6] = (char *)v32 - v7;
  MEMORY[0x1E0C80A78](v8);
  v32[5] = (char *)v32 - v9;
  MEMORY[0x1E0C80A78](v10);
  v32[4] = (char *)v32 - v11;
  MEMORY[0x1E0C80A78](v12);
  v32[3] = (char *)v32 - v13;
  MEMORY[0x1E0C80A78](v14);
  v32[2] = (char *)v32 - v15;
  MEMORY[0x1E0C80A78](v16);
  v32[1] = (char *)v32 - v17;
  MEMORY[0x1E0C80A78](v18);
  v32[0] = (char *)v32 - v19;
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v32 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *v2;
  v28 = a1[3];
  v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  v30 = sub_1BA6B8518();
  v32[9] = v26;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatColor, v31, v28, (uint64_t)&type metadata for FormatColor, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v29, (uint64_t)v26, v30, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA6728E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = sub_1BB86EB84();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v1, v7, v6);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v8 = *(_QWORD *)(v2 - 184);
  sub_1BACFE880(0, v4, v3, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80(v8, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

unint64_t sub_1BA673264()
{
  unint64_t result;

  result = qword_1ED39B480;
  if (!qword_1ED39B480)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorBinding, &type metadata for FormatColorBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39B480);
  }
  return result;
}

unint64_t sub_1BA6732A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B948;
  if (!qword_1ED39B948)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B79F0, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B948);
  }
  return result;
}

unint64_t sub_1BA673310()
{
  unint64_t result;

  result = qword_1ED39B660;
  if (!qword_1ED39B660)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProcessedColor, &type metadata for FormatProcessedColor);
    atomic_store(result, (unint64_t *)&qword_1ED39B660);
  }
  return result;
}

unint64_t sub_1BA673354()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39FF60;
  if (!qword_1ED39FF60)
  {
    sub_1BA4CDF6C(255, &qword_1ED3BE6B0, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39FF60);
  }
  return result;
}

uint64_t FormatTextNodeStyle.__deallocating_deinit()
{
  FormatTextNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatTextNodeStyle.deinit()
{
  uint64_t v0;
  _QWORD v2[16];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CD8(*(_QWORD *)(v0 + 56));
  sub_1BA744E38(v0 + 64, (uint64_t)v2, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA6A0C50(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
  swift_bridgeObjectRelease();
  sub_1BA6E8A78(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272), *(_BYTE *)(v0 + 280));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E8A90(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 528));
  sub_1BA6E8A90(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BA6734A0(_QWORD *a1)
{
  return FormatSwitchNode.encode(to:)(a1);
}

uint64_t FormatSwitchNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  __int128 v54;
  char v55;
  char v56;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v48 - v8;
  MEMORY[0x1E0C80A78](v9);
  v51 = (char *)&v48 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v48 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v48 - v15;
  sub_1BAEC2418(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v22 = sub_1BAEC2508();
  v23 = sub_1BA4A2870(&qword_1ED3D0C70, (uint64_t (*)(uint64_t))sub_1BAEC2508, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v24, v20, v4, v22, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v19, v23, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v25 = v2[2];
  v26 = v2[3];
  v52 = v2;
  v27 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v27 != -1)
    swift_once();
  v28 = sub_1BB86EB84();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C20);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  v30(v16, v29, v28);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v31 = v53;
  sub_1BAD265E8(v25, v26, 0, 0, 0, (uint64_t)v16, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE52E04, (uint64_t (*)(uint64_t))sub_1BAEC2490, &qword_1ED3AE788);
  if (!v31)
  {
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v32 = v52;
    v30(v13, v29, v28);
    swift_storeEnumTagMultiPayload();
    v33 = swift_bridgeObjectRetain();
    sub_1BAD1F418(v33, 1, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v34 = v30;
    v35 = (uint64_t)v51;
    v34(v51, v29, v28);
    swift_storeEnumTagMultiPayload();
    v36 = swift_retain();
    sub_1BAD64D84(v36, 2, 0, 0, v35, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v53 = 0;
    swift_beginAccess();
    v38 = *((unsigned __int8 *)v32 + 48);
    v39 = (uint64_t)v50;
    v34(v50, v29, v28);
    swift_storeEnumTagMultiPayload();
    if (v38 == 1)
    {
      v40 = v53;
      v41 = sub_1BAE52E04(v39, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v40)
      {
LABEL_10:
        sub_1BA4A2E80(v39, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BAEC2418);
      }
      v53 = 0;
      if ((v41 & 1) != 0)
      {
        v54 = xmmword_1BB8D2D70;
        v55 = 0;
        v56 = 1;
        sub_1BAEC2490();
        sub_1BA4A2870(&qword_1ED3AE788, (uint64_t (*)(uint64_t))sub_1BAEC2490, MEMORY[0x1E0DED188]);
        v42 = v53;
        sub_1BB874464();
        if (v42)
          goto LABEL_10;
        v53 = 0;
      }
    }
    sub_1BA4A2E80(v39, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    v43 = v32[7];
    v44 = v32[8];
    v45 = qword_1ED3C6D00;
    swift_bridgeObjectRetain();
    if (v45 != -1)
      swift_once();
    v46 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476B48);
    v47 = (uint64_t)v49;
    v34(v49, v46, v28);
    swift_storeEnumTagMultiPayload();
    sub_1BAD64F9C(v43, v44, 4, 0, 0, v47, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    goto LABEL_5;
  }
  sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
LABEL_5:
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BAEC2418);
}

unint64_t sub_1BA673A84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3AAEB0;
  if (!qword_1ED3AAEB0)
  {
    sub_1BA4B07F0(255, &qword_1ED3CF770, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3A6870, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeCase);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAEB0);
  }
  return result;
}

uint64_t FormatSystemFont.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int v50;
  char *v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  __int16 v54;
  uint64_t v55;
  __int128 v56;
  char v57;
  _QWORD v58[4];
  __int16 v59;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)&v40 - v7;
  MEMORY[0x1E0C80A78](v8);
  v51 = (char *)&v40 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - v14;
  sub_1BAEC3A3C(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(double *)v1;
  v41 = *(_QWORD *)(v1 + 8);
  LODWORD(v52) = *(unsigned __int16 *)(v1 + 16);
  v50 = *(unsigned __int8 *)(v1 + 18);
  v49 = *(_QWORD *)(v1 + 24);
  v20 = *(_QWORD *)(v1 + 32);
  v45 = *(_QWORD *)(v1 + 40);
  v46 = v20;
  v44 = *(_QWORD *)(v1 + 48);
  v43 = *(_QWORD *)(v1 + 56);
  v42 = *(unsigned __int16 *)(v1 + 64);
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  v23 = sub_1BAEC3934();
  v24 = sub_1BA4A2870(&qword_1ED3D0C80, (uint64_t (*)(uint64_t))sub_1BAEC3934, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSystemFont, v25, v21, (uint64_t)&type metadata for FormatSystemFont, v23, (uint64_t)&type metadata for FormatVersions.JazzkonC, v22, (uint64_t)v18, v24, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v26 = sub_1BB86EB84();
  v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C20);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v28(v15, v27, v26);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD2BFA0(0, 0, 0, v19, (uint64_t)v15, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE52C1C, (uint64_t (*)(uint64_t))sub_1BAEC3AB4, &qword_1ED3AE798);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v28(v12, v27, v26);
    swift_storeEnumTagMultiPayload();
    v29 = v28;
    if (((unsigned __int16)v52 & 0xFF00) != 0xC00
      && (sub_1BAE52C1C((uint64_t)v12, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v56 = xmmword_1BB8A1A10;
      v57 = 0;
      v53 = v41;
      v54 = (__int16)v52;
      sub_1BAEC3AB4();
      v52 = v30;
      sub_1BA4A2870(&qword_1ED3AE798, (uint64_t (*)(uint64_t))sub_1BAEC3AB4, MEMORY[0x1E0DED188]);
      sub_1BA6745B0();
      sub_1BB874464();
      v29 = v28;
    }
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
    v31 = (uint64_t)v51;
    v29(v51, v27, v26);
    swift_storeEnumTagMultiPayload();
    if (v50 != 5 && (sub_1BAE52C1C(v31, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v56 = xmmword_1BB8D2D60;
      v57 = 0;
      LOBYTE(v53) = v50;
      sub_1BAEC3AB4();
      sub_1BA4A2870(&qword_1ED3AE798, (uint64_t (*)(uint64_t))sub_1BAEC3AB4, MEMORY[0x1E0DED188]);
      sub_1BA674494();
      sub_1BB874464();
      v31 = (uint64_t)v51;
    }
    sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
    v32 = (uint64_t)v48;
    v29(v48, v27, v26);
    swift_storeEnumTagMultiPayload();
    v33 = *(_QWORD *)(v49 + 16);
    swift_bridgeObjectRetain();
    if (v33)
    {
      v34 = sub_1BAE52C1C(v32, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if ((v34 & 1) != 0)
      {
        v52 = v29;
        v56 = xmmword_1BB8D2D70;
        v57 = 0;
        v35 = swift_bridgeObjectRetain();
        v36 = sub_1BA6745F4(v35);
        swift_bridgeObjectRelease();
        v55 = v36;
        swift_retain();
        sub_1BA67FABC(&v55, sub_1BA682348, (uint64_t (*)(_QWORD *))sub_1BA682370);
        swift_release();
        v53 = v55;
        sub_1BAEC3AB4();
        sub_1BA4A2870(&qword_1ED3AE798, (uint64_t (*)(uint64_t))sub_1BAEC3AB4, MEMORY[0x1E0DED188]);
        sub_1BA4AD288(0, &qword_1ED3A0850, (uint64_t)&type metadata for FormatFontTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA674608();
        sub_1BB874464();
        swift_release();
        v29 = v52;
      }
    }
    sub_1BA4A2E80(v32, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v58[0] = v46;
    v58[1] = v45;
    v58[2] = v44;
    v58[3] = v43;
    v59 = v42;
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v37 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C08);
    v38 = (uint64_t)v47;
    v29(v47, v37, v26);
    swift_storeEnumTagMultiPayload();
    sub_1BAD64AF4((uint64_t)v58, 4, 0, 0, v38, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BAEC3A3C);
}

uint64_t sub_1BA6742C4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA6742F8 + 4 * byte_1BB8AEF96[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA6742F8()
{
  return 0x6465646E65747865;
}

uint64_t sub_1BA674310()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1BA674328()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA674344()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BA67435C()
{
  return 1885433183;
}

uint64_t sub_1BA67436C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA674394 + 4 * byte_1BB8AF0DE[*v0]))(1702521203, 0xE400000000000000);
}

uint64_t sub_1BA674394()
{
  return 0x676E696C616373;
}

uint64_t sub_1BA6743AC()
{
  return 0x746867696577;
}

uint64_t sub_1BA6743C0()
{
  return 0x737469617274;
}

uint64_t sub_1BA6743D4()
{
  return 0x7475626972747461;
}

uint64_t sub_1BA6743F0()
{
  return 1885433183;
}

uint64_t sub_1BA6743FC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA674430 + 4 * byte_1BB8AF041[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA674430()
{
  return 0x7365736163;
}

uint64_t sub_1BA674444()
{
  return 0x746C7561666564;
}

uint64_t sub_1BA67445C()
{
  return 0x73776F726874;
}

uint64_t sub_1BA674470()
{
  return 0x776F726874;
}

uint64_t sub_1BA674484()
{
  return 1885433183;
}

unint64_t sub_1BA674494()
{
  unint64_t result;

  result = qword_1ED39B350;
  if (!qword_1ED39B350)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontWeight, &type metadata for FormatFontWeight);
    atomic_store(result, (unint64_t *)&qword_1ED39B350);
  }
  return result;
}

uint64_t sub_1BA6744D8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  size_t v6;
  _QWORD *v7;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  sub_1BA4AD288(0, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  v6 = _swift_stdlib_malloc_size((const void *)v5);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = 2 * v6 - 64;
  v7 = sub_1BA5C5624(&v9, (_BYTE *)(v5 + 32), v3, a1);
  swift_bridgeObjectRetain();
  sub_1BA6EBD18();
  if (v7 != (_QWORD *)v3)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

unint64_t sub_1BA6745B0()
{
  unint64_t result;

  result = qword_1ED39B400;
  if (!qword_1ED39B400)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScaling, &type metadata for FormatFontScaling);
    atomic_store(result, (unint64_t *)&qword_1ED39B400);
  }
  return result;
}

uint64_t sub_1BA6745F4(uint64_t a1)
{
  return sub_1BA6744D8(a1, &qword_1ED3A09F0, (uint64_t)&type metadata for FormatFontTrait);
}

unint64_t sub_1BA674608()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A0858;
  if (!qword_1ED3A0858)
  {
    sub_1BA4AD288(255, &qword_1ED3A0850, (uint64_t)&type metadata for FormatFontTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA8342B8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A0858);
  }
  return result;
}

uint64_t sub_1BA674680@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatExpression.init(from:)(a1, a2);
}

uint64_t FormatExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  __int128 v22;
  uint64_t v24;

  v3 = v2;
  v24 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA6750D4();
    v22 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726B758;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA6750D4()
{
  unint64_t result;

  result = qword_1ED3C7448;
  if (!qword_1ED3C7448)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB838, &_s10CodingTypeON_101);
    atomic_store(result, (unint64_t *)&qword_1ED3C7448);
  }
  return result;
}

unint64_t sub_1BA675118()
{
  unint64_t result;

  result = qword_1ED3B6BB0;
  if (!qword_1ED3B6BB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionExpression, &type metadata for FormatOptionExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B6BB0);
  }
  return result;
}

unint64_t sub_1BA67515C()
{
  unint64_t result;

  result = qword_1ED3B7120;
  if (!qword_1ED3B7120)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingExpression, &type metadata for FormatBindingExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B7120);
  }
  return result;
}

unint64_t sub_1BA6751A0()
{
  unint64_t result;

  result = qword_1ED3B5B10;
  if (!qword_1ED3B5B10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAndExpression, &type metadata for FormatAndExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B5B10);
  }
  return result;
}

unint64_t sub_1BA6751E4()
{
  unint64_t result;

  result = qword_1ED3B60C8;
  if (!qword_1ED3B60C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindExpression, &type metadata for FormatBindExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B60C8);
  }
  return result;
}

unint64_t sub_1BA675228()
{
  unint64_t result;

  result = qword_1ED3B7938;
  if (!qword_1ED3B7938)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorExpression, &type metadata for FormatSelectorExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B7938);
  }
  return result;
}

unint64_t sub_1BA67526C()
{
  unint64_t result;

  result = qword_1ED3B5650;
  if (!qword_1ED3B5650)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOrExpression, &type metadata for FormatOrExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B5650);
  }
  return result;
}

unint64_t sub_1BA6752B0()
{
  unint64_t result;

  result = qword_1ED3B5E30;
  if (!qword_1ED3B5E30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNotExpression, &type metadata for FormatNotExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B5E30);
  }
  return result;
}

unint64_t sub_1BA6752F4()
{
  unint64_t result;

  result = qword_1ED3BF380;
  if (!qword_1ED3BF380)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorsExpression, &type metadata for FormatSelectorsExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3BF380);
  }
  return result;
}

unint64_t sub_1BA675338()
{
  unint64_t result;

  result = qword_1ED3B6AD0;
  if (!qword_1ED3B6AD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayoutExpression, &type metadata for FormatLayoutExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B6AD0);
  }
  return result;
}

unint64_t sub_1BA67537C()
{
  unint64_t result;

  result = qword_1ED3B7758;
  if (!qword_1ED3B7758)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFlexibleExpression, &type metadata for FormatFlexibleExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B7758);
  }
  return result;
}

unint64_t sub_1BA6753C0()
{
  unint64_t result;

  result = qword_1ED3C9400;
  if (!qword_1ED3C9400)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlockExpression, &type metadata for FormatBlockExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3C9400);
  }
  return result;
}

unint64_t sub_1BA675404()
{
  unint64_t result;

  result = qword_1ED3B7B70;
  if (!qword_1ED3B7B70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBindExpression, &type metadata for FormatGroupBindExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3B7B70);
  }
  return result;
}

uint64_t sub_1BA675448(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD *);
  _QWORD v5[3];
  char v6;

  v3 = *(uint64_t (**)(uint64_t, _QWORD *))(v2 + 16);
  v6 = *a1;
  v5[2] = &v6;
  return v3(a2, v5);
}

uint64_t sub_1BA67548C(uint64_t (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;

  return sub_1BA675498(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD))(v2 + 24));
}

uint64_t sub_1BA675498(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void (*v14)(_QWORD);
  _QWORD v15[2];
  char v16;
  _QWORD v17[2];
  char v18;
  uint64_t v19;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(*(_QWORD *)(result + 24) + 16);
    if (v8)
    {
      v14 = a4;
      v9 = (_QWORD *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        v10 = *(v9 - 3);
        v11 = *(v9 - 2);
        v12 = *((_BYTE *)v9 - 8);
        v13 = *v9;
        v17[0] = v10;
        v17[1] = v11;
        v18 = v12;
        v19 = v13;
        v15[0] = v10;
        v15[1] = v11;
        v16 = v12;
        sub_1BA73B1CC(v10, v11, v12);
        swift_retain();
        sub_1BA73B1CC(v10, v11, v12);
        LOBYTE(v13) = a1(v15);
        sub_1BA73B1B8(v10, v11, v12);
        if ((v13 & 1) != 0)
          break;
        v9 += 4;
        sub_1BA73B1B8(v10, v11, v12);
        swift_release();
        if (!--v8)
        {
          swift_bridgeObjectRelease();
          a4 = v14;
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      v14(&v19);
      swift_release();
      sub_1BA73B1B8(v10, v11, v12);
    }
    else
    {
LABEL_7:
      v17[0] = *(_QWORD *)(v7 + 32);
      swift_retain();
      a4(v17);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_1BA675638(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = *(_QWORD *)(v1[2] - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BA6756A4(a1, v1[4], v1[5], v1[6], (uint64_t)v1 + v3, *(_QWORD *)((char *)v1 + v4), *(_QWORD *)((char *)v1 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)((char *)v1 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

void sub_1BA6756A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  v14 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    v15 = MEMORY[0x1BCCE5D40](a3 + 16);
    if (!v15)
    {
LABEL_5:
      swift_release();
      return;
    }
    v16 = (void *)v15;
    swift_beginAccess();
    v17 = MEMORY[0x1BCCE5D40](a4 + 16);
    if (v17)
    {
      v18 = (void *)v17;
      v19 = v14;
      sub_1BA677D24(a5, v16, &v19, a6, a7, v17, a8);

      goto LABEL_5;
    }
    swift_release();

  }
}

uint64_t sub_1BA6757C0(uint64_t a1)
{
  return sub_1BA67B28C(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFE1AE8);
}

uint64_t sub_1BA6757CC(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  unsigned int *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  char v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v41 = a2;
  v6 = a4;
  sub_1BA675B7C();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86FB08();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - v15;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v17);
  v42 = (uint64_t)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v39 - v20;
  v23.n128_f64[0] = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v39 - v24;
  if (a3)
  {
    if (a3 == 1)
    {
      *v16 = a1 & 1;
      v26 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v16 = a1;
      v26 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v12 + 104))(v16, *v26, v11, v23);
  }
  else
  {
    v27 = v41;
    *(_QWORD *)v16 = a1;
    *((_QWORD *)v16 + 1) = v27;
    (*(void (**)(char *, _QWORD, uint64_t, double))(v12 + 104))(v16, *MEMORY[0x1E0DB7738], v11, v23.n128_f64[0]);
    swift_bridgeObjectRetain();
  }
  v28 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v28(v25, v16, v11);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v30 = 1;
  v29(v25, 0, 1, v11);
  if (v6 != 2)
  {
    sub_1BB872F1C();
    v30 = 0;
  }
  v29(v21, v30, 1, v11);
  v31 = (uint64_t)&v10[*(int *)(v8 + 48)];
  v32 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v25, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v21, v31, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v33((uint64_t)v10, 1, v11) == 1)
  {
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v33(v31, 1, v11) == 1)
    {
      v34 = -1;
    }
    else
    {
      v32 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v34 = 0;
    }
  }
  else
  {
    v35 = v42;
    sub_1BA4C2DD8((uint64_t)v10, v42, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v33(v31, 1, v11) == 1)
    {
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v35, v11);
      v34 = 0;
      v32 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v36 = v40;
      v28(v40, (char *)v31, v11);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v34 = sub_1BB872958();
      v37 = *(void (**)(char *, uint64_t))(v12 + 8);
      v37(v36, v11);
      v32 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v37((char *)v35, v11);
    }
  }
  sub_1BA4A2E80((uint64_t)v10, v32);
  return v34 & 1;
}

void sub_1BA675B7C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C4960)
  {
    sub_1BA6F7BEC(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C4960);
  }
}

uint64_t FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:resizingProvider:actionSenderHandler:)(uint64_t a1, double *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10[3];

  memset(v10, 0, sizeof(v10));
  return FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:sourceItemData:resizingProvider:actionSenderHandler:)(a1, a2, a3, a4, v10, a5, a6, a7, a8, a9);
}

_QWORD *sub_1BA675C1C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA752778(a1, a2, a3, a4, &qword_1ED3C4448, (uint64_t (*)(uint64_t))sub_1BA7704A0);
}

uint64_t sub_1BA675C30(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t result;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  v11 = (uint64_t *)(v5 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  v12 = *v11;
  if (!*(_QWORD *)(*v11 + 16))
    goto LABEL_24;
  swift_bridgeObjectRetain();
  v13 = sub_1BA6E35A8(a1, a2);
  if ((v14 & 1) == 0)
  {
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    swift_endAccess();
LABEL_26:
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB872AFC((_QWORD *)0xD000000000000020);
    sub_1BB872AFC(v28);
    type metadata accessor for FormatLayoutViewContainer();
    swift_bridgeObjectRetain();
    sub_1BB8727D8();
    sub_1BB872AFC(v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1BB873EAC();
    __break(1u);
    return result;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 56);
  swift_retain();
  sub_1BA799868(v16);
  v18 = v17;
  swift_release();
  a4(0);
  v30 = swift_dynamicCastClass();
  if (!v30)
  {
    swift_release();

    goto LABEL_26;
  }
  v19 = *(void **)(v15 + 64);
  objc_msgSend(v19, sel_setAutoresizingMask_, 0);
  if (a3)
  {
    swift_retain();
    objc_msgSend(v19, sel_setAutoresizingMask_, sub_1BB275944());
    swift_release();
  }
  v20 = *(_QWORD *)(v15 + 72);
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1BB873F30();
    if (v21)
      goto LABEL_8;
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21)
    {
LABEL_8:
      if (v21 >= 1)
      {
        v22 = 0;
        while (1)
        {
          if ((v20 & 0xC000000000000001) != 0)
          {
            v23 = (id)MEMORY[0x1BCCE4630](v22, v20);
            if (a3)
              goto LABEL_16;
          }
          else
          {
            v23 = *(id *)(v20 + 8 * v22 + 32);
            if (a3)
            {
LABEL_16:
              swift_retain();
              v24 = sub_1BA863F8C(a5);
              type metadata accessor for FormatResizeAuto();
              v25 = swift_allocObject();
              swift_beginAccess();
              *(_QWORD *)(v25 + 16) = v24;
              swift_release();
              objc_msgSend(v23, sel_setAutoresizingMask_, 0);
              swift_retain();
              objc_msgSend(v23, sel_setAutoresizingMask_, sub_1BB275944());

              swift_release_n();
              goto LABEL_11;
            }
          }
          objc_msgSend(v23, sel_setAutoresizingMask_, 0);

LABEL_11:
          if (v21 == ++v22)
            goto LABEL_18;
        }
      }
      __break(1u);
      goto LABEL_23;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  if (((*(_QWORD *)(v15 + 56) >> 59) & 0x1E | (*(_QWORD *)(v15 + 56) >> 2) & 1) == 6)
  {
    v26 = *(void **)(v15 + 64);
    swift_bridgeObjectRetain();
    v26;
  }
  else
  {
    *(id *)(v15 + 64);
    sub_1BA67604C(MEMORY[0x1E0DEE9D8]);
  }
  swift_release();
  return v30;
}

void sub_1BA67604C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  char v5;
  void *v6;
  char v7;
  id v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (*(_QWORD *)(a1 + 16)
    && (sub_1BA8F6924(0, (unint64_t *)&unk_1ED3B9A70, (void (*)(void))sub_1BA822498),
        v2 = (_QWORD *)sub_1BB873F6C(),
        (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (_BYTE *)(a1 + 48);
    while (1)
    {
      v5 = *(v4 - 16);
      v6 = (void *)*((_QWORD *)v4 - 1);
      v7 = *v4;
      v8 = v6;
      sub_1BB4AB03C(v5);
      if ((v10 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
      *(_BYTE *)(v2[6] + v9) = v5;
      v11 = v2[7] + 16 * v9;
      *(_QWORD *)v11 = v6;
      *(_BYTE *)(v11 + 8) = v7;
      v12 = v2[2];
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (v13)
        goto LABEL_10;
      v4 += 24;
      v2[2] = v14;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA676178(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v4 = *a1;
  sub_1BB873708();
  sub_1BA676824();
  v6 = v5;
  v8 = v7;
  type metadata accessor for FormatVisibilityDataValue();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = a2;
  swift_beginAccess();
  swift_retain();
  v10 = a2;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0x8000000000000000;
  sub_1BA676278(v9, v6, v8, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + 16) = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1BA676278(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA6E3434(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA75F574);
}

uint64_t type metadata accessor for FormatVisibilityDataValue()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatSponsoredBannerData()
{
  uint64_t result;

  result = qword_1ED3C21A8;
  if (!qword_1ED3C21A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA6762E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;

  v17 = MEMORY[0x1E0DEE9E0];
  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  v3 = v2 + 64;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  if (v6)
    goto LABEL_6;
LABEL_7:
  v11 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v11 < v7)
    {
      v12 = *(_QWORD *)(v3 + 8 * v11);
      ++v8;
      if (v12)
        goto LABEL_20;
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (v12)
        goto LABEL_20;
      v8 = v11 + 2;
      if (v11 + 2 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (v12)
      {
LABEL_20:
        v6 = (v12 - 1) & v12;
        for (i = __clz(__rbit64(v12)) + (v8 << 6); ; i = v9 | (v8 << 6))
        {
          v14 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * i);
          swift_retain();
          v15 = sub_1BA6764BC(a1, v14, &v17);
          v16 = *(id *)(v14 + 24);
          if ((v15 & 1) != 0)
          {
            sub_1BB873708();

            swift_release();
            if (!v6)
              goto LABEL_7;
          }
          else
          {
            sub_1BB873708();
            swift_release();

            if (!v6)
              goto LABEL_7;
          }
LABEL_6:
          v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v13 = v11 + 3;
      if (v13 < v7)
      {
        v12 = *(_QWORD *)(v3 + 8 * v13);
        if (v12)
        {
          v8 = v13;
          goto LABEL_20;
        }
        while (1)
        {
          v8 = v13 + 1;
          if (__OFADD__(v13, 1))
            goto LABEL_26;
          if (v8 >= v7)
            break;
          v12 = *(_QWORD *)(v3 + 8 * v8);
          ++v13;
          if (v12)
            goto LABEL_20;
        }
      }
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_1BA6764BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char isUniquelyReferenced_nonNull_native;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  if (!a2)
    return 1;
  sub_1BA676824();
  v8 = *a3;
  if (*(_QWORD *)(*a3 + 16))
  {
    v9 = v6;
    v10 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    v11 = sub_1BA6E35A8(v9, v10);
    if ((v12 & 1) != 0)
      goto LABEL_26;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  sub_1BA676C10();
  if (!(v47 >> 62))
  {
    v20 = *(_QWORD *)(v47 + 24);
    v42 = *(_QWORD *)(v47 + 16);
    sub_1BA676824();
    v43 = v21;
    v23 = v22;
    swift_beginAccess();
    v24 = *(_QWORD *)(a1 + 16);
    v25 = *(_QWORD *)(v24 + 16);
    swift_bridgeObjectRetain();
    if (v25)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = sub_1BA6E35A8(v42, v20);
      if ((v27 & 1) != 0)
      {
        v25 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v26);
        swift_retain();
      }
      else
      {
        v25 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v33 = sub_1BA6764BC(a1, v25, a3) & 1;
    swift_release();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = *a3;
    *a3 = 0x8000000000000000;
    sub_1BA676C04(v33, v43, v23, isUniquelyReferenced_nonNull_native);
    *a3 = v44;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (v47 >> 62 == 1)
  {
LABEL_20:
    sub_1BA6EEDB4(v47);
    goto LABEL_24;
  }
  if (v47 == 0x8000000000000000)
  {
    sub_1BA676824();
    v15 = v14;
    v17 = v16;
    v18 = *(void **)(a2 + 24);
    swift_bridgeObjectRetain();
    if ((objc_msgSend(v18, sel_isHidden) & 1) != 0)
    {
      v19 = 1;
    }
    else
    {
      objc_msgSend(v18, sel_frame);
      v19 = sub_1BB873660();
    }
    v35 = swift_isUniquelyReferenced_nonNull_native();
    v46 = *a3;
    *a3 = 0x8000000000000000;
    sub_1BA676C04(v19 & 1, v15, v17, v35);
    *a3 = v46;
  }
  else
  {
    sub_1BA676824();
    v29 = v28;
    v31 = v30;
    swift_bridgeObjectRetain();
    v32 = swift_isUniquelyReferenced_nonNull_native();
    v45 = *a3;
    *a3 = 0x8000000000000000;
    sub_1BA676C04(1, v29, v31, v32);
    *a3 = v45;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_24:
  sub_1BA676824();
  v8 = *a3;
  if (*(_QWORD *)(*a3 + 16))
  {
    v38 = v36;
    v39 = v37;
    swift_bridgeObjectRetain();
    v11 = sub_1BA6E35A8(v38, v39);
    if ((v40 & 1) != 0)
    {
LABEL_26:
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 56) + v11);
      swift_release();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_1BA676824()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA676858@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x18) + 16);
}

uint64_t sub_1BA676A9C(char a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(_QWORD))
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v7 = v5;
  v12 = *v5;
  v14 = sub_1BA6E35A8(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a4 & 1) != 0)
  {
LABEL_9:
    v21 = a1 & 1;
    v22 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
      *(_BYTE *)(v22[7] + v14) = v21;
      return result;
    }
    v22[(v14 >> 6) + 8] |= 1 << v14;
    v23 = (uint64_t *)(v22[6] + 16 * v14);
    *v23 = a2;
    v23[1] = a3;
    *(_BYTE *)(v22[7] + v14) = v21;
    v24 = v22[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v22[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  if (v19 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C9A4C(a5);
    goto LABEL_9;
  }
  sub_1BA676EFC(result, a4 & 1, a5);
  result = sub_1BA6E35A8(a2, a3);
  if ((v18 & 1) == (v20 & 1))
  {
    v14 = result;
    goto LABEL_9;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA676C04(char a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA676A9C(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA677200);
}

void sub_1BA676C10()
{
  __asm { BR              X11 }
}

unint64_t sub_1BA676C4C@<X0>(uint64_t a1@<X8>)
{
  unint64_t *v1;
  unint64_t *v2;
  unint64_t v3;

  v2 = (unint64_t *)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x18) + 120);
  v3 = *v2;
  *v1 = *v2;
  return sub_1BA67D3F4(v3);
}

uint64_t sub_1BA676EFC(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v38 = a2;
  v7 = sub_1BB873F54();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          v4 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v36)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_BYTE *)(*(_QWORD *)(v6 + 56) + v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_BYTE *)(*(_QWORD *)(v8 + 56) + v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v35;
  v23 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

void sub_1BA677200()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C04C8)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C04C8);
  }
}

uint64_t type metadata accessor for FormatVisibilityData()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatAdMetricsData()
{
  uint64_t result;

  result = qword_1ED3B5AA8;
  if (!qword_1ED3B5AA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FormatVideoData(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3BACE8);
}

uint64_t type metadata accessor for FormatMicaData()
{
  uint64_t result;

  result = qword_1ED3BAB58;
  if (!qword_1ED3BAB58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FormatAccessibilityRenderer()
{
  return objc_opt_self();
}

id sub_1BA677330(uint64_t a1, uint64_t *a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id result;
  uint64_t v26;
  uint64_t v27[3];

  v16 = *a2;
  a4[qword_1ED3C6EF8] = *(_BYTE *)(a3 + 129);
  v17 = *(_QWORD *)(a3 + 24);
  v18 = &a4[qword_1ED3C2480];
  *v18 = *(_QWORD *)(a3 + 16);
  v18[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 40));
  v27[0] = v16;
  sub_1BA677D24(a1, a4, v27, a3, a5, a6, a7);
  v19 = *(_QWORD *)(a3 + 136);
  v20 = *(_QWORD *)(*(_QWORD *)(v19 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v20 + 16) + 16))
  {
    v26 = *(_QWORD *)(v19 + 56);
    v21 = swift_bridgeObjectRetain();
    v22 = sub_1BA6E42A0(v21);
    sub_1BA6E3FB8(v22);
    v23 = v26;
  }
  else
  {
    v23 = sub_1BA6E3F38();
  }
  v24 = sub_1BA761FE4(0xD000000000000011, 0x80000001BB98A650, v23);
  result = (id)swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    return objc_msgSend(a4, sel_setAccessibilityElementsHidden_, 1, a9);
  return result;
}

_QWORD *sub_1BA6774A8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E86C(a1, a2, a3, a4, &qword_1ED3CFC80, (uint64_t)&type metadata for FormatAccessibilityRendererContainer);
}

uint64_t sub_1BA6774BC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char **v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  id v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  uint64_t v50;
  _QWORD v52[10];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;

  v52[3] = a6;
  v55 = a7;
  v56 = a4;
  v53 = a5;
  v52[2] = a1;
  v12 = type metadata accessor for FormatViewBackground.Mica(0);
  MEMORY[0x1E0C80A78](v12);
  v52[1] = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA677CD0();
  MEMORY[0x1E0C80A78](v14);
  v52[5] = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v52[8] = (char *)v52 - v17;
  MEMORY[0x1E0C80A78](v18);
  v52[6] = (char *)v52 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v52 - v21;
  sub_1BA6798E8();
  v24 = v23;
  MEMORY[0x1E0C80A78](v23);
  v26 = (_QWORD *)((char *)v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB8736F0();
  objc_msgSend(a3, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a2 + 128));
  v27 = *(_QWORD *)(a2 + 24);
  v28 = &a3[OBJC_IVAR____TtC8NewsFeed10FormatView_identifier];
  *(_QWORD *)v28 = *(_QWORD *)(a2 + 16);
  *((_QWORD *)v28 + 1) = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(a2 + 96);
  if (v29)
    v30 = *(_BYTE *)(v29 + 185) & 1;
  else
    v30 = 0;
  objc_msgSend(a3, sel_setAccessibilityIgnoresInvertColors_, v30);
  v31 = *(_QWORD *)(a2 + 144);
  v32 = *(unsigned __int8 *)(a2 + 152);
  objc_msgSend(a3, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a3, sel_setAccessibilityElementsHidden_, 0);
  if (v32 > 0xFD)
    goto LABEL_10;
  if ((v32 & 0x80) != 0)
  {
    if (!(v31 | v32 ^ 0x80))
      goto LABEL_10;
    v33 = &selRef_setAccessibilityElementsHidden_;
  }
  else
  {
    v33 = &selRef_setIsAccessibilityElement_;
  }
  objc_msgSend(a3, *v33, 1);
LABEL_10:
  v52[7] = v22;
  v52[9] = a8;
  if (v29)
  {
    v34 = *(_QWORD *)(v29 + 80);
    v35 = *(_QWORD *)(v29 + 88);
    v36 = *(_BYTE *)(v29 + 96);
    sub_1BA6E6C54(v34, v35, v36);
  }
  else
  {
    v34 = 0;
    v35 = 0;
    v36 = -2;
  }
  v54 = a9;
  v37 = objc_msgSend(a3, sel_layer);
  objc_msgSend(a3, sel_bounds);
  v57 = v34;
  v58 = v35;
  LOBYTE(v59) = v36;
  sub_1BA6787C4(v37, (uint64_t)&v57, v38, v39, v40, v41);

  sub_1BA6E6CC4(v34, v35, v36);
  if (v29)
  {
    v42 = *(_QWORD *)(v29 + 64);
    sub_1BA6E6C68(v42);
  }
  else
  {
    v42 = 0xF000000000000007;
  }
  v43 = (uint64_t)v26 + *(int *)(v24 + 48);
  *v26 = v42;
  sub_1BA4C2DD8(v53, v43, (uint64_t (*)(_QWORD))sub_1BA677CD0);
  if ((~v42 & 0xF000000000000007) != 0)
    __asm { BR              X10 }
  sub_1BB873738();
  sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))sub_1BA677CD0);
  v44 = *(_QWORD *)(a2 + 136);
  if (v29)
  {
    v46 = *(_QWORD *)(v29 + 72);
    v45 = *(_QWORD *)(v29 + 80);
    v47 = *(_QWORD *)(v29 + 88);
    v48 = *(_BYTE *)(v29 + 96);
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v45, v47, v48);
  }
  else
  {
    v45 = 0;
    v47 = 0;
    v46 = 0;
    v48 = -2;
  }
  v49 = objc_msgSend(a3, sel_layer);
  v57 = v45;
  v58 = v47;
  LOBYTE(v59) = v48;
  sub_1BA67832C(v44, v49, v55, v46, &v57);

  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v45, v47, v48);
  if (v29)
  {
    v50 = *(_QWORD *)(v29 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    v50 = 0;
  }
  v57 = v50;
  sub_1BA6786EC(v44, a3, &v57, v56);
  return swift_bridgeObjectRelease();
}

void sub_1BA677CD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BB118)
  {
    type metadata accessor for FormatViewBackground(255);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BB118);
  }
}

void sub_1BA677D24(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char **v16;
  uint64_t v18;

  v11 = *a3;
  sub_1BB8736F0();
  objc_msgSend(a2, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a4 + 128));
  v12 = *(_QWORD *)(a4 + 96);
  if (v12)
    v13 = *(_BYTE *)(v12 + 232) & 1;
  else
    v13 = 0;
  objc_msgSend(a2, sel_setAccessibilityIgnoresInvertColors_, v13);
  v14 = *(_QWORD *)(a4 + 144);
  v15 = *(unsigned __int8 *)(a4 + 152);
  objc_msgSend(a2, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a2, sel_setAccessibilityElementsHidden_, 0);
  if (v15 <= 0xFD)
  {
    if ((v15 & 0x80) == 0)
    {
      v16 = &selRef_setIsAccessibilityElement_;
LABEL_9:
      objc_msgSend(a2, *v16, 1);
      goto LABEL_10;
    }
    if (v14 | v15 ^ 0x80)
    {
      v16 = &selRef_setAccessibilityElementsHidden_;
      goto LABEL_9;
    }
  }
LABEL_10:
  sub_1BB0A3D84(a2, a4, v12, a5, a7);
  v18 = v11;
  sub_1BA677E88(a1, (uint64_t)a2, (uint64_t)&v18);
}

void sub_1BA677E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X11 }
}

void sub_1BA677F28(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(v2 + 96);
  v4 = *(id *)(a1 + 16);
  *(_QWORD *)(v1 + 96) = v4;
  sub_1BA67B1F0(*(_QWORD *)(v1 + 112), v4, v3, *(void **)(v1 + 104));

}

uint64_t sub_1BA677F6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v1 + 72) = v4;
  v5 = v4 & 0x1FFFFFFFFFFFFFFFLL;
  swift_retain();
  swift_retain();
  v6 = objc_msgSend(*(id *)(v1 + 104), sel_userInterfaceStyle);
  if ((unint64_t)v6 >= 2
    && (*(_QWORD *)(v1 + 32) = v3 & 0x1FFFFFFFFFFFFFFFLL, *(_QWORD *)(v1 + 48) = v5, v6 == (id)2))
  {
    *(_QWORD *)(v2 - 240) = *(_QWORD *)(v1 + 72);
    sub_1BA677E88(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 112), v2 - 240);
    swift_release();
  }
  else
  {
    *(_QWORD *)(v2 - 240) = v3;
    sub_1BA677E88(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 112), v2 - 240);
    swift_release();
  }
  return swift_release();
}

void sub_1BA67832C(uint64_t a1, id a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  id v23;
  void *v24;
  char v25;
  _QWORD v26[2];
  char v27;
  _QWORD v28[3];
  __int16 v29;
  uint64_t v30;
  unint64_t v31;

  v9 = *a5;
  v10 = a5[1];
  v11 = *((_BYTE *)a5 + 16);
  objc_msgSend(a2, sel_setBorderColor_, 0);
  objc_msgSend(a2, sel_setBorderWidth_, 0.0);
  sub_1BA678540(a2);
  v13 = v12;
  v31 = v12;
  if (a4)
  {
    v25 = v11;
    v14 = *(_QWORD *)(a4 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = (_QWORD *)(a4 + 64);
      do
      {
        v17 = *(v15 - 4);
        v16 = *(v15 - 3);
        v18 = *(v15 - 2);
        v19 = *((_WORD *)v15 - 4);
        v20 = *v15;
        v15 += 5;
        v28[0] = v17;
        v28[1] = v16;
        v28[2] = v18;
        v29 = v19;
        v30 = v20;
        v26[0] = v9;
        v26[1] = v10;
        v27 = v25;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1BB46D36C(a1, a2, a3, (uint64_t)v28, (uint64_t)v26);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      v13 = v31;
    }
  }
  if (!(v13 >> 62))
  {
    v21 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v21)
      goto LABEL_8;
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v21 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_15;
LABEL_8:
  if (v21 >= 1)
  {
    for (i = 0; i != v21; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
        v23 = (id)MEMORY[0x1BCCE4630](i, v13);
      else
        v23 = *(id *)(v13 + 8 * i + 32);
      v24 = v23;
      objc_msgSend(v23, sel_removeFromSuperlayer);

    }
    goto LABEL_15;
  }
  __break(1u);
}

void sub_1BA678540(void *a1)
{
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9D8];
  v1 = objc_msgSend(a1, sel_sublayers);
  if (!v1)
    return;
  v2 = v1;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9960);
  v3 = sub_1BB872DB4();

  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v4 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_16;
LABEL_4:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1BCCE4630](i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      type metadata accessor for FormatBorderLayer();
      if (swift_dynamicCastClass())
      {
        MEMORY[0x1BCCE36AC](v7);
        if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }

    }
    swift_bridgeObjectRelease();
  }
}

void sub_1BA6786EC(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  char v9;
  id v10;

  v6 = *a3;
  if (*(_QWORD *)(a4 + 16))
  {
    sub_1BB4AB03C(0);
    if ((v9 & 1) != 0)
      __asm { BR              X10 }
  }
  v10 = a2;
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1BA72BED4(a1, v6);
    swift_bridgeObjectRelease();
  }
  sub_1BB8736E4();

}

void sub_1BA6787C4(id a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  unsigned int v7;
  char *v8;
  uint64_t v9;
  double v10;
  int v11;
  double Height;
  double Width;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v24;
  id v25;
  CGRect v26;

  v7 = *(unsigned __int8 *)(a2 + 16);
  if (v7 > 0xFD)
  {
    objc_msgSend(a1, sel_setCornerRadius_, 0.0);
    objc_msgSend(a1, sel_setMaskedCorners_, 0);
    objc_msgSend(a1, sel_setCornerCurve_, *MEMORY[0x1E0CD2A60]);
    return;
  }
  v9 = *(_QWORD *)a2;
  v8 = *(char **)(a2 + 8);
  if ((v7 & 0x80) != 0)
  {
    v11 = v9 & 1;
    Height = CGRectGetHeight(*(CGRect *)&a3);
    v26.origin.x = a3;
    v26.origin.y = a4;
    v26.size.width = a5;
    v26.size.height = a6;
    Width = CGRectGetWidth(v26);
    if (Width >= Height)
      Width = Height;
    v10 = Width * 0.5;
    sub_1BA6E6CC4(v9, (uint64_t)v8, v7);
    v8 = (char *)&unk_1E724E390;
  }
  else
  {
    v10 = *(double *)a2;
    v11 = v7 & 1;
    sub_1BA6F2B04(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
  }
  objc_msgSend(a1, sel_setCornerRadius_, v10);
  v18 = *((_QWORD *)v8 + 2);
  if (v18)
  {
    v19 = 0;
    v20 = v8 + 32;
    do
    {
      v21 = *v20++;
      v22 = qword_1BB926FF8[v21];
      if ((v22 & ~v19) == 0)
        v22 = 0;
      v19 |= v22;
      --v18;
    }
    while (v18);
    if ((v19 & 1) != 0)
    {
      if ((v19 & 2) != 0)
      {
        v23 = 3;
        if ((v19 & 4) == 0)
          goto LABEL_21;
      }
      else
      {
        v23 = 1;
        if ((v19 & 4) == 0)
          goto LABEL_21;
      }
    }
    else if ((v19 & 2) != 0)
    {
      v23 = 2;
      if ((v19 & 4) == 0)
      {
LABEL_21:
        if ((v19 & 8) != 0)
          v23 |= 8uLL;
        goto LABEL_23;
      }
    }
    else
    {
      v23 = 0;
      if ((v19 & 4) == 0)
        goto LABEL_21;
    }
    v23 |= 4uLL;
    goto LABEL_21;
  }
  v23 = 0;
LABEL_23:
  objc_msgSend(a1, sel_setMaskedCorners_, v23);
  swift_bridgeObjectRelease();
  v24 = (id *)MEMORY[0x1E0CD2A68];
  if (!v11)
    v24 = (id *)MEMORY[0x1E0CD2A60];
  v25 = *v24;
  objc_msgSend(a1, sel_setCornerCurve_, v25);

}

uint64_t type metadata accessor for FormatBorderLayer()
{
  return objc_opt_self();
}

uint64_t sub_1BA678A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA65DC00(0, &qword_1ED3B0798, (unint64_t *)&qword_1ED3B0790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA678A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t (*)(uint64_t (*)(_QWORD *), uint64_t), _QWORD *);
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  _QWORD v43[6];

  v37 = a5;
  v38 = a7;
  v35 = a4;
  v36 = a3;
  v34 = a9;
  v13 = *(_QWORD *)(a8 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v9 + 72);
  v39 = *(_QWORD *)(v9 + 80);
  v40 = v16;
  v33 = swift_allocObject();
  swift_weakInit();
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = swift_allocObject();
  v32 = a6;
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a8);
  v19 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (char *)swift_allocObject();
  v23 = v34;
  *((_QWORD *)v22 + 2) = a8;
  *((_QWORD *)v22 + 3) = v23;
  *((_QWORD *)v22 + 4) = v33;
  *((_QWORD *)v22 + 5) = v17;
  *((_QWORD *)v22 + 6) = v18;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v22[v19], v15, a8);
  v24 = v36;
  *(_QWORD *)&v22[v20] = v35;
  v25 = v38;
  *(_QWORD *)&v22[v21] = v37;
  *(_QWORD *)&v22[(v21 + 15) & 0xFFFFFFFFFFFFFFF8] = v25;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = swift_allocObject();
  swift_weakInit();
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = v27;
  v28[3] = sub_1BA675638;
  v28[4] = v22;
  v29 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t (*)(uint64_t (*)(_QWORD *), uint64_t), _QWORD *))(v26 + 72);
  swift_retain();
  swift_bridgeObjectRetain();
  v30 = v25;
  swift_retain();
  swift_retain();
  v29(v43, v40, v39, sub_1BA67548C, v28);
  swift_release();
  swift_release();
  swift_release();
  sub_1BA678A04((uint64_t)v43, (uint64_t)v41);
  if (v42)
  {
    __swift_project_boxed_opaque_existential_1(v41, v42);
    sub_1BB86DCF0();
    sub_1BA65DB80((uint64_t)v43, &qword_1ED3B0798, (unint64_t *)&qword_1ED3B0790);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  }
  else
  {
    sub_1BA65DB80((uint64_t)v43, &qword_1ED3B0798, (unint64_t *)&qword_1ED3B0790);
    return sub_1BA65DB80((uint64_t)v41, &qword_1ED3B0798, (unint64_t *)&qword_1ED3B0790);
  }
}

void sub_1BA678D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;

  v7 = MEMORY[0x1BCCE5D40](v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_label);
  if (v7)
  {
    v17 = (id)v7;
    *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_link) = a1;
    swift_retain();
    swift_release();
    v8 = (_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_linkBlock);
    v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_linkBlock);
    *v8 = a2;
    v8[1] = a3;
    sub_1BA49EBE0(v9);
    v10 = OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_tapGestureRecognizer;
    v11 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_tapGestureRecognizer);
    if (a1)
    {
      if (v11)
      {
        swift_retain();
      }
      else
      {
        v14 = objc_allocWithZone(MEMORY[0x1E0DC3D80]);
        swift_retain();
        v15 = objc_msgSend(v14, sel_initWithTarget_action_, v3, sel_didTap_);
        objc_msgSend(v15, sel_setDelegate_, v3);
        objc_msgSend(v17, sel_addGestureRecognizer_, v15);
        v16 = *(void **)(v3 + v10);
        *(_QWORD *)(v3 + v10) = v15;

        v11 = *(void **)(v3 + v10);
        if (!v11)
        {
LABEL_12:

          return;
        }
      }
      v13 = v11;
      objc_msgSend(v13, sel_setEnabled_, 1);
    }
    else
    {
      if (!v11)
      {
        swift_retain();
        goto LABEL_12;
      }
      swift_retain();
      v13 = v11;
      objc_msgSend(v13, sel_setEnabled_, 0);
    }

    goto LABEL_12;
  }
  v12 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_tapGestureRecognizer);
  if (v12)
    objc_msgSend(v12, sel_setEnabled_, 0);
}

uint64_t type metadata accessor for FormatViewBackground.Mica(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3BB060);
}

uint64_t sub_1BA678F10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void (*v13)(__int128 *__return_ptr, void *, uint64_t);
  unint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _QWORD v50[5];
  _BYTE v51[40];
  _BYTE v52[48];

  sub_1BA739A14(a3, (uint64_t)v52);
  v37 = *(_OWORD *)(a3 + 40);
  v35 = *(_QWORD *)(a3 + 64);
  v36 = *(_QWORD *)(a3 + 56);
  v33 = *(_QWORD *)(a3 + 80);
  v34 = *(_QWORD *)(a3 + 72);
  v31 = *(_QWORD *)(a3 + 96);
  v32 = *(_QWORD *)(a3 + 88);
  v29 = *(_QWORD *)(a3 + 112);
  v30 = *(_QWORD *)(a3 + 104);
  v28 = *(_BYTE *)(a3 + 120);
  v13 = *(void (**)(__int128 *__return_ptr, void *, uint64_t))(a3 + 128);
  if (a5 && (v14 = *(_QWORD *)(a5 + 120), v14 != 3))
  {
    *(_QWORD *)&v40 = *(_QWORD *)(a5 + 120);
    sub_1BA6E6E84(v14);
    v15 = sub_1BA65D2C0(a6);
    sub_1BA6E6CF0(v14);
  }
  else
  {
    v15 = 0;
  }
  v13(&v40, a6, v15);
  if (v42)
  {
    sub_1BA4CECCC(&v40, (uint64_t)v51);
    sub_1BA4C010C((uint64_t)v51, (uint64_t)v50);
    v16 = *(uint64_t (**)(uint64_t, uint64_t))(a9 + 16);
    swift_retain();
    v17 = v16(a7, a9);
    sub_1BB86D960();
    v19 = v18;
    v21 = v20;
    v22 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v22, sel_scale);
    v24 = v23;

    v40 = v37;
    v41 = v36;
    v42 = v35;
    v43 = v34;
    v44 = v33;
    v45 = v32;
    v46 = v31;
    v47 = v30;
    v48 = v29;
    v49 = v28;
    v25 = type metadata accessor for FormatImageRequest();
    swift_allocObject();
    swift_bridgeObjectRetain();
    v26 = sub_1BB70FFD8(v50, a5, v17, v15, 0, a6, (uint64_t)v52, (uint64_t)&v40, v19, v21, v24);
    v42 = v25;
    v43 = sub_1BA4A2870(&qword_1ED3C7CB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageRequest, (uint64_t)&unk_1BB94216C);
    *(_QWORD *)&v40 = v26;
    swift_retain();
    sub_1BA657DA0((uint64_t)&v40, (_QWORD *)(v38 + 16), a2, 0, 0);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    return sub_1BA65DB80((uint64_t)&v40, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08);
  }
  else
  {
    sub_1BA65DB80((uint64_t)&v40, (unint64_t *)&qword_1ED3C2250, qword_1ED3B0960);
    return sub_1BB871710();
  }
}

double sub_1BA67920C()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)v0 + 64);
}

uint64_t sub_1BA67921C()
{
  return swift_retain();
}

uint64_t sub_1BA679224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA679264(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (__int128 *)(v4 + 24), (uint64_t)&unk_1E72D93D8, (uint64_t)sub_1BA815060, (void (*)(uint64_t, __int128 *, uint64_t, uint64_t, ValueMetadata *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB8148]);
}

uint64_t sub_1BA679264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, __int128 *, uint64_t, uint64_t, ValueMetadata *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  __int128 v18;
  uint64_t v19;

  v13 = *((_QWORD *)a6 + 2);
  v18 = *a6;
  v19 = v13;
  ObjectType = swift_getObjectType();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  swift_retain();
  a9(a5, &v18, a8, v15, &type metadata for LikingCommandContext, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEAFB8], MEMORY[0x1E0DBCA78], ObjectType, a2);
  return swift_release();
}

uint64_t sub_1BA679348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t result;
  _QWORD *v26;
  _QWORD *v27;

  swift_getObjectType();
  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  v8 = *v7;
  if (!*(_QWORD *)(*v7 + 16))
    goto LABEL_24;
  swift_bridgeObjectRetain();
  v9 = sub_1BA6E35A8(a1, a2);
  if ((v10 & 1) == 0)
  {
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    swift_endAccess();
LABEL_26:
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB872AFC((_QWORD *)0xD000000000000020);
    sub_1BB872AFC(v26);
    type metadata accessor for FormatLayoutViewContainer();
    swift_bridgeObjectRetain();
    sub_1BB8727D8();
    sub_1BB872AFC(v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1BB873EAC();
    __break(1u);
    return result;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11 + 56);
  swift_retain();
  sub_1BA799868(v12);
  v14 = v13;
  swift_release();
  v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_release();

    goto LABEL_26;
  }
  v16 = v15;
  v17 = *(void **)(v11 + 64);
  objc_msgSend(v17, sel_setAutoresizingMask_, 0);
  if (a3)
  {
    swift_retain();
    objc_msgSend(v17, sel_setAutoresizingMask_, sub_1BB275944());
    swift_release();
  }
  v18 = *(_QWORD *)(v11 + 72);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1BB873F30();
    if (v19)
      goto LABEL_8;
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19)
    {
LABEL_8:
      if (v19 >= 1)
      {
        v20 = 0;
        while (1)
        {
          if ((v18 & 0xC000000000000001) != 0)
          {
            v21 = (id)MEMORY[0x1BCCE4630](v20, v18);
            if (a3)
              goto LABEL_16;
          }
          else
          {
            v21 = *(id *)(v18 + 8 * v20 + 32);
            if (a3)
            {
LABEL_16:
              swift_retain();
              v22 = sub_1BA863F8C((uint64_t)&unk_1E7268F60);
              type metadata accessor for FormatResizeAuto();
              v23 = swift_allocObject();
              swift_beginAccess();
              *(_QWORD *)(v23 + 16) = v22;
              swift_release();
              objc_msgSend(v21, sel_setAutoresizingMask_, 0);
              swift_retain();
              objc_msgSend(v21, sel_setAutoresizingMask_, sub_1BB275944());

              swift_release_n();
              goto LABEL_11;
            }
          }
          objc_msgSend(v21, sel_setAutoresizingMask_, 0);

LABEL_11:
          if (v19 == ++v20)
            goto LABEL_18;
        }
      }
      __break(1u);
      goto LABEL_23;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  if (((*(_QWORD *)(v11 + 56) >> 59) & 0x1E | (*(_QWORD *)(v11 + 56) >> 2) & 1) == 6)
  {
    v24 = *(void **)(v11 + 64);
    swift_bridgeObjectRetain();
    v24;
  }
  else
  {
    *(id *)(v11 + 64);
    sub_1BA67604C(MEMORY[0x1E0DEE9D8]);
  }
  swift_release();
  return v16;
}

uint64_t sub_1BA679768(char *a1)
{
  uint64_t v1;
  char *v3;
  char *v4;
  uint64_t result;
  unint64_t v6;
  _QWORD **v7;
  _QWORD *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v3 = &a1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers];
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16))
  {
    v4 = &a1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations];
    result = swift_beginAccess();
    v6 = *(_QWORD *)v4;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_1BB873F30();
      result = swift_bridgeObjectRelease();
      if (!v15)
        return result;
    }
    else if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      return result;
    }
  }
  v7 = (_QWORD **)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers);
  swift_beginAccess();
  v8 = *v7;
  v9 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v7 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = sub_1BB391908(0, v8[2] + 1, 1, v8);
    *v7 = v8;
  }
  v12 = v8[2];
  v11 = v8[3];
  if (v12 >= v11 >> 1)
  {
    v8 = sub_1BB391908((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
    *v7 = v8;
  }
  v13 = sub_1BB6C792C((unint64_t *)&unk_1ED3C7520, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
  v8[2] = v12 + 1;
  v14 = &v8[2 * v12];
  v14[4] = v9;
  v14[5] = v13;
  return swift_endAccess();
}

void sub_1BA6798E8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3BA740)
  {
    sub_1BA833308();
    sub_1BA677CD0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3BA740);
  }
}

uint64_t storeEnumTagSinglePayload for FormatItemNodeLayoutContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA679960()
{
  return swift_retain();
}

uint64_t sub_1BA679968(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  _QWORD *v23;
  _QWORD *v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD aBlock[6];

  sub_1BA4B07F0(0, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)aBlock - v8;
  v10 = type metadata accessor for FormatButtonNodeDataAction();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5E01A4(a3, (uint64_t)v9, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_1BA5C699C((uint64_t)v9, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  sub_1BA5193C4((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
  v15 = *(void **)&v13[*(int *)(v10 + 20)];
  if (v15)
  {
    v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a1;
    *(_QWORD *)(v17 + 24) = v16;
    v18 = objc_allocWithZone(MEMORY[0x1E0DC33F0]);
    aBlock[4] = sub_1BB6D256C;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BB68DDD4;
    aBlock[3] = &block_descriptor_103;
    v19 = _Block_copy(aBlock);
    v20 = v15;
    v21 = a1;
    swift_retain();
    v22 = objc_msgSend(v18, sel_initWithAttributedName_actionHandler_, v20, v19);
    _Block_release(v19);
    swift_release();
    swift_release();
    v23 = (_QWORD *)(a4 + 48);
    swift_beginAccess();
    v24 = *(_QWORD **)(a4 + 48);
    v25 = v22;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 48) = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v24 = sub_1BB391A48(0, v24[2] + 1, 1, v24);
      *v23 = v24;
    }
    v28 = v24[2];
    v27 = v24[3];
    if (v28 >= v27 >> 1)
    {
      v24 = sub_1BB391A48((_QWORD *)(v27 > 1), v28 + 1, 1, v24);
      *v23 = v24;
    }
    v24[2] = v28 + 1;
    v29 = &v24[3 * v28];
    v29[4] = v22;
    v29[5] = 0;
    *((_BYTE *)v29 + 48) = 0;
    swift_endAccess();

  }
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
}

uint64_t sub_1BA679C4C(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(uint64_t, _QWORD))
{
  double v4;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  CFTimeInterval v26;
  uint64_t v27;
  uint64_t v28;

  v9 = CACurrentMediaTime();
  v10 = a1 + a2;
  if (__OFADD__(a1, a2))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = v9;
  swift_beginAccess();
  a4(a1 + a2, 0);
  sub_1BB872DCC();
  v11 = swift_endAccess();
  if (a2 < 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a2)
  {
    v12 = (void (*)(uint64_t))a3[5];
    v13 = a2;
    while (1)
    {
      v12(v11);
      v14 = swift_beginAccess();
      MEMORY[0x1BCCE36AC](v14);
      if (*(_QWORD *)((a3[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((a3[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      v11 = swift_endAccess();
      v15 = a3[8];
      v16 = __OFADD__(v15, 1);
      v17 = v15 + 1;
      if (v16)
        break;
      a3[8] = v17;
      if (!--v13)
        goto LABEL_9;
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_9:
  if (qword_1ED3BA7F8 != -1)
LABEL_14:
    swift_once();
  v18 = (void *)qword_1ED476860;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB87D7A0;
  v21 = a3[3];
  v20 = a3[4];
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  v22 = sub_1BA6A2D8C();
  *(_QWORD *)(v19 + 32) = v21;
  *(_QWORD *)(v19 + 40) = v20;
  v23 = MEMORY[0x1E0DEB418];
  v24 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v19 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v19 + 104) = v24;
  *(_QWORD *)(v19 + 64) = v22;
  *(_QWORD *)(v19 + 72) = v10;
  *(_QWORD *)(v19 + 136) = v23;
  *(_QWORD *)(v19 + 144) = v24;
  *(_QWORD *)(v19 + 112) = a2;
  v25 = v18;
  swift_bridgeObjectRetain();
  v26 = CACurrentMediaTime();
  v27 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v19 + 176) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v19 + 184) = v27;
  *(CFTimeInterval *)(v19 + 152) = (v26 - v4) * 1000.0;
  v28 = sub_1BB87330C();
  sub_1BB86EF44("Format layout view pool prepared, [%{public}@] queueSize=%ld, growSize=%ld, time=%fms", 85, 2, &dword_1BA493000, v25, v28, v19);

  return swift_bridgeObjectRelease();
}

id sub_1BA679EB0(void (*a1)(_QWORD))
{
  a1(0);
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
}

uint64_t type metadata accessor for FormatLayoutView()
{
  uint64_t result;

  result = qword_1ED3D2530;
  if (!qword_1ED3D2530)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FormatImageView()
{
  uint64_t result;

  result = qword_1ED3C6F00;
  if (!qword_1ED3C6F00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FormatLabel()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatView()
{
  return objc_opt_self();
}

id sub_1BA679FA4()
{
  return sub_1BA679EB0((void (*)(_QWORD))type metadata accessor for FormatView);
}

id sub_1BA679FB0()
{
  return sub_1BA679EB0((void (*)(_QWORD))type metadata accessor for FormatImageView);
}

id sub_1BA679FBC()
{
  return sub_1BA679EB0((void (*)(_QWORD))type metadata accessor for FormatLabel);
}

id sub_1BA679FE8(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC8NewsFeed11FormatLabel_identifier];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0xE000000000000000;
  v11 = OBJC_IVAR____TtC8NewsFeed11FormatLabel_linkHandler;
  v12 = objc_allocWithZone((Class)type metadata accessor for FormatLabelLinkHandler());
  v13 = v4;
  *(_QWORD *)&v4[v11] = objc_msgSend(v12, sel_init);

  v17.receiver = v13;
  v17.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  swift_unknownObjectWeakAssign();
  v15 = v14;
  objc_msgSend(v15, sel_setNumberOfLines_, 0);
  objc_msgSend(v15, sel_setLineBreakMode_, 4);

  return v15;
}

uint64_t type metadata accessor for FormatLabelLinkHandler()
{
  return objc_opt_self();
}

id sub_1BA67A220(_BYTE *a1, double a2, double a3, double a4, double a5)
{
  objc_class *ObjectType;
  _QWORD *v11;
  id v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  v11 = &a1[qword_1ED3C2480];
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  a1[qword_1ED3C6EF8] = 0;
  v14.receiver = a1;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a2, a3, a4, a5);
  objc_msgSend(v12, sel_setContentMode_, 4);
  return v12;
}

id sub_1BA67A2C4()
{
  return sub_1BA679EB0((void (*)(_QWORD))type metadata accessor for FormatLayoutView);
}

id sub_1BA67A2D0()
{
  return sub_1BA679EB0((void (*)(_QWORD))type metadata accessor for FormatStateView);
}

id sub_1BA67A2DC()
{
  return sub_1BA679EB0((void (*)(_QWORD))type metadata accessor for FormatButton);
}

uint64_t type metadata accessor for FormatStateView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatButton()
{
  return objc_opt_self();
}

char *FormatButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  uint64_t v12;
  objc_class *v13;
  objc_class *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  char *v22;
  void *v23;
  char *v24;
  id v25;
  objc_super v27;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = &v4[OBJC_IVAR____TtC8NewsFeed12FormatButton_identifier];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0xE000000000000000;
  v12 = OBJC_IVAR____TtC8NewsFeed12FormatButton_onTap;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0A50, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  v14 = v13;
  v15 = objc_allocWithZone(v13);
  v16 = v4;
  *(_QWORD *)&v5[v12] = objc_msgSend(v15, sel_init);
  v17 = OBJC_IVAR____TtC8NewsFeed12FormatButton_onLongPress;
  *(_QWORD *)&v16[v17] = objc_msgSend(objc_allocWithZone(v14), sel_init);
  v16[OBJC_IVAR____TtC8NewsFeed12FormatButton_isLongPressEnabled] = 0;
  v18 = OBJC_IVAR____TtC8NewsFeed12FormatButton_formatLayoutView;
  *(_QWORD *)&v16[v18] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatLayoutView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v16[OBJC_IVAR____TtC8NewsFeed12FormatButton_accessibilityRenderer] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8NewsFeed12FormatButton_stateMaskFormatLayoutViews] = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v16[OBJC_IVAR____TtC8NewsFeed12FormatButton_longPressGesture] = 0;
  v19 = &v16[OBJC_IVAR____TtC8NewsFeed12FormatButton_createMenuElementsBlock];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;

  v27.receiver = v16;
  v27.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  v21 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed12FormatButton_formatLayoutView];
  v22 = v20;
  objc_msgSend(v21, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v22, sel_addSubview_, v21);
  v23 = *(void **)&v22[OBJC_IVAR____TtC8NewsFeed12FormatButton_onTap];
  v24 = v22;
  v25 = v23;
  sub_1BB871368();

  return v24;
}

id sub_1BA67A604(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_identifier];
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v11 = &v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillShow];
  *v12 = 0;
  v12[1] = 0;
  v13 = &v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillHide];
  *v13 = 0;
  v13[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer] = 0;
  v14 = &v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_feedItem];
  v15 = type metadata accessor for FeedItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_token] = 0;
  v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_isDirty] = 0;
  v17 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers] = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers] = v16;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_loadAwareObservers] = v16;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_layoutObservers] = v16;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers] = v16;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewKey] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewsByName] = v17;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture] = 0;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C4618, (uint64_t (*)(uint64_t))type metadata accessor for DebugButton, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3258]);
  v18 = v4;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_debugButton] = sub_1BB86DD98();
  sub_1BA67A8CC();
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapAction] = sub_1BB86DD98();

  v22.receiver = v18;
  v22.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v22, sel_initWithFrame_, a1, a2, a3, a4);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = v19;
  swift_retain();
  sub_1BB86DD8C();
  swift_release();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1BB86DD8C();
  swift_release();
  swift_release();

  return v20;
}

void sub_1BA67A8CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4610)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B0A50, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
    v0 = sub_1BB86DDA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4610);
  }
}

uint64_t sub_1BA67A93C(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x1BCCE463C](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

_BYTE *sub_1BA67A9F8()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  id v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IssueCoverView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 0;
  v1 = v0;
  v2 = sub_1BA67AAC0();
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

  v3 = sub_1BA67AAC0();
  objc_msgSend(v3, sel_setContentMode_, 4);

  v4 = sub_1BA67AAC0();
  objc_msgSend(v1, sel_addSubview_, v4);

  return v1;
}

id sub_1BA67AAC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___staticContentView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___staticContentView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___staticContentView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)sub_1BB87171C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

_BYTE *sub_1BA67AB40()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IssueCoverView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 1;
  v1 = v0;
  v2 = sub_1BA67ABF0();
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

  v3 = sub_1BA67ABF0();
  objc_msgSend(v1, sel_addSubview_, v3);

  return v1;
}

id sub_1BA67ABF0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___dynamicContentView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___dynamicContentView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___dynamicContentView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t type metadata accessor for IssueCoverView()
{
  return objc_opt_self();
}

id IssueCoverView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  _QWORD *v10;
  char *v11;
  id v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___staticContentView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___dynamicContentView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView] = 0;
  v10 = &v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v11[32] = 1;
  v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 2;
  v14.receiver = v4;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v12, sel_setAccessibilityIgnoresInvertColors_, 1);
  return v12;
}

uint64_t type metadata accessor for FormatLayeredMediaView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatProgressPieView()
{
  return objc_opt_self();
}

char *sub_1BA67AE9C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  objc_super v27;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = &v4[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0xE000000000000000;
  v12 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer;
  v13 = objc_allocWithZone(MEMORY[0x1E0CD2840]);
  v14 = v4;
  *(_QWORD *)&v5[v12] = objc_msgSend(v13, sel_init);
  v15 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_radius] = 0;
  v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_clockwise] = 0;
  v16 = &v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_stepPercentage];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_minPercentage] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_maxPercentage] = 0x3FF0000000000000;
  v17 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_layerDelegate;
  *(_QWORD *)&v14[v17] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatProgressPieView.NonAnimatingLayerDelegate()), sel_init);

  v27.receiver = v14;
  v27.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  v19 = objc_msgSend(v18, sel_layer);
  v20 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer;
  objc_msgSend(v19, sel_addSublayer_, *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer]);

  v21 = objc_msgSend(v18, sel_layer);
  v22 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer;
  objc_msgSend(v21, sel_addSublayer_, *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer]);

  v23 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_layerDelegate];
  objc_msgSend(*(id *)&v18[v20], sel_setDelegate_, v23);
  v24 = *(id *)&v18[v22];
  v25 = v23;
  objc_msgSend(v24, sel_setDelegate_, v25);

  return v18;
}

uint64_t type metadata accessor for FormatProgressBarView()
{
  return objc_opt_self();
}

id sub_1BA67B150()
{
  return sub_1BA679EB0((void (*)(_QWORD))type metadata accessor for FormatLayeredMediaView);
}

id sub_1BA67B15C()
{
  return sub_1BA679EB0((void (*)(_QWORD))type metadata accessor for FormatProgressPieView);
}

id sub_1BA67B168()
{
  return sub_1BA679EB0((void (*)(_QWORD))type metadata accessor for FormatProgressBarView);
}

id sub_1BA67B174()
{
  return sub_1BA679EB0(MEMORY[0x1E0DB6D48]);
}

uint64_t initializeWithCopy for FormatLayoutContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA67B1F0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  unint64_t v5;
  id v6;
  uint64_t v8;
  id v9;

  if (a3 && (v5 = *(_QWORD *)(a3 + 120), v5 != 3))
  {
    sub_1BA6E6E84(v5);
    v8 = sub_1BA65D2C0(a4);
    sub_1BA6E6CF0(v5);
    v9 = objc_msgSend(a2, sel_imageWithRenderingMode_, v8);
  }
  else
  {
    v6 = a2;
  }
  return sub_1BB871710();
}

uint64_t sub_1BA67B28C(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), **(unsigned __int8 **)(v2 + 16));
}

uint64_t sub_1BA67B2A8(uint64_t a1, uint64_t a2, char a3, char a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  unsigned int *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  char v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  char v49;

  v46 = a5;
  v47 = a6;
  v45 = a2;
  sub_1BA675B7C();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86FB08();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v44 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v44 - v17;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v19);
  v48 = (uint64_t)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v44 - v22;
  v25.n128_f64[0] = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v44 - v26;
  if (a3)
  {
    if (a3 == 1)
    {
      *v18 = a1 & 1;
      v28 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v18 = a1;
      v28 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 104))(v18, *v28, v13, v25);
  }
  else
  {
    v29 = v45;
    *(_QWORD *)v18 = a1;
    *((_QWORD *)v18 + 1) = v29;
    (*(void (**)(char *, _QWORD, uint64_t, double))(v14 + 104))(v18, *MEMORY[0x1E0DB7738], v13, v25.n128_f64[0]);
    swift_bridgeObjectRetain();
  }
  v30 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v30(v27, v18, v13);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v32 = v31(v27, 0, 1, v13);
  v49 = a4;
  if (a4 == 2)
  {
    v33 = v23;
    v34 = 1;
  }
  else
  {
    v46(v32);
    sub_1BB870288();
    v33 = v23;
    v34 = 0;
  }
  v31(v33, v34, 1, v13);
  v35 = (uint64_t)&v12[*(int *)(v10 + 48)];
  v36 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v27, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v23, v35, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v37((uint64_t)v12, 1, v13) == 1)
  {
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v37(v35, 1, v13) == 1)
    {
      v38 = -1;
    }
    else
    {
      v36 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v38 = 0;
    }
  }
  else
  {
    v39 = v48;
    sub_1BA4C2DD8((uint64_t)v12, v48, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v37(v35, 1, v13) == 1)
    {
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v39, v13);
      v38 = 0;
      v36 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v40 = v44;
      v30(v44, (char *)v35, v13);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v38 = sub_1BB872958();
      v41 = *(void (**)(char *, uint64_t))(v14 + 8);
      v41(v40, v13);
      v42 = v39;
      v36 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v41((char *)v42, v13);
    }
  }
  sub_1BA4A2E80((uint64_t)v12, v36);
  return v38 & 1;
}

uint64_t sub_1BA67B680(uint64_t a1)
{
  return sub_1BA67B28C(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFE1AEC);
}

uint64_t sub_1BA67B68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA67B6CC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1E72D9220, (uint64_t)sub_1BA818B2C, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8148]);
}

uint64_t sub_1BA67B6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))
{
  char v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v22;
  char v23;

  v13 = *((_BYTE *)a6 + 8);
  v22 = *a6;
  v23 = v13;
  ObjectType = swift_getObjectType();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  sub_1BA4C3E90(0, &qword_1ED3BE418, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SaveCommandContext);
  v17 = v16;
  v18 = sub_1BA67B7E0();
  v19 = sub_1BA67B824();
  swift_retain();
  a9(a5, &v22, a8, v15, v17, &type metadata for SavingCommandState, v18, v19, ObjectType, a2);
  return swift_release();
}

unint64_t sub_1BA67B7E0()
{
  unint64_t result;

  result = qword_1ED3B59A0;
  if (!qword_1ED3B59A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SavingCommandState, &type metadata for SavingCommandState);
    atomic_store(result, (unint64_t *)&qword_1ED3B59A0);
  }
  return result;
}

unint64_t sub_1BA67B824()
{
  unint64_t result;

  result = qword_1ED3B5990;
  if (!qword_1ED3B5990)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SavingCommandState, &type metadata for SavingCommandState);
    atomic_store(result, (unint64_t *)&qword_1ED3B5990);
  }
  return result;
}

unint64_t sub_1BA67B868()
{
  unint64_t result;

  result = qword_1ED3C8090;
  if (!qword_1ED3C8090)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SavingCommandState, &type metadata for SavingCommandState);
    atomic_store(result, (unint64_t *)&qword_1ED3C8090);
  }
  return result;
}

uint64_t sub_1BA67B8AC()
{
  sub_1BA67B8E4();
  return sub_1BB872CE8();
}

unint64_t sub_1BA67B8E4()
{
  unint64_t result;

  result = qword_1ED3C80A0;
  if (!qword_1ED3C80A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SavingCommandState, &type metadata for SavingCommandState);
    atomic_store(result, (unint64_t *)&qword_1ED3C80A0);
  }
  return result;
}

void sub_1BA67B928(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1BA67BEE0(a3);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a2 & 1) == 0)
  {
    sub_1BB4C66BC();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(double *)(v16[6] + v20) = a3;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_1BA49C158(v13, a2 & 1);
  v18 = sub_1BA67BEE0(a3);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BB874560();
  __break(1u);
}

uint64_t sub_1BA67BA5C(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  char v30;
  id v31;
  _QWORD aBlock[6];
  uint64_t v33;

  v5 = v4;
  type metadata accessor for FormatTimerObserver();
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v9 + 24) = a3;
  *(_QWORD *)(v9 + 32) = a4;
  swift_beginAccess();
  v10 = *(_QWORD *)(v5 + 24);
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_1BA67BEE0(a1), (v12 & 1) != 0))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v13 = MEMORY[0x1E0DEE9D8];
  }
  aBlock[0] = v13;
  swift_retain();
  v14 = swift_retain();
  MEMORY[0x1BCCE36AC](v14);
  if (*(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  result = sub_1BB872DCC();
  v16 = aBlock[0];
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (v17)
      goto LABEL_9;
LABEL_20:
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1E0DEE9D8];
    goto LABEL_21;
  }
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v17)
    goto LABEL_20;
LABEL_9:
  if (v17 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v17; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0)
    {
      v19 = MEMORY[0x1BCCE4630](i, v16);
    }
    else
    {
      v19 = *(_QWORD *)(v16 + 8 * i + 32);
      swift_retain();
    }
    v20 = (void *)MEMORY[0x1BCCE5D40](v19 + 16);

    if (v20)
    {
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v21 = aBlock[0];
LABEL_21:
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33 = *(_QWORD *)(v5 + 24);
  *(_QWORD *)(v5 + 24) = 0x8000000000000000;
  sub_1BA67BFAC(v21, isUniquelyReferenced_nonNull_native, a1);
  *(_QWORD *)(v5 + 24) = v33;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v5 + 16) + 16) && (sub_1BA67BEE0(a1), (v23 & 1) != 0))
  {
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    v24 = swift_allocObject();
    swift_weakInit();
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v24;
    *(double *)(v25 + 24) = a1;
    aBlock[4] = sub_1BB5BECC0;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA573874;
    aBlock[3] = &block_descriptor_10_5;
    v26 = _Block_copy(aBlock);
    v27 = (void *)objc_opt_self();
    swift_retain();
    v28 = objc_msgSend(v27, sel_timerWithTimeInterval_repeats_block_, 1, v26, a1);
    _Block_release(v26);
    swift_release();
    swift_release();
    swift_beginAccess();
    v29 = v28;
    v30 = swift_isUniquelyReferenced_nonNull_native();
    v33 = *(_QWORD *)(v5 + 16);
    *(_QWORD *)(v5 + 16) = 0x8000000000000000;
    sub_1BA67B928((uint64_t)v29, v30, a1);
    *(_QWORD *)(v5 + 16) = v33;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v31 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop);
    objc_msgSend(v31, sel_addTimer_forMode_, v29, *MEMORY[0x1E0C99860]);

  }
  return swift_release();
}

unint64_t sub_1BA67BEE0(double a1)
{
  uint64_t v2;

  v2 = sub_1BB8745C0();
  return sub_1BA67BF14(v2, a1);
}

unint64_t sub_1BA67BF14(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      v7 = ~v4;
      for (result = (result + 1) & v7;
            ((*(_QWORD *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1BA67BFAC(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1BA67BEE0(a3);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C6858();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(double *)(v16[6] + v19) = a3;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1BA499F70(result, a2 & 1);
  result = sub_1BA67BEE0(a3);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatTimerObserver()
{
  return objc_opt_self();
}

uint64_t sub_1BA67C100@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;

  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
  return sub_1BA67C198(v5[2], v5[3], v5[4], v5[5], v5[6], v5[8], (uint64_t)v5 + ((v12 + 72) & ~v12), a1, a2, a3, a4, a5);
}

uint64_t sub_1BA67C198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>)
{
  uint64_t v12;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  double v30;
  double v31;
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t inited;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t result;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  uint64_t v94[4];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  double v99;
  double v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  char v105;
  _QWORD v106[2];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  char v111;
  uint64_t v112;

  v87 = a7;
  v88 = a6;
  v89 = a2;
  sub_1BA7226D8();
  MEMORY[0x1E0C80A78](v22);
  v84 = (uint64_t)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v85 = (uint64_t)&v77 - v25;
  v26 = type metadata accessor for FormatNodeStateData.Data();
  v81 = *(_QWORD *)(v26 - 8);
  v82 = v26;
  MEMORY[0x1E0C80A78](v26);
  v83 = (uint64_t *)((char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = 0uLL;
  v86 = a5;
  if (a1 && (v29 = *(_QWORD *)(a1 + 240), v29 != 1))
  {
    v78 = a4;
    v50 = *(_QWORD *)(a1 + 248);
    v97 = v29;
    v98 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA52688C(v89, (uint64_t)&v99, a11, a12);
    result = sub_1BA6E6D00(v29);
    if (v12)
      return result;
    v79 = a1;
    v80 = a8;
    v112 = 0;
    v30 = v99;
    v31 = v100;
    v28 = v101;
    v33 = v102;
    v34 = v103;
    v35 = v104;
    v32 = v105;
    a4 = v78;
  }
  else
  {
    v79 = a1;
    v80 = a8;
    v112 = v12;
    v30 = 0.0;
    v31 = 0.0;
    v32 = 0;
    v33 = 0uLL;
    v34 = 0uLL;
    v35 = 0uLL;
  }
  *(double *)v106 = v30;
  *(double *)&v106[1] = v31;
  v107 = v28;
  v108 = v33;
  v109 = v34;
  v110 = v35;
  v111 = v32;
  swift_unownedRetainStrong();
  v36 = *(double *)(a3 + 72);
  swift_retain();
  swift_release();
  v99 = v36;
  sub_1BA67CC20();
  v38 = v37;
  v40 = v39;
  v42 = v41;
  swift_release();
  if (v31 != 0.0)
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BBB90, (uint64_t)&type metadata for FormatNodeCacheKey, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
    *(_QWORD *)(inited + 32) = v38;
    *(_QWORD *)(inited + 40) = v40;
    *(_BYTE *)(inited + 48) = v42 & 1;
    v97 = 0;
    v98 = 0xE000000000000000;
    v99 = a9;
    v100 = a10;
    *(double *)&v101 = a11;
    *((double *)&v101 + 1) = a12;
    type metadata accessor for CGRect(0);
    sub_1BB873E34();
    v44 = v98;
    *(_QWORD *)(inited + 56) = v97;
    *(_QWORD *)(inited + 64) = v44;
    *(_BYTE *)(inited + 72) = 0;
    swift_bridgeObjectRetain();
    v99 = 0.0;
    v100 = -2.68156159e154;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  swift_bridgeObjectRetain();
  v47 = v89;
  v48 = v112;
  sub_1BA739A68(a9, a10, a11, a12, v89, (uint64_t)v106);
  if (v48)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v112 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v51 = v95;
    v52 = v82;
    v53 = (uint64_t)v83;
    *v83 = v95;
    swift_storeEnumTagMultiPayload();
    v54 = v85;
    sub_1BA4C2DD8(v53, v85, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v81 + 56))(v54, 0, 1, v52);
    v55 = v84;
    sub_1BA4C2DD8(v54, v84, (uint64_t (*)(_QWORD))sub_1BA7226D8);
    swift_beginAccess();
    v88 = v51 & 0x1FFFFFFFFFFFFFFFLL;
    swift_retain();
    v56 = v86;
    swift_bridgeObjectRetain();
    v78 = a4;
    sub_1BA722740(v55, a4, v56);
    swift_endAccess();
    sub_1BA4A2E80(v54, (uint64_t (*)(_QWORD))sub_1BA7226D8);
    sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    v57 = *(_QWORD *)(v47 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    swift_unownedRetainStrong();
    swift_beginAccess();
    v59 = *(_QWORD *)(a3 + 16);
    v58 = *(_QWORD *)(a3 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    v60 = *(_QWORD *)(v57 + 40);
    if (v60)
    {
      v97 = *(_QWORD *)(v57 + 32);
      v98 = v60;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v61);
      sub_1BB872AFC(v62);
      swift_bridgeObjectRelease();
      v59 = v97;
      v58 = v98;
    }
    swift_unownedRetainStrong();
    swift_beginAccess();
    v63 = *(_QWORD *)(a3 + 16);
    v84 = *(_QWORD *)(a3 + 24);
    v85 = v63;
    swift_bridgeObjectRetain();
    swift_release();
    swift_unownedRetainStrong();
    v64 = *(_QWORD *)(a3 + 40);
    swift_retain();
    swift_release();
    v87 = v59;
    if (v64)
    {
      v65 = *(_QWORD *)(v64 + 16);
      swift_retain();
      swift_release();
    }
    else
    {
      v65 = 0;
    }
    v83 = (_QWORD *)swift_allocObject();
    v96 = v65;
    swift_unownedRetainStrong();
    swift_beginAccess();
    v82 = *(_QWORD *)(a3 + 80);
    swift_release();
    swift_unownedRetainStrong();
    swift_beginAccess();
    v66 = *(_QWORD *)(a3 + 88);
    sub_1BA67D3F4(v66);
    swift_release();
    v93 = v66;
    sub_1BA67C978(v47, v94);
    sub_1BA6EEDB4(v66);
    swift_unownedRetainStrong();
    swift_beginAccess();
    LOBYTE(v66) = *(_BYTE *)(a3 + 96);
    swift_release();
    sub_1BB86DD80();
    v67 = v90;
    swift_unownedRetainStrong();
    v68 = *(_QWORD *)(a3 + 104);
    v69 = *(_BYTE *)(a3 + 112);
    swift_release();
    v91 = v68;
    v92 = v69;
    swift_unownedRetainStrong();
    swift_beginAccess();
    v71 = *(_QWORD *)(a3 + 128);
    v70 = *(_QWORD *)(a3 + 136);
    swift_bridgeObjectRetain();
    swift_release();
    swift_unownedRetainStrong();
    swift_beginAccess();
    v72 = *(_BYTE *)(a3 + 97);
    swift_release();
    type metadata accessor for FormatImageNodeLayoutAttributes();
    swift_allocObject();
    v73 = v79;
    swift_retain();
    v74 = v86;
    swift_bridgeObjectRetain();
    v75 = FormatImageNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:shouldCancelContextMenu:)(v78, v74, v87, v58, v85, v84, v73, &v96, a9, a10, a11, a12, v82, v94, v66, v67, &v91, v71, v70,
            v72);
    result = swift_release();
    v76 = (unint64_t)v83;
    v83[2] = v75;
    *v80 = v76 | 0x2000000000000004;
  }
  return result;
}

unint64_t sub_1BA67C978@<X0>(unint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v3 = result;
  v5 = *v2;
  v6 = (unint64_t)*v2 >> 62;
  if ((_DWORD)v6)
  {
    if ((_DWORD)v6 == 1)
    {
      v7 = *(_QWORD *)(v5 + 16);
      v8 = *(_QWORD *)(v5 + 24);
      sub_1BA67D3F4(v7);
      swift_bridgeObjectRetain();
      sub_1BA9A3890(v7, v8, (uint64_t *)&v14);
      v9 = v14;
      sub_1BA67C978(v3);
      sub_1BA6EEDB4(v7);
      swift_bridgeObjectRelease();
      return sub_1BA6EEDB4(v9);
    }
    else if (v5 == 0x8000000000000000)
    {
      *a2 = 0x8000000000000000;
    }
    else
    {
      *a2 = 0x8000000000000008;
    }
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 16);
    v10 = *(_QWORD *)(v5 + 24);
    v12 = swift_allocObject();
    result = sub_1BA717D44(v11, v10);
    *(_QWORD *)(v12 + 16) = result;
    *(_QWORD *)(v12 + 24) = v13;
    *a2 = v12;
  }
  return result;
}

uint64_t type metadata accessor for FormatImageNodeLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t FormatImageNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:shouldCancelContextMenu:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  ValueMetadata *v30;
  _UNKNOWN **v31;
  uint64_t v32;

  v21 = *a8;
  v22 = *a14;
  v23 = *a17;
  v24 = *((_BYTE *)a17 + 8);
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = a3;
  *(_QWORD *)(v20 + 40) = a4;
  *(_QWORD *)(v20 + 48) = a5;
  *(_QWORD *)(v20 + 56) = a6;
  *(double *)(v20 + 64) = a9;
  *(double *)(v20 + 72) = a10;
  *(double *)(v20 + 80) = a11;
  *(double *)(v20 + 88) = a12;
  *(_QWORD *)(v20 + 96) = a7;
  *(_QWORD *)(v20 + 104) = v21;
  *(_QWORD *)(v20 + 112) = a13;
  *(_QWORD *)(v20 + 120) = v22;
  *(_BYTE *)(v20 + 128) = a15;
  *(_QWORD *)(v20 + 136) = a16;
  *(_QWORD *)(v20 + 144) = v23;
  *(_BYTE *)(v20 + 152) = v24;
  *(_QWORD *)(v20 + 160) = a18;
  *(_QWORD *)(v20 + 168) = a19;
  *(_BYTE *)(v20 + 129) = a20;
  if (a7)
  {
    sub_1BB5F05C4();
    inited = swift_initStackObject();
    v27 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    v28 = *(_QWORD *)(a7 + 72);
    if ((~v28 & 0xF000000000000007) != 0)
    {
      v31 = &protocol witness table for FormatBackground;
      v30 = &type metadata for FormatBackground;
      v29 = *(_QWORD *)(a7 + 72);
    }
    else
    {
      v29 = 0;
      v30 = 0;
      v31 = 0;
      *(_QWORD *)(inited + 40) = 0;
      *(_QWORD *)(inited + 48) = 0;
    }
    *(_QWORD *)(inited + 32) = v29;
    *(_QWORD *)(inited + 56) = v30;
    *(_QWORD *)(inited + 64) = v31;
    swift_retain_n();
    swift_retain();
    sub_1BA6E6C68(v28);
    v32 = sub_1BA67DB8C(v27);
    swift_setDeallocating();
    sub_1BA65DC00(0, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
    swift_arrayDestroy();
    swift_release();
    swift_release_n();
  }
  else
  {
    v32 = MEMORY[0x1E0DEE9E8];
  }
  *(_QWORD *)(v20 + 176) = v32;
  return v20;
}

void sub_1BA67CC20()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA67CC6C()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BA67D154@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  unint64_t v39;
  uint64_t v40;

  v9 = *a1;
  v10 = a2 + 2;
  v11 = *(_QWORD *)(a3 + 40);
  v40 = a5;
  if (v11)
  {
    v36 = *(_QWORD *)(v11 + 16);
    swift_retain();
  }
  else
  {
    v36 = 0;
  }
  swift_beginAccess();
  v35 = *(_QWORD *)(a3 + 56);
  swift_beginAccess();
  v39 = *(_QWORD *)(a3 + 64);
  v12 = v39;
  swift_retain();
  sub_1BA67D3F4(v39);
  v34 = v9;
  sub_1BA67C978(a4, v38);
  sub_1BA6EEDB4(v12);
  v33 = v38[0];
  swift_beginAccess();
  v32 = *(unsigned __int8 *)(a3 + 72);
  sub_1BB86DD80();
  v31 = *(_QWORD *)(a3 + 96);
  v30 = *(unsigned __int8 *)(a3 + 104);
  swift_beginAccess();
  v13 = a2[4];
  v28 = a2[3];
  v29 = a2[2];
  v14 = a2[5];
  a2[2] = v34;
  a2[3] = v36;
  a2[4] = v35;
  a2[5] = v33;
  a2[6] = v32;
  a2[7] = v37;
  a2[8] = v31;
  a2[9] = v30;
  v15 = v40;
  a2[10] = 0;
  a2[11] = v15;
  swift_retain();
  sub_1BA67D410(v29, v28, v13, v14);
  result = swift_beginAccess();
  if (*(_QWORD *)(a3 + 128))
  {
    *a6 = 0xA000000000000004;
  }
  else
  {
    result = swift_beginAccess();
    v17 = *v10;
    if (*v10)
    {
      v19 = a2[10];
      v18 = a2[11];
      v20 = a2[8];
      v40 = a2[9];
      v21 = a2[7];
      v22 = *((_BYTE *)a2 + 48);
      v24 = a2[4];
      v23 = a2[5];
      v25 = a2[3];
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = v17;
      *(_QWORD *)(v26 + 24) = v25;
      *(_QWORD *)(v26 + 32) = v24;
      *(_QWORD *)(v26 + 40) = v23;
      *(_BYTE *)(v26 + 48) = v22 & 1;
      *(_QWORD *)(v26 + 56) = v21;
      *(_QWORD *)(v26 + 64) = v20;
      *(_BYTE *)(v26 + 72) = v40;
      *(_QWORD *)(v26 + 80) = v19;
      *(_QWORD *)(v26 + 88) = v18;
      *a6 = v26 | 0x1000000000000000;
      swift_retain();
      swift_retain();
      sub_1BA67D3F4(v23);
      swift_retain();
      swift_retain();
      return swift_retain();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

unint64_t sub_1BA67D3F4(unint64_t result)
{
  if ((result >> 62) <= 1)
    return swift_retain();
  return result;
}

uint64_t sub_1BA67D410(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result)
  {
    swift_release();
    swift_release();
    sub_1BA6EEDB4(a4);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t FormatViewNodeStyle.auxViewRequirements.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  ValueMetadata *v4;
  _UNKNOWN **v5;
  uint64_t v6;

  sub_1BA67D7C8(0, (unint64_t *)&qword_1ED3B9F90, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v2 = *(_QWORD *)(v0 + 64);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    v5 = &protocol witness table for FormatBackground;
    v4 = &type metadata for FormatBackground;
    v3 = *(_QWORD *)(v0 + 64);
  }
  else
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 48) = 0;
  }
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = v5;
  sub_1BA6E6C68(v2);
  v6 = sub_1BA67DB8C(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  swift_arrayDestroy();
  return v6;
}

uint64_t FormatTextNodeStyle.auxViewRequirements.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[16];
  __int128 v6[8];

  sub_1BA67D7C8(0, (unint64_t *)&qword_1ED3B9F90, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA744E38(v0 + 64, (uint64_t)v5, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA744E38((uint64_t)v5, (uint64_t)v6, (unint64_t *)&qword_1ED3B30E8);
  if (sub_1BAB05F98((uint64_t)v6) == 1)
  {
    *(_QWORD *)(inited + 64) = 0;
    *(_OWORD *)(inited + 32) = 0u;
    *(_OWORD *)(inited + 48) = 0u;
  }
  else
  {
    *(_QWORD *)(inited + 56) = &type metadata for FormatFill;
    *(_QWORD *)(inited + 64) = &protocol witness table for FormatFill;
    v2 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v2;
    sub_1BA7439D4(v6, v2 + 16);
  }
  sub_1BA6A0C50(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
  v3 = sub_1BA67DB8C(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  swift_arrayDestroy();
  return v3;
}

uint64_t FormatImageNodeStyle.auxViewRequirements.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  ValueMetadata *v4;
  _UNKNOWN **v5;
  uint64_t v6;

  sub_1BA67D7C8(0, (unint64_t *)&qword_1ED3B9F90, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v2 = *(_QWORD *)(v0 + 72);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    v5 = &protocol witness table for FormatBackground;
    v4 = &type metadata for FormatBackground;
    v3 = *(_QWORD *)(v0 + 72);
  }
  else
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 48) = 0;
  }
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = v5;
  sub_1BA6E6C68(v2);
  v6 = sub_1BA67DB8C(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  swift_arrayDestroy();
  return v6;
}

void sub_1BA67D7C8(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BA65DC00(255, a3, a4);
    v5 = sub_1BB874218();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BA67D820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[40];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E8];
  v2 = a1 + 32;
  swift_bridgeObjectRetain();
  v3 = MEMORY[0x1E0DEE9E8];
  do
  {
    sub_1BA67D934(v2, (uint64_t)v15);
    sub_1BA67D934((uint64_t)v15, (uint64_t)&v10);
    if (v11)
    {
      sub_1BA4CECCC(&v10, (uint64_t)v12);
      v5 = v13;
      v6 = v14;
      __swift_project_boxed_opaque_existential_1(v12, v13);
      v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      swift_bridgeObjectRetain();
      v8 = v7(v5, v6);
      v4 = sub_1BA67DB80(v8, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    }
    else
    {
      sub_1BA67D9E0((uint64_t)&v10);
      swift_bridgeObjectRetain();
      v4 = v3;
    }
    sub_1BA67D9E0((uint64_t)v15);
    swift_bridgeObjectRelease();
    v2 += 40;
    v3 = v4;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BA67D934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAA7FD74(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BA67D978(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA4D9CE8(255, (unint64_t *)&qword_1EF2A9760);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA67D9E0(uint64_t a1)
{
  uint64_t v2;

  sub_1BAA7FD74(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA67DA1C(uint64_t result, uint64_t a2, uint64_t (*a3)(char *, _QWORD))
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  uint64_t v17;

  v4 = result;
  v5 = 0;
  v17 = a2;
  v6 = result + 56;
  v7 = 1 << *(_BYTE *)(result + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(result + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v10)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        goto LABEL_23;
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          goto LABEL_23;
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
        {
          v5 = v13 + 3;
          if (v13 + 3 >= v10)
            goto LABEL_23;
          v14 = *(_QWORD *)(v6 + 8 * v5);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    result = a3(&v16, *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v12));
  }
  v15 = v13 + 4;
  if (v15 >= v10)
  {
LABEL_23:
    swift_release();
    return v17;
  }
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BA67DB80(uint64_t a1, uint64_t a2)
{
  return sub_1BA67DA1C(a1, a2, (uint64_t (*)(char *, _QWORD))sub_1BA67DCA0);
}

void FormatFill.auxViewRequirements.getter()
{
  __int128 *v0;
  char *v1;
  __int128 v2[8];
  _BYTE v3[128];

  sub_1BA7439D4(v0, (uint64_t)v2);
  sub_1BA7439D4(v2, (uint64_t)v3);
  v1 = (char *)sub_1BA67DBE0 + 4 * byte_1BB8FAB14[sub_1BAB05900((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1BA67DBE0()
{
  uint64_t v1;

  sub_1BAB0593C((uint64_t)&v1);
  return MEMORY[0x1E0DEE9E8];
}

uint64_t FormatBackground.auxViewRequirements.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)(void *))((char *)sub_1BA67DC58 + 4 * byte_1BB90E9E8[*v0 >> 61]))(&unk_1E724FC78);
}

uint64_t sub_1BA67DC58()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1BA67DC64()
{
  return sub_1BA862CF8((uint64_t)&unk_1E724FCA0);
}

uint64_t sub_1BA67DC70()
{
  return sub_1BA862CF8((uint64_t)&unk_1E724FCC8);
}

uint64_t sub_1BA67DC7C()
{
  return sub_1BA862CF8((uint64_t)&unk_1E724FCF0);
}

uint64_t sub_1BA67DC88()
{
  return sub_1BA862CF8((uint64_t)&unk_1E724FD18);
}

uint64_t sub_1BA67DC94()
{
  return sub_1BA862CF8((uint64_t)&unk_1E724FD40);
}

void sub_1BA67DCA0(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA67DD0C()
{
  _BYTE *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v7;

  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v4 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  *v1 = 0x8000000000000000;
  sub_1BA67E16C(v2, v4, isUniquelyReferenced_nonNull_native);
  *v1 = v7;
  swift_bridgeObjectRelease();
  result = 1;
  *v0 = (_BYTE)v2;
  return result;
}

void sub_1BA67E074(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA67E0C0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void *sub_1BA67E16C(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BA9DCFD4();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_1BA67E554();
LABEL_8:
      sub_1BB8745CC();
      __asm { BR              X10 }
    }
    result = sub_1BA9E6E00((unint64_t *)&unk_1ED3B9A10, (void (*)(void))sub_1BA822498);
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x1BA67E538);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

uint64_t sub_1BA67E554()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = *v0;
  sub_1BA756C1C(0, (unint64_t *)&unk_1ED3B9A10, (void (*)(void))sub_1BA822498);
  v3 = sub_1BB873C60();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_retain();
  if (v6)
  {
    v9 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 <= 1)
    goto LABEL_21;
  v10 = *(_QWORD *)(v2 + 64);
  v11 = 1;
  if (v10)
  {
LABEL_19:
    v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
    v13 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v9);
    sub_1BB8745CC();
    __asm { BR              X8 }
  }
  v11 = 2;
  if (v7 <= 2)
  {
LABEL_21:
    result = swift_release_n();
    v1 = v0;
LABEL_23:
    *v1 = v3;
    return result;
  }
  v10 = *(_QWORD *)(v2 + 72);
  if (v10)
    goto LABEL_19;
  v11 = 3;
  if (v7 <= 3)
    goto LABEL_21;
  v10 = *(_QWORD *)(v2 + 80);
  if (v10)
    goto LABEL_19;
  v12 = 4;
  if (v7 <= 4)
    goto LABEL_21;
  v10 = *(_QWORD *)(v2 + 88);
  if (v10)
  {
    v11 = 4;
    goto LABEL_19;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v7)
      goto LABEL_21;
    v10 = *(_QWORD *)(v2 + 56 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA67E8A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA67E8D4 + 4 * byte_1BB8AEE88[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA67E8D4()
{
  return 0x6F69746172657469;
}

uint64_t sub_1BA67E8F0()
{
  return 7235949;
}

uint64_t sub_1BA67E900()
{
  return 7889261;
}

uint64_t sub_1BA67E910()
{
  return 0x656469727473;
}

uint64_t sub_1BA67E924()
{
  return 0x65706F6373;
}

uint64_t sub_1BA67E938()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1BA67E950()
{
  return 1885433183;
}

uint64_t FormatSnippetNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *);
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v58[3];
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;
  __int128 v66;
  char v67;
  uint64_t v68;
  __int128 v69;
  char v70;
  unint64_t v71;

  v2 = v1;
  v4 = *v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v59 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v60 = (char *)v58 - v8;
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)v58 - v10;
  MEMORY[0x1E0C80A78](v11);
  v61 = (char *)v58 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v58 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v58 - v17;
  sub_1BAEBB2A8(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = sub_1BAEBB398();
  v25 = sub_1BA4A2870(&qword_1ED3D0CC0, (uint64_t (*)(uint64_t))sub_1BAEBB398, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v26, v22, v4, v24, (uint64_t)&type metadata for FormatVersions.JazzkonC, v23, (uint64_t)v21, v25, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v28 = v2[2];
  v27 = v2[3];
  v64 = v2;
  v29 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v29 != -1)
    swift_once();
  v30 = sub_1BB86EB84();
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C20);
  v32 = *(void (**)(char *))(*(_QWORD *)(v30 - 8) + 16);
  v63 = v31;
  v32(v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v33 = v65;
  sub_1BAD265E8(v28, v27, 0, 0, 0, (uint64_t)v18, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE51EC4, (uint64_t (*)(uint64_t))sub_1BAEBB320, &qword_1ED3AE7F0);
  if (!v33)
  {
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v35 = v64;
    swift_beginAccess();
    v36 = v35[4];
    v37 = v35[5];
    ((void (*)(char *, uint64_t, uint64_t))v32)(v15, v63, v30);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1EE94(v36, v37, 1, 0, 0, (uint64_t)v15, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v65 = v21;
    v38 = (uint64_t)v61;
    v39 = v63;
    ((void (*)(char *, uint64_t, uint64_t))v32)(v61, v63, v30);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
    ((void (*)(uint64_t, uint64_t, uint64_t))v32)(v38, v39, v30);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
    v40 = v64;
    swift_beginAccess();
    v41 = v40[10];
    v42 = (uint64_t)v62;
    ((void (*)(char *, uint64_t, uint64_t))v32)(v62, v39, v30);
    swift_storeEnumTagMultiPayload();
    v43 = *(_QWORD *)(v41 + 16);
    swift_bridgeObjectRetain();
    if (v43)
    {
      if ((sub_1BAE51EC4(v42, 4, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v69 = xmmword_1BB8D2D90;
        v70 = 0;
        v44 = swift_bridgeObjectRetain();
        v45 = sub_1BA67F4CC(v44);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v66 = v45;
        swift_retain();
        sub_1BA67FABC((uint64_t *)&v66, sub_1BA67FB34, sub_1BA6801F8);
        v61 = 0;
        swift_release();
        v68 = v66;
        sub_1BAEBB320();
        v58[2] = v46;
        v58[1] = sub_1BA4A2870(&qword_1ED3AE7F0, (uint64_t (*)(uint64_t))sub_1BAEBB320, MEMORY[0x1E0DED188]);
        v47 = MEMORY[0x1E0DEA968];
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v47, MEMORY[0x1E0DEA970]);
        v34 = (uint64_t)v65;
        v48 = v61;
        sub_1BB874464();
        if (v48)
        {
          swift_release();
          v49 = (uint64_t)v62;
LABEL_19:
          sub_1BA4A2E80(v49, type metadata accessor for FormatVersionRequirement);
          swift_bridgeObjectRelease();
          return sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))sub_1BAEBB2A8);
        }
        swift_release();
        v42 = (uint64_t)v62;
      }
      v40 = v64;
    }
    sub_1BA4A2E80(v42, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v50 = (uint64_t)v60;
    ((void (*)(char *, uint64_t, uint64_t))v32)(v60, v39, v30);
    swift_storeEnumTagMultiPayload();
    v51 = swift_bridgeObjectRetain();
    sub_1BAD2BD40(v51, 5, 0, 0);
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v52 = (void (*)(char *, uint64_t, uint64_t))v32;
    swift_beginAccess();
    v53 = v40[12];
    v54 = qword_1ED3C6D58;
    swift_bridgeObjectRetain();
    if (v54 != -1)
      swift_once();
    v55 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C08);
    v49 = (uint64_t)v59;
    v52(v59, v55, v30);
    swift_storeEnumTagMultiPayload();
    if (v53 >> 62)
    {
      swift_bridgeObjectRetain();
      v56 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v56)
      {
LABEL_15:
        v34 = (uint64_t)v65;
        if ((sub_1BAE51EC4(v49, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
        {
          v66 = xmmword_1BB8D2DA0;
          v67 = 0;
          v71 = v53;
          sub_1BAEBB320();
          sub_1BA4A2870(&qword_1ED3AE7F0, (uint64_t (*)(uint64_t))sub_1BAEBB320, MEMORY[0x1E0DED188]);
          sub_1BA4B07F0(0, &qword_1ED3C0348, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1BA683888();
          sub_1BB874464();
          v34 = (uint64_t)v65;
        }
        goto LABEL_19;
      }
    }
    else if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_15;
    }
    v34 = (uint64_t)v65;
    goto LABEL_19;
  }
  sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v34 = (uint64_t)v21;
  return sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))sub_1BAEBB2A8);
}

uint64_t sub_1BA67F1EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA67F220 + 4 * byte_1BB8AEFB3[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA67F220()
{
  return 1701667182;
}

uint64_t sub_1BA67F230()
{
  return 0x7470697263736564;
}

uint64_t sub_1BA67F250()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1BA67F268()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BA67F280()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA67F29C()
{
  return 0x7365707974;
}

uint64_t sub_1BA67F2B0()
{
  return 1885433183;
}

uint64_t sub_1BA67F2C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA67F2F0 + 4 * byte_1BB8AF29D[*v0]))(0x726F7463656C6573, 0xE800000000000000);
}

uint64_t sub_1BA67F2F0()
{
  return 0x756F72676B636162;
}

uint64_t sub_1BA67F30C()
{
  return 0x73726564726F62;
}

uint64_t sub_1BA67F324()
{
  return 0x615272656E726F63;
}

uint64_t sub_1BA67F344()
{
  return 0x776F64616873;
}

uint64_t sub_1BA67F358()
{
  return 0x6168706C61;
}

unint64_t sub_1BA67F36C()
{
  return 0xD000000000000018;
}

uint64_t sub_1BA67F388()
{
  return 1885433183;
}

uint64_t sub_1BA67F398()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA67F3CC + 4 * byte_1BB8AEFBB[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BA67F3CC()
{
  return 0xD000000000000011;
}

uint64_t sub_1BA67F3E8()
{
  return 1701667182;
}

uint64_t sub_1BA67F3F8()
{
  return 0x7470697263736564;
}

uint64_t sub_1BA67F418()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA67F434()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BA67F44C()
{
  return 0x736B636F6C62;
}

uint64_t sub_1BA67F460()
{
  return 1885433183;
}

uint64_t sub_1BA67F470(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = a4;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1BA67F4CC(uint64_t a1)
{
  return sub_1BA67FF10(a1, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1BA67FFFC);
}

uint64_t FormatBindExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  __int128 v44;
  char v45;
  uint64_t v46;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v39 = (char *)&v36 - v6;
  MEMORY[0x1E0C80A78](v7);
  v41 = (char *)&v36 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - v10;
  sub_1BAE83774(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v1;
  v15 = v1[1];
  v40 = v1[2];
  v38 = v1[3];
  v36 = v1[4];
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BAE83604();
  v20 = sub_1BA4A2870(&qword_1ED3D0E90, (uint64_t (*)(uint64_t))sub_1BAE83604, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindExpression, v21, v17, (uint64_t)&type metadata for FormatBindExpression, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v14, v20, (uint64_t)&off_1E734BD80);
  v22 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v22 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25(v11, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v26 = v42;
  sub_1BAD265E8(v16, v15, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE4DFDC, (uint64_t (*)(uint64_t))sub_1BAE837EC, &qword_1ED3AE9F0);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v26)
  {
    v27 = (uint64_t)v41;
    v25(v41, v24, v23);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v28 = sub_1BAE4DFDC(v27, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    if ((v28 & 1) != 0)
    {
      v42 = v24;
      v44 = xmmword_1BB8A1A10;
      v45 = 0;
      v30 = swift_bridgeObjectRetain();
      v31 = sub_1BA68215C(v30);
      swift_bridgeObjectRelease();
      v43 = v31;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v43, sub_1BA6809AC, sub_1BA680B3C);
      swift_release();
      v46 = (uint64_t)v43;
      sub_1BAE837EC();
      sub_1BA4A2870(&qword_1ED3AE9F0, (uint64_t (*)(uint64_t))sub_1BAE837EC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3A0840, (uint64_t)&type metadata for FormatItemKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA682178();
      sub_1BB874464();
      swift_release();
      v27 = (uint64_t)v41;
      v24 = v42;
    }
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v32 = (uint64_t)v39;
    v25(v39, v24, v23);
    swift_storeEnumTagMultiPayload();
    v33 = v38;
    if (v38 != 1 && (sub_1BAE4DFDC(v32, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v44 = xmmword_1BB8D2D60;
      v45 = 0;
      v46 = v33;
      sub_1BAE837EC();
      sub_1BA4A2870(&qword_1ED3AE9F0, (uint64_t (*)(uint64_t))sub_1BAE837EC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80(v32, type metadata accessor for FormatVersionRequirement);
    v34 = (uint64_t)v37;
    v25(v37, v24, v23);
    swift_storeEnumTagMultiPayload();
    v35 = swift_bridgeObjectRetain();
    sub_1BAD29A00(v35, 3, 0, 0);
    sub_1BA4A2E80(v34, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BAE83774);
}

uint64_t sub_1BA67FABC(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_1BA67FB34(uint64_t a1)
{
  return sub_1BA744804(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BA67FB48(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  int64_t v40;
  unint64_t v41;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_1BA6EA0D0(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_1BA67FFFC((uint64_t)v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v14 = v4[2];
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    result = sub_1BA6EBD18();
    *(_QWORD *)v1 = v4;
    return result;
  }
LABEL_16:
  v2 = v4[2];
  v3 = v38[0];
  v37 = v38[1];
  v13 = v39;
  v6 = v40;
  if (v41)
  {
    v17 = (v41 - 1) & v41;
    v18 = __clz(__rbit64(v41)) | (v40 << 6);
    v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  v32 = v6 + 1;
  if (__OFADD__(v6, 1))
    goto LABEL_66;
  v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36)
    goto LABEL_13;
  v33 = *(_QWORD *)(v37 + 8 * v32);
  v34 = v6 + 1;
  if (!v33)
  {
    v34 = v6 + 2;
    if (v6 + 2 >= v36)
      goto LABEL_13;
    v33 = *(_QWORD *)(v37 + 8 * v34);
    if (!v33)
    {
      v34 = v6 + 3;
      if (v6 + 3 >= v36)
        goto LABEL_13;
      v33 = *(_QWORD *)(v37 + 8 * v34);
      if (!v33)
      {
        v34 = v6 + 4;
        if (v6 + 4 >= v36)
          goto LABEL_13;
        v33 = *(_QWORD *)(v37 + 8 * v34);
        if (!v33)
        {
          v34 = v6 + 5;
          if (v6 + 5 >= v36)
            goto LABEL_13;
          v33 = *(_QWORD *)(v37 + 8 * v34);
          if (!v33)
          {
            v35 = v6 + 6;
            do
            {
              if (v36 == v35)
                goto LABEL_13;
              v33 = *(_QWORD *)(v37 + 8 * v35++);
            }
            while (!v33);
            v34 = v35 - 1;
          }
        }
      }
    }
  }
  v17 = (v33 - 1) & v33;
  v18 = __clz(__rbit64(v33)) + (v34 << 6);
  v6 = v34;
LABEL_18:
  v19 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v18);
  v21 = *v19;
  v20 = v19[1];
  result = swift_bridgeObjectRetain();
  while (1)
  {
    v22 = v4[3];
    v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1)
      break;
    if (v2 < v23)
      goto LABEL_23;
LABEL_20:
    v4[2] = v2;
  }
  result = (uint64_t)sub_1BA6EA0D0((_QWORD *)(v22 > 1), v2 + 1, 1, v4);
  v4 = (_QWORD *)result;
  v23 = *(_QWORD *)(result + 24) >> 1;
  if (v2 >= v23)
    goto LABEL_20;
  while (1)
  {
LABEL_23:
    v24 = &v4[2 * v2 + 4];
    *v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    v27 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v27 >= v36)
      goto LABEL_45;
    v28 = *(_QWORD *)(v37 + 8 * v27);
    v29 = v6 + 1;
    if (!v28)
    {
      v29 = v6 + 2;
      if (v6 + 2 >= v36)
        goto LABEL_45;
      v28 = *(_QWORD *)(v37 + 8 * v29);
      if (!v28)
      {
        v29 = v6 + 3;
        if (v6 + 3 >= v36)
          goto LABEL_45;
        v28 = *(_QWORD *)(v37 + 8 * v29);
        if (!v28)
        {
          v29 = v6 + 4;
          if (v6 + 4 >= v36)
            goto LABEL_45;
          v28 = *(_QWORD *)(v37 + 8 * v29);
          if (!v28)
          {
            v29 = v6 + 5;
            if (v6 + 5 >= v36)
              goto LABEL_45;
            v28 = *(_QWORD *)(v37 + 8 * v29);
            if (!v28)
            {
              v30 = v6 + 6;
              while (v36 != v30)
              {
                v28 = *(_QWORD *)(v37 + 8 * v30++);
                if (v28)
                {
                  v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    v17 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    v6 = v29;
LABEL_41:
    v31 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v26);
    v21 = *v31;
    v20 = v31[1];
    if (v2 >= v23)
    {
      result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

_QWORD *sub_1BA67FF10(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BA4AD288(0, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = (_QWORD *)swift_allocObject();
  v8 = _swift_stdlib_malloc_size(v7);
  v9 = v8 - 32;
  if (v8 < 32)
    v9 = v8 - 17;
  v7[2] = v4;
  v7[3] = 2 * (v9 >> 4);
  v10 = a4(&v12, v7 + 4, v4, a1);
  swift_bridgeObjectRetain();
  sub_1BA6EBD18();
  if (v10 != v4)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

uint64_t sub_1BA67FFFC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BA6801F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1BA6808E0(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1BA98B678((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1BACAB464((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1BB874398();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1BB874398()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BACAA368(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1BACAA368((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1BA98B678((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1BB874398() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BA6808E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1BB874398(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA6809AC(uint64_t a1)
{
  return sub_1BA6809C0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BA6809C0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3C0550, (uint64_t)&type metadata for FormatItemKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA680B3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  __int128 *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  char v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  char v135;

  v3 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_293;
    if (v3)
      return sub_1BA766644(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_301;
  v124 = v3;
  v119 = result;
  v117 = a1;
  v128 = v1;
  if (v3 < 2)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    v127 = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v10 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_258:
      v122 = v7;
      if (v12 >= 2)
      {
        v108 = *v117;
        do
        {
          v109 = v12 - 2;
          if (v12 < 2)
            goto LABEL_288;
          if (!v108)
            goto LABEL_300;
          v110 = v10;
          v111 = v10 + 32;
          v112 = *(_QWORD *)&v10[16 * v109 + 32];
          v113 = *(_QWORD *)&v10[16 * v12 + 24];
          sub_1BAE5CC1C((uint64_t *)(v108 + 16 * v112), (uint64_t *)(v108 + 16 * *(_QWORD *)&v111[16 * v12 - 16]), v108 + 16 * v113, v127);
          if (v128)
            goto LABEL_270;
          if (v113 < v112)
            goto LABEL_289;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v110 = sub_1BACAB464((uint64_t)v110);
          if (v109 >= *((_QWORD *)v110 + 2))
            goto LABEL_290;
          v114 = &v110[16 * v109 + 32];
          *(_QWORD *)v114 = v112;
          *((_QWORD *)v114 + 1) = v113;
          v115 = *((_QWORD *)v110 + 2);
          if (v12 > v115)
            goto LABEL_291;
          v10 = v110;
          memmove(&v110[16 * v12 + 16], &v110[16 * v12 + 32], 16 * (v115 - v12));
          *((_QWORD *)v110 + 2) = v115 - 1;
          v12 = v115 - 1;
        }
        while (v115 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)(v122 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v127 = (uint64_t *)(v7 + 32);
  }
  v122 = v7;
  v8 = 0;
  v9 = *a1;
  v118 = *a1 + 40;
  v116 = *a1 - 16;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v11 = v124;
  v130 = *a1;
LABEL_15:
  v13 = v8;
  v14 = v8 + 1;
  v125 = v8;
  if (v8 + 1 >= v11)
  {
    v15 = v128;
    goto LABEL_131;
  }
  v120 = v10;
  v15 = v128;
  v16 = (uint64_t *)(v9 + 16 * v14);
  v18 = *v16;
  v17 = v16[1];
  v19 = (uint64_t *)(v9 + 16 * v8);
  v21 = *v19;
  v20 = v19[1];
  v22 = 0xE700000000000000;
  v23 = 0x656C6369747261;
  switch(v17)
  {
    case 0uLL:
      break;
    case 1uLL:
      v22 = 0xE500000000000000;
      v23 = 0x6575737369;
      break;
    case 2uLL:
      v22 = 0xE800000000000000;
      v23 = 0x6465626D45626577;
      break;
    case 3uLL:
      v22 = 0xEA00000000006B63;
      v23 = 0x6172546F69647561;
      break;
    case 4uLL:
      v22 = 0xE300000000000000;
      v23 = 6775156;
      break;
    case 5uLL:
      v22 = 0xE500000000000000;
      v23 = 0x65726F6373;
      break;
    case 6uLL:
      v22 = 0xE800000000000000;
      v23 = 0x676E69646E617473;
      break;
    case 7uLL:
      v23 = 0x74656B63617262;
      break;
    case 8uLL:
      v22 = 0xE800000000000000;
      v23 = 0x65726F6353786F62;
      break;
    case 9uLL:
      v23 = 0x726F6353656E696CLL;
      v22 = 0xE900000000000065;
      break;
    case 0xAuLL:
      v23 = 0x65527972756A6E69;
      v22 = 0xEC00000074726F70;
      break;
    case 0xBuLL:
      v22 = 0xE900000000000072;
      v23 = 0x6579616C5079656BLL;
      break;
    case 0xCuLL:
      v22 = 0xE600000000000000;
      v23 = 0x656C7A7A7570;
      break;
    case 0xDuLL:
      v23 = 0x7954656C7A7A7570;
      v22 = 0xEA00000000006570;
      break;
    case 0xEuLL:
      v23 = 0x7453656C7A7A7570;
      v22 = 0xEF63697473697461;
      break;
    default:
      v23 = v18;
      v22 = v17;
      break;
  }
  v24 = 0xE700000000000000;
  v25 = 0x656C6369747261;
  switch(v20)
  {
    case 0uLL:
      break;
    case 1uLL:
      v24 = 0xE500000000000000;
      v25 = 0x6575737369;
      break;
    case 2uLL:
      v24 = 0xE800000000000000;
      v25 = 0x6465626D45626577;
      break;
    case 3uLL:
      v24 = 0xEA00000000006B63;
      v25 = 0x6172546F69647561;
      break;
    case 4uLL:
      v24 = 0xE300000000000000;
      v25 = 6775156;
      break;
    case 5uLL:
      v24 = 0xE500000000000000;
      v25 = 0x65726F6373;
      break;
    case 6uLL:
      v24 = 0xE800000000000000;
      v25 = 0x676E69646E617473;
      break;
    case 7uLL:
      v25 = 0x74656B63617262;
      break;
    case 8uLL:
      v24 = 0xE800000000000000;
      v25 = 0x65726F6353786F62;
      break;
    case 9uLL:
      v25 = 0x726F6353656E696CLL;
      v24 = 0xE900000000000065;
      break;
    case 0xAuLL:
      v25 = 0x65527972756A6E69;
      v24 = 0xEC00000074726F70;
      break;
    case 0xBuLL:
      v24 = 0xE900000000000072;
      v25 = 0x6579616C5079656BLL;
      break;
    case 0xCuLL:
      v24 = 0xE600000000000000;
      v25 = 0x656C7A7A7570;
      break;
    case 0xDuLL:
      v25 = 0x7954656C7A7A7570;
      v24 = 0xEA00000000006570;
      break;
    case 0xEuLL:
      v25 = 0x7453656C7A7A7570;
      v24 = 0xEF63697473697461;
      break;
    default:
      v25 = *v19;
      v24 = v19[1];
      break;
  }
  if (v23 == v25 && v22 == v24)
    v134 = 0;
  else
    v134 = sub_1BB874398();
  sub_1BA682148(v21, v20);
  sub_1BA682148(v18, v17);
  sub_1BA682148(v18, v17);
  sub_1BA682148(v21, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA766C18(v21, v20);
  sub_1BA766C18(v18, v17);
  v14 = v13 + 2;
  if (v13 + 2 >= v11)
  {
    v9 = v130;
    goto LABEL_123;
  }
  v26 = (unint64_t *)(v118 + 16 * v13);
  while (2)
  {
    v131 = v14;
    v27 = *(v26 - 1);
    v28 = *v26;
    v30 = *(v26 - 3);
    v29 = *(v26 - 2);
    v31 = 0xE700000000000000;
    v32 = 0x656C6369747261;
    switch(*v26)
    {
      case 0uLL:
        goto LABEL_83;
      case 1uLL:
        v31 = 0xE500000000000000;
        v33 = 1970500457;
        goto LABEL_76;
      case 2uLL:
        v31 = 0xE800000000000000;
        v32 = 0x6465626D45626577;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      case 3uLL:
        v31 = 0xEA00000000006B63;
        v32 = 0x6172546F69647561;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      case 4uLL:
        v31 = 0xE300000000000000;
        v32 = 6775156;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      case 5uLL:
        v31 = 0xE500000000000000;
        v33 = 1919902579;
LABEL_76:
        v32 = v33 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      case 6uLL:
        v31 = 0xE800000000000000;
        v32 = 0x676E69646E617473;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      case 7uLL:
        v32 = 0x74656B63617262;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      case 8uLL:
        v31 = 0xE800000000000000;
        v32 = 0x65726F6353786F62;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      case 9uLL:
        v32 = 0x726F6353656E696CLL;
        v31 = 0xE900000000000065;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      case 0xAuLL:
        v32 = 0x65527972756A6E69;
        v31 = 0xEC00000074726F70;
        goto LABEL_83;
      case 0xBuLL:
        v31 = 0xE900000000000072;
        v32 = 0x6579616C5079656BLL;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      case 0xCuLL:
        v31 = 0xE600000000000000;
        v32 = 0x656C7A7A7570;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      case 0xDuLL:
        v32 = 0x7954656C7A7A7570;
        v31 = 0xEA00000000006570;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      case 0xEuLL:
        v32 = 0x7453656C7A7A7570;
        v31 = 0xEF63697473697461;
        if (v29 > 0xE)
          goto LABEL_77;
        goto LABEL_83;
      default:
        v32 = *(v26 - 1);
        v31 = *v26;
        if (v29 <= 0xE)
        {
LABEL_83:
          v35 = 0xE700000000000000;
          v34 = 0x656C6369747261;
          switch(v29)
          {
            case 0uLL:
              goto LABEL_84;
            case 1uLL:
              v35 = 0xE500000000000000;
              v37 = 1970500457;
              break;
            case 2uLL:
              v35 = 0xE800000000000000;
              if (v32 != 0x6465626D45626577)
                goto LABEL_116;
              goto LABEL_85;
            case 3uLL:
              v35 = 0xEA00000000006B63;
              if (v32 != 0x6172546F69647561)
                goto LABEL_116;
              goto LABEL_85;
            case 4uLL:
              v35 = 0xE300000000000000;
              if (v32 != 6775156)
                goto LABEL_116;
              goto LABEL_85;
            case 5uLL:
              v35 = 0xE500000000000000;
              v37 = 1919902579;
              break;
            case 6uLL:
              v35 = 0xE800000000000000;
              if (v32 != 0x676E69646E617473)
                goto LABEL_116;
              goto LABEL_85;
            case 7uLL:
              if (v32 != 0x74656B63617262)
                goto LABEL_116;
              goto LABEL_85;
            case 8uLL:
              v35 = 0xE800000000000000;
              if (v32 != 0x65726F6353786F62)
                goto LABEL_116;
              goto LABEL_85;
            case 9uLL:
              v35 = 0xE900000000000065;
              if (v32 != 0x726F6353656E696CLL)
                goto LABEL_116;
              goto LABEL_85;
            case 0xAuLL:
              v35 = 0xEC00000074726F70;
              if (v32 != 0x65527972756A6E69)
                goto LABEL_116;
              goto LABEL_85;
            case 0xBuLL:
              v35 = 0xE900000000000072;
              if (v32 != 0x6579616C5079656BLL)
                goto LABEL_116;
              goto LABEL_85;
            case 0xCuLL:
              v35 = 0xE600000000000000;
              if (v32 != 0x656C7A7A7570)
                goto LABEL_116;
              goto LABEL_85;
            case 0xDuLL:
              v35 = 0xEA00000000006570;
              if (v32 != 0x7954656C7A7A7570)
                goto LABEL_116;
              goto LABEL_85;
            case 0xEuLL:
              v35 = 0xEF63697473697461;
              if (v32 != 0x7453656C7A7A7570)
                goto LABEL_116;
              goto LABEL_85;
            default:
              goto LABEL_77;
          }
          if (v32 != (v37 & 0xFFFF0000FFFFFFFFLL | 0x6500000000))
            goto LABEL_116;
        }
        else
        {
LABEL_77:
          v34 = *(v26 - 3);
          v35 = *(v26 - 2);
LABEL_84:
          if (v32 != v34)
            goto LABEL_116;
        }
LABEL_85:
        if (v31 == v35)
        {
          v36 = 0;
          goto LABEL_117;
        }
LABEL_116:
        v36 = sub_1BB874398();
LABEL_117:
        sub_1BA682148(v30, v29);
        sub_1BA682148(v27, v28);
        sub_1BA682148(v27, v28);
        sub_1BA682148(v30, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA766C18(v30, v29);
        sub_1BA766C18(v27, v28);
        if (((v134 ^ v36) & 1) == 0)
        {
          v26 += 2;
          v9 = v130;
          v14 = v131 + 1;
          v11 = v124;
          if (v124 == v131 + 1)
          {
            v14 = v124;
            goto LABEL_122;
          }
          continue;
        }
        v11 = v124;
        v9 = v130;
        v14 = v131;
LABEL_122:
        v13 = v125;
LABEL_123:
        v10 = v120;
        if ((v134 & 1) != 0)
        {
          if (v14 < v13)
            goto LABEL_294;
          if (v13 < v14)
          {
            v38 = (__int128 *)(v116 + 16 * v14);
            v39 = v14;
            v40 = v13;
            v41 = (__int128 *)(v9 + 16 * v13);
            do
            {
              if (v40 != --v39)
              {
                if (!v9)
                  goto LABEL_299;
                v42 = *v41;
                *v41 = *v38;
                *v38 = v42;
              }
              ++v40;
              --v38;
              ++v41;
            }
            while (v40 < v39);
          }
        }
LABEL_131:
        if (v14 >= v11)
          goto LABEL_210;
        if (__OFSUB__(v14, v13))
          goto LABEL_292;
        if (v14 - v13 >= v119)
          goto LABEL_210;
        v43 = v13 + v119;
        if (__OFADD__(v13, v119))
          goto LABEL_295;
        if (v43 >= v11)
          v43 = v11;
        if (v43 >= v13)
        {
          if (v14 == v43)
            goto LABEL_210;
          v121 = v10;
          v129 = v15;
          v44 = (uint64_t *)(v9 + 16 * v14);
          v123 = v43;
LABEL_143:
          v46 = (uint64_t *)(v9 + 16 * v14);
          v47 = *v46;
          v48 = v46[1];
          v126 = v44;
          v132 = v14;
          while (2)
          {
            v50 = *(v44 - 2);
            v49 = *(v44 - 1);
            v51 = 0xE700000000000000;
            v52 = 0x656C6369747261;
            switch(v48)
            {
              case 0uLL:
                goto LABEL_172;
              case 1uLL:
                v51 = 0xE500000000000000;
                v53 = 1970500457;
                goto LABEL_165;
              case 2uLL:
                v51 = 0xE800000000000000;
                v52 = 0x6465626D45626577;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              case 3uLL:
                v51 = 0xEA00000000006B63;
                v52 = 0x6172546F69647561;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              case 4uLL:
                v51 = 0xE300000000000000;
                v52 = 6775156;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              case 5uLL:
                v51 = 0xE500000000000000;
                v53 = 1919902579;
LABEL_165:
                v52 = v53 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              case 6uLL:
                v51 = 0xE800000000000000;
                v52 = 0x676E69646E617473;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              case 7uLL:
                v52 = 0x74656B63617262;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              case 8uLL:
                v51 = 0xE800000000000000;
                v52 = 0x65726F6353786F62;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              case 9uLL:
                v52 = 0x726F6353656E696CLL;
                v51 = 0xE900000000000065;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              case 0xAuLL:
                v52 = 0x65527972756A6E69;
                v51 = 0xEC00000074726F70;
                goto LABEL_172;
              case 0xBuLL:
                v51 = 0xE900000000000072;
                v52 = 0x6579616C5079656BLL;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              case 0xCuLL:
                v51 = 0xE600000000000000;
                v52 = 0x656C7A7A7570;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              case 0xDuLL:
                v52 = 0x7954656C7A7A7570;
                v51 = 0xEA00000000006570;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              case 0xEuLL:
                v52 = 0x7453656C7A7A7570;
                v51 = 0xEF63697473697461;
                if (v49 > 0xE)
                  goto LABEL_166;
                goto LABEL_172;
              default:
                v52 = v47;
                v51 = v48;
                if (v49 <= 0xE)
                {
LABEL_172:
                  v55 = 0xE700000000000000;
                  v54 = 0x656C6369747261;
                  switch(v49)
                  {
                    case 0uLL:
                      goto LABEL_173;
                    case 1uLL:
                      v55 = 0xE500000000000000;
                      v56 = 1970500457;
                      break;
                    case 2uLL:
                      v55 = 0xE800000000000000;
                      if (v52 != 0x6465626D45626577)
                        goto LABEL_175;
                      goto LABEL_174;
                    case 3uLL:
                      v55 = 0xEA00000000006B63;
                      if (v52 != 0x6172546F69647561)
                        goto LABEL_175;
                      goto LABEL_174;
                    case 4uLL:
                      v55 = 0xE300000000000000;
                      if (v52 != 6775156)
                        goto LABEL_175;
                      goto LABEL_174;
                    case 5uLL:
                      v55 = 0xE500000000000000;
                      v56 = 1919902579;
                      break;
                    case 6uLL:
                      v55 = 0xE800000000000000;
                      if (v52 != 0x676E69646E617473)
                        goto LABEL_175;
                      goto LABEL_174;
                    case 7uLL:
                      if (v52 != 0x74656B63617262)
                        goto LABEL_175;
                      goto LABEL_174;
                    case 8uLL:
                      v55 = 0xE800000000000000;
                      if (v52 != 0x65726F6353786F62)
                        goto LABEL_175;
                      goto LABEL_174;
                    case 9uLL:
                      v55 = 0xE900000000000065;
                      if (v52 != 0x726F6353656E696CLL)
                        goto LABEL_175;
                      goto LABEL_174;
                    case 0xAuLL:
                      v55 = 0xEC00000074726F70;
                      if (v52 != 0x65527972756A6E69)
                        goto LABEL_175;
                      goto LABEL_174;
                    case 0xBuLL:
                      v55 = 0xE900000000000072;
                      if (v52 != 0x6579616C5079656BLL)
                        goto LABEL_175;
                      goto LABEL_174;
                    case 0xCuLL:
                      v55 = 0xE600000000000000;
                      if (v52 != 0x656C7A7A7570)
                        goto LABEL_175;
                      goto LABEL_174;
                    case 0xDuLL:
                      v55 = 0xEA00000000006570;
                      if (v52 != 0x7954656C7A7A7570)
                        goto LABEL_175;
                      goto LABEL_174;
                    case 0xEuLL:
                      v55 = 0xEF63697473697461;
                      if (v52 != 0x7453656C7A7A7570)
                        goto LABEL_175;
                      goto LABEL_174;
                    default:
                      goto LABEL_166;
                  }
                  if (v52 != (v56 & 0xFFFF0000FFFFFFFFLL | 0x6500000000))
                  {
LABEL_175:
                    v135 = sub_1BB874398();
                    sub_1BA682148(v50, v49);
                    sub_1BA682148(v47, v48);
                    sub_1BA682148(v47, v48);
                    sub_1BA682148(v50, v49);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_1BA766C18(v50, v49);
                    sub_1BA766C18(v47, v48);
                    if ((v135 & 1) == 0)
                      goto LABEL_141;
                    v9 = v130;
                    v45 = v132;
                    if (!v130)
                      goto LABEL_297;
                    v47 = *v44;
                    v48 = v44[1];
                    *(_OWORD *)v44 = *((_OWORD *)v44 - 1);
                    *(v44 - 1) = v48;
                    *(v44 - 2) = v47;
                    v44 -= 2;
                    if (v132 == ++v13)
                      goto LABEL_142;
                    continue;
                  }
                }
                else
                {
LABEL_166:
                  v54 = *(v44 - 2);
                  v55 = *(v44 - 1);
LABEL_173:
                  if (v52 != v54)
                    goto LABEL_175;
                }
LABEL_174:
                if (v51 != v55)
                  goto LABEL_175;
                sub_1BA682148(*(v44 - 2), *(v44 - 1));
                sub_1BA682148(v47, v48);
                sub_1BA682148(v47, v48);
                sub_1BA682148(v50, v49);
                swift_bridgeObjectRelease_n();
                sub_1BA766C18(v50, v49);
                sub_1BA766C18(v47, v48);
LABEL_141:
                v9 = v130;
                v45 = v132;
LABEL_142:
                v14 = v45 + 1;
                v13 = v125;
                v44 = v126 + 2;
                if (v14 != v123)
                  goto LABEL_143;
                v14 = v123;
                v15 = v129;
                v10 = v121;
LABEL_210:
                if (v14 < v13)
                  goto LABEL_287;
                v128 = v15;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v10 = sub_1BACAA368(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
                v58 = *((_QWORD *)v10 + 2);
                v57 = *((_QWORD *)v10 + 3);
                v12 = v58 + 1;
                v9 = v130;
                if (v58 >= v57 >> 1)
                {
                  v107 = sub_1BACAA368((char *)(v57 > 1), v58 + 1, 1, v10);
                  v9 = v130;
                  v10 = v107;
                }
                *((_QWORD *)v10 + 2) = v12;
                v59 = v10 + 32;
                v60 = &v10[16 * v58 + 32];
                *(_QWORD *)v60 = v125;
                *((_QWORD *)v60 + 1) = v14;
                v133 = v14;
                if (v58)
                {
                  while (2)
                  {
                    v61 = v12 - 1;
                    if (v12 >= 4)
                    {
                      v66 = &v59[16 * v12];
                      v67 = *((_QWORD *)v66 - 8);
                      v68 = *((_QWORD *)v66 - 7);
                      v72 = __OFSUB__(v68, v67);
                      v69 = v68 - v67;
                      if (v72)
                        goto LABEL_276;
                      v71 = *((_QWORD *)v66 - 6);
                      v70 = *((_QWORD *)v66 - 5);
                      v72 = __OFSUB__(v70, v71);
                      v64 = v70 - v71;
                      v65 = v72;
                      if (v72)
                        goto LABEL_277;
                      v73 = v12 - 2;
                      v74 = &v59[16 * v12 - 32];
                      v76 = *(_QWORD *)v74;
                      v75 = *((_QWORD *)v74 + 1);
                      v72 = __OFSUB__(v75, v76);
                      v77 = v75 - v76;
                      if (v72)
                        goto LABEL_279;
                      v72 = __OFADD__(v64, v77);
                      v78 = v64 + v77;
                      if (v72)
                        goto LABEL_282;
                      if (v78 >= v69)
                      {
                        v96 = &v59[16 * v61];
                        v98 = *(_QWORD *)v96;
                        v97 = *((_QWORD *)v96 + 1);
                        v72 = __OFSUB__(v97, v98);
                        v99 = v97 - v98;
                        if (v72)
                          goto LABEL_286;
                        v89 = v64 < v99;
                      }
                      else
                      {
LABEL_229:
                        if ((v65 & 1) != 0)
                          goto LABEL_278;
                        v73 = v12 - 2;
                        v79 = &v59[16 * v12 - 32];
                        v81 = *(_QWORD *)v79;
                        v80 = *((_QWORD *)v79 + 1);
                        v82 = __OFSUB__(v80, v81);
                        v83 = v80 - v81;
                        v84 = v82;
                        if (v82)
                          goto LABEL_281;
                        v85 = &v59[16 * v61];
                        v87 = *(_QWORD *)v85;
                        v86 = *((_QWORD *)v85 + 1);
                        v72 = __OFSUB__(v86, v87);
                        v88 = v86 - v87;
                        if (v72)
                          goto LABEL_284;
                        if (__OFADD__(v83, v88))
                          goto LABEL_285;
                        if (v83 + v88 < v64)
                          goto LABEL_241;
                        v89 = v64 < v88;
                      }
                      if (v89)
                        v61 = v73;
                    }
                    else
                    {
                      if (v12 == 3)
                      {
                        v63 = *((_QWORD *)v10 + 4);
                        v62 = *((_QWORD *)v10 + 5);
                        v72 = __OFSUB__(v62, v63);
                        v64 = v62 - v63;
                        v65 = v72;
                        goto LABEL_229;
                      }
                      v90 = *((_QWORD *)v10 + 4);
                      v91 = *((_QWORD *)v10 + 5);
                      v72 = __OFSUB__(v91, v90);
                      v83 = v91 - v90;
                      v84 = v72;
LABEL_241:
                      if ((v84 & 1) != 0)
                        goto LABEL_280;
                      v92 = &v59[16 * v61];
                      v94 = *(_QWORD *)v92;
                      v93 = *((_QWORD *)v92 + 1);
                      v72 = __OFSUB__(v93, v94);
                      v95 = v93 - v94;
                      if (v72)
                        goto LABEL_283;
                      if (v95 < v83)
                        goto LABEL_14;
                    }
                    v100 = v61 - 1;
                    if (v61 - 1 >= v12)
                    {
                      __break(1u);
LABEL_273:
                      __break(1u);
LABEL_274:
                      __break(1u);
LABEL_275:
                      __break(1u);
LABEL_276:
                      __break(1u);
LABEL_277:
                      __break(1u);
LABEL_278:
                      __break(1u);
LABEL_279:
                      __break(1u);
LABEL_280:
                      __break(1u);
LABEL_281:
                      __break(1u);
LABEL_282:
                      __break(1u);
LABEL_283:
                      __break(1u);
LABEL_284:
                      __break(1u);
LABEL_285:
                      __break(1u);
LABEL_286:
                      __break(1u);
LABEL_287:
                      __break(1u);
LABEL_288:
                      __break(1u);
LABEL_289:
                      __break(1u);
LABEL_290:
                      __break(1u);
LABEL_291:
                      __break(1u);
LABEL_292:
                      __break(1u);
LABEL_293:
                      __break(1u);
LABEL_294:
                      __break(1u);
LABEL_295:
                      __break(1u);
                      goto LABEL_296;
                    }
                    if (!v9)
                      goto LABEL_298;
                    v101 = v10;
                    v102 = &v59[16 * v100];
                    v103 = *(_QWORD *)v102;
                    v104 = &v59[16 * v61];
                    v105 = *((_QWORD *)v104 + 1);
                    sub_1BAE5CC1C((uint64_t *)(v9 + 16 * *(_QWORD *)v102), (uint64_t *)(v9 + 16 * *(_QWORD *)v104), v9 + 16 * v105, v127);
                    if (v128)
                    {
LABEL_270:
                      swift_bridgeObjectRelease();
                      *(_QWORD *)(v122 + 16) = 0;
                      return swift_bridgeObjectRelease();
                    }
                    if (v105 < v103)
                      goto LABEL_273;
                    if (v61 > *((_QWORD *)v101 + 2))
                      goto LABEL_274;
                    *(_QWORD *)v102 = v103;
                    *(_QWORD *)&v59[16 * v100 + 8] = v105;
                    v106 = *((_QWORD *)v101 + 2);
                    if (v61 >= v106)
                      goto LABEL_275;
                    v10 = v101;
                    v128 = 0;
                    v12 = v106 - 1;
                    memmove(&v59[16 * v61], v104 + 16, 16 * (v106 - 1 - v61));
                    *((_QWORD *)v101 + 2) = v106 - 1;
                    v9 = v130;
                    if (v106 <= 2)
                      goto LABEL_14;
                    continue;
                  }
                }
                v12 = 1;
LABEL_14:
                v11 = v124;
                v8 = v133;
                v7 = v122;
                if (v133 < v124)
                  goto LABEL_15;
                goto LABEL_258;
            }
          }
        }
LABEL_296:
        __break(1u);
LABEL_297:
        __break(1u);
LABEL_298:
        __break(1u);
LABEL_299:
        __break(1u);
LABEL_300:
        __break(1u);
LABEL_301:
        result = sub_1BB873EA0();
        __break(1u);
        return result;
    }
  }
}

uint64_t sub_1BA681F4C(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    *v11 = *v20;
    v11[1] = v22;
    if (v13 == v10)
    {
      sub_1BA682148(v21, v22);
      goto LABEL_38;
    }
    v11 += 2;
    result = sub_1BA682148(v21, v22);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BA682148(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0xF)
    return swift_bridgeObjectRetain();
  return result;
}

_QWORD *sub_1BA68215C(uint64_t a1)
{
  return sub_1BA67FF10(a1, (unint64_t *)&qword_1ED3C0550, (uint64_t)&type metadata for FormatItemKind, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1BA681F4C);
}

unint64_t sub_1BA682178()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A0848;
  if (!qword_1ED3A0848)
  {
    sub_1BA4AD288(255, &qword_1ED3A0840, (uint64_t)&type metadata for FormatItemKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA7850D0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A0848);
  }
  return result;
}

uint64_t sub_1BA6821F0(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v10])
      memmove(v14, v15, v10);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v10] || v14 >= &v15[v10])
  {
    memcpy(v14, v15, v10);
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA682348(uint64_t a1)
{
  return sub_1BA68235C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BA68235C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA6821F0(a1, a2, a3, a4, &qword_1ED3A09F0, (uint64_t)&type metadata for FormatFontTrait);
}

void sub_1BA682370(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v2 = v1;
  v4 = a1[1];
  if (sub_1BB8741F4() >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        sub_1BA683918(0, v4, 1, (uint64_t)a1);
      return;
    }
    goto LABEL_102;
  }
  if (v4 >= 0)
    v5 = v4;
  else
    v5 = v4 + 1;
  if (v4 < -1)
    goto LABEL_105;
  v74 = a1;
  if (v4 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    v78 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v4 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      if (v12 < 2)
        goto LABEL_80;
      goto LABEL_68;
    }
    v75 = MEMORY[0x1E0DEE9D8];
    v79 = v1;
  }
  else
  {
    v79 = v1;
    v6 = v5 >> 1;
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v75 = v7;
    v78 = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v11 = *a1;
  v76 = v4;
  while (1)
  {
    v13 = v9 + 1;
    if (v9 + 1 < v4)
      __asm { BR              X10 }
    if (v13 < v9)
    {
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
      __break(1u);
LABEL_102:
      __break(1u);
      goto LABEL_106;
    }
    v77 = v9 + 1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BACAA368(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v15 = *((_QWORD *)v10 + 2);
    v14 = *((_QWORD *)v10 + 3);
    v12 = v15 + 1;
    if (v15 >= v14 >> 1)
      v10 = sub_1BACAA368((char *)(v14 > 1), v15 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v12;
    v16 = v10 + 32;
    v17 = &v10[16 * v15 + 32];
    *(_QWORD *)v17 = v9;
    *((_QWORD *)v17 + 1) = v77;
    if (v15)
      break;
    v12 = 1;
LABEL_15:
    v4 = v76;
    v9 = v77;
    if (v77 >= v76)
    {
      v2 = v79;
      v8 = v75;
      if (v12 < 2)
        goto LABEL_80;
LABEL_68:
      v66 = *v74;
      while (1)
      {
        v67 = v12 - 2;
        if (v12 < 2)
          goto LABEL_98;
        if (!v66)
          break;
        v68 = v10;
        v69 = v10 + 32;
        v70 = *(_QWORD *)&v10[16 * v67 + 32];
        v71 = *(_QWORD *)&v10[16 * v12 + 24];
        sub_1BAE5E24C((char *)(v66 + v70), (char *)(v66 + *(_QWORD *)&v69[16 * v12 - 16]), (char *)(v66 + v71), v78);
        if (v2)
          goto LABEL_80;
        if (v71 < v70)
          goto LABEL_99;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v68 = sub_1BACAB464((uint64_t)v68);
        if (v67 >= *((_QWORD *)v68 + 2))
          goto LABEL_100;
        v72 = &v68[16 * v67 + 32];
        *(_QWORD *)v72 = v70;
        *((_QWORD *)v72 + 1) = v71;
        v73 = *((_QWORD *)v68 + 2);
        if (v12 > v73)
          goto LABEL_101;
        v10 = v68;
        memmove(&v68[16 * v12 + 16], &v68[16 * v12 + 32], 16 * (v73 - v12));
        *((_QWORD *)v68 + 2) = v73 - 1;
        v12 = v73 - 1;
        if (v73 <= 2)
          goto LABEL_80;
      }
      __break(1u);
LABEL_105:
      sub_1BB873EA0();
      __break(1u);
LABEL_106:
      JUMPOUT(0x1BA683824);
    }
  }
  while (1)
  {
    v18 = v12 - 1;
    if (v12 >= 4)
    {
      v23 = &v16[16 * v12];
      v24 = *((_QWORD *)v23 - 8);
      v25 = *((_QWORD *)v23 - 7);
      v29 = __OFSUB__(v25, v24);
      v26 = v25 - v24;
      if (v29)
        goto LABEL_86;
      v28 = *((_QWORD *)v23 - 6);
      v27 = *((_QWORD *)v23 - 5);
      v29 = __OFSUB__(v27, v28);
      v21 = v27 - v28;
      v22 = v29;
      if (v29)
        goto LABEL_87;
      v30 = v12 - 2;
      v31 = &v16[16 * v12 - 32];
      v33 = *(_QWORD *)v31;
      v32 = *((_QWORD *)v31 + 1);
      v29 = __OFSUB__(v32, v33);
      v34 = v32 - v33;
      if (v29)
        goto LABEL_89;
      v29 = __OFADD__(v21, v34);
      v35 = v21 + v34;
      if (v29)
        goto LABEL_92;
      if (v35 >= v26)
      {
        v53 = &v16[16 * v18];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v29 = __OFSUB__(v54, v55);
        v56 = v54 - v55;
        if (v29)
          goto LABEL_96;
        v46 = v21 < v56;
        goto LABEL_55;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v47 = *((_QWORD *)v10 + 4);
        v48 = *((_QWORD *)v10 + 5);
        v29 = __OFSUB__(v48, v47);
        v40 = v48 - v47;
        v41 = v29;
        goto LABEL_49;
      }
      v20 = *((_QWORD *)v10 + 4);
      v19 = *((_QWORD *)v10 + 5);
      v29 = __OFSUB__(v19, v20);
      v21 = v19 - v20;
      v22 = v29;
    }
    if ((v22 & 1) != 0)
      goto LABEL_88;
    v30 = v12 - 2;
    v36 = &v16[16 * v12 - 32];
    v38 = *(_QWORD *)v36;
    v37 = *((_QWORD *)v36 + 1);
    v39 = __OFSUB__(v37, v38);
    v40 = v37 - v38;
    v41 = v39;
    if (v39)
      goto LABEL_91;
    v42 = &v16[16 * v18];
    v44 = *(_QWORD *)v42;
    v43 = *((_QWORD *)v42 + 1);
    v29 = __OFSUB__(v43, v44);
    v45 = v43 - v44;
    if (v29)
      goto LABEL_94;
    if (__OFADD__(v40, v45))
      goto LABEL_95;
    if (v40 + v45 >= v21)
    {
      v46 = v21 < v45;
LABEL_55:
      if (v46)
        v18 = v30;
      goto LABEL_57;
    }
LABEL_49:
    if ((v41 & 1) != 0)
      goto LABEL_90;
    v49 = &v16[16 * v18];
    v51 = *(_QWORD *)v49;
    v50 = *((_QWORD *)v49 + 1);
    v29 = __OFSUB__(v50, v51);
    v52 = v50 - v51;
    if (v29)
      goto LABEL_93;
    if (v52 < v40)
      goto LABEL_15;
LABEL_57:
    v57 = v18 - 1;
    if (v18 - 1 >= v12)
    {
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    v58 = v11;
    if (!v11)
    {
      __break(1u);
      JUMPOUT(0x1BA683838);
    }
    v59 = v10;
    v60 = &v16[16 * v57];
    v61 = *(_QWORD *)v60;
    v62 = &v16[16 * v18];
    v63 = *((_QWORD *)v62 + 1);
    v64 = v58;
    sub_1BAE5E24C((char *)(v58 + *(_QWORD *)v60), (char *)(v58 + *(_QWORD *)v62), (char *)(v58 + v63), v78);
    if (v79)
      break;
    if (v63 < v61)
      goto LABEL_83;
    if (v18 > *((_QWORD *)v59 + 2))
      goto LABEL_84;
    *(_QWORD *)v60 = v61;
    *(_QWORD *)&v16[16 * v57 + 8] = v63;
    v65 = *((_QWORD *)v59 + 2);
    if (v18 >= v65)
      goto LABEL_85;
    v10 = v59;
    v12 = v65 - 1;
    memmove(&v16[16 * v18], v62 + 16, 16 * (v65 - 1 - v18));
    *((_QWORD *)v59 + 2) = v65 - 1;
    v11 = v64;
    if (v65 <= 2)
      goto LABEL_15;
  }
  v8 = v75;
LABEL_80:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = 0;
  swift_bridgeObjectRelease();
}

unint64_t sub_1BA683888()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3A0828;
  if (!qword_1ED3A0828)
  {
    sub_1BA4B07F0(255, &qword_1ED3C0348, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3BCBD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, (uint64_t)&protocol conformance descriptor for FormatBlock);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A0828);
  }
  return result;
}

void sub_1BA683918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
    __asm { BR              X10 }
}

uint64_t sub_1BA6839EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&loc_1BA683BE4 + *(int *)(v2 + 4 * a2)))(1684828002, a1, 0x63696C617469);
}

void sub_1BA683C00(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  if (a1 != 1684828002 || v3 != 0xE400000000000000)
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
      goto LABEL_11;
    if (v5)
    {
      v7 = *v2;
      *v2 = *(v2 - 1);
      *(v2 - 1) = v7;
      if (v1 != v4 + 1)
        JUMPOUT(0x1BA6839BCLL);
LABEL_11:
      JUMPOUT(0x1BA68399CLL);
    }
    __break(1u);
  }
  JUMPOUT(0x1BA683990);
}

unint64_t sub_1BA683EC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BE90;
  if (!qword_1ED39BE90)
  {
    sub_1BA4AD288(255, &qword_1ED3B9480, (uint64_t)&type metadata for FormatItemTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA833F50();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BE90);
  }
  return result;
}

uint64_t sub_1BA683F3C(uint64_t a1)
{
  return sub_1BA683F50(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BA683F50(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA6821F0(a1, a2, a3, a4, &qword_1ED3B9EB0, (uint64_t)&type metadata for FormatButtonNodeState);
}

void sub_1BA683F64(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *__dst;
  uint64_t v81;

  v2 = v1;
  v4 = a1[1];
  if (sub_1BB8741F4() >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        sub_1BA6849CC(0, v4, 1, (uint64_t)a1);
      return;
    }
    goto LABEL_104;
  }
  if (v4 >= 0)
    v5 = v4;
  else
    v5 = v4 + 1;
  if (v4 < -1)
    goto LABEL_107;
  v76 = a1;
  if (v4 >= 2)
  {
    v81 = v1;
    v6 = v5 >> 1;
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v77 = v7;
    __dst = (char *)(v7 + 32);
    goto LABEL_13;
  }
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
  if (v4 == 1)
  {
    v77 = MEMORY[0x1E0DEE9D8];
    v81 = v1;
LABEL_13:
    v9 = 0;
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v10 = *a1;
    v78 = v4;
    do
    {
      v12 = v9;
      v13 = v9 + 1;
      if (v9 + 1 < v4)
        __asm { BR              X10 }
      if (v13 < v9)
        goto LABEL_99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1BACAA368(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v15 = *((_QWORD *)v8 + 2);
      v14 = *((_QWORD *)v8 + 3);
      v11 = v15 + 1;
      v79 = v13;
      if (v15 >= v14 >> 1)
        v8 = sub_1BACAA368((char *)(v14 > 1), v15 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v11;
      v16 = v8 + 32;
      v17 = &v8[16 * v15 + 32];
      *(_QWORD *)v17 = v12;
      *((_QWORD *)v17 + 1) = v79;
      if (v15)
      {
        while (1)
        {
          v18 = v11 - 1;
          if (v11 >= 4)
          {
            v23 = &v16[16 * v11];
            v24 = *((_QWORD *)v23 - 8);
            v25 = *((_QWORD *)v23 - 7);
            v29 = __OFSUB__(v25, v24);
            v26 = v25 - v24;
            if (v29)
              goto LABEL_88;
            v28 = *((_QWORD *)v23 - 6);
            v27 = *((_QWORD *)v23 - 5);
            v29 = __OFSUB__(v27, v28);
            v21 = v27 - v28;
            v22 = v29;
            if (v29)
              goto LABEL_89;
            v30 = v11 - 2;
            v31 = &v16[16 * v11 - 32];
            v33 = *(_QWORD *)v31;
            v32 = *((_QWORD *)v31 + 1);
            v29 = __OFSUB__(v32, v33);
            v34 = v32 - v33;
            if (v29)
              goto LABEL_91;
            v29 = __OFADD__(v21, v34);
            v35 = v21 + v34;
            if (v29)
              goto LABEL_94;
            if (v35 >= v26)
            {
              v53 = &v16[16 * v18];
              v55 = *(_QWORD *)v53;
              v54 = *((_QWORD *)v53 + 1);
              v29 = __OFSUB__(v54, v55);
              v56 = v54 - v55;
              if (v29)
                goto LABEL_98;
              v46 = v21 < v56;
              goto LABEL_55;
            }
          }
          else
          {
            if (v11 != 3)
            {
              v47 = *((_QWORD *)v8 + 4);
              v48 = *((_QWORD *)v8 + 5);
              v29 = __OFSUB__(v48, v47);
              v40 = v48 - v47;
              v41 = v29;
              goto LABEL_49;
            }
            v20 = *((_QWORD *)v8 + 4);
            v19 = *((_QWORD *)v8 + 5);
            v29 = __OFSUB__(v19, v20);
            v21 = v19 - v20;
            v22 = v29;
          }
          if ((v22 & 1) != 0)
            goto LABEL_90;
          v30 = v11 - 2;
          v36 = &v16[16 * v11 - 32];
          v38 = *(_QWORD *)v36;
          v37 = *((_QWORD *)v36 + 1);
          v39 = __OFSUB__(v37, v38);
          v40 = v37 - v38;
          v41 = v39;
          if (v39)
            goto LABEL_93;
          v42 = &v16[16 * v18];
          v44 = *(_QWORD *)v42;
          v43 = *((_QWORD *)v42 + 1);
          v29 = __OFSUB__(v43, v44);
          v45 = v43 - v44;
          if (v29)
            goto LABEL_96;
          if (__OFADD__(v40, v45))
            goto LABEL_97;
          if (v40 + v45 >= v21)
          {
            v46 = v21 < v45;
LABEL_55:
            if (v46)
              v18 = v30;
            goto LABEL_57;
          }
LABEL_49:
          if ((v41 & 1) != 0)
            goto LABEL_92;
          v49 = &v16[16 * v18];
          v51 = *(_QWORD *)v49;
          v50 = *((_QWORD *)v49 + 1);
          v29 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          if (v29)
            goto LABEL_95;
          if (v52 < v40)
            goto LABEL_15;
LABEL_57:
          v57 = v18 - 1;
          if (v18 - 1 >= v11)
          {
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_108:
            JUMPOUT(0x1BA684968);
          }
          v58 = v10;
          if (!v10)
          {
            __break(1u);
            JUMPOUT(0x1BA68497CLL);
          }
          v59 = v8;
          v60 = &v16[16 * v57];
          v61 = *(_QWORD *)v60;
          v62 = &v16[16 * v18];
          v63 = *((_QWORD *)v62 + 1);
          v64 = v58;
          sub_1BAE5DD8C((char *)(v58 + *(_QWORD *)v60), (char *)(v58 + *(_QWORD *)v62), (char *)(v58 + v63), __dst);
          if (v81)
          {
            v66 = v77;
            goto LABEL_66;
          }
          if (v63 < v61)
            goto LABEL_85;
          if (v18 > *((_QWORD *)v59 + 2))
            goto LABEL_86;
          *(_QWORD *)v60 = v61;
          *(_QWORD *)&v16[16 * v57 + 8] = v63;
          v65 = *((_QWORD *)v59 + 2);
          if (v18 >= v65)
            goto LABEL_87;
          v8 = v59;
          v11 = v65 - 1;
          memmove(&v16[16 * v18], v62 + 16, 16 * (v65 - 1 - v18));
          *((_QWORD *)v59 + 2) = v65 - 1;
          v10 = v64;
          if (v65 <= 2)
            goto LABEL_15;
        }
      }
      v11 = 1;
LABEL_15:
      v4 = v78;
      v9 = v79;
    }
    while (v79 < v78);
    v2 = v81;
    v67 = v77;
    goto LABEL_68;
  }
  v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  v67 = MEMORY[0x1E0DEE9D8];
LABEL_68:
  v68 = v8;
  if (v11 < 2)
  {
LABEL_79:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v67 + 16) = 0;
    goto LABEL_80;
  }
  v69 = *v76;
  while (1)
  {
    v70 = v11 - 2;
    if (v11 < 2)
      goto LABEL_100;
    if (!v69)
    {
      __break(1u);
LABEL_107:
      sub_1BB873EA0();
      __break(1u);
      goto LABEL_108;
    }
    v71 = v68;
    v72 = *(_QWORD *)&v68[16 * v70 + 32];
    v73 = *(_QWORD *)&v68[16 * v11 + 24];
    sub_1BAE5DD8C((char *)(v69 + v72), (char *)(v69 + *(_QWORD *)&v68[16 * v11 + 16]), (char *)(v69 + v73), __dst);
    if (v2)
      break;
    if (v73 < v72)
      goto LABEL_101;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v71 = sub_1BACAB464((uint64_t)v71);
    if (v70 >= *((_QWORD *)v71 + 2))
      goto LABEL_102;
    v74 = &v71[16 * v70 + 32];
    *(_QWORD *)v74 = v72;
    *((_QWORD *)v74 + 1) = v73;
    v75 = *((_QWORD *)v71 + 2);
    if (v11 > v75)
      goto LABEL_103;
    memmove(&v71[16 * v11 + 16], &v71[16 * v11 + 32], 16 * (v75 - v11));
    v68 = v71;
    *((_QWORD *)v71 + 2) = v75 - 1;
    v11 = v75 - 1;
    if (v75 <= 2)
      goto LABEL_79;
  }
  v66 = v67;
LABEL_66:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v66 + 16) = 0;
LABEL_80:
  swift_bridgeObjectRelease();
}

void sub_1BA6849CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
    __asm { BR              X10 }
}

uint64_t sub_1BA684A94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&loc_1BA684AE0 + *(int *)(v2 + 4 * a2)))(0x64657375636F66, a1, 0x64656C6261736964);
}

void sub_1BA684B00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  char v7;

  if (a1 != 0x64657375636F66 || v3 != 0xE700000000000000)
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
      goto LABEL_11;
    if (v4)
    {
      v7 = *v5;
      *v5 = *(v5 - 1);
      *(v5 - 1) = v7;
      if (v1 != v2 + 1)
        JUMPOUT(0x1BA684A60);
LABEL_11:
      JUMPOUT(0x1BA684A40);
    }
    __break(1u);
  }
  JUMPOUT(0x1BA684A34);
}

uint64_t sub_1BA684BC0(uint64_t a1)
{
  return sub_1BA684BD4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BA684BD4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA6821F0(a1, a2, a3, a4, &qword_1ED3A0A10, (uint64_t)&type metadata for FormatGroupItemKind);
}

void sub_1BA684BE8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *__dst;
  uint64_t v81;

  v2 = v1;
  v4 = a1[1];
  if (sub_1BB8741F4() >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        sub_1BA6857BC(0, v4, 1, (uint64_t)a1);
      return;
    }
    goto LABEL_105;
  }
  if (v4 >= 0)
    v5 = v4;
  else
    v5 = v4 + 1;
  if (v4 < -1)
    goto LABEL_108;
  v75 = a1;
  if (v4 >= 2)
  {
    v81 = v1;
    v6 = v5 >> 1;
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v76 = v7;
    __dst = (char *)(v7 + 32);
    goto LABEL_13;
  }
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
  if (v4 == 1)
  {
    v76 = MEMORY[0x1E0DEE9D8];
    v81 = v1;
LABEL_13:
    v9 = 0;
    v79 = (char *)MEMORY[0x1E0DEE9D8];
    v10 = *a1;
    v77 = v4;
    while (1)
    {
      v13 = v9 + 1;
      if (v9 + 1 < v4)
        __asm { BR              X10 }
      if (v13 < v9)
        goto LABEL_100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v79 = sub_1BACAA368(0, *((_QWORD *)v79 + 2) + 1, 1, v79);
      v15 = *((_QWORD *)v79 + 2);
      v14 = *((_QWORD *)v79 + 3);
      v11 = v15 + 1;
      v78 = v9 + 1;
      if (v15 >= v14 >> 1)
        v79 = sub_1BACAA368((char *)(v14 > 1), v15 + 1, 1, v79);
      *((_QWORD *)v79 + 2) = v11;
      v16 = v79 + 32;
      v17 = &v79[16 * v15 + 32];
      *(_QWORD *)v17 = v9;
      *((_QWORD *)v17 + 1) = v78;
      if (v15)
        break;
      v11 = 1;
      v12 = v79;
LABEL_15:
      v79 = v12;
      v4 = v77;
      v9 = v78;
      if (v78 >= v77)
      {
        v2 = v81;
        v67 = v76;
        v8 = v12;
        if (v11 < 2)
          goto LABEL_82;
        goto LABEL_69;
      }
    }
    v12 = v79;
    while (1)
    {
      v18 = v11 - 1;
      if (v11 >= 4)
      {
        v23 = &v16[16 * v11];
        v24 = *((_QWORD *)v23 - 8);
        v25 = *((_QWORD *)v23 - 7);
        v29 = __OFSUB__(v25, v24);
        v26 = v25 - v24;
        if (v29)
          goto LABEL_89;
        v28 = *((_QWORD *)v23 - 6);
        v27 = *((_QWORD *)v23 - 5);
        v29 = __OFSUB__(v27, v28);
        v21 = v27 - v28;
        v22 = v29;
        if (v29)
          goto LABEL_90;
        v30 = v11 - 2;
        v31 = &v16[16 * v11 - 32];
        v33 = *(_QWORD *)v31;
        v32 = *((_QWORD *)v31 + 1);
        v29 = __OFSUB__(v32, v33);
        v34 = v32 - v33;
        if (v29)
          goto LABEL_92;
        v29 = __OFADD__(v21, v34);
        v35 = v21 + v34;
        if (v29)
          goto LABEL_95;
        if (v35 >= v26)
        {
          v53 = &v16[16 * v18];
          v55 = *(_QWORD *)v53;
          v54 = *((_QWORD *)v53 + 1);
          v29 = __OFSUB__(v54, v55);
          v56 = v54 - v55;
          if (v29)
            goto LABEL_99;
          v46 = v21 < v56;
          goto LABEL_56;
        }
      }
      else
      {
        if (v11 != 3)
        {
          v47 = *((_QWORD *)v12 + 4);
          v48 = *((_QWORD *)v12 + 5);
          v29 = __OFSUB__(v48, v47);
          v40 = v48 - v47;
          v41 = v29;
          goto LABEL_50;
        }
        v20 = *((_QWORD *)v12 + 4);
        v19 = *((_QWORD *)v12 + 5);
        v29 = __OFSUB__(v19, v20);
        v21 = v19 - v20;
        v22 = v29;
      }
      if ((v22 & 1) != 0)
        goto LABEL_91;
      v30 = v11 - 2;
      v36 = &v16[16 * v11 - 32];
      v38 = *(_QWORD *)v36;
      v37 = *((_QWORD *)v36 + 1);
      v39 = __OFSUB__(v37, v38);
      v40 = v37 - v38;
      v41 = v39;
      if (v39)
        goto LABEL_94;
      v42 = &v16[16 * v18];
      v44 = *(_QWORD *)v42;
      v43 = *((_QWORD *)v42 + 1);
      v29 = __OFSUB__(v43, v44);
      v45 = v43 - v44;
      if (v29)
        goto LABEL_97;
      if (__OFADD__(v40, v45))
        goto LABEL_98;
      if (v40 + v45 >= v21)
      {
        v46 = v21 < v45;
LABEL_56:
        if (v46)
          v18 = v30;
        goto LABEL_58;
      }
LABEL_50:
      if ((v41 & 1) != 0)
        goto LABEL_93;
      v49 = &v16[16 * v18];
      v51 = *(_QWORD *)v49;
      v50 = *((_QWORD *)v49 + 1);
      v29 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v29)
        goto LABEL_96;
      if (v52 < v40)
        goto LABEL_15;
LABEL_58:
      v57 = v18 - 1;
      if (v18 - 1 >= v11)
      {
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_109:
        JUMPOUT(0x1BA685758);
      }
      v58 = v10;
      if (!v10)
      {
        __break(1u);
        JUMPOUT(0x1BA68576CLL);
      }
      v59 = v12;
      v60 = &v16[16 * v57];
      v61 = *(_QWORD *)v60;
      v62 = &v16[16 * v18];
      v63 = *((_QWORD *)v62 + 1);
      v64 = v58;
      sub_1BAE5D7DC((char *)(v58 + *(_QWORD *)v60), (char *)(v58 + *(_QWORD *)v62), (char *)(v58 + v63), __dst);
      if (v81)
      {
        v66 = v76;
        goto LABEL_67;
      }
      if (v63 < v61)
        goto LABEL_86;
      if (v18 > *((_QWORD *)v59 + 2))
        goto LABEL_87;
      *(_QWORD *)v60 = v61;
      *(_QWORD *)&v16[16 * v57 + 8] = v63;
      v65 = *((_QWORD *)v59 + 2);
      if (v18 >= v65)
        goto LABEL_88;
      v12 = v59;
      v11 = v65 - 1;
      memmove(&v16[16 * v18], v62 + 16, 16 * (v65 - 1 - v18));
      *((_QWORD *)v59 + 2) = v65 - 1;
      v10 = v64;
      if (v65 <= 2)
        goto LABEL_15;
    }
  }
  v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  v67 = MEMORY[0x1E0DEE9D8];
  if (v11 < 2)
  {
LABEL_82:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v67 + 16) = 0;
    goto LABEL_83;
  }
LABEL_69:
  v68 = *v75;
  while (1)
  {
    v69 = v11 - 2;
    if (v11 < 2)
      goto LABEL_101;
    if (!v68)
    {
      __break(1u);
LABEL_108:
      sub_1BB873EA0();
      __break(1u);
      goto LABEL_109;
    }
    v70 = v8;
    v71 = *(_QWORD *)&v8[16 * v69 + 32];
    v72 = *(_QWORD *)&v8[16 * v11 + 24];
    sub_1BAE5D7DC((char *)(v68 + v71), (char *)(v68 + *(_QWORD *)&v8[16 * v11 + 16]), (char *)(v68 + v72), __dst);
    if (v2)
      break;
    if (v72 < v71)
      goto LABEL_102;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v70 = sub_1BACAB464((uint64_t)v70);
    if (v69 >= *((_QWORD *)v70 + 2))
      goto LABEL_103;
    v73 = &v70[16 * v69 + 32];
    *(_QWORD *)v73 = v71;
    *((_QWORD *)v73 + 1) = v72;
    v74 = *((_QWORD *)v70 + 2);
    if (v11 > v74)
      goto LABEL_104;
    memmove(&v70[16 * v11 + 16], &v70[16 * v11 + 32], 16 * (v74 - v11));
    v8 = v70;
    *((_QWORD *)v70 + 2) = v74 - 1;
    v11 = v74 - 1;
    if (v74 <= 2)
      goto LABEL_82;
  }
  v66 = v67;
LABEL_67:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v66 + 16) = 0;
LABEL_83:
  swift_bridgeObjectRelease();
}

void sub_1BA6857BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
    __asm { BR              X10 }
}

uint64_t sub_1BA68587C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&loc_1BA685900 + *(int *)(v2 + 4 * a2)))(0x72656874616577, a1, 6775156);
}

void sub_1BA685918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  char v7;

  if (a1 != 0x72656874616577 || v3 != 0xE700000000000000)
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
      goto LABEL_11;
    if (v4)
    {
      v7 = *v5;
      *v5 = *(v5 - 1);
      *(v5 - 1) = v7;
      if (v1 != v2 + 1)
        JUMPOUT(0x1BA685850);
LABEL_11:
      JUMPOUT(0x1BA685830);
    }
    __break(1u);
  }
  JUMPOUT(0x1BA685824);
}

uint64_t sub_1BA685A28()
{
  unsigned __int8 *v0;

  return sub_1BADAADBC(*v0);
}

uint64_t FormatTextNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  int v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  int v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE v108[200];
  _BYTE v109[88];
  _QWORD v110[17];
  uint64_t v111;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v82 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v85 = (char *)&v81 - v6;
  MEMORY[0x1E0C80A78](v7);
  v86 = (char *)&v81 - v8;
  MEMORY[0x1E0C80A78](v9);
  v90 = (char *)&v81 - v10;
  MEMORY[0x1E0C80A78](v11);
  v93 = (char *)&v81 - v12;
  MEMORY[0x1E0C80A78](v13);
  v96 = (char *)&v81 - v14;
  MEMORY[0x1E0C80A78](v15);
  v97 = (char *)&v81 - v16;
  MEMORY[0x1E0C80A78](v17);
  v99 = (char *)&v81 - v18;
  MEMORY[0x1E0C80A78](v19);
  v100 = (char *)&v81 - v20;
  MEMORY[0x1E0C80A78](v21);
  v102 = (char *)&v81 - v22;
  MEMORY[0x1E0C80A78](v23);
  v103 = (char *)&v81 - v24;
  MEMORY[0x1E0C80A78](v25);
  v105 = (char *)&v81 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v81 - v28;
  sub_1BAEC8784(0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(v1 + 8);
  v107 = *(_QWORD *)v1;
  v104 = *(_QWORD *)(v1 + 16);
  sub_1BA6A09F0(v1 + 24, (uint64_t)v110, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  v101 = *(_QWORD *)(v1 + 152);
  sub_1BA6A09F0(v1 + 160, (uint64_t)v109, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v98 = *(_QWORD *)(v1 + 248);
  sub_1BA6A09F0(v1 + 256, (uint64_t)v108, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
  v95 = *(_QWORD *)(v1 + 456);
  v94 = *(unsigned __int8 *)(v1 + 464);
  v34 = *(_QWORD *)(v1 + 480);
  v91 = *(_QWORD *)(v1 + 472);
  v92 = v34;
  v35 = *(_QWORD *)(v1 + 488);
  v88 = *(_QWORD *)(v1 + 496);
  v89 = v35;
  v87 = *(_QWORD *)(v1 + 504);
  v84 = *(unsigned __int8 *)(v1 + 512);
  v83 = *(_QWORD *)(v1 + 520);
  v36 = a1[3];
  v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v36);
  v38 = sub_1BAEC867C();
  v39 = sub_1BA4A2870(&qword_1ED3D0E60, (uint64_t (*)(uint64_t))sub_1BAEC867C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextNodeStyle.Selector, v40, v36, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, v38, (uint64_t)&type metadata for FormatVersions.JazzkonC, v37, (uint64_t)v32, v39, (uint64_t)&off_1E734BD80);
  v41 = v33;
  v42 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v42 != -1)
    swift_once();
  v43 = sub_1BB86EB84();
  v44 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476C20);
  v45 = *(void (**)(char *))(*(_QWORD *)(v43 - 8) + 16);
  v106 = v44;
  v45(v29);
  v46 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v47 = (uint64_t)v32;
  v48 = v111;
  sub_1BAD1B624(v107, v41, 0, 0, 0, (uint64_t)v29, (uint64_t)sub_1BA90CF04, 0);
  v49 = (uint64_t)v29;
  if (!v48)
  {
    sub_1BA4A2E80((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v50 = (uint64_t)v105;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v105, v106, v43);
    swift_storeEnumTagMultiPayload();
    v51 = v104;
    sub_1BA6E6C68(v104);
    sub_1BAD5B31C(v51, 1, 0, 0, v50, (uint64_t)sub_1BA90CF04, 0);
    v52 = (void (*)(char *, uint64_t, uint64_t))v45;
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v51);
    v53 = (uint64_t)v103;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v103, v106, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0C50(v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
    sub_1BAD5B534(v110, 2, 0, 0, v53, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0C50(v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
    v54 = (uint64_t)v102;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v102, v106, v43);
    swift_storeEnumTagMultiPayload();
    v55 = swift_bridgeObjectRetain();
    sub_1BAD5B7E8(v55, 3, 0, 0, v54, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v54, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v56 = (uint64_t)v100;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v100, v106, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v109, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD5BA18((uint64_t)v109, 4, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v109, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    v58 = (uint64_t)v99;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v99, v106, v43);
    swift_storeEnumTagMultiPayload();
    v59 = swift_bridgeObjectRetain();
    sub_1BAD5BD00(v59, 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v60 = (uint64_t)v97;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v97, v106, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5BF30((uint64_t)v108, 6, 0, 0, v60, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
    v61 = (uint64_t)v96;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v96, v106, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5C1D4(v95, v94, 7, 0, 0, v61, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v61, type metadata accessor for FormatVersionRequirement);
    v62 = qword_1ED3C6D60;
    v63 = v91;
    swift_bridgeObjectRetain();
    if (v62 != -1)
      swift_once();
    v64 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476C38);
    v65 = (uint64_t)v93;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v93, v64, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5C3B4(v63, 8, 0, 0, v65, (uint64_t)sub_1BA90CF04, 0);
    v66 = v92;
    sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v67 = v89;
    sub_1BA6E8A60(v66, v89);
    v68 = v66;
    if (qword_1ED3C6D40 != -1)
      swift_once();
    v69 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476BC0);
    v70 = (uint64_t)v90;
    v52(v90, v69, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5C5D4(v68, v67, 9, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    v107 = v46;
    v71 = v43;
    v111 = v47;
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E8A90(v68, v67);
    sub_1BA6E8A60(v88, v87);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v72 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476C08);
    v73 = (uint64_t)v86;
    v52(v86, v72, v43);
    swift_storeEnumTagMultiPayload();
    v74 = v87;
    v75 = v88;
    sub_1BAD5C5D4(v88, v87, 10, 0, 0, v73, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v73, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E8A90(v75, v74);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v76 = __swift_project_value_buffer(v71, (uint64_t)qword_1ED476B78);
    v77 = (uint64_t)v85;
    v52(v85, v76, v71);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5C7F4(v84, 11, 0, 0, v77, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v77, type metadata accessor for FormatVersionRequirement);
    v78 = qword_1ED3C6D88;
    swift_bridgeObjectRetain();
    if (v78 != -1)
      swift_once();
    v79 = __swift_project_value_buffer(v71, (uint64_t)qword_1ED476C80);
    v80 = (uint64_t)v82;
    v52(v82, v79, v71);
    swift_storeEnumTagMultiPayload();
    v47 = v111;
    sub_1BAD5C3B4(v83, 12, 0, 0, v80, (uint64_t)sub_1BA90CF04, 0);
    v49 = v80;
  }
  sub_1BA4A2E80(v49, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BAEC8784);
}

uint64_t sub_1BA6865FC()
{
  unsigned __int8 *v0;

  return sub_1BADB3D70(*v0);
}

uint64_t sub_1BA686604()
{
  unsigned __int8 *v0;

  return sub_1BAE01410(*v0);
}

unint64_t sub_1BA68660C()
{
  unint64_t result;

  result = qword_1ED39F930;
  if (!qword_1ED39F930)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelector, &type metadata for FormatSelector);
    atomic_store(result, (unint64_t *)&qword_1ED39F930);
  }
  return result;
}

unint64_t sub_1BA686650()
{
  unint64_t result;

  result = qword_1ED39B010;
  if (!qword_1ED39B010)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFill, &type metadata for FormatFill);
    atomic_store(result, (unint64_t *)&qword_1ED39B010);
  }
  return result;
}

unint64_t sub_1BA686694()
{
  unint64_t result;

  result = qword_1ED39B658;
  if (!qword_1ED39B658)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatParagraphStyle, &type metadata for FormatParagraphStyle);
    atomic_store(result, (unint64_t *)&qword_1ED39B658);
  }
  return result;
}

unint64_t sub_1BA6866D8()
{
  unint64_t result;

  result = qword_1ED39FA90;
  if (!qword_1ED39FA90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnderline, &type metadata for FormatUnderline);
    atomic_store(result, (unint64_t *)&qword_1ED39FA90);
  }
  return result;
}

uint64_t FormatImageNodeStyle.__deallocating_deinit()
{
  FormatImageNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatImageNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CD8(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 112));
  sub_1BA6E6CF0(*(_QWORD *)(v0 + 120));
  sub_1BA6E8A78(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_BYTE *)(v0 + 216));
  sub_1BA5E800C(*(_QWORD *)(v0 + 224));
  sub_1BA6E6D00(*(_QWORD *)(v0 + 240));
  sub_1BA6867EC(v0 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask);
  return v0;
}

uint64_t sub_1BA6867EC(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA686838(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  FormatSelectorValue.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void FormatSelectorValue.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[20];

  v13[6] = a3;
  v13[15] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13[5] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v13[12] = (char *)v13 - v6;
  v13[13] = v5;
  v13[9] = v7;
  v9 = _s10CodingKeysOMa_225(255, v7, v5, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8CF870, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8CF820, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8CF7F8, v9);
  v13[16] = v9;
  v13[17] = v10;
  v13[7] = v11;
  v13[8] = v10;
  v13[18] = v11;
  v13[19] = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t type metadata accessor for FormatSelectorValueSelector(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatSelectorValueSelector);
}

uint64_t type metadata accessor for FormatCodingEmptyArrayStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatCodingEmptyArrayStrategy);
}

uint64_t sub_1BA686D78@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return static FormatCodingDefaultStrategy.decodeOrDefault<A>(from:forKey:)(v3, a1, a2, a3);
}

uint64_t static FormatCodingDefaultStrategy.decodeOrDefault<A>(from:forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  char v8;
  uint64_t v9;

  sub_1BB874104();
  v8 = sub_1BB8740F8();
  v9 = *(_QWORD *)(a3 + 8);
  if ((v8 & 1) != 0)
    return static FormatCodingStrategy.decode<A>(from:forKey:)(a1, a2, v9, a4);
  else
    return (*(uint64_t (**)(uint64_t, _QWORD))(v9 + 64))(a2, *(_QWORD *)(a3 + 8));
}

uint64_t _s10CodingKeysOMa_225(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_225);
}

uint64_t FormatSelectorValue.init(value:selectors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = type metadata accessor for FormatSelectorValue(0, a3, a4, v9);
  return sub_1BA686EF8(a2, a3, a4, v11, a5 + *(int *)(v10 + 36));
}

uint64_t type metadata accessor for FormatSelectorValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatSelectorValue);
}

uint64_t sub_1BA686EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v11 = a1;
  v6 = type metadata accessor for FormatSelectorValueSelector(255, a2, a3, a4);
  v7 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValueSelector<A>, v6);
  v8 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValueSelector<A>, v6);
  v9 = type metadata accessor for FormatCodingEmptyArrayStrategy(0, v6, v7, v8);
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingEmptyArrayStrategy<A>, v9);
  return FormatCodingDefault.init(wrappedValue:)((uint64_t)&v11, a5);
}

uint64_t FormatCodingDefault.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_1BA686FE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static FormatCodingEmptyArrayStrategy.defaultValue.getter();
  *a1 = result;
  return result;
}

uint64_t static FormatCodingEmptyArrayStrategy.defaultValue.getter()
{
  return sub_1BB872E68();
}

uint64_t static FormatCodingStrategy.decode<A>(from:forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[4];

  v12[0] = a4;
  v12[1] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)v12 - v8;
  sub_1BB874104();
  swift_getAssociatedConformanceWitness();
  v10 = v12[3];
  result = sub_1BB8740D4();
  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 88))(v9, a2, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  }
  return result;
}

void sub_1BA687150(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BA68715C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA687178(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))static FormatCodingEmptyArrayStrategy.decode(rawValue:), a3);
}

uint64_t sub_1BA687178@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD)@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = a3(a1, a2[2], a2[3], a2[4]);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t static FormatCodingEmptyArrayStrategy.decode(rawValue:)()
{
  return sub_1BA6871C4();
}

uint64_t sub_1BA6871C4()
{
  sub_1BB86DF60();
  return sub_1BB86DD08();
}

uint64_t sub_1BA6871F4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BA687208(a1, a2);
}

uint64_t sub_1BA687208@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA687228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = static FormatCodingEmptySetStrategy.defaultValue.getter(*(_QWORD *)(a1 + 16), a2, a3, a4, *(_QWORD *)(a1 + 48));
  *a5 = result;
  return result;
}

uint64_t _s8NewsFeed28FormatCodingEmptySetStrategyV12defaultValueShyxGvgZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;

  v7 = sub_1BB872E68();
  if (MEMORY[0x1BCCE37F0](v7, a1))
    v8 = sub_1BB0519C0(v7, a1, a5);
  else
    v8 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1BA6872CC(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t destroy for InternalErrorViewLayout()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1BA68732C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  FormatValue.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void FormatValue.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[20];

  v13[14] = a3;
  v13[15] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13[8] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v13[12] = (char *)v13 - v6;
  v13[13] = v5;
  v13[9] = v7;
  v9 = _s10CodingKeysOMa_9(255, v7, v5, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8C42F0, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8C42A0, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8C4278, v9);
  v13[16] = v9;
  v13[17] = v10;
  v13[6] = v12;
  v13[7] = v11;
  v13[18] = v11;
  v13[19] = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_9);
}

uint64_t FormatValue.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_1BA687788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BA6EC9F8(a1, a2, a5);
}

_QWORD *initializeWithCopy for InternalErrorViewLayout(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t objectdestroy_79Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

uint64_t objectdestroy_14Tm_0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_6Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  v1 = type metadata accessor for FeedPuzzleStatistic();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 32);
  swift_unknownObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  type metadata accessor for PuzzleStatisticCategory(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for PuzzleStatisticValue(0);
      goto LABEL_14;
    case 1u:
      type metadata accessor for PuzzleStatisticValue(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
      {
        v7 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7))
        {
          v8 = sub_1BB86BEC0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
        }
      }
      v9 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      v10 = v5 + *(int *)(v9 + 20);
      v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 5 || v11 == 4)
      {
        v12 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12))
        {
          v13 = sub_1BB86BEC0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v10, v13);
        }
      }
      v5 += *(int *)(v9 + 24);
LABEL_14:
      v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 5 || v14 == 4)
      {
        v15 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v5, 1, v15))
          goto LABEL_25;
      }
      return swift_deallocObject();
    case 2u:
      v16 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v5, 1, v16))
      {
        v17 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v5, v17);
        v18 = type metadata accessor for PuzzleLeaderboardEntry();
        swift_bridgeObjectRelease();
        v19 = v5 + *(int *)(v18 + 24);
        swift_bridgeObjectRelease();
        v20 = *(_QWORD *)(v19 + 24);
        if (v20 >> 60 != 15)
          sub_1BA69D314(*(_QWORD *)(v19 + 16), v20);
        swift_bridgeObjectRelease();
      }
      return swift_deallocObject();
    case 3u:
      v21 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
      v22 = v5 + *(int *)(v21 + 24);
      v23 = type metadata accessor for PuzzleStreak();
      v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48);
      if (!v24(v22, 1, v23))
      {
        v25 = sub_1BB86BEC0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v22, v25);
      }
      v5 += *(int *)(v21 + 28);
      if (!v24(v5, 1, v23))
      {
LABEL_25:
        v26 = sub_1BB86BEC0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v5, v26);
      }
      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_1()
{
  id *v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_3()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BB86CBE0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + v4);
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_5()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char *v5;

  v1 = sub_1BB86C8B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  v5 = *(char **)(v0 + v4);
  if ((unint64_t)(v5 - 1) >= 4)

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_7()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_9()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 24);
  v5 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_1BB871C80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_3(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_5()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_10Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_92Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_6()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_576Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24) >= 4uLL)
    swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_7()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for FeedHeadline(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v4 = v1[10];
  v5 = v3 + v4 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  v6 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);

    v8 = v5 + *(int *)(v6 + 28);
    v9 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = v3 + v1[11];
  v11 = sub_1BB871B24();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  if (*(_QWORD *)(v3 + v1[12] + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + v1[13]) >= 3uLL)
    swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_8(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_9()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for DebugGroupLayoutKey();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  v3 = v2 + *(int *)(v1 + 24);
  __swift_destroy_boxed_opaque_existential_1(v3 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  v5 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v2 + *(int *)(v1 + 28);
  v7 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = v6 + *(int *)(v8 + 20);
  v10 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v6 + *(int *)(v8 + 24);
  if (*(_QWORD *)(v11 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v12 = v11 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v13 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_11(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_12()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BB8705C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_13()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BB86F658();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_14()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_15()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_16()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocObject();
}

uint64_t objectdestroyTm_17()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for GroupLayoutContext();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  v3 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = v2 + *(int *)(v1 + 20);
  v5 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v2 + *(int *)(v1 + 24);
  if (*(_QWORD *)(v6 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v7 = v6 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v8 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_19()
{
  id *v0;

  return swift_deallocObject();
}

uint64_t objectdestroyTm_20()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_21()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_22()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for DebugTaxtAttachementList();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  sub_1BB6F88B0(0, (unint64_t *)&qword_1EF2C2F00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1BB87225C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_24()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

unint64_t destroy for FeedItem.Kind(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BA688D08@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatFloat.init(from:)(a1, a2);
}

uint64_t FormatFloat.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  unint64_t v7;
  double v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  void (*v15)(double *__return_ptr, uint64_t);
  uint64_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  id v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(double *__return_ptr, uint64_t);
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(double *__return_ptr, uint64_t);
  char v70;
  uint64_t v71;
  uint64_t *v72;
  _BYTE *v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  void (*v90)(double *__return_ptr, uint64_t);
  _BYTE *v91;
  _BYTE v92[16];
  float *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  unint64_t *v97;
  uint64_t v98;
  _BYTE *v99;
  double v100;
  unint64_t v101;
  char v102;
  float v103;
  _QWORD v104[3];
  uint64_t v105;

  v3 = v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v104, v105);
    sub_1BA689CD8();
    sub_1BB8743D4();
    v8 = v100;
LABEL_18:
    v18 = swift_allocObject();
    *(double *)(v18 + 16) = v8;
LABEL_19:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
    *a2 = v18;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  __swift_project_boxed_opaque_existential_1(v104, v105);
  v6 = sub_1BB8743B0();
  v9 = v6;
  v10 = v7;
  v103 = 0.0;
  MEMORY[0x1E0C80A78](v6);
  v93 = &v103;
  if ((v12 & 0x1000000000000000) != 0 || !(v10 & 0x2000000000000000 | v9 & 0x1000000000000000))
  {
    swift_bridgeObjectRetain();
    sub_1BB873C90();
    swift_bridgeObjectRelease();
  }
  else
  {
    v99 = v92;
    MEMORY[0x1E0C80A78](v11);
    v90 = (void (*)(double *__return_ptr, uint64_t))sub_1BA9F2938;
    v91 = v92;
    if ((v10 & 0x2000000000000000) == 0)
    {
      v98 = (uint64_t)&v94;
      v13 = a2;
      if ((v9 & 0x1000000000000000) != 0)
      {
        v14 = (v10 & 0xFFFFFFFFFFFFFFFLL) + 32;
        swift_bridgeObjectRetain();
        v15 = (void (*)(double *__return_ptr, uint64_t))sub_1BA9F2938;
      }
      else
      {
        v14 = sub_1BB873D80();
        v15 = v90;
        swift_bridgeObjectRetain();
        if (!v14)
        {
          v16 = 0;
          goto LABEL_12;
        }
      }
      v16 = v14;
LABEL_12:
      v15(&v100, v16);
      v102 = LOBYTE(v100);
      swift_bridgeObjectRelease();
      a2 = v13;
      goto LABEL_16;
    }
    v100 = *(double *)&v9;
    v101 = v10 & 0xFFFFFFFFFFFFFFLL;
    switch((char)v9)
    {
      case 0:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
        swift_bridgeObjectRetain();
        v17 = 0;
        break;
      default:
        swift_bridgeObjectRetain();
        v57 = (_BYTE *)_swift_stdlib_strtof_clocale();
        if (v57)
          v17 = *v57 == 0;
        else
          v17 = 0;
        break;
    }
    v102 = v17;
    swift_bridgeObjectRelease();
  }
LABEL_16:
  if ((v102 & 1) != 0)
  {
    swift_bridgeObjectRelease();

    v8 = v103;
    goto LABEL_18;
  }
  v20 = type metadata accessor for FormatLayoutError();
  v99 = (_BYTE *)sub_1BA689E84();
  v21 = (void *)swift_allocError();
  *v22 = v9;
  v22[1] = v10;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_bridgeObjectRetain();
  v23 = sub_1BA689E44(v9, v10);
  v25 = v24;
  swift_bridgeObjectRelease();
  v97 = a2;
  if (v25)
  {
    if (v23 == 36 && v25 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_26:
      v100 = 6.79520521e-308;
      v101 = 0xE700000000000000;
      v27 = sub_1BA9C0430(1uLL, v9, v10);
      v29 = v28;
      v31 = v30;
      v33 = v32;
      swift_bridgeObjectRelease();
      MEMORY[0x1BCCE334C](v27, v29, v31, v33);
      sub_1BB872AFC(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v35);
      v9 = *(_QWORD *)&v100;
      v10 = v101;
      goto LABEL_27;
    }
    v26 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
      goto LABEL_26;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  sub_1BA689D58(40, 0xE100000000000000, v9, v10);
  v37 = v36;
  swift_bridgeObjectRelease();
  if ((v37 & 1) != 0)
    goto LABEL_37;
  swift_bridgeObjectRetain();
  v38 = sub_1BA689ECC(v9, v10);
  v40 = v39;
  swift_bridgeObjectRelease();
  if (!v40)
    goto LABEL_37;
  if (v38 != 41 || v40 != 0xE100000000000000)
  {
    v41 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v41 & 1) != 0)
      goto LABEL_33;
LABEL_37:
    swift_allocError();
    *v55 = v9;
    v55[1] = v10;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    v56 = v21;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
LABEL_33:
  v94 = v20;
  v96 = v21;
  swift_bridgeObjectRetain();
  v42 = sub_1BB872B98();
  v44 = v43;
  v46 = v45;
  v48 = v47;
  swift_bridgeObjectRelease();
  v49 = (uint64_t *)MEMORY[0x1BCCE334C](v42, v44, v46, v48);
  v51 = v50;
  swift_bridgeObjectRelease();
  v52 = sub_1BB872AC0();
  if ((unint64_t)sub_1BB872ACC() >> 14 < v52 >> 14)
  {
    __break(1u);
    goto LABEL_97;
  }
  v53 = sub_1BB872B98();
  v98 = MEMORY[0x1BCCE334C](v53);
  v95 = v54;
  swift_bridgeObjectRelease();
  if (v49 == (uint64_t *)0x746E696F70 && v51 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v58 = swift_bridgeObjectRelease();
    v103 = 0.0;
    MEMORY[0x1E0C80A78](v58);
    v93 = &v103;
    v60 = v95;
    v61 = v98;
    if ((v95 & 0x1000000000000000) != 0 || !(v95 & 0x2000000000000000 | v98 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_1BB873C90();
      swift_bridgeObjectRelease();
      a2 = v97;
LABEL_50:
      v18 = swift_allocObject();
      if ((v102 & 1) != 0)
      {

        swift_bridgeObjectRelease();
        *(double *)(v18 + 16) = v103;
        goto LABEL_19;
      }
      goto LABEL_68;
    }
    MEMORY[0x1E0C80A78](v59);
    v49 = &v89;
    v90 = (void (*)(double *__return_ptr, uint64_t))sub_1BA9F2938;
    v91 = v92;
    if ((v60 & 0x2000000000000000) != 0)
    {
      v100 = *(double *)&v61;
      v101 = v60 & 0xFFFFFFFFFFFFFFLL;
      switch((char)v61)
      {
        case 0:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 32:
          swift_bridgeObjectRetain();
          v64 = 0;
          a2 = v97;
          break;
        default:
          swift_bridgeObjectRetain();
          v73 = (_BYTE *)_swift_stdlib_strtof_clocale();
          a2 = v97;
          if (v73)
            v64 = *v73 == 0;
          else
            v64 = 0;
          break;
      }
      goto LABEL_49;
    }
    if ((v61 & 0x1000000000000000) != 0)
    {
      v62 = (v60 & 0xFFFFFFFFFFFFFFFLL) + 32;
      swift_bridgeObjectRetain();
      v63 = (void (*)(double *__return_ptr, uint64_t))sub_1BA9F2938;
      goto LABEL_46;
    }
LABEL_97:
    v62 = sub_1BB873D80();
    v63 = (void (*)(double *__return_ptr, uint64_t))v49[2];
    swift_bridgeObjectRetain();
    if (!v62)
    {
      v63(&v100, 0);
      v64 = LOBYTE(v100);
      a2 = v97;
      v60 = v95;
      goto LABEL_49;
    }
    v60 = v95;
LABEL_46:
    v63(&v100, v62);
    v64 = LOBYTE(v100);
    a2 = v97;
LABEL_49:
    v102 = v64;
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  if (v49 == (uint64_t *)0x6C65786970 && v51 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v65 = swift_bridgeObjectRelease();
    v103 = 0.0;
    MEMORY[0x1E0C80A78](v65);
    v93 = &v103;
    v60 = v95;
    v67 = v98;
    if ((v95 & 0x1000000000000000) != 0 || !(v95 & 0x2000000000000000 | v98 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_1BB873C90();
      swift_bridgeObjectRelease();
      a2 = v97;
LABEL_66:
      v71 = swift_allocObject();
      if ((v102 & 1) != 0)
      {

        swift_bridgeObjectRelease();
        *(double *)(v71 + 16) = v103;
        v18 = v71 | 0x2000000000000000;
        goto LABEL_19;
      }
LABEL_68:
      swift_allocError();
      *v72 = v98;
      v72[1] = v60;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();

      swift_bridgeObjectRelease();
      swift_deallocUninitializedObject();
      goto LABEL_5;
    }
    MEMORY[0x1E0C80A78](v66);
    v90 = (void (*)(double *__return_ptr, uint64_t))sub_1BA9F2938;
    v91 = v92;
    if ((v60 & 0x2000000000000000) != 0)
    {
      v100 = *(double *)&v67;
      v101 = v60 & 0xFFFFFFFFFFFFFFLL;
      switch((char)v67)
      {
        case 0:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 32:
          swift_bridgeObjectRetain();
          v70 = 0;
          a2 = v97;
          break;
        default:
          swift_bridgeObjectRetain();
          v79 = (_BYTE *)_swift_stdlib_strtof_clocale();
          a2 = v97;
          if (v79)
            v70 = *v79 == 0;
          else
            v70 = 0;
          break;
      }
      goto LABEL_65;
    }
    if ((v67 & 0x1000000000000000) != 0)
    {
      v68 = (v60 & 0xFFFFFFFFFFFFFFFLL) + 32;
      swift_bridgeObjectRetain();
      v69 = (void (*)(double *__return_ptr, uint64_t))sub_1BA9F2938;
    }
    else
    {
      v68 = sub_1BB873D80();
      v69 = v90;
      swift_bridgeObjectRetain();
      if (!v68)
      {
        v90(&v100, 0);
        v70 = LOBYTE(v100);
        a2 = v97;
        v60 = v95;
        goto LABEL_65;
      }
      v60 = v95;
    }
    v69(&v100, v68);
    v70 = LOBYTE(v100);
    a2 = v97;
LABEL_65:
    v102 = v70;
    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
  if (v49 == (uint64_t *)0x64656C616373 && v51 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v100 = 34;
    v101 = 0xE100000000000000;
    sub_1BB872AFC((_QWORD *)0x22);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v74);
    v75 = sub_1BA9F1950(*(uint64_t *)&v100, v101);
    v77 = v76;
    sub_1BB86DC9C();
    swift_allocObject();
    sub_1BB86DC90();
    v78 = swift_allocObject();
    sub_1BA61BC14();
    sub_1BB86DC78();

    swift_release();
    sub_1BA69D314(v75, v77);

    v18 = v78 | 0x4000000000000000;
LABEL_76:
    a2 = v97;
    goto LABEL_19;
  }
  if (v49 == (uint64_t *)0x6163736E5563616DLL && v51 == 0xEB0000000064656CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v100 = 34;
    v101 = 0xE100000000000000;
    sub_1BB872AFC((_QWORD *)0x22);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v80);
    v81 = sub_1BA9F1950(*(uint64_t *)&v100, v101);
    v83 = v82;
    sub_1BB86DC9C();
    swift_allocObject();
    sub_1BB86DC90();
    v84 = swift_allocObject();
    sub_1BA61BC14();
    sub_1BB86DC78();

    swift_release();
    sub_1BA69D314(v81, v83);

    v18 = v84 | 0x6000000000000000;
    goto LABEL_76;
  }
  if (v49 == (uint64_t *)0x6E6F6974706FLL && v51 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_93:
    swift_bridgeObjectRelease();

    v86 = swift_allocObject();
    v87 = v95;
    *(_QWORD *)(v86 + 16) = v98;
    *(_QWORD *)(v86 + 24) = v87;
    v18 = v86 | 0x8000000000000000;
    goto LABEL_76;
  }
  v85 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v85 & 1) != 0)
    goto LABEL_93;
  swift_bridgeObjectRelease();
  swift_allocError();
  *v88 = v9;
  v88[1] = v10;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();

  v56 = v96;
LABEL_4:

LABEL_5:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA689CD8()
{
  unint64_t result;

  result = qword_1ED3B0770;
  if (!qword_1ED3B0770)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEF078], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ED3B0770);
  }
  return result;
}

uint64_t type metadata accessor for FormatLayoutError()
{
  uint64_t result;

  result = qword_1ED3B4C20;
  if (!qword_1ED3B4C20)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA689D58(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_1BB872B74() != a1 || v9 != a2)
  {
    v10 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_1BB872AC0();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BA689E44(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_1BB872B74();
  else
    return 0;
}

unint64_t sub_1BA689E84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B4C10;
  if (!qword_1ED3B4C10)
  {
    v1 = type metadata accessor for FormatLayoutError();
    result = MEMORY[0x1BCCE5B24](&unk_1BB94DDEC, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B4C10);
  }
  return result;
}

uint64_t sub_1BA689ECC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  sub_1BB872ACC();
  return sub_1BB872B74();
}

uint64_t sub_1BA689F44(_QWORD *a1)
{
  return FormatViewNodeStyle.encode(to:)(a1);
}

uint64_t FormatViewNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, char *);
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  void (*v76)(char *, uint64_t, char *);
  char *v77;
  char *v78;
  char *v79;
  _BYTE v80[96];
  char *v81;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v72 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v73 = (char *)&v70 - v8;
  MEMORY[0x1E0C80A78](v9);
  v74 = (char *)&v70 - v10;
  MEMORY[0x1E0C80A78](v11);
  v75 = (char *)&v70 - v12;
  MEMORY[0x1E0C80A78](v13);
  v76 = (void (*)(char *, uint64_t, char *))((char *)&v70 - v14);
  MEMORY[0x1E0C80A78](v15);
  v77 = (char *)&v70 - v16;
  MEMORY[0x1E0C80A78](v17);
  v78 = (char *)&v70 - v18;
  MEMORY[0x1E0C80A78](v19);
  v79 = (char *)&v70 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v70 - v22;
  sub_1BAECFC9C(0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  v29 = sub_1BAECFD8C();
  v30 = sub_1BA4A2870(&qword_1ED3D0E70, (uint64_t (*)(uint64_t))sub_1BAECFD8C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v31, v28, v4, v29, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v26, v30, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v32 = v2[2];
  v33 = v2[3];
  v34 = v2;
  v35 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v35 != -1)
    swift_once();
  v36 = sub_1BB86EB84();
  v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C20);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
  v38(v23, v37, v36);
  v39 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v40 = v81;
  sub_1BAD265E8(v32, v33, 0, 0, 0, (uint64_t)v23, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE4E1C4, (uint64_t (*)(uint64_t))sub_1BAECFD14, &qword_1ED3AE9D0);
  if (v40)
  {
    sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v81 = v26;
    v41 = (char *)v34;
    v42 = v34[4];
    v43 = *((_QWORD *)v41 + 5);
    v44 = (uint64_t)v79;
    v38(v79, v37, v36);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1B218(v42, v43, 1, 0, 0, v44, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v44, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v45 = (uint64_t)v78;
    v38(v78, v37, v36);
    swift_storeEnumTagMultiPayload();
    v46 = swift_bridgeObjectRetain();
    sub_1BAD29B30(v46, 2, 0, 0);
    v79 = (char *)v39;
    v48 = (char *)v36;
    v71 = v37;
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v78 = v41;
    v49 = *((_QWORD *)v41 + 7);
    v50 = qword_1ED3C6D60;
    swift_bridgeObjectRetain();
    if (v50 != -1)
      swift_once();
    v51 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C38);
    v52 = (uint64_t)v77;
    v38(v77, v51, (uint64_t)v48);
    swift_storeEnumTagMultiPayload();
    sub_1BAD581E4(v49, 3, 0, 0, v52, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v52, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v78;
    v54 = *((_QWORD *)v78 + 8);
    v55 = (uint64_t)v76;
    v56 = v71;
    v38((char *)v76, v71, (uint64_t)v48);
    swift_storeEnumTagMultiPayload();
    sub_1BA6E6C68(v54);
    sub_1BAD58404(v54, 4, 0, 0, v55, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v55, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v54);
    v57 = (uint64_t)v75;
    v77 = v48;
    v38(v75, v56, (uint64_t)v48);
    swift_storeEnumTagMultiPayload();
    v58 = swift_bridgeObjectRetain();
    sub_1BAD5861C(v58, 5, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v59 = *((_QWORD *)v53 + 10);
    v60 = *((_QWORD *)v53 + 11);
    v76 = (void (*)(char *, uint64_t, char *))v38;
    v61 = v53[96];
    v62 = (uint64_t)v74;
    v76(v74, v56, v77);
    swift_storeEnumTagMultiPayload();
    sub_1BA6E6C54(v59, v60, v61);
    sub_1BAD5884C(v59, v60, v61, 6, 0, 0, v62, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    v63 = v59;
    v26 = v81;
    v64 = v76;
    sub_1BA6E6CC4(v63, v60, v61);
    sub_1BA6A09F0((uint64_t)(v53 + 104), (uint64_t)v80, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
    v65 = (uint64_t)v73;
    v64(v73, v56, v77);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD58A80((uint64_t)v80, 7, 0, 0, v65, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    v66 = (uint64_t)v77;
    v67 = v53[185];
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v68 = __swift_project_value_buffer(v66, (uint64_t)qword_1ED476B78);
    v69 = (uint64_t)v72;
    v64(v72, v68, (char *)v66);
    swift_storeEnumTagMultiPayload();
    sub_1BAD58D68(v67, 8, 0, 0, v69, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v69, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BAECFC9C);
}

unint64_t sub_1BA68A818()
{
  unint64_t result;

  result = qword_1ED39B310;
  if (!qword_1ED39B310)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBackground, &type metadata for FormatBackground);
    atomic_store(result, (unint64_t *)&qword_1ED39B310);
  }
  return result;
}

uint64_t sub_1BA68A85C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  __int128 v83;
  char v84;
  char v85;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v74 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v73 = (char *)&v73 - v7;
  MEMORY[0x1E0C80A78](v8);
  v75 = (char *)&v73 - v9;
  MEMORY[0x1E0C80A78](v10);
  v76 = (char *)&v73 - v11;
  MEMORY[0x1E0C80A78](v12);
  v78 = (char *)&v73 - v13;
  MEMORY[0x1E0C80A78](v14);
  v79 = (char *)&v73 - v15;
  MEMORY[0x1E0C80A78](v16);
  v80 = (char *)&v73 - v17;
  MEMORY[0x1E0C80A78](v18);
  v81 = (char *)&v73 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v73 - v21;
  sub_1BAEE6440(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BA74E21C(0);
  v29 = v28;
  v30 = sub_1BAEE6530();
  v31 = sub_1BA4A2870(&qword_1ED3D13A0, (uint64_t (*)(uint64_t))sub_1BAEE6530, (uint64_t)&unk_1BB8FFC6C);
  v77 = v29;
  sub_1BA6EC1EC(v29, v32, v26, v29, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v31, (uint64_t)&off_1E734BD80);
  v33 = *v2;
  v34 = v2[1];
  v35 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v22, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v82;
  sub_1BAD12B5C(v33, v34, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v35[2];
    v43 = v35[3];
    v44 = v38;
    v45 = (uint64_t)v81;
    v82 = v44;
    ((void (*)(char *))v39)(v81);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD12B5C(v42, v43, 1, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = v35[4];
    v48 = v35[5];
    v49 = v39;
    v50 = v25;
    v51 = (uint64_t)v80;
    v52 = v49;
    v49(v80, v82, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD12B5C(v47, v48, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v35[6];
    v54 = v35[7];
    v55 = (char *)v40;
    v56 = (uint64_t)v79;
    v52(v79, v82, v37);
    v81 = v55;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD12B5C(v53, v54, 3, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v25 = v50;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v53) = *((_BYTE *)v35 + 64);
    v57 = (uint64_t)v78;
    v52(v78, v82, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD12CB4(v53, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v76;
    v59 = (uint64_t)v35 + *(int *)(v77 + 52);
    v52(v76, v82, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD43D04(v59, 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v60 = v52;
    v82 = 0;
    v61 = v77;
    v62 = *((unsigned __int8 *)v35 + *(int *)(v77 + 56));
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v63 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
    v64 = (uint64_t)v75;
    v52(v75, v63, v37);
    swift_storeEnumTagMultiPayload();
    if (v62)
    {
      v65 = v82;
      v66 = sub_1BAE46BEC(v64, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v65)
      {
LABEL_11:
        sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE6440);
      }
      v82 = 0;
      if ((v66 & 1) != 0)
      {
        v83 = xmmword_1BB8D2DA0;
        v84 = 0;
        v85 = 1;
        sub_1BAEE64B8();
        sub_1BA4A2870(&qword_1ED3AF098, (uint64_t (*)(uint64_t))sub_1BAEE64B8, MEMORY[0x1E0DED188]);
        v67 = v82;
        sub_1BB874464();
        if (v67)
          goto LABEL_11;
        v82 = 0;
      }
    }
    sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
    v68 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v68 != -1)
      swift_once();
    v69 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476BD8);
    v70 = (uint64_t)v73;
    v60(v73, v69, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v71 = (uint64_t)v35 + *(int *)(v61 + 64);
    v72 = (uint64_t)v74;
    v60(v74, v69, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD44018(v71, 8, 0, 0, v72, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v72, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE6440);
}

void sub_1BA68B0A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3CE0B8)
  {
    v2 = sub_1BB86C67C();
    v3 = sub_1BA4A2870(&qword_1ED3C44E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&protocol conformance descriptor for URL);
    v5 = _s10CodingKeysOMa_86(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3CE0B8);
  }
}

uint64_t sub_1BA68B11C()
{
  unsigned __int8 *v0;

  return sub_1BADB6D5C(*v0);
}

uint64_t sub_1BA68B124(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA68B150 + 4 * byte_1BB8AED8E[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1BA68B150()
{
  return 0x696669746E656469;
}

uint64_t sub_1BA68B170()
{
  return 1701667182;
}

uint64_t sub_1BA68B17C()
{
  return 0x7470697263736564;
}

uint64_t sub_1BA68B19C()
{
  return 0x6465726975716572;
}

uint64_t sub_1BA68B1B4()
{
  return 0x746C7561666564;
}

uint64_t sub_1BA68B1CC()
{
  return 0x7461636572706564;
}

uint64_t sub_1BA68B1E8()
{
  return 0x72656C69706D6F63;
}

unint64_t sub_1BA68B20C()
{
  return 0xD000000000000010;
}

uint64_t sub_1BA68B228()
{
  return 1885433183;
}

uint64_t sub_1BA68B234()
{
  unsigned __int8 *v0;

  return sub_1BAE0A8D0(*v0);
}

void FormatCompilerProperty.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD v51[24];

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v2);
  v51[18] = (char *)v51 - v3;
  sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v4);
  v51[17] = (char *)v51 - v5;
  sub_1BA68E3E0(0);
  MEMORY[0x1E0C80A78](v6);
  v51[16] = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v8);
  v51[15] = (char *)v51 - v9;
  sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v10);
  v51[14] = (char *)v51 - v11;
  sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v12);
  v51[13] = (char *)v51 - v13;
  v14 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1E0C80A78](v14);
  v51[12] = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA68E458(0);
  MEMORY[0x1E0C80A78](v16);
  v51[11] = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v18);
  v51[10] = (char *)v51 - v19;
  v20 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v20);
  v51[9] = (char *)v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v51[8] = (char *)v51 - v23;
  MEMORY[0x1E0C80A78](v24);
  v51[7] = (char *)v51 - v25;
  MEMORY[0x1E0C80A78](v26);
  v51[6] = (char *)v51 - v27;
  MEMORY[0x1E0C80A78](v28);
  v51[5] = (char *)v51 - v29;
  MEMORY[0x1E0C80A78](v30);
  v51[4] = (char *)v51 - v31;
  MEMORY[0x1E0C80A78](v32);
  v51[3] = (char *)v51 - v33;
  MEMORY[0x1E0C80A78](v34);
  v51[2] = (char *)v51 - v35;
  MEMORY[0x1E0C80A78](v36);
  v51[1] = (char *)v51 - v37;
  MEMORY[0x1E0C80A78](v38);
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v39);
  v40 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)v51 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)v51 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a1[3];
  v46 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v47);
  v48 = sub_1BA6B8518();
  v51[23] = v45;
  sub_1BA6EC1EC(v40, v49, v47, v40, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v46, (uint64_t)v45, v48, (uint64_t)&off_1E734BD80);
  sub_1BA4C2DD8(v51[19], (uint64_t)v42, type metadata accessor for FormatCompilerProperty);
  v50 = (char *)sub_1BA68B798 + 4 * word_1BB8AE54A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA68B798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BAE8A3E4(v0, v1, (uint64_t)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v4 = sub_1BB86EB84();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v2, v5, v4);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v3 - 72);
  sub_1BA6910E0(0, v1, v2);
  sub_1BA4A2E80(v2, type metadata accessor for FormatVersionRequirement);
  sub_1BAE8A5E0(v1, (uint64_t)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  return sub_1BA4A2E80(v6, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

void FormatCompilerProperty.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  char *v15;
  _QWORD v16[4];

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v0);
  v16[2] = (char *)v16 - v1;
  sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v2);
  v16[1] = (char *)v16 - v3;
  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3CD5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v5);
  sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3CD600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v9);
  sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1E0C80A78](v12);
  sub_1BA4C2DD8(v16[3], (uint64_t)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  v15 = (char *)sub_1BA68C43C + 4 * byte_1BB94039E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA68C43C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DEAFA0];
  sub_1BB6E1780(v1, (uint64_t)v0, (uint64_t)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  v3 = *v0;
  swift_bridgeObjectRetain();
  sub_1BB6E17DC((uint64_t)v0, (uint64_t)&unk_1ED3CD660, v2, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  return v3;
}

uint64_t destroy for FormatCompilerProperty(uint64_t a1)
{
  uint64_t result;
  unint64_t *v3;
  uint64_t v4;
  _UNKNOWN **v5;
  unint64_t *v6;
  unint64_t (*v7)();
  ValueMetadata *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = (unint64_t *)&unk_1ED3CD660;
      v4 = MEMORY[0x1E0DEAFA0];
      v5 = &protocol witness table for Bool;
      goto LABEL_11;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(_QWORD *)(a1 + 56) & 0xF000000000000007) != 0)
        swift_release();
      swift_bridgeObjectRelease();
      v6 = &qword_1ED3CD640;
      v7 = sub_1BA7FDD98;
      v8 = &type metadata for FormatColor;
      goto LABEL_22;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3CD600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      v10 = v9;
      v11 = a1 + *(int *)(v9 + 48);
      v12 = sub_1BB86C8B0();
      goto LABEL_13;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = *(int *)(type metadata accessor for FormatCompilerEnumProperty(0) + 48);
      goto LABEL_24;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = &qword_1ED3CD610;
      v7 = sub_1BA841CF4;
      v8 = (ValueMetadata *)MEMORY[0x1E0DEF040];
      goto LABEL_22;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = &qword_1ED3CD670;
      v4 = MEMORY[0x1E0DEB418];
      v5 = &protocol witness table for Int;
      goto LABEL_11;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = &qword_1ED3CD650;
      v4 = MEMORY[0x1E0DEA968];
      v5 = &protocol witness table for String;
LABEL_11:
      sub_1BA50CAA8(0, v3, v4, (uint64_t)v5, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      goto LABEL_23;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3CD5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      v10 = v15;
      v11 = a1 + *(int *)(v15 + 48);
      v12 = sub_1BB86C67C();
LABEL_13:
      v16 = v12;
      v17 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v11, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v11, v16);
      swift_bridgeObjectRelease();
      v13 = *(int *)(v10 + 60);
      goto LABEL_24;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(_QWORD *)(a1 + 56) & 0xF000000000000007) != 0)
        swift_release();
      swift_bridgeObjectRelease();
      v6 = &qword_1ED3CD630;
      v7 = sub_1BA8378F4;
      v8 = &type metadata for FormatFont;
      goto LABEL_22;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(_QWORD *)(a1 + 56) & 0xF000000000000007) != 0)
        swift_release();
      swift_bridgeObjectRelease();
      v6 = (unint64_t *)&unk_1ED3CD620;
      v7 = sub_1BA7F6E24;
      v8 = &type metadata for FormatAsyncImageContent;
LABEL_22:
      sub_1BA4CDF6C(0, v6, (uint64_t (*)(void))v7, (uint64_t)v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
LABEL_23:
      v13 = *(int *)(v14 + 60);
LABEL_24:
      v18 = a1 + v13;
      v19 = sub_1BB86E710();
      v20 = *(_QWORD *)(v19 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
      if (!(_DWORD)result)
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for FormatCompilerProperty()
{
  char *v0;

  v0 = (char *)sub_1BA68CB54 + 4 * word_1BB9403E4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA68CB54(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(const void *, uint64_t, uint64_t);
  uint64_t v37;

  v27 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v27;
  v28 = *(_QWORD *)(v26 + 24);
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 24) = v28;
  v29 = *(_QWORD *)(v26 + 40);
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  *(_QWORD *)(v25 + 40) = v29;
  *(_BYTE *)(v25 + 48) = *(_BYTE *)(v26 + 48);
  *(_WORD *)(v25 + 49) = *(_WORD *)(v26 + 49);
  *(_QWORD *)(v25 + 56) = *(_QWORD *)(v26 + 56);
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v31 = *(int *)(v30 + 60);
  v32 = (void *)(v25 + v31);
  v33 = (const void *)(v26 + v31);
  v34 = sub_1BB86E710();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36(v33, 1, v34))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  swift_storeEnumTagMultiPayload();
  return v25;
}

void sub_1BA68D480(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = type metadata accessor for FormatCompilerPrimitiveProperty(0, a3, a4, a4);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BA68D4C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_1BB86C67C();
    v7 = sub_1BA4A2870(&qword_1ED3C44E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&protocol conformance descriptor for URL);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BA68D544(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (!*a2)
  {
    v10 = a3(255);
    v11 = sub_1BA4A2870(a4, a3, a5);
    v13 = type metadata accessor for FormatCompilerPrimitiveProperty(a1, v10, v11, v12);
    if (!v14)
      atomic_store(v13, a2);
  }
}

uint64_t type metadata accessor for FormatCompilerEnumProperty(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3CB778);
}

uint64_t type metadata accessor for FormatCompilerProperty(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3B6A08);
}

void sub_1BA68D5EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_1BB86C8B0();
    v7 = sub_1BA4A2870((unint64_t *)&qword_1ED3C44F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t)&protocol conformance descriptor for Date);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BA68D668(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (!*a2)
  {
    v10 = a3(255);
    v11 = sub_1BA4A2870(a4, a3, a5);
    v13 = type metadata accessor for FormatPrimitivePropertyDefinition(a1, v10, v11, v12);
    if (!v14)
      atomic_store(v13, a2);
  }
}

uint64_t initializeWithCopy for FormatURL(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v6 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_BYTE *)(a2 + 24);
    sub_1BA690C00(v6, v7, v8, v9);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v9;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v5 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v10 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)(a1 + *(int *)(v11 + 20)) = *(_QWORD *)(a2 + *(int *)(v11 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t FormatCompilerProperty.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (**v23)(char *, _QWORD);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (**v66)(char *, _QWORD);
  __int128 v67;

  v59 = a2;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v60 = v3;
  MEMORY[0x1E0C80A78](v3);
  v61 = (char *)v42 - v4;
  sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v65 = v5;
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)v42 - v6;
  sub_1BA68E3E0(0);
  v64 = v7;
  MEMORY[0x1E0C80A78](v7);
  v57 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v63 = v9;
  MEMORY[0x1E0C80A78](v9);
  v56 = (char *)v42 - v10;
  sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v54 = v11;
  MEMORY[0x1E0C80A78](v11);
  v55 = (char *)v42 - v12;
  sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v52 = v13;
  MEMORY[0x1E0C80A78](v13);
  v53 = (char *)v42 - v14;
  v50 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1E0C80A78](v50);
  v51 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA68E458(0);
  v48 = v16;
  MEMORY[0x1E0C80A78](v16);
  v49 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v46 = v18;
  MEMORY[0x1E0C80A78](v18);
  v47 = (char *)v42 - v19;
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v44 = v20;
  MEMORY[0x1E0C80A78](v20);
  v45 = (char *)v42 - v21;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v62 = v22;
  v23 = *(void (***)(char *, _QWORD))(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v42 - v24;
  v26 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v30 = v66;
  sub_1BB87468C();
  v31 = v30;
  if (v30)
    goto LABEL_10;
  v66 = v23;
  v42[0] = v28;
  v42[1] = v26;
  v32 = v29[3];
  v43 = v29;
  __swift_project_boxed_opaque_existential_1(v29, v32);
  v33 = sub_1BB872874();
  LOBYTE(v32) = Dictionary<>.errorOnUnknownKeys.getter(v33);
  swift_bridgeObjectRelease();
  v34 = v62;
  if ((v32 & 1) == 0)
  {
LABEL_8:
    sub_1BA68E4D0();
    v67 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v35 = sub_1BB8740EC();
  v36 = *(_QWORD *)(v35 + 16);
  if (!v36)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v37 = (unint64_t *)(v35 + 40);
  while (1)
  {
    v38 = *v37;
    if (*v37 >= 4)
      break;
    v37 += 2;
    if (!--v36)
      goto LABEL_7;
  }
  v39 = *(v37 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v31 = (void *)swift_allocError();
  *(_QWORD *)v40 = v39;
  *(_QWORD *)(v40 + 8) = v38;
  *(_QWORD *)(v40 + 16) = &unk_1E726B1F0;
  *(_OWORD *)(v40 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v39, v38);
  v66[1](v25, v34);
  v29 = v43;
LABEL_10:
  sub_1BA7F8B78(v29, (uint64_t)v31);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

void sub_1BA68E3E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3CD5F0)
  {
    v2 = sub_1BB86C67C();
    v3 = sub_1BA4A2870(&qword_1ED3C44E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&protocol conformance descriptor for URL);
    v5 = type metadata accessor for FormatCompilerPrimitiveProperty(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3CD5F0);
  }
}

void sub_1BA68E458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3CD600)
  {
    v2 = sub_1BB86C8B0();
    v3 = sub_1BA4A2870((unint64_t *)&qword_1ED3C44F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t)&protocol conformance descriptor for Date);
    v5 = type metadata accessor for FormatCompilerPrimitiveProperty(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3CD600);
  }
}

unint64_t sub_1BA68E4D0()
{
  unint64_t result;

  result = qword_1ED3C9DC8;
  if (!qword_1ED3C9DC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC340, &_s10CodingTypeON_110);
    atomic_store(result, (unint64_t *)&qword_1ED3C9DC8);
  }
  return result;
}

uint64_t sub_1BA68E514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  v7 = *(_QWORD *)(v5 + 64) + v6;
  if (!*(_DWORD *)(v5 + 84))
    ++v7;
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v10 + 8))(v11, v9);
  return result;
}

uint64_t sub_1BA68E618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + *(unsigned __int8 *)(v5 + 80)
      + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  v7 = *(_QWORD *)(v5 + 64) + v6;
  if (!*(_DWORD *)(v5 + 84))
    ++v7;
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v10 + 8))(v11, v9);
  return result;
}

uint64_t initializeWithCopy for FormatRemoteImage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t *v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t *v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t *v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t *v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t *v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t *v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v184;

  v6 = type metadata accessor for FormatURL();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v9 = *(_QWORD *)a2;
    v10 = *(_QWORD *)(a2 + 8);
    v11 = *(_QWORD *)(a2 + 16);
    v12 = *(_BYTE *)(a2 + 24);
    sub_1BA690C00(*(_QWORD *)a2, v10, v11, v12);
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = v11;
    *(_BYTE *)(a1 + 24) = v12;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)(a1 + *(int *)(v14 + 20)) = *(_QWORD *)(a2 + *(int *)(v14 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v15 = a3[5];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = swift_getEnumCaseMultiPayload();
  if (v18 == 2)
  {
    v20 = *(_QWORD *)v17;
    v21 = *(_QWORD *)(v17 + 8);
    v22 = *(_QWORD *)(v17 + 16);
    v23 = *(_BYTE *)(v17 + 24);
    sub_1BA690C00(v20, v21, v22, v23);
    *(_QWORD *)v16 = v20;
    *(_QWORD *)(v16 + 8) = v21;
    *(_QWORD *)(v16 + 16) = v22;
    *(_BYTE *)(v16 + 24) = v23;
  }
  else
  {
    if (v18 == 1)
    {
      v19 = *(_QWORD *)(v17 + 8);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = v19;
      *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v16, v17, v24);
      v25 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)(v16 + *(int *)(v25 + 20)) = *(_QWORD *)(v17 + *(int *)(v25 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v26 = a3[6];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = swift_getEnumCaseMultiPayload();
  if (v29 == 2)
  {
    v31 = *(_QWORD *)v28;
    v32 = *(_QWORD *)(v28 + 8);
    v33 = *(_QWORD *)(v28 + 16);
    v34 = *(_BYTE *)(v28 + 24);
    sub_1BA690C00(v31, v32, v33, v34);
    *(_QWORD *)v27 = v31;
    *(_QWORD *)(v27 + 8) = v32;
    *(_QWORD *)(v27 + 16) = v33;
    *(_BYTE *)(v27 + 24) = v34;
  }
  else
  {
    if (v29 == 1)
    {
      v30 = *(_QWORD *)(v28 + 8);
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *(_QWORD *)(v27 + 8) = v30;
      *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v35 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v27, v28, v35);
      v36 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)(v27 + *(int *)(v36 + 20)) = *(_QWORD *)(v28 + *(int *)(v36 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v37 = a3[7];
  v38 = (uint64_t *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v40 = *(_QWORD *)(v6 - 8);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  v184 = v40;
  if (v41(a2 + v37, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 2)
    {
      v45 = *v39;
      v46 = v39[1];
      v47 = v39[2];
      v48 = *((_BYTE *)v39 + 24);
      sub_1BA690C00(v45, v46, v47, v48);
      *v38 = v45;
      v38[1] = v46;
      v40 = v184;
      v38[2] = v47;
      *((_BYTE *)v38 + 24) = v48;
    }
    else
    {
      if (v43 == 1)
      {
        v44 = v39[1];
        *v38 = *v39;
        v38[1] = v44;
        v38[2] = v39[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v49 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v38, v39, v49);
        v50 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v38 + *(int *)(v50 + 20)) = *(uint64_t *)((char *)v39 + *(int *)(v50 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v38, 0, 1, v6);
  }
  v51 = a3[8];
  v52 = (uint64_t *)(a1 + v51);
  v53 = (uint64_t *)(a2 + v51);
  if (v41(a2 + v51, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    v55 = swift_getEnumCaseMultiPayload();
    if (v55 == 2)
    {
      v57 = *v53;
      v58 = v53[1];
      v59 = v53[2];
      v60 = *((_BYTE *)v53 + 24);
      sub_1BA690C00(v57, v58, v59, v60);
      *v52 = v57;
      v52[1] = v58;
      v40 = v184;
      v52[2] = v59;
      *((_BYTE *)v52 + 24) = v60;
    }
    else
    {
      if (v55 == 1)
      {
        v56 = v53[1];
        *v52 = *v53;
        v52[1] = v56;
        v52[2] = v53[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v61 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v52, v53, v61);
        v62 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v52 + *(int *)(v62 + 20)) = *(uint64_t *)((char *)v53 + *(int *)(v62 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v52, 0, 1, v6);
  }
  v63 = a3[9];
  v64 = (uint64_t *)(a1 + v63);
  v65 = (uint64_t *)(a2 + v63);
  if (v41(a2 + v63, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    v67 = swift_getEnumCaseMultiPayload();
    if (v67 == 2)
    {
      v69 = *v65;
      v70 = v65[1];
      v71 = v65[2];
      v72 = *((_BYTE *)v65 + 24);
      sub_1BA690C00(v69, v70, v71, v72);
      *v64 = v69;
      v64[1] = v70;
      v40 = v184;
      v64[2] = v71;
      *((_BYTE *)v64 + 24) = v72;
    }
    else
    {
      if (v67 == 1)
      {
        v68 = v65[1];
        *v64 = *v65;
        v64[1] = v68;
        v64[2] = v65[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v73 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v64, v65, v73);
        v74 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v64 + *(int *)(v74 + 20)) = *(uint64_t *)((char *)v65 + *(int *)(v74 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v64, 0, 1, v6);
  }
  v75 = a3[10];
  v76 = (uint64_t *)(a1 + v75);
  v77 = (uint64_t *)(a2 + v75);
  if (v41(a2 + v75, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    v79 = swift_getEnumCaseMultiPayload();
    if (v79 == 2)
    {
      v81 = *v77;
      v82 = v77[1];
      v83 = v77[2];
      v84 = *((_BYTE *)v77 + 24);
      sub_1BA690C00(v81, v82, v83, v84);
      *v76 = v81;
      v76[1] = v82;
      v40 = v184;
      v76[2] = v83;
      *((_BYTE *)v76 + 24) = v84;
    }
    else
    {
      if (v79 == 1)
      {
        v80 = v77[1];
        *v76 = *v77;
        v76[1] = v80;
        v76[2] = v77[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v85 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v76, v77, v85);
        v86 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v76 + *(int *)(v86 + 20)) = *(uint64_t *)((char *)v77 + *(int *)(v86 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v76, 0, 1, v6);
  }
  v87 = a3[11];
  v88 = (uint64_t *)(a1 + v87);
  v89 = (uint64_t *)(a2 + v87);
  if (v41(a2 + v87, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    v91 = swift_getEnumCaseMultiPayload();
    if (v91 == 2)
    {
      v93 = *v89;
      v94 = v89[1];
      v95 = v89[2];
      v96 = *((_BYTE *)v89 + 24);
      sub_1BA690C00(v93, v94, v95, v96);
      *v88 = v93;
      v88[1] = v94;
      v40 = v184;
      v88[2] = v95;
      *((_BYTE *)v88 + 24) = v96;
    }
    else
    {
      if (v91 == 1)
      {
        v92 = v89[1];
        *v88 = *v89;
        v88[1] = v92;
        v88[2] = v89[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v97 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v88, v89, v97);
        v98 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v88 + *(int *)(v98 + 20)) = *(uint64_t *)((char *)v89 + *(int *)(v98 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v88, 0, 1, v6);
  }
  v99 = a3[12];
  v100 = (uint64_t *)(a1 + v99);
  v101 = (uint64_t *)(a2 + v99);
  if (v41(a2 + v99, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    v103 = swift_getEnumCaseMultiPayload();
    if (v103 == 2)
    {
      v105 = *v101;
      v106 = v101[1];
      v107 = v101[2];
      v108 = *((_BYTE *)v101 + 24);
      sub_1BA690C00(v105, v106, v107, v108);
      *v100 = v105;
      v100[1] = v106;
      v40 = v184;
      v100[2] = v107;
      *((_BYTE *)v100 + 24) = v108;
    }
    else
    {
      if (v103 == 1)
      {
        v104 = v101[1];
        *v100 = *v101;
        v100[1] = v104;
        v100[2] = v101[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v109 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v100, v101, v109);
        v110 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v100 + *(int *)(v110 + 20)) = *(uint64_t *)((char *)v101 + *(int *)(v110 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v100, 0, 1, v6);
  }
  v111 = a3[13];
  v112 = (uint64_t *)(a1 + v111);
  v113 = (uint64_t *)(a2 + v111);
  if (v41(a2 + v111, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
  }
  else
  {
    v115 = swift_getEnumCaseMultiPayload();
    if (v115 == 2)
    {
      v117 = *v113;
      v118 = v113[1];
      v119 = v113[2];
      v120 = *((_BYTE *)v113 + 24);
      sub_1BA690C00(v117, v118, v119, v120);
      *v112 = v117;
      v112[1] = v118;
      v40 = v184;
      v112[2] = v119;
      *((_BYTE *)v112 + 24) = v120;
    }
    else
    {
      if (v115 == 1)
      {
        v116 = v113[1];
        *v112 = *v113;
        v112[1] = v116;
        v112[2] = v113[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v121 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v112, v113, v121);
        v122 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v112 + *(int *)(v122 + 20)) = *(uint64_t *)((char *)v113 + *(int *)(v122 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v112, 0, 1, v6);
  }
  v123 = a3[14];
  v124 = (uint64_t *)(a1 + v123);
  v125 = (uint64_t *)(a2 + v123);
  if (v41(a2 + v123, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
  }
  else
  {
    v127 = swift_getEnumCaseMultiPayload();
    if (v127 == 2)
    {
      v129 = *v125;
      v130 = v125[1];
      v131 = v125[2];
      v132 = *((_BYTE *)v125 + 24);
      sub_1BA690C00(v129, v130, v131, v132);
      *v124 = v129;
      v124[1] = v130;
      v40 = v184;
      v124[2] = v131;
      *((_BYTE *)v124 + 24) = v132;
    }
    else
    {
      if (v127 == 1)
      {
        v128 = v125[1];
        *v124 = *v125;
        v124[1] = v128;
        v124[2] = v125[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v133 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(v124, v125, v133);
        v134 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v124 + *(int *)(v134 + 20)) = *(uint64_t *)((char *)v125 + *(int *)(v134 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v124, 0, 1, v6);
  }
  v135 = a3[15];
  v136 = (uint64_t *)(a1 + v135);
  v137 = (uint64_t *)(a2 + v135);
  if (v41(a2 + v135, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
  }
  else
  {
    v139 = swift_getEnumCaseMultiPayload();
    if (v139 == 2)
    {
      v141 = *v137;
      v142 = v137[1];
      v143 = v137[2];
      v144 = *((_BYTE *)v137 + 24);
      sub_1BA690C00(v141, v142, v143, v144);
      *v136 = v141;
      v136[1] = v142;
      v40 = v184;
      v136[2] = v143;
      *((_BYTE *)v136 + 24) = v144;
    }
    else
    {
      if (v139 == 1)
      {
        v140 = v137[1];
        *v136 = *v137;
        v136[1] = v140;
        v136[2] = v137[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v145 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(v136, v137, v145);
        v146 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v136 + *(int *)(v146 + 20)) = *(uint64_t *)((char *)v137 + *(int *)(v146 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v136, 0, 1, v6);
  }
  v147 = a3[16];
  v148 = (uint64_t *)(a1 + v147);
  v149 = (uint64_t *)(a2 + v147);
  if (v41(a2 + v147, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
  }
  else
  {
    v151 = swift_getEnumCaseMultiPayload();
    if (v151 == 2)
    {
      v153 = *v149;
      v154 = v149[1];
      v155 = v149[2];
      v156 = *((_BYTE *)v149 + 24);
      sub_1BA690C00(v153, v154, v155, v156);
      *v148 = v153;
      v148[1] = v154;
      v40 = v184;
      v148[2] = v155;
      *((_BYTE *)v148 + 24) = v156;
    }
    else
    {
      if (v151 == 1)
      {
        v152 = v149[1];
        *v148 = *v149;
        v148[1] = v152;
        v148[2] = v149[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v157 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v148, v149, v157);
        v158 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v148 + *(int *)(v158 + 20)) = *(uint64_t *)((char *)v149 + *(int *)(v158 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v148, 0, 1, v6);
  }
  v159 = a3[17];
  v160 = (uint64_t *)(a1 + v159);
  v161 = (uint64_t *)(a2 + v159);
  if (v41(a2 + v159, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
  }
  else
  {
    v163 = swift_getEnumCaseMultiPayload();
    if (v163 == 2)
    {
      v165 = *v161;
      v166 = v161[1];
      v167 = v161[2];
      v168 = *((_BYTE *)v161 + 24);
      sub_1BA690C00(v165, v166, v167, v168);
      *v160 = v165;
      v160[1] = v166;
      v40 = v184;
      v160[2] = v167;
      *((_BYTE *)v160 + 24) = v168;
    }
    else
    {
      if (v163 == 1)
      {
        v164 = v161[1];
        *v160 = *v161;
        v160[1] = v164;
        v160[2] = v161[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v169 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v160, v161, v169);
        v170 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v160 + *(int *)(v170 + 20)) = *(uint64_t *)((char *)v161 + *(int *)(v170 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v160, 0, 1, v6);
  }
  v171 = a3[18];
  v172 = (uint64_t *)(a1 + v171);
  v173 = (uint64_t *)(a2 + v171);
  if (v41((uint64_t)v173, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
  }
  else
  {
    v175 = swift_getEnumCaseMultiPayload();
    if (v175 == 2)
    {
      v177 = *v173;
      v178 = v173[1];
      v179 = v173[2];
      v180 = *((_BYTE *)v173 + 24);
      sub_1BA690C00(v177, v178, v179, v180);
      *v172 = v177;
      v172[1] = v178;
      v172[2] = v179;
      *((_BYTE *)v172 + 24) = v180;
    }
    else
    {
      if (v175 == 1)
      {
        v176 = v173[1];
        *v172 = *v173;
        v172[1] = v176;
        v172[2] = v173[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v181 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v172, v173, v181);
        v182 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v172 + *(int *)(v182 + 20)) = *(uint64_t *)((char *)v173 + *(int *)(v182 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v172, 0, 1, v6);
  }
  return a1;
}

uint64_t initializeWithCopy for FormatResource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t *v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t *v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t *v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t *v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t *v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t *v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t *v170;
  uint64_t v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t *v182;
  uint64_t v183;
  int v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t *v194;
  uint64_t v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  uint64_t v202;
  uint64_t v203;

  v3 = a1;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for FormatURL();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v20 = *(_QWORD *)a2;
      v21 = *(_QWORD *)(a2 + 8);
      v22 = *(_QWORD *)(a2 + 16);
      v23 = *(_BYTE *)(a2 + 24);
      sub_1BA690C00(*(_QWORD *)a2, v21, v22, v23);
      *(_QWORD *)v3 = v20;
      *(_QWORD *)(v3 + 8) = v21;
      *(_QWORD *)(v3 + 16) = v22;
      *(_BYTE *)(v3 + 24) = v23;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v6 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)v3 = *(_QWORD *)a2;
        *(_QWORD *)(v3 + 8) = v6;
        *(_QWORD *)(v3 + 16) = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v24 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v3, a2, v24);
        v25 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v3 + *(int *)(v25 + 20)) = *(_QWORD *)(a2 + *(int *)(v25 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v26 = (int *)type metadata accessor for FormatRemoteImage();
    v27 = v26[5];
    v28 = v3 + v27;
    v29 = a2 + v27;
    v30 = swift_getEnumCaseMultiPayload();
    if (v30 == 2)
    {
      v32 = *(_QWORD *)v29;
      v33 = *(_QWORD *)(v29 + 8);
      v34 = *(_QWORD *)(v29 + 16);
      v35 = *(_BYTE *)(v29 + 24);
      sub_1BA690C00(v32, v33, v34, v35);
      *(_QWORD *)v28 = v32;
      *(_QWORD *)(v28 + 8) = v33;
      *(_QWORD *)(v28 + 16) = v34;
      v3 = a1;
      *(_BYTE *)(v28 + 24) = v35;
    }
    else
    {
      if (v30 == 1)
      {
        v31 = *(_QWORD *)(v29 + 8);
        *(_QWORD *)v28 = *(_QWORD *)v29;
        *(_QWORD *)(v28 + 8) = v31;
        *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v36 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v28, v29, v36);
        v37 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v28 + *(int *)(v37 + 20)) = *(_QWORD *)(v29 + *(int *)(v37 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v38 = v26[6];
    v39 = v3 + v38;
    v40 = a2 + v38;
    v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 2)
    {
      v43 = *(_QWORD *)v40;
      v44 = *(_QWORD *)(v40 + 8);
      v45 = *(_QWORD *)(v40 + 16);
      v46 = *(_BYTE *)(v40 + 24);
      sub_1BA690C00(v43, v44, v45, v46);
      *(_QWORD *)v39 = v43;
      *(_QWORD *)(v39 + 8) = v44;
      *(_QWORD *)(v39 + 16) = v45;
      v3 = a1;
      *(_BYTE *)(v39 + 24) = v46;
    }
    else
    {
      if (v41 == 1)
      {
        v42 = *(_QWORD *)(v40 + 8);
        *(_QWORD *)v39 = *(_QWORD *)v40;
        *(_QWORD *)(v39 + 8) = v42;
        *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v47 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v39, v40, v47);
        v48 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v39 + *(int *)(v48 + 20)) = *(_QWORD *)(v40 + *(int *)(v48 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v49 = v26[7];
    v50 = (uint64_t *)(v3 + v49);
    v51 = (uint64_t *)(a2 + v49);
    v52 = *(_QWORD *)(v4 - 8);
    v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
    if (v53(a2 + v49, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      v55 = swift_getEnumCaseMultiPayload();
      if (v55 == 2)
      {
        v66 = *v51;
        v67 = v51[1];
        v68 = v51[2];
        v69 = *((_BYTE *)v51 + 24);
        sub_1BA690C00(v66, v67, v68, v69);
        *v50 = v66;
        v50[1] = v67;
        v50[2] = v68;
        v3 = a1;
        *((_BYTE *)v50 + 24) = v69;
      }
      else
      {
        if (v55 == 1)
        {
          v56 = v51[1];
          *v50 = *v51;
          v50[1] = v56;
          v50[2] = v51[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v70 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v50, v51, v70);
          v71 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v50 + *(int *)(v71 + 20)) = *(uint64_t *)((char *)v51 + *(int *)(v71 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v50, 0, 1, v4);
    }
    v72 = v26[8];
    v73 = (uint64_t *)(v3 + v72);
    v74 = (uint64_t *)(a2 + v72);
    if (v53(a2 + v72, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      v76 = swift_getEnumCaseMultiPayload();
      if (v76 == 2)
      {
        v78 = *v74;
        v79 = v74[1];
        v80 = v74[2];
        v81 = *((_BYTE *)v74 + 24);
        sub_1BA690C00(v78, v79, v80, v81);
        *v73 = v78;
        v73[1] = v79;
        v73[2] = v80;
        v3 = a1;
        *((_BYTE *)v73 + 24) = v81;
      }
      else
      {
        if (v76 == 1)
        {
          v77 = v74[1];
          *v73 = *v74;
          v73[1] = v77;
          v73[2] = v74[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v82 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v73, v74, v82);
          v83 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v73 + *(int *)(v83 + 20)) = *(uint64_t *)((char *)v74 + *(int *)(v83 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v73, 0, 1, v4);
    }
    v84 = v26[9];
    v85 = (uint64_t *)(v3 + v84);
    v86 = (uint64_t *)(a2 + v84);
    if (v53(a2 + v84, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      v88 = swift_getEnumCaseMultiPayload();
      if (v88 == 2)
      {
        v90 = *v86;
        v91 = v86[1];
        v92 = v86[2];
        v93 = *((_BYTE *)v86 + 24);
        sub_1BA690C00(v90, v91, v92, v93);
        *v85 = v90;
        v85[1] = v91;
        v85[2] = v92;
        v3 = a1;
        *((_BYTE *)v85 + 24) = v93;
      }
      else
      {
        if (v88 == 1)
        {
          v89 = v86[1];
          *v85 = *v86;
          v85[1] = v89;
          v85[2] = v86[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v94 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v85, v86, v94);
          v95 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v85 + *(int *)(v95 + 20)) = *(uint64_t *)((char *)v86 + *(int *)(v95 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v85, 0, 1, v4);
    }
    v96 = v26[10];
    v97 = (uint64_t *)(v3 + v96);
    v98 = (uint64_t *)(a2 + v96);
    if (v53(a2 + v96, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    else
    {
      v100 = swift_getEnumCaseMultiPayload();
      if (v100 == 2)
      {
        v102 = *v98;
        v103 = v98[1];
        v104 = v98[2];
        v105 = *((_BYTE *)v98 + 24);
        sub_1BA690C00(v102, v103, v104, v105);
        *v97 = v102;
        v97[1] = v103;
        v97[2] = v104;
        v3 = a1;
        *((_BYTE *)v97 + 24) = v105;
      }
      else
      {
        if (v100 == 1)
        {
          v101 = v98[1];
          *v97 = *v98;
          v97[1] = v101;
          v97[2] = v98[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v106 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v97, v98, v106);
          v107 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v97 + *(int *)(v107 + 20)) = *(uint64_t *)((char *)v98 + *(int *)(v107 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v97, 0, 1, v4);
    }
    v108 = v26[11];
    v109 = (uint64_t *)(v3 + v108);
    v110 = (uint64_t *)(a2 + v108);
    if (v53(a2 + v108, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    }
    else
    {
      v112 = swift_getEnumCaseMultiPayload();
      if (v112 == 2)
      {
        v114 = *v110;
        v115 = v110[1];
        v116 = v110[2];
        v117 = *((_BYTE *)v110 + 24);
        sub_1BA690C00(v114, v115, v116, v117);
        *v109 = v114;
        v109[1] = v115;
        v109[2] = v116;
        v3 = a1;
        *((_BYTE *)v109 + 24) = v117;
      }
      else
      {
        if (v112 == 1)
        {
          v113 = v110[1];
          *v109 = *v110;
          v109[1] = v113;
          v109[2] = v110[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v118 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v109, v110, v118);
          v119 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v109 + *(int *)(v119 + 20)) = *(uint64_t *)((char *)v110 + *(int *)(v119 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v109, 0, 1, v4);
    }
    v120 = v26[12];
    v121 = (uint64_t *)(v3 + v120);
    v122 = (uint64_t *)(a2 + v120);
    if (v53(a2 + v120, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
    }
    else
    {
      v124 = swift_getEnumCaseMultiPayload();
      if (v124 == 2)
      {
        v126 = *v122;
        v127 = v122[1];
        v128 = v122[2];
        v129 = *((_BYTE *)v122 + 24);
        sub_1BA690C00(v126, v127, v128, v129);
        *v121 = v126;
        v121[1] = v127;
        v121[2] = v128;
        v3 = a1;
        *((_BYTE *)v121 + 24) = v129;
      }
      else
      {
        if (v124 == 1)
        {
          v125 = v122[1];
          *v121 = *v122;
          v121[1] = v125;
          v121[2] = v122[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v130 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v121, v122, v130);
          v131 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v121 + *(int *)(v131 + 20)) = *(uint64_t *)((char *)v122 + *(int *)(v131 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v121, 0, 1, v4);
    }
    v132 = v26[13];
    v133 = (uint64_t *)(v3 + v132);
    v134 = (uint64_t *)(a2 + v132);
    if (v53(a2 + v132, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
    }
    else
    {
      v136 = swift_getEnumCaseMultiPayload();
      if (v136 == 2)
      {
        v138 = *v134;
        v139 = v134[1];
        v140 = v134[2];
        v141 = *((_BYTE *)v134 + 24);
        sub_1BA690C00(v138, v139, v140, v141);
        *v133 = v138;
        v133[1] = v139;
        v133[2] = v140;
        v3 = a1;
        *((_BYTE *)v133 + 24) = v141;
      }
      else
      {
        if (v136 == 1)
        {
          v137 = v134[1];
          *v133 = *v134;
          v133[1] = v137;
          v133[2] = v134[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v142 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v133, v134, v142);
          v143 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v133 + *(int *)(v143 + 20)) = *(uint64_t *)((char *)v134 + *(int *)(v143 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v133, 0, 1, v4);
    }
    v144 = v26[14];
    v145 = (uint64_t *)(v3 + v144);
    v146 = (uint64_t *)(a2 + v144);
    if (v53(a2 + v144, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
    }
    else
    {
      v148 = swift_getEnumCaseMultiPayload();
      if (v148 == 2)
      {
        v150 = *v146;
        v151 = v146[1];
        v152 = v146[2];
        v153 = *((_BYTE *)v146 + 24);
        sub_1BA690C00(v150, v151, v152, v153);
        *v145 = v150;
        v145[1] = v151;
        v145[2] = v152;
        v3 = a1;
        *((_BYTE *)v145 + 24) = v153;
      }
      else
      {
        if (v148 == 1)
        {
          v149 = v146[1];
          *v145 = *v146;
          v145[1] = v149;
          v145[2] = v146[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v154 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v145, v146, v154);
          v155 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v145 + *(int *)(v155 + 20)) = *(uint64_t *)((char *)v146 + *(int *)(v155 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v145, 0, 1, v4);
    }
    v156 = v26[15];
    v157 = (uint64_t *)(v3 + v156);
    v158 = (uint64_t *)(a2 + v156);
    if (v53(a2 + v156, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
    }
    else
    {
      v160 = swift_getEnumCaseMultiPayload();
      if (v160 == 2)
      {
        v162 = *v158;
        v163 = v158[1];
        v164 = v158[2];
        v165 = *((_BYTE *)v158 + 24);
        sub_1BA690C00(v162, v163, v164, v165);
        *v157 = v162;
        v157[1] = v163;
        v157[2] = v164;
        v3 = a1;
        *((_BYTE *)v157 + 24) = v165;
      }
      else
      {
        if (v160 == 1)
        {
          v161 = v158[1];
          *v157 = *v158;
          v157[1] = v161;
          v157[2] = v158[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v166 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v157, v158, v166);
          v167 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v157 + *(int *)(v167 + 20)) = *(uint64_t *)((char *)v158 + *(int *)(v167 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v157, 0, 1, v4);
    }
    v168 = v26[16];
    v169 = (uint64_t *)(v3 + v168);
    v170 = (uint64_t *)(a2 + v168);
    if (v53(a2 + v168, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v169, v170, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
    }
    else
    {
      v172 = swift_getEnumCaseMultiPayload();
      if (v172 == 2)
      {
        v174 = *v170;
        v175 = v170[1];
        v176 = v170[2];
        v177 = *((_BYTE *)v170 + 24);
        sub_1BA690C00(v174, v175, v176, v177);
        *v169 = v174;
        v169[1] = v175;
        v169[2] = v176;
        v3 = a1;
        *((_BYTE *)v169 + 24) = v177;
      }
      else
      {
        if (v172 == 1)
        {
          v173 = v170[1];
          *v169 = *v170;
          v169[1] = v173;
          v169[2] = v170[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v178 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v169, v170, v178);
          v179 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v169 + *(int *)(v179 + 20)) = *(uint64_t *)((char *)v170 + *(int *)(v179 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v169, 0, 1, v4);
    }
    v180 = v26[17];
    v181 = (uint64_t *)(v3 + v180);
    v182 = (uint64_t *)(a2 + v180);
    if (v53(a2 + v180, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
    }
    else
    {
      v184 = swift_getEnumCaseMultiPayload();
      if (v184 == 2)
      {
        v186 = *v182;
        v187 = v182[1];
        v188 = v182[2];
        v189 = *((_BYTE *)v182 + 24);
        sub_1BA690C00(v186, v187, v188, v189);
        *v181 = v186;
        v181[1] = v187;
        v181[2] = v188;
        v3 = a1;
        *((_BYTE *)v181 + 24) = v189;
      }
      else
      {
        if (v184 == 1)
        {
          v185 = v182[1];
          *v181 = *v182;
          v181[1] = v185;
          v181[2] = v182[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v190 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v181, v182, v190);
          v191 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v181 + *(int *)(v191 + 20)) = *(uint64_t *)((char *)v182 + *(int *)(v191 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v181, 0, 1, v4);
    }
    v192 = v26[18];
    v193 = (uint64_t *)(v3 + v192);
    v194 = (uint64_t *)(a2 + v192);
    if (v53((uint64_t)v194, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
    }
    else
    {
      v196 = swift_getEnumCaseMultiPayload();
      if (v196 == 2)
      {
        v198 = *v194;
        v199 = v194[1];
        v200 = v194[2];
        v201 = *((_BYTE *)v194 + 24);
        sub_1BA690C00(v198, v199, v200, v201);
        *v193 = v198;
        v193[1] = v199;
        v193[2] = v200;
        *((_BYTE *)v193 + 24) = v201;
      }
      else
      {
        if (v196 == 1)
        {
          v197 = v194[1];
          *v193 = *v194;
          v193[1] = v197;
          v193[2] = v194[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v202 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v202 - 8) + 16))(v193, v194, v202);
          v203 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v193 + *(int *)(v203 + 20)) = *(uint64_t *)((char *)v194 + *(int *)(v203 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v193, 0, 1, v4);
    }
  }
  else
  {
    type metadata accessor for FormatFontResource(0);
    v7 = swift_getEnumCaseMultiPayload();
    v8 = *(_QWORD *)a2;
    if (v7 == 1)
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(_QWORD *)(a2 + 16);
      v11 = *(_BYTE *)(a2 + 24);
      sub_1BA745F88(v8, v9, v10, v11);
      *(_QWORD *)v3 = v8;
      *(_QWORD *)(v3 + 8) = v9;
      *(_QWORD *)(v3 + 16) = v10;
      *(_BYTE *)(v3 + 24) = v11;
    }
    else
    {
      v12 = (uint64_t *)v3;
      v13 = *(_QWORD *)(a2 + 8);
      *v12 = v8;
      v12[1] = v13;
      v14 = (int *)type metadata accessor for FormatRemoteFont();
      v15 = v14[5];
      v16 = (char *)v12 + v15;
      v17 = a2 + v15;
      type metadata accessor for FormatURL();
      swift_bridgeObjectRetain();
      v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 2)
      {
        v58 = *(_QWORD *)v17;
        v57 = *(_QWORD *)(v17 + 8);
        v59 = *(_QWORD *)(v17 + 16);
        v60 = *(_BYTE *)(v17 + 24);
        sub_1BA690C00(v58, v57, v59, v60);
        *(_QWORD *)v16 = v58;
        *((_QWORD *)v16 + 1) = v57;
        *((_QWORD *)v16 + 2) = v59;
        v16[24] = v60;
      }
      else
      {
        if (v18 == 1)
        {
          v19 = *(_QWORD *)(v17 + 8);
          *(_QWORD *)v16 = *(_QWORD *)v17;
          *((_QWORD *)v16 + 1) = v19;
          *((_QWORD *)v16 + 2) = *(_QWORD *)(v17 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v61 = sub_1BB86C67C();
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v16, v17, v61);
          v62 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v16[*(int *)(v62 + 20)] = *(_QWORD *)(v17 + *(int *)(v62 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      v3 = a1;
      *(_QWORD *)(a1 + v14[6]) = *(_QWORD *)(a2 + v14[6]);
      v63 = v14[7];
      v64 = a1 + v63;
      v65 = a2 + v63;
      *(_QWORD *)v64 = *(_QWORD *)v65;
      *(_WORD *)(v64 + 8) = *(_WORD *)(v65 + 8);
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return v3;
}

uint64_t sub_1BA690C00(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (!a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA690C34(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF44E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA690DC0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA68E3E0(0);
    sub_1BA4A2870(&qword_1ED3A90D0, (uint64_t (*)(uint64_t))sub_1BA68E3E0, (uint64_t)&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>);
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA690DC0()
{
  unint64_t result;

  result = qword_1ED3A6DB8;
  if (!qword_1ED3A6DB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7D78, &_s10CodingTypeON_110);
    atomic_store(result, (unint64_t *)&qword_1ED3A6DB8);
  }
  return result;
}

unint64_t sub_1BA690E04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAE80;
  if (!qword_1ED3AAE80)
  {
    sub_1BA4AD288(255, &qword_1ED3AAE78, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82DD4C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAE80);
  }
  return result;
}

unint64_t sub_1BA690E7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CD648;
  if (!qword_1ED3CD648)
  {
    sub_1BA50CAA8(255, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CD648);
  }
  return result;
}

uint64_t sub_1BA690EE4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF44E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA690DC0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1BA691078();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA691078()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A90F0;
  if (!qword_1ED3A90F0)
  {
    sub_1BA50CAA8(255, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A90F0);
  }
  return result;
}

uint64_t sub_1BA6910E0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF44E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA690DC0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1BA6912DC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA691274()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CD658;
  if (!qword_1ED3CD658)
  {
    sub_1BA50CAA8(255, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CD658);
  }
  return result;
}

unint64_t sub_1BA6912DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A90F8;
  if (!qword_1ED3A90F8)
  {
    sub_1BA50CAA8(255, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A90F8);
  }
  return result;
}

uint64_t sub_1BA691344(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  char v82;
  char v83;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v71 - v7;
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)&v71 - v9;
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v71 - v11;
  MEMORY[0x1E0C80A78](v12);
  v76 = (char *)&v71 - v13;
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v71 - v15;
  MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v71 - v17;
  MEMORY[0x1E0C80A78](v18);
  v79 = (char *)&v71 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  sub_1BAEE5150(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v29 = v28;
  v30 = sub_1BAEE5240();
  v31 = sub_1BA4A2870(&qword_1ED3D13E0, (uint64_t (*)(uint64_t))sub_1BAEE5240, (uint64_t)&unk_1BB8FFC6C);
  v71 = v29;
  sub_1BA6EC1EC(v29, v32, v26, v29, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v31, (uint64_t)&off_1E734BD80);
  v33 = *v2;
  v34 = v2[1];
  v35 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v22, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v80;
  sub_1BAD13B7C(v33, v34, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v35[2];
    v43 = v35[3];
    v44 = v38;
    v45 = (uint64_t)v79;
    v80 = v44;
    ((void (*)(char *))v39)(v79);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD13B7C(v42, v43, 1, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = v35[4];
    v48 = v35[5];
    v49 = v39;
    v50 = v25;
    v51 = (uint64_t)v78;
    v52 = v49;
    v49(v78, v80, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD13B7C(v47, v48, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v35[6];
    v54 = v35[7];
    v55 = (char *)v40;
    v56 = (uint64_t)v77;
    v52(v77, v80, v37);
    v79 = v55;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD13B7C(v53, v54, 3, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v25 = v50;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v53) = *((_BYTE *)v35 + 64);
    v57 = (uint64_t)v76;
    v52(v76, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD13CD4(v53, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v75;
    v52(v75, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD45D64(*((_BYTE *)v35 + 65), 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v59 = v52;
    v80 = 0;
    v60 = *((unsigned __int8 *)v35 + 66);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
    v62 = (uint64_t)v74;
    v52(v74, v61, v37);
    swift_storeEnumTagMultiPayload();
    if (v60)
    {
      v63 = v80;
      v64 = sub_1BAE4775C(v62, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v63)
      {
LABEL_11:
        sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE5150);
      }
      v80 = 0;
      if ((v64 & 1) != 0)
      {
        v81 = xmmword_1BB8D2DA0;
        v82 = 0;
        v83 = 1;
        sub_1BAEE51C8();
        sub_1BA4A2870(&qword_1ED3AF0E8, (uint64_t (*)(uint64_t))sub_1BAEE51C8, MEMORY[0x1E0DED188]);
        v65 = v80;
        sub_1BB874464();
        if (v65)
          goto LABEL_11;
        v80 = 0;
      }
    }
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    v66 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v66 != -1)
      swift_once();
    v67 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476BD8);
    v68 = (uint64_t)v72;
    v59(v72, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v69 = (uint64_t)v35 + *(int *)(v71 + 64);
    v70 = (uint64_t)v73;
    v59(v73, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD45F2C(v69, 8, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE5150);
}

_QWORD *initializeWithCopy for FormatSlotItemCountLimit(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  char *__dst;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    a1[8] = a2[8];
    v10 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    v12 = sub_1BB86E710();
    v13 = *(_QWORD *)(v12 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v11, 1, v12))
    {
      sub_1BA74E57C();
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1BA691D08(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF44E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA690DC0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatCompilerEnumProperty(0);
    sub_1BA4A2870(&qword_1ED3A04A8, type metadata accessor for FormatCompilerEnumProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerEnumProperty);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t destroy for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 56);
  v5 = sub_1BB86E710();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1BA691F48@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA691F70(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA691F70(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  char v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  _QWORD *v72;
  __int128 v73;
  char v74;
  __int128 v75;
  char v76;

  sub_1BA69292C();
  v71 = v2;
  v64 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v66 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA692844();
  *(_QWORD *)&v70 = v4;
  v65 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  *(_QWORD *)&v68 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEEBE84();
  v69 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEBB398();
  sub_1BA4A2870(&qword_1ED3D0CC0, (uint64_t (*)(uint64_t))sub_1BAEBB398, (uint64_t)&unk_1BB8FFC6C);
  v15 = (uint64_t)v72;
  sub_1BB87468C();
  v16 = (void *)v15;
  if (v15)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v62 = v9;
  v61 = v7;
  v17 = v68;
  v63 = v11;
  v18 = a1[3];
  v72 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v19 = sub_1BB872874();
  LOBYTE(v18) = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  v20 = (uint64_t)v13;
  v21 = v71;
  v23 = v69;
  v22 = v70;
  if ((v18 & 1) != 0)
  {
    v24 = sub_1BB8740EC();
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v26 = (_BYTE *)(v24 + 48);
      while (*v26 != 1)
      {
        v26 += 24;
        if (!--v25)
          goto LABEL_7;
      }
      v32 = *((_QWORD *)v26 - 2);
      v31 = *((_QWORD *)v26 - 1);
      swift_bridgeObjectRetain_n();
      v33 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v33);
      sub_1BAEBB418();
      sub_1BA6928E8();
      sub_1BAEBB45C();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v34 = sub_1BAE71220((uint64_t)&unk_1E7251370);
      swift_release_n();
      sub_1BA98D1F0();
      v16 = (void *)swift_allocError();
      *(_QWORD *)v35 = v32;
      *(_QWORD *)(v35 + 8) = v31;
      *(_QWORD *)(v35 + 16) = v34;
      *(_OWORD *)(v35 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v32, v31, 1);
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v20, v23);
      a1 = v72;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v27 = sub_1BAE0F8F8(v20, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEEBE84);
  v29 = v28;
  v60 = v27;
  v75 = xmmword_1BB8A1A10;
  v76 = 0;
  v30 = sub_1BB874098();
  v37 = v36;
  v59 = v30;
  v75 = xmmword_1BB8D2D60;
  v76 = 0;
  v56 = sub_1BB87402C();
  v57 = v37;
  v58 = v39;
  v75 = xmmword_1BB8D2D70;
  v76 = 0;
  v40 = sub_1BB87402C();
  v55 = v41;
  v54 = xmmword_1BB8D2D90;
  v75 = xmmword_1BB8D2D90;
  v76 = 0;
  v42 = sub_1BB8740F8();
  if ((v42 & 1) != 0)
  {
    v53 = v40;
    v73 = v54;
    v74 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v43 = v62;
    *(_QWORD *)&v54 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v17);
    v40 = v53;
  }
  else
  {
    *(_QWORD *)&v54 = MEMORY[0x1E0DEE9E8];
  }
  v68 = xmmword_1BB8D2D80;
  v75 = xmmword_1BB8D2D80;
  v76 = 0;
  v44 = sub_1BB8740F8();
  v45 = v63;
  if ((v44 & 1) != 0)
  {
    v53 = v40;
    v73 = v68;
    v74 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v46 = v67;
    sub_1BB8740D4();
    v47 = sub_1BB86DD08();
    v48 = v22;
    v49 = v47;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v48);
    v40 = v53;
  }
  else
  {
    v49 = MEMORY[0x1E0DEE9D8];
  }
  v70 = xmmword_1BB8D2DA0;
  v75 = xmmword_1BB8D2DA0;
  v76 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    *(_QWORD *)&v68 = v29;
    v73 = v70;
    v74 = 0;
    sub_1BA4A2870(&qword_1ED3BBE58, (uint64_t (*)(uint64_t))sub_1BA69292C, MEMORY[0x1E0DB3610]);
    v50 = v66;
    sub_1BB8740D4();
    v51 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v50, v21);
    v29 = v68;
    v45 = v63;
  }
  else
  {
    v51 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for FormatSnippetNode();
  swift_allocObject();
  KeyPath = FormatSnippetNode.init(identifier:snippetIdentifier:name:description:selectors:options:blocks:)(v60, v29, v59, v57, v56, v58, v40, v55, v54, v49, v51);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v20, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  return KeyPath;
}

void sub_1BA6927D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBE28)
  {
    v0 = sub_1BB86DD14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBE28);
  }
}

void sub_1BA692844()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBE70)
  {
    type metadata accessor for FormatOption();
    sub_1BA4A2870(&qword_1ED3B37E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
    sub_1BA4A2870(&qword_1ED3AFE80, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBE70);
  }
}

unint64_t sub_1BA6928E8()
{
  unint64_t result;

  result = qword_1ED3C79B8;
  if (!qword_1ED3C79B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6748, &_s10CodingKeysON_48);
    atomic_store(result, (unint64_t *)&qword_1ED3C79B8);
  }
  return result;
}

void sub_1BA69292C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBE60)
  {
    type metadata accessor for FormatBlock();
    sub_1BA4A2870(&qword_1ED3BCBE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, (uint64_t)&protocol conformance descriptor for FormatBlock);
    sub_1BA4A2870(&qword_1ED3BCBD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, (uint64_t)&protocol conformance descriptor for FormatBlock);
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBE60);
  }
}

uint64_t FormatSnippetNode.init(identifier:snippetIdentifier:name:description:selectors:options:blocks:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  *(_OWORD *)(v11 + 64) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v11 + 48) = a5;
  *(_QWORD *)(v11 + 56) = a6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v11 + 64) = a7;
  *(_QWORD *)(v11 + 72) = a8;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v11 + 80) = a9;
  swift_beginAccess();
  *(_QWORD *)(v11 + 88) = a10;
  swift_beginAccess();
  *(_QWORD *)(v11 + 96) = a11;
  return v11;
}

uint64_t sub_1BA692B1C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_1BA692C24(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void sub_1BA692DF8(_QWORD *a1)
{
  FormatSourceMapNode.encode(to:)(a1);
}

void FormatSourceMapNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;

  sub_1BA4CDF6C(0, &qword_1ED3A31B0, (uint64_t (*)(void))sub_1BA6B5EAC, (uint64_t)&type metadata for FormatSourceMapNode.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v16 - v7;
  v8 = v1[1];
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v22 = *v1;
  FormatNode.encode(to:)(a1);
  if (!v2)
  {
    v20 = v5;
    v21 = v6;
    v16 = v8;
    v17 = v11;
    v18 = v10;
    v19 = v9;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA6B5EAC();
    v12 = v26;
    sub_1BB8746C8();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v13 = sub_1BB872874();
    v14 = Dictionary<>.allowSourceMaps.getter(v13);
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
      v22 = v16;
      v23 = v19;
      v24 = v18;
      v25 = v17;
      sub_1BB3DB36C();
      v15 = v20;
      sub_1BB87414C();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v15);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v20);
    }
  }
}

void FormatNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  _QWORD v88[52];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v88[35] = (char *)v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v88[34] = (char *)v88 - v6;
  MEMORY[0x1E0C80A78](v7);
  v88[36] = (char *)v88 - v8;
  MEMORY[0x1E0C80A78](v9);
  v88[33] = (char *)v88 - v10;
  MEMORY[0x1E0C80A78](v11);
  v88[32] = (char *)v88 - v12;
  MEMORY[0x1E0C80A78](v13);
  v88[31] = (char *)v88 - v14;
  MEMORY[0x1E0C80A78](v15);
  v88[30] = (char *)v88 - v16;
  MEMORY[0x1E0C80A78](v17);
  v88[29] = (char *)v88 - v18;
  MEMORY[0x1E0C80A78](v19);
  v88[28] = (char *)v88 - v20;
  MEMORY[0x1E0C80A78](v21);
  v88[27] = (char *)v88 - v22;
  MEMORY[0x1E0C80A78](v23);
  v88[25] = (char *)v88 - v24;
  MEMORY[0x1E0C80A78](v25);
  v88[26] = (char *)v88 - v26;
  MEMORY[0x1E0C80A78](v27);
  v88[24] = (char *)v88 - v28;
  MEMORY[0x1E0C80A78](v29);
  v88[23] = (char *)v88 - v30;
  MEMORY[0x1E0C80A78](v31);
  v88[22] = (char *)v88 - v32;
  MEMORY[0x1E0C80A78](v33);
  v88[21] = (char *)v88 - v34;
  MEMORY[0x1E0C80A78](v35);
  v88[20] = (char *)v88 - v36;
  MEMORY[0x1E0C80A78](v37);
  v88[19] = (char *)v88 - v38;
  MEMORY[0x1E0C80A78](v39);
  v88[18] = (char *)v88 - v40;
  MEMORY[0x1E0C80A78](v41);
  v88[17] = (char *)v88 - v42;
  MEMORY[0x1E0C80A78](v43);
  v88[16] = (char *)v88 - v44;
  MEMORY[0x1E0C80A78](v45);
  v88[15] = (char *)v88 - v46;
  MEMORY[0x1E0C80A78](v47);
  v88[14] = (char *)v88 - v48;
  MEMORY[0x1E0C80A78](v49);
  v88[13] = (char *)v88 - v50;
  MEMORY[0x1E0C80A78](v51);
  v88[12] = (char *)v88 - v52;
  MEMORY[0x1E0C80A78](v53);
  v88[11] = (char *)v88 - v54;
  MEMORY[0x1E0C80A78](v55);
  v88[10] = (char *)v88 - v56;
  MEMORY[0x1E0C80A78](v57);
  v88[9] = (char *)v88 - v58;
  MEMORY[0x1E0C80A78](v59);
  v88[8] = (char *)v88 - v60;
  MEMORY[0x1E0C80A78](v61);
  v88[7] = (char *)v88 - v62;
  MEMORY[0x1E0C80A78](v63);
  v88[6] = (char *)v88 - v64;
  MEMORY[0x1E0C80A78](v65);
  v88[5] = (char *)v88 - v66;
  MEMORY[0x1E0C80A78](v67);
  v88[4] = (char *)v88 - v68;
  MEMORY[0x1E0C80A78](v69);
  v88[3] = (char *)v88 - v70;
  MEMORY[0x1E0C80A78](v71);
  v88[2] = (char *)v88 - v72;
  MEMORY[0x1E0C80A78](v73);
  v88[1] = (char *)v88 - v74;
  MEMORY[0x1E0C80A78](v75);
  MEMORY[0x1E0C80A78](v76);
  MEMORY[0x1E0C80A78](v77);
  MEMORY[0x1E0C80A78](v78);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v79);
  v81 = (char *)v88 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = *v1;
  v83 = a1;
  v84 = a1[3];
  v85 = v83[4];
  __swift_project_boxed_opaque_existential_1(v83, v84);
  v86 = sub_1BA6B8518();
  v88[51] = v81;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatNode, v87, v84, (uint64_t)&type metadata for FormatNode, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v85, (uint64_t)v81, v86, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA693618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = qword_1ED3C2478;
  swift_retain();
  v5 = *(_QWORD *)(v2 - 72);
  if (v4 != -1)
    swift_once();
  v6 = sub_1BB86EB84();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v0, v7, v6);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA695AFC(0, v3, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v5, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return swift_release();
}

uint64_t Dictionary<>.allowSourceMaps.getter(uint64_t a1)
{
  return sub_1BA6ED778(a1);
}

uint64_t sub_1BA6951A0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatSnippetNode();
    sub_1BA4A2870(&qword_1ED39FCB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippetNode, (uint64_t)&protocol conformance descriptor for FormatSnippetNode);
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA695324()
{
  unint64_t result;

  result = qword_1ED3A53B0;
  if (!qword_1ED3A53B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCCC8, &_s10CodingTypeON_57);
    atomic_store(result, (unint64_t *)&qword_1ED3A53B0);
  }
  return result;
}

uint64_t sub_1BA695368(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatSwitchNode();
    sub_1BA4A2870(&qword_1ED39FC80, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNode, (uint64_t)&protocol conformance descriptor for FormatSwitchNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA6954EC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatSpaceNode();
    sub_1BA4A2870(&qword_1ED39FA88, (uint64_t (*)(uint64_t))type metadata accessor for FormatSpaceNode, (uint64_t)&protocol conformance descriptor for FormatSpaceNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA695670(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatVBoxNode();
    sub_1BA4A2870(&qword_1ED39F948, (uint64_t (*)(uint64_t))type metadata accessor for FormatVBoxNode, (uint64_t)&protocol conformance descriptor for FormatVBoxNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA6957F4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatAccessibilityNode();
    sub_1BA4A2870(&qword_1ED3A0220, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityNode, (uint64_t)&protocol conformance descriptor for FormatAccessibilityNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA695978(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatTextNode();
    sub_1BA4A2870(&qword_1ED39F940, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNode, (uint64_t)&protocol conformance descriptor for FormatTextNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA695AFC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatHBoxNode();
    sub_1BA4A2870(&qword_1ED39F920, (uint64_t (*)(uint64_t))type metadata accessor for FormatHBoxNode, (uint64_t)&protocol conformance descriptor for FormatHBoxNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA695C80(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatVOverlayNode();
    sub_1BA4A2870(&qword_1ED3A62F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatVOverlayNode, (uint64_t)&protocol conformance descriptor for FormatVOverlayNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA695E04(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatImageNode();
    sub_1BA4A2870(&qword_1ED39FA40, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNode, (uint64_t)&protocol conformance descriptor for FormatImageNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA695F88(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatSlotNode();
    sub_1BA4A2870(&qword_1ED39F938, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotNode, (uint64_t)&protocol conformance descriptor for FormatSlotNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA69610C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatFrameNode();
    sub_1BA4A2870(&qword_1ED39FA30, (uint64_t (*)(uint64_t))type metadata accessor for FormatFrameNode, (uint64_t)&protocol conformance descriptor for FormatFrameNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA696290(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatAdMetricsNode();
    sub_1BA4A2870(&qword_1ED39FE58, (uint64_t (*)(uint64_t))type metadata accessor for FormatAdMetricsNode, (uint64_t)&protocol conformance descriptor for FormatAdMetricsNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA696414(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatItemNode();
    sub_1BA4A2870(&qword_1ED39F928, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNode, (uint64_t)&protocol conformance descriptor for FormatItemNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA696598(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatButtonNode();
    sub_1BA4A2870(&qword_1ED39FB98, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNode, (uint64_t)&protocol conformance descriptor for FormatButtonNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA69671C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatWebEmbedNode();
    sub_1BA4A2870((unint64_t *)&unk_1ED39FE40, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbedNode, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA6968A0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatOptionsNode();
    sub_1BA4A2870(&qword_1ED39FCA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNode, (uint64_t)&protocol conformance descriptor for FormatOptionsNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA696A24(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatRepeatNode();
    sub_1BA4A2870(&qword_1ED39FC78, (uint64_t (*)(uint64_t))type metadata accessor for FormatRepeatNode, (uint64_t)&protocol conformance descriptor for FormatRepeatNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA696BA8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatGroupNode();
    sub_1BA4A2870(&qword_1ED39FA38, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNode, (uint64_t)&protocol conformance descriptor for FormatGroupNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA696D2C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatViewNode();
    sub_1BA4A2870(&qword_1ED39F950, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNode, (uint64_t)&protocol conformance descriptor for FormatViewNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA696EB0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatSupplementaryNode();
    sub_1BA4A2870(&qword_1ED3A0270, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNode, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA697034@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return FormatTextNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatImageNodeStyle.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  int v63;
  char v64;
  _BYTE v65[7];
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  __int128 v76;
  char v77;
  _BYTE v78[7];

  v3 = v2;
  v62 = a2;
  sub_1BAE9B47C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE9B4F4();
  sub_1BA4A2870(&qword_1ED3D0EE0, (uint64_t (*)(uint64_t))sub_1BAE9B4F4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (!v2)
  {
    v60 = v7;
    v61 = v9;
    v10 = v62;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v11 = sub_1BB872874();
    v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
    swift_bridgeObjectRelease();
    v13 = v6;
    if ((v12 & 1) != 0)
    {
      v14 = sub_1BB8740EC();
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        v16 = (_BYTE *)(v14 + 48);
        while (*v16 != 1)
        {
          v16 += 24;
          if (!--v15)
            goto LABEL_7;
        }
        v19 = *((_QWORD *)v16 - 2);
        v18 = *((_QWORD *)v16 - 1);
        swift_bridgeObjectRetain_n();
        v20 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v20);
        sub_1BAE9B574();
        sub_1BA697ED8();
        sub_1BAE9B5B8();
        swift_getKeyPath();
        swift_retain();
        v21 = sub_1BAE71220((uint64_t)&unk_1E7251EA0);
        swift_release_n();
        sub_1BA98D1F0();
        v3 = (void *)swift_allocError();
        *(_QWORD *)v22 = v19;
        *(_QWORD *)(v22 + 8) = v18;
        *(_QWORD *)(v22 + 16) = v21;
        *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA69C828(v19, v18, 1);
        (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v13);
        goto LABEL_10;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BA69C13C();
    v66 = 0uLL;
    LOBYTE(v67) = 0;
    sub_1BB8740D4();
    v17 = v76;
    v66 = xmmword_1BB8A1A10;
    LOBYTE(v67) = 0;
    sub_1BA69A538();
    sub_1BB874068();
    v59 = a1;
    v23 = v76;
    sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v66 = xmmword_1BB8D2D60;
    LOBYTE(v67) = 0;
    sub_1BA69C0C4();
    sub_1BB874068();
    v58 = v23;
    v24 = v76;
    v76 = xmmword_1BB8D2D70;
    v77 = 0;
    sub_1BA69A4F4();
    sub_1BB874068();
    v56 = v24;
    v57 = *((_QWORD *)&v66 + 1);
    v25 = v66;
    v26 = v67;
    v76 = xmmword_1BB8D2D90;
    v77 = 0;
    sub_1BA69C080();
    sub_1BB874068();
    v53 = v25;
    v54 = v26;
    v47 = v66;
    v48 = v67;
    v49 = v68;
    v50 = v69;
    v51 = v70;
    v52 = v71;
    v55 = v72;
    v27 = v74;
    v46 = v73;
    v28 = v75;
    v66 = xmmword_1BB8D2D80;
    LOBYTE(v67) = 0;
    sub_1BA62C9A0();
    sub_1BB874068();
    v44 = v28;
    v45 = v27;
    v29 = v76;
    v66 = xmmword_1BB8D2DA0;
    LOBYTE(v67) = 0;
    v42 = sub_1BB874038();
    v43 = v29;
    v66 = xmmword_1BB8D2DB0;
    LOBYTE(v67) = 0;
    sub_1BA699198();
    sub_1BB874068();
    v41 = v76;
    v66 = xmmword_1BB8D2DD0;
    LOBYTE(v67) = 0;
    sub_1BA6991DC();
    sub_1BB874068();
    LOBYTE(v29) = v76;
    v66 = xmmword_1BB8D2DE0;
    LOBYTE(v67) = 0;
    sub_1BA699110();
    sub_1BB874068();
    v30 = v76;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    v66 = xmmword_1BB8D2DF0;
    LOBYTE(v67) = 0;
    sub_1BA69C018();
    sub_1BB874068();
    v31 = v76;
    sub_1BA4AD288(0, &qword_1ED3B9520, (uint64_t)&type metadata for FormatImageAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v66 = xmmword_1BB8D2E00;
    LOBYTE(v67) = 0;
    sub_1BA699098();
    sub_1BB874068();
    v40 = v76;
    v66 = xmmword_1BB8D2E10;
    LOBYTE(v67) = 0;
    sub_1BA699154();
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v6);
    *(_OWORD *)v10 = v17;
    v32 = v56;
    *(_QWORD *)(v10 + 16) = v58;
    *(_QWORD *)(v10 + 24) = v32;
    v33 = v57;
    *(_QWORD *)(v10 + 32) = v53;
    *(_QWORD *)(v10 + 40) = v33;
    *(_BYTE *)(v10 + 48) = v54;
    *(_DWORD *)(v10 + 49) = *(_DWORD *)v78;
    *(_DWORD *)(v10 + 52) = *(_DWORD *)&v78[3];
    v34 = *((_QWORD *)&v47 + 1);
    *(_QWORD *)(v10 + 56) = v47;
    *(_QWORD *)(v10 + 64) = v34;
    v35 = v49;
    *(_QWORD *)(v10 + 72) = v48;
    *(_QWORD *)(v10 + 80) = v35;
    v36 = v51;
    *(_QWORD *)(v10 + 88) = v50;
    *(_QWORD *)(v10 + 96) = v36;
    v37 = v55;
    *(_QWORD *)(v10 + 104) = v52;
    *(_QWORD *)(v10 + 112) = v37;
    v38 = v45;
    *(_QWORD *)(v10 + 120) = v46;
    *(_QWORD *)(v10 + 128) = v38;
    *(_BYTE *)(v10 + 136) = v44;
    *(_DWORD *)(v10 + 140) = *(_DWORD *)&v65[3];
    *(_DWORD *)(v10 + 137) = *(_DWORD *)v65;
    *(_QWORD *)(v10 + 144) = v43;
    *(_BYTE *)(v10 + 152) = v42;
    *(_BYTE *)(v10 + 153) = v41;
    *(_BYTE *)(v10 + 154) = v29;
    *(_BYTE *)(v10 + 159) = v64;
    *(_DWORD *)(v10 + 155) = v63;
    *(_QWORD *)(v10 + 160) = v30;
    *(_QWORD *)(v10 + 168) = v31;
    *(_QWORD *)(v10 + 176) = v40;
    *(_OWORD *)(v10 + 184) = v76;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  }
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA697ED8()
{
  unint64_t result;

  result = qword_1ED3C8E68;
  if (!qword_1ED3C8E68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9F00, &_s10CodingKeysON_111);
    atomic_store(result, (unint64_t *)&qword_1ED3C8E68);
  }
  return result;
}

uint64_t sub_1BA697F1C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (**v11)(char *, _QWORD);
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  void *v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 v101;
  __int128 v102;
  char v103;
  void (**v104)(char *, _QWORD);

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v81 = (uint64_t)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v82 = (uint64_t)&v54 - v5;
  sub_1BAEFBAC0(0, &qword_1ED3C4680, (void (*)(void))sub_1BA82D260, (void (*)(void))sub_1BA82D2A4);
  v83 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v54 - v8;
  sub_1BAEF13C0();
  v84 = v10;
  v11 = *(void (***)(char *, _QWORD))(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE9B2FC();
  sub_1BA4A2870(&qword_1ED3D0ED0, (uint64_t (*)(uint64_t))sub_1BAE9B2FC, (uint64_t)&unk_1BB8FFC6C);
  v15 = v104;
  sub_1BB87468C();
  v16 = v15;
  if (v15)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v17 = v9;
  v79 = v7;
  v18 = v83;
  v104 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v19 = sub_1BB872874();
  v20 = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  v21 = v84;
  if ((v20 & 1) != 0)
  {
    v22 = sub_1BB8740EC();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = (_BYTE *)(v22 + 48);
      while (*v24 != 1)
      {
        v24 += 24;
        if (!--v23)
          goto LABEL_7;
      }
      v29 = *((_QWORD *)v24 - 2);
      v28 = *((_QWORD *)v24 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      v31 = v21;
      MEMORY[0x1E0C80A78](v30);
      sub_1BAE9B37C();
      sub_1BA699220();
      sub_1BAE9B3C0();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v32 = sub_1BAE71220((uint64_t)&unk_1E7251E68);
      swift_release_n();
      sub_1BA98D1F0();
      v16 = (void *)swift_allocError();
      *(_QWORD *)v33 = v29;
      *(_QWORD *)(v33 + 8) = v28;
      *(_QWORD *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v29, v28, 1);
      v104[1](v13, v31);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v80 = a1;
  v25 = sub_1BAE0F8F8((uint64_t)v13, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF13C0);
  v27 = v26;
  v92 = xmmword_1BB8A1A10;
  LOBYTE(v93) = 0;
  v34 = sub_1BB874098();
  v78 = v27;
  v77 = v35;
  v76 = xmmword_1BB8D2D60;
  v92 = xmmword_1BB8D2D60;
  LOBYTE(v93) = 0;
  v36 = sub_1BB8740F8();
  if ((v36 & 1) != 0)
  {
    v102 = v76;
    v103 = 0;
    sub_1BAEF1438();
    sub_1BB8740D4();
    v75 = v34;
    *(_QWORD *)&v76 = v25;
    v37 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v17, v18);
  }
  else
  {
    v75 = v34;
    *(_QWORD *)&v76 = v25;
    v37 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v92 = xmmword_1BB8D2D70;
  LOBYTE(v93) = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v38 = v78;
  v40 = v102;
  sub_1BA4AD288(0, &qword_1ED3B9520, (uint64_t)&type metadata for FormatImageAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v92 = xmmword_1BB8D2D90;
  LOBYTE(v93) = 0;
  sub_1BA699098();
  sub_1BB874068();
  v79 = v40;
  v83 = v37;
  v41 = v102;
  v92 = xmmword_1BB8D2D80;
  LOBYTE(v93) = 0;
  sub_1BA69A538();
  sub_1BB874068();
  v74 = v41;
  v42 = v102;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v92 = xmmword_1BB8D2DA0;
  LOBYTE(v93) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v73 = v42;
  v43 = v102;
  v92 = xmmword_1BB8D2DB0;
  LOBYTE(v93) = 0;
  sub_1BA6991DC();
  sub_1BB874068();
  v72 = v43;
  v44 = v77;
  v45 = v21;
  v46 = v102;
  v102 = xmmword_1BB8D2DD0;
  v103 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v71 = v92;
  LODWORD(v43) = v93;
  v92 = xmmword_1BB8D2DE0;
  LOBYTE(v93) = 0;
  sub_1BA699110();
  v47 = v13;
  sub_1BB874068();
  v70 = v43;
  v48 = v38;
  v69 = v102;
  v92 = xmmword_1BB8D2DF0;
  LOBYTE(v93) = 0;
  sub_1BA699198();
  v49 = v45;
  v50 = v47;
  sub_1BB874068();
  v68 = v102;
  v102 = xmmword_1BB8D2E00;
  v103 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v51 = *((_QWORD *)&v92 + 1);
  v61 = v92;
  v62 = v93;
  v63 = v94;
  v64 = v95;
  v65 = v96;
  v66 = v97;
  v67 = v98;
  v60 = v99;
  v59 = v100;
  v58 = v101;
  v92 = xmmword_1BB8D2E10;
  LOBYTE(v93) = 0;
  sub_1BA62C9A0();
  sub_1BB874068();
  v57 = v102;
  v92 = xmmword_1BB8868A0;
  LOBYTE(v93) = 0;
  v56 = sub_1BB874038();
  v92 = xmmword_1BB8D2E20;
  LOBYTE(v93) = 0;
  sub_1BA699154();
  sub_1BB874068();
  v55 = v102;
  sub_1BB86E710();
  v92 = xmmword_1BB8D2DC0;
  LOBYTE(v93) = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v90 = v73;
  v91 = v79;
  v89 = v46;
  v102 = v71;
  v103 = v70;
  v88 = v69;
  v87 = v68;
  *(_QWORD *)&v92 = v61;
  *((_QWORD *)&v92 + 1) = v51;
  v93 = v62;
  v94 = v63;
  v95 = v64;
  v96 = v65;
  v97 = v66;
  v98 = v67;
  v99 = v60;
  v100 = v59;
  v101 = v58;
  v86 = v57;
  v85 = v55;
  v52 = v82;
  v53 = v81;
  sub_1BA5E01A4(v82, v81, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  type metadata accessor for FormatImageNodeStyle();
  swift_allocObject();
  KeyPath = FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(v76, v48, v75, v44, v83, &v91, v74, &v90, v72, &v89, (uint64_t *)&v102, &v88, &v87, &v92, &v86, v56, (uint64_t *)&v85, v53);
  sub_1BA5C699C(v52, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  v104[1](v50, v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  return KeyPath;
}

uint64_t type metadata accessor for FormatImageNodeStyle()
{
  uint64_t result;

  result = qword_1ED3C8EA0;
  if (!qword_1ED3C8EA0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA699098()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B9528;
  if (!qword_1ED3B9528)
  {
    sub_1BA4AD288(255, &qword_1ED3B9520, (uint64_t)&type metadata for FormatImageAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82AEB8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9528);
  }
  return result;
}

unint64_t sub_1BA699110()
{
  unint64_t result;

  result = qword_1ED3B7850;
  if (!qword_1ED3B7850)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageRenderingMode, &type metadata for FormatImageRenderingMode);
    atomic_store(result, (unint64_t *)&qword_1ED3B7850);
  }
  return result;
}

unint64_t sub_1BA699154()
{
  unint64_t result;

  result = qword_1ED3C9EE8;
  if (!qword_1ED3C9EE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeRequest, &type metadata for FormatImageNodeRequest);
    atomic_store(result, (unint64_t *)&qword_1ED3C9EE8);
  }
  return result;
}

unint64_t sub_1BA699198()
{
  unint64_t result;

  result = qword_1ED3B4BC0;
  if (!qword_1ED3B4BC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageResize, &type metadata for FormatImageResize);
    atomic_store(result, (unint64_t *)&qword_1ED3B4BC0);
  }
  return result;
}

unint64_t sub_1BA6991DC()
{
  unint64_t result;

  result = qword_1ED3B4B80;
  if (!qword_1ED3B4B80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentMode, &type metadata for FormatContentMode);
    atomic_store(result, (unint64_t *)&qword_1ED3B4B80);
  }
  return result;
}

unint64_t sub_1BA699220()
{
  unint64_t result;

  result = qword_1ED3C8E50;
  if (!qword_1ED3C8E50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9FB0, &_s10CodingKeysON_112);
    atomic_store(result, (unint64_t *)&qword_1ED3C8E50);
  }
  return result;
}

uint64_t sub_1BA699264(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[4];
  int v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  char v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;

  sub_1BAEFBAC0(0, &qword_1ED3C4668, (void (*)(void))sub_1BA82DD08, (void (*)(void))sub_1BA82DD4C);
  v69 = *(_QWORD *)(v2 - 8);
  v70 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = &v51[-v3];
  sub_1BAEE8414();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAECFD8C();
  sub_1BA4A2870(&qword_1ED3D0E70, (uint64_t (*)(uint64_t))sub_1BAECFD8C, (uint64_t)&unk_1BB8FFC6C);
  v10 = v71;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
    goto LABEL_12;
  v66 = v4;
  v67 = 0;
  v12 = v70;
  v68 = v7;
  v71 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    v15 = v71;
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v25 = *((_QWORD *)v18 - 2);
      v26 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      sub_1BAECFE0C();
      sub_1BA69C390();
      sub_1BAECFE50();
      swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7251C78);
      swift_release_n();
      sub_1BA98D1F0();
      v11 = swift_allocError();
      *(_QWORD *)v29 = v25;
      *(_QWORD *)(v29 + 8) = v26;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v25, v26, 1);
      (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v9, v15);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v19 = v67;
  v20 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEE8414);
  v11 = v19;
  if (v19)
  {
    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v9, v71);
LABEL_12:
    sub_1BA7F8B78(a1, v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v11;
  }
  v22 = v20;
  v23 = v21;
  v74 = xmmword_1BB8A1A10;
  LOBYTE(v75) = 0;
  v24 = v71;
  v31 = sub_1BB874098();
  v67 = v32;
  v65 = xmmword_1BB8D2D60;
  v74 = xmmword_1BB8D2D60;
  LOBYTE(v75) = 0;
  v33 = sub_1BB8740F8();
  if ((v33 & 1) != 0)
  {
    v64 = v23;
    v72 = v65;
    v73 = 0;
    sub_1BAEE848C();
    v34 = v66;
    sub_1BB8740D4();
    v63 = v31;
    *(_QWORD *)&v65 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v34, v12);
    v23 = v64;
  }
  else
  {
    v63 = v31;
    *(_QWORD *)&v65 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v74 = xmmword_1BB8D2D70;
  LOBYTE(v75) = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v35 = v72;
  v74 = xmmword_1BB8D2D90;
  LOBYTE(v75) = 0;
  sub_1BA69A538();
  sub_1BB874068();
  v70 = v35;
  v36 = v72;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v74 = xmmword_1BB8D2D80;
  LOBYTE(v75) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v69 = v36;
  v37 = (_BYTE *)v72;
  v72 = xmmword_1BB8D2DA0;
  v73 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v66 = v37;
  v38 = *((_QWORD *)&v74 + 1);
  v64 = v74;
  LODWORD(v37) = v75;
  v72 = xmmword_1BB8D2DB0;
  v73 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v61 = v38;
  v62 = (int)v37;
  v55 = v74;
  v56 = v75;
  v57 = v76;
  v58 = v77;
  v59 = v78;
  v39 = v80;
  v60 = v79;
  v54 = v81;
  v53 = v82;
  v52 = v83;
  v74 = xmmword_1BB8D2DD0;
  LOBYTE(v75) = 0;
  v40 = sub_1BB874038();
  v41 = v69;
  v42 = v40;
  (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v9, v24);
  type metadata accessor for FormatViewNodeStyle();
  v11 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = v22;
  *(_QWORD *)(v11 + 24) = v23;
  v43 = v67;
  *(_QWORD *)(v11 + 32) = v63;
  *(_QWORD *)(v11 + 40) = v43;
  swift_beginAccess();
  v44 = v70;
  *(_QWORD *)(v11 + 48) = v65;
  *(_QWORD *)(v11 + 56) = v44;
  v45 = v66;
  *(_QWORD *)(v11 + 64) = v41;
  *(_QWORD *)(v11 + 72) = v45;
  v46 = v61;
  *(_QWORD *)(v11 + 80) = v64;
  *(_QWORD *)(v11 + 88) = v46;
  *(_BYTE *)(v11 + 96) = v62;
  v47 = *((_QWORD *)&v55 + 1);
  *(_QWORD *)(v11 + 104) = v55;
  *(_QWORD *)(v11 + 112) = v47;
  v48 = v57;
  *(_QWORD *)(v11 + 120) = v56;
  *(_QWORD *)(v11 + 128) = v48;
  v49 = v59;
  *(_QWORD *)(v11 + 136) = v58;
  *(_QWORD *)(v11 + 144) = v49;
  *(_QWORD *)(v11 + 152) = v60;
  *(_QWORD *)(v11 + 160) = v39;
  v50 = v53;
  *(_QWORD *)(v11 + 168) = v54;
  *(_QWORD *)(v11 + 176) = v50;
  *(_BYTE *)(v11 + 184) = v52;
  *(_BYTE *)(v11 + 185) = v42;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

uint64_t type metadata accessor for FormatViewNodeStyle()
{
  return objc_opt_self();
}

uint64_t FormatViewNodeStyle.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  __int128 *v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  __int128 v69;
  char v70;
  _BYTE v71[7];

  v3 = v2;
  v58 = a2;
  sub_1BAECFE94();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAECFF0C();
  sub_1BA4A2870(&qword_1ED3D0E80, (uint64_t (*)(uint64_t))sub_1BAECFF0C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v40 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  v10 = a1[3];
  v57 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v10 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = v12;
      v20 = *((_QWORD *)v17 - 2);
      v21 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      sub_1BAECFF8C();
      sub_1BA69C34C();
      sub_1BAECFFD0();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E7251CA8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v13);
      a1 = v57;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v59 = 0uLL;
  LOBYTE(v60) = 0;
  sub_1BB8740D4();
  v18 = v69;
  v59 = xmmword_1BB8A1A10;
  LOBYTE(v60) = 0;
  sub_1BA69A538();
  sub_1BB874068();
  v25 = v69;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v59 = xmmword_1BB8D2D60;
  LOBYTE(v60) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v27 = v69;
  v69 = xmmword_1BB8D2D70;
  v70 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v28 = *((_QWORD *)&v59 + 1);
  v55 = v59;
  v56 = v27;
  LODWORD(v27) = v60;
  v69 = xmmword_1BB8D2D90;
  v70 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v53 = v28;
  v54 = v27;
  v46 = v59;
  v47 = v60;
  v48 = v61;
  v49 = v62;
  v50 = v63;
  v51 = v64;
  v52 = v65;
  v45 = v66;
  v44 = v67;
  LODWORD(v28) = v68;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v59 = xmmword_1BB8D2D80;
  LOBYTE(v60) = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v43 = v28;
  v42 = v69;
  v59 = xmmword_1BB8D2DA0;
  LOBYTE(v60) = 0;
  v29 = sub_1BB874038();
  v30 = v55;
  v31 = v29;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v13);
  v32 = v58;
  *v58 = v18;
  v33 = v56;
  *((_QWORD *)v32 + 2) = v25;
  *((_QWORD *)v32 + 3) = v33;
  v34 = v53;
  *((_QWORD *)v32 + 4) = v30;
  *((_QWORD *)v32 + 5) = v34;
  *((_BYTE *)v32 + 48) = v54;
  *(_DWORD *)((char *)v32 + 49) = v69;
  *((_DWORD *)v32 + 13) = *(_DWORD *)((char *)&v69 + 3);
  v35 = *((_QWORD *)&v46 + 1);
  *((_QWORD *)v32 + 7) = v46;
  *((_QWORD *)v32 + 8) = v35;
  v36 = v48;
  *((_QWORD *)v32 + 9) = v47;
  *((_QWORD *)v32 + 10) = v36;
  v37 = v50;
  *((_QWORD *)v32 + 11) = v49;
  *((_QWORD *)v32 + 12) = v37;
  v38 = v52;
  *((_QWORD *)v32 + 13) = v51;
  *((_QWORD *)v32 + 14) = v38;
  v39 = v44;
  *((_QWORD *)v32 + 15) = v45;
  *((_QWORD *)v32 + 16) = v39;
  *((_BYTE *)v32 + 136) = v43;
  *((_DWORD *)v32 + 35) = *(_DWORD *)&v71[3];
  *(_DWORD *)((char *)v32 + 137) = *(_DWORD *)v71;
  *((_QWORD *)v32 + 18) = v42;
  *((_BYTE *)v32 + 152) = v31;
  v40 = (uint64_t)v57;
  return __swift_destroy_boxed_opaque_existential_1(v40);
}

unint64_t sub_1BA69A4F4()
{
  unint64_t result;

  result = qword_1ED3B5558;
  if (!qword_1ED3B5558)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius, &type metadata for FormatCornerRadius);
    atomic_store(result, (unint64_t *)&qword_1ED3B5558);
  }
  return result;
}

unint64_t sub_1BA69A538()
{
  unint64_t result;

  result = qword_1ED3B47F8;
  if (!qword_1ED3B47F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBackground, &type metadata for FormatBackground);
    atomic_store(result, (unint64_t *)&qword_1ED3B47F8);
  }
  return result;
}

uint64_t sub_1BA69A57C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[12];
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  uint64_t v68[2];
  uint64_t v69;
  __int128 v70;
  char v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  char v86;
  __int128 v87;
  char v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  _OWORD v99[9];
  char v100;
  char v101[144];
  void *v102;

  sub_1BAEFBAC0(0, &qword_1ED3C4658, (void (*)(void))sub_1BA82E00C, (void (*)(void))sub_1BA82E050);
  v65 = v2;
  v63 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v64 = &v39[-v3];
  sub_1BAEE97D0();
  v5 = v4;
  v6 = *((_QWORD *)v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC84FC();
  sub_1BA4A2870(&qword_1ED3D0E50, (uint64_t (*)(uint64_t))sub_1BAEC84FC, (uint64_t)&unk_1BB8FFC6C);
  v10 = v102;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v9;
  }
  v62 = v6;
  v102 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    v14 = v102;
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v9 = *((_QWORD *)v17 - 2);
      v21 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      v65 = (uint64_t)v8;
      MEMORY[0x1E0C80A78](v22);
      sub_1BAEC857C();
      sub_1BA69B438();
      sub_1BAEC85C0();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E7251C18);
      swift_release_n();
      sub_1BA98D1F0();
      v11 = (void *)swift_allocError();
      *(_QWORD *)v24 = v9;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v9, v21, 1);
      (*(void (**)(uint64_t, void *))(v62 + 8))(v65, v14);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v18 = sub_1BAE0F8F8((uint64_t)v8, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEE97D0);
  v20 = v19;
  v89 = xmmword_1BB8A1A10;
  LOBYTE(v90) = 0;
  v58 = sub_1BB874098();
  v61 = v25;
  v60 = xmmword_1BB8D2D60;
  v89 = xmmword_1BB8D2D60;
  LOBYTE(v90) = 0;
  v26 = sub_1BB8740F8();
  if ((v26 & 1) != 0)
  {
    v59 = v20;
    v85 = v60;
    v86 = 0;
    sub_1BAEE9848();
    v28 = v64;
    v27 = v65;
    sub_1BB8740D4();
    *(_QWORD *)&v60 = v18;
    v29 = v8;
    v30 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v28, v27);
    v20 = v59;
  }
  else
  {
    *(_QWORD *)&v60 = v18;
    v29 = v8;
    v30 = MEMORY[0x1E0DEE9D8];
  }
  v89 = xmmword_1BB8D2D70;
  LOBYTE(v90) = 0;
  sub_1BA69C280();
  v31 = v29;
  sub_1BB874068();
  v32 = v85;
  v99[8] = xmmword_1BB8D2D90;
  v100 = 0;
  sub_1BA69C2C4();
  sub_1BB874068();
  v65 = v32;
  sub_1BA6A09F0((uint64_t)v101, (uint64_t)v99, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v89 = xmmword_1BB8D2D80;
  LOBYTE(v90) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v34 = v85;
  v85 = xmmword_1BB8D2DA0;
  v86 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v59 = v20;
  v52 = v89;
  v53 = v90;
  v54 = v91;
  v55 = v92;
  v56 = v93;
  v57 = v94;
  v63 = v95;
  v64 = a1;
  v50 = v97;
  v51 = v96;
  v35 = v98;
  sub_1BA4AD288(0, &qword_1ED3B9560, (uint64_t)&type metadata for FormatTextNodeTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v89 = xmmword_1BB8D2DB0;
  LOBYTE(v90) = 0;
  sub_1BA69C180();
  sub_1BB874068();
  v48 = v35;
  v49 = v34;
  v36 = v85;
  v87 = xmmword_1BB8D2DD0;
  v88 = 0;
  sub_1BA69C1F8();
  sub_1BB874068();
  v47 = v36;
  sub_1BA6A09F0((uint64_t)&v89, (uint64_t)&v85, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
  v70 = xmmword_1BB8D2DE0;
  v71 = 0;
  sub_1BA689CD8();
  sub_1BB874068();
  v37 = v82;
  v46 = v83;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v70 = xmmword_1BB8D2DF0;
  v71 = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v45 = v82;
  v70 = xmmword_1BB8D2E00;
  v71 = 0;
  sub_1BA69C23C();
  sub_1BB874068();
  v43 = v83;
  v44 = v82;
  v70 = xmmword_1BB8D2E10;
  v71 = 0;
  sub_1BB874068();
  v41 = v82;
  v42 = v83;
  v70 = xmmword_1BB8868A0;
  v71 = 0;
  v40 = sub_1BB874038();
  v70 = xmmword_1BB8D2E20;
  v71 = 0;
  sub_1BB874068();
  (*(void (**)(_BYTE *, void *))(v62 + 8))(v31, v102);
  v38 = v82;
  v84 = v65;
  sub_1BA6A09F0((uint64_t)v99, (uint64_t)&v82, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  v72 = v52;
  v73 = v53;
  v74 = v54;
  v75 = v55;
  v76 = v56;
  v77 = v57;
  v78 = v63;
  v79 = v51;
  v80 = v50;
  v81 = v48;
  sub_1BA6A09F0((uint64_t)&v85, (uint64_t)&v70, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
  v68[1] = v43;
  v69 = v45;
  v66 = v38;
  v67[0] = v41;
  v67[1] = v42;
  v68[0] = v44;
  type metadata accessor for FormatTextNodeStyle();
  swift_allocObject();
  v9 = FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(v60, v59, v58, v61, v30, &v84, (uint64_t)&v82, v49, &v72, v47, (uint64_t)&v70, v37, v46, &v69, v68, v67, v40, &v66);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  return v9;
}

uint64_t type metadata accessor for FormatTextNodeStyle()
{
  return objc_opt_self();
}

unint64_t sub_1BA69B438()
{
  unint64_t result;

  result = qword_1ED3C86F8;
  if (!qword_1ED3C86F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4A80, &_s10CodingKeysON_15);
    atomic_store(result, (unint64_t *)&qword_1ED3C86F8);
  }
  return result;
}

uint64_t FormatTextNodeStyle.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  int v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  _OWORD v50[33];
  __int128 v51;
  char v52;
  uint64_t v53;
  _BYTE v54[232];
  __int128 v55;
  char v56;
  _OWORD v57[9];
  char v58;
  char v59[144];
  uint64_t v60;

  v3 = v2;
  v49 = a2;
  sub_1BAEC8604();
  v60 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC867C();
  sub_1BA4A2870(&qword_1ED3D0E60, (uint64_t (*)(uint64_t))sub_1BAEC867C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v49;
    v48 = v6;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v10 = sub_1BB872874();
    v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
    swift_bridgeObjectRelease();
    v12 = v60;
    v13 = v8;
    if ((v11 & 1) != 0)
    {
      v14 = sub_1BB8740EC();
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        v16 = (_BYTE *)(v14 + 48);
        while (*v16 != 1)
        {
          v16 += 24;
          if (!--v15)
            goto LABEL_7;
        }
        v18 = *((_QWORD *)v16 - 1);
        v49 = (void *)*((_QWORD *)v16 - 2);
        swift_bridgeObjectRetain_n();
        v19 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v19);
        sub_1BAEC86FC();
        sub_1BA69C308();
        sub_1BAEC8740();
        swift_getKeyPath();
        swift_retain();
        v20 = sub_1BAE71220((uint64_t)&unk_1E7251C48);
        swift_release_n();
        sub_1BA98D1F0();
        v3 = (void *)swift_allocError();
        v21 = (uint64_t)v49;
        *(_QWORD *)v22 = v49;
        *(_QWORD *)(v22 + 8) = v18;
        *(_QWORD *)(v22 + 16) = v20;
        *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA69C828(v21, v18, 1);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v12);
        goto LABEL_10;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BA69C13C();
    memset(v50, 0, 17);
    sub_1BB8740D4();
    v17 = v55;
    v50[0] = xmmword_1BB8A1A10;
    LOBYTE(v50[1]) = 0;
    sub_1BA69C280();
    sub_1BB874068();
    v23 = v55;
    v57[8] = xmmword_1BB8D2D60;
    v58 = 0;
    sub_1BA69C2C4();
    sub_1BB874068();
    v47 = v23;
    sub_1BA6A09F0((uint64_t)v59, (uint64_t)v57, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
    sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v50[0] = xmmword_1BB8D2D70;
    LOBYTE(v50[1]) = 0;
    sub_1BA69C0C4();
    sub_1BB874068();
    v24 = v55;
    v55 = xmmword_1BB8D2D90;
    v56 = 0;
    sub_1BA69C080();
    sub_1BB874068();
    v42 = v50[0];
    v43 = v50[1];
    v44 = v50[2];
    v45 = v50[3];
    v46 = v24;
    v40 = *((_QWORD *)&v50[4] + 1);
    v41 = *(_QWORD *)&v50[4];
    v39 = LOBYTE(v50[5]);
    sub_1BA4AD288(0, &qword_1ED3B9560, (uint64_t)&type metadata for FormatTextNodeTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v50[0] = xmmword_1BB8D2D80;
    LOBYTE(v50[1]) = 0;
    sub_1BA69C180();
    sub_1BB874068();
    v38 = v55;
    *(_OWORD *)&v54[200] = xmmword_1BB8D2DA0;
    v54[216] = 0;
    sub_1BA69C1F8();
    sub_1BB874068();
    sub_1BA6A09F0((uint64_t)&v55, (uint64_t)v54, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
    v50[0] = xmmword_1BB8D2DB0;
    LOBYTE(v50[1]) = 0;
    sub_1BA689CD8();
    sub_1BB874068();
    v36 = v51;
    v35 = BYTE8(v51);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    v26 = v25;
    v50[0] = xmmword_1BB8D2DD0;
    LOBYTE(v50[1]) = 0;
    sub_1BA69C018();
    v37 = v26;
    sub_1BB874068();
    v33 = v51;
    v50[0] = xmmword_1BB8D2DE0;
    LOBYTE(v50[1]) = 0;
    sub_1BA69C23C();
    v34 = v13;
    sub_1BB874068();
    v32 = v51;
    v50[0] = xmmword_1BB8D2DF0;
    LOBYTE(v50[1]) = 0;
    sub_1BB874068();
    v31 = v51;
    v50[0] = xmmword_1BB8D2E00;
    LOBYTE(v50[1]) = 0;
    v30 = sub_1BB874038();
    v51 = xmmword_1BB8D2E10;
    v52 = 0;
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v60);
    v27 = v53;
    v50[0] = v17;
    *(_QWORD *)&v50[1] = v47;
    sub_1BA6A09F0((uint64_t)v57, (uint64_t)&v50[1] + 8, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
    *((_QWORD *)&v50[9] + 1) = v46;
    v50[10] = v42;
    v50[11] = v43;
    v50[12] = v44;
    v50[13] = v45;
    *(_QWORD *)&v50[14] = v41;
    *((_QWORD *)&v50[14] + 1) = v40;
    LOBYTE(v50[15]) = v39;
    *((_QWORD *)&v50[15] + 1) = v38;
    sub_1BA6A09F0((uint64_t)v54, (uint64_t)&v50[16], (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
    *((_QWORD *)&v50[28] + 1) = v36;
    LOBYTE(v50[29]) = v35;
    *((_QWORD *)&v50[29] + 1) = v33;
    v50[30] = v32;
    v50[31] = v31;
    LOBYTE(v50[32]) = v30;
    *((_QWORD *)&v50[32] + 1) = v27;
    memcpy(v9, v50, 0x210uLL);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA69C018()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B4008;
  if (!qword_1ED3B4008)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEquation<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B4008);
  }
  return result;
}

unint64_t sub_1BA69C080()
{
  unint64_t result;

  result = qword_1ED3B37F0;
  if (!qword_1ED3B37F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShadow, &type metadata for FormatShadow);
    atomic_store(result, (unint64_t *)&qword_1ED3B37F0);
  }
  return result;
}

unint64_t sub_1BA69C0C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B93D0;
  if (!qword_1ED3B93D0)
  {
    sub_1BA4AD288(255, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA8365A4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B93D0);
  }
  return result;
}

unint64_t sub_1BA69C13C()
{
  unint64_t result;

  result = qword_1ED3BD088;
  if (!qword_1ED3BD088)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelector, &type metadata for FormatSelector);
    atomic_store(result, (unint64_t *)&qword_1ED3BD088);
  }
  return result;
}

unint64_t sub_1BA69C180()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B9568;
  if (!qword_1ED3B9568)
  {
    sub_1BA4AD288(255, &qword_1ED3B9560, (uint64_t)&type metadata for FormatTextNodeTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA828A1C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9568);
  }
  return result;
}

unint64_t sub_1BA69C1F8()
{
  unint64_t result;

  result = qword_1ED3B6260;
  if (!qword_1ED3B6260)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatParagraphStyle, &type metadata for FormatParagraphStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3B6260);
  }
  return result;
}

unint64_t sub_1BA69C23C()
{
  unint64_t result;

  result = qword_1ED3BD970;
  if (!qword_1ED3BD970)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnderline, &type metadata for FormatUnderline);
    atomic_store(result, (unint64_t *)&qword_1ED3BD970);
  }
  return result;
}

unint64_t sub_1BA69C280()
{
  unint64_t result;

  result = qword_1ED3B30F0;
  if (!qword_1ED3B30F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFont, &type metadata for FormatFont);
    atomic_store(result, (unint64_t *)&qword_1ED3B30F0);
  }
  return result;
}

unint64_t sub_1BA69C2C4()
{
  unint64_t result;

  result = qword_1ED3B30E0;
  if (!qword_1ED3B30E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFill, &type metadata for FormatFill);
    atomic_store(result, (unint64_t *)&qword_1ED3B30E0);
  }
  return result;
}

unint64_t sub_1BA69C308()
{
  unint64_t result;

  result = qword_1ED3C8710;
  if (!qword_1ED3C8710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C49D0, &_s10CodingKeysON_14);
    atomic_store(result, (unint64_t *)&qword_1ED3C8710);
  }
  return result;
}

unint64_t sub_1BA69C34C()
{
  unint64_t result;

  result = qword_1ED3C8880;
  if (!qword_1ED3C8880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3BD0, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3C8880);
  }
  return result;
}

unint64_t sub_1BA69C390()
{
  unint64_t result;

  result = qword_1ED3C8868;
  if (!qword_1ED3C8868)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3C80, &_s10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1ED3C8868);
  }
  return result;
}

uint64_t sub_1BA69C3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return FormatEquation.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t FormatEquation.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD v19[3];
  _QWORD *v20;
  uint64_t v21;
  _QWORD v22[4];
  uint64_t v23;

  v20 = a4;
  v21 = a3;
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v19 - v11;
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_1BB874674();
  if (!v4)
  {
    v19[1] = v7;
    v19[2] = v12;
    v19[0] = v9;
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    v14 = sub_1BB8743B0();
    FormatEquation.init(value:)(v14, v15, a2, v21, (uint64_t)&v23);
    v16 = v20;
    v17 = v23;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    *v16 = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t FormatEquation.init(operand:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  type metadata accessor for FormatEquationToken(255, a2, a3, a4);
  sub_1BB874218();
  swift_allocObject();
  v8 = sub_1BB872E2C();
  v9 = *(_QWORD *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, a1, a2);
  swift_storeEnumTagMultiPayload();
  v11 = sub_1BA69C794(v8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, a2);
  *a5 = v11;
  return result;
}

uint64_t type metadata accessor for FormatEquationToken(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatEquationToken);
}

_BYTE *sub_1BA69C6C0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 1uLL)
    v5 = 1;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = a2[v5];
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 16))(a1);
    v8 = 0;
  }
  a1[v5] = v8;
  return a1;
}

uint64_t sub_1BA69C794(uint64_t a1)
{
  sub_1BB872EE0();
  return a1;
}

uint64_t sub_1BA69C7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA69C808(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1BA69C808(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for FormatBoolean(uint64_t a1)
{
  return sub_1BA69C828(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1BA69C828(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t FormatEquation.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD v21[22];
  uint64_t v22;
  uint64_t v23;

  v22 = a2;
  v21[1] = a5;
  v23 = *MEMORY[0x1E0C80C00];
  v8 = sub_1BB8729E8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86DC9C();
  swift_allocObject();
  v12 = a1;
  v21[21] = sub_1BB86DC90();
  v13 = swift_allocObject();
  v21[19] = a3;
  v21[20] = a4;
  v14 = a3;
  v15 = v22;
  type metadata accessor for FormatEquationToken(0, v14, a4, v16);
  *(_QWORD *)(v13 + 16) = sub_1BB872748();
  v21[0] = v13 + 16;
  sub_1BB8729DC();
  sub_1BB8729AC();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v18 >> 60 != 15)
  {
    v21[18] = v13;
    __asm { BR              X9 }
  }
  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  swift_allocError();
  *v19 = v12;
  v19[1] = v15;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  return swift_release();
}

void sub_1BA69CDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = type metadata accessor for FormatEquationToken(0, a7, a8, a4);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  __asm { BR              X9 }
}

uint64_t sub_1BA69D314(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_1BA69D358()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B9A30;
  if (!qword_1ED3B9A30)
  {
    sub_1BA4AD288(255, &qword_1ED3B9A38, MEMORY[0x1E0DEDE70], MEMORY[0x1E0DEC628]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CB25E0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B9A30);
  }
  return result;
}

uint64_t sub_1BA69D3B8(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result < 15)
    {
      return 0;
    }
    else
    {
      sub_1BB86C058();
      swift_allocObject();
      sub_1BB86C04C();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1BB86C6AC();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BA69D44C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1BA69D490(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BA69D314(a1, a2);
  return a1;
}

NewsFeed::FormatEquationOperator_optional __swiftcall FormatEquationOperator.init(rawValue:)(NewsFeed::FormatEquationOperator_optional rawValue)
{
  char *v1;
  char v2;

  if (((rawValue.value - 40) & 0xF8) != 0)
    v2 = 6;
  else
    v2 = 0x306010600020504uLL >> (8 * (rawValue.value - 40));
  *v1 = v2;
  return rawValue;
}

uint64_t sub_1BA69D4D8(_QWORD *a1)
{
  return FormatSelector.encode(to:)(a1);
}

uint64_t FormatFloat.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v14[24];
  uint64_t v15;
  unint64_t v16;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v10 = sub_1BB86EB84();
  v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED476C20);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, v11, v10);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA69F160((uint64_t)v6, (uint64_t)sub_1BA90CF04, 0, v8, v9);
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    if (v7 >> 61)
    {
      v16 = v7;
      FormatFloat.description.getter();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
      sub_1BB8743E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = *(_QWORD *)(v7 + 16);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
      sub_1BA5ED248();
      sub_1BB874404();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t FormatEquation.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  uint64_t v40;
  uint64_t v41;

  v8 = *(_QWORD *)(a2 + 16);
  v34 = *(_QWORD *)(a2 + 24);
  v9 = type metadata accessor for FormatEquationToken(255, v8, v34, a4);
  v10 = sub_1BB873A2C();
  v36 = *(_QWORD *)(v10 - 8);
  v37 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  v35 = v8;
  v33 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v13);
  v32 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v18 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA69F160((uint64_t)v17, (uint64_t)sub_1BA90CF04, 0, v18, v19);
  sub_1BA69DCC0((uint64_t)v17);
  if (!v5)
  {
    v22 = v38;
    if (MEMORY[0x1BCCE37B4](v38, v9) == 1)
    {
      v41 = v22;
      v26 = sub_1BB872EE0();
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v26);
      sub_1BB873144();
      v27 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v12, 1, v9) == 1)
      {
        v27 = v36;
        v9 = v37;
      }
      else if (swift_getEnumCaseMultiPayload() != 1)
      {
        v30 = v32;
        v29 = v33;
        v31 = v35;
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v32, v12, v35);
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
        sub_1BB874404();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v9);
    }
    v41 = v22;
    FormatEquation.description.getter(a2, v23, v24, v25);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
    sub_1BB8743E0();
    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t FormatSelector.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];
  _BYTE v16[24];
  uint64_t v17;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v15[3] = v7;
  v15[4] = v8;
  v15[1] = 33;
  v15[2] = 0xE100000000000000;
  sub_1BA7114A0();
  if ((sub_1BB873B40() & 1) == 0)
    goto LABEL_5;
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v11 = sub_1BB86EB84();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED476C08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v6, v12, v11);
  type metadata accessor for FormatVersionRequirement.Value(0);
  v13 = swift_storeEnumTagMultiPayload();
  MEMORY[0x1E0C80A78](v13);
  v15[-2] = v7;
  v15[-1] = v8;
  sub_1BA69F160((uint64_t)v6, (uint64_t)sub_1BB5D311C, (uint64_t)&v15[-4], v9, v10);
  sub_1BA69DCC0((uint64_t)v6);
  if (!v2)
  {
LABEL_5:
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
    sub_1BB8743E0();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t sub_1BA69DC30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  a1[3] = &type metadata for TraversalOnlyEncoder.SingleValueContainer;
  a1[4] = sub_1BA69DC7C();
  *a1 = v4;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BA69DC7C()
{
  unint64_t result;

  result = qword_1ED3A2B18;
  if (!qword_1ED3A2B18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9052B8, &type metadata for TraversalOnlyEncoder.SingleValueContainer);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B18);
  }
  return result;
}

uint64_t sub_1BA69DCC0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatVersionRequirement(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatSystemColor.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v94[42];
  uint64_t v95;
  uint64_t v96;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v94[40] = (char *)v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v94[39] = (char *)v94 - v6;
  MEMORY[0x1E0C80A78](v7);
  v94[38] = (char *)v94 - v8;
  MEMORY[0x1E0C80A78](v9);
  v94[37] = (char *)v94 - v10;
  MEMORY[0x1E0C80A78](v11);
  v94[36] = (char *)v94 - v12;
  MEMORY[0x1E0C80A78](v13);
  v94[35] = (char *)v94 - v14;
  MEMORY[0x1E0C80A78](v15);
  v94[34] = (char *)v94 - v16;
  MEMORY[0x1E0C80A78](v17);
  v94[33] = (char *)v94 - v18;
  MEMORY[0x1E0C80A78](v19);
  v94[32] = (char *)v94 - v20;
  MEMORY[0x1E0C80A78](v21);
  v94[31] = (char *)v94 - v22;
  MEMORY[0x1E0C80A78](v23);
  v94[30] = (char *)v94 - v24;
  MEMORY[0x1E0C80A78](v25);
  v94[29] = (char *)v94 - v26;
  MEMORY[0x1E0C80A78](v27);
  v94[28] = (char *)v94 - v28;
  MEMORY[0x1E0C80A78](v29);
  v94[27] = (char *)v94 - v30;
  MEMORY[0x1E0C80A78](v31);
  v94[26] = (char *)v94 - v32;
  MEMORY[0x1E0C80A78](v33);
  v94[25] = (char *)v94 - v34;
  MEMORY[0x1E0C80A78](v35);
  v94[24] = (char *)v94 - v36;
  MEMORY[0x1E0C80A78](v37);
  v94[23] = (char *)v94 - v38;
  MEMORY[0x1E0C80A78](v39);
  v94[22] = (char *)v94 - v40;
  MEMORY[0x1E0C80A78](v41);
  v94[21] = (char *)v94 - v42;
  MEMORY[0x1E0C80A78](v43);
  v94[20] = (char *)v94 - v44;
  MEMORY[0x1E0C80A78](v45);
  v94[19] = (char *)v94 - v46;
  MEMORY[0x1E0C80A78](v47);
  v94[18] = (char *)v94 - v48;
  MEMORY[0x1E0C80A78](v49);
  v94[16] = (char *)v94 - v50;
  MEMORY[0x1E0C80A78](v51);
  v94[15] = (char *)v94 - v52;
  MEMORY[0x1E0C80A78](v53);
  v94[13] = (char *)v94 - v54;
  MEMORY[0x1E0C80A78](v55);
  v94[17] = (char *)v94 - v56;
  MEMORY[0x1E0C80A78](v57);
  v94[11] = (char *)v94 - v58;
  MEMORY[0x1E0C80A78](v59);
  v94[14] = (char *)v94 - v60;
  MEMORY[0x1E0C80A78](v61);
  v94[10] = (char *)v94 - v62;
  MEMORY[0x1E0C80A78](v63);
  v94[12] = (char *)v94 - v64;
  MEMORY[0x1E0C80A78](v65);
  v94[9] = (char *)v94 - v66;
  MEMORY[0x1E0C80A78](v67);
  v94[8] = (char *)v94 - v68;
  MEMORY[0x1E0C80A78](v69);
  v94[7] = (char *)v94 - v70;
  MEMORY[0x1E0C80A78](v71);
  v94[6] = (char *)v94 - v72;
  MEMORY[0x1E0C80A78](v73);
  v94[5] = (char *)v94 - v74;
  MEMORY[0x1E0C80A78](v75);
  v94[4] = (char *)v94 - v76;
  MEMORY[0x1E0C80A78](v77);
  v94[3] = (char *)v94 - v78;
  MEMORY[0x1E0C80A78](v79);
  v94[2] = (char *)v94 - v80;
  MEMORY[0x1E0C80A78](v81);
  v94[1] = (char *)v94 - v82;
  MEMORY[0x1E0C80A78](v83);
  MEMORY[0x1E0C80A78](v84);
  v86 = (char *)v94 - v85;
  v87 = *v1;
  v94[41] = a1;
  v95 = v87;
  v88 = a1[3];
  v89 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v88);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v90 = sub_1BB86EB84();
  v91 = __swift_project_value_buffer(v90, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v86, v91, v90);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v92 = v96;
  sub_1BA69F160((uint64_t)v86, (uint64_t)sub_1BA90CF04, 0, v88, v89);
  if (!v92)
  {
    v96 = v91;
    sub_1BA4A2E80((uint64_t)v86, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v86, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA69F160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[4];
  _BYTE v7[16];
  uint64_t v8;
  uint64_t v9;

  v8 = a4;
  v9 = a5;
  v6[2] = a2;
  v6[3] = a3;
  return sub_1BA6EC658(a1, (uint64_t)sub_1BAA010CC, (uint64_t)v7, (uint64_t)sub_1BAA0239C, (uint64_t)v6);
}

uint64_t FormatSystemColor.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA69F1D4 + 4 * byte_1BB8EECF0[*v0]))(0x6574696877, 0xE500000000000000);
}

uint64_t sub_1BA69F1D4()
{
  return 0x6B63616C62;
}

uint64_t sub_1BA69F1E4()
{
  return 0x7261656C63;
}

uint64_t sub_1BA69F1F4()
{
  return 6579570;
}

uint64_t sub_1BA69F204()
{
  return 0x6E65657267;
}

uint64_t sub_1BA69F214()
{
  return 1702194274;
}

uint64_t sub_1BA69F224()
{
  return 0x65676E61726FLL;
}

uint64_t sub_1BA69F238()
{
  return 0x776F6C6C6579;
}

uint64_t sub_1BA69F24C()
{
  return 1802398064;
}

uint64_t sub_1BA69F260()
{
  return 0x656C70727570;
}

uint64_t sub_1BA69F274()
{
  return 1953393005;
}

uint64_t sub_1BA69F284()
{
  return 1818322292;
}

uint64_t sub_1BA69F294()
{
  return 1851881827;
}

uint64_t sub_1BA69F2A4()
{
  return 0x6F6769646E69;
}

uint64_t sub_1BA69F2B8()
{
  return 0x6E776F7262;
}

uint64_t sub_1BA69F2C8()
{
  return 2036429415;
}

uint64_t sub_1BA69F2D8()
{
  return 0x3279617267;
}

uint64_t sub_1BA69F2E8()
{
  return 0x3379617267;
}

uint64_t sub_1BA69F2F8()
{
  return 0x3479617267;
}

uint64_t sub_1BA69F308()
{
  return 0x3579617267;
}

uint64_t sub_1BA69F318()
{
  return 0x3679617267;
}

uint64_t sub_1BA69F328()
{
  return 0x6C6562616CLL;
}

uint64_t sub_1BA69F338()
{
  return 0x7261646E6F636573;
}

unint64_t sub_1BA69F4F8()
{
  return 0xD000000000000016;
}

void sub_1BA69F510()
{
  JUMPOUT(0x1BA69F524);
}

uint64_t sub_1BA69F530@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = type metadata accessor for FormatEquationToken(0, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1);
  result = FormatEquationToken.description.getter(v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t FormatEquationToken.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, double))(v9 + 16))(v8, v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12[15] = *v8;
    return FormatEquationOperator.description.getter();
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 32))(v4, v8, v1);
    v10 = sub_1BB87420C();
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v10;
}

void FormatFloat.description.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA69F6C4()
{
  return sub_1BB872FDC();
}

uint64_t FormatEquationOperator.description.getter()
{
  char *v0;
  uint64_t v2;

  v2 = qword_1BB88B178[*v0];
  return MEMORY[0x1BCCE33A0](&v2, 1);
}

uint64_t FormatEquation.description.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *v4;
  v5 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = v5;
  type metadata accessor for FormatEquationToken(255, v15, v5, a4);
  v6 = sub_1BB872EE0();
  v7 = MEMORY[0x1E0DEAEC8];
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v6);
  v9 = MEMORY[0x1E0DEA968];
  v11 = sub_1BAA52384((void (*)(char *, char *))sub_1BA69F530, (uint64_t)&v14, v6, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v8, MEMORY[0x1E0DEDD18], v10);
  swift_bridgeObjectRelease();
  v17 = v11;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v9, (uint64_t (*)(_QWORD, uint64_t))v7);
  sub_1BA6A0BA4();
  v12 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t destroy for FormatImageNodeStyle.Selector(uint64_t a1)
{
  unsigned int v2;
  uint64_t result;

  swift_bridgeObjectRelease();
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) != 0)
    swift_release();
  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 <= 0xFD)
    sub_1BA6F2B88(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v2);
  if (*(unsigned __int8 *)(a1 + 136) != 254)
    swift_release();
  if ((~*(_QWORD *)(a1 + 144) & 0xF000000000000007) != 0)
    swift_release();
  if (*(_QWORD *)(a1 + 160) >= 4uLL)
    swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 184);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA69F9E8()
{
  return sub_1BA69F9FC();
}

uint64_t sub_1BA69F9FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];

  v10[5] = *MEMORY[0x1E0C80C00];
  v1 = v0[2];
  if (__OFADD__(v1, 1))
    __break(1u);
  v3 = *v0;
  v2 = v0[1];
  v0[2] = v1 + 1;
  v10[3] = &type metadata for TraversalOnlyEncoder;
  v10[4] = sub_1BA6ECAA0();
  sub_1BA6ECE94();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v5 = sub_1BB87420C();
  v7 = v6;
  *(_QWORD *)(inited + 56) = &type metadata for TraversalOnlyEncoder.AnyCodingKey;
  *(_QWORD *)(inited + 64) = sub_1BA69FB70();
  v8 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v7;
  *(_QWORD *)(v8 + 32) = v1;
  *(_BYTE *)(v8 + 40) = 0;
  swift_bridgeObjectRetain();
  sub_1BA6ECFFC(inited);
  v10[0] = v3;
  v10[1] = v2;
  swift_bridgeObjectRetain();
  sub_1BB872850();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA69FB70()
{
  unint64_t result;

  result = qword_1ED3A2AF8;
  if (!qword_1ED3A2AF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905718, &type metadata for TraversalOnlyEncoder.AnyCodingKey);
    atomic_store(result, (unint64_t *)&qword_1ED3A2AF8);
  }
  return result;
}

uint64_t sub_1BA69FBB4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA69FBE0();
  *a1 = result;
  return result;
}

uint64_t sub_1BA69FBE0()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x28)
    return 40;
  else
    return v0;
}

uint64_t FormatTextNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *);
  uint64_t v50;
  void (*v51)(char *);
  char *v52;
  uint64_t v53;
  void (*v54)(char *);
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t *v112;
  uint64_t v113;
  _BYTE v114[200];
  _BYTE v115[88];
  _QWORD v116[17];
  void (*v117)(char *);

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v98 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v99 = (char *)&v97 - v8;
  MEMORY[0x1E0C80A78](v9);
  v100 = (char *)&v97 - v10;
  MEMORY[0x1E0C80A78](v11);
  v101 = (uint64_t)&v97 - v12;
  MEMORY[0x1E0C80A78](v13);
  v102 = (uint64_t)&v97 - v14;
  MEMORY[0x1E0C80A78](v15);
  v103 = (char *)&v97 - v16;
  MEMORY[0x1E0C80A78](v17);
  v104 = (char *)&v97 - v18;
  MEMORY[0x1E0C80A78](v19);
  v105 = (char *)&v97 - v20;
  MEMORY[0x1E0C80A78](v21);
  v106 = (char *)&v97 - v22;
  MEMORY[0x1E0C80A78](v23);
  v107 = (char *)&v97 - v24;
  MEMORY[0x1E0C80A78](v25);
  v108 = (char *)&v97 - v26;
  MEMORY[0x1E0C80A78](v27);
  v109 = (char *)&v97 - v28;
  MEMORY[0x1E0C80A78](v29);
  v110 = (char *)&v97 - v30;
  MEMORY[0x1E0C80A78](v31);
  v111 = (char *)&v97 - v32;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v97 - v34;
  sub_1BAEC840C(0);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v97 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1[3];
  v39 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v40);
  v41 = sub_1BAEC84FC();
  v42 = sub_1BA4A2870(&qword_1ED3D0E50, (uint64_t (*)(uint64_t))sub_1BAEC84FC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v43, v40, v4, v41, (uint64_t)&type metadata for FormatVersions.JazzkonC, v39, (uint64_t)v38, v42, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v44 = v2[2];
  v45 = v2[3];
  v112 = v2;
  v46 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v46 != -1)
    swift_once();
  v47 = sub_1BB86EB84();
  v48 = __swift_project_value_buffer(v47, (uint64_t)qword_1ED476C20);
  v49 = *(void (**)(char *))(*(_QWORD *)(v47 - 8) + 16);
  v113 = v48;
  v49(v35);
  v50 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v51 = (void (*)(_QWORD, _QWORD, _QWORD))v117;
  sub_1BAD265E8(v44, v45, 0, 0, 0, (uint64_t)v35, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE4E594, (uint64_t (*)(uint64_t))sub_1BAEC8484, &qword_1ED3AE9B0);
  v52 = v38;
  if (v51)
  {
    sub_1BA4A2E80((uint64_t)v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v62 = (uint64_t)v38;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = (uint64_t)v111;
    v54 = v49;
    v55 = v112;
    v56 = v112[4];
    v57 = v112[5];
    v117 = v54;
    ((void (*)(char *, uint64_t, uint64_t))v54)(v111, v113, v47);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1B4CC(v56, v57, 1, 0, 0, v53, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v58 = v55;
    swift_beginAccess();
    v59 = (uint64_t)v110;
    v60 = (void (*)(char *, uint64_t, uint64_t))v117;
    ((void (*)(char *, uint64_t, uint64_t))v117)(v110, v113, v47);
    swift_storeEnumTagMultiPayload();
    v61 = swift_bridgeObjectRetain();
    sub_1BAD29C60(v61, 2, 0, 0);
    sub_1BA4A2E80(v59, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v64 = v58[7];
    v65 = (uint64_t)v109;
    v60(v109, v113, v47);
    swift_storeEnumTagMultiPayload();
    sub_1BA6E6C68(v64);
    sub_1BAD59C7C(v64, 3, 0, 0, v65, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v64);
    sub_1BA6A09F0((uint64_t)(v58 + 8), (uint64_t)v116, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
    v66 = (uint64_t)v108;
    v60(v108, v113, v47);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0C50(v116, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
    sub_1BAD59E94(v116, 4, 0, 0, v66, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v66, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0C50(v116, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
    v67 = v60;
    v68 = (uint64_t)v107;
    v67(v107, v113, v47);
    swift_storeEnumTagMultiPayload();
    v69 = swift_bridgeObjectRetain();
    sub_1BAD5A148(v69, 5, 0, 0, v68, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    sub_1BA6A09F0((uint64_t)(v58 + 25), (uint64_t)v115, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
    v70 = (uint64_t)v106;
    v67(v106, v113, v47);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v115, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD5A378((uint64_t)v115, 6, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v115, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    v71 = (uint64_t)v105;
    v67(v105, v113, v47);
    swift_storeEnumTagMultiPayload();
    v72 = swift_bridgeObjectRetain();
    sub_1BAD5A660(v72, 7, 0, 0, v71, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v71, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    sub_1BA6A09F0((uint64_t)(v58 + 37), (uint64_t)v114, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
    v73 = (uint64_t)v104;
    v67(v104, v113, v47);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5A890((uint64_t)v114, 8, 0, 0, v73, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v73, type metadata accessor for FormatVersionRequirement);
    v74 = v58[62];
    LOBYTE(v70) = *((_BYTE *)v58 + 504);
    v75 = (uint64_t)v103;
    v67(v103, v113, v47);
    v113 = v50;
    swift_storeEnumTagMultiPayload();
    sub_1BAD5AB34(v74, v70, 9, 0, 0, v75, (uint64_t)sub_1BA90CF04, 0);
    v76 = v47;
    v77 = (uint64_t)v52;
    sub_1BA4A2E80(v75, type metadata accessor for FormatVersionRequirement);
    v78 = v58[64];
    v79 = qword_1ED3C6D60;
    swift_bridgeObjectRetain();
    if (v79 != -1)
      swift_once();
    v80 = __swift_project_value_buffer(v76, (uint64_t)qword_1ED476C38);
    v81 = v102;
    ((void (*)(uint64_t, uint64_t, uint64_t))v117)(v102, v80, v76);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5AD14(v78, 10, 0, 0, v81, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v102, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v82 = v112[65];
    v83 = v112[66];
    sub_1BA6E8A60(v82, v83);
    if (qword_1ED3C6D40 != -1)
      swift_once();
    v84 = __swift_project_value_buffer(v76, (uint64_t)qword_1ED476BC0);
    v85 = v101;
    ((void (*)(uint64_t, uint64_t, uint64_t))v117)(v101, v84, v76);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5AF34(v82, v83, 11, 0, 0, v85, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v101, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E8A90(v82, v83);
    v86 = v112[67];
    v87 = v112[68];
    sub_1BA6E8A60(v86, v87);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v88 = __swift_project_value_buffer(v76, (uint64_t)qword_1ED476C08);
    v89 = (uint64_t)v100;
    ((void (*)(char *, uint64_t, uint64_t))v117)(v100, v88, v76);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5AF34(v86, v87, 12, 0, 0, v89, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v89, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E8A90(v86, v87);
    v90 = *((_BYTE *)v112 + 552);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v91 = __swift_project_value_buffer(v76, (uint64_t)qword_1ED476B78);
    v92 = (uint64_t)v99;
    ((void (*)(char *, uint64_t, uint64_t))v117)(v99, v91, v76);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5B154(v90, 13, 0, 0, v92, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v92, type metadata accessor for FormatVersionRequirement);
    v93 = v112[70];
    v94 = qword_1ED3C6D88;
    swift_bridgeObjectRetain();
    if (v94 != -1)
      swift_once();
    v95 = __swift_project_value_buffer(v76, (uint64_t)qword_1ED476C80);
    v96 = (uint64_t)v98;
    ((void (*)(char *, uint64_t, uint64_t))v117)(v98, v95, v76);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5AD14(v93, 14, 0, 0, v96, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v96, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v62 = v77;
  }
  return sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))sub_1BAEC840C);
}

uint64_t sub_1BA6A09F0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1BA4AD288(0, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t FeedModel.identifier.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 56));
  v3 = v2[1];
  if (!v3)
    return sub_1BB86DEE8();
  v4 = *v2;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v5 + 32) = v4;
  *(_QWORD *)(v5 + 40) = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v5 + 48) = sub_1BB86DEE8();
  *(_QWORD *)(v5 + 56) = v6;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v7 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1BA6A0B5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEA968]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BA6A0BA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B95D0;
  if (!qword_1ED3B95D0)
  {
    sub_1BA6A0B5C(255, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B95D0);
  }
  return result;
}

uint64_t sub_1BA6A0BFC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 80);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v4);
  return a1;
}

_QWORD *sub_1BA6A0C50(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

uint64_t sub_1BA6A0CAC()
{
  unsigned __int8 *v0;

  return sub_1BADDEB6C(*v0);
}

uint64_t sub_1BA6A0CB4()
{
  unsigned __int8 *v0;

  return sub_1BADFEB6C(*v0);
}

uint64_t sub_1BA6A0CBC()
{
  unsigned __int8 *v0;

  return sub_1BAE011DC(*v0);
}

uint64_t FormatTypeDefinition.Case.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  __int128 v37;
  char v38;
  uint64_t v39;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)v30 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v30 - v8;
  sub_1BAEC8A00(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v13 = v1[1];
  v15 = v1[3];
  v32 = v1[2];
  v33 = v15;
  v30[1] = v1[5];
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BAEC88F8();
  v19 = sub_1BA4A2870(&qword_1ED3D0F40, (uint64_t (*)(uint64_t))sub_1BAEC88F8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTypeDefinition.Case, v20, v16, (uint64_t)&type metadata for FormatTypeDefinition.Case, v18, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v12, v19, (uint64_t)&off_1E734BD80);
  v21 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = sub_1BB86EB84();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C20);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24(v9, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v25 = v39;
  sub_1BAD18B34(v14, v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v25)
  {
    v26 = (uint64_t)v34;
    v24(v34, v23, v22);
    swift_storeEnumTagMultiPayload();
    v27 = v33;
    swift_bridgeObjectRetain();
    sub_1BAD18B34(v32, v27, 1, 0, 0, v26, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v28 = (uint64_t)v31;
    v24(v31, v23, v22);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if ((sub_1BAE4BF74(v28, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v37 = xmmword_1BB8D2D60;
      v38 = 0;
      v35 = 0;
      v36 = 0xE000000000000000;
      sub_1BAEC8A78();
      sub_1BA4A2870(&qword_1ED3AEAC0, (uint64_t (*)(uint64_t))sub_1BAEC8A78, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAEC8A00);
}

unint64_t sub_1BA6A1098()
{
  unint64_t result;

  result = qword_1ED3AFE70;
  if (!qword_1ED3AFE70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFont, &type metadata for FormatFont);
    atomic_store(result, (unint64_t *)&qword_1ED3AFE70);
  }
  return result;
}

unint64_t sub_1BA6A10DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAE70;
  if (!qword_1ED3AAE70)
  {
    sub_1BA4AD288(255, &qword_1ED3AAE68, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82E050();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAE70);
  }
  return result;
}

unint64_t sub_1BA6A1154()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BF08;
  if (!qword_1ED39BF08)
  {
    sub_1BA4AD288(255, &qword_1ED3B9560, (uint64_t)&type metadata for FormatTextNodeTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA828A60();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BF08);
  }
  return result;
}

uint64_t _s8NewsFeed0B14LayoutCacheKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = 0, (sub_1BB874398() & 1) != 0))
  {
    v6 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v6 || (v5 = 0, (sub_1BB874398() & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v5 = 0, (sub_1BB874398() & 1) != 0))
      {
        if ((sub_1BA6A45BC(*(_QWORD **)(a1 + 48), *(_QWORD **)(a2 + 48)) & 1) == 0
          || *(unsigned __int8 *)(a1 + 56) != *(unsigned __int8 *)(a2 + 56))
        {
          goto LABEL_29;
        }
        if (*(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64) && *(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72)
          || (v5 = 0, (sub_1BB874398() & 1) != 0))
        {
          if (*(_QWORD *)(a1 + 80) == *(_QWORD *)(a2 + 80) && *(_QWORD *)(a1 + 88) == *(_QWORD *)(a2 + 88)
            || (v5 = 0, (sub_1BB874398() & 1) != 0))
          {
            if (*(_QWORD *)(a1 + 96) != *(_QWORD *)(a2 + 96))
            {
LABEL_29:
              v5 = 0;
              return v5 & 1;
            }
            v7 = sub_1BB8729A0();
            v9 = v8;
            if (v7 == sub_1BB8729A0() && v9 == v10)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              v11 = sub_1BB874398();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v5 = 0;
              if ((v11 & 1) == 0)
                return v5 & 1;
            }
            if (*(unsigned __int8 *)(a1 + 112) != *(unsigned __int8 *)(a2 + 112)
              || *(unsigned __int8 *)(a1 + 113) != *(unsigned __int8 *)(a2 + 113))
            {
              goto LABEL_29;
            }
            v5 = 0;
            if ((sub_1BA6A472C(*(_QWORD *)(*(_QWORD *)(a1 + 120) + 16), *(_QWORD *)(*(_QWORD *)(a2 + 120) + 16)) & 1) != 0
              && *(double *)(a1 + 128) == *(double *)(a2 + 128)
              && *(double *)(a1 + 136) == *(double *)(a2 + 136))
            {
              v5 = 0;
              if (*(double *)(a1 + 144) == *(double *)(a2 + 144) && *(double *)(a1 + 152) == *(double *)(a2 + 152))
              {
                v5 = 0;
                if (*(double *)(a1 + 160) == *(double *)(a2 + 160) && *(double *)(a1 + 168) == *(double *)(a2 + 168))
                {
                  type metadata accessor for FeedLayoutCacheKey();
                  sub_1BB86D93C();
                  sub_1BA4A2870((unint64_t *)&unk_1ED3C45A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB60A0], MEMORY[0x1E0DB60C0]);
                  sub_1BB872CF4();
                  sub_1BB872CF4();
                  if (v15 == v13 && v16 == v14)
                    v5 = 1;
                  else
                    v5 = sub_1BB874398();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return v5 & 1;
}

uint64_t sub_1BA6A14C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD, _QWORD, _QWORD)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  void (*v65)(_QWORD);
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  _BYTE *v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  void (*v93)(_QWORD, _QWORD, _QWORD);
  double v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t result;
  uint64_t *v98;
  uint64_t v99;
  _BYTE *v100;
  int *v101;
  uint64_t v102;
  double v103;
  double v104;
  uint64_t v105;
  char v106;
  int v107;
  uint64_t v108;
  uint64_t (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  unint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  int64_t i;
  double *v121;
  int *v122;
  double v123;
  uint64_t v124;
  unint64_t v125;
  int64_t v126;
  unint64_t v127;
  int64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  void (*v133)(_QWORD, _QWORD, _QWORD);
  uint64_t v134;
  uint64_t v135;
  void *v136;
  char v137;
  char v138;
  char v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  _QWORD *v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _BYTE *v151;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v153;
  uint64_t v154;
  char v155;
  unint64_t v156;
  uint64_t v157;
  _BOOL8 v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  unint64_t v162;
  char v163;
  uint64_t *v164;
  double *v165;
  int *v166;
  double v167;
  uint64_t v168;
  uint64_t v169;
  BOOL v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v174;
  uint64_t v175;
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void (*v197)(double *__return_ptr, uint64_t, uint64_t);
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t (*v204)(uint64_t, uint64_t);
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _BYTE *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _BYTE *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _BYTE *v222;
  _BYTE *v223;
  _BYTE *v224;
  _BYTE *v225;
  uint64_t v226;
  int *v227;
  int64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  _BYTE *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  unint64_t v237;
  uint64_t v238;
  void (*v239)(uint64_t *, uint64_t, uint64_t);
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _BYTE *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char v248;
  char v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char v256;
  char v257;
  uint64_t *v258;
  _QWORD *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t *v262;
  uint64_t v263;
  void *v264;
  uint64_t v265;
  double v266;
  uint64_t *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char v283;
  char v284;
  uint64_t v285;
  _BYTE v286[4];
  int v287;
  _QWORD *v288;
  uint64_t v289;
  uint64_t v290;
  _BYTE *v291;
  _BYTE *v292;
  _BYTE *v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  _BYTE *v301;
  _BYTE *v302;
  _BYTE *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t *v308;
  _BYTE *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  _BYTE *v313;
  uint64_t v314;
  uint64_t v315;
  void (*v316)(uint64_t *, uint64_t, uint64_t);
  uint64_t v317;
  _BYTE *v318;
  uint64_t v319;
  _QWORD *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  unint64_t v326;
  uint64_t v327;
  int64_t v328;
  uint64_t v329;
  _QWORD *v330;
  _BYTE *v331;
  uint64_t v332;
  uint64_t v333;
  int64_t v334;
  uint64_t v335;
  _BYTE *v336;
  _QWORD *v337;
  uint64_t v338;
  void (*v339)(__int128 *__return_ptr, __int128 *, __int128 *, void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t);
  int *v340;
  _BYTE *v341;
  double v342;
  uint64_t v343;
  void (*v344)(_QWORD, _QWORD, _QWORD);
  __int128 v345;
  char v346[9];
  __int128 v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  __int128 v351;
  _QWORD v352[8];
  __int128 v353;
  uint64_t v354;
  double v355;
  uint64_t v356;
  uint64_t v357;
  double v358;
  _BYTE *v359;
  _QWORD *v360;
  uint64_t v361;
  double v362[9];
  uint64_t v363;

  v9 = v6;
  v344 = a3;
  v298 = a2;
  v324 = a1;
  v308 = a6;
  v12 = *(_QWORD **)v9;
  v13 = sub_1BB86FC28();
  v295 = *(_QWORD *)(v13 - 8);
  v296 = v13;
  MEMORY[0x1E0C80A78](v13);
  v294 = (uint64_t *)&v286[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for FeedItem(0);
  v289 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v313 = &v286[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v290 = type metadata accessor for InternalErrorViewModel();
  MEMORY[0x1E0C80A78](v290);
  v293 = &v286[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v18);
  v303 = &v286[-v19];
  v20 = sub_1BB86D8A0();
  MEMORY[0x1E0C80A78](v20);
  v301 = &v286[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v306 = sub_1BB86DA68();
  v300 = *(_QWORD *)(v306 - 8);
  MEMORY[0x1E0C80A78](v306);
  v302 = &v286[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v23);
  v292 = &v286[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v25);
  v331 = &v286[-v26];
  v340 = (int *)type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v340);
  v291 = &v286[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v28);
  v309 = &v286[-v29];
  *(_QWORD *)&v345 = sub_1BB86D660();
  v343 = *(_QWORD *)(v345 - 8);
  MEMORY[0x1E0C80A78](v345);
  v363 = (uint64_t)&v286[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v342 = *(double *)(a4 - 8);
  MEMORY[0x1E0C80A78](v31);
  v33 = &v286[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = type metadata accessor for FeedLayoutCacheKey();
  MEMORY[0x1E0C80A78](v34);
  v320 = &v286[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v319 = sub_1BB86D7A4();
  v314 = *(_QWORD *)(v319 - 8);
  MEMORY[0x1E0C80A78](v319);
  v37 = &v286[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v38);
  v40 = &v286[-v39];
  v41 = v9 + v12[15];
  v315 = a4;
  v317 = a5;
  sub_1BA6DB170(v41, a4, a5);
  v312 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 152);
  v42 = v12[10];
  v43 = v12[11];
  v297 = v41;
  sub_1BB86D78C();
  v44 = *(_QWORD *)(*(_QWORD *)v9 + 96);
  v325 = v9;
  v45 = v9 + v44;
  v46 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 16);
  v304 = v43;
  v47 = v46(v42, v43);
  v318 = v40;
  sub_1BB86D708();
  v49 = v48;
  v51 = v50;
  sub_1BB86DD20();
  swift_beginAccess();
  v52 = *(_QWORD *)(v47 + 24);
  v53 = *(_QWORD *)(v52 + 16);
  v305 = v42;
  v299 = v45;
  v341 = v37;
  if (v53 && (v54 = sub_1BB4AB454(v49, v51), (v55 & 1) != 0))
  {
    v56 = *(_QWORD *)(*(_QWORD *)(v52 + 56) + 8 * v54);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v56 = sub_1BA6A2E0C(MEMORY[0x1E0DEE9D8]);
  }
  type metadata accessor for FormatLayoutSizeSnapshot();
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v56;
  sub_1BB86DD2C();
  swift_release();
  v58 = v325;
  v59 = (uint64_t *)(v58 + *(_QWORD *)(*(_QWORD *)v58 + 200));
  v60 = *v59;
  v61 = v59[1];
  v62 = v33;
  v63 = v33;
  v64 = v315;
  v316 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)&v342 + 16);
  v316(v62, v324, v315);
  v65 = *(void (**)(_QWORD))(v343 + 16);
  v66 = (_BYTE *)v363;
  v307 = v58 + *(_QWORD *)(*(_QWORD *)v58 + 112);
  v344 = (void (*)(_QWORD, _QWORD, _QWORD))v65;
  v65(v363);
  v67 = (uint64_t)v341;
  v343 = *(_QWORD *)(v314 + 16);
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v343)(v341, v318, v319);
  swift_bridgeObjectRetain();
  swift_retain();
  v68 = (uint64_t)v63;
  v69 = (uint64_t)v66;
  v70 = v320;
  v311 = v57;
  v71 = v317;
  sub_1BA6A2F44(v60, v61, v68, v69, v67, v57, v64, v317, v320);
  v72 = (_QWORD *)(v58 + *(_QWORD *)(*(_QWORD *)v58 + 104));
  v73 = v72[3];
  v74 = v72[4];
  __swift_project_boxed_opaque_existential_1(v72, v73);
  (*(void (**)(__int128 *__return_ptr, _QWORD *, uint64_t, uint64_t))(v74 + 16))(&v353, v70, v73, v74);
  if (*((_QWORD *)&v353 + 1))
  {
    LODWORD(v338) = v361;
    v75 = v358;
    v336 = v359;
    v337 = v360;
    v76 = v356;
    v77 = v357;
    v343 = v356;
    v344 = (void (*)(_QWORD, _QWORD, _QWORD))v357;
    v79 = v354;
    v78 = *(_QWORD *)&v355;
    v341 = (_BYTE *)v354;
    v342 = v355;
    v363 = *((_QWORD *)&v353 + 1);
    *(_QWORD *)&v345 = v353;
    sub_1BA6A3B90(v353, *((uint64_t *)&v353 + 1));
    v80 = v312;
    v82 = *(_QWORD *)v312;
    v81 = *(int **)(v312 + 8);
    v339 = *(void (**)(__int128 *__return_ptr, __int128 *, __int128 *, void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v312 + 16);
    v340 = v81;
    v83 = *(_BYTE *)(v312 + 24);
    *(_QWORD *)&v353 = v79;
    *((_QWORD *)&v353 + 1) = v78;
    v354 = v76;
    v355 = *(double *)&v77;
    v85 = v336;
    v84 = (uint64_t)v337;
    *(double *)&v356 = v75;
    v357 = (uint64_t)v336;
    v358 = *(double *)&v337;
    LOBYTE(v359) = v338;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6A3B20((uint64_t)&v353, v82, (uint64_t)v340, (uint64_t)v339, v83);
    v340 = v86;
    v88 = v87;
    v90 = v89;
    v92 = v91;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA4A2E80((uint64_t)v320, (uint64_t (*)(_QWORD))type metadata accessor for FeedLayoutCacheKey);
    (*(void (**)(_BYTE *, uint64_t))(v314 + 8))(v318, v319);
    *(_QWORD *)v80 = v340;
    *(_QWORD *)(v80 + 8) = v88;
    *(_QWORD *)(v80 + 16) = v90;
    *(_BYTE *)(v80 + 24) = v92 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v93 = v344;
    v95 = (uint64_t)v341;
    v94 = v342;
    v96 = v343;
    result = sub_1BA6A48D8(v345, v363);
    v98 = v308;
    *v308 = v95;
    *((double *)v98 + 1) = v94;
    v98[2] = v96;
    v98[3] = (uint64_t)v93;
    *((double *)v98 + 4) = v75;
    v98[5] = (uint64_t)v85;
    v98[6] = v84;
    *((_BYTE *)v98 + 56) = 2;
    return result;
  }
  v288 = v72;
  if (*(_BYTE *)(v312 + 24))
    v99 = 0;
  else
    v99 = *(_QWORD *)(v312 + 16);
  v100 = v309;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v343)(v309, v318, v319);
  v101 = v340;
  v344(&v100[v340[5]], v307, v345);
  v102 = *(_QWORD *)(v58 + *(_QWORD *)(*(_QWORD *)v58 + 136));
  sub_1BA4C2DD8(v58 + *(_QWORD *)(*(_QWORD *)v58 + 128), (uint64_t)&v100[v101[6]], type metadata accessor for FeedLayoutSolverOptions);
  swift_retain();
  sub_1BB86D5D0();
  v104 = v103;
  v105 = v315;
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v71 + 40))(&v353, v315, v71);
  v106 = v353;
  v107 = *(unsigned __int8 *)(v58 + *(_QWORD *)(*(_QWORD *)v58 + 176));
  *(_QWORD *)&v100[v101[10]] = v102;
  *(_QWORD *)&v100[v101[7]] = v99;
  *(double *)&v100[v101[8]] = v104;
  v100[v101[9]] = v106;
  v108 = v101[11];
  v287 = v107;
  v100[v108] = v107;
  *(_QWORD *)&v100[v101[12]] = v311;
  v109 = *(uint64_t (**)(uint64_t, uint64_t))(v71 + 56);
  swift_retain();
  v110 = v109(v105, v71);
  v323 = *(_QWORD *)(v110 + 16);
  if (v323)
  {
    v111 = 0;
    v112 = (_QWORD *)(v58 + *(_QWORD *)(*(_QWORD *)v58 + 192));
    v329 = v58 + *(_QWORD *)(*(_QWORD *)v58 + 184);
    v330 = v112;
    v322 = v110 + 32;
    v113 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v114 = v331;
    v321 = v110;
LABEL_13:
    if (v111 < *(_QWORD *)(v110 + 16))
    {
      v115 = *(_QWORD *)(v322 + (v111 << 6) + 40);
      v116 = *(_QWORD *)(v115 + 64);
      v326 = v111 + 1;
      v327 = v115 + 64;
      v117 = 1 << *(_BYTE *)(v115 + 32);
      if (v117 < 64)
        v118 = ~(-1 << v117);
      else
        v118 = -1;
      v119 = v118 & v116;
      v328 = (unint64_t)(v117 + 63) >> 6;
      v332 = v115;
      swift_bridgeObjectRetain();
      for (i = 0; ; i = v334)
      {
        v363 = (uint64_t)v113;
        if (v119)
        {
          v333 = (v119 - 1) & v119;
          v334 = i;
          v125 = __clz(__rbit64(v119)) | (i << 6);
        }
        else
        {
          v126 = i + 1;
          if (__OFADD__(i, 1))
          {
            __break(1u);
LABEL_66:
            __break(1u);
            break;
          }
          if (v126 >= v328)
            goto LABEL_12;
          v127 = *(_QWORD *)(v327 + 8 * v126);
          v128 = i + 1;
          if (!v127)
          {
            v128 = i + 2;
            if (i + 2 >= v328)
              goto LABEL_12;
            v127 = *(_QWORD *)(v327 + 8 * v128);
            if (!v127)
            {
              v128 = i + 3;
              if (i + 3 >= v328)
                goto LABEL_12;
              v127 = *(_QWORD *)(v327 + 8 * v128);
              if (!v127)
              {
                v129 = i + 4;
                if (i + 4 >= v328)
                {
LABEL_12:
                  swift_release();
                  v111 = v326;
                  v110 = v321;
                  if (v326 != v323)
                    goto LABEL_13;
                  swift_bridgeObjectRelease();
                  goto LABEL_48;
                }
                v127 = *(_QWORD *)(v327 + 8 * v129);
                if (!v127)
                {
                  while (1)
                  {
                    v128 = v129 + 1;
                    if (__OFADD__(v129, 1))
                      goto LABEL_66;
                    if (v128 >= v328)
                      goto LABEL_12;
                    v127 = *(_QWORD *)(v327 + 8 * v128);
                    ++v129;
                    if (v127)
                      goto LABEL_35;
                  }
                }
                v128 = i + 4;
              }
            }
          }
LABEL_35:
          v333 = (v127 - 1) & v127;
          v334 = v128;
          v125 = __clz(__rbit64(v127)) + (v128 << 6);
        }
        v130 = 16 * v125;
        v131 = *(_QWORD *)(v332 + 56);
        v132 = (_QWORD *)(*(_QWORD *)(v332 + 48) + v130);
        v133 = (void (*)(_QWORD, _QWORD, _QWORD))*v132;
        v134 = v132[1];
        v135 = v330[4];
        v343 = v330[3];
        v344 = v133;
        v338 = v135;
        v345 = *(_OWORD *)(v131 + v130);
        v342 = COERCE_DOUBLE(__swift_project_boxed_opaque_existential_1(v330, v343));
        v347 = v345;
        v137 = *(_BYTE *)(v329 + 8);
        v138 = *(_BYTE *)(v329 + 9);
        v139 = *(_BYTE *)(v329 + 10);
        v140 = *(_BYTE *)(v329 + 11);
        v141 = *(uint64_t *)(v329 + 16);
        v142 = *(uint64_t *)(v329 + 24);
        v143 = *(uint64_t *)(v329 + 32);
        v144 = *(_QWORD *)(v329 + 40);
        v145 = *(_BYTE *)(v329 + 48);
        v147 = *(_BYTE **)(v329 + 56);
        v146 = *(_QWORD **)(v329 + 64);
        v148 = *(_QWORD *)(v329 + 72);
        *(_QWORD *)&v353 = *(_QWORD *)v329;
        v136 = (void *)v353;
        BYTE8(v353) = v137;
        BYTE9(v353) = v138;
        BYTE10(v353) = v139;
        BYTE11(v353) = v140;
        v354 = v141;
        v355 = *(double *)&v142;
        v356 = v143;
        v357 = v144;
        LOBYTE(v358) = v145;
        v359 = v147;
        v360 = v146;
        v361 = v148;
        v335 = v148;
        v336 = v146;
        v339 = *(void (**)(__int128 *__return_ptr, __int128 *, __int128 *, void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v135 + 8);
        swift_bridgeObjectRetain();
        v341 = (_BYTE *)v345;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v345 = *((_QWORD *)&v345 + 1);
        swift_bridgeObjectRetain();
        v337 = v136;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA653B2C(v143, v144);
        v340 = v147;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v149 = (uint64_t)v344;
        v339(&v351, &v347, &v353, v344, v134, v343, v338);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1BA6DB13C(v143, v144);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v340 = (int *)*((_QWORD *)&v351 + 1);
        v150 = v351;
        v341 = (_BYTE *)v352[0];
        v342 = *(double *)&v352[1];
        v343 = v352[2];
        *(_QWORD *)&v345 = v352[3];
        v151 = (_BYTE *)v363;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v353 = v151;
        v153 = v149;
        v154 = v134;
        v156 = sub_1BA6E35A8(v149, v134);
        v157 = *((_QWORD *)v151 + 2);
        v158 = (v155 & 1) == 0;
        v159 = v157 + v158;
        if (__OFADD__(v157, v158))
        {
          __break(1u);
          goto LABEL_60;
        }
        v160 = v155;
        if (*((_QWORD *)v151 + 3) >= v159)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1BB4C60FC();
          v161 = v154;
          v113 = (_QWORD *)v353;
          if ((v160 & 1) != 0)
            goto LABEL_18;
        }
        else
        {
          sub_1BB4B495C(v159, isUniquelyReferenced_nonNull_native);
          v161 = v154;
          v162 = sub_1BA6E35A8(v153, v154);
          if ((v160 & 1) != (v163 & 1))
            goto LABEL_68;
          v156 = v162;
          v113 = (_QWORD *)v353;
          if ((v160 & 1) != 0)
          {
LABEL_18:
            v121 = (double *)(v113[7] + 48 * v156);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v122 = v340;
            *(_QWORD *)v121 = v150;
            *((_QWORD *)v121 + 1) = v122;
            v123 = v342;
            *((_QWORD *)v121 + 2) = v341;
            v121[3] = v123;
            v124 = v345;
            *((_QWORD *)v121 + 4) = v343;
            *((_QWORD *)v121 + 5) = v124;
            goto LABEL_19;
          }
        }
        v113[(v156 >> 6) + 8] |= 1 << v156;
        v164 = (uint64_t *)(v113[6] + 16 * v156);
        *v164 = v153;
        v164[1] = v161;
        v165 = (double *)(v113[7] + 48 * v156);
        v166 = v340;
        *(_QWORD *)v165 = v150;
        *((_QWORD *)v165 + 1) = v166;
        v167 = v342;
        *((_QWORD *)v165 + 2) = v341;
        v165[3] = v167;
        v168 = v345;
        *((_QWORD *)v165 + 4) = v343;
        *((_QWORD *)v165 + 5) = v168;
        v169 = v113[2];
        v170 = __OFADD__(v169, 1);
        v171 = v169 + 1;
        if (v170)
        {
          __break(1u);
          goto LABEL_63;
        }
        v113[2] = v171;
        swift_bridgeObjectRetain();
LABEL_19:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v114 = v331;
        v119 = v333;
      }
    }
    __break(1u);
LABEL_68:
    result = sub_1BB874560();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v113 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v114 = v331;
LABEL_48:
    v363 = (uint64_t)v113;
    v172 = v315;
    v355 = *(double *)&v315;
    v356 = v317;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v353);
    v316(boxed_opaque_existential_0, v324, v172);
    v174 = (uint64_t *)(v325 + *(_QWORD *)(*(_QWORD *)v325 + 160));
    swift_beginAccess();
    v175 = *v174;
    swift_bridgeObjectRetain();
    v176 = v302;
    sub_1BB86D624();
    v177 = (uint64_t)v301;
    sub_1BB86DA44();
    *(_QWORD *)&v345 = *(_QWORD *)(v300 + 8);
    ((void (*)(_BYTE *, uint64_t))v345)(v176, v306);
    LOBYTE(v351) = 2;
    swift_bridgeObjectRetain();
    sub_1BA6A4D08(&v353, v175, 0, v177, (unsigned __int8 *)&v351, (uint64_t)v113, (uint64_t)v114);
    sub_1BB86D624();
    v178 = (uint64_t)v114;
    v179 = v315;
    v343 = *(_QWORD *)(v317 + 32);
    ((void (*)(__int128 *__return_ptr, uint64_t))v343)(&v353, v315);
    v180 = v353;
    v351 = v353;
    v352[0] = v354;
    v181 = (*(uint64_t (**)(_BYTE *, __int128 *, uint64_t))(v304 + 8))(v176, &v351, v305);
    v182 = v180;
    v183 = v181;
    v184 = v325;
    sub_1BA6A32E0(v182);
    ((void (*)(_BYTE *, uint64_t))v345)(v176, v306);
    sub_1BA6A6D74((uint64_t)&v351, (char *)&v353, v184, (uint64_t)v320, v183, v178, (uint64_t)v309);
    LODWORD(v178) = v353;
    sub_1BA6A4404((uint64_t)v352, (uint64_t)&v353, &qword_1ED3B8010, (unint64_t *)&unk_1ED3B8000, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType);
    LODWORD(v344) = v178;
    if (v355 == 0.0)
    {
      sub_1BA65DBBC((uint64_t)&v353, &qword_1ED3B8010, (unint64_t *)&unk_1ED3B8000, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType);
      sub_1BB074B08();
      v208 = v303;
      *(_QWORD *)&v342 = &v303[*(int *)(v207 + 80)];
      *(_QWORD *)&v345 = *(_QWORD *)(v317 + 8);
      v209 = sub_1BB86DEE8();
      v211 = v210;
      ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t))v343)(&v353, v179, v317);
      v212 = v354;
      *(_QWORD *)v208 = v209;
      *((_QWORD *)v208 + 1) = v211;
      *((_OWORD *)v208 + 1) = v353;
      *((_QWORD *)v208 + 4) = v212;
      *((_QWORD *)v208 + 5) = v183;
      v213 = *((_QWORD *)&v351 + 1);
      *((_QWORD *)v208 + 6) = v351;
      *((_QWORD *)v208 + 7) = v213;
      v214 = v331;
      sub_1BA4C2DD8((uint64_t)v331, *(uint64_t *)&v342, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      swift_storeEnumTagMultiPayload();
      v215 = *(_QWORD *)(v184 + *(_QWORD *)(*(_QWORD *)v184 + 168));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v216 = sub_1BB8732F4();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v217 = swift_allocObject();
      *(_OWORD *)(v217 + 16) = xmmword_1BB87CE70;
      v218 = sub_1BB86DEE8();
      v220 = v219;
      *(_QWORD *)(v217 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v217 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v217 + 32) = v218;
      *(_QWORD *)(v217 + 40) = v220;
      v221 = v317;
      sub_1BB86EF44("Failed to bind any layouts for group %{public}@", 47, 2, &dword_1BA493000, v215, v216, v217);
      swift_bridgeObjectRelease();
      v222 = v293;
      sub_1BA4C2DD8((uint64_t)v208, (uint64_t)v293, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewModel);
      v223 = v292;
      sub_1BA4C2DD8((uint64_t)v214, (uint64_t)v292, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      v224 = v309;
      v225 = v291;
      sub_1BA4C2DD8((uint64_t)v309, (uint64_t)v291, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      _s13InternalErrorCMa();
      swift_allocObject();
      v343 = sub_1BB691464((uint64_t)v222, (uint64_t)v223, (uint64_t)v225);
      sub_1BB690E1C((uint64_t)v224, (uint64_t)&v353);
      v104 = *((double *)&v353 + 1);
      v51 = *(double *)&v354;
      v7 = v355;
      v8 = *(double *)&v356;
      v226 = v357;
      v342 = v358;
      v227 = (int *)(*(uint64_t (**)(uint64_t, uint64_t))(v221 + 16))(v315, v221);
      v228 = *((_QWORD *)v227 + 2);
      if (v228)
      {
        v341 = (_BYTE *)v226;
        *(_QWORD *)&v353 = MEMORY[0x1E0DEE9D8];
        sub_1BA6A4CDC(0, v228, 0);
        v229 = *(unsigned __int8 *)(v289 + 80);
        v340 = v227;
        v230 = (uint64_t)v227 + ((v229 + 32) & ~v229);
        *(_QWORD *)&v345 = *(_QWORD *)(v289 + 72);
        v231 = *(uint64_t *)&v353;
        do
        {
          v232 = v313;
          sub_1BA4C2DD8(v230, (uint64_t)v313, type metadata accessor for FeedItem);
          v233 = swift_allocObject();
          FeedItem.identifier.getter();
          *(_QWORD *)(v233 + 16) = v234;
          *(_QWORD *)(v233 + 24) = v235;
          sub_1BA4A2E80((uint64_t)v232, type metadata accessor for FeedItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BA6A4CDC(0, *(_QWORD *)(v231 + 16) + 1, 1);
            v231 = *(uint64_t *)&v353;
          }
          v237 = *(_QWORD *)(v231 + 16);
          v236 = *(_QWORD *)(v231 + 24);
          if (v237 >= v236 >> 1)
          {
            sub_1BA6A4CDC(v236 > 1, v237 + 1, 1);
            v231 = *(uint64_t *)&v353;
          }
          *(_QWORD *)(v231 + 16) = v237 + 1;
          *(_QWORD *)(v231 + 8 * v237 + 32) = v233;
          v230 += v345;
          --v228;
          v238 = v325;
          v239 = (void (*)(uint64_t *, uint64_t, uint64_t))v316;
        }
        while (v228);
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_63:
        swift_bridgeObjectRelease();
        *(double *)&v231 = MEMORY[0x1E0DEE9D8];
        v238 = v325;
        v239 = (void (*)(uint64_t *, uint64_t, uint64_t))v316;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v259 = (_QWORD *)(v238 + *(_QWORD *)(*(_QWORD *)v238 + 144));
      v260 = v259[4];
      v341 = (_BYTE *)v259[3];
      v340 = (int *)__swift_project_boxed_opaque_existential_1(v259, (uint64_t)v341);
      v261 = v315;
      v355 = *(double *)&v315;
      v356 = v317;
      v262 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v353);
      v239(v262, v324, v261);
      *(_QWORD *)&v345 = type metadata accessor for FeedLayoutSolver.Errors(0, v305, v304, v263);
      v363 = MEMORY[0x1BCCE5B24](&unk_1BB94E968, v345);
      v264 = (void *)swift_allocError();
      *(double *)v265 = v104;
      *(double *)(v265 + 8) = v51;
      *(double *)(v265 + 16) = v7;
      *(double *)(v265 + 24) = v8;
      v266 = v342;
      *(double *)(v265 + 32) = *(double *)&v231;
      *(double *)(v265 + 40) = v266;
      *(_QWORD *)(v265 + 48) = MEMORY[0x1E0DEE9D8];
      *(_BYTE *)(v265 + 56) = (_BYTE)v344;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v267 = v294;
      sub_1BB77E2D0((uint64_t)v303, 0, v294);
      v268 = sub_1BB78002C();
      v270 = v269;
      (*(void (**)(uint64_t *, uint64_t))(v295 + 8))(v267, v296);
      *(_QWORD *)&v347 = v264;
      *((_QWORD *)&v347 + 1) = v268;
      v348 = v270;
      (*(void (**)(__int128 *, __int128 *, _BYTE *, uint64_t))(v260 + 8))(&v353, &v347, v341, v260);

      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v353);
      v271 = v312;
      v272 = *(_QWORD *)v312;
      v273 = *(_QWORD *)(v312 + 8);
      v274 = *(_QWORD *)(v312 + 16);
      v275 = *(_BYTE *)(v312 + 24);
      *(double *)&v353 = v104;
      *((double *)&v353 + 1) = v51;
      *(double *)&v354 = v7;
      v355 = v8;
      v356 = v231;
      *(double *)&v357 = v266;
      v276 = MEMORY[0x1E0DEE9D8];
      v358 = MEMORY[0x1E0DEE9D8];
      LOBYTE(v359) = (_BYTE)v344;
      sub_1BA6A3B20((uint64_t)&v353, v272, v273, v274, v275);
      v278 = v277;
      v280 = v279;
      v282 = v281;
      v284 = v283;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)v271 = v278;
      *(_QWORD *)(v271 + 8) = v280;
      *(_QWORD *)(v271 + 16) = v282;
      *(_BYTE *)(v271 + 24) = v284 & 1;
      swift_allocError();
      *(double *)v285 = v104;
      *(double *)(v285 + 8) = v51;
      *(double *)(v285 + 16) = v7;
      *(double *)(v285 + 24) = v8;
      *(double *)(v285 + 32) = *(double *)&v231;
      *(double *)(v285 + 40) = v266;
      *(_QWORD *)(v285 + 48) = v276;
      *(_BYTE *)(v285 + 56) = (_BYTE)v344;
      swift_willThrow();
      swift_release();
      swift_release();
      sub_1BA4A2E80((uint64_t)v303, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewModel);
      sub_1BA6A6CAC((uint64_t)&v351);
      sub_1BA4A2E80((uint64_t)v331, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      sub_1BA4A2E80((uint64_t)v309, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      sub_1BA4A2E80((uint64_t)v320, (uint64_t (*)(_QWORD))type metadata accessor for FeedLayoutCacheKey);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v314 + 8))(v318, v319);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BA4CECCC(&v353, (uint64_t)&v347);
      sub_1BA6A6D24(&v347);
      v185 = *(_QWORD *)(v184 + *(_QWORD *)(*(_QWORD *)v184 + 168));
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v186 = swift_allocObject();
      *(_OWORD *)(v186 + 16) = xmmword_1BB87A390;
      v187 = sub_1BB86DEE8();
      v189 = v188;
      v190 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v186 + 56) = MEMORY[0x1E0DEA968];
      v191 = sub_1BA6A2D8C();
      *(_QWORD *)(v186 + 64) = v191;
      *(_QWORD *)(v186 + 32) = v187;
      *(_QWORD *)(v186 + 40) = v189;
      __swift_project_boxed_opaque_existential_1(&v347, v349);
      v192 = sub_1BB86DEE8();
      *(_QWORD *)(v186 + 96) = v190;
      *(_QWORD *)(v186 + 104) = v191;
      *(_QWORD *)(v186 + 72) = v192;
      *(_QWORD *)(v186 + 80) = v193;
      v194 = sub_1BB87330C();
      sub_1BB86EF44("Best layout for group %{public}@, layout=%{public}@", 51, 2, &dword_1BA493000, v185, v194, v186);
      swift_bridgeObjectRelease();
      v195 = v349;
      v196 = v350;
      __swift_project_boxed_opaque_existential_1(&v347, v349);
      v197 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v196 + 32);
      v198 = v196;
      v199 = v317;
      v197(v362, v195, v198);
      v104 = v362[1];
      v51 = v362[2];
      v7 = v362[3];
      v8 = v362[4];
      v200 = (*(uint64_t (**)(uint64_t, uint64_t))(v199 + 16))(v179, v199);
      sub_1BA6A5B0C((uint64_t)v362);
      v201 = v310;
      *(_QWORD *)&v345 = sub_1BB70CBA0(v200, (uint64_t)v362);
      v310 = v201;
      sub_1BA6A4460((uint64_t)v362);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v363 = *(_QWORD *)&v362[6];
      sub_1BA6A4404(v298, (uint64_t)&v353, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
      v202 = *(_QWORD *)&v355;
      if (v355 == 0.0)
      {
LABEL_60:
        swift_bridgeObjectRetain();
        sub_1BA65DBBC((uint64_t)&v353, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
        sub_1BA6A4460((uint64_t)v362);
        v206 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v203 = v356;
        __swift_project_boxed_opaque_existential_1(&v353, *(uint64_t *)&v355);
        v346[0] = v287;
        v204 = *(uint64_t (**)(uint64_t, uint64_t))(v199 + 80);
        swift_bridgeObjectRetain();
        v205 = v204(v179, v199);
        v206 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, double, double, double, double))(v203 + 8))(v297, v307, v346, v205, v202, v203, v104, v51, v7, v8);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v353);
        sub_1BA6A4460((uint64_t)v362);
      }
      v240 = v288[3];
      v241 = v288[4];
      __swift_project_boxed_opaque_existential_1(v288, v240);
      *(double *)&v353 = v104;
      *((double *)&v353 + 1) = v51;
      *(double *)&v354 = v7;
      v355 = v8;
      v242 = *(uint64_t *)&v345;
      v243 = (_BYTE *)v363;
      v356 = *(uint64_t *)&v345;
      v357 = v363;
      v358 = *(double *)&v206;
      LOBYTE(v359) = (_BYTE)v344;
      (*(void (**)(_QWORD *, __int128 *, __int128 *, BOOL, uint64_t, uint64_t))(v241 + 32))(v320, &v347, &v353, (_DWORD)v344 == 0, v240, v241);
      v244 = v312;
      v245 = *(_QWORD *)v312;
      v246 = *(_QWORD *)(v312 + 8);
      v247 = *(_QWORD *)(v312 + 16);
      v248 = *(_BYTE *)(v312 + 24);
      *(double *)&v353 = v104;
      *((double *)&v353 + 1) = v51;
      *(double *)&v354 = v7;
      v355 = v8;
      v356 = v242;
      v357 = (uint64_t)v243;
      v358 = *(double *)&v206;
      v249 = (char)v344;
      LOBYTE(v359) = (_BYTE)v344;
      sub_1BA6A3B20((uint64_t)&v353, v245, v246, v247, v248);
      v251 = v250;
      v253 = v252;
      v255 = v254;
      v257 = v256;
      swift_release();
      sub_1BA6A6CAC((uint64_t)&v351);
      sub_1BA4A2E80((uint64_t)v331, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      sub_1BA4A2E80((uint64_t)v309, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      sub_1BA4A2E80((uint64_t)v320, (uint64_t (*)(_QWORD))type metadata accessor for FeedLayoutCacheKey);
      (*(void (**)(_BYTE *, uint64_t))(v314 + 8))(v318, v319);
      *(_QWORD *)v244 = v251;
      *(_QWORD *)(v244 + 8) = v253;
      *(_QWORD *)(v244 + 16) = v255;
      *(_BYTE *)(v244 + 24) = v257 & 1;
      v258 = v308;
      *(double *)v308 = v104;
      *((double *)v258 + 1) = v51;
      *((double *)v258 + 2) = v7;
      *((double *)v258 + 3) = v8;
      v258[4] = v345;
      v258[5] = (uint64_t)v243;
      v258[6] = v206;
      *((_BYTE *)v258 + 56) = v249;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v347);
    }
  }
  return result;
}

unint64_t sub_1BA6A2D8C()
{
  unint64_t result;

  result = qword_1ED3D4430;
  if (!qword_1ED3D4430)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED3D4430);
  }
  return result;
}

uint64_t type metadata accessor for InternalErrorViewModel()
{
  uint64_t result;

  result = qword_1ED3B6FE8;
  if (!qword_1ED3B6FE8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA6A2E0C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F5B98();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatLayoutSizeSnapshot()
{
  return objc_opt_self();
}

uint64_t sub_1BA6A2F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(unint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72[3];

  v67 = a6;
  v63 = a5;
  v64 = a4;
  v61 = a1;
  v62 = a2;
  v13 = type metadata accessor for FeedItem(0);
  v68 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a9 = (*(uint64_t (**)(uint64_t, uint64_t, double))(a8 + 88))(a7, a8, v14);
  a9[1] = v17;
  a9[2] = sub_1BB86DEE8();
  a9[3] = v18;
  v59 = *(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 32);
  v59(v72, a7, a8);
  v19 = v72[0];
  v69 = v72[0];
  v70 = v72[1];
  v71 = v72[2];
  v20 = FeedGroupKind.identifier.getter();
  v22 = v21;
  sub_1BA6A32E0(v19);
  a9[4] = v20;
  a9[5] = v22;
  a9[10] = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 48))(a7, a8);
  a9[11] = v23;
  v65 = a3;
  v66 = a9;
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(a8 + 16);
  v60 = a8;
  v25 = v24(a7, a8);
  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v58 = a7;
    v72[0] = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v26, 0);
    v27 = *(unsigned __int8 *)(v68 + 80);
    v57 = v25;
    v28 = v25 + ((v27 + 32) & ~v27);
    v68 = *(_QWORD *)(v68 + 72);
    v29 = v72[0];
    do
    {
      sub_1BA4C2DD8(v28, (uint64_t)v16, type metadata accessor for FeedItem);
      FeedItem.identifier.getter();
      v31 = v30;
      v33 = v32;
      sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FeedItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v29 + 16) + 1, 1);
        v29 = v72[0];
      }
      v35 = *(_QWORD *)(v29 + 16);
      v34 = *(_QWORD *)(v29 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1BA7447E8(v34 > 1, v35 + 1, 1);
        v29 = v72[0];
      }
      *(_QWORD *)(v29 + 16) = v35 + 1;
      v36 = v29 + 16 * v35;
      *(_QWORD *)(v36 + 32) = v31;
      *(_QWORD *)(v36 + 40) = v33;
      v28 += v68;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    v37 = v67;
    a7 = v58;
  }
  else
  {
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9D8];
    v37 = v67;
  }
  v39 = v65;
  v38 = v66;
  v66[6] = v29;
  v59(v72, a7, v60);
  v40 = v72[0] > 0xA;
  sub_1BA6A32E0(v72[0]);
  *((_BYTE *)v38 + 56) = v40;
  v41 = v62;
  v38[8] = v61;
  v38[9] = v41;
  v42 = v64;
  v38[12] = sub_1BB86D63C();
  v43 = v63;
  sub_1BB86D780();
  v38[16] = v44;
  v38[17] = v45;
  sub_1BB86D6FC();
  v38[18] = v46;
  v38[19] = v47;
  sub_1BB86D708();
  v38[20] = v48;
  v38[21] = v49;
  v50 = (void *)sub_1BB86D738();
  v51 = objc_msgSend(v50, sel_preferredContentSizeCategory);

  v38[13] = v51;
  type metadata accessor for FeedLayoutCacheKey();
  sub_1BB86D750();
  *((_BYTE *)v38 + 112) = UIAccessibilityIsInvertColorsEnabled();
  v52 = (void *)sub_1BB86D738();
  v53 = objc_msgSend(v52, sel_legibilityWeight);

  if ((unint64_t)v53 >= 2)
    LOBYTE(v53) = UIAccessibilityIsBoldTextEnabled();
  v54 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v43, v54);
  v55 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v42, v55);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 8))(v39, a7);
  *((_BYTE *)v38 + 113) = (_BYTE)v53;
  v38[15] = v37;
  return result;
}

unint64_t sub_1BA6A32E0(unint64_t result)
{
  if (result >= 0xB)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FeedLayoutCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  v11 = *(int *)(a3 + 76);
  v16 = a2 + v11;
  v17 = a1 + v11;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v12 = sub_1BB86D93C();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v9;
  swift_retain();
  v15(v17, v16, v12);
  return a1;
}

uint64_t sub_1BA6A342C(uint64_t a1, uint64_t a2)
{
  return BlueprintSection<>.feedGroupKind.getter(a1, *(_QWORD *)(a2 - 8));
}

uint64_t BlueprintSection<>.feedGroupKind.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86FCB8();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

_QWORD *sub_1BA6A34C8(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

uint64_t sub_1BA6A34E8()
{
  _BYTE v1[72];

  sub_1BB8745CC();
  FeedLayoutCacheKey.hash(into:)((uint64_t)v1);
  return sub_1BB874608();
}

uint64_t FeedLayoutCacheKey.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;

  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v3 = v1[6];
  sub_1BB8745D8();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      swift_bridgeObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  sub_1BB8745E4();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  sub_1BB8745D8();
  v6 = (void *)v1[13];
  sub_1BB8729A0();
  v7 = v6;
  sub_1BB872A90();

  swift_bridgeObjectRelease();
  sub_1BB8745E4();
  sub_1BB8745E4();
  v8 = *(_QWORD *)(v1[15] + 16);
  swift_retain();
  sub_1BA6A37C0(a1, v8);
  swift_release();
  sub_1BB8745FC();
  sub_1BB8745FC();
  sub_1BB8745FC();
  sub_1BB8745FC();
  sub_1BB8745FC();
  sub_1BB8745FC();
  type metadata accessor for FeedLayoutCacheKey();
  sub_1BB86D93C();
  sub_1BA4A2870(&qword_1ED3C4598, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB60A0], MEMORY[0x1E0DB60B0]);
  return sub_1BB872868();
}

uint64_t type metadata accessor for FeedLayoutCacheKey()
{
  uint64_t result;

  result = qword_1ED3C5588;
  if (!qword_1ED3C5588)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA6A37C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_19;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
        break;
    }
LABEL_18:
    v4 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    sub_1BB8745FC();
    sub_1BB8745FC();
    result = sub_1BB874608();
    v7 ^= result;
  }
  v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_1BB8745D8();
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

unint64_t FeedGroupKind.identifier.getter()
{
  _QWORD *v0;
  unint64_t result;
  _QWORD *v2;

  result = 7364967;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
    case 2:
      result = 0x656E696C64616568;
      break;
    case 3:
      result = 0x7453736575737369;
      break;
    case 4:
      result = 0x7247736575737369;
      break;
    case 5:
      result = 0xD000000000000011;
      break;
    case 6:
      result = 0x736E6F69676572;
      break;
    case 7:
      result = 25697;
      break;
    case 8:
      result = 0x69726F6765746163;
      break;
    case 9:
      result = 0x656D656761676E65;
      break;
    case 0xALL:
      result = 0x6E6967756C70;
      break;
    default:
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v2);
      swift_release();
      swift_bridgeObjectRelease();
      result = 0x2D74616D726F66;
      break;
  }
  return result;
}

void sub_1BA6A3B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;

  if ((a5 & 1) == 0)
  {
    v6 = *(_QWORD *)(a1 + 32);
    CGRectGetHeight(*(CGRect *)a1);
    if (__OFADD__(a4, *(_QWORD *)(v6 + 16)))
      __break(1u);
  }
}

uint64_t sub_1BA6A3B90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 160));
  swift_beginAccess();
  v6 = *v5;
  if (*(_QWORD *)(*v5 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BA6E35A8(a1, a2);
    if ((v8 & 1) != 0)
      v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    else
      v9 = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  result = swift_endAccess();
  if (v9 == -1)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v5;
    *v5 = 0x8000000000000000;
    sub_1BA6A3E18(v9 + 1, a1, a2, isUniquelyReferenced_nonNull_native);
    *v5 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1BA6A3CB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(_QWORD))
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v7 = v5;
  v12 = *v5;
  v14 = sub_1BA6E35A8(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1BA6A7710(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v22 = (uint64_t *)(v20[6] + 16 * v14);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v23 = v20[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v20[2] = v25;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BA6A4974(result, a4 & 1, a5);
  result = sub_1BA6E35A8(a2, a3);
  if ((v18 & 1) == (v21 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA6A3E18(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA6A3CB0(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA6A4C78);
}

uint64_t sub_1BA6A3E24()
{
  return sub_1BB86E7D0();
}

uint64_t BlueprintSection<>.feedSlots.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;

  v6 = type metadata accessor for FeedItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86FCB8();
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(v10, a2);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (!*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9D30, (uint64_t)&type metadata for FeedSlot, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1BB87CE70;
    v16 = BlueprintSection<>.feedItems.getter(a1, a2, a3);
    v17 = *(_QWORD *)(v16 + 16);
    v18 = MEMORY[0x1E0DEE9D8];
    if (v17)
    {
      v39 = MEMORY[0x1E0DEE9D8];
      sub_1BA7447E8(0, v17, 0);
      v19 = *(unsigned __int8 *)(v7 + 80);
      v37[1] = v16;
      v20 = v16 + ((v19 + 32) & ~v19);
      v21 = *(_QWORD *)(v7 + 72);
      v22 = v39;
      do
      {
        sub_1BA6DB2D0(v20, (uint64_t)v9);
        FeedItem.identifier.getter();
        v24 = v23;
        v26 = v25;
        sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FeedItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA7447E8(0, *(_QWORD *)(v22 + 16) + 1, 1);
          v22 = v39;
        }
        v28 = *(_QWORD *)(v22 + 16);
        v27 = *(_QWORD *)(v22 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1BA7447E8(v27 > 1, v28 + 1, 1);
          v22 = v39;
        }
        *(_QWORD *)(v22 + 16) = v28 + 1;
        v29 = v22 + 16 * v28;
        *(_QWORD *)(v29 + 32) = v24;
        *(_QWORD *)(v29 + 40) = v26;
        v20 += v21;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      v18 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v22 = MEMORY[0x1E0DEE9D8];
    }
    v30 = sub_1BA6E43EC(v22);
    swift_bridgeObjectRelease();
    v31 = sub_1BA6A4188(v18);
    v32 = sub_1BA6A419C(v18);
    v33 = sub_1BA6A42C8(v18);
    v34 = (_QWORD *)v38;
    *(_QWORD *)(v38 + 32) = 42;
    v34[5] = 0xE100000000000000;
    v34[6] = v30;
    v34[7] = v31;
    v15 = (uint64_t)v34;
    v34[8] = v32;
    v34[9] = v33;
    v35 = MEMORY[0x1E0DEE9E8];
    v34[10] = v18;
    v34[11] = v35;
  }
  return v15;
}

uint64_t BlueprintSection<>.feedItems.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10[1] = *(_OWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v11 = a2;
  v12 = v4;
  v13 = a3;
  v14 = v5;
  v6 = type metadata accessor for FeedItem(0);
  v7 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB7B98], a1);
  return sub_1BAA52384((void (*)(char *, char *))sub_1BA64E1C8, (uint64_t)v10, a1, v6, MEMORY[0x1E0DEDCE8], v7, MEMORY[0x1E0DEDD18], v8);
}

unint64_t sub_1BA6A4188(uint64_t a1)
{
  return sub_1BA6A41B0(a1, (void (*)(_QWORD))sub_1BA6C3CCC, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA6A419C(uint64_t a1)
{
  return sub_1BA6A41B0(a1, (void (*)(_QWORD))sub_1BA6C3EEC, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA6A41B0(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a2(0);
  v5 = (_QWORD *)sub_1BB873F6C();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = a3(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (_QWORD *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA6A42C8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F6314();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t FeedGroupDescribing.feedSlots.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA6A4404(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v7;

  sub_1BA5B089C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BA6A4460(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t FeedGroupRepresentable.feedGroupIdentifier.getter()
{
  return sub_1BB86DEE8();
}

uint64_t sub_1BA6A4498(uint64_t a1)
{
  return BlueprintSection<>.feedGroupContextIdentifier.getter(a1);
}

uint64_t BlueprintSection<>.feedGroupContextIdentifier.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB7B90], a1);
  v2 = MEMORY[0x1E0DEA968];
  sub_1BB872BF8();
  swift_release();
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v2, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v3 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BA6A45BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1BB874398(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1BB874398() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t BlueprintSection<>.layoutOrder.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86FCB8();
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

_BYTE *sub_1BA6A4714(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

uint64_t sub_1BA6A4720()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA6A472C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  double v20;
  double v21;
  unint64_t v22;
  char v23;
  char v24;
  double *v25;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = 16 * v11;
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v15);
    v17 = *v16;
    v18 = v16[1];
    v19 = (double *)(*(_QWORD *)(v3 + 56) + v15);
    v21 = *v19;
    v20 = v19[1];
    swift_bridgeObjectRetain();
    v22 = sub_1BA6E35A8(v17, v18);
    v24 = v23;
    result = swift_bridgeObjectRelease();
    if ((v24 & 1) != 0)
    {
      v25 = (double *)(*(_QWORD *)(a2 + 56) + 16 * v22);
      if (*v25 == v21 && v25[1] == v20)
        continue;
    }
    return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BA6A48D8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BA6A4928(unint64_t result)
{
  if (result >= 0xB)
  {
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_1BA6A495C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_1BA6A4928(v2);
}

uint64_t sub_1BA6A4974(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v38 = a2;
  v7 = sub_1BB873F54();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          v4 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v36)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v35;
  v23 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

void sub_1BA6A4C78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9B60)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9B60);
  }
}

uint64_t sub_1BA6A4CDC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA74466C(a1, a2, a3, *v3, &qword_1ED3B9D08, (uint64_t)&type metadata for FeedItemLayoutAttributes);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA6A4D08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  int v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v61 = a6;
  v62 = a7;
  v65 = a4;
  LODWORD(v64) = a3;
  v10 = type metadata accessor for FeedItem(0);
  v58 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86D8A0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v60 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = *a5;
  *(_QWORD *)&v18[v19[14]] = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v18[v19[15]] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v18[v19[19]] = 0;
  sub_1BA4C010C((uint64_t)a1, (uint64_t)(v18 + 8));
  *((_QWORD *)v18 + 6) = a2;
  v21 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 56))(v21, v20);
  sub_1BA6A5AC4(0, &qword_1ED3B9368, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A5A6C();
  sub_1BA6A6C68();
  v22 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 9) = v22;
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  *((_QWORD *)v18 + 10) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 56))(v23, v24);
  v25 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  *((_QWORD *)v18 + 7) = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(v25, v26);
  v27 = swift_bridgeObjectRetain();
  v28 = sub_1BA6CAEAC(v27);
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 8) = v28;
  v18[v16[16]] = v64;
  v29 = &v18[v16[13]];
  v63 = v14;
  v64 = v13;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v30(v29, v65, v13);
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v75);
  if (v59 == 2)
  {
    v31 = v76;
    v32 = v77;
    __swift_project_boxed_opaque_existential_1(v75, v76);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v32 + 40))(&v78, v31, v32);
    v33 = v78;
  }
  else
  {
    v33 = v59 & 1;
    LOBYTE(v78) = v59 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  *v18 = v33;
  v34 = v60;
  *((_QWORD *)v18 + 12) = v61;
  v18[88] = 0;
  v35 = v64;
  v30(v34, v65, v64);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v63 + 88))(v34, v35);
  if (v36 == *MEMORY[0x1E0DB5FC8])
  {
    v37 = a1[3];
    v38 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v37);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v38 + 72))(&v66, v37, v38);
    if ((v74 & 1) != 0 || (v71 & 1) != 0)
      v39 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v39 = v70;
    *(_QWORD *)&v18[v16[18]] = v39;
    v43 = a1[3];
    v44 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v43);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v44 + 72))(&v66, v43, v44);
    if ((v74 & 1) == 0)
    {
      v45 = v72;
      v46 = (v73 & 1) == 0;
      goto LABEL_19;
    }
  }
  else
  {
    if (v36 != *MEMORY[0x1E0DB5FD0])
    {
      result = sub_1BB873EAC();
      __break(1u);
      return result;
    }
    v40 = a1[3];
    v41 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v40);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v41 + 72))(&v66, v40, v41);
    if ((v74 & 1) != 0 || (v67 & 1) != 0)
      v42 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v42 = v66;
    *(_QWORD *)&v18[v16[18]] = v42;
    v47 = a1[3];
    v48 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v47);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v48 + 72))(&v66, v47, v48);
    if ((v74 & 1) == 0)
    {
      v45 = v68;
      v46 = (v69 & 1) == 0;
LABEL_19:
      if (v46)
        v49 = v45;
      else
        v49 = 0;
      goto LABEL_22;
    }
  }
  v49 = 0;
LABEL_22:
  *(_QWORD *)&v18[v16[17]] = v49;
  v50 = a1[3];
  v51 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v50);
  v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 16))(v50, v51);
  v53 = *(_QWORD *)(v52 + 16);
  if (v53)
  {
    v54 = v52 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
    v55 = *(_QWORD *)(v58 + 72);
    do
    {
      sub_1BA4C2DD8(v54, (uint64_t)v12, type metadata accessor for FeedItem);
      sub_1BA6A5444((uint64_t)v12);
      sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FeedItem);
      v54 += v55;
      --v53;
    }
    while (v53);
  }
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v65, v64);
  swift_bridgeObjectRelease();
  sub_1BA5193C4((uint64_t)v18, v62, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t destroy for FeedItemSupplementaryAttributes(id *a1)
{
  uint64_t result;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3)
  {
    swift_bridgeObjectRelease();
    swift_release();

    v3 = (char *)a1 + *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
    type metadata accessor for InternalErrorViewModel();
    if (swift_getEnumCaseMultiPayload() != 1)
    {

      return swift_release();
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)v3 + 2) >= 0xBuLL)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB074B08();
    v5 = &v3[*(int *)(v4 + 80)];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v5 + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = &v5[*(int *)(type metadata accessor for GroupLayoutBindingContext() + 52)];
    v7 = sub_1BB86D8A0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if ((_DWORD)result == 2)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA6A5400(uint64_t a1, uint64_t a2)
{
  return BlueprintSection<>.feedSlots.getter(a1, *(_QWORD *)(a2 - 8), *(_QWORD *)(a2 - 16));
}

double sub_1BA6A540C@<D0>(uint64_t a1@<X8>)
{
  return FeedGroupRepresentable.feedGroupBindingOptions.getter(a1);
}

double FeedGroupRepresentable.feedGroupBindingOptions.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 41) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 57) = 1;
  return result;
}

uint64_t sub_1BA6A543C(uint64_t a1, uint64_t a2)
{
  return BlueprintSection<>.layoutOrder.getter(a1, *(_QWORD *)(a2 - 8));
}

void sub_1BA6A5444(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  char *v12;
  char *v13;

  v2 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v2);
  v13 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v9);
  sub_1BA4C2DD8(a1, (uint64_t)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v12 = (char *)sub_1BA6A5624 + 4 * byte_1BB8AB9A0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA6A5624()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 32) = v2;
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 48);
  sub_1BA6B2F5C(v0 + 16, 0, 0);
  return sub_1BA6B3C50(v0 + 16);
}

void sub_1BA6A5A04()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(v1 + 208);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v1 + 192);
  *(_OWORD *)(v0 + 224) = v2;
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v1 + 224);
  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v1 + 240);
  v3 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 160) = v3;
  v4 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(v0 + 192) = v4;
  v5 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 96) = v5;
  v6 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 128) = v6;
  v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 32) = v7;
  v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 64) = v8;
  sub_1BACA3B94(v0 + 16, 0, 0);
  sub_1BA93EC1C(v0 + 16);
  JUMPOUT(0x1BA6A59E4);
}

unint64_t sub_1BA6A5A6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B9370;
  if (!qword_1ED3B9370)
  {
    sub_1BA6A5AC4(255, &qword_1ED3B9368, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B9370);
  }
  return result;
}

void sub_1BA6A5AC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for FeedSlot);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BA6A5B0C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t GroupLayoutInventory.layouts(column:kind:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  _BYTE *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  unint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t inited;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  _BYTE v61[16];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v3 = v2;
  v6 = sub_1BB86DA68();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v61[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v61[-v11];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v61[-v14];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v61[-v17];
  v21 = MEMORY[0x1E0C80A78](v19);
  v22 = &v61[-v20];
  switch(*a2)
  {
    case 0:
      sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BB87A390;
      *(_QWORD *)(v26 + 56) = &_s3GapVN;
      *(_QWORD *)(v26 + 64) = sub_1BA6B054C();
      *(_BYTE *)(v26 + 32) = 2;
      *(_QWORD *)(v26 + 40) = 0;
      *(_BYTE *)(v26 + 48) = 6;
      *(_QWORD *)(v26 + 96) = &_s10GapOfflineVN;
      *(_QWORD *)(v26 + 104) = sub_1BA6B0590();
      *(_BYTE *)(v26 + 72) = 2;
      *(_QWORD *)(v26 + 80) = 0;
      *(_BYTE *)(v26 + 88) = 6;
      return v26;
    case 1:
    case 2:
      v23 = *a2;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v7 + 16))(&v61[-v20], a1, v6, v21);
      v24 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 88))(v22, v6);
      if (v24 == *MEMORY[0x1E0DB6228])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v25 = swift_allocObject();
        v26 = v25;
        *(_OWORD *)(v25 + 16) = xmmword_1BB87D7A0;
        if (v23 == 2)
        {
          *(_QWORD *)(v25 + 56) = &type metadata for A6_V1;
          *(_QWORD *)(v25 + 64) = sub_1BA7DDEB8();
          *(_BYTE *)(v26 + 32) = 2;
          *(_QWORD *)(v26 + 40) = 1;
          *(_BYTE *)(v26 + 48) = 6;
          *(_QWORD *)(v26 + 96) = &type metadata for A6_V3;
          v27 = sub_1BA7DD6B4();
        }
        else
        {
          *(_QWORD *)(v25 + 56) = &type metadata for A6_V3;
          *(_QWORD *)(v25 + 64) = sub_1BA7DD6B4();
          *(_BYTE *)(v26 + 32) = 2;
          *(_QWORD *)(v26 + 40) = 1;
          *(_BYTE *)(v26 + 48) = 6;
          *(_QWORD *)(v26 + 96) = &type metadata for A6_V1;
          v27 = sub_1BA7DDEB8();
        }
        *(_QWORD *)(v26 + 104) = v27;
        *(_BYTE *)(v26 + 72) = 2;
        *(_QWORD *)(v26 + 80) = 1;
        *(_BYTE *)(v26 + 88) = 6;
        *(_QWORD *)(v26 + 136) = &type metadata for A6_V4;
        *(_QWORD *)(v26 + 144) = sub_1BA6B2E24();
        *(_BYTE *)(v26 + 112) = 2;
        *(_QWORD *)(v26 + 120) = 1;
        *(_BYTE *)(v26 + 128) = 6;
        *(_QWORD *)(v26 + 176) = &type metadata for A6_V2;
        *(_QWORD *)(v26 + 184) = sub_1BA6B3D6C();
        *(_BYTE *)(v26 + 152) = 2;
        *(_QWORD *)(v26 + 160) = 2;
        *(_BYTE *)(v26 + 168) = 6;
        return v26;
      }
      if (v24 == *MEMORY[0x1E0DB6238])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB881B90;
        *(_QWORD *)(v26 + 56) = &type metadata for A12_V25;
        *(_QWORD *)(v26 + 64) = sub_1BA8EE2F8();
        *(_BYTE *)(v26 + 32) = 2;
        *(_QWORD *)(v26 + 40) = 0;
        *(_BYTE *)(v26 + 48) = 6;
        *(_QWORD *)(v26 + 96) = &type metadata for A12_V24;
        *(_QWORD *)(v26 + 104) = sub_1BA8EE33C();
        *(_BYTE *)(v26 + 72) = 3;
        *(_QWORD *)(v26 + 80) = 0;
        *(_BYTE *)(v26 + 88) = 6;
        *(_QWORD *)(v26 + 136) = &type metadata for A12_V23;
        *(_QWORD *)(v26 + 144) = sub_1BA8EE380();
        *(_BYTE *)(v26 + 112) = 2;
        *(_QWORD *)(v26 + 120) = 0;
        *(_BYTE *)(v26 + 128) = 6;
        *(_QWORD *)(v26 + 176) = &type metadata for A12_V7;
        *(_QWORD *)(v26 + 184) = sub_1BA8EE3C4();
        *(_BYTE *)(v26 + 152) = 2;
        *(_QWORD *)(v26 + 160) = 1;
        *(_BYTE *)(v26 + 168) = 6;
        *(_QWORD *)(v26 + 216) = &type metadata for A12_V1;
        *(_QWORD *)(v26 + 224) = sub_1BA8EE408();
        *(_BYTE *)(v26 + 192) = 2;
        *(_QWORD *)(v26 + 200) = 0;
        *(_BYTE *)(v26 + 208) = 6;
        *(_QWORD *)(v26 + 256) = &type metadata for A12_V2;
        *(_QWORD *)(v26 + 264) = sub_1BA8EE44C();
        *(_BYTE *)(v26 + 232) = 2;
        *(_QWORD *)(v26 + 240) = 1;
        *(_BYTE *)(v26 + 248) = 6;
        *(_QWORD *)(v26 + 296) = &type metadata for A12_V19;
        v33 = sub_1BA8EE490();
        *(_QWORD *)(v26 + 304) = v33;
        *(_BYTE *)(v26 + 272) = 2;
        *(_QWORD *)(v26 + 280) = 1;
        *(_BYTE *)(v26 + 288) = 6;
        *(_QWORD *)(v26 + 336) = &type metadata for A12_V8;
        *(_QWORD *)(v26 + 344) = sub_1BA8EE4D4();
        *(_BYTE *)(v26 + 312) = 2;
        *(_QWORD *)(v26 + 320) = 1;
        *(_BYTE *)(v26 + 328) = 6;
        *(_QWORD *)(v26 + 376) = &type metadata for A12_V3;
        *(_QWORD *)(v26 + 384) = sub_1BA8EE518();
        *(_BYTE *)(v26 + 352) = 2;
        *(_QWORD *)(v26 + 360) = 1;
        *(_BYTE *)(v26 + 368) = 6;
        *(_QWORD *)(v26 + 416) = &type metadata for A12_V4;
        *(_QWORD *)(v26 + 424) = sub_1BA8EE55C();
        *(_BYTE *)(v26 + 392) = 2;
        *(_QWORD *)(v26 + 400) = 1;
        *(_BYTE *)(v26 + 408) = 6;
        *(_QWORD *)(v26 + 456) = &type metadata for A12_V5;
        *(_QWORD *)(v26 + 464) = sub_1BA8EE5A0();
        *(_BYTE *)(v26 + 432) = 2;
        *(_QWORD *)(v26 + 440) = 1;
        *(_BYTE *)(v26 + 448) = 6;
        *(_QWORD *)(v26 + 496) = &type metadata for A12_V6;
        *(_QWORD *)(v26 + 504) = sub_1BA8EE5E4();
        *(_BYTE *)(v26 + 472) = 2;
        *(_QWORD *)(v26 + 480) = 0;
        *(_BYTE *)(v26 + 488) = 6;
        *(_QWORD *)(v26 + 536) = &type metadata for A12_V9;
        *(_QWORD *)(v26 + 544) = sub_1BA8EE628();
        *(_BYTE *)(v26 + 512) = 2;
        *(_QWORD *)(v26 + 520) = 0;
        *(_BYTE *)(v26 + 528) = 6;
        *(_QWORD *)(v26 + 576) = &type metadata for A12_V10;
        *(_QWORD *)(v26 + 584) = sub_1BA8EE66C();
        *(_BYTE *)(v26 + 552) = 0;
        *(_QWORD *)(v26 + 560) = 0;
        *(_BYTE *)(v26 + 568) = 6;
        *(_QWORD *)(v26 + 616) = &type metadata for A12_V11;
        *(_QWORD *)(v26 + 624) = sub_1BA8EE6B0();
        *(_BYTE *)(v26 + 592) = 1;
        *(_QWORD *)(v26 + 600) = 1;
        *(_BYTE *)(v26 + 608) = 6;
        *(_QWORD *)(v26 + 656) = &type metadata for A12_V12;
        *(_QWORD *)(v26 + 664) = sub_1BA8EE6F4();
        *(_BYTE *)(v26 + 632) = 0;
        *(_QWORD *)(v26 + 640) = 1;
        *(_BYTE *)(v26 + 648) = 6;
        *(_QWORD *)(v26 + 696) = &type metadata for A12_V13;
        *(_QWORD *)(v26 + 704) = sub_1BA8EE738();
        *(_BYTE *)(v26 + 672) = 0;
        *(_QWORD *)(v26 + 680) = 1;
        *(_BYTE *)(v26 + 688) = 6;
        *(_QWORD *)(v26 + 736) = &type metadata for A12_V17;
        *(_QWORD *)(v26 + 744) = sub_1BA8EE77C();
        *(_BYTE *)(v26 + 712) = 2;
        *(_QWORD *)(v26 + 720) = 2;
        *(_BYTE *)(v26 + 728) = 6;
        *(_QWORD *)(v26 + 776) = &type metadata for A12_V14;
        *(_QWORD *)(v26 + 784) = sub_1BA8EE7C0();
        *(_BYTE *)(v26 + 752) = 0;
        *(_QWORD *)(v26 + 760) = 1;
        *(_BYTE *)(v26 + 768) = 6;
        *(_QWORD *)(v26 + 816) = &type metadata for A12_V15;
        *(_QWORD *)(v26 + 824) = sub_1BA8EE804();
        *(_BYTE *)(v26 + 792) = 0;
        *(_QWORD *)(v26 + 800) = 0;
        *(_BYTE *)(v26 + 808) = 6;
        *(_QWORD *)(v26 + 856) = &type metadata for A12_V16;
        *(_QWORD *)(v26 + 864) = sub_1BA8EE848();
        *(_BYTE *)(v26 + 832) = 2;
        *(_QWORD *)(v26 + 840) = 2;
        *(_BYTE *)(v26 + 848) = 6;
        *(_QWORD *)(v26 + 896) = &type metadata for A12_V19;
        *(_QWORD *)(v26 + 904) = v33;
        *(_BYTE *)(v26 + 872) = 2;
        *(_QWORD *)(v26 + 880) = 1;
        *(_BYTE *)(v26 + 888) = 6;
        *(_QWORD *)(v26 + 936) = &type metadata for A12_V20;
        *(_QWORD *)(v26 + 944) = sub_1BA8EE88C();
        *(_BYTE *)(v26 + 912) = 0;
        *(_QWORD *)(v26 + 920) = 1;
        *(_BYTE *)(v26 + 928) = 6;
        return v26;
      }
      if (v24 == *MEMORY[0x1E0DB6240])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB881B80;
        *(_QWORD *)(v26 + 56) = &type metadata for A18_V17;
        *(_QWORD *)(v26 + 64) = sub_1BA8EDFC8();
        *(_BYTE *)(v26 + 32) = 2;
        *(_QWORD *)(v26 + 40) = 1;
        *(_BYTE *)(v26 + 48) = 6;
        *(_QWORD *)(v26 + 96) = &type metadata for A18_V15;
        *(_QWORD *)(v26 + 104) = sub_1BA8EE00C();
        *(_BYTE *)(v26 + 72) = 2;
        *(_QWORD *)(v26 + 80) = 1;
        *(_BYTE *)(v26 + 88) = 6;
        *(_QWORD *)(v26 + 136) = &type metadata for A18_V2;
        v51 = sub_1BA8EE050();
        *(_QWORD *)(v26 + 144) = v51;
        *(_BYTE *)(v26 + 112) = 2;
        *(_QWORD *)(v26 + 120) = 0;
        *(_BYTE *)(v26 + 128) = 6;
        *(_QWORD *)(v26 + 176) = &type metadata for A18_V3;
        *(_QWORD *)(v26 + 184) = sub_1BA8EE094();
        *(_BYTE *)(v26 + 152) = 2;
        *(_QWORD *)(v26 + 160) = 1;
        *(_BYTE *)(v26 + 168) = 6;
        *(_QWORD *)(v26 + 216) = &type metadata for A18_V1;
        *(_QWORD *)(v26 + 224) = sub_1BA8EE0D8();
        *(_BYTE *)(v26 + 192) = 2;
        *(_QWORD *)(v26 + 200) = 1;
        *(_BYTE *)(v26 + 208) = 6;
        *(_QWORD *)(v26 + 256) = &type metadata for A18_V4;
        *(_QWORD *)(v26 + 264) = sub_1BA8EE11C();
        *(_BYTE *)(v26 + 232) = 2;
        *(_QWORD *)(v26 + 240) = 1;
        *(_BYTE *)(v26 + 248) = 6;
        *(_QWORD *)(v26 + 296) = &type metadata for A18_V6;
        *(_QWORD *)(v26 + 304) = sub_1BA8EE160();
        *(_BYTE *)(v26 + 272) = 2;
        *(_QWORD *)(v26 + 280) = 1;
        *(_BYTE *)(v26 + 288) = 6;
        *(_QWORD *)(v26 + 336) = &type metadata for A18_V2;
        *(_QWORD *)(v26 + 344) = v51;
        *(_BYTE *)(v26 + 312) = 2;
        *(_QWORD *)(v26 + 320) = 0;
        *(_BYTE *)(v26 + 328) = 6;
        *(_QWORD *)(v26 + 376) = &type metadata for A18_V8;
        *(_QWORD *)(v26 + 384) = sub_1BA8EE1A4();
        *(_BYTE *)(v26 + 352) = 2;
        *(_QWORD *)(v26 + 360) = 1;
        *(_BYTE *)(v26 + 368) = 6;
        *(_QWORD *)(v26 + 416) = &type metadata for A18_V10;
        *(_QWORD *)(v26 + 424) = sub_1BA8EE1E8();
        *(_BYTE *)(v26 + 392) = 2;
        *(_QWORD *)(v26 + 400) = 1;
        *(_BYTE *)(v26 + 408) = 6;
        *(_QWORD *)(v26 + 456) = &type metadata for A18_V11;
        *(_QWORD *)(v26 + 464) = sub_1BA8EE22C();
        *(_BYTE *)(v26 + 432) = 2;
        *(_QWORD *)(v26 + 440) = 1;
        *(_BYTE *)(v26 + 448) = 6;
        *(_QWORD *)(v26 + 496) = &type metadata for A18_V12;
        *(_QWORD *)(v26 + 504) = sub_1BA8EE270();
        *(_BYTE *)(v26 + 472) = 2;
        *(_QWORD *)(v26 + 480) = 2;
        *(_BYTE *)(v26 + 488) = 6;
        *(_QWORD *)(v26 + 536) = &type metadata for A18_V16;
        *(_QWORD *)(v26 + 544) = sub_1BA8EE2B4();
        *(_BYTE *)(v26 + 512) = 1;
        *(_QWORD *)(v26 + 520) = 1;
        *(_BYTE *)(v26 + 528) = 6;
        return v26;
      }
      v60 = 0;
      goto LABEL_55;
    case 3:
      (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v7 + 16))(v18, a1, v6, v21);
      v30 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 88))(v18, v6);
      if (v30 != *MEMORY[0x1E0DB6228] && v30 != *MEMORY[0x1E0DB6238] && v30 != *MEMORY[0x1E0DB6240])
      {
        v60 = 0;
        goto LABEL_55;
      }
      sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BB87A390;
      *(_QWORD *)(v26 + 56) = &type metadata for G_V1;
      *(_QWORD *)(v26 + 64) = sub_1BA8EDF40();
      *(_BYTE *)(v26 + 32) = 2;
      *(_QWORD *)(v26 + 40) = 1;
      *(_BYTE *)(v26 + 48) = 6;
      *(_QWORD *)(v26 + 96) = &type metadata for G_V2;
      *(_QWORD *)(v26 + 104) = sub_1BA8EDF84();
      *(_BYTE *)(v26 + 72) = 2;
      *(_QWORD *)(v26 + 80) = 2;
      *(_BYTE *)(v26 + 88) = 6;
      return v26;
    case 4:
      (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v7 + 16))(v15, a1, v6, v21);
      v28 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 88))(v15, v6);
      if (v28 == *MEMORY[0x1E0DB6228])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v26 + 56) = &type metadata for H6_V1;
        v29 = sub_1BA8EDEFC();
        goto LABEL_46;
      }
      if (v28 == *MEMORY[0x1E0DB6238])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v26 + 56) = &type metadata for H12_V1;
        v29 = sub_1BA8EDEB8();
        goto LABEL_46;
      }
      if (v28 == *MEMORY[0x1E0DB6240])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v26 + 56) = &type metadata for H18_V1;
        v29 = sub_1BA8EDE74();
        goto LABEL_46;
      }
      v60 = 0;
      goto LABEL_55;
    case 5:
      (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v7 + 16))(v12, a1, v6, v21);
      v34 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 88))(v12, v6);
      if (v34 == *MEMORY[0x1E0DB6228])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v26 + 56) = &type metadata for J6_V1;
        v29 = sub_1BA8EDE30();
        goto LABEL_46;
      }
      if (v34 == *MEMORY[0x1E0DB6238])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v26 + 56) = &type metadata for J12_V1;
        v29 = sub_1BA8EDDEC();
        goto LABEL_46;
      }
      if (v34 == *MEMORY[0x1E0DB6240])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v26 + 56) = &type metadata for J18_V1;
        v29 = sub_1BA8EDDA8();
        goto LABEL_46;
      }
      v60 = 0;
LABEL_55:
      result = sub_1BB873EAC();
      __break(1u);
      return result;
    case 6:
      v26 = MEMORY[0x1E0DEE9D8];
      MEMORY[0x1BCCDE9CC]("The .regions FeedGroupKind should never be handed off to FeedLayoutSolver, but split into regions with real FeedGroupKinds instead.", 131, 2, MEMORY[0x1E0DEE9D8], v21);
      return v26;
    case 7:
      sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v26 + 56) = &_s2AdVN;
      v29 = sub_1BA6A76CC();
      goto LABEL_46;
    case 8:
      (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v7 + 16))(v9, a1, v6, v21);
      v35 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 88))(v9, v6);
      if (v35 == *MEMORY[0x1E0DB6228])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v26 + 56) = &type metadata for M6_V1;
        v29 = sub_1BA8EDD20();
LABEL_46:
        *(_QWORD *)(v26 + 64) = v29;
        *(_BYTE *)(v26 + 32) = 2;
        *(_QWORD *)(v26 + 40) = 0;
        *(_BYTE *)(v26 + 48) = 6;
        return v26;
      }
      if (v35 == *MEMORY[0x1E0DB6238])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v26 + 56) = &type metadata for M12_V1;
        v29 = sub_1BA8EDCDC();
        goto LABEL_46;
      }
      if (v35 == *MEMORY[0x1E0DB6240])
      {
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v26 + 56) = &type metadata for M18_V1;
        v29 = sub_1BA8EDC98();
        goto LABEL_46;
      }
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
      return MEMORY[0x1E0DEE9D8];
    case 9:
      sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v26 + 56) = &_s10EngagementVN;
      v29 = sub_1BA8EDC54();
      goto LABEL_46;
    case 10:
      sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v26 + 56) = &type metadata for PluginGroupLayoutFactory;
      *(_QWORD *)(v26 + 64) = sub_1BA8EDD64();
      return v26;
    default:
      v36 = v3;
      v37 = a2[1];
      v38 = a2[2];
      v39 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
      v40 = *a2;
      swift_beginAccess();
      v41 = *v39;
      v42 = v39[1];
      v43 = v39[2];
      v44 = v40;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = sub_1BB86DA5C();
      v62 = v41;
      v63 = v42;
      v64 = v43;
      v46 = FormatGroupCollection.subscript.getter(v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v46)
        goto LABEL_49;
      if (*(_QWORD *)(v46 + 16))
      {
        type metadata accessor for FormatLogger();
        swift_retain();
        inited = swift_initStaticObject();
        type metadata accessor for FormatOptionConverter();
        v48 = (_QWORD *)swift_allocObject();
        v49 = sub_1BA8EE9C0(v44, inited, v48, (uint64_t (*)(_QWORD, double))type metadata accessor for FormatLogger, (uint64_t)&protocol witness table for FormatLogger, sub_1BA7AD72C);
        MEMORY[0x1E0C80A78](v49);
        *(_QWORD *)&v61[-48] = v44;
        *(_QWORD *)&v61[-40] = v36;
        *(_QWORD *)&v61[-32] = v50;
        *(_QWORD *)&v61[-24] = v37;
        v59 = v38;
        v26 = sub_1BA8A1A70((void (*)(__int128 *__return_ptr, _OWORD *))sub_1BA5E32C4, (uint64_t)&v61[-64], v46);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return v26;
      }
      swift_bridgeObjectRelease();
LABEL_49:
      sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480);
      v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_1BB87A390;
      v54 = sub_1BB86DA5C();
      v55 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v53 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v53 + 64) = v55;
      *(_QWORD *)(v53 + 32) = v54;
      v62 = v40;
      type metadata accessor for FormatPackageInventory();
      sub_1BA4A2870(&qword_1ED3AFAF8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, (uint64_t)&protocol conformance descriptor for FormatPackageInventory);
      v56 = sub_1BB87420C();
      v58 = v57;
      *(_QWORD *)(v53 + 96) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v53 + 104) = sub_1BA6A2D8C();
      *(_QWORD *)(v53 + 72) = v56;
      *(_QWORD *)(v53 + 80) = v58;
      MEMORY[0x1BCCDE9CC]("Expected to get at least one group for %d columns, but got %{public}@!", 70, 2, v53);
      swift_release();
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
  }
}

unint64_t sub_1BA6A6C68()
{
  unint64_t result;

  result = qword_1ED3B2AC8;
  if (!qword_1ED3B2AC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedSlot, &type metadata for FeedSlot);
    atomic_store(result, (unint64_t *)&qword_1ED3B2AC8);
  }
  return result;
}

uint64_t sub_1BA6A6CAC(uint64_t a1)
{
  destroy for FeedLayoutSolverResult(a1);
  return a1;
}

uint64_t destroy for FeedLayoutSolverResult(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  return result;
}

uint64_t sub_1BA6A6D24(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v1 = sub_1BB86DEE8();
  sub_1BA6A3B90(v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA6A6D74(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  __int128 v13;
  char v14;
  _OWORD v15[3];
  uint64_t v16;

  result = sub_1BA6A6E2C(a4, a5, a6, a7, (uint64_t)v15);
  if (*(_QWORD *)&v15[0])
  {
    v13 = v15[1];
    *(_OWORD *)a1 = v15[0];
    *(_OWORD *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 32) = v15[2];
    *(_QWORD *)(a1 + 48) = v16;
    v14 = 1;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA753068);
    result = sub_1BA7C1310(a5, a6, a7, (uint64_t *)a1);
    v14 = 0;
  }
  *a2 = v14;
  return result;
}

uint64_t sub_1BA6A6E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;

  v6 = v5;
  v12 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 104));
  v16 = v15[3];
  v17 = v15[4];
  __swift_project_boxed_opaque_existential_1(v15, v16);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(a1, v16, v17);
  if (v19)
  {
    v20 = v19;
    v41 = a4;
    *(_QWORD *)&v42 = v14;
    v21 = a3;
    v22 = *(_QWORD *)(a2 + 16);
    if (v22)
    {
      v23 = result;
      v24 = a2 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BA4C010C(v24, (uint64_t)&v43);
        __swift_project_boxed_opaque_existential_1(&v43, v44);
        if (sub_1BB86DEE8() == v23 && v20 == v25)
          break;
        v27 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v27 & 1) != 0)
          goto LABEL_13;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
        v24 += 40;
        if (!--v22)
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      sub_1BA4CECCC(&v43, (uint64_t)&v45);
    }
    else
    {
LABEL_11:
      v47 = 0;
      v45 = 0u;
      v46 = 0u;
    }
    swift_bridgeObjectRelease();
    v28 = v21;
    v29 = v42;
    if (*((_QWORD *)&v46 + 1))
    {
      sub_1BA4CECCC(&v45, (uint64_t)v48);
      v30 = *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 168));
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v31 = swift_allocObject();
      v42 = xmmword_1BB87CE70;
      *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
      __swift_project_boxed_opaque_existential_1(v48, v49);
      v32 = sub_1BB86DEE8();
      v34 = v33;
      *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v31 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v31 + 32) = v32;
      *(_QWORD *)(v31 + 40) = v34;
      v35 = sub_1BB87330C();
      sub_1BB86EF44("Found layout for fast cache path, layout=%{public}@", 51, 2, &dword_1BA493000, v30, v35, v31);
      swift_bridgeObjectRelease();
      sub_1BA4C2DD8(v28, v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      v36 = v49;
      v37 = v50;
      __swift_project_boxed_opaque_existential_1(v48, v49);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 48))(&v45, v29, v41, v36, v37);
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3B9F60, (unint64_t *)&unk_1ED3B8000, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = v42;
      sub_1BA4C010C((uint64_t)&v45, v38 + 32);
      sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      sub_1BA4CECCC(&v45, a5 + 16);
      v39 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)a5 = v38;
      *(_QWORD *)(a5 + 8) = v39;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    }
    result = sub_1BA65DBBC((uint64_t)&v45, (unint64_t *)&unk_1ED3B6FD0, (unint64_t *)&qword_1ED3B6FC0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType);
  }
  *(_QWORD *)(a5 + 48) = 0;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)a5 = 0u;
  return result;
}

uint64_t sub_1BA6A72AC(uint64_t a1, uint64_t a2, __int128 *a3, int a4)
{
  return FeedLayoutCache.store(cacheKey:feedGroupLayout:layoutResult:saveToDatabase:)(a1, a2, a3, a4);
}

uint64_t sub_1BA6A72CC(uint64_t a1)
{
  return FeedLayoutCache.bindLookup(cacheKey:)(a1);
}

uint64_t FeedLayoutCache.store(cacheKey:feedGroupLayout:layoutResult:saveToDatabase:)(uint64_t a1, uint64_t a2, __int128 *a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[2];
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v5 = v4;
  v29 = a4;
  v9 = type metadata accessor for FeedLayoutCacheKey();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v32 = *a3;
  v13 = *((_QWORD *)a3 + 2);
  v31 = *((_QWORD *)a3 + 3);
  v14 = *((_QWORD *)a3 + 4);
  v15 = *((_QWORD *)a3 + 5);
  v16 = *((_QWORD *)a3 + 6);
  v30 = *((unsigned __int8 *)a3 + 56);
  v33 = *(_QWORD *)(v5 + 16);
  v28 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)&v27 - v17, v18);
  v27 = a2;
  sub_1BA4C010C(a2, (uint64_t)v36);
  __swift_project_boxed_opaque_existential_1(v36, *((uint64_t *)&v37 + 1));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_1BB86DEE8();
  v21 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  v36[0] = v19;
  v36[1] = v21;
  v37 = v32;
  v38 = v13;
  v39 = v31;
  v40 = v14;
  v41 = v15;
  v42 = v16;
  v43 = v30;
  sub_1BB86E7DC();
  sub_1BA6A75B0(v5 + 24, (uint64_t)&v34);
  if (!v35)
    return sub_1BA6A7554((uint64_t)&v34);
  sub_1BA4CECCC(&v34, (uint64_t)v36);
  v22 = v28;
  sub_1BA4C2DD8(v28, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedLayoutCacheKey);
  if ((v29 & 1) != 0)
  {
    v23 = v11[56];
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedLayoutCacheKey);
    if ((v23 & 1) != 0)
    {
      v24 = *((_QWORD *)&v37 + 1);
      v25 = v38;
      __swift_project_boxed_opaque_existential_1(v36, *((uint64_t *)&v37 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 16))(v22, v27, v24, v25);
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedLayoutCacheKey);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t sub_1BA6A751C()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1BB86DEE8();
}

uint64_t sub_1BA6A7554(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5B089C(0, &qword_1ED3C5C88, &qword_1ED3C5C80, (uint64_t)&protocol descriptor for FeedLayoutDatabaseType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA6A75B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5B089C(0, &qword_1ED3C5C88, &qword_1ED3C5C80, (uint64_t)&protocol descriptor for FeedLayoutDatabaseType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FeedLayoutCache.bindLookup(cacheKey:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  sub_1BA6A75B0(v1 + 24, (uint64_t)&v7);
  if (!v8)
  {
    sub_1BA6A7554((uint64_t)&v7);
    return 0;
  }
  sub_1BA4CECCC(&v7, (uint64_t)v9);
  if (*(_BYTE *)(a1 + 56) != 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    return 0;
  }
  v3 = v10;
  v4 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v5;
}

unint64_t sub_1BA6A76CC()
{
  unint64_t result;

  result = qword_1ED3B35B8;
  if (!qword_1ED3B35B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8840DC, &_s2AdVN);
    atomic_store(result, (unint64_t *)&qword_1ED3B35B8);
  }
  return result;
}

void *sub_1BA6A7710(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      v10 = v24 + 1;
      if (v24 + 1 >= v14)
        goto LABEL_26;
      v25 = *(_QWORD *)(v7 + 8 * v10);
      if (!v25)
        break;
    }
LABEL_25:
    v13 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 8 * v16;
    v22 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v23 = v20;
    v23[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v21) = v22;
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v14)
    goto LABEL_26;
  v25 = *(_QWORD *)(v7 + 8 * v26);
  if (v25)
  {
    v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v10);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BA6A78BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA6A78EC(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int128 *a7, uint64_t a8, uint64_t a9, char *a10, uint64_t *a11, __int128 *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v33;
  __int128 v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;

  v21 = *a10;
  v37 = *((_BYTE *)a11 + 9);
  v38 = *((_BYTE *)a11 + 8);
  v35 = *((_BYTE *)a11 + 11);
  v36 = *((_BYTE *)a11 + 10);
  v42 = a11[5];
  v43 = a11[4];
  v41 = *((_BYTE *)a11 + 48);
  v39 = *a11;
  v40 = a11[7];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v14 + 80) - 8) + 32))(v14 + *(_QWORD *)(*(_QWORD *)v14 + 96), a1);
  sub_1BA4CECCC(a2, v14 + *(_QWORD *)(*(_QWORD *)v14 + 104));
  v22 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 112);
  v23 = sub_1BB86D660();
  v33 = *((_OWORD *)a11 + 1);
  v34 = *((_OWORD *)a11 + 4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a3, v23);
  v24 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 120);
  v25 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a4, v25);
  *(_QWORD *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 136)) = a6;
  sub_1BA4C2DD8(a5, v14 + *(_QWORD *)(*(_QWORD *)v14 + 128), type metadata accessor for FeedLayoutSolverOptions);
  sub_1BA4CECCC(a7, v14 + *(_QWORD *)(*(_QWORD *)v14 + 144));
  *(_QWORD *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 168)) = a8;
  *(_QWORD *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 160)) = a9;
  *(_BYTE *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 176)) = v21;
  v26 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 184);
  *(_QWORD *)v26 = v39;
  *(_BYTE *)(v26 + 8) = v38;
  *(_BYTE *)(v26 + 9) = v37;
  *(_BYTE *)(v26 + 10) = v36;
  *(_BYTE *)(v26 + 11) = v35;
  *(_OWORD *)(v26 + 16) = v33;
  *(_QWORD *)(v26 + 32) = v43;
  *(_QWORD *)(v26 + 40) = v42;
  *(_BYTE *)(v26 + 48) = v41;
  *(_QWORD *)(v26 + 56) = v40;
  *(_OWORD *)(v26 + 64) = v34;
  sub_1BA4CECCC(a12, v14 + *(_QWORD *)(*(_QWORD *)v14 + 192));
  v27 = (_QWORD *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 200));
  *v27 = a13;
  v27[1] = a14;
  v28 = *(_QWORD *)a5;
  v29 = *(_QWORD *)(a5 + 8);
  LODWORD(a7) = *(unsigned __int8 *)(a5 + 16);
  sub_1BA4A2E80(a5, type metadata accessor for FeedLayoutSolverOptions);
  if ((_DWORD)a7 == 1)
  {
    v30 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 152);
    *(_QWORD *)v30 = 0;
    *(_QWORD *)(v30 + 8) = 0;
    if (v28 | v29)
    {
      *(_BYTE *)(v30 + 24) = 0;
      *(_QWORD *)(v30 + 16) = 0;
    }
    else
    {
      *(_QWORD *)(v30 + 16) = 0;
      *(_BYTE *)(v30 + 24) = 1;
    }
  }
  else
  {
    v31 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 152);
    *(_QWORD *)v31 = v28;
    *(_QWORD *)(v31 + 8) = v29;
    *(_QWORD *)(v31 + 16) = 0;
    *(_BYTE *)(v31 + 24) = 0;
  }
  return v14;
}

void sub_1BA6A7BA0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA4D9CE8(255, a3);
    v4 = sub_1BB874218();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BA6A7BF4(uint64_t a1, uint64_t a2)
{
  return BlueprintSection<>.feedGroupItems.getter(a1, *(_QWORD *)(a2 - 8));
}

uint64_t BlueprintSection<>.feedGroupItems.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86FCB8();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(v3, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t FeedGroupDescribing.feedGroupItems.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

__n128 sub_1BA6A7C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __n128 result;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __n128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v4 = v3;
  v8 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for GroupLayoutBindingContext();
  v11 = *(int *)(v32 + 56);
  v12 = *(_QWORD *)(v3 + v11);
  v13 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA6A8790(0x6461654864656546, 0xEC000000656E696CLL, a2, a3);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD **)(*(_QWORD *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4C2DD8(a1, (uint64_t)v10, type metadata accessor for FeedHeadline);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_1BA6A94A8(0, v16[2] + 1, 1, v16);
  v33 = a2;
  v34 = a1;
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = sub_1BA6A94A8((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v36.n128_u64[1] = v8;
  v19 = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
  *(_QWORD *)&v37 = v19;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v35);
  sub_1BA4C2DD8((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
  v16[2] = v18 + 1;
  sub_1BA4CECCC(&v35, (uint64_t)&v16[5 * v18 + 4]);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FeedHeadline);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v35 = *(_QWORD *)(v4 + v11);
  *(_QWORD *)(v4 + v11) = 0x8000000000000000;
  v22 = v33;
  sub_1BA6A8604((uint64_t)v16, 0x6461654864656546, 0xEC000000656E696CLL, v33, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v11) = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)&v38 + 1) = v8;
  v39 = v19;
  v23 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v37);
  sub_1BA4C2DD8(v34, (uint64_t)v23, type metadata accessor for FeedHeadline);
  strcpy((char *)&v35, "FeedHeadline");
  BYTE13(v35) = 0;
  HIWORD(v35) = -5120;
  v36.n128_u64[0] = v22;
  v36.n128_u64[1] = a3;
  v24 = *(int *)(v32 + 60);
  v25 = *(_QWORD **)(v4 + v24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_1BA6A8950(0, v25[2] + 1, 1, v25);
  v27 = v25[2];
  v26 = v25[3];
  if (v27 >= v26 >> 1)
    v25 = sub_1BA6A8950((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
  v25[2] = v27 + 1;
  v28 = &v25[9 * v27];
  *((_OWORD *)v28 + 2) = v35;
  result = v36;
  v30 = v37;
  v31 = v38;
  v28[12] = v39;
  *((_OWORD *)v28 + 4) = v30;
  *((_OWORD *)v28 + 5) = v31;
  *((__n128 *)v28 + 3) = result;
  *(_QWORD *)(v4 + v24) = v25;
  return result;
}

uint64_t FeedItemSupplementaryAttributes.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unsigned int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6A81A0(v2, (uint64_t)v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload == 2)
    {
      v11 = *((_QWORD *)v6 + 14);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = *(_BYTE *)(*(_QWORD *)(v11
                                 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                     + 208);
      swift_release();
      v13 = sub_1BB870E88();
      if ((v12 & 1) != 0)
        v14 = (unsigned int *)MEMORY[0x1E0DBB2B0];
      else
        v14 = (unsigned int *)MEMORY[0x1E0DBB2B8];
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(a1, *v14, v13);
    }
    else
    {
      v15 = *MEMORY[0x1E0DBB2B8];
      v16 = sub_1BB870E88();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(a1, v15, v16);
      return sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
    }
  }
  else
  {
    v8 = *MEMORY[0x1E0DBB2B0];
    v9 = sub_1BB870E88();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(a1, v8, v9);
  }
}

uint64_t sub_1BA6A81A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FeedItemSupplementaryAttributes()
{
  uint64_t result;

  result = qword_1ED3B2818;
  if (!qword_1ED3B2818)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *initializeWithCopy for FeedItemSupplementaryAttributes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char *v59;
  char *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  _QWORD *v64;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    v13 = (void *)a2[3];
    a1[2] = a2[2];
    a1[3] = v13;
    v14 = (void *)a2[4];
    v15 = (void *)a2[5];
    a1[4] = v14;
    a1[5] = v15;
    v16 = (void *)a2[6];
    v61 = (void *)a2[7];
    a1[6] = v16;
    a1[7] = v61;
    v63 = (void *)a2[8];
    a1[8] = v63;
    v17 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
    v64 = (_QWORD *)((char *)a1 + v17);
    v18 = (char *)a2 + v17;
    type metadata accessor for InternalErrorViewModel();
    swift_bridgeObjectRetain();
    swift_retain();
    v19 = v13;
    v20 = v14;
    v21 = v15;
    v22 = v16;
    v23 = v61;
    v24 = v63;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = *((_QWORD *)v18 + 1);
      *v64 = *(_QWORD *)v18;
      v64[1] = v25;
      v26 = *((_QWORD *)v18 + 2);
      swift_bridgeObjectRetain();
      if (v26 >= 0xB)
      {
        v30 = *((_QWORD *)v18 + 3);
        v31 = *((_QWORD *)v18 + 4);
        v64[2] = v26;
        v64[3] = v30;
        v64[4] = v31;
        swift_retain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v64 + 1) = *((_OWORD *)v18 + 1);
        v64[4] = *((_QWORD *)v18 + 4);
      }
      v32 = *((_QWORD *)v18 + 6);
      v64[5] = *((_QWORD *)v18 + 5);
      v64[6] = v32;
      v64[7] = *((_QWORD *)v18 + 7);
      sub_1BB074B08();
      v34 = *(int *)(v33 + 80);
      v35 = (char *)v64 + v34;
      v36 = &v18[v34];
      *v35 = *v36;
      v62 = (uint64_t)v64 + v34 + 8;
      v37 = *((_OWORD *)v36 + 2);
      *((_OWORD *)v35 + 2) = v37;
      v38 = v37;
      v39 = **(void (***)(uint64_t, char *, uint64_t))(v37 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(v62, v36 + 8, v38);
      v40 = *((_QWORD *)v36 + 7);
      *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
      *((_QWORD *)v35 + 7) = v40;
      v41 = *((_QWORD *)v36 + 9);
      *((_QWORD *)v35 + 8) = *((_QWORD *)v36 + 8);
      *((_QWORD *)v35 + 9) = v41;
      *((_QWORD *)v35 + 10) = *((_QWORD *)v36 + 10);
      v35[88] = v36[88];
      *((_QWORD *)v35 + 12) = *((_QWORD *)v36 + 12);
      v42 = (int *)type metadata accessor for GroupLayoutBindingContext();
      v43 = v42[13];
      v59 = &v36[v43];
      v60 = &v35[v43];
      v44 = sub_1BB86D8A0();
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v60, v59, v44);
      *(_QWORD *)&v35[v42[14]] = *(_QWORD *)&v36[v42[14]];
      *(_QWORD *)&v35[v42[15]] = *(_QWORD *)&v36[v42[15]];
      v35[v42[16]] = v36[v42[16]];
      *(_QWORD *)&v35[v42[17]] = *(_QWORD *)&v36[v42[17]];
      *(_QWORD *)&v35[v42[18]] = *(_QWORD *)&v36[v42[18]];
      *(_QWORD *)&v35[v42[19]] = *(_QWORD *)&v36[v42[19]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v27 = *(_QWORD *)v18;
      v28 = *(id *)v18;
      v29 = *((_QWORD *)v18 + 1);
      *v64 = v27;
      v64[1] = v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    sub_1BB0746EC();
    v47 = *(int *)(v46 + 48);
    v48 = (_OWORD *)((char *)a1 + v47);
    v49 = (_OWORD *)((char *)a2 + v47);
    v50 = v49[13];
    v48[12] = v49[12];
    v48[13] = v50;
    v51 = v49[15];
    v48[14] = v49[14];
    v48[15] = v51;
    v52 = v49[9];
    v48[8] = v49[8];
    v48[9] = v52;
    v53 = v49[11];
    v48[10] = v49[10];
    v48[11] = v53;
    v54 = v49[5];
    v48[4] = v49[4];
    v48[5] = v54;
    v55 = v49[7];
    v48[6] = v49[6];
    v48[7] = v55;
    v56 = v49[1];
    *v48 = *v49;
    v48[1] = v56;
    v57 = v49[3];
    v48[2] = v49[2];
    v48[3] = v57;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 2)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v9;
    v10 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v10;
    v11 = a2[13];
    a1[12] = a2[12];
    a1[13] = v11;
    a1[14] = a2[14];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1BA6A8604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v7 = v6;
  v14 = *v6;
  v16 = sub_1BA6A8790(a2, a3, a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1BA6A8A8C();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 32 * v16);
    *v27 = a2;
    v27[1] = a3;
    v27[2] = a4;
    v27[3] = a5;
    *(_QWORD *)(v22[7] + 8 * v16) = a1;
    v28 = v22[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v22[2] = v30;
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BA6A8C74(v19, a6 & 1);
  v25 = sub_1BA6A8790(a2, a3, a4, a5);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

unint64_t sub_1BA6A8790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745E4();
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
  }
  v8 = sub_1BB874608();
  return sub_1BA6A8848(a1, a2, a3, a4, v8);
}

unint64_t sub_1BA6A8848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v17 = v15[2];
      v16 = v15[3];
      v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_1BB874398() & 1) != 0)
      {
        if (v16)
        {
          if (a4)
          {
            v19 = v17 == a3 && v16 == a4;
            if (v19 || (sub_1BB874398() & 1) != 0)
              return v8;
          }
        }
        else if (!a4)
        {
          return v8;
        }
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

_QWORD *sub_1BA6A8950(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3B9F50, (uint64_t)&type metadata for GroupLayoutBindingContext.OrderedItemBinding, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4])
          memmove(v12, a4 + 4, 72 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA6A8FDC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1BA6A8A8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1BB4CD2EC(0, (unint64_t *)&qword_1ED3CFA78, (void (*)(uint64_t))sub_1BA81DB98, (void (*)(void))sub_1BA82A87C);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = v17[1];
    v20 = v17[2];
    v19 = v17[3];
    v21 = 8 * v15;
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = *v17;
    v23[1] = v18;
    v23[2] = v20;
    v23[3] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BA6A8C74(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t i;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CD2EC(0, (unint64_t *)&qword_1ED3CFA78, (void (*)(uint64_t))sub_1BA81DB98, (void (*)(void))sub_1BA82A87C);
  v38 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v35)
          goto LABEL_35;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_35;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_35:
              swift_release();
              v3 = v2;
              if ((v38 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_42;
                if (v13 >= v35)
                  goto LABEL_35;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v17);
      v22 = *v21;
      v23 = v21[1];
      v25 = v21[2];
      v24 = v21[3];
      v26 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      sub_1BB8745E4();
      if (v24)
      {
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        swift_bridgeObjectRelease();
      }
      result = sub_1BB874608();
      v27 = -1 << *(_BYTE *)(v7 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        v14 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 32 * v14);
      *v15 = v22;
      v15[1] = v23;
      v15[2] = v25;
      v15[3] = v24;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v26;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BA6A8FDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA6A90D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA6A90DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *FeedHeadline.additionalFormatFeedItems.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v29;
  ValueMetadata *v30;
  unint64_t v31;
  __int128 v32;
  ValueMetadata *v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[80];
  char v40;

  v1 = *(void **)(v0 + 40);
  v2 = objc_msgSend(v1, sel_sourceChannel);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v5 = sub_1BB8729A0();
    v7 = v6;

    *(_OWORD *)&v39[16] = xmmword_1BB87FC90;
    memset(&v39[32], 0, 48);
    v40 = 0;
    *(_QWORD *)&v35 = v5;
    *((_QWORD *)&v35 + 1) = v7;
    *(_QWORD *)&v36 = v3;
    BYTE8(v36) = 0;
    *(_QWORD *)&v38 = 0;
    *((_QWORD *)&v38 + 1) = 0xE000000000000000;
    *(_QWORD *)&v37 = 0;
    BYTE8(v37) = 0;
    *(_QWORD *)v39 = 0;
    *(_QWORD *)&v39[8] = MEMORY[0x1E0DEE9E8];
    sub_1BA6A955C((uint64_t)&v35, (uint64_t)&v32);
    v8 = sub_1BA6A94A8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_1BA6A94A8((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v30 = &type metadata for FeedTag;
    v31 = sub_1BA6A96BC();
    *(_QWORD *)&v29 = swift_allocObject();
    sub_1BA6A955C((uint64_t)&v32, v29 + 16);
    v8[2] = v10 + 1;
    sub_1BA4CECCC(&v29, (uint64_t)&v8[5 * v10 + 4]);
    sub_1BA6A94C4((uint64_t)&v32);
    swift_unknownObjectRelease();
    sub_1BA6A94C4((uint64_t)&v35);
    v1 = *(void **)(v0 + 40);
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_parentIssue) & 1) != 0)
  {
    v11 = objc_msgSend(v1, sel_parentIssue);
    if (v11)
    {
      v12 = v11;
      v13 = objc_allocWithZone(MEMORY[0x1E0D58B48]);
      v14 = v12;
      v15 = objc_msgSend(v13, sel_init);
      v16 = v14;
      v17 = objc_msgSend(v16, sel_identifier);
      v18 = sub_1BB8729A0();
      v20 = v19;

      *(_QWORD *)&v35 = v16;
      *((_QWORD *)&v35 + 1) = v18;
      *(_QWORD *)&v36 = v20;
      WORD4(v36) = 0;
      *(_QWORD *)&v37 = 0;
      BYTE8(v37) = 0;
      *(_QWORD *)&v38 = 1;
      *((_QWORD *)&v38 + 1) = v15;
      v39[0] = 0;
      *(_OWORD *)&v39[8] = xmmword_1BB87FC90;
      memset(&v39[24], 0, 40);
      *(_QWORD *)&v39[64] = 5;
      v39[72] = 0;
      sub_1BA8D1F08((uint64_t)&v35);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1BA6A94A8(0, v8[2] + 1, 1, v8);
      v22 = v8[2];
      v21 = v8[3];
      if (v22 >= v21 >> 1)
        v8 = sub_1BA6A94A8((_QWORD *)(v21 > 1), v22 + 1, 1, v8);
      v33 = &type metadata for FeedIssue;
      v34 = sub_1BA6B2E68();
      v23 = (_OWORD *)swift_allocObject();
      *(_QWORD *)&v32 = v23;
      v24 = *(_OWORD *)&v39[48];
      v23[7] = *(_OWORD *)&v39[32];
      v23[8] = v24;
      *(_OWORD *)((char *)v23 + 137) = *(_OWORD *)&v39[57];
      v25 = v38;
      v23[3] = v37;
      v23[4] = v25;
      v26 = *(_OWORD *)&v39[16];
      v23[5] = *(_OWORD *)v39;
      v23[6] = v26;
      v27 = v36;
      v23[1] = v35;
      v23[2] = v27;
      v8[2] = v22 + 1;
      sub_1BA4CECCC(&v32, (uint64_t)&v8[5 * v22 + 4]);

      sub_1BA8D1FE4((uint64_t)&v35);
    }
  }
  return v8;
}

_QWORD *sub_1BA6A94A8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6ECD60(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA6F0104, (unint64_t *)&qword_1ED3B2E30);
}

uint64_t sub_1BA6A94C4(uint64_t a1)
{
  destroy for FeedTag(a1);
  return a1;
}

uint64_t destroy for FeedTag(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 88);
  if (result != 1)
  {
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 120))
      return __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  }
  return result;
}

uint64_t sub_1BA6A955C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FeedTag(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for FeedTag(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    v8 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v8;
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
  }
  else
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v7;
    v10 = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    if (v10)
    {
      v11 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = v10;
      *(_QWORD *)(a1 + 128) = v11;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 96, a2 + 96, v10);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    }
    else
    {
      v12 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v12;
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    }
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  }
  return a1;
}

unint64_t sub_1BA6A96BC()
{
  unint64_t result;

  result = qword_1ED3BC8A0;
  if (!qword_1ED3BC8A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedTag, &type metadata for FeedTag);
    atomic_store(result, (unint64_t *)&qword_1ED3BC8A0);
  }
  return result;
}

void sub_1BA6A9700(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1BAC9CBE0(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes, (void (*)(BOOL, uint64_t, uint64_t))sub_1BA6A989C);
}

uint64_t sub_1BA6A9724()
{
  return sub_1BA6A9740() & 1;
}

uint64_t sub_1BA6A9740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  _QWORD v6[4];

  v0 = sub_1BB870E88();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  FeedItemSupplementaryAttributes.kind.getter((uint64_t)v3);
  sub_1BA6A9854();
  sub_1BB872CF4();
  sub_1BB872CF4();
  if (v6[2] == v6[0] && v6[3] == v6[1])
    v4 = 1;
  else
    v4 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

unint64_t sub_1BA6A9854()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B0A20;
  if (!qword_1ED3B0A20)
  {
    v1 = sub_1BB870E88();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DBB2D8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B0A20);
  }
  return result;
}

uint64_t sub_1BA6A989C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BA7C2F7C, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
  *v3 = result;
  return result;
}

__n128 sub_1BA6A98C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __n128 result;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __n128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v4 = v3;
  v8 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for GroupLayoutBindingContext();
  v11 = *(int *)(v32 + 56);
  v12 = *(_QWORD *)(v3 + v11);
  v13 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA6A8790(0x6E6E614264656546, 0xEC00000064417265, a2, a3);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD **)(*(_QWORD *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4C2DD8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_1BA6A94A8(0, v16[2] + 1, 1, v16);
  v33 = a2;
  v34 = a1;
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = sub_1BA6A94A8((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v36.n128_u64[1] = v8;
  v19 = sub_1BA4A2870(&qword_1ED3B2D10, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
  *(_QWORD *)&v37 = v19;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v35);
  sub_1BA4C2DD8((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  v16[2] = v18 + 1;
  sub_1BA4CECCC(&v35, (uint64_t)&v16[5 * v18 + 4]);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v35 = *(_QWORD *)(v4 + v11);
  *(_QWORD *)(v4 + v11) = 0x8000000000000000;
  v22 = v33;
  sub_1BA6A8604((uint64_t)v16, 0x6E6E614264656546, 0xEC00000064417265, v33, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v11) = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)&v38 + 1) = v8;
  v39 = v19;
  v23 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v37);
  sub_1BA4C2DD8(v34, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  strcpy((char *)&v35, "FeedBannerAd");
  BYTE13(v35) = 0;
  HIWORD(v35) = -5120;
  v36.n128_u64[0] = v22;
  v36.n128_u64[1] = a3;
  v24 = *(int *)(v32 + 60);
  v25 = *(_QWORD **)(v4 + v24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_1BA6A8950(0, v25[2] + 1, 1, v25);
  v27 = v25[2];
  v26 = v25[3];
  if (v27 >= v26 >> 1)
    v25 = sub_1BA6A8950((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
  v25[2] = v27 + 1;
  v28 = &v25[9 * v27];
  *((_OWORD *)v28 + 2) = v35;
  result = v36;
  v30 = v37;
  v31 = v38;
  v28[12] = v39;
  *((_OWORD *)v28 + 4) = v30;
  *((_OWORD *)v28 + 5) = v31;
  *((__n128 *)v28 + 3) = result;
  *(_QWORD *)(v4 + v24) = v25;
  return result;
}

__n128 sub_1BA6A9C58@<Q0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  __int128 v7;
  __n128 result;

  v3 = *v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 224);
  v5 = *(_BYTE *)(v3 + 232);
  v6 = *(_BYTE *)(v3 + 233);
  v7 = *(_OWORD *)(v3 + 192);
  *(_OWORD *)a1 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a1 + 16) = v7;
  result = *(__n128 *)(v3 + 208);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 57) = v6;
  return result;
}

uint64_t sub_1BA6A9CBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  __int128 v35[2];
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v29 = *(_QWORD *)(v3 + 16);
  if (v29)
  {
    v28 = v3 + 32;
    v34 = &v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = 0;
    v33 = 0;
    v27 = v3;
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      v5 = (uint64_t *)(v28 + 16 * v4);
      v6 = *v5;
      v7 = v5[1];
      swift_retain_n();
      v8 = swift_bridgeObjectRetain();
      v9 = sub_1BA6AA1C8(v8);
      swift_bridgeObjectRelease();
      v36 = v9;
      v10 = v7;
      v11 = v7;
      v12 = v33;
      sub_1BA6AA414(&v36, v6, v11, (uint64_t)&unk_1E729F610, (uint64_t (*)(uint64_t))sub_1BACAB80C, (void (*)(_QWORD *, uint64_t, uint64_t))sub_1BA6AA4F0);
      v33 = v12;
      if (v12)
        goto LABEL_19;
      swift_bridgeObjectRelease();
      swift_release();
      v13 = v36;
      v14 = *(_QWORD *)(v36 + 16);
      if (v14)
      {
        v31 = v10;
        v32 = v4;
        v41 = MEMORY[0x1E0DEE9D8];
        sub_1BA6EFF20(0, v14, 0);
        v30 = v13;
        v15 = v13 + 32;
        a1 = v41;
        do
        {
          sub_1BA6AA01C(v15, (uint64_t)&v36, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
          sub_1BA4C010C((uint64_t)v34, (uint64_t)v35);
          sub_1BA4CECCC(v35, (uint64_t)v38);
          sub_1BA6AA068((uint64_t)&v36, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BA6EFF20(0, *(_QWORD *)(a1 + 16) + 1, 1);
            a1 = v41;
          }
          v17 = *(_QWORD *)(a1 + 16);
          v16 = *(_QWORD *)(a1 + 24);
          if (v17 >= v16 >> 1)
            sub_1BA6EFF20(v16 > 1, v17 + 1, 1);
          v18 = v39;
          v19 = v40;
          v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
          v21 = MEMORY[0x1E0C80A78](v20);
          v23 = (char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, double))(v24 + 16))(v23, v21);
          sub_1BA6AC628(v17, (uint64_t)v23, &v41, v18, v19);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
          a1 = v41;
          v15 += 48;
          --v14;
        }
        while (v14);
        swift_release();
        swift_release();
        v3 = v27;
        v4 = v32;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E0DEE9D8];
      }
      if (++v4 == v29)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1BA6AA01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BA6AA068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;

  v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1BA6AA0A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BA6AA10C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BA6AA16C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BA6AA1C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24[2];
  _OWORD v25[3];
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v4 = 0;
    v5 = 0;
    v6 = v2 + 32;
    v7 = (_OWORD *)(MEMORY[0x1E0DEE9D8] + 32);
    while (1)
    {
      sub_1BA4C010C(v6, (uint64_t)v24);
      *(_QWORD *)&v25[0] = v4;
      result = sub_1BA4CECCC(v24, (uint64_t)v25 + 8);
      v26 = v25[0];
      v27 = v25[1];
      v28 = v25[2];
      if (!v5)
      {
        v9 = v3[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v10 = v1;
        v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        sub_1BA6AA3C0(0, (unint64_t *)&unk_1ED3B0470, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA6AA10C);
        v13 = (_QWORD *)swift_allocObject();
        v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 48;
        v13[2] = v12;
        v13[3] = 2 * v14;
        v15 = (unint64_t)(v13 + 4);
        v16 = v3[3] >> 1;
        if (v3[2])
        {
          if (v13 != v3 || v15 >= (unint64_t)&v3[6 * v16 + 4])
            memmove(v13 + 4, v3 + 4, 48 * v16);
          v3[2] = 0;
        }
        v7 = (_OWORD *)(v15 + 48 * v16);
        v5 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        result = swift_release();
        v3 = v13;
        v1 = v10;
      }
      v18 = __OFSUB__(v5--, 1);
      if (v18)
        break;
      ++v4;
      v19 = v26;
      v20 = v28;
      v7[1] = v27;
      v7[2] = v20;
      *v7 = v19;
      v7 += 3;
      v6 += 40;
      if (v1 == v4)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v5 = 0;
LABEL_21:
  result = swift_bridgeObjectRelease();
  v21 = v3[3];
  if (v21 < 2)
    return (uint64_t)v3;
  v22 = v21 >> 1;
  v18 = __OFSUB__(v22, v5);
  v23 = v22 - v5;
  if (!v18)
  {
    v3[2] = v23;
    return (uint64_t)v3;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1BA6AA3C0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1BB874218();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BA6AA414(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), void (*a6)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  v12 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = a5(v12);
  v13 = *(_QWORD *)(v12 + 16);
  v15[0] = v12 + 32;
  v15[1] = v13;
  swift_retain();
  a6(v15, a2, a3);
  swift_release();
  *a1 = v12;
  swift_release();
  return swift_release();
}

uint64_t sub_1BA6AA4F0(_QWORD *a1, void (*a2)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  __int128 *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  unint64_t v109;
  char *v110;
  unint64_t v111;
  uint64_t result;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v129;
  _BYTE v130[40];
  uint64_t v131;
  _BYTE v132[48];
  uint64_t v133;

  v7 = swift_allocObject();
  v128 = a2;
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v8 = a1[1];
  swift_retain_n();
  v9 = sub_1BB8741F4();
  if (v9 >= v8)
  {
    if ((v8 & 0x8000000000000000) == 0)
    {
      if (v8)
      {
        swift_retain();
        sub_1BA6AAEAC(0, v8, 1, a1, v128, a3);
      }
      swift_release();
      swift_release();
      return swift_release_n();
    }
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    swift_release_n();
    __break(1u);
LABEL_142:
    swift_release_n();
    __break(1u);
LABEL_143:
    swift_release_n();
    __break(1u);
LABEL_144:
    swift_release_n();
    __break(1u);
LABEL_145:
    swift_release_n();
    swift_release();
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_145;
  v125 = a3;
  v126 = v3;
  v114 = v9;
  if (v8 < 2)
  {
    v13 = (char *)MEMORY[0x1E0DEE9D8];
    v118 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v113 = MEMORY[0x1E0DEE9D8];
    if (v8 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_102:
      if (v15 < 2)
      {
LABEL_113:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v113 + 16) = 0;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      v102 = *a1;
      v127 = *a1;
      while (1)
      {
        v103 = v15 - 2;
        if (v15 < 2)
          goto LABEL_132;
        if (!v102)
          goto LABEL_144;
        v104 = v13;
        v105 = *(_QWORD *)&v13[16 * v103 + 32];
        v106 = *(_QWORD *)&v13[16 * v15 + 24];
        v107 = (char *)(v102 + 48 * v105);
        v108 = (char *)(v102 + 48 * *(_QWORD *)&v13[16 * v15 + 16]);
        v109 = v102 + 48 * v106;
        swift_retain();
        sub_1BACA6D44(v107, v108, v109, v118, v128, v125);
        if (v126)
        {
          v101 = v113;
          goto LABEL_100;
        }
        if (v106 < v105)
          goto LABEL_133;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v104 = sub_1BACAB464((uint64_t)v104);
        if (v103 >= *((_QWORD *)v104 + 2))
          goto LABEL_134;
        v110 = &v104[16 * v103 + 32];
        *(_QWORD *)v110 = v105;
        *((_QWORD *)v110 + 1) = v106;
        v111 = *((_QWORD *)v104 + 2);
        if (v15 > v111)
          goto LABEL_135;
        v13 = v104;
        memmove(&v104[16 * v15 + 16], &v104[16 * v15 + 32], 16 * (v111 - v15));
        *((_QWORD *)v104 + 2) = v111 - 1;
        v15 = v111 - 1;
        v102 = v127;
        if (v111 <= 2)
          goto LABEL_113;
      }
    }
  }
  else
  {
    v11 = v10 >> 1;
    sub_1BA6AA10C(0, (unint64_t *)&qword_1ED3B03F8, (void (*)(uint64_t))sub_1BA7C2A4C);
    v12 = sub_1BB872E74();
    *(_QWORD *)(v12 + 16) = v11;
    v113 = v12;
    v118 = (char *)(v12 + 32);
  }
  v14 = 0;
  v13 = (char *)MEMORY[0x1E0DEE9D8];
  v117 = a1;
  while (1)
  {
    v16 = v14;
    if (v14 + 1 >= v8)
    {
      v119 = v14 + 1;
    }
    else
    {
      v115 = v13;
      v17 = *a1;
      v18 = (uint64_t *)(*a1 + 48 * (v14 + 1));
      v19 = (uint64_t *)(*a1 + 48 * v14);
      v20 = *v19;
      v131 = *v18;
      sub_1BA4C010C((uint64_t)(v18 + 1), (uint64_t)v132);
      v129 = v20;
      sub_1BA4C010C((uint64_t)(v19 + 1), (uint64_t)v130);
      v128((unsigned __int8 *)&v133, &v131, &v129);
      sub_1BA6AA068((uint64_t)&v129, (uint64_t)&qword_1ED3B0400, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
      sub_1BA6AA068((uint64_t)&v131, (uint64_t)&qword_1ED3B0400, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
      v21 = v133;
      v119 = v16 + 2;
      if (v16 + 2 < v8)
      {
        v120 = v17;
        v22 = v17 + 48 * v16 + 56;
        while (1)
        {
          v23 = *(_QWORD *)(v22 - 8);
          v131 = *(_QWORD *)(v22 + 40);
          sub_1BA4C010C(v22 + 48, (uint64_t)v132);
          v129 = v23;
          sub_1BA4C010C(v22, (uint64_t)v130);
          v128((unsigned __int8 *)&v133, &v131, &v129);
          sub_1BA6AA068((uint64_t)&v129, (uint64_t)&qword_1ED3B0400, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
          sub_1BA6AA068((uint64_t)&v131, (uint64_t)&qword_1ED3B0400, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
          if (v21 != v133)
            break;
          v22 += 48;
          if (v8 == ++v119)
          {
            v119 = v8;
            break;
          }
        }
        v17 = v120;
      }
      a1 = v117;
      if (v21)
      {
        v24 = v119;
        if (v119 < v16)
          goto LABEL_138;
        if (v16 < v119)
        {
          v25 = (__int128 *)(v17 + 48 * v119 - 48);
          v26 = (__int128 *)(v17 + 48 * v16);
          v27 = v16;
          do
          {
            if (v27 != --v24)
            {
              if (!v17)
                goto LABEL_143;
              v28 = *v26;
              v29 = v26[1];
              v30 = v26[2];
              v32 = v25[1];
              v31 = v25[2];
              *v26 = *v25;
              v26[1] = v32;
              v26[2] = v31;
              v25[1] = v29;
              v25[2] = v30;
              *v25 = v28;
            }
            ++v27;
            v25 -= 3;
            v26 += 3;
          }
          while (v27 < v24);
        }
      }
      v13 = v115;
    }
    if (v119 < v8)
    {
      if (__OFSUB__(v119, v16))
        goto LABEL_136;
      if (v119 - v16 < v114)
      {
        if (__OFADD__(v16, v114))
          goto LABEL_139;
        if (v16 + v114 >= v8)
          v33 = v8;
        else
          v33 = v16 + v114;
        if (v33 < v16)
          goto LABEL_140;
        if (v119 != v33)
        {
          v116 = v13;
          v34 = 48 * v119 - 48;
          v35 = v119;
          v121 = v33;
          v123 = v16;
          do
          {
            v36 = v16;
            v37 = v34;
            while (1)
            {
              v38 = v35;
              v39 = (uint64_t *)(*a1 + v37);
              v40 = *v39;
              v41 = (uint64_t)(v39 + 1);
              v131 = v39[6];
              sub_1BA4C010C((uint64_t)(v39 + 7), (uint64_t)v132);
              v129 = v40;
              sub_1BA4C010C(v41, (uint64_t)v130);
              v128((unsigned __int8 *)&v133, &v131, &v129);
              sub_1BA6AA068((uint64_t)&v129, (uint64_t)&qword_1ED3B0400, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
              sub_1BA6AA068((uint64_t)&v131, (uint64_t)&qword_1ED3B0400, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
              if (v133 != 1)
                break;
              if (!*a1)
                goto LABEL_141;
              v35 = v38;
              v42 = (__int128 *)(*a1 + v37);
              v44 = v42[4];
              v43 = v42[5];
              v45 = *v42;
              v47 = v42[2];
              v46 = v42[3];
              v42[4] = v42[1];
              v42[5] = v47;
              *v42 = v46;
              v42[1] = v44;
              v42[2] = v43;
              v42[3] = v45;
              v37 -= 48;
              if (v38 == ++v36)
                goto LABEL_45;
            }
            v35 = v38;
LABEL_45:
            ++v35;
            v34 += 48;
            v16 = v123;
          }
          while (v35 != v121);
          v119 = v121;
          v13 = v116;
        }
      }
    }
    if (v119 < v16)
    {
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
      goto LABEL_137;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1BACAA368(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v49 = *((_QWORD *)v13 + 2);
    v48 = *((_QWORD *)v13 + 3);
    v15 = v49 + 1;
    if (v49 >= v48 >> 1)
      v13 = sub_1BACAA368((char *)(v48 > 1), v49 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v15;
    v50 = v13 + 32;
    v51 = &v13[16 * v49 + 32];
    *(_QWORD *)v51 = v16;
    *((_QWORD *)v51 + 1) = v119;
    if (v49)
      break;
    v15 = 1;
LABEL_15:
    v8 = a1[1];
    v14 = v119;
    if (v119 >= v8)
      goto LABEL_102;
  }
  while (1)
  {
    v52 = v15 - 1;
    if (v15 >= 4)
    {
      v57 = &v50[16 * v15];
      v58 = *((_QWORD *)v57 - 8);
      v59 = *((_QWORD *)v57 - 7);
      v63 = __OFSUB__(v59, v58);
      v60 = v59 - v58;
      if (v63)
        goto LABEL_120;
      v62 = *((_QWORD *)v57 - 6);
      v61 = *((_QWORD *)v57 - 5);
      v63 = __OFSUB__(v61, v62);
      v55 = v61 - v62;
      v56 = v63;
      if (v63)
        goto LABEL_121;
      v64 = v15 - 2;
      v65 = &v50[16 * v15 - 32];
      v67 = *(_QWORD *)v65;
      v66 = *((_QWORD *)v65 + 1);
      v63 = __OFSUB__(v66, v67);
      v68 = v66 - v67;
      if (v63)
        goto LABEL_123;
      v63 = __OFADD__(v55, v68);
      v69 = v55 + v68;
      if (v63)
        goto LABEL_126;
      if (v69 >= v60)
      {
        v87 = &v50[16 * v52];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v63 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v63)
          goto LABEL_130;
        v80 = v55 < v90;
        goto LABEL_89;
      }
    }
    else
    {
      if (v15 != 3)
      {
        v81 = *((_QWORD *)v13 + 4);
        v82 = *((_QWORD *)v13 + 5);
        v63 = __OFSUB__(v82, v81);
        v74 = v82 - v81;
        v75 = v63;
        goto LABEL_83;
      }
      v54 = *((_QWORD *)v13 + 4);
      v53 = *((_QWORD *)v13 + 5);
      v63 = __OFSUB__(v53, v54);
      v55 = v53 - v54;
      v56 = v63;
    }
    if ((v56 & 1) != 0)
      goto LABEL_122;
    v64 = v15 - 2;
    v70 = &v50[16 * v15 - 32];
    v72 = *(_QWORD *)v70;
    v71 = *((_QWORD *)v70 + 1);
    v73 = __OFSUB__(v71, v72);
    v74 = v71 - v72;
    v75 = v73;
    if (v73)
      goto LABEL_125;
    v76 = &v50[16 * v52];
    v78 = *(_QWORD *)v76;
    v77 = *((_QWORD *)v76 + 1);
    v63 = __OFSUB__(v77, v78);
    v79 = v77 - v78;
    if (v63)
      goto LABEL_128;
    if (__OFADD__(v74, v79))
      goto LABEL_129;
    if (v74 + v79 >= v55)
    {
      v80 = v55 < v79;
LABEL_89:
      if (v80)
        v52 = v64;
      goto LABEL_91;
    }
LABEL_83:
    if ((v75 & 1) != 0)
      goto LABEL_124;
    v83 = &v50[16 * v52];
    v85 = *(_QWORD *)v83;
    v84 = *((_QWORD *)v83 + 1);
    v63 = __OFSUB__(v84, v85);
    v86 = v84 - v85;
    if (v63)
      goto LABEL_127;
    if (v86 < v74)
      goto LABEL_15;
LABEL_91:
    v91 = v52 - 1;
    if (v52 - 1 >= v15)
    {
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
      goto LABEL_131;
    }
    v92 = *a1;
    if (!*a1)
      goto LABEL_142;
    v93 = &v50[16 * v91];
    v94 = *(_QWORD *)v93;
    v95 = v52;
    v96 = &v50[16 * v52];
    v97 = *((_QWORD *)v96 + 1);
    v98 = (char *)(v92 + 48 * *(_QWORD *)v93);
    v122 = v92 + 48 * v97;
    v124 = (char *)(v92 + 48 * *(_QWORD *)v96);
    swift_retain();
    sub_1BACA6D44(v98, v124, v122, v118, v128, v125);
    if (v126)
      break;
    if (v97 < v94)
      goto LABEL_117;
    if (v95 > *((_QWORD *)v13 + 2))
      goto LABEL_118;
    v99 = v95;
    *(_QWORD *)v93 = v94;
    *(_QWORD *)&v50[16 * v91 + 8] = v97;
    v100 = *((_QWORD *)v13 + 2);
    if (v95 >= v100)
      goto LABEL_119;
    v126 = 0;
    v15 = v100 - 1;
    memmove(v96, v96 + 16, 16 * (v100 - 1 - v99));
    *((_QWORD *)v13 + 2) = v100 - 1;
    a1 = v117;
    if (v100 <= 2)
      goto LABEL_15;
  }
  v101 = v113;
LABEL_100:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v101 + 16) = 0;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1BA6AAEAC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t result;
  uint64_t v22;
  void (*v23)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[8];

  v11 = swift_allocObject();
  v23 = a5;
  *(_QWORD *)(v11 + 16) = a5;
  *(_QWORD *)(v11 + 24) = a6;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    v27[7] = a6;
    swift_retain();
    v12 = 48 * a3;
    while (2)
    {
      v13 = a1;
      v22 = v12;
      do
      {
        v14 = *a4 + v12;
        sub_1BA6AA01C(v14, (uint64_t)&v26, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
        sub_1BA6AA01C(v14 - 48, (uint64_t)&v24, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
        LOBYTE(v14) = sub_1BA6AB098(v26, (uint64_t)v27, v24, (uint64_t)&v25, v23);
        sub_1BA6AA068((uint64_t)&v24, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
        sub_1BA6AA068((uint64_t)&v26, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
        if ((v14 & 1) == 0)
          break;
        if (!*a4)
        {
          result = swift_release();
          __break(1u);
          return result;
        }
        v15 = (__int128 *)(*a4 + v12);
        v17 = v15[1];
        v16 = v15[2];
        v18 = *v15;
        v19 = *(v15 - 2);
        *v15 = *(v15 - 3);
        v15[1] = v19;
        v15[2] = *(v15 - 1);
        *(v15 - 3) = v18;
        *(v15 - 2) = v17;
        *(v15 - 1) = v16;
        v12 -= 48;
        ++v13;
      }
      while (a3 != v13);
      ++a3;
      v12 = v22 + 48;
      if (a3 != a2)
        continue;
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1BA6AB098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a1;
  sub_1BA4C010C(a2, (uint64_t)&v13);
  v10 = a3;
  sub_1BA4C010C(a4, (uint64_t)&v11);
  a5(&v9, &v12, &v10);
  sub_1BA6AA068((uint64_t)&v10, (uint64_t)&qword_1ED3B0400, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
  sub_1BA6AA068((uint64_t)&v12, (uint64_t)&qword_1ED3B0400, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
  return v9;
}

uint64_t sub_1BA6AB150@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD *, _QWORD, _QWORD *))(v3 + 16))(*a1, a1 + 1, *a2, a2 + 1);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BA6AB190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _BYTE v39[4];
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[4];
  uint64_t v47;

  v11 = v10;
  v40 = a8;
  v42 = a5;
  v47 = a4;
  v43 = a3;
  v41 = a9;
  sub_1BA6AD14C(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = &v39[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for GroupLayoutBindingContext();
  v20 = v9;
  v21 = *(_QWORD *)(v9 + *(int *)(v19 + 56));
  v22 = *(_QWORD *)(v21 + 16);
  swift_bridgeObjectRetain();
  if (!v22)
    goto LABEL_8;
  v45 = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = a1;
  v23 = sub_1BA6A8790(0x6E6E614264656546, 0xEC00000064417265, a1, a2);
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v25 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v25 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    a1 = v44;
    a6 = v45;
LABEL_8:
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v29 = xmmword_1BB94AB40;
    *(_QWORD *)(v29 + 16) = a1;
    *(_QWORD *)(v29 + 24) = a2;
    *(_QWORD *)(v29 + 32) = v47;
    *(_QWORD *)(v29 + 40) = 1;
    *(_QWORD *)(v29 + 48) = a6;
    *(_QWORD *)(v29 + 56) = a7;
    *(_BYTE *)(v29 + 64) = 0;
LABEL_9:
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  v26 = v20;
  v27 = sub_1BA6ABE54(v25, v45, a7);
  if (v11)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v30 = (_QWORD *)sub_1BB784398(v27, (uint64_t (*)(_QWORD))sub_1BA6AD14C, (uint64_t (*)(_QWORD, double))type metadata accessor for FeedBannerAd, (void (*)(BOOL, uint64_t, uint64_t))sub_1BA6AD168);
  swift_bridgeObjectRelease();
  v31 = v47;
  if (!v30)
    goto LABEL_15;
  if (!v30[2])
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v33 = xmmword_1BB94AB40;
    *(_QWORD *)(v33 + 16) = v44;
    *(_QWORD *)(v33 + 24) = a2;
    *(_QWORD *)(v33 + 32) = v31;
    goto LABEL_16;
  }
  sub_1BA6AD194(v30, v43, v47, v42 & 1, (uint64_t)v18);
  swift_bridgeObjectRelease();
  v32 = type metadata accessor for FeedBannerAd();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v18, 1, v32) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6AD14C);
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v33 = xmmword_1BB94AB40;
    *(_QWORD *)(v33 + 16) = v44;
    *(_QWORD *)(v33 + 24) = a2;
    *(_QWORD *)(v33 + 32) = v47;
LABEL_16:
    *(_QWORD *)(v33 + 40) = 1;
    *(_QWORD *)(v33 + 48) = v45;
    *(_QWORD *)(v33 + 56) = a7;
    *(_BYTE *)(v33 + 64) = 0;
    goto LABEL_9;
  }
  v34 = v41;
  result = sub_1BA5193C4((uint64_t)v18, v41, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  if ((*(_BYTE *)(v34 + *(int *)(v32 + 24) + 1) & 0x10) == 0)
  {
LABEL_20:
    if ((v40 & 1) == 0)
    {
      MEMORY[0x1E0C80A78](result);
      *(_QWORD *)&v39[-16] = v34;
      v25 = sub_1BA6AB7E4((uint64_t)sub_1BA6AB9C8, (uint64_t)&v39[-32], v25);
    }
    strcpy((char *)v46, "FeedBannerAd");
    BYTE5(v46[1]) = 0;
    HIWORD(v46[1]) = -5120;
    v46[2] = v44;
    v46[3] = a2;
    sub_1BA6AB5A4(v46, v25);
    goto LABEL_5;
  }
  v35 = *(int *)(v19 + 76);
  v36 = *(_QWORD *)(v26 + v35);
  v37 = __OFADD__(v36, 1);
  v38 = v36 + 1;
  if (!v37)
  {
    *(_QWORD *)(v26 + v35) = v38;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6AB5A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];
  uint64_t v29;

  v3 = v2;
  v6 = *a1;
  v5 = a1[1];
  v8 = a1[2];
  v7 = a1[3];
  v25 = type metadata accessor for GroupLayoutBindingContext();
  v9 = *(int *)(v25 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v28[0] = *(_QWORD *)(v2 + v9);
  *(_QWORD *)(v2 + v9) = 0x8000000000000000;
  v26 = v6;
  sub_1BA6A8604(a2, v6, v5, v8, v7, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + v9) = v28[0];
  swift_bridgeObjectRelease();
  v27 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v11, 0);
    v13 = a2 + 32;
    v12 = v29;
    do
    {
      sub_1BA4C010C(v13, (uint64_t)v28);
      __swift_project_boxed_opaque_existential_1(v28, v28[3]);
      v14 = sub_1BB86DEE8();
      v16 = v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v29;
      }
      v18 = *(_QWORD *)(v12 + 16);
      v17 = *(_QWORD *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BA7447E8(v17 > 1, v18 + 1, 1);
        v12 = v29;
      }
      *(_QWORD *)(v12 + 16) = v18 + 1;
      v19 = v12 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
      v13 += 40;
      --v11;
    }
    while (v11);
  }
  v20 = sub_1BA6E43EC(v12);
  swift_bridgeObjectRelease();
  v21 = *(int *)(v25 + 60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = swift_bridgeObjectRetain();
  v23 = sub_1BA6AC114(v22, v26, v27, v8, v7, v20);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + v21) = v23;
  return result;
}

uint64_t sub_1BA6AB7E4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v8)(__int128 *);
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(__int128 *);
  uint64_t v25;
  _BYTE v26[24];
  uint64_t v27;
  uint64_t v28;
  __int128 v29[2];
  uint64_t v30;

  v4 = a3;
  v5 = MEMORY[0x1E0DEE9D8];
  v30 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = (uint64_t (*)(__int128 *))result;
    v9 = 0;
    v10 = a3 + 32;
    v24 = (uint64_t (*)(__int128 *))result;
    v25 = a3;
    v23 = v6;
    while (v9 < *(_QWORD *)(v4 + 16))
    {
      sub_1BA4C010C(v10, (uint64_t)v29);
      v5 = a2;
      v11 = v8(v29);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
      if ((v11 & 1) != 0)
      {
        sub_1BA4CECCC(v29, (uint64_t)v26);
        v12 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA6EFF20(0, *(_QWORD *)(v12 + 16) + 1, 1);
          v12 = v30;
        }
        v14 = *(_QWORD *)(v12 + 16);
        v13 = *(_QWORD *)(v12 + 24);
        if (v14 >= v13 >> 1)
          sub_1BA6EFF20(v13 > 1, v14 + 1, 1);
        v15 = v27;
        v16 = v28;
        v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
        v18 = MEMORY[0x1E0C80A78](v17);
        v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v21 + 16))(v20, v18);
        sub_1BA6AC628(v14, (uint64_t)v20, &v30, v15, v16);
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
        v8 = v24;
        v4 = v25;
        v6 = v23;
      }
      else
      {
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      }
      ++v9;
      v10 += 40;
      if (v6 == v9)
      {
        v5 = v30;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1BA6AB9C8(_QWORD *a1)
{
  return sub_1BA6AB9E0(a1) & 1;
}

uint64_t sub_1BA6AB9E0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BA6AB9FC(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_1BA6AB9FC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  char v5;
  char v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (sub_1BB86DEE8() == *a2 && v3 == a2[1])
  {
    swift_bridgeObjectRelease();
    v6 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v6 = v5 ^ 1;
  }
  return v6 & 1;
}

_BYTE *GroupLayoutBindingContext.peek(count:slotIdentifier:sorter:)(int64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  _BYTE *v47;
  _BYTE v48[32];
  uint64_t v49;
  _BYTE v50[24];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = v5;
  v42 = a4;
  v46 = a1;
  v9 = *(int *)(type metadata accessor for GroupLayoutBindingContext() + 60);
  v47 = v4;
  v10 = *(_QWORD *)&v4[v9];
  v11 = *(_QWORD *)(v10 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v43 = v5;
    v44 = a2;
    v45 = a3;
    v53 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA6EFF20(0, v11, 0);
    v13 = v10 + 32;
    v12 = v53;
    do
    {
      sub_1BA6AC300(v13, (uint64_t)v48);
      sub_1BA4C010C((uint64_t)&v49, (uint64_t)v50);
      sub_1BA6ABDF8((uint64_t)v48);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA6EFF20(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v53;
      }
      v15 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      if (v15 >= v14 >> 1)
        sub_1BA6EFF20(v14 > 1, v15 + 1, 1);
      v16 = v51;
      v17 = v52;
      v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v50, v51);
      v19 = MEMORY[0x1E0C80A78](v18);
      v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v22 + 16))(v21, v19);
      sub_1BA6AC628(v15, (uint64_t)v21, &v53, v16, v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      v12 = v53;
      v13 += 72;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a2 = v44;
    a3 = v45;
    v6 = v43;
  }
  v23 = v47;
  v24 = v6;
  v25 = sub_1BA6ABE54(v12, a2, a3);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    v27 = a2;
    v28 = *(_QWORD *)(v25 + 16);
    v29 = v46;
    if (v46 != 0x7FFFFFFFFFFFFFFFLL)
    {
      if (v28 < v46)
      {
        swift_bridgeObjectRelease();
        sub_1BA7C5828();
        swift_allocError();
        *(_QWORD *)v30 = v29;
        *(_QWORD *)(v30 + 8) = v28;
        *(_QWORD *)(v30 + 16) = v27;
        *(_QWORD *)(v30 + 24) = a3;
        *(_OWORD *)(v30 + 32) = 0u;
        *(_OWORD *)(v30 + 48) = 0u;
        *(_BYTE *)(v30 + 64) = 2;
        swift_bridgeObjectRetain();
        swift_willThrow();
        return v23;
      }
      v28 = v46;
    }
    if ((*v23 & 1) == 0 && v42)
    {
      swift_retain();
      v31 = sub_1BA6A9CBC(v25);
      swift_bridgeObjectRelease();
      swift_release();
      v25 = v31;
    }
    v32 = sub_1BB0E7894(v28, v25);
    v34 = v33;
    v36 = v35;
    v38 = v37;
    if ((v37 & 1) != 0)
    {
      sub_1BB874434();
      swift_unknownObjectRetain_n();
      v39 = swift_dynamicCastClass();
      if (!v39)
      {
        swift_unknownObjectRelease();
        v39 = MEMORY[0x1E0DEE9D8];
      }
      v40 = *(_QWORD *)(v39 + 16);
      swift_release();
      if (__OFSUB__(v38 >> 1, v36))
      {
        __break(1u);
      }
      else if (v40 == (v38 >> 1) - v36)
      {
        v23 = (_BYTE *)swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (!v23)
        {
          swift_unknownObjectRelease();
          return (_BYTE *)MEMORY[0x1E0DEE9D8];
        }
        return v23;
      }
      swift_unknownObjectRelease();
    }
    v23 = (_BYTE *)sub_1BA6ACFAC(v32, v34, v36, v38);
    swift_unknownObjectRelease();
  }
  return v23;
}

