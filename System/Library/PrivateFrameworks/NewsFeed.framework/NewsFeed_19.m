uint64_t method lookup function for FeedPluginManagerResult()
{
  return swift_lookUpClassMethod();
}

id UIColor.limitedColor.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v0 = sub_1BB8737A4();
  if (!v0)
    return 0;
  v1 = (void *)v0;
  v2 = sub_1BB8737A4();
  if (!v2)
  {

    return 0;
  }
  v3 = (void *)v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_ts_dynamicColor_withDarkStyleVariant_, v1, v2);

  return v4;
}

id UIColor.extraLimitedColor.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v0 = sub_1BB8737A4();
  if (!v0)
    return 0;
  v1 = (void *)v0;
  v2 = sub_1BB8737A4();
  if (!v2)
  {

    return 0;
  }
  v3 = (void *)v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_ts_dynamicColor_withDarkStyleVariant_, v1, v2);

  return v4;
}

double UIColor.formatColor.getter@<D0>(uint64_t *a1@<X8>)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  sub_1BB873798();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = swift_allocObject();
  *(double *)(v10 + 16) = v3 * 255.0;
  *(double *)(v10 + 24) = v5 * 255.0;
  result = v7 * 255.0;
  *(double *)(v10 + 32) = v7 * 255.0;
  *(_QWORD *)(v10 + 40) = v9;
  *(_BYTE *)(v10 + 48) = 0;
  *a1 = v10 | 0x6000000000000000;
  return result;
}

void UIColor.dynamicFormatColor.getter(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void *v34;
  id (*v35)(void *);
  uint64_t v36;

  v35 = sub_1BB0A8088;
  v36 = 0;
  v3 = MEMORY[0x1E0C809B0];
  v31 = MEMORY[0x1E0C809B0];
  v32 = 1107296256;
  v33 = sub_1BB0A811C;
  v34 = &block_descriptor_3_0;
  v4 = _Block_copy(&v31);
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_traitCollectionWithTraits_, v4);
  _Block_release(v4);
  swift_release();
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v7 = objc_msgSend(v1, sel_resolvedColorWithTraitCollection_, v6);

    v35 = sub_1BB0A8090;
    v36 = 0;
    v31 = v3;
    v32 = 1107296256;
    v33 = sub_1BB0A811C;
    v34 = &block_descriptor_6_2;
    v8 = _Block_copy(&v31);
    v9 = objc_msgSend(v5, sel_traitCollectionWithTraits_, v8);
    _Block_release(v8);
    swift_release();
    if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
    {
      v10 = objc_msgSend(v1, sel_resolvedColorWithTraitCollection_, v9);

      v11 = swift_allocObject();
      sub_1BB873798();
      v13 = v12;
      v15 = v14;
      v17 = v16;
      v19 = v18;
      v20 = swift_allocObject();
      *(double *)(v20 + 16) = v13 * 255.0;
      *(double *)(v20 + 24) = v15 * 255.0;
      *(double *)(v20 + 32) = v17 * 255.0;
      *(_QWORD *)(v20 + 40) = v19;
      *(_BYTE *)(v20 + 48) = 0;
      v21 = v20 | 0x6000000000000000;
      sub_1BB873798();
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v29 = v28;
      v30 = swift_allocObject();
      *(double *)(v30 + 16) = v23 * 255.0;
      *(double *)(v30 + 24) = v25 * 255.0;
      *(double *)(v30 + 32) = v27 * 255.0;
      *(_QWORD *)(v30 + 40) = v29;
      *(_BYTE *)(v30 + 48) = 0;

      *(_QWORD *)(v11 + 16) = v21;
      *(_QWORD *)(v11 + 24) = v30 | 0x6000000000000000;
      *a1 = v11 | 0x3000000000000000;
      return;
    }
  }
  __break(1u);
}

id static UIColor.feedBackground.getter()
{
  int v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  if (qword_1ED3D5150 != -1)
    swift_once();
  v0 = byte_1ED3D5168;
  v1 = (void *)objc_opt_self();
  v2 = v1;
  if (v0 != 1)
    return objc_msgSend(v1, sel_systemBackgroundColor);
  v3 = objc_msgSend(v1, sel_secondarySystemBackgroundColor);
  v4 = objc_msgSend(v2, sel_systemBackgroundColor);
  v5 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v3, v4);

  return v5;
}

uint64_t sub_1BB0A7F04()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float v12;
  uint64_t v13;
  float v14;
  uint64_t v15;
  float v16;
  uint64_t v17;

  v0 = sub_1BB0A81F0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87D7A0;
  v8 = v0 * 255.0;
  v9 = lroundf(v8);
  v10 = MEMORY[0x1E0DEB418];
  v11 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v7 + 64) = v11;
  *(_QWORD *)(v7 + 32) = v9;
  v12 = v2 * 255.0;
  v13 = lroundf(v12);
  *(_QWORD *)(v7 + 96) = v10;
  *(_QWORD *)(v7 + 104) = v11;
  *(_QWORD *)(v7 + 72) = v13;
  v14 = v4 * 255.0;
  v15 = lroundf(v14);
  *(_QWORD *)(v7 + 136) = v10;
  *(_QWORD *)(v7 + 144) = v11;
  *(_QWORD *)(v7 + 112) = v15;
  v16 = v6 * 255.0;
  v17 = lroundf(v16);
  *(_QWORD *)(v7 + 176) = v10;
  *(_QWORD *)(v7 + 184) = v11;
  *(_QWORD *)(v7 + 152) = v17;
  return sub_1BB8729D0();
}

UIColor __swiftcall UIColor.resolvedColor(withOptional:)(UITraitCollection_optional withOptional)
{
  void *v1;

  if (withOptional.value.super.isa)
    return (UIColor)objc_msgSend(v1, sel_resolvedColorWithTraitCollection_, withOptional.value.super.isa);
  else
    return (UIColor)v1;
}

UIColor static UIColor.likeStatusColor.getter()
{
  Swift::String v0;

  sub_1BA748DB8();
  v0._countAndFlagsBits = 0x433830434335;
  v0._object = (void *)0xE600000000000000;
  return UIColor.init(hex:)(v0);
}

id sub_1BB0A8088(void *a1)
{
  return sub_1BB0A8098(a1, 1);
}

id sub_1BB0A8090(void *a1)
{
  return sub_1BB0A8098(a1, 2);
}

id sub_1BB0A8098(void *a1, uint64_t a2)
{
  id v4;
  id v5;

  v4 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v5 = objc_msgSend(v4, sel_userInterfaceLevel);

  objc_msgSend(a1, sel_setUserInterfaceLevel_, v5);
  return objc_msgSend(a1, sel_setUserInterfaceStyle_, a2);
}

uint64_t sub_1BB0A811C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

UIColor __swiftcall UIColor.init(hex:)(Swift::Int hex)
{
  return (UIColor)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithRed_green_blue_alpha_, (double)BYTE3(hex) / 255.0, (double)BYTE2(hex) / 255.0, (double)BYTE1(hex) / 255.0, (double)hex / 255.0);
}

id sub_1BB0A81C4()
{
  return objc_msgSend((id)objc_opt_self(), sel_clearColor);
}

double sub_1BB0A81F0()
{
  void *v0;
  unsigned int v1;
  double result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v6[0] = 0;
  v4 = 0;
  v5 = 0;
  v3 = 0;
  v1 = objc_msgSend(v0, sel_getRed_green_blue_alpha_, v6, &v5, &v4, &v3);
  result = 0.0;
  if (v1)
    return *(double *)v6;
  return result;
}

id sub_1BB0A8280(uint64_t a1, id a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  char v10;
  void *v11;
  uint64_t v13;
  _BYTE v14[16];
  double v15;
  char v16;

  v3 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  sub_1BB8737EC();
  sub_1BB0A8A08((uint64_t)&v13, (uint64_t)v14);
  if ((v16 & 1) == 0 && v15 < 0.12)
  {
    v4 = (void *)objc_opt_self();
    v5 = objc_msgSend(v4, sel_secondarySystemBackgroundColor);
    v6 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithUserInterfaceStyle_, 2);
    v7 = objc_msgSend(v5, sel_resolvedColorWithTraitCollection_, v6);

    v8 = objc_msgSend(v4, sel_systemBackgroundColor);
    v9 = objc_msgSend(v8, sel_resolvedColorWithTraitCollection_, a1);

    sub_1BA748DB8();
    v10 = sub_1BB8738B8();

    if ((v10 & 1) != 0)
      v11 = v7;
    else
      v11 = v3;
    if ((v10 & 1) == 0)
      v3 = v7;

  }
  return v3;
}

id UIColor.navigationBarColor.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.82);
}

unsigned __int8 *sub_1BB0A8420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1BB872B8C();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1BA9BFD08();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1BB873D80();
  }
LABEL_7:
  v11 = sub_1BB0A8638(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB0A8504()
{
  return swift_deallocObject();
}

uint64_t sub_1BB0A8514()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unsigned __int8 *sub_1BB0A8548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_1BB0A89C4();
  swift_bridgeObjectRetain();
  v7 = sub_1BB872B8C();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_1BA9BFD08();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_1BB873D80();
  }
LABEL_7:
  v13 = sub_1BB0A8638(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1BB0A8638(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

id _sSo7UIColorC8NewsFeedE09secondaryC10BackgroundABvgZ_0()
{
  int v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  if (qword_1ED3D5150 != -1)
    swift_once();
  v0 = byte_1ED3D5168;
  v1 = (void *)objc_opt_self();
  v2 = v1;
  if (v0 == 1)
  {
    v3 = objc_msgSend(v1, sel_secondarySystemBackgroundColor);
    v4 = objc_msgSend(v2, sel_systemBackgroundColor);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.97, 0.97, 0.97, 1.0);
    v4 = objc_msgSend(v2, sel_blackColor);
  }
  v5 = v4;
  v6 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v3, v5);

  return v6;
}

unint64_t sub_1BB0A89C4()
{
  unint64_t result;

  result = qword_1EF2BAA10;
  if (!qword_1EF2BAA10)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EF2BAA10);
  }
  return result;
}

uint64_t sub_1BB0A8A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED39C318, sub_1BA841DB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB0A8A6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1BB0A8A8C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t static FormatCommandAction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1BB874398();
}

uint64_t sub_1BB0A8ADC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))() & 1;
}

uint64_t FormatCommandAction.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1BB0A8B20()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t method lookup function for FormatCommandAction()
{
  return swift_lookUpClassMethod();
}

uint64_t FormatGroupBindExpression.init(identifier:kinds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t FormatGroupBindExpression.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupBindExpression.kinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupBindExpression.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatGroupBindExpression.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroupBindExpression.kinds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatGroupBindExpression.kinds.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t _s8NewsFeed25FormatGroupBindExpressionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1BB874398() & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1BA85A3E4(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1BB0A8CBC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB0A8CE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB0A8CE0()
{
  unint64_t result;

  result = qword_1EF2BAA18;
  if (!qword_1EF2BAA18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBindExpression, &type metadata for FormatGroupBindExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2BAA18);
  }
  return result;
}

unint64_t sub_1BB0A8D24(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA675404();
  a1[2] = sub_1BA6533AC();
  result = sub_1BB0A8D58();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB0A8D58()
{
  unint64_t result;

  result = qword_1EF2BAA20;
  if (!qword_1EF2BAA20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBindExpression, &type metadata for FormatGroupBindExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2BAA20);
  }
  return result;
}

uint64_t sub_1BB0A8D9C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB0A8DA8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_1BB0A8DE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB0A8DF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBindExpression()
{
  return &type metadata for FormatGroupBindExpression;
}

uint64_t sub_1BB0A8E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void (*v12)(char *, char *, uint64_t);
  _BYTE *v14;
  _QWORD v15[2];

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v15 - v9;
  v11 = objc_msgSend((id)objc_opt_self(), sel_sportsDataVisualizationBaseURLForConfiguration_, objc_msgSend(*(id *)(v0 + 16), sel_appConfiguration));
  swift_unknownObjectRelease();
  if (v11)
  {
    sub_1BB86C5EC();

    v12 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v12(v3, v7, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      v12(v10, v3, v4);
      sub_1BB86C5BC();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  sub_1BA7F0A80((uint64_t)v3);
  sub_1BA98B368();
  swift_allocError();
  *v14 = 0;
  return swift_willThrow();
}

ValueMetadata *type metadata accessor for A12_V6()
{
  return &type metadata for A12_V6;
}

uint64_t sub_1BB0A9064(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2BAB60, (uint64_t (*)(void))sub_1BB0AB2D0, (uint64_t)&type metadata for A12_V6.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0AB2D0();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB0A9218()
{
  sub_1BB0AB2D0();
  return sub_1BB874710();
}

uint64_t sub_1BB0A9240()
{
  sub_1BB0AB2D0();
  return sub_1BB87471C();
}

double sub_1BB0A9268@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB0AB0BC(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB0A92AC(_QWORD *a1)
{
  return sub_1BB0A9064(a1);
}

uint64_t sub_1BB0A92C0()
{
  sub_1BB0AADD0();
  return sub_1BB86D96C();
}

uint64_t sub_1BB0A9328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  __int128 v64;
  unsigned __int8 v65;
  ValueMetadata *v66;
  unint64_t v67;
  uint64_t v68;

  v53 = a2;
  v46 = a3;
  v47 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  MEMORY[0x1E0C80A78](v9);
  v56 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  v52 = type metadata accessor for GroupLayoutBindingContext();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v50 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v57 = a1;
  sub_1BA4C2DD8(a1, v50, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v49 = sub_1BB86C8C8();
  v48 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v47);
  v66 = &type metadata for A12_V6;
  v20 = sub_1BA8EE5E4();
  v67 = v20;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v58 = sub_1BB874734();
  v59 = v22;
  v62 = 95;
  v63 = 0xE100000000000000;
  v60 = 45;
  v61 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v48;
  *v26 = v49;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v64, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v29, 0, 1, v55);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  sub_1BA7C2538(v16, v17);
  v66 = &type metadata for A12_V6;
  v67 = v20;
  v30 = v56;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  sub_1BA4C2DD8(v53, v56, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v31 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v31 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v31 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v68;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E7269D28, 0, 0, v31, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  }
  else
  {
    v41 = v39;
    swift_release();
    v42 = type metadata accessor for A12_V6.Bound();
    v43 = v46;
    v46[3] = v42;
    v43[4] = sub_1BA4A2870(qword_1EF2BAA38, (uint64_t (*)(uint64_t))type metadata accessor for A12_V6.Bound, (uint64_t)&unk_1BB8E9860);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v43);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v64, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v30, (uint64_t)boxed_opaque_existential_0 + *(int *)(v42 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v42 + 28)) = v41;
  }
  return result;
}

uint64_t sub_1BB0A9840@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _QWORD v29[4];
  uint64_t v30;
  char v31[105];
  __int128 v32[2];
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[6];

  v2 = v1;
  v27 = a1;
  v26 = sub_1BB86DA38();
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A12_V6.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + *(int *)(v8 + 40)) + 16);
  v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BA4C010C(v9 + 16, (uint64_t)&v33);
  sub_1BA4C010C(v9 + 56, (uint64_t)v32);
  v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(&v33, inited + 16);
  sub_1BA4CECCC(v32, inited + 56);
  *(double *)(inited + 96) = v11;
  v31[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v31, v37);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  v13 = *(_QWORD *)(v2 + *(int *)(v6 + 28));
  v29[2] = v2;
  v29[3] = v37;
  swift_bridgeObjectRetain();
  v14 = sub_1BA8A1BE4((void (*)(uint64_t))sub_1BA7F373C, (uint64_t)v29, v13, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  v15 = *MEMORY[0x1E0DB5D88];
  v16 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v5, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB6200], v26);
  v28 = v14;
  sub_1BB0AAE74(0, &qword_1EF2BAAE0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v26 = sub_1BB86DB34();
  v17 = sub_1BB86DB40();
  v25 = v33;
  v18 = v34;
  v19 = v35;
  *(_QWORD *)&v33 = v14;
  *(_QWORD *)&v32[0] = v36;
  MEMORY[0x1E0C80A78](v17);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v20 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v33 = v20;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v21 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v22 = v27;
  *v27 = 0;
  *(_OWORD *)(v22 + 8) = v25;
  *((_QWORD *)v22 + 3) = v18;
  *((_QWORD *)v22 + 4) = v19;
  v23 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v22 + 5) = v21;
  *((_QWORD *)v22 + 6) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

uint64_t sub_1BB0A9C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1EF2BAAF8, (uint64_t (*)(void))sub_1BB0AAD8C, (uint64_t)&type metadata for A12_V6.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 12;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BB0AAE74(0, &qword_1EF2BAB00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB0AAE34(&qword_1EF2BAB08, &qword_1EF2BAB00, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB0A9D74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BAAF8, (uint64_t (*)(void))sub_1BB0AAD8C, (uint64_t)&type metadata for A12_V6.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v20 - v6);
  v23 = a1;
  v8 = sub_1BB86D438();
  v9 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v10, *MEMORY[0x1E0DB5A38], v8);
  *v7 = v9;
  v11 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104);
  v11(v7, *MEMORY[0x1E0DB6318], v4);
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB0AAE74(0, &qword_1EF2BAB10, MEMORY[0x1E0DB5A10]);
  sub_1BB0AAE34(&qword_1EF2BAB18, &qword_1EF2BAB10, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v13(v7, v4);
  v23 = a1;
  v11(v7, *MEMORY[0x1E0DB6410], v4);
  sub_1BB0AAEF0();
  sub_1BA4CDF6C(0, &qword_1EF2BAB28, (uint64_t (*)(void))sub_1BB0AAD8C, (uint64_t)&type metadata for A12_V6.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BB87CE70;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E0DB5C80], v15);
  v22 = v21;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v7, v4);
}

uint64_t sub_1BB0A9FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2BAAF8, (uint64_t (*)(void))sub_1BB0AAD8C, (uint64_t)&type metadata for A12_V6.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB0AAE74(0, &qword_1EF2BAB10, MEMORY[0x1E0DB5A10]);
  sub_1BB0AAE34(&qword_1EF2BAB18, &qword_1EF2BAB10, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 6;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BB0AA1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2BAAF8, (uint64_t (*)(void))sub_1BB0AAD8C, (uint64_t)&type metadata for A12_V6.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (!*(_QWORD *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB0AAE74(0, &qword_1EF2BAB10, MEMORY[0x1E0DB5A10]);
  sub_1BB0AAE34(&qword_1EF2BAB18, &qword_1EF2BAB10, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BB0AA5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2BAAF8, (uint64_t (*)(void))sub_1BB0AAD8C, (uint64_t)&type metadata for A12_V6.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB0AAE74(0, &qword_1EF2BAB10, MEMORY[0x1E0DB5A10]);
  sub_1BB0AAE34(&qword_1EF2BAB18, &qword_1EF2BAB10, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BB0AA9C0@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V6.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB0AAAA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB0A9328(a1, a2, a3);
}

uint64_t sub_1BB0AAAB4()
{
  return sub_1BB690B54();
}

unint64_t sub_1BB0AAAC4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB0AAAF0();
  result = sub_1BB0AAB34();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB0AAAF0()
{
  unint64_t result;

  result = qword_1EF2BAA28;
  if (!qword_1EF2BAA28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E97AC, &type metadata for A12_V6);
    atomic_store(result, (unint64_t *)&qword_1EF2BAA28);
  }
  return result;
}

unint64_t sub_1BB0AAB34()
{
  unint64_t result;

  result = qword_1EF2BAA30;
  if (!qword_1EF2BAA30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E97D4, &type metadata for A12_V6);
    atomic_store(result, (unint64_t *)&qword_1EF2BAA30);
  }
  return result;
}

uint64_t type metadata accessor for A12_V6.Bound()
{
  uint64_t result;

  result = qword_1EF2BAA98;
  if (!qword_1EF2BAA98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB0AABB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB0AABC0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB0AAC3C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB0AAC48(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB0AACBC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB0AAD48(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2BAAD8, (uint64_t (*)(uint64_t))type metadata accessor for A12_V6.Bound, (uint64_t)&unk_1BB8E9838);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB0AAD84(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB0A9C1C(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BB0AAD8C()
{
  unint64_t result;

  result = qword_1EF2BAAE8;
  if (!qword_1EF2BAAE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E9990, &type metadata for A12_V6.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2BAAE8);
  }
  return result;
}

unint64_t sub_1BB0AADD0()
{
  unint64_t result;

  result = qword_1EF2BAAF0;
  if (!qword_1EF2BAAF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E9960, &type metadata for A12_V6.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BAAF0);
  }
  return result;
}

uint64_t sub_1BB0AAE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB0AA9C0(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB0AAE1C()
{
  return swift_deallocObject();
}

uint64_t sub_1BB0AAE2C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB0A9D74(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB0AAE34(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB0AAE74(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB0AAE74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V6.Layout;
    v8[1] = &type metadata for A12_V6.Layout.Attributes;
    v8[2] = sub_1BB0AAD8C();
    v8[3] = sub_1BB0AADD0();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB0AAEF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BAB20)
  {
    sub_1BA4CDF6C(255, &qword_1EF2BAB28, (uint64_t (*)(void))sub_1BB0AAD8C, (uint64_t)&type metadata for A12_V6.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BAB20);
  }
}

uint64_t sub_1BB0AAF64(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB0A9FCC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB0AAF6C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB0AA1B4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB0AAF74(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB0AA5B4(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V6.Layout.Attributes()
{
  return &type metadata for A12_V6.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V6.Layout()
{
  return &type metadata for A12_V6.Layout;
}

unint64_t sub_1BB0AAFA0()
{
  unint64_t result;

  result = qword_1EF2BAB30;
  if (!qword_1EF2BAB30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E9900, &type metadata for A12_V6.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BAB30);
  }
  return result;
}

unint64_t sub_1BB0AAFE8()
{
  unint64_t result;

  result = qword_1EF2BAB38;
  if (!qword_1EF2BAB38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E98D8, &type metadata for A12_V6.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BAB38);
  }
  return result;
}

unint64_t sub_1BB0AB030()
{
  unint64_t result;

  result = qword_1EF2BAB40;
  if (!qword_1EF2BAB40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E98B0, &type metadata for A12_V6.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BAB40);
  }
  return result;
}

unint64_t sub_1BB0AB078()
{
  unint64_t result;

  result = qword_1EF2BAB48;
  if (!qword_1EF2BAB48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E9928, &type metadata for A12_V6.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BAB48);
  }
  return result;
}

uint64_t sub_1BB0AB0BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BAB50, (uint64_t (*)(void))sub_1BB0AB2D0, (uint64_t)&type metadata for A12_V6.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0AB2D0();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB0AB2D0()
{
  unint64_t result;

  result = qword_1EF2BAB58;
  if (!qword_1EF2BAB58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E9A84, &type metadata for A12_V6.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BAB58);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V6.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB0AB360 + 4 * byte_1BB8E979D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB0AB394 + 4 * byte_1BB8E9798[v4]))();
}

uint64_t sub_1BB0AB394(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0AB39C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0AB3A4);
  return result;
}

uint64_t sub_1BB0AB3B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0AB3B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB0AB3BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0AB3C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V6.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V6.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB0AB3E4()
{
  unint64_t result;

  result = qword_1EF2BAB68;
  if (!qword_1EF2BAB68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E9A5C, &type metadata for A12_V6.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BAB68);
  }
  return result;
}

unint64_t sub_1BB0AB42C()
{
  unint64_t result;

  result = qword_1EF2BAB70;
  if (!qword_1EF2BAB70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E99CC, &type metadata for A12_V6.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BAB70);
  }
  return result;
}

unint64_t sub_1BB0AB474()
{
  unint64_t result;

  result = qword_1EF2BAB78;
  if (!qword_1EF2BAB78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E99F4, &type metadata for A12_V6.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BAB78);
  }
  return result;
}

uint64_t FeedChannelCluster.tag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FeedChannelCluster.scoredHeadlines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedChannelCluster.headlines.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 8) + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BB873DD4();
    v3 = 32;
    do
    {
      swift_unknownObjectRetain();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v3 += 16;
      --v1;
    }
    while (v1);
    v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

id FeedChannelCluster.clusteringRules.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t FeedChannelCluster.init(tag:scoredHeadlines:clusteringRules:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

id FeedChannelCluster.replacing(headlines:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  id v4;

  v4 = (id)v2[2];
  *a2 = *v2;
  a2[1] = a1;
  a2[2] = v4;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return v4;
}

void destroy for FeedChannelCluster(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *_s8NewsFeed18FeedChannelClusterVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for FeedChannelCluster(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for FeedChannelCluster(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for FeedChannelCluster()
{
  return &type metadata for FeedChannelCluster;
}

uint64_t sub_1BB0AB728(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7ADAC(0, v1, 0);
  v2 = v25;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v14 = *(_QWORD *)(v25 + 16);
    v13 = *(_QWORD *)(v25 + 24);
    result = swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1)
      result = sub_1BAC7ADAC(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v25 + 16) = v14 + 1;
    v15 = v25 + 16 * v14;
    *(_BYTE *)(v15 + 32) = v24;
    *(_QWORD *)(v15 + 40) = v12;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t FormatOption.init(identifier:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v5 = *a3;
  *a4 = a1;
  a4[1] = a2;
  a4[2] = v5;
  a4[3] = 1;
  v6 = (char *)a4 + *(int *)(type metadata accessor for FormatOption() + 28);
  v7 = type metadata accessor for FormatVersionRequirement(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

uint64_t type metadata accessor for FormatOption()
{
  uint64_t result;

  result = qword_1ED3D0228;
  if (!qword_1ED3D0228)
    return swift_getSingletonMetadata();
  return result;
}

void FormatOption.type.getter()
{
  FormatOptionValue.type.getter();
}

uint64_t FormatOption.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOption.value.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

uint64_t sub_1BB0ABA40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  _QWORD v25[6];
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v26 = type metadata accessor for FormatOption();
  v25[3] = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v35 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)v25 - v4;
  v38 = type metadata accessor for FormatInspectionItem(0);
  v5 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v33 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v32 = (char *)v25 - v8;
  MEMORY[0x1E0C80A78](v9);
  v31 = (char *)v25 - v10;
  MEMORY[0x1E0C80A78](v11);
  v28 = (char *)v25 - v12;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9750, v13, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v37 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v25[2] = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v25 - v17;
  MEMORY[0x1E0C80A78](v19);
  v30 = (char *)v25 - v20;
  v39 = a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB0AD630();
  sub_1BA832824();
  v21 = sub_1BB872BD4();
  sub_1BB0AB728(v21);
  swift_bridgeObjectRelease();
  sub_1BAC87074(0);
  v22 = sub_1BB872E14();
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    v39 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AD80(0, v23, 0);
    v25[1] = v22;
    v25[4] = v22 + 32;
    v29 = v18;
    v36 = v5;
    v25[5] = v23;
    v27 = 1;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BB0AC2F8()
{
  FormatOptionValue.type.getter();
}

uint64_t sub_1BB0AC328(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BB0AC358 + 4 * byte_1BB8E9B14[*a1]))();
}

void sub_1BB0AC358(_QWORD *a1@<X8>)
{
  *a1 = 1702125924;
  a1[1] = 0xE400000000000000;
}

void sub_1BB0AC36C(_QWORD *a1@<X8>)
{
  *a1 = 1836412517;
  a1[1] = 0xE400000000000000;
}

void sub_1BB0AC380(_QWORD *a1@<X8>)
{
  *a1 = 0x74616F6C66;
  a1[1] = 0xE500000000000000;
}

void sub_1BB0AC398(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x72656765746E69;
  a1[1] = v1;
}

void sub_1BB0AC3B0(_QWORD *a1@<X8>)
{
  *a1 = 0x676E69727473;
  a1[1] = 0xE600000000000000;
}

void sub_1BB0AC3C8(_QWORD *a1@<X8>)
{
  *a1 = 7107189;
  a1[1] = 0xE300000000000000;
}

void sub_1BB0AC3DC(_QWORD *a1@<X8>)
{
  *a1 = 0x726F6C6F63;
  a1[1] = 0xE500000000000000;
}

void sub_1BB0AC3F4(_QWORD *a1@<X8>)
{
  *a1 = 0x6567616D69;
  a1[1] = 0xE500000000000000;
}

void sub_1BB0AC40C(_QWORD *a1@<X8>)
{
  *a1 = 0x6F65646976;
  a1[1] = 0xE500000000000000;
}

void sub_1BB0AC424(_QWORD *a1@<X8>)
{
  *a1 = 1953394534;
  a1[1] = 0xE400000000000000;
}

void sub_1BB0AC438(_QWORD *a1@<X8>)
{
  *a1 = 0x616C506F65646976;
  a1[1] = 0xEB00000000726579;
}

BOOL _s8NewsFeed12FormatOptionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  _BOOL8 result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  _BYTE *v30;
  char v31;
  _BYTE v32[12];
  int v33;
  _BYTE *v34;
  _BYTE *v35;
  unint64_t v36;
  uint64_t v37;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v35 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA8D874C();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v32[-v15];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v32[-v18];
  if (*a1 == *a2 && a1[1] == a2[1] || (v20 = sub_1BB874398(), result = 0, (v20 & 1) != 0))
  {
    v22 = a1[2];
    v36 = a2[2];
    v37 = v22;
    if ((static FormatOptionValue.== infix(_:_:)(&v37, &v36) & 1) != 0)
    {
      v34 = v10;
      v23 = a1[3];
      v24 = a2[3];
      if (v23 == 1)
      {
        if (v24 != 1)
          return 0;
      }
      else
      {
        if (v24 == 1)
          return 0;
        if (v23)
        {
          if (!v24)
            return 0;
          sub_1BA6E9BC8(a2[3]);
          sub_1BA6E9BC8(v23);
          v33 = sub_1BA6EB330(v23, v24);
          sub_1BA6E9B40(v24);
          sub_1BA6E9B40(v23);
          if ((v33 & 1) == 0)
            return 0;
        }
        else if (v24)
        {
          return 0;
        }
      }
      v25 = type metadata accessor for FormatOption();
      sub_1BA5E01A4((uint64_t)a1 + *(int *)(v25 + 28), (uint64_t)v19, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
      sub_1BA5E01A4((uint64_t)a2 + *(int *)(v25 + 28), (uint64_t)v16, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
      v26 = *(int *)(v8 + 48);
      v27 = (uint64_t)v34;
      v28 = (uint64_t)&v34[v26];
      sub_1BA5E01A4((uint64_t)v19, (uint64_t)v34, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
      sub_1BA5E01A4((uint64_t)v16, v28, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
      v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v29(v27, 1, v4) == 1)
      {
        sub_1BA5C699C((uint64_t)v16, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
        sub_1BA5C699C((uint64_t)v19, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
        if (v29(v28, 1, v4) == 1)
        {
          sub_1BA5C699C(v27, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
          return 1;
        }
      }
      else
      {
        sub_1BA5E01A4(v27, (uint64_t)v13, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
        if (v29(v28, 1, v4) != 1)
        {
          v30 = v35;
          sub_1BA5193C4(v28, (uint64_t)v35, type metadata accessor for FormatVersionRequirement);
          v31 = sub_1BA9FD2E0((uint64_t)v13, (uint64_t)v30);
          sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FormatVersionRequirement);
          sub_1BA5C699C((uint64_t)v16, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
          sub_1BA5C699C((uint64_t)v19, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
          sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
          sub_1BA5C699C(v27, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
          return (v31 & 1) != 0;
        }
        sub_1BA5C699C((uint64_t)v16, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
        sub_1BA5C699C((uint64_t)v19, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
        sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
      }
      sub_1BA4A2E80(v27, (uint64_t (*)(_QWORD))sub_1BA8D874C);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BB0AC868(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB0AC900(&qword_1EF2BAB80, (uint64_t)&protocol conformance descriptor for FormatOption);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB0AC89C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB0AC900(&qword_1ED3B37E0, (uint64_t)&protocol conformance descriptor for FormatOption);
  a1[2] = sub_1BB0AC900(&qword_1ED3AFE80, (uint64_t)&protocol conformance descriptor for FormatOption);
  result = sub_1BB0AC900(&qword_1EF2BAB88, (uint64_t)&protocol conformance descriptor for FormatOption);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB0AC900(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatOption();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatOption(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  if (v8 != 1)
    swift_bridgeObjectRetain();
  a1[3] = v8;
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for FormatVersionRequirement(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v20 = sub_1BB86EB84();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v21(v10, v11, v20);
      sub_1BA6F3F88();
      v23 = v22;
      v21(&v10[*(int *)(v22 + 48)], &v11[*(int *)(v22 + 48)], v20);
      v19 = *(int *)(v23 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v27 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v10, v11, v27);
        goto LABEL_13;
      }
      v17 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v10, v11, v17);
      sub_1BA8D4E7C();
      v19 = *(int *)(v18 + 48);
    }
    v24 = &v10[v19];
    v25 = &v11[v19];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    return a1;
  }
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for FormatOption(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  v6 = a1 + 3;
  v7 = a2[3];
  if (a1[3] == 1)
  {
    if (v7 == 1)
    {
      v8 = 1;
LABEL_6:
      *v6 = v8;
      goto LABEL_9;
    }
    *v6 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v7 == 1)
    {
      sub_1BAB13D60((uint64_t)(a1 + 3));
      v8 = a2[3];
      goto LABEL_6;
    }
    *v6 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_9:
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for FormatVersionRequirement(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (v16)
    {
      v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_14:
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, v17);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v29 = sub_1BB86EB84();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      v30(v10, v11, v29);
      sub_1BA6F3F88();
      v32 = v31;
      v30(&v10[*(int *)(v31 + 48)], &v11[*(int *)(v31 + 48)], v29);
      v22 = *(int *)(v32 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v35 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v10, v11, v35);
        goto LABEL_26;
      }
      v20 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v10, v11, v20);
      sub_1BA8D4E7C();
      v22 = *(int *)(v21 + 48);
    }
    v33 = &v10[v22];
    v34 = &v11[v22];
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
    swift_bridgeObjectRetain();
LABEL_26:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    return a1;
  }
  if (v16)
  {
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
    v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_14;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v23 = swift_getEnumCaseMultiPayload();
    if (v23 == 2)
    {
      v37 = sub_1BB86EB84();
      v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
      v38(v10, v11, v37);
      sub_1BA6F3F88();
      v40 = v39;
      v38(&v10[*(int *)(v39 + 48)], &v11[*(int *)(v39 + 48)], v37);
      v41 = *(int *)(v40 + 64);
      v42 = &v10[v41];
      v43 = &v11[v41];
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v23 == 1)
      {
        v24 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v10, v11, v24);
        sub_1BA8D4E7C();
        v26 = *(int *)(v25 + 48);
        v27 = &v10[v26];
        v28 = &v11[v26];
        *(_QWORD *)v27 = *(_QWORD *)v28;
        *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        v44 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v10, v11, v44);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FormatOption(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for FormatVersionRequirement(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = sub_1BB86EB84();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v6, v7, v15);
      sub_1BA6F3F88();
      v18 = v17;
      v16(&v6[*(int *)(v17 + 48)], &v7[*(int *)(v17 + 48)], v15);
      v14 = *(int *)(v18 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v19 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v6, v7, v19);
        goto LABEL_9;
      }
      v12 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v6, v7, v12);
      sub_1BA8D4E7C();
      v14 = *(int *)(v13 + 48);
    }
    *(_OWORD *)&v6[v14] = *(_OWORD *)&v7[v14];
LABEL_9:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    return a1;
  }
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  return a1;
}

_QWORD *assignWithTake for FormatOption(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  v7 = a1 + 3;
  v8 = a2[3];
  if (a1[3] == 1)
    goto LABEL_4;
  if (v8 == 1)
  {
    sub_1BAB13D60((uint64_t)(a1 + 3));
    v8 = 1;
LABEL_4:
    *v7 = v8;
    goto LABEL_6;
  }
  *v7 = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for FormatVersionRequirement(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (v16)
    {
      v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_11:
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, v17);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v26 = sub_1BB86EB84();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
      v27(v10, v11, v26);
      sub_1BA6F3F88();
      v29 = v28;
      v27(&v10[*(int *)(v28 + 48)], &v11[*(int *)(v28 + 48)], v26);
      v22 = *(int *)(v29 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v30 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v10, v11, v30);
        goto LABEL_23;
      }
      v20 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v10, v11, v20);
      sub_1BA8D4E7C();
      v22 = *(int *)(v21 + 48);
    }
    *(_OWORD *)&v10[v22] = *(_OWORD *)&v11[v22];
LABEL_23:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    return a1;
  }
  if (v16)
  {
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
    v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_11;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v23 = swift_getEnumCaseMultiPayload();
    if (v23 == 2)
    {
      v32 = sub_1BB86EB84();
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32);
      v33(v10, v11, v32);
      sub_1BA6F3F88();
      v35 = v34;
      v33(&v10[*(int *)(v34 + 48)], &v11[*(int *)(v34 + 48)], v32);
      *(_OWORD *)&v10[*(int *)(v35 + 64)] = *(_OWORD *)&v11[*(int *)(v35 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v23 == 1)
      {
        v24 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v10, v11, v24);
        sub_1BA8D4E7C();
        *(_OWORD *)&v10[*(int *)(v25 + 48)] = *(_OWORD *)&v11[*(int *)(v25 + 48)];
      }
      else
      {
        v36 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v10, v11, v36);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BB0AD470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1BB0AD504(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1BB0AD590()
{
  unint64_t v0;

  sub_1BA4B07F0(319, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1BB0AD630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39EA08;
  if (!qword_1ED39EA08)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39EA08);
  }
  return result;
}

uint64_t sub_1BB0AD690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall FormatBlueprintViewCellProvider.register(in:)(UICollectionView *in)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v1 + 40);
  ObjectType = swift_getObjectType();
  (*(void (**)(UICollectionView *, uint64_t, uint64_t))(v3 + 56))(in, ObjectType, v3);
}

id FormatBlueprintViewCellProvider.cell(for:with:in:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD *__return_ptr, uint64_t, uint64_t, char *, uint64_t *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD v26[3];

  v22 = a3;
  v23 = a4;
  sub_1BA8676E0();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v6);
  sub_1BB0AD904();
  sub_1BB870270();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v4 + 40);
  ObjectType = swift_getObjectType();
  v25 = 0;
  v24 = v26[1];
  v11 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v14 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, char *, uint64_t *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 72);
  swift_retain();
  v14(v26, v22, v23, &v25, &v24, sub_1BB0ADAA8, v13, ObjectType, v10);
  swift_release();
  swift_release();
  swift_release();
  v15 = v26[0];
  sub_1BB1EAB00();
  v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFLL);
  v18 = v17;

  return v18;
}

unint64_t sub_1BB0AD8BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A53E0;
  if (!qword_1ED3A53E0)
  {
    v1 = type metadata accessor for FormatModel();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatModel, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A53E0);
  }
  return result;
}

void sub_1BB0AD904()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3E80)
  {
    sub_1BA83171C();
    v0 = sub_1BB87027C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3E80);
  }
}

uint64_t sub_1BB0AD95C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB0AD980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = result;
    if (MEMORY[0x1BCCE5D40](result + 16))
    {
      v7 = *(_QWORD *)(v6 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v6, a1, a3, ObjectType, v7);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BB0ADA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1BA8676E0();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1BB0ADAA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BA8676E0();
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1BB0AD980(a1, *(_QWORD *)(v1 + 16), v1 + ((v4 + 24) & ~v4));
}

uint64_t FormatBlueprintViewCellProvider.deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t FormatBlueprintViewCellProvider.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB0ADB38(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v2 = *a1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 56))(v2, ObjectType, v3);
}

id sub_1BB0ADB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  id result;

  result = FormatBlueprintViewCellProvider.cell(for:with:in:at:)(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

uint64_t dispatch thunk of FormatBlueprintViewCellProviderDelegate.formatBlueprintViewCellProvider(_:handleAction:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for FormatBlueprintViewCellProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatBlueprintViewCellProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB0ADBE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a5;
  sub_1BA4B07F0(0, qword_1ED3B0048, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v16 - v9);
  v11 = type metadata accessor for DebugGroupLayoutKey();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB27CA04(v10);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1BB0AEDB8((uint64_t)v10);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  sub_1BB8714A0();
  if (qword_1ED3BA8B0 != -1)
    swift_once();
  if ((sub_1BB87147C() & 1) != 0)
  {
    sub_1BB0B3BD4((uint64_t)v14, a4 + 8, a1, (uint64_t)a2);
  }
  else
  {
    if (qword_1ED3BA8A8 != -1)
      swift_once();
    if ((sub_1BB87147C() & 1) != 0)
    {
      sub_1BB0ADE28((uint64_t)v14, a4 + 8, a1, a2, v17);
    }
    else
    {
      if (qword_1ED3BA898 != -1)
        swift_once();
      if ((sub_1BB87147C() & 1) != 0)
        sub_1BB0B3FBC((uint64_t)v14, a4 + 8, a1, (uint64_t)a2);
    }
  }
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
}

void sub_1BB0ADE28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  _QWORD v48[3];
  uint64_t v49;
  _UNKNOWN **v50;
  char v51[24];
  uint64_t v52;
  char v53[24];
  uint64_t v54;
  __int128 v55[2];
  _BYTE v56[24];
  uint64_t v57;

  v6 = v5;
  v12 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v5 + 20, v5[23]);
  v15 = (void *)sub_1BB86FFC4();
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_rootViewController);

    if (v17)
    {
      v45 = a5;
      v47 = a4;
      v46 = (id)sub_1BB8733CC();

      sub_1BA4C2DD8(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
      __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
      sub_1BA505288(0, &qword_1ED3B86F0);
      sub_1BA4C010C(a2, (uint64_t)v55);
      v18 = swift_allocObject();
      sub_1BA4CECCC(v55, v18 + 16);
      sub_1BB86DF30();
      swift_release();
      if (v57)
      {
        v19 = v6[7];
        sub_1BA4C010C((uint64_t)(v6 + 25), (uint64_t)v55);
        __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
        sub_1BA505288(0, &qword_1ED3D39A0);
        swift_retain();
        sub_1BB86DF48();
        if (v54)
        {
          __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
          type metadata accessor for FormatSystemFactory();
          v20 = sub_1BB86DF3C();
          if (v20)
          {
            v21 = v20;
            __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
            sub_1BA505288(0, &qword_1ED3D2D08);
            sub_1BB86DF48();
            if (v52)
            {
              __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
              type metadata accessor for FeedModelFactory();
              v22 = sub_1BB86DF3C();
              if (v22)
              {
                v23 = v22;
                __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
                sub_1BA505288(0, &qword_1ED3D3360);
                sub_1BB86DF48();
                v24 = v48[0];
                if (v48[0])
                {
                  v25 = v48[1];
                  type metadata accessor for DebugFormatModelFactory();
                  v26 = (_QWORD *)swift_allocObject();
                  v26[2] = v23;
                  v26[3] = v24;
                  v26[4] = v25;
                  v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v56, v57);
                  v28 = MEMORY[0x1E0C80A78](v27);
                  v30 = (uint64_t *)((char *)&v44 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
                  (*(void (**)(uint64_t *, double))(v31 + 16))(v30, v28);
                  v32 = *v30;
                  v33 = type metadata accessor for DebugGroupLayoutViewFactory();
                  v50 = &off_1E73356D0;
                  v49 = v33;
                  v48[0] = v32;
                  v34 = (char *)objc_allocWithZone((Class)type metadata accessor for DebugFormatMainViewController());
                  v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v48, v49);
                  v36 = MEMORY[0x1E0C80A78](v35);
                  v38 = (uint64_t *)((char *)&v44 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
                  (*(void (**)(uint64_t *, double))(v39 + 16))(v38, v36);
                  v40 = *v38;
                  v41 = v45;
                  swift_retain();
                  swift_unknownObjectRetain();
                  v42 = sub_1BB0B2784((uint64_t)v14, v40, v19, a3, v47, v41, (uint64_t)v55, (uint64_t)v53, v21, (uint64_t)v51, (uint64_t)v26, v34);
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
                  objc_msgSend(v42, sel_setModalPresentationStyle_, 0);
                  v43 = v46;
                  objc_msgSend(v46, sel_presentViewController_animated_completion_, v42, 1, 0);

                  return;
                }
LABEL_16:
                __break(1u);
                return;
              }
LABEL_15:
              __break(1u);
              goto LABEL_16;
            }
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_13;
    }
  }
}

uint64_t sub_1BB0AE318(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for DebugGroupLayoutKey();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4AD288(0, &qword_1EF2B2220, (uint64_t)&type metadata for GroupLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  sub_1BA4C2DD8(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  *(_QWORD *)(v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  swift_retain();
  return sub_1BB86E998();
}

uint64_t sub_1BB0AE42C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for GroupLayoutBindingContext();
  v3 = swift_projectBox();
  v4 = a1[5];
  v5 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v4);
  v6 = (char *)a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 28);
  swift_beginAccess();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, char *, uint64_t, uint64_t))(v5 + 48))(v10, v3, v6, v4, v5);
  result = swift_endAccess();
  if (!v1)
  {
    v8 = v11;
    v9 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  return result;
}

void sub_1BB0AE528(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD v64[3];
  uint64_t v65;
  _UNKNOWN **v66;
  _QWORD v67[5];
  _QWORD v68[5];
  _QWORD v69[5];
  __int128 v70[3];
  _BYTE v71[24];
  uint64_t v72;
  uint64_t v73;

  v56 = a7;
  v57 = a6;
  v62 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1E0C80A78](v62);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = *(unsigned __int8 *)a1;
  v16 = a1[1];
  v17 = a1[2];
  v18 = a1[3];
  v19 = a1[4];
  v20 = a1[6];
  v60 = a1[5];
  v61 = v20;
  type metadata accessor for GroupLayoutBindingContext();
  v58 = swift_projectBox();
  v21 = (void *)a2[8];
  v22 = a2[9];
  v55 = v15;
  sub_1BA4C2DD8(a3, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v23 = a2[5];
  v73 = a2[6];
  v63 = a2 + 2;
  __swift_project_boxed_opaque_existential_1(a2 + 2, v23);
  sub_1BA505288(0, &qword_1ED3B86F0);
  sub_1BA4C010C(a4, (uint64_t)v70);
  v24 = swift_allocObject();
  sub_1BA4CECCC(v70, v24 + 16);
  v53 = v21;
  v54 = v22;
  swift_unknownObjectRetain();
  sub_1BB86DF30();
  swift_release();
  if (!v72)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_1BACD5F2C();
  v26 = &v12[*(int *)(v25 + 48)];
  v27 = v58;
  swift_beginAccess();
  sub_1BA4C2DD8(v27, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  *v26 = v59;
  *((_QWORD *)v26 + 1) = v16;
  *((_QWORD *)v26 + 2) = v17;
  *((_QWORD *)v26 + 3) = v18;
  *((_QWORD *)v26 + 4) = v19;
  v28 = v61;
  *((_QWORD *)v26 + 5) = v60;
  *((_QWORD *)v26 + 6) = v28;
  swift_storeEnumTagMultiPayload();
  v29 = v63;
  __swift_project_boxed_opaque_existential_1(v63, a2[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB86DF48();
  if (!*(_QWORD *)&v70[0])
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(v29, a2[5]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D39B8);
  sub_1BB86DF48();
  if (!v69[3])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(v29, a2[5]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D38C0);
  sub_1BB86DF48();
  if (!v68[3])
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(v29, a2[5]);
  sub_1BA505288(0, &qword_1ED3CCD80);
  sub_1BB86DF48();
  if (!v67[3])
  {
LABEL_14:
    __break(1u);
    return;
  }
  v30 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v71, v72);
  v31 = MEMORY[0x1E0C80A78](v30);
  v33 = (uint64_t *)((char *)&v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v34 + 16))(v33, v31);
  v35 = *v33;
  v65 = type metadata accessor for DebugGroupLayoutViewFactory();
  v66 = &off_1E73356D0;
  v64[0] = v35;
  v36 = (char *)objc_allocWithZone((Class)type metadata accessor for DebugInspectViewController());
  v37 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v64, v65);
  v38 = MEMORY[0x1E0C80A78](v37);
  v40 = (uint64_t *)((char *)&v52 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v41 + 16))(v40, v38);
  v42 = *v40;
  v43 = v57;
  swift_unknownObjectRetain();
  v44 = v53;
  v45 = sub_1BB0B473C(v53, v54, (uint64_t)v55, v42, (uint64_t)v12, v43, v56, (uint64_t)v70, (uint64_t)v69, (uint64_t)v68, (uint64_t)v67, v36);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
  v46 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v45);

  v47 = objc_msgSend(v46, sel_navigationBar);
  v48 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  objc_msgSend(v47, sel_setTintColor_, v48);

  __swift_project_boxed_opaque_existential_1(a2 + 20, a2[23]);
  v49 = (void *)sub_1BB86FFC4();
  if (v49)
  {
    v50 = v49;
    v51 = objc_msgSend(v49, sel_rootViewController);

    if (v51)
    {
      objc_msgSend(v51, sel_presentViewController_animated_completion_, v46, 1, 0);

      v46 = v51;
    }
  }

}

uint64_t sub_1BB0AEAF4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ED3BA7F8 != -1)
    swift_once();
  v0 = (id)qword_1ED476860;
  v1 = sub_1BB8732F4();
  sub_1BA7AA598();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  sub_1BA505288(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  sub_1BB86EF44("Inspector failed to bind layout, error=%@", 41, 2, &dword_1BA493000, v0, v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB0AEC24(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3B09F0);
  return sub_1BB86DDD4();
}

uint64_t sub_1BB0AEC8C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB0AECE8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BB0ADBE4(a1, a2, a3, a4, a5);
}

BOOL sub_1BB0AED08()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v6;

  sub_1BA4B07F0(0, qword_1ED3B0048, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - v1;
  sub_1BB27CA04((uint64_t *)((char *)&v6 - v1));
  v3 = type metadata accessor for DebugGroupLayoutKey();
  v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3) != 1;
  sub_1BB0AEDB8((uint64_t)v2);
  return v4;
}

uint64_t sub_1BB0AEDB8(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, qword_1ED3B0048, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1BB0AEE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(void);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(void);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(void);
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t (*v163)(uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  void *v170;
  id v171;
  _QWORD *v172;
  id v173;
  void *v174;
  uint64_t v175;
  _QWORD *v176;
  void *v177;
  id v178;
  char *v179;
  id v180;
  void *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t (*v185)(uint64_t, uint64_t);
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t *v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  int64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  int64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  int64_t v229;
  uint64_t v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v249;
  void (*v250)(char *);
  unsigned int v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  __int128 v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  _QWORD *v259;
  _QWORD *v260;
  char *v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  char *v265;
  int *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  _QWORD *v286;
  uint64_t v287;
  __int128 v288;
  __int128 v289;
  uint64_t v290;
  _QWORD v291[5];
  _OWORD v292[7];
  _OWORD v293[9];

  v280 = a7;
  v281 = a8;
  v269 = a6;
  v278 = a3;
  v279 = a5;
  v282 = a4;
  v284 = a1;
  v285 = *a11;
  v286 = a11;
  v12 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v12);
  v276 = (char *)&v249 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = (int *)type metadata accessor for DebugGroupLayoutKey();
  v273 = *((_QWORD *)v266 - 1);
  MEMORY[0x1E0C80A78](v266);
  v274 = v14;
  v275 = (uint64_t)&v249 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v270 = type metadata accessor for FormatDerivedDataCompilerSettings();
  MEMORY[0x1E0C80A78](v270);
  v272 = (uint64_t)&v249 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v271 = (uint64_t *)((char *)&v249 - v17);
  v18 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v18);
  v268 = (uint64_t)&v249 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v267 = (uint64_t)&v249 - v21;
  v264 = sub_1BB873450();
  v260 = *(_QWORD **)(v264 - 8);
  MEMORY[0x1E0C80A78](v264);
  v265 = (char *)&v249 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v262 = sub_1BB87342C();
  v259 = *(_QWORD **)(v262 - 8);
  MEMORY[0x1E0C80A78](v262);
  v263 = (char *)&v249 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v24);
  v261 = (char *)&v249 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0B4CD8(0);
  MEMORY[0x1E0C80A78](v26);
  v258 = (uint64_t)&v249 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v257 = (char *)&v249 - v29;
  sub_1BB0B4CF4(0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v249 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v249 - v34;
  v36 = sub_1BB86DD44();
  v37 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8];
  MEMORY[0x1E0C80A78](v36);
  v291[3] = type metadata accessor for DebugGroupLayoutViewFactory();
  v291[4] = &off_1E73356D0;
  v291[0] = a2;
  v38 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_imageCache;
  type metadata accessor for DebugFormatImageCache();
  swift_allocObject();
  *(_QWORD *)((char *)a11 + v38) = sub_1BB64CC04();
  v283 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_resizingProvider;
  type metadata accessor for FormatLayoutResizingProvider();
  v39 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v293[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3BBE30, v37, MEMORY[0x1E0DB3208]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C02E0, v37, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3C02F0, (unint64_t *)&unk_1ED3C02E0, v37);
  sub_1BB873BC4();
  sub_1BB86DD5C();
  swift_allocObject();
  v40 = sub_1BB86DD50();
  v41 = MEMORY[0x1E0DEE9E0];
  v39[2] = v40;
  v39[3] = v41;
  v39[4] = 0;
  v39[5] = 0;
  v42 = v286;
  *(_QWORD *)((char *)v286 + v283) = v39;
  v43 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__metadata;
  v44 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v35, 1, 1, v44);
  sub_1BA4C2DD8((uint64_t)v35, (uint64_t)v32, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
  v45 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB40C0];
  sub_1BA4B07F0(0, &qword_1EF2BAC08, (uint64_t (*)(uint64_t))sub_1BB0B4CF4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB40C0]);
  swift_allocObject();
  v46 = sub_1BB86E47C();
  sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
  *(_QWORD *)((char *)v42 + v43) = v46;
  v47 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__package;
  *(_QWORD *)&v293[0] = 0;
  sub_1BA4B07F0(0, &qword_1EF2BAC10, (uint64_t (*)(uint64_t))sub_1BB0B4D10, v45);
  swift_allocObject();
  *(_QWORD *)((char *)v42 + v47) = sub_1BB86E47C();
  v48 = (_QWORD *)((char *)v42 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_sourceTheme);
  sub_1BB23F9F8(v292);
  v48[3] = &type metadata for DebugFormatDebuggerSourceTheme.Cora;
  v48[4] = &off_1E72F40F8;
  v49 = (_OWORD *)swift_allocObject();
  *v48 = v49;
  v50 = v292[5];
  v49[5] = v292[4];
  v49[6] = v50;
  v49[7] = v292[6];
  v51 = v292[1];
  v49[1] = v292[0];
  v49[2] = v51;
  v52 = v292[3];
  v49[3] = v292[2];
  v49[4] = v52;
  v53 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showSource;
  LOBYTE(v293[0]) = 0;
  v54 = v45;
  v55 = v42;
  sub_1BA4AD288(0, (unint64_t *)&unk_1EF2BAC20, MEMORY[0x1E0DEAFA0], v54);
  v283 = v56;
  swift_allocObject();
  *(_QWORD *)((char *)v42 + v53) = sub_1BB86E47C();
  v57 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__sourceFile;
  sub_1BA8EBB18(v293);
  sub_1BAF97E40((uint64_t)v293, (uint64_t)&v288);
  v58 = MEMORY[0x1E0DEB940];
  sub_1BB0B4DB0(0, &qword_1EF2BAC30, (unint64_t *)&qword_1EF2B86A0, (uint64_t)&type metadata for DebugFormatFileSource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v57) = sub_1BB86E47C();
  v59 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__sourcePath;
  *(_QWORD *)&v288 = MEMORY[0x1E0DEE9D8];
  sub_1BB0B4DB0(0, &qword_1EF2BAC38, &qword_1EF2BAC40, (uint64_t)&type metadata for FormatSourceMap, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v59) = sub_1BB86E47C();
  v60 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__sourceError;
  sub_1BB0B4DB0(0, &qword_1EF2BAC48, &qword_1EF2BAC50, (uint64_t)&type metadata for DebugFormatFileSourceError, (uint64_t (*)(_QWORD, uint64_t))v58);
  v288 = 0u;
  v289 = 0u;
  v290 = 0;
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v60) = sub_1BB86E47C();
  v61 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showSourceMetrics;
  if (qword_1EF2A6FD0 != -1)
    swift_once();
  sub_1BA50CAA8(0, (unint64_t *)&qword_1EF2BAC58, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB5648]);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v61) = sub_1BB86D2F4();
  v62 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__statusMessage;
  *(_QWORD *)&v288 = 0x2E676E6964616F4CLL;
  *((_QWORD *)&v288 + 1) = 0xEA00000000002E2ELL;
  v63 = MEMORY[0x1E0DB40C0];
  sub_1BA4AD288(0, &qword_1EF2BAC60, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB40C0]);
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v62) = sub_1BB86E47C();
  v64 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__statusProgress;
  LODWORD(v288) = 0;
  sub_1BA4AD288(0, &qword_1EF2BAC68, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))v63);
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v64) = sub_1BB86E47C();
  v65 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadMessage;
  *(_QWORD *)&v288 = 0x2E676E6964616F4CLL;
  *((_QWORD *)&v288 + 1) = 0xEA00000000002E2ELL;
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v65) = sub_1BB86E47C();
  v66 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadProgress;
  LODWORD(v288) = 0;
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v66) = sub_1BB86E47C();
  v67 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__reloadQueueDepth;
  *(_QWORD *)&v288 = 0;
  sub_1BA4AD288(0, &qword_1EF2BAC70, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))v63);
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v67) = sub_1BB86E47C();
  v68 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasDevice;
  if (qword_1EF2A6E98 != -1)
    swift_once();
  sub_1BB0B4ED4(0, &qword_1EF2BAC78, (void (*)(void))sub_1BAC6F1C4);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v68) = sub_1BB86D2F4();
  v69 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasContentSizeCategory;
  if (qword_1EF2A6EA0 != -1)
    swift_once();
  sub_1BB0B4ED4(0, &qword_1EF2BAC88, (void (*)(void))sub_1BAC6F180);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v69) = sub_1BB86D2F4();
  v70 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasIncreaseContrast;
  if (qword_1EF2A6EA8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v70) = sub_1BB86D2F4();
  v71 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasBoldText;
  if (qword_1EF2A6EB0 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v71) = sub_1BB86D2F4();
  v72 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasDeviceShowOldHardware;
  if (qword_1EF2A6EB8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v72) = sub_1BB86D2F4();
  v73 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasBackgroundColor;
  if (qword_1EF2A6EC0 != -1)
    swift_once();
  sub_1BB0B4ED4(0, &qword_1EF2BAC98, (void (*)(void))sub_1BAC6F0F8);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v73) = sub_1BB86D2F4();
  v74 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasBackgroundCustomLightHexValue;
  if (qword_1EF2A6EC8 != -1)
    swift_once();
  sub_1BA50CAA8(0, &qword_1EF2BACA8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB5648]);
  v76 = v75;
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v74) = sub_1BB86D2F4();
  v77 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasBackgroundCustomDarkHexValue;
  if (qword_1EF2A6ED0 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v77) = sub_1BB86D2F4();
  v78 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__layoutOrder;
  if (qword_1EF2A6E60 != -1)
    swift_once();
  sub_1BB0B4ED4(0, (unint64_t *)&unk_1EF2BACB0, (void (*)(void))sub_1BAC6F2E8);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v78) = sub_1BB86D2F4();
  v79 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showMissingOptionBindings;
  if (qword_1EF2A6E58 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v79) = sub_1BB86D2F4();
  v80 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__consoleTrackingNow;
  LOBYTE(v288) = 1;
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v80) = sub_1BB86E47C();
  v81 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__consoleAnimating;
  LOBYTE(v288) = 0;
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v81) = sub_1BB86E47C();
  v82 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__consoleDisplay;
  if (qword_1EF2A6DC0 != -1)
    swift_once();
  sub_1BB0B4ED4(0, (unint64_t *)&unk_1EF2BACC0, (void (*)(void))sub_1BAC6F0B4);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v82) = sub_1BB86D2F4();
  v83 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__consolePaneDisplay;
  if (qword_1EF2A6DC8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v83) = sub_1BB86D2F4();
  v84 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__consoleFilterTerm;
  if (qword_1EF2A6DD0 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v84) = sub_1BB86D2F4();
  v85 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__wildcardSlotFallback;
  if (qword_1EF2A6E50 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v85) = sub_1BB86D2F4();
  v86 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__layoutIdentifier;
  if (qword_1EF2A6DE8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v86) = sub_1BB86D2F4();
  v87 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__backgroundLayoutIdentifier;
  if (qword_1EF2A6DF0 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v87) = sub_1BB86D2F4();
  v88 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__groupIdentifier;
  if (qword_1EF2A6E00 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v88) = sub_1BB86D2F4();
  v89 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__backgroundGroupIdentifier;
  if (qword_1EF2A6E08 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v89) = sub_1BB86D2F4();
  v90 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__bindingIdentifier;
  if (qword_1EF2A6E10 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v90) = sub_1BB86D2F4();
  v91 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__allowSelection;
  if (qword_1EF2A6EE8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v91) = sub_1BB86D2F4();
  v92 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__alwaysBounceVertical;
  if (qword_1EF2A6E40 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v92) = sub_1BB86D2F4();
  v93 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__alwaysBounceHorizontal;
  if (qword_1EF2A6E48 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v93) = sub_1BB86D2F4();
  v94 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showColumns;
  if (qword_1EF2A6D80 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v94) = sub_1BB86D2F4();
  v95 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutMargins;
  if (qword_1EF2A6D88 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v95) = sub_1BB86D2F4();
  v96 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutPaneOnSnapshot;
  if (qword_1EF2A6DA0 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v96) = sub_1BB86D2F4();
  v97 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__userInterfaceStyle;
  if (qword_1EF2A6E20 != -1)
    swift_once();
  sub_1BB0B4F2C(0, (unint64_t *)&unk_1EF2BACD0, type metadata accessor for UIUserInterfaceStyle, (void (*)(void))sub_1BB0B4E08);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v97) = sub_1BB86D2F4();
  v98 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__interfaceLayoutDirection;
  if (qword_1EF2A6E28 != -1)
    swift_once();
  sub_1BB0B4F2C(0, (unint64_t *)&unk_1EF2BACE0, type metadata accessor for UIUserInterfaceLayoutDirection, (void (*)(void))sub_1BB0B4E24);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v98) = sub_1BB86D2F4();
  v99 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showRulers;
  if (qword_1EF2A6ED8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v99) = sub_1BB86D2F4();
  v100 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showToolbar;
  if (qword_1EF2A6EE0 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v100) = sub_1BB86D2F4();
  v101 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__inventorySearchTerm;
  if (qword_1EF2A6E90 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v101) = sub_1BB86D2F4();
  v102 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__inventoryShowDeprecatedPackages;
  if (qword_1EF2A6DB8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v102) = sub_1BB86D2F4();
  v103 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__debuggerSearchTerm;
  if (qword_1EF2A6FC0 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v103) = sub_1BB86D2F4();
  v104 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__inspectorSearchTerm;
  if (qword_1EF2A6FC8 != -1)
    swift_once();
  v277 = v76;
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v55 + v104) = sub_1BB86D2F4();
  v105 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__history;
  v106 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v288 = MEMORY[0x1E0DEE9D8];
  v107 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1BB0B4DB0(0, &qword_1EF2BACF0, &qword_1EF2BACF8, (uint64_t)&type metadata for DebugFormatHistory, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v105) = sub_1BB86E47C();
  v108 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__isCompiling;
  LOBYTE(v288) = 0;
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v108) = sub_1BB86E47C();
  v109 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__isStatusReady;
  LOBYTE(v288) = 0;
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v109) = sub_1BB86E47C();
  v110 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__isSnapshotDebugging;
  LOBYTE(v288) = 0;
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v110) = sub_1BB86E47C();
  v111 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__isConnected;
  LOBYTE(v288) = 0;
  swift_allocObject();
  *(_QWORD *)((char *)v55 + v111) = sub_1BB86E47C();
  v112 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__compilerResult;
  *(_QWORD *)&v288 = v106;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2BAD00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultEntry, v107);
  sub_1BA547334((unint64_t *)&qword_1EF2B6C80, (unint64_t *)&qword_1EF2BAD00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultEntry);
  v113 = sub_1BB872BD4();
  *(_QWORD *)&v288 = v106;
  *((_QWORD *)&v288 + 1) = v113;
  v114 = MEMORY[0x1E0DB40C0];
  sub_1BA4AD288(0, &qword_1EF2BAD10, (uint64_t)&type metadata for DebugFormatCompilerResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB40C0]);
  swift_allocObject();
  *(_QWORD *)((char *)v286 + v112) = sub_1BB86E47C();
  v115 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__compilerProgress;
  v116 = v106;
  v117 = sub_1BA8F3B20(v106);
  *(_QWORD *)&v288 = v116;
  v118 = v286;
  v119 = sub_1BB872BD4();
  *(_QWORD *)&v288 = v116;
  *((_QWORD *)&v288 + 1) = v119;
  *(_QWORD *)&v289 = v117;
  sub_1BA4AD288(0, &qword_1EF2BAD18, (uint64_t)&type metadata for DebugFormatCompilerProgress, (uint64_t (*)(_QWORD, uint64_t))v114);
  swift_allocObject();
  *(_QWORD *)((char *)v118 + v115) = sub_1BB86E47C();
  v120 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__layoutContext;
  v121 = type metadata accessor for DebugFormatEditorLayoutContext();
  v122 = (uint64_t)v257;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v257, 1, 1, v121);
  sub_1BA4C2DD8(v122, v258, (uint64_t (*)(_QWORD))sub_1BB0B4CD8);
  sub_1BA4B07F0(0, &qword_1EF2BAD20, (uint64_t (*)(uint64_t))sub_1BB0B4CD8, (uint64_t (*)(uint64_t, uint64_t))v114);
  swift_allocObject();
  v123 = sub_1BB86E47C();
  sub_1BA4A2E80(v122, (uint64_t (*)(_QWORD))sub_1BB0B4CD8);
  *(_QWORD *)((char *)v118 + v120) = v123;
  v124 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__debuggerWatchSelectors;
  if (qword_1EF2A6F98 != -1)
    swift_once();
  sub_1BB0B4E40();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v124) = sub_1BB86D2F4();
  v125 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__debuggerWatchOptionsIdentifiers;
  if (qword_1EF2A6FA0 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v125) = sub_1BB86D2F4();
  v126 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadEnabled;
  LOBYTE(v288) = 0;
  swift_allocObject();
  *(_QWORD *)((char *)v118 + v126) = sub_1BB86E47C();
  v127 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadTarget;
  if (qword_1EF2A6E68 != -1)
    swift_once();
  sub_1BB0B4ED4(0, (unint64_t *)&unk_1EF2BAD30, (void (*)(void))sub_1BA970CA8);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v127) = sub_1BB86D2F4();
  v128 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadEnvironment;
  if (qword_1EF2A6E78 != -1)
    swift_once();
  sub_1BB0B4ED4(0, (unint64_t *)&unk_1EF2BAD40, (void (*)(void))sub_1BA970C64);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v128) = sub_1BB86D2F4();
  v129 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadUsername;
  if (qword_1EF2A6E80 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v129) = sub_1BB86D2F4();
  v130 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadPassword;
  if (qword_1EF2A6E88 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v130) = sub_1BB86D2F4();
  v131 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadDiffingEnabled;
  if (qword_1EF2A6E70 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v131) = sub_1BB86D2F4();
  v132 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__featureAppleNews;
  if (qword_1EF2A6EF0 != -1)
    swift_once();
  sub_1BB0B4F2C(0, (unint64_t *)&unk_1EF2BAD50, (void (*)(uint64_t))MEMORY[0x1E0DB54F8], (void (*)(void))sub_1BB0B4EB8);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v132) = sub_1BB86D2F4();
  v133 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__featureAppleNewsPrivateData;
  if (qword_1EF2A6EF8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v133) = sub_1BB86D2F4();
  v134 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__featureAppleNewsAudio;
  if (qword_1EF2A6F00 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v134) = sub_1BB86D2F4();
  v135 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__featureAppleNewsMagazines;
  if (qword_1EF2A6F08 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v135) = sub_1BB86D2F4();
  v136 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__videoInFeed;
  if (qword_1ED39ED60 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v136) = sub_1BB86D2F4();
  v137 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__numberOfTestItems;
  if (qword_1EF2A6F10 != -1)
    swift_once();
  sub_1BA50CAA8(0, (unint64_t *)&unk_1EF2BAD60, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB59B8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB5648]);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v137) = sub_1BB86D2F4();
  v138 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__runTestsAutomatically;
  if (qword_1EF2A6F20 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v138) = sub_1BB86D2F4();
  v139 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__testPreviewScale;
  if (qword_1EF2A6F28 != -1)
    swift_once();
  sub_1BA50CAA8(0, (unint64_t *)&qword_1ED39A498, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB5990], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB5648]);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v139) = sub_1BB86D2F4();
  v140 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__testScope;
  if (qword_1EF2A6F30 != -1)
    swift_once();
  sub_1BB0B4ED4(0, (unint64_t *)&unk_1EF2BAD70, (void (*)(void))sub_1BAC6EF54);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v140) = sub_1BB86D2F4();
  v141 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__testRun;
  if (qword_1EF2A6F18 != -1)
    swift_once();
  sub_1BB0B4ED4(0, (unint64_t *)&unk_1EF2BAD80, (void (*)(void))sub_1BAC6EECC);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v141) = sub_1BB86D2F4();
  v142 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__testSubject;
  if (qword_1EF2A6F38 != -1)
    swift_once();
  sub_1BB0B4ED4(0, (unint64_t *)&unk_1EF2BAD90, (void (*)(void))sub_1BAC6EDE4);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v142) = sub_1BB86D2F4();
  v143 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutFirstPass;
  if (qword_1EF2A6F40 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v143) = sub_1BB86D2F4();
  v144 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutSecondPass;
  if (qword_1EF2A6F48 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v144) = sub_1BB86D2F4();
  v145 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutBoxes;
  if (qword_1EF2A6F50 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v145) = sub_1BB86D2F4();
  v146 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutFrames;
  if (qword_1EF2A6F58 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v146) = sub_1BB86D2F4();
  v147 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutSpaces;
  if (qword_1EF2A6F60 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v147) = sub_1BB86D2F4();
  v148 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutEmbeds;
  if (qword_1EF2A6F68 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v148) = sub_1BB86D2F4();
  v149 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__hideContentView;
  if (qword_1EF2A6F70 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v149) = sub_1BB86D2F4();
  v150 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__metricsEnabled;
  if (qword_1EF2A6F78 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v150) = sub_1BB86D2F4();
  v151 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__location;
  if (qword_1EF2A6E30 != -1)
    swift_once();
  sub_1BB0B4ED4(0, (unint64_t *)&unk_1EF2BADA0, (void (*)(void))sub_1BAC6ED5C);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v151) = sub_1BB86D2F4();
  v152 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__weather;
  if (qword_1EF2A6E38 != -1)
    swift_once();
  sub_1BB0B4ED4(0, (unint64_t *)&unk_1EF2BADB0, (void (*)(void))sub_1BAC6ECD4);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v152) = sub_1BB86D2F4();
  v153 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__historyGraphRelativeTimeInMilliseconds;
  if (qword_1EF2A6F80 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v153) = sub_1BB86D2F4();
  v154 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__validatedGroupsOnly;
  if (qword_1EF2A6F90 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v154) = sub_1BB86D2F4();
  v155 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__themeIdentifier;
  if (qword_1EF2A6DF8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v155) = sub_1BB86D2F4();
  v156 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__pinnedIdentifier;
  if (qword_1EF2A6DD8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v156) = sub_1BB86D2F4();
  v157 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__hiddenInventoryIdentifier;
  if (qword_1EF2A6DE0 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v157) = sub_1BB86D2F4();
  v158 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__feedKind;
  LOBYTE(v288) = 0;
  sub_1BA4AD288(0, &qword_1EF2BADC0, (uint64_t)&type metadata for FeedKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB40C0]);
  swift_allocObject();
  *(_QWORD *)((char *)v118 + v158) = sub_1BB86E47C();
  v159 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__overrideFeedKind;
  if (qword_1EF2A6F88 != -1)
    swift_once();
  sub_1BB0B4ED4(0, &qword_1EF2BADC8, (void (*)(void))sub_1BAC6EC4C);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v159) = sub_1BB86D2F4();
  v160 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__clearCacheOnNextLaunch;
  if (qword_1EF2A6DA8 != -1)
    swift_once();
  v283 = a10;
  v277 = a9;
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v160) = sub_1BB86D2F4();
  v161 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__versioningMode;
  if (qword_1EF2A6CB8 != -1)
    swift_once();
  sub_1BB0B4F2C(0, (unint64_t *)&qword_1EF2B19A8, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection, (void (*)(void))sub_1BB0B4F90);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v118 + v161) = sub_1BB86D2F4();
  *(_QWORD *)((char *)v118 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager) = 0;
  v162 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compiler;
  type metadata accessor for DebugFormatCompiler();
  *(_QWORD *)((char *)v118 + v162) = swift_allocObject();
  *(_QWORD *)((char *)v118 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor____lazy_storage___fonts) = 0;
  v249 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  sub_1BB87264C();
  v163 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2BADD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v164 = *((unsigned __int8 *)v259 + 80);
  v257 = (char *)(((v164 + 32) & ~v164) + v259[9]);
  v258 = v165;
  v256 = v164 | 7;
  v166 = swift_allocObject();
  v255 = xmmword_1BB87CE70;
  *(_OWORD *)(v166 + 16) = xmmword_1BB87CE70;
  sub_1BB873420();
  *(_QWORD *)&v288 = v166;
  v253 = sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, v163, MEMORY[0x1E0DEF828]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9650, v163, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v252 = v167;
  v254 = sub_1BA547334((unint64_t *)&qword_1ED3B9660, (unint64_t *)&unk_1ED3B9650, v163);
  sub_1BB873BC4();
  v251 = *MEMORY[0x1E0DEF8D0];
  v250 = (void (*)(char *))v260[13];
  v168 = v264;
  v169 = v265;
  v250(v265);
  v170 = (void *)sub_1BB87348C();
  *(_QWORD *)((char *)v286 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compileQueue) = v170;
  v171 = objc_allocWithZone(MEMORY[0x1E0CB3828]);
  v172 = v170;
  v173 = objc_msgSend(v171, sel_init);
  v174 = (void *)sub_1BB872970();
  objc_msgSend(v173, sel_setName_, v174);

  objc_msgSend(v173, sel_setMaxConcurrentOperationCount_, 6);
  v260 = v172;
  objc_msgSend(v173, sel_setUnderlyingQueue_, v172);
  *(_QWORD *)((char *)v286 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compilerOperationQueue) = v173;
  v259 = v173;
  sub_1BB872640();
  v175 = swift_allocObject();
  *(_OWORD *)(v175 + 16) = v255;
  sub_1BB873420();
  *(_QWORD *)&v288 = v175;
  v176 = v286;
  sub_1BB873BC4();
  ((void (*)(char *, _QWORD, uint64_t))v250)(v169, v251, v168);
  v177 = (void *)sub_1BB87348C();
  *(_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploadQueue) = v177;
  v178 = objc_allocWithZone(MEMORY[0x1E0CB3828]);
  v179 = v177;
  v180 = objc_msgSend(v178, sel_init);
  v181 = (void *)sub_1BB872970();
  objc_msgSend(v180, sel_setName_, v181);

  objc_msgSend(v180, sel_setMaxConcurrentOperationCount_, 6);
  v265 = v179;
  objc_msgSend(v180, sel_setUnderlyingQueue_, v179);
  *(_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploaderOperationQueue) = v180;
  v182 = v284;
  sub_1BA4C2DD8(v284, (uint64_t)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_key, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v183 = v267;
  sub_1BA4C2DD8(v182 + v266[6], v267, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v184 = (_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__bindings);
  swift_beginAccess();
  sub_1BA4C2DD8(v183, v268, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v185 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB40C0];
  sub_1BA4B07F0(0, &qword_1EF2BADE8, (uint64_t (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB40C0]);
  swift_allocObject();
  v266 = (int *)v180;
  v186 = sub_1BB86E47C();
  sub_1BA4A2E80(v183, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  *v184 = v186;
  swift_endAccess();
  sub_1BA4C010C((uint64_t)v291, (uint64_t)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_factory);
  *(_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_fontManager) = v278;
  sub_1BA4C010C(v282, (uint64_t)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_featureAvailability);
  *(_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_cacheManager) = v277;
  *(_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager) = v283;
  type metadata accessor for FormatDebugger();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  *(_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_debugger) = sub_1BB47E8E8();
  v187 = (_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_commandCenter);
  v188 = v280;
  v189 = v269;
  *v187 = v279;
  v187[1] = v189;
  *(_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_commandSource) = v188;
  v190 = (_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__themeIdentifiers);
  swift_beginAccess();
  v191 = MEMORY[0x1E0DEE9D8];
  v287 = MEMORY[0x1E0DEE9D8];
  sub_1BB0B4DB0(0, &qword_1EF2BADF0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_allocObject();
  swift_retain();
  swift_unknownObjectRetain();
  *v190 = sub_1BB86E47C();
  swift_endAccess();
  v192 = (_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__pinnedIdentifiers);
  swift_beginAccess();
  v193 = MEMORY[0x1E0DEE9E8];
  v287 = MEMORY[0x1E0DEE9E8];
  sub_1BB0B4FAC();
  swift_allocObject();
  *v192 = sub_1BB86E47C();
  swift_endAccess();
  v194 = (_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__hiddenInventoryIdentifiers);
  swift_beginAccess();
  v287 = v193;
  swift_allocObject();
  *v194 = sub_1BB86E47C();
  swift_endAccess();
  *(_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_defaultSystemFactory) = v281;
  swift_retain();
  v195 = sub_1BA972C08();
  sub_1BB86D294();
  sub_1BB86D27C();
  v196 = v271;
  sub_1BB86D270();
  swift_release();
  *v196 = v195;
  v197 = (_QWORD *)((char *)v176 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__compilerSettings);
  swift_beginAccess();
  sub_1BA4C2DD8((uint64_t)v196, v272, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2BAE08, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataCompilerSettings, v185);
  swift_allocObject();
  v198 = sub_1BB86E47C();
  sub_1BA4A2E80((uint64_t)v196, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
  *v197 = v198;
  swift_endAccess();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BA7114A0();
  v199 = sub_1BB873B4C();
  swift_bridgeObjectRelease();
  v200 = *(_QWORD *)(v199 + 16);
  if (v200)
  {
    *(_QWORD *)&v288 = v191;
    sub_1BA7447E8(0, v200, 0);
    v201 = v288;
    v202 = (uint64_t *)(v199 + 56);
    do
    {
      v203 = *(v202 - 3);
      v204 = *(v202 - 2);
      v205 = *(v202 - 1);
      v206 = *v202;
      swift_bridgeObjectRetain();
      v207 = MEMORY[0x1BCCE334C](v203, v204, v205, v206);
      v209 = v208;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v288 = v201;
      v211 = *(_QWORD *)(v201 + 16);
      v210 = *(_QWORD *)(v201 + 24);
      if (v211 >= v210 >> 1)
      {
        sub_1BA7447E8(v210 > 1, v211 + 1, 1);
        v201 = v288;
      }
      *(_QWORD *)(v201 + 16) = v211 + 1;
      v212 = v201 + 16 * v211;
      *(_QWORD *)(v212 + 32) = v207;
      *(_QWORD *)(v212 + 40) = v209;
      v202 += 4;
      --v200;
    }
    while (v200);
  }
  swift_bridgeObjectRelease();
  sub_1BB23335C();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v213 = sub_1BB873B4C();
  swift_bridgeObjectRelease();
  v214 = *(_QWORD *)(v213 + 16);
  v215 = MEMORY[0x1E0DEE9D8];
  if (v214)
  {
    *(_QWORD *)&v288 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v214, 0);
    v216 = v288;
    v217 = (uint64_t *)(v213 + 56);
    do
    {
      v218 = *(v217 - 3);
      v219 = *(v217 - 2);
      v220 = *(v217 - 1);
      v221 = *v217;
      swift_bridgeObjectRetain();
      v222 = MEMORY[0x1BCCE334C](v218, v219, v220, v221);
      v224 = v223;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v288 = v216;
      v226 = *(_QWORD *)(v216 + 16);
      v225 = *(_QWORD *)(v216 + 24);
      if (v226 >= v225 >> 1)
      {
        sub_1BA7447E8(v225 > 1, v226 + 1, 1);
        v216 = v288;
      }
      *(_QWORD *)(v216 + 16) = v226 + 1;
      v227 = v216 + 16 * v226;
      *(_QWORD *)(v227 + 32) = v222;
      *(_QWORD *)(v227 + 40) = v224;
      v217 += 4;
      --v214;
    }
    while (v214);
    swift_bridgeObjectRelease();
    v215 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v216 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA6E43EC(v216);
  swift_bridgeObjectRelease();
  sub_1BB233470();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v228 = sub_1BB873B4C();
  swift_bridgeObjectRelease();
  v229 = *(_QWORD *)(v228 + 16);
  if (v229)
  {
    *(_QWORD *)&v288 = v215;
    sub_1BA7447E8(0, v229, 0);
    v230 = v288;
    v231 = (uint64_t *)(v228 + 56);
    do
    {
      v232 = *(v231 - 3);
      v233 = *(v231 - 2);
      v234 = *(v231 - 1);
      v235 = *v231;
      swift_bridgeObjectRetain();
      v236 = MEMORY[0x1BCCE334C](v232, v233, v234, v235);
      v238 = v237;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v288 = v230;
      v240 = *(_QWORD *)(v230 + 16);
      v239 = *(_QWORD *)(v230 + 24);
      if (v240 >= v239 >> 1)
      {
        sub_1BA7447E8(v239 > 1, v240 + 1, 1);
        v230 = v288;
      }
      *(_QWORD *)(v230 + 16) = v240 + 1;
      v241 = v230 + 16 * v240;
      *(_QWORD *)(v241 + 32) = v236;
      *(_QWORD *)(v241 + 40) = v238;
      v231 += 4;
      --v229;
    }
    while (v229);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v230 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA6E43EC(v230);
  swift_bridgeObjectRelease();
  sub_1BB233484();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  LOBYTE(v288) = (_BYTE)v288 != 0;
  swift_retain();
  sub_1BB86D2C4();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  v242 = v275;
  sub_1BA4C2DD8(v284, v275, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v243 = (*(unsigned __int8 *)(v273 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v273 + 80);
  v244 = swift_allocObject();
  sub_1BA5193C4(v242, v244 + v243, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  sub_1BB86D2AC();
  swift_release();
  swift_release();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v245 = 0;
  byte_1EF3D0978 = v288 == 29;
  do
  {
    if (byte_1E7270610[v245 + 32])
    {
      if (byte_1E7270610[v245 + 32] == 1)
      {
        if (qword_1EF2A6C68 == -1)
          goto LABEL_162;
      }
      else if (qword_1EF2A6C70 == -1)
      {
        goto LABEL_162;
      }
LABEL_166:
      swift_once();
      goto LABEL_162;
    }
    if (qword_1EF2A6C60 != -1)
      goto LABEL_166;
LABEL_162:
    ++v245;
    swift_allocObject();
    swift_weakInit();
    sub_1BA4A2870((unint64_t *)&unk_1EF2BAE18, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditor, (uint64_t)&unk_1BB8FB7C0);
    swift_retain();
    sub_1BB86D21C();
    swift_release();
    swift_release();
  }
  while (v245 != 3);
  swift_allocObject();
  v246 = v286;
  swift_weakInit();
  v247 = (uint64_t)v276;
  sub_1BB86D21C();
  swift_release();
  sub_1BA4A2E80(v247, type metadata accessor for FormatVersioningModeSelection);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if (v288 == 1)
  {
    LOBYTE(v288) = 0;
    swift_retain();
    sub_1BB86D2C4();
    swift_release();
    sub_1BB75A460();
  }
  if (qword_1EF2A6FA8 != -1)
    swift_once();
  sub_1BB86D210();
  swift_retain();
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();

  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v282);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v291);
  sub_1BA4A2E80(v284, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  return v246;
}

char *sub_1BB0B2784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12)
{
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *ObjCClassFromMetadata;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  id v68;
  objc_class *v69;
  char *v70;
  uint64_t v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  id *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  id *v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  id v105;
  char *v106;
  id v107;
  void *v108;
  id v109;
  objc_class *v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  id v115;
  id v116;
  id v117;
  void *v118;
  id v119;
  char *v120;
  void *v121;
  id v122;
  uint64_t v123;
  id v124;
  void *v125;
  id v126;
  id v127;
  id v128;
  char *v129;
  objc_class *v130;
  char *v131;
  char *v132;
  char *v133;
  id v134;
  id v135;
  id v136;
  void *v137;
  void *v138;
  char *v139;
  uint64_t v140;
  void *v141;
  id v142;
  char *v143;
  id v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  id v150;
  id v151;
  char *v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id *v157;
  id v158;
  Class v159;
  char *v160;
  char *v161;
  objc_class *v162;
  id *v163;
  _QWORD *v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  __int128 v174;
  uint64_t v175;
  objc_super v176;
  objc_super v177;
  objc_super v178;
  _QWORD v179[5];
  _BYTE v180[40];
  _QWORD v181[8];
  _QWORD v182[3];
  void *v183;
  _UNKNOWN **v184;
  _BYTE v185[344];

  v171 = a8;
  v172 = a7;
  v169 = a3;
  v170 = a6;
  v166 = a5;
  v175 = a4;
  v173 = a1;
  ObjectType = swift_getObjectType();
  v14 = sub_1BB870468();
  MEMORY[0x1E0C80A78](v14);
  v161 = (char *)&v150 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1E0C80A78](v16);
  v163 = (id *)((char *)&v150 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v183 = (void *)type metadata accessor for DebugGroupLayoutViewFactory();
  v184 = &off_1E73356D0;
  v158 = v183;
  v182[0] = a2;
  v18 = &a12[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_packages];
  v19 = qword_1EF2A7490;
  v160 = a12;
  if (v19 != -1)
    swift_once();
  memcpy(v185, &byte_1EF3D09C0, 0x150uLL);
  memmove(v18, &byte_1EF3D09C0, 0x150uLL);
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1BA4B07F0(0, &qword_1EF2BABA0, (uint64_t (*)(uint64_t))sub_1BB0B4BF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  v174 = xmmword_1BB87CE70;
  *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
  v162 = (objc_class *)ObjectType;
  *(_QWORD *)(v21 + 32) = ObjectType;
  sub_1BAF8EA94((uint64_t)v185);
  sub_1BB0B4BF0();
  v22 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(ObjCClassFromMetadata, sel_appearanceWhenContainedInInstancesOfClasses_, v22);

  v24 = (void *)objc_opt_self();
  v25 = objc_msgSend(v24, sel_secondaryLabelColor);
  objc_msgSend(v23, sel_setTintColor_, v25);

  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v174;
  v159 = (Class)type metadata accessor for DebugNavigationController();
  *(_QWORD *)(v26 + 32) = v159;
  v27 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(ObjCClassFromMetadata, sel_appearanceWhenContainedInInstancesOfClasses_, v27);

  v29 = objc_msgSend(v24, sel_secondaryLabelColor);
  objc_msgSend(v28, sel_setTintColor_, v29);

  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v174;
  *(_QWORD *)(v30 + 32) = sub_1BB870D2C();
  v31 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(ObjCClassFromMetadata, sel_appearanceWhenContainedInInstancesOfClasses_, v31);

  v33 = objc_msgSend(v24, sel_secondaryLabelColor);
  objc_msgSend(v32, sel_setTintColor_, v33);

  if (qword_1ED39E3A8 != -1)
    swift_once();
  v34 = qword_1ED476410;
  sub_1BB86DD20();
  swift_beginAccess();
  *(_QWORD *)(v34 + 16) = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  sub_1BB86DD2C();
  if (qword_1EF2A6C58 != -1)
    swift_once();
  v165 = a9;
  v167 = a11;
  v168 = a10;
  swift_retain();
  sub_1BB86ED4C();
  swift_release();
  v36 = v172;
  v35 = v173;
  v37 = v169;
  v38 = v170;
  if (qword_1EF2A7448 != -1)
    swift_once();
  v39 = qword_1EF3D09A8;
  type metadata accessor for DebugFormatManager();
  swift_allocObject();
  swift_retain();
  swift_retain();
  v40 = sub_1BB4821EC(v37, v39);
  sub_1BA4C2DD8(v35, (uint64_t)v163, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  sub_1BA4C010C((uint64_t)v182, (uint64_t)v181);
  sub_1BA4C010C(v36, (uint64_t)v180);
  v41 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v181, v181[3]);
  v157 = &v150;
  v42 = MEMORY[0x1E0C80A78](v41);
  v44 = (uint64_t *)((char *)&v150 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v45 + 16))(v44, v42);
  v46 = *v44;
  v47 = (uint64_t)v158;
  v179[3] = v158;
  v179[4] = &off_1E73356D0;
  v179[0] = v46;
  type metadata accessor for DebugFormatEditor();
  v48 = (_QWORD *)swift_allocObject();
  v49 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v179, v47);
  v50 = MEMORY[0x1E0C80A78](v49);
  v52 = (uint64_t *)((char *)&v150 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v53 + 16))(v52, v50);
  v54 = *v52;
  swift_retain();
  v55 = v165;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v56 = v175;
  swift_unknownObjectRetain();
  v164 = v40;
  v57 = sub_1BB0AEE0C((uint64_t)v163, v54, v37, (uint64_t)v180, v56, (uint64_t)v166, v38, v55, v39, (uint64_t)v40, v48);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v179);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v181);
  v58 = v160;
  *(_QWORD *)&v160[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_editor] = v57;
  v59 = objc_allocWithZone((Class)type metadata accessor for DebugFormatSocketServer());
  v60 = swift_retain_n();
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_socketServer] = sub_1BB7C28C8(v60);
  v61 = objc_allocWithZone((Class)type metadata accessor for DebugFormatInventoryViewController());
  v62 = swift_retain();
  v63 = sub_1BB22FCF0(v62);
  swift_release();
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_inventoryViewController] = v63;
  v64 = objc_allocWithZone((Class)type metadata accessor for DebugFormatLayoutViewController());
  swift_retain();
  v163 = (id *)v63;
  v65 = sub_1BB1F0CB4((uint64_t)v57);
  swift_release();
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_layoutViewController] = v65;
  sub_1BA4C010C(v171, (uint64_t)v181);
  sub_1BA4C010C(v168, (uint64_t)v180);
  v66 = objc_allocWithZone((Class)type metadata accessor for DebugFormatBindingViewController());
  swift_retain();
  v158 = v65;
  v67 = v167;
  swift_retain();
  v68 = sub_1BB79DDD4((uint64_t)v57, (uint64_t)v181, (uint64_t)v180, v67);
  swift_release();
  swift_release();
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_bindingViewController] = v68;
  v69 = (objc_class *)type metadata accessor for DebugFormatCompilerViewController();
  v70 = (char *)objc_allocWithZone(v69);
  v71 = OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_tableView;
  v72 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  swift_retain();
  v157 = (id *)v68;
  v73 = v70;
  *(_QWORD *)&v70[v71] = objc_msgSend(v72, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v74 = OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_throttler;
  sub_1BB86E434();
  v181[0] = sub_1BB86E428();
  sub_1BB0B4C7C();
  swift_allocObject();
  *(_QWORD *)&v73[v74] = sub_1BB86EC98();
  *(_QWORD *)&v73[OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_editor] = v57;
  sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B1400, (uint64_t)&type metadata for DebugFormatCompilerSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = v174;
  v76 = qword_1EF2A7438;
  swift_retain();
  if (v76 != -1)
    swift_once();
  v77 = sub_1BB86EB84();
  __swift_project_value_buffer(v77, (uint64_t)qword_1EF3D0990);
  v78 = sub_1BB86EB24();
  v80 = v79;
  swift_retain();
  v81 = sub_1BB0B3950((uint64_t)&unk_1E7270638, (uint64_t)v57);
  swift_release();
  *(_QWORD *)(v75 + 32) = 0x72656C69706D6F43;
  *(_QWORD *)(v75 + 40) = 0xE800000000000000;
  *(_QWORD *)(v75 + 48) = v78;
  *(_QWORD *)(v75 + 56) = v80;
  *(_QWORD *)(v75 + 64) = v81;
  *(_QWORD *)&v73[OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_sections] = v75;

  v178.receiver = v73;
  v178.super_class = v69;
  v82 = objc_msgSendSuper2(&v178, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_compilerViewController] = v82;
  v83 = objc_allocWithZone((Class)type metadata accessor for DebugFormatTestViewController());
  swift_retain();
  v84 = v82;
  v85 = sub_1BB65FBFC((uint64_t)v57);
  swift_release();
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_testViewController] = v85;
  v86 = objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerViewController());
  swift_retain();
  v156 = v85;
  v87 = sub_1BB441B58((uint64_t)v57);
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_debuggerViewController] = v87;
  v88 = objc_allocWithZone((Class)type metadata accessor for DebugFormatFileViewController());
  swift_retain();
  v155 = v87;
  v89 = sub_1BB3B6524((uint64_t)v57);
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_fileViewController] = v89;
  v90 = objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerSourceViewController());
  swift_retain();
  v91 = v89;
  v150 = v91;
  v92 = sub_1BB0F0C98((uint64_t)v57);
  v151 = v92;
  swift_release();
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_sourceViewController] = v92;
  v154 = (id)sub_1BB8708D0();
  sub_1BA4B07F0(0, &qword_1EF2B16F8, (uint64_t (*)(uint64_t))sub_1BA9834B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_1BB8832C0;
  v94 = sub_1BA4A2870(&qword_1EF2BABC0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatInventoryViewController, (uint64_t)&unk_1BB8FB644);
  v95 = v163;
  *(_QWORD *)(v93 + 32) = v163;
  *(_QWORD *)(v93 + 40) = v94;
  v96 = sub_1BA4A2870(&qword_1EF2BABC8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileViewController, (uint64_t)&unk_1BB910F50);
  *(_QWORD *)(v93 + 48) = v91;
  *(_QWORD *)(v93 + 56) = v96;
  v97 = sub_1BA4A2870(&qword_1EF2BABD0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatLayoutViewController, (uint64_t)&unk_1BB8F88A0);
  v98 = v158;
  *(_QWORD *)(v93 + 64) = v158;
  *(_QWORD *)(v93 + 72) = v97;
  v99 = sub_1BA4A2870(&qword_1EF2BABD8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatBindingViewController, (uint64_t)&unk_1BB94BA64);
  v100 = v157;
  *(_QWORD *)(v93 + 80) = v157;
  *(_QWORD *)(v93 + 88) = v99;
  v101 = sub_1BA4A2870(&qword_1EF2BABE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilerViewController, (uint64_t)&unk_1BB955D54);
  *(_QWORD *)(v93 + 96) = v84;
  *(_QWORD *)(v93 + 104) = v101;
  v102 = sub_1BA4A2870(&qword_1EF2BABE8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatTestViewController, (uint64_t)&unk_1BB9394D0);
  v103 = v156;
  *(_QWORD *)(v93 + 112) = v156;
  *(_QWORD *)(v93 + 120) = v102;
  v104 = sub_1BA4A2870((unint64_t *)&unk_1EF2BABF0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerViewController, (uint64_t)&unk_1BB8FA908);
  v105 = v155;
  *(_QWORD *)(v93 + 128) = v155;
  *(_QWORD *)(v93 + 136) = v104;
  *(_QWORD *)&v174 = v95;
  v152 = (char *)v98;
  v163 = v100;
  v158 = v84;
  v157 = (id *)v103;
  v106 = (char *)v105;
  v153 = v106;
  v156 = v150;
  v107 = v151;
  v108 = (void *)sub_1BB8708A0();
  v109 = objc_msgSend(v108, sel_navigationItem);
  objc_msgSend(v109, sel_setHidesSearchBarWhenScrolling_, 0);

  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_containerSegmentedViewController] = v108;
  v110 = v159;
  v111 = objc_allocWithZone(v159);
  v155 = v108;
  v112 = objc_msgSend(v111, sel_initWithRootViewController_, v155);
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_inventoryContainerController] = v112;
  v113 = objc_allocWithZone((Class)type metadata accessor for DebugFormatEditorViewController());
  v114 = (uint64_t)v164;
  swift_retain();
  swift_retain();
  v154 = v107;
  v115 = sub_1BB19ED94((uint64_t)v57, v114, v154);
  v116 = objc_msgSend(objc_allocWithZone(v110), sel_initWithRootViewController_, v115);
  v117 = objc_allocWithZone((Class)sub_1BB870864());
  v159 = (Class)v116;
  v118 = (void *)sub_1BB87084C();
  sub_1BB2172D4();
  sub_1BB870858();
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_editorViewController] = v115;
  v119 = objc_allocWithZone((Class)sub_1BB8709C0());
  swift_unknownObjectRetain();
  v120 = (char *)v115;
  v161 = v118;
  v121 = (void *)sub_1BB8709B4();
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_editorContainerController] = v121;
  v122 = objc_allocWithZone((Class)type metadata accessor for DebugFormatLogViewController());
  v123 = swift_retain();
  v124 = sub_1BB545294(v123);
  swift_release();
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_logViewController] = v124;
  v125 = *(void **)&v106[OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_debuggerPaneViewController];
  v126 = objc_allocWithZone((Class)type metadata accessor for DebugFormatConsolePaneViewController());
  swift_retain_n();
  v127 = v124;
  v166 = v127;
  v128 = v121;
  v129 = sub_1BB5D1DAC((uint64_t)v57, v127, v125);
  v130 = (objc_class *)type metadata accessor for DebugFormatConsoleViewController();
  v131 = (char *)objc_allocWithZone(v130);
  v132 = &v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight];
  *(_QWORD *)v132 = 0;
  v132[8] = 1;
  v133 = &v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consolePanSession];
  *((_QWORD *)v133 + 1) = 0;
  *((_QWORD *)v133 + 2) = 0;
  *(_QWORD *)v133 = 0;
  v133[24] = 1;
  *(_QWORD *)&v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController____lazy_storage___panGestureRecognizer] = 0;
  *(_QWORD *)&v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editor] = v57;
  *(_QWORD *)&v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editorContainerController] = v128;
  *(_QWORD *)&v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleContainerController] = v129;
  v177.receiver = v131;
  v177.super_class = v130;
  v134 = objc_msgSendSuper2(&v177, sel_initWithNibName_bundle_, 0, 0);
  *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_consoleViewController] = v134;
  v135 = v134;

  v176.receiver = v58;
  v176.super_class = v162;
  v136 = objc_msgSendSuper2(&v176, sel_initWithNibName_bundle_, 0, 0);
  v137 = v120;
  *(_QWORD *)&v120[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_delegate + 8] = &off_1E72F2C60;
  swift_unknownObjectWeakAssign();
  v138 = v152;
  *(_QWORD *)&v152[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_delegate + 8] = &off_1E72F2C50;
  swift_unknownObjectWeakAssign();
  v139 = (char *)v136;
  objc_msgSend(v139, sel_setDelegate_, v139);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v140 = swift_allocObject();
  *(_OWORD *)(v140 + 16) = xmmword_1BB8856F0;
  v141 = *(void **)&v139[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_inventoryContainerController];
  *(_QWORD *)(v140 + 32) = v141;
  *(_QWORD *)(v140 + 40) = v135;
  v181[0] = v140;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3C0420);
  v142 = v135;
  v143 = v139;
  v144 = v141;
  v145 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v143, sel_setViewControllers_, v145);

  type metadata accessor for DebugFormatAlertManager();
  v146 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v147 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v146 + 24) = 0;
  *(_QWORD *)(v146 + 32) = v147;
  swift_unknownObjectWeakAssign();
  v148 = (uint64_t *)(*(_QWORD *)&v143[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_editor]
                   + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
  swift_beginAccess();
  *v148 = v146;
  swift_retain();
  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v168);
  __swift_destroy_boxed_opaque_existential_1(v171);
  __swift_destroy_boxed_opaque_existential_1(v172);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v182);
  sub_1BA4A2E80(v173, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  return v143;
}

uint64_t sub_1BB0B3950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  int64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  int v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  char *v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = type metadata accessor for FormatDerivedDataCompilerSettings();
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = type metadata accessor for DebugFormatCompilerItem();
  v8 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v10 = (_QWORD *)((char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v25[1] = v2;
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B064(0, v11, 0);
    v12 = v31;
    v13 = (unsigned __int8 *)(a1 + 32);
    v29 = a2 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__compilerSettings;
    swift_beginAccess();
    v27 = "ition Item Kind Mismatch";
    v28 = (unint64_t)"Newsroom Identifiers";
    v26 = "ebug-format-logger";
    do
    {
      v15 = *v13++;
      v14 = v15;
      if (v15)
      {
        if (v14 == 1)
        {
          v16 = 0xD000000000000024;
          v17 = v27;
        }
        else
        {
          v16 = 0xD000000000000028;
          v17 = v26;
        }
        v18 = (unint64_t)v17 | 0x8000000000000000;
      }
      else
      {
        v18 = v28 | 0x8000000000000000;
        v16 = 0xD000000000000017;
      }
      *v10 = v16;
      v10[1] = v18;
      swift_retain();
      sub_1BB86E494();
      swift_release();
      v19 = sub_1BAB0CEDC(v14, *v7);
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
      v20 = 20302;
      if ((v19 & 1) != 0)
        v20 = 5457241;
      v21 = 0xE200000000000000;
      if ((v19 & 1) != 0)
        v21 = 0xE300000000000000;
      v10[5] = MEMORY[0x1E0DEA968];
      v10[6] = MEMORY[0x1E0DEA9D8];
      v10[2] = v20;
      v10[3] = v21;
      swift_storeEnumTagMultiPayload();
      v31 = v12;
      v23 = *(_QWORD *)(v12 + 16);
      v22 = *(_QWORD *)(v12 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1BAC7B064(v22 > 1, v23 + 1, 1);
        v12 = v31;
      }
      *(_QWORD *)(v12 + 16) = v23 + 1;
      sub_1BA5193C4((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v23, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerItem);
      --v11;
    }
    while (v11);
  }
  return v12;
}

void sub_1BB0B3BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  __int128 v49[2];

  v45 = a4;
  v43 = a2;
  v44 = a3;
  v38 = a1;
  v46 = *v4;
  v6 = type metadata accessor for DebugGroupLayoutKey();
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v7;
  MEMORY[0x1E0C80A78](v6);
  v40 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1BB87261C();
  v9 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BB86D8A0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = swift_allocBox();
  v20 = v19;
  v21 = a1 + *(int *)(v6 + 24);
  sub_1BA4C010C(v21 + 8, (uint64_t)v49);
  v22 = *(_QWORD *)(v21 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v21 + *(int *)(v12 + 52), v15);
  sub_1BA4C2DD8(v21, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  LOBYTE(v12) = *v14;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v48 = v12;
  v23 = *(_QWORD *)(v21 + 96);
  swift_bridgeObjectRetain();
  sub_1BA6A4D08(v49, v22, 0, (uint64_t)v18, &v48, v23, v20);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v24 = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF530], v39);
  v25 = (void *)sub_1BB873498();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
  v26 = v38;
  v27 = v40;
  sub_1BA4C2DD8(v38, v40, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v28 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v29 = (v42 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject();
  sub_1BA5193C4(v27, v30 + v28, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  *(_QWORD *)(v30 + v29) = v47;
  swift_retain();
  sub_1BB86EBFC();

  swift_release();
  v31 = (void *)sub_1BB87345C();
  sub_1BA4C2DD8(v26, v27, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  sub_1BA4C010C(v43, (uint64_t)v49);
  v32 = (v29 + 47) & 0xFFFFFFFFFFFFFFF8;
  v33 = swift_allocObject();
  sub_1BA5193C4(v27, v33 + v28, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  sub_1BA4CECCC(v49, v33 + v29);
  *(_QWORD *)(v33 + v32) = v47;
  v34 = (_QWORD *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8));
  v35 = v45;
  *v34 = v44;
  v34[1] = v35;
  swift_retain();
  swift_unknownObjectRetain();
  sub_1BB86E98C();
  swift_release();

  swift_release();
  v36 = (void *)sub_1BB86E854();
  sub_1BB86E9A4();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1BB0B3FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t result;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43[24];
  uint64_t v44;
  char v45[24];
  uint64_t v46;
  unsigned __int8 v47[24];
  uint64_t v48;
  _QWORD v49[8];

  v5 = v4;
  v39 = a4;
  v40 = a3;
  v41 = (char *)a1;
  v7 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1E0C80A78](v7);
  v42 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86D8A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v38 - v20;
  v22 = a1 + *(int *)(v7 + 24);
  sub_1BA4C010C(v22 + 8, (uint64_t)v49);
  v23 = *(_QWORD *)(v22 + 48);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v25 = (uint64_t)v42;
  v24(v12, v22 + *(int *)(v13 + 52), v9);
  sub_1BA4C2DD8(v22, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  LOBYTE(v13) = *v18;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v47[0] = v13;
  v26 = *(_QWORD *)(v22 + 96);
  swift_bridgeObjectRetain();
  sub_1BA6A4D08(v49, v23, 0, (uint64_t)v12, v47, v26, (uint64_t)v21);
  v27 = (void *)v5[8];
  v28 = v5[9];
  sub_1BA4C2DD8((uint64_t)v41, v25, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v41 = v15;
  sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  __swift_project_boxed_opaque_existential_1(v5 + 2, v5[5]);
  v29 = v27;
  swift_unknownObjectRetain();
  result = sub_1BB86DF48();
  if (!v49[0])
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(v5 + 2, v5[5]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D39B8);
  result = sub_1BB86DF48();
  if (!v48)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(v5 + 2, v5[5]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D38C0);
  result = sub_1BB86DF48();
  if (!v46)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(v5 + 2, v5[5]);
  sub_1BA505288(0, &qword_1ED3CCD80);
  result = sub_1BB86DF48();
  if (!v44)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v31 = objc_allocWithZone((Class)type metadata accessor for DebugPersonalizationInspectViewController());
  v32 = v40;
  swift_unknownObjectRetain();
  v33 = sub_1BB7AEF44(v29, v28, v25, (uint64_t)v41, v32, v39, (uint64_t)v49, (uint64_t)v47, (uint64_t)v45, (uint64_t)v43);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v34 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v33);

  __swift_project_boxed_opaque_existential_1(v5 + 20, v5[23]);
  v35 = (void *)sub_1BB86FFC4();
  if (v35)
  {
    v36 = v35;
    v37 = objc_msgSend(v35, sel_rootViewController);

    if (v37)
    {
      objc_msgSend(v37, sel_presentViewController_animated_completion_, v34, 1, 0);

      v34 = v37;
    }
  }

  return sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
}

uint64_t sub_1BB0B4430()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1BB0AE318(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BB0B4484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for DebugGroupLayoutKey();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v3 + 16);
  v5 = v0 + v3 + *(int *)(v1 + 24);
  __swift_destroy_boxed_opaque_existential_1(v5 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  v7 = sub_1BB86D8A0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 28);
  v9 = sub_1BB86D7A4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = type metadata accessor for GroupLayoutContext();
  v11 = v8 + *(int *)(v10 + 20);
  v12 = sub_1BB86D660();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v8 + *(int *)(v10 + 24);
  if (*(_QWORD *)(v13 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v14 = v13 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v15 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = sub_1BB8705C4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1BB0B4694(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BB0AE528(a1, a2, v2 + v6, v2 + v7, *(_QWORD *)(v2 + ((v7 + 47) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v7 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v7 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1BB0B4724(_QWORD *a1)
{
  return sub_1BB0AEC24(a1);
}

id sub_1BB0B473C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_class *ObjectType;
  uint64_t v48;
  uint64_t v49;
  objc_super v50;
  _BYTE v51[40];
  _BYTE v52[56];
  _QWORD v53[6];

  v44 = a8;
  v43 = a7;
  v49 = a5;
  v45 = a10;
  v48 = a9;
  v46 = a11;
  ObjectType = (objc_class *)swift_getObjectType();
  v17 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1E0C80A78](v17);
  v41 = (uint64_t)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53[3] = type metadata accessor for DebugGroupLayoutViewFactory();
  v53[4] = &off_1E73356D0;
  v53[0] = a4;
  v22 = OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView;
  v23 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v24 = a12;
  *(_QWORD *)&a12[v22] = objc_msgSend(v23, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v25 = OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_searchController;
  *(_QWORD *)&v24[v25] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C40]), sel_initWithSearchResultsController_, 0);
  *(_QWORD *)&v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_cloudContext] = a1;
  *(_QWORD *)&v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_feedPersonalizer] = a2;
  v26 = a3;
  sub_1BA4C2DD8(a3, (uint64_t)&v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_key], (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  sub_1BA4C010C((uint64_t)v53, (uint64_t)&v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_factory]);
  v27 = v49;
  sub_1BA4C2DD8(v49, (uint64_t)&v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_result], (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewResult);
  v28 = &v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter];
  v29 = v43;
  *(_QWORD *)v28 = a6;
  *((_QWORD *)v28 + 1) = v29;
  v42 = a3;
  sub_1BA4C2DD8(a3, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v30 = v41;
  sub_1BA4C2DD8(v27, v41, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewResult);
  v31 = v44;
  sub_1BACD457C(v44, (uint64_t)v52);
  sub_1BA4C010C(v48, (uint64_t)v51);
  type metadata accessor for DebugInspectViewDataSource();
  swift_allocObject();
  v32 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  *(_QWORD *)&v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource] = sub_1BACCFF9C((uint64_t)v21, v30, (uint64_t)v52, (uint64_t)v51);
  v33 = v45;
  sub_1BA4C010C(v45, (uint64_t)v52);
  v34 = v46;
  sub_1BA4C010C(v46, (uint64_t)v51);
  sub_1BA4C2DD8(v26, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  type metadata accessor for DebugInspector();
  swift_allocObject();
  v35 = v32;
  swift_unknownObjectRetain();
  v36 = sub_1BB3FE4B8(v35, a2, (uint64_t)v52, (uint64_t)v51, (uint64_t)v21, 0);

  swift_unknownObjectRelease();
  *(_QWORD *)&v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inspector] = v36;
  sub_1BACD457C(v31, (uint64_t)&v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inventory]);
  v37 = v48;
  sub_1BA4C010C(v48, (uint64_t)&v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_headlineService]);
  sub_1BA4C010C(v33, (uint64_t)&v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tagService]);
  sub_1BA4C010C(v34, (uint64_t)&v24[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_webEmbedDataSourceService]);

  v50.receiver = v24;
  v50.super_class = ObjectType;
  v38 = objc_msgSendSuper2(&v50, sel_initWithNibName_bundle_, 0, 0);
  __swift_destroy_boxed_opaque_existential_1(v34);
  __swift_destroy_boxed_opaque_existential_1(v33);
  __swift_destroy_boxed_opaque_existential_1(v37);
  sub_1BACD5E78(v31);
  sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewResult);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  return v38;
}

uint64_t sub_1BB0B4B70()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugGroupLayoutKey() - 8) + 80);
  return sub_1BB0AE42C((_QWORD *)(v0 + ((v1 + 16) & ~v1)));
}

uint64_t sub_1BB0B4BCC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_1BB0B4BF0()
{
  unint64_t result;

  result = qword_1EF2BABA8;
  if (!qword_1EF2BABA8)
  {
    sub_1BB0B4C28();
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2BABA8);
  }
  return result;
}

unint64_t sub_1BB0B4C28()
{
  unint64_t result;

  result = qword_1EF2BABB0;
  if (!qword_1EF2BABB0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2BABB0);
  }
  return result;
}

void sub_1BB0B4C7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C6C30)
  {
    sub_1BB86E434();
    v0 = sub_1BB86ECB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C6C30);
  }
}

void sub_1BB0B4CD8(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BAC00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB0B4CF4(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B19C0, type metadata accessor for DebugFormatFileDirectoryMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB0B4D10(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BAC18, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatPackageInventory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB0B4D2C()
{
  id *v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1BB0B4DB0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA4AD288(255, a3, a4, a5);
    v6 = sub_1BB86E4C4();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB0B4E08()
{
  return sub_1BA4A2870((unint64_t *)&unk_1EF2B1150, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceStyle, (uint64_t)&protocol conformance descriptor for UIUserInterfaceStyle);
}

uint64_t sub_1BB0B4E24()
{
  return sub_1BA4A2870(&qword_1EF2B1140, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceLayoutDirection, (uint64_t)&protocol conformance descriptor for UIUserInterfaceLayoutDirection);
}

void sub_1BB0B4E40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BAD28)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAC6F054();
    v0 = sub_1BB86D2E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BAD28);
  }
}

uint64_t sub_1BB0B4EB8()
{
  return sub_1BA4A2870(&qword_1ED3D4B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB54F8], MEMORY[0x1E0DB54F0]);
}

void sub_1BB0B4ED4(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1BB86D2E8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BB0B4F2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BB86D2E8();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB0B4F90()
{
  return sub_1BA4A2870((unint64_t *)&unk_1EF2B19B0, type metadata accessor for FormatVersioningModeSelection, (uint64_t)&protocol conformance descriptor for FormatVersioningModeSelection);
}

void sub_1BB0B4FAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BADF8)
  {
    sub_1BA50CAA8(255, (unint64_t *)&qword_1ED3B96C0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v0 = sub_1BB86E4C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BADF8);
  }
}

uint64_t sub_1BB0B5020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for DebugGroupLayoutKey();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  v4 = v3 + *(int *)(v1 + 24);
  __swift_destroy_boxed_opaque_existential_1(v4 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  v6 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v3 + *(int *)(v1 + 28);
  v8 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = type metadata accessor for GroupLayoutContext();
  v10 = v7 + *(int *)(v9 + 20);
  v11 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v7 + *(int *)(v9 + 24);
  if (*(_QWORD *)(v12 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v13 = v12 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v14 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v15 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB0B51FC()
{
  type metadata accessor for DebugGroupLayoutKey();
  return sub_1BB2335BC();
}

uint64_t sub_1BB0B5248()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB0B526C()
{
  return sub_1BB2336C4();
}

uint64_t sub_1BB0B5274()
{
  return sub_1BB23377C();
}

id SharingIssueURLActivityItemSource.__allocating_init(issue:linkPresentationSource:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1BB0B63F4(a1, a2);

  swift_release();
  return v6;
}

id SharingIssueURLActivityItemSource.init(issue:linkPresentationSource:)(void *a1, uint64_t a2)
{
  id v3;

  v3 = sub_1BB0B63F4(a1, a2);

  swift_release();
  return v3;
}

id SharingIssueURLActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingIssueURLActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingIssueURLActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_OWORD *SharingIssueURLActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *result;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12[3];
  uint64_t v13;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v12 - v4 + 16;
  v6 = v1 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueURL;
  swift_beginAccess();
  sub_1BA7E8428(v6, (uint64_t)v5);
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    result = (_OWORD *)sub_1BA502AD0((uint64_t)v5, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEA968];
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  }
  else
  {
    v13 = v7;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
    (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 32))(boxed_opaque_existential_0, v5, v7);
    return sub_1BA76EAE0(v12, (_OWORD *)a1);
  }
  return result;
}

void SharingIssueURLActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v33;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - v9;
  if (a1)
  {
    v11 = sub_1BB8729A0();
    v13 = v12;
    if (v11 == sub_1BB8729A0() && v13 == v14)
    {
      v26 = a1;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v16 = sub_1BB874398();
      v17 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        v18 = v2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueURL;
        swift_beginAccess();
        sub_1BA7E8428(v18, (uint64_t)v10);
        v19 = sub_1BB86C67C();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v19) != 1)
        {
          *(_QWORD *)(a2 + 24) = v19;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
          (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_0, v10, v19);

          return;
        }

        v21 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        v22 = (uint64_t)v10;
        goto LABEL_11;
      }
    }
    type metadata accessor for SharingHTMLBuilder();
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = 0;
    *(_QWORD *)(v27 + 24) = 0xE000000000000000;
    swift_beginAccess();
    *(_QWORD *)(v27 + 16) = 0;
    *(_QWORD *)(v27 + 24) = 0xE000000000000000;
    swift_bridgeObjectRelease();
    v28 = sub_1BB0B5AA4(v27, v2);
    v30 = v29;
    swift_release();
    if (v30)
    {
      *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

      *(_QWORD *)a2 = v28;
      *(_QWORD *)(a2 + 8) = v30;
      return;
    }

    goto LABEL_17;
  }
  v23 = v2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueURL;
  swift_beginAccess();
  sub_1BA7E8428(v23, (uint64_t)v7);
  v24 = sub_1BB86C67C();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v7, 1, v24) != 1)
  {
    *(_QWORD *)(a2 + 24) = v24;
    v31 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
    (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 32))(v31, v7, v24);
    return;
  }
  v21 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v22 = (uint64_t)v7;
LABEL_11:
  sub_1BA502AD0(v22, (unint64_t *)&qword_1ED3D2E70, v21);
LABEL_17:
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
}

LPLinkMetadata_optional __swiftcall SharingIssueURLActivityItemSource.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  uint64_t v1;
  objc_class *v2;
  Swift::Bool v3;
  objc_class *v4;
  id v5;
  LPLinkMetadata_optional result;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_linkPresentationSource))
  {
    sub_1BB86E71C();
    v2 = (objc_class *)objc_msgSend(v5, sel_linkMetadata);
    swift_unknownObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v4 = v2;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

uint64_t sub_1BB0B5AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __objc2_class_ro *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t DynamicType;
  _UNKNOWN **v27;
  void (*v28)(uint64_t, _UNKNOWN **);
  uint64_t v29;
  _UNKNOWN **v30;
  uint64_t ObjCClassFromMetadata;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _UNKNOWN **v37;
  uint64_t v38;
  _UNKNOWN **v39;
  uint64_t v40;
  _UNKNOWN **v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _UNKNOWN **v46;
  void (*v47)(uint64_t, _UNKNOWN **);
  uint64_t v48;
  _UNKNOWN **v49;
  uint64_t v50;
  _UNKNOWN **v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _UNKNOWN **v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _UNKNOWN **v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  char *v82;
  char *v83;
  uint64_t v84;
  _BYTE v85[40];
  __int128 v86[2];
  __int128 v87;
  uint64_t v88;
  _UNKNOWN **v89;
  _QWORD v90[3];
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[3];
  uint64_t v94;
  _UNKNOWN **v95;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v4);
  v82 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v83 = (char *)&v80 - v7;
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SharingHTMLBuilder();
  v94 = v12;
  v95 = &off_1E7301510;
  v93[0] = a1;
  __swift_project_boxed_opaque_existential_1(v93, v12);
  swift_retain();
  sub_1BB335544(v12, (uint64_t)&off_1E7301510, v90);
  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueCoverDate);
  v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueCoverDate + 8);
  v15 = v91;
  v16 = v92;
  __swift_project_boxed_opaque_existential_1(v90, v91);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 24))(&v87, v13, v14, v15, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  sub_1BA4CECCC(&v87, (uint64_t)v90);
  v17 = v91;
  v18 = v92;
  __swift_project_boxed_opaque_existential_1(v90, v91);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v18 + 16))(&v87, v17, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  sub_1BA4CECCC(&v87, (uint64_t)v90);
  v19 = v91;
  v20 = v92;
  __swift_project_boxed_opaque_existential_1(v90, v91);
  (*(void (**)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(v20 + 56))(&v87, *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueDescription), *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueDescription + 8), v19, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  sub_1BA4CECCC(&v87, (uint64_t)v90);
  v21 = a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueURL;
  swift_beginAccess();
  v84 = v9;
  v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v22 = &StubThumbnailProcessor;
  if (!v81(v21, 1, v8))
  {
    v23 = v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v11, v21, v8);
    v80 = sub_1BB86C538();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v8);
    __swift_project_boxed_opaque_existential_1(v93, v94);
    DynamicType = swift_getDynamicType();
    v27 = v95;
    v28 = (void (*)(uint64_t, _UNKNOWN **))v95[1];
    v88 = DynamicType;
    v89 = v95;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v87);
    v28(DynamicType, v27);
    v29 = v88;
    v30 = v89;
    __swift_project_boxed_opaque_existential_1(&v87, v88);
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v32 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v33 = sub_1BB86C340();
    v35 = v34;

    v22 = &StubThumbnailProcessor;
    ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v30[7])(v86, v33, v35, v29, v30);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
    sub_1BA4CECCC(v86, (uint64_t)&v87);
    v36 = v88;
    v37 = v89;
    __swift_project_boxed_opaque_existential_1(&v87, v88);
    ((void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t, _UNKNOWN **))v37[7])(v86, *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueTitle), *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueTitle + 8), v36, v37);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
    sub_1BA4CECCC(v86, (uint64_t)&v87);
    v38 = v88;
    v39 = v89;
    __swift_project_boxed_opaque_existential_1(&v87, v88);
    ((void (*)(__int128 *__return_ptr, uint64_t, unint64_t, uint64_t, _UNKNOWN **))v39[7])(v86, 8250, 0xE200000000000000, v38, v39);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
    sub_1BA4CECCC(v86, (uint64_t)&v87);
    v40 = v88;
    v41 = v89;
    __swift_project_boxed_opaque_existential_1(&v87, v88);
    ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v41[6])(v86, v80, v25, v80, v25, v40, v41);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
    sub_1BA4CECCC(v86, (uint64_t)&v87);
    v42 = v91;
    v43 = v92;
    __swift_project_boxed_opaque_existential_1(v90, v91);
    sub_1BA4C010C((uint64_t)&v87, (uint64_t)v85);
    (*(void (**)(__int128 *__return_ptr, _BYTE *, uint64_t, uint64_t))(v43 + 32))(v86, v85, v42, v43);
    sub_1BA502AD0((uint64_t)v85, (unint64_t *)&qword_1EF2A9C18, (void (*)(uint64_t))sub_1BA8E3D30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
    sub_1BA4CECCC(v86, (uint64_t)v90);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  }
  __swift_project_boxed_opaque_existential_1(v93, v94);
  v44 = 1;
  v45 = swift_getDynamicType();
  v46 = v95;
  v47 = (void (*)(uint64_t, _UNKNOWN **))v95[1];
  v88 = v45;
  v89 = v95;
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v87);
  v47(v45, v46);
  v48 = v88;
  v49 = v89;
  __swift_project_boxed_opaque_existential_1(&v87, v88);
  ((void (*)(__int128 *__return_ptr, uint64_t, _UNKNOWN **))v49[2])(v86, v48, v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  sub_1BA4CECCC(v86, (uint64_t)&v87);
  v50 = v88;
  v51 = v89;
  __swift_project_boxed_opaque_existential_1(&v87, v88);
  type metadata accessor for Localized();
  v52 = swift_getObjCClassFromMetadata();
  v53 = (void *)objc_opt_self();
  v54 = objc_msgSend(v53, (SEL)v22[55].base_meths, v52);
  v55 = sub_1BB86C340();
  v57 = v56;

  ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v51[7])(v86, v55, v57, v50, v51);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  sub_1BA4CECCC(v86, (uint64_t)&v87);
  v58 = v88;
  v59 = v89;
  __swift_project_boxed_opaque_existential_1(&v87, v88);
  ((void (*)(__int128 *__return_ptr, uint64_t, unint64_t, uint64_t, _UNKNOWN **))v59[7])(v86, 32, 0xE100000000000000, v58, v59);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  sub_1BA4CECCC(v86, (uint64_t)&v87);
  v60 = objc_msgSend((id)objc_opt_self(), sel_nss_MarketingPageURL);
  if (v60)
  {
    v61 = v60;
    v62 = (uint64_t)v82;
    sub_1BB86C5EC();

    v44 = 0;
    v63 = (uint64_t)v83;
    v64 = v84;
  }
  else
  {
    v63 = (uint64_t)v83;
    v64 = v84;
    v62 = (uint64_t)v82;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v62, v44, 1, v8);
  sub_1BA7F0AD4(v62, v63);
  if (v81(v63, 1, v8) == 1)
  {
    sub_1BA502AD0(v63, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  else
  {
    v65 = sub_1BB86C538();
    v67 = v66;
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v8);
    v68 = v88;
    v69 = v89;
    __swift_project_boxed_opaque_existential_1(&v87, v88);
    v70 = objc_msgSend(v53, sel_bundleForClass_, v52);
    v71 = sub_1BB86C340();
    v73 = v72;

    ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v69[6])(v86, v71, v73, v65, v67, v68, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
    sub_1BA4CECCC(v86, (uint64_t)&v87);
  }
  v74 = v91;
  v75 = v92;
  __swift_project_boxed_opaque_existential_1(v90, v91);
  sub_1BA4C010C((uint64_t)&v87, (uint64_t)v85);
  (*(void (**)(__int128 *__return_ptr, _BYTE *, uint64_t, uint64_t))(v75 + 32))(v86, v85, v74, v75);
  sub_1BA502AD0((uint64_t)v85, (unint64_t *)&qword_1EF2A9C18, (void (*)(uint64_t))sub_1BA8E3D30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  sub_1BA4CECCC(v86, (uint64_t)v90);
  v76 = v91;
  v77 = v92;
  __swift_project_boxed_opaque_existential_1(v90, v91);
  v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 64))(v76, v77);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
  return v78;
}

id sub_1BB0B63F4(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v33;
  objc_super v34;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  v10 = (uint64_t)v3 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueURL;
  v11 = sub_1BB86C67C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v13 = v3;
  v14 = objc_msgSend(a1, sel_identifier);
  if (!v14)
  {
    sub_1BB8729A0();
    v14 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v15 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForIssueID_, v14);

  if (v15)
  {
    sub_1BB86C5EC();

    v16 = 0;
  }
  else
  {
    v16 = 1;
  }
  v12((uint64_t)v9, v16, 1, v11);
  swift_beginAccess();
  sub_1BAABEF4C((uint64_t)v9, v10);
  swift_endAccess();
  v17 = objc_msgSend(a1, sel_title);
  v18 = sub_1BB8729A0();
  v20 = v19;

  v21 = (uint64_t *)&v13[OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueTitle];
  *v21 = v18;
  v21[1] = v20;
  v22 = objc_msgSend(a1, sel_coverDate);
  v23 = sub_1BB8729A0();
  v25 = v24;

  v26 = (uint64_t *)&v13[OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueCoverDate];
  *v26 = v23;
  v26[1] = v25;
  v27 = objc_msgSend(a1, sel_issueDescription);
  v28 = sub_1BB8729A0();
  v30 = v29;

  v31 = (uint64_t *)&v13[OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueDescription];
  *v31 = v28;
  v31[1] = v30;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_linkPresentationSource] = a2;
  swift_retain();

  v34.receiver = v13;
  v34.super_class = ObjectType;
  return objc_msgSendSuper2(&v34, sel_init);
}

uint64_t sub_1BB0B6664()
{
  return type metadata accessor for SharingIssueURLActivityItemSource();
}

uint64_t type metadata accessor for SharingIssueURLActivityItemSource()
{
  uint64_t result;

  result = qword_1EF2BAE78;
  if (!qword_1EF2BAE78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB0B66A8()
{
  unint64_t v0;

  sub_1BA4A3FB4(319, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SharingIssueURLActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingIssueURLActivityItemSource.__allocating_init(issue:linkPresentationSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1BB0B6750(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v21 = MEMORY[0x1E0DEE9D8];
    result = sub_1BA7447E8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v21;
    v18 = v1 & 0xC000000000000001;
    v19 = v2;
    v20 = v1;
    while (v2 != v5)
    {
      if (v18)
      {
        v6 = MEMORY[0x1BCCE4630](v5, v1);
      }
      else
      {
        v6 = *(_QWORD *)(v1 + 8 * v5 + 32);
        swift_retain();
      }
      v8 = *(void **)(v6 + 32);
      v7 = *(void **)(v6 + 40);
      v9 = *(id *)(v6 + 48);
      swift_unknownObjectRetain();
      v10 = v7;
      v11 = objc_msgSend(v8, sel_itemID);
      v12 = sub_1BB8729A0();
      v14 = v13;
      swift_release();

      swift_unknownObjectRelease();
      v16 = *(_QWORD *)(v21 + 16);
      v15 = *(_QWORD *)(v21 + 24);
      if (v16 >= v15 >> 1)
        sub_1BA7447E8(v15 > 1, v16 + 1, 1);
      ++v5;
      *(_QWORD *)(v21 + 16) = v16 + 1;
      v17 = v21 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v12;
      *(_QWORD *)(v17 + 40) = v14;
      v2 = v19;
      v1 = v20;
      if (v19 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0B6914(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  id *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v19;
    v4 = (id *)(a1 + 48);
    do
    {
      v5 = *(v4 - 2);
      v6 = *(v4 - 1);
      v7 = *v4;
      swift_unknownObjectRetain();
      v8 = v6;
      v9 = v7;
      swift_unknownObjectRetain();
      v10 = v8;
      v11 = objc_msgSend(v5, sel_itemID);
      v12 = sub_1BB8729A0();
      v14 = v13;

      swift_unknownObjectRelease_n();
      v16 = *(_QWORD *)(v19 + 16);
      v15 = *(_QWORD *)(v19 + 24);
      if (v16 >= v15 >> 1)
        sub_1BA7447E8(v15 > 1, v16 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v19 + 16) = v16 + 1;
      v17 = v19 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v12;
      *(_QWORD *)(v17 + 40) = v14;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB0B6A68(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;

  v2 = v1;
  v4 = sub_1BB87261C();
  v5 = *(_QWORD **)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)(a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  v9 = v8[4];
  v10 = v8[5];
  __swift_project_boxed_opaque_existential_1(v8 + 1, v9);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 64))(v74, v9, v10);
  v11 = v75;
  if (!v75)
  {
    sub_1BA554698((uint64_t)v74);
LABEL_37:
    if (qword_1EF2A7360 != -1)
      swift_once();
    v59 = (id)qword_1EF3D0928;
    v60 = sub_1BB87330C();
    v61 = MEMORY[0x1E0DEE9D8];
    sub_1BB86EF44("Inspection candidate headlines is empty", 39, 2, &dword_1BA493000, v59, v60, MEMORY[0x1E0DEE9D8]);

    v74[0] = v61;
    v74[1] = v61;
    v74[2] = 0;
    sub_1BA4AD288(0, (unint64_t *)&unk_1EF2BAF30, (uint64_t)&type metadata for DebugInspectHeadlineCandidateFetch, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  v12 = v76;
  __swift_project_boxed_opaque_existential_1(v74, v75);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
  if (!v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    goto LABEL_37;
  }
  v14 = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  v15 = (_QWORD *)(v14 >> 62);
  if (v14 >> 62)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    v16 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v16)
      goto LABEL_5;
    goto LABEL_36;
  }
  v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v16)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
LABEL_5:
  v64 = v15;
  v66 = v7;
  v67 = v5;
  v68 = v4;
  v69 = v2;
  v74[0] = v14;
  sub_1BA865C5C(0);
  sub_1BB0B8150((unint64_t *)&unk_1EF2BAF40, (uint64_t (*)(uint64_t))sub_1BA865C5C);
  v15 = v74;
  v65 = sub_1BB8730F0();
  v72 = v14 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v7 = 4;
  v70 = v16;
  v71 = v14;
  do
  {
    v18 = v7 - 4;
    if (v72)
    {
      v19 = MEMORY[0x1BCCE4630](v7 - 4, v14);
      v20 = v7 - 3;
      if (__OFADD__(v18, 1))
        goto LABEL_32;
    }
    else
    {
      v19 = *(_QWORD *)(v14 + 8 * v7);
      swift_retain();
      v20 = v7 - 3;
      if (__OFADD__(v18, 1))
      {
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
    }
    v73 = v20;
    v21 = *(void **)(v19 + 32);
    v22 = *(void **)(v19 + 40);
    v23 = *(id *)(v19 + 48);
    swift_unknownObjectRetain();
    v24 = v22;
    v25 = objc_msgSend(v21, sel_itemID);
    v4 = sub_1BB8729A0();
    v27 = v26;

    swift_unknownObjectRelease();
    v28 = *(id *)(v19 + 40);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v74[0] = v5;
    v15 = v5;
    v2 = sub_1BA6E35A8(v4, v27);
    v31 = v5[2];
    v32 = (v30 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
      goto LABEL_33;
    v14 = v30;
    if (v5[3] >= v33)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v5 = (_QWORD *)v74[0];
        if ((v30 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        v15 = v74;
        sub_1BB4C7130();
        v5 = (_QWORD *)v74[0];
        if ((v14 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1BB4B5D60(v33, isUniquelyReferenced_nonNull_native);
      v15 = (_QWORD *)v74[0];
      v34 = sub_1BA6E35A8(v4, v27);
      if ((v14 & 1) != (v35 & 1))
      {
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v2 = v34;
      v5 = (_QWORD *)v74[0];
      if ((v14 & 1) != 0)
      {
LABEL_6:
        v17 = v5[7];
        v15 = (_QWORD *)(8 * v2);

        *(_QWORD *)(v17 + 8 * v2) = v28;
        goto LABEL_7;
      }
    }
    v5[(v2 >> 6) + 8] |= 1 << v2;
    v36 = (uint64_t *)(v5[6] + 16 * v2);
    *v36 = v4;
    v36[1] = v27;
    *(_QWORD *)(v5[7] + 8 * v2) = v28;
    v37 = v5[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_34;
    v5[2] = v39;
    swift_bridgeObjectRetain();
LABEL_7:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v7;
    v14 = v71;
  }
  while (v73 != v70);
  swift_bridgeObjectRelease();
  if (qword_1EF2A7360 != -1)
    swift_once();
  v40 = (void *)qword_1EF3D0928;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1BB87A390;
  v42 = v66;
  if (v64)
  {
    swift_bridgeObjectRetain();
    v45 = v40;
    v43 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v43 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    v44 = v40;
  }
  v46 = MEMORY[0x1E0DEB418];
  v47 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v41 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v41 + 64) = v47;
  *(_QWORD *)(v41 + 32) = v43;
  v48 = v65;
  v49 = *(_QWORD *)(v65 + 16);
  *(_QWORD *)(v41 + 96) = v46;
  *(_QWORD *)(v41 + 104) = v47;
  *(_QWORD *)(v41 + 72) = v49;
  sub_1BB87330C();
  sub_1BB86EF44("Inspection fetching %ld candidate headlines in %ld chunks...", v63, v64);

  swift_bridgeObjectRelease();
  sub_1BA657D64();
  v51 = v67;
  v50 = v68;
  ((void (*)(uint64_t, _QWORD, uint64_t))v67[13])(v42, *MEMORY[0x1E0DEF530], v68);
  v52 = (void *)sub_1BB873498();
  ((void (*)(uint64_t, uint64_t))v51[1])(v42, v50);
  v53 = swift_allocObject();
  v54 = v69;
  *(_QWORD *)(v53 + 16) = v48;
  *(_QWORD *)(v53 + 24) = v54;
  sub_1BA4B07F0(0, &qword_1EF2BAF50, (uint64_t (*)(uint64_t))sub_1BA573E74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_retain();
  sub_1BB86EBFC();

  swift_release();
  v55 = swift_allocObject();
  *(_QWORD *)(v55 + 16) = v5;
  *(_QWORD *)(v55 + 24) = v14;
  swift_bridgeObjectRetain();
  v56 = (void *)sub_1BB86E854();
  sub_1BB86E968();
  swift_release();
  swift_release();

  *(_QWORD *)(swift_allocObject() + 16) = v14;
  v57 = (void *)sub_1BB86E854();
  v58 = sub_1BB86EA10();
  swift_release();
  swift_release();

  return v58;
}

uint64_t sub_1BB0B717C(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  sub_1BA8CB71C();
  swift_retain();
  sub_1BB0B7D88(a1, a2);
  swift_release();
  v4 = (void *)sub_1BB86E854();
  sub_1BB0B8134(0);
  sub_1BB0B8150((unint64_t *)&unk_1EF2BAF60, (uint64_t (*)(uint64_t))sub_1BB0B8134);
  v5 = sub_1BB86E920();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1BB0B724C(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t i;
  unint64_t v14;
  void (*v15)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  void **v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _WORD *v38;
  int *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(_QWORD, _QWORD, _QWORD, _QWORD);
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  char v82;
  void *v83;
  unint64_t v84;

  v69 = a3;
  v78 = a2;
  v73 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v73);
  v72 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  *(_QWORD *)&v76 = (char *)&v66 - v6;
  v7 = type metadata accessor for FeedItem(0);
  v74 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = MEMORY[0x1E0DEE9D8];
  v79 = MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v12; ++i)
    {
      v14 = swift_bridgeObjectRetain();
      sub_1BA66293C(v14);
    }
    swift_bridgeObjectRelease();
    v11 = v79;
  }
  v77 = objc_msgSend((id)objc_opt_self(), sel_mapTableWithKeyOptions_valueOptions_, 512, 512);
  v15 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))(v11 >> 62);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v16 = result;
    if (result)
      goto LABEL_7;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v16 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v16)
    goto LABEL_16;
LABEL_7:
  if (v16 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }
  v70 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))(v11 >> 62);
  v71 = v9;
  v18 = 0;
  do
  {
    v20 = v11;
    v21 = *(_QWORD *)(v11 + 8 * v18 + 32);
    v22 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v23 = sub_1BB8729A0();
    v25 = v24;

    v26 = v78;
    if (*(_QWORD *)(v78 + 16) && (v27 = sub_1BA6E35A8(v23, v25), (v28 & 1) != 0))
      v19 = *(id *)(*(_QWORD *)(v26 + 56) + 8 * v27);
    else
      v19 = 0;
    ++v18;
    swift_bridgeObjectRelease();
    objc_msgSend(v77, sel_setObject_forKey_, v19, v21);

    swift_unknownObjectRelease();
    v11 = v20;
  }
  while (v16 != v18);
  swift_bridgeObjectRelease();
  v15 = v70;
  v9 = v71;
LABEL_17:
  sub_1BA768D08();
  v29 = (void *)sub_1BB872D9C();
  FCAssignPersonalizationScoresFromProfiles();

  if (v15)
  {
    swift_bridgeObjectRetain();
    v30 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v31 = MEMORY[0x1E0DEE9D8];
  if (v30)
  {
    v84 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7AD0C(0, v30 & ~(v30 >> 63), 0);
    if ((v30 & 0x8000000000000000) == 0)
    {
      v31 = v84;
      v67 = v11;
      v32 = (void **)(v11 + 32);
      v33 = sub_1BB871B24();
      v70 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v33 - 8) + 56);
      v71 = (char *)v33;
      do
      {
        v78 = v30;
        v34 = *v32;
        v35 = (uint64_t)v9;
        v36 = v76;
        v70(v76, 1, 1, v71);
        v83 = 0;
        v79 = 0;
        LOBYTE(v80) = 1;
        v82 = 0;
        v37 = v31;
        v38 = v72;
        v39 = (int *)v73;
        v40 = &v72[*(int *)(v73 + 24)];
        v41 = type metadata accessor for SharedItem();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
        *v38 = 258;
        *((_BYTE *)v38 + v39[7]) = 1;
        *((_BYTE *)v38 + v39[8]) = 0;
        *((_BYTE *)v38 + v39[9]) = 0;
        v42 = v39[10];
        v31 = v37;
        *((_BYTE *)v38 + v42) = 0;
        swift_unknownObjectRetain_n();
        FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v34, 0, &v82, v36, (uint64_t)v38, &v83, v35, (uint64_t)&v79);
        swift_storeEnumTagMultiPayload();
        swift_unknownObjectRelease();
        v84 = v37;
        v44 = *(_QWORD *)(v37 + 16);
        v43 = *(_QWORD *)(v37 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_1BAC7AD0C(v43 > 1, v44 + 1, 1);
          v31 = v84;
        }
        *(_QWORD *)(v31 + 16) = v44 + 1;
        sub_1BA6DA07C(v35, v31+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(_QWORD *)(v74 + 72) * v44);
        ++v32;
        v30 = v78 - 1;
        v9 = (char *)v35;
      }
      while (v78 != 1);
      v11 = v67;
      goto LABEL_27;
    }
LABEL_36:
    __break(1u);
    return result;
  }
LABEL_27:
  v45 = v68;
  v46 = sub_1BB01AC38(v11);
  swift_bridgeObjectRelease();
  v47 = sub_1BA6E43EC(v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v48 = v69;
  v49 = sub_1BB0B7EF4(v69, v47);
  v78 = v45;
  swift_bridgeObjectRelease_n();
  if (qword_1EF2A7360 != -1)
    swift_once();
  v50 = (void *)qword_1EF3D0928;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v51 = swift_allocObject();
  v76 = xmmword_1BB87A390;
  *(_OWORD *)(v51 + 16) = xmmword_1BB87A390;
  v52 = *(_QWORD *)(v31 + 16);
  v53 = MEMORY[0x1E0DEB418];
  v54 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v51 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v51 + 64) = v54;
  *(_QWORD *)(v51 + 32) = v52;
  if (v48 >> 62)
  {
    v65 = v50;
    swift_bridgeObjectRetain();
    v55 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v55 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
    v56 = v50;
  }
  *(_QWORD *)(v51 + 96) = v53;
  *(_QWORD *)(v51 + 104) = v54;
  *(_QWORD *)(v51 + 72) = v55;
  sub_1BB87330C();
  sub_1BB86EF44("Inspection did fetch %ld of %ld candidate headlines", v66, v67);

  swift_bridgeObjectRelease();
  v57 = v49[2];
  if (v57)
  {
    v58 = (void *)qword_1EF3D0928;
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v76;
    *(_QWORD *)(v59 + 56) = v53;
    *(_QWORD *)(v59 + 64) = v54;
    *(_QWORD *)(v59 + 32) = v57;
    v60 = v58;
    v61 = sub_1BB0B6914((uint64_t)v49);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    *(_QWORD *)(v59 + 96) = v62;
    *(_QWORD *)(v59 + 104) = sub_1BAA3CD34();
    *(_QWORD *)(v59 + 72) = v61;
    v63 = sub_1BB87330C();
    sub_1BB86EF44("Inspection failed to fetch %ld candidate headlines, %@", 54, 2, &dword_1BA493000, v60, v63, v59);

    swift_bridgeObjectRelease();
  }
  v79 = v31;
  v80 = v49;
  v81 = v55;
  sub_1BA4AD288(0, (unint64_t *)&unk_1EF2BAF30, (uint64_t)&type metadata for DebugInspectHeadlineCandidateFetch, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v64 = sub_1BB86E9E0();

  return v64;
}

uint64_t sub_1BB0B7994(uint64_t a1, unint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1EF2A7360 != -1)
    swift_once();
  v3 = (id)qword_1EF3D0928;
  v4 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 40) = 0xE000000000000000;
  sub_1BB86EF44("Failed to fetch headlines for scored feed items, error=%@", 57, 2, &dword_1BA493000, v3, v4, v5);

  swift_bridgeObjectRelease();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v6)
    goto LABEL_18;
  v29 = MEMORY[0x1E0DEE9D8];
  result = sub_1BAC7A4C0(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v28 = v6;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v8 = 0;
      do
      {
        v9 = (_QWORD *)MEMORY[0x1BCCE4630](v8, a2);
        v11 = v9[4];
        v10 = (void *)v9[5];
        v12 = (void *)v9[6];
        v13 = v12;
        swift_unknownObjectRetain();
        v14 = v10;
        swift_unknownObjectRelease();
        v16 = *(_QWORD *)(v29 + 16);
        v15 = *(_QWORD *)(v29 + 24);
        if (v16 >= v15 >> 1)
          sub_1BAC7A4C0(v15 > 1, v16 + 1, 1);
        ++v8;
        *(_QWORD *)(v29 + 16) = v16 + 1;
        v17 = (_QWORD *)(v29 + 24 * v16);
        v17[4] = v11;
        v17[5] = v14;
        v17[6] = v12;
      }
      while (v28 != v8);
    }
    else
    {
      v18 = a2 + 32;
      v19 = v6;
      do
      {
        v21 = *(_QWORD *)(*(_QWORD *)v18 + 32);
        v20 = *(void **)(*(_QWORD *)v18 + 40);
        v22 = *(void **)(*(_QWORD *)v18 + 48);
        v24 = *(_QWORD *)(v29 + 16);
        v23 = *(_QWORD *)(v29 + 24);
        swift_unknownObjectRetain();
        v25 = v20;
        v26 = v22;
        if (v24 >= v23 >> 1)
          sub_1BAC7A4C0(v23 > 1, v24 + 1, 1);
        *(_QWORD *)(v29 + 16) = v24 + 1;
        v27 = (_QWORD *)(v29 + 24 * v24);
        v27[4] = v21;
        v27[5] = v25;
        v27[6] = v22;
        v18 += 8;
        --v19;
      }
      while (v19);
    }
LABEL_18:
    sub_1BA4AD288(0, (unint64_t *)&unk_1EF2BAF30, (uint64_t)&type metadata for DebugInspectHeadlineCandidateFetch, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DebugInspectHeadlineService()
{
  return objc_opt_self();
}

uint64_t sub_1BB0B7D04()
{
  return objectdestroyTm_11((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB0B7D10()
{
  uint64_t v0;

  return sub_1BB0B717C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_1BB0B7D28()
{
  return objectdestroyTm_11((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BB0B7D34(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BB0B724C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB0B7D4C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0B7D70(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB0B7994(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB0B7D88(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v5 = a1 + 32;
    v12 = (id)objc_opt_self();
    v11 = *MEMORY[0x1E0D58630];
    do
    {
      v5 += 8;
      v7 = a2[5];
      v6 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v7);
      v8 = swift_bridgeObjectRetain();
      v9 = sub_1BB0B6750(v8);
      v10 = objc_msgSend(v12, sel_defaultCachePolicy);
      (*(void (**)(uint64_t, _QWORD, id, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v9, 0, v10, v11, 25, v7, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      --v3;
    }
    while (v3);
    return v14;
  }
  return result;
}

_QWORD *sub_1BB0B7EF4(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v29;

  v2 = a1;
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v27 = v2 & 0xC000000000000001;
      v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v4 = 4;
      v25 = v2;
      v26 = v3;
      while (1)
      {
        v5 = v4 - 4;
        if (v27)
        {
          v6 = MEMORY[0x1BCCE4630](v4 - 4, v2);
          v7 = v4 - 3;
          if (__OFADD__(v5, 1))
            goto LABEL_17;
        }
        else
        {
          v6 = *(_QWORD *)(v2 + 8 * v4);
          swift_retain();
          v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        v9 = *(void **)(v6 + 32);
        v8 = *(void **)(v6 + 40);
        v10 = *(id *)(v6 + 48);
        swift_unknownObjectRetain();
        v11 = v8;
        v12 = objc_msgSend(v9, sel_itemID);
        v13 = sub_1BB8729A0();
        v15 = v14;

        swift_unknownObjectRelease();
        LOBYTE(v11) = sub_1BA761FE4(v13, v15, a2);
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
        {
          swift_release();
          v2 = v25;
        }
        else
        {
          v17 = *(_QWORD *)(v6 + 32);
          v16 = *(void **)(v6 + 40);
          v18 = *(void **)(v6 + 48);
          v19 = v18;
          swift_unknownObjectRetain();
          v20 = v16;
          swift_release();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v29 = sub_1BB3929D8(0, v29[2] + 1, 1, v29);
          v2 = v25;
          v22 = v29[2];
          v21 = v29[3];
          if (v22 >= v21 >> 1)
            v29 = sub_1BB3929D8((_QWORD *)(v21 > 1), v22 + 1, 1, v29);
          v29[2] = v22 + 1;
          v23 = &v29[3 * v22];
          v23[4] = v17;
          v23[5] = v20;
          v23[6] = v18;
        }
        ++v4;
        if (v7 == v26)
          goto LABEL_20;
      }
    }
  }
  v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v29;
}

void sub_1BB0B8134(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BAF58, (uint64_t (*)(uint64_t))sub_1BA8CB71C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BB0B8150(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1BB0B8194(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DebugInspectHeadlineCandidateFetch(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for DebugInspectHeadlineCandidateFetch(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectHeadlineCandidateFetch()
{
  return &type metadata for DebugInspectHeadlineCandidateFetch;
}

id sub_1BB0B8288()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 14.0);
  objc_msgSend(v0, sel_setFont_, v1);

  v2 = objc_msgSend((id)objc_opt_self(), sel_grayColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setLineBreakMode_, 4);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  return v0;
}

void sub_1BB0B8378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  objc_class *ObjCClassFromMetadata;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  char *v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  objc_class *ObjectType;
  uint64_t v99;
  uint64_t v101;
  id v103;
  objc_super v104;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v3[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_identifier];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_thumbnailImageView;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
  v7 = v3;
  v8 = objc_msgSend(v6, sel_init);
  v9 = objc_msgSend(v8, sel_layer);
  objc_msgSend(v9, sel_setCornerRadius_, 4.0);

  objc_msgSend(v8, sel_setContentMode_, 2);
  objc_msgSend(v8, sel_setClipsToBounds_, 1);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v3[v5] = v8;
  v10 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_publisherTitle;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v12 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 8.0);
  objc_msgSend(v11, sel_setFont_, v12);

  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v11, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v7[v10] = v11;
  v13 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_articleTitle;
  *(_QWORD *)&v7[v13] = sub_1BB0B8288();
  type metadata accessor for DebugPersonalizationSelectionButton();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v15 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v16 = (void *)sub_1BB872970();
  objc_msgSend(v15, sel_setTitle_forState_, v16, 0);

  v17 = *(id *)&v15[qword_1EF2BB270];
  v18 = (void *)sub_1BB872970();
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_systemImageNamed_, v18);

  if (!v20)
  {
    __break(1u);
    goto LABEL_8;
  }
  v21 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_yesButton;
  objc_msgSend(v17, sel_setImage_, v20);

  *(_QWORD *)&v7[v21] = v15;
  v22 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v23 = (void *)sub_1BB872970();
  objc_msgSend(v22, sel_setTitle_forState_, v23, 0);

  v24 = *(id *)&v22[qword_1EF2BB270];
  v25 = (void *)sub_1BB872970();
  v26 = objc_msgSend(v19, sel_systemImageNamed_, v25);

  if (!v26)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v27 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_noButton;
  objc_msgSend(v24, sel_setImage_, v26);

  *(_QWORD *)&v7[v27] = v22;
  if (a3)
  {
    v28 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = 0;
  }
  v104.receiver = v7;
  v104.super_class = ObjectType;
  v29 = objc_msgSendSuper2(&v104, sel_initWithStyle_reuseIdentifier_, a1, v28);

  v30 = (char *)v29;
  v31 = objc_msgSend(v30, sel_contentView);
  v32 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_thumbnailImageView;
  objc_msgSend(v31, sel_addSubview_, *(_QWORD *)&v30[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_thumbnailImageView]);

  v33 = objc_msgSend(v30, (SEL)&selRef_halfLifeCoefficient);
  v96 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_publisherTitle;
  objc_msgSend(v33, sel_addSubview_, *(_QWORD *)&v30[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_publisherTitle]);

  v34 = objc_msgSend(v30, (SEL)&selRef_halfLifeCoefficient);
  v97 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_articleTitle;
  objc_msgSend(v34, sel_addSubview_, *(_QWORD *)&v30[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_articleTitle]);

  v35 = objc_msgSend(v30, (SEL)&selRef_halfLifeCoefficient);
  v99 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_yesButton;
  objc_msgSend(v35, sel_addSubview_, *(_QWORD *)&v30[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_yesButton]);

  v36 = objc_msgSend(v30, (SEL)&selRef_halfLifeCoefficient);
  v101 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_noButton;
  objc_msgSend(v36, sel_addSubview_, *(_QWORD *)&v30[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_noButton]);

  v103 = (id)objc_opt_self();
  sub_1BA65E330();
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1BB8E9EF0;
  v38 = objc_msgSend(*(id *)&v30[v32], sel_leadingAnchor);
  v39 = objc_msgSend(v30, (SEL)&selRef_halfLifeCoefficient);
  v40 = objc_msgSend(v39, (SEL)&selRef_absoluteTimeInterval + 6);

  v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v40, 16.0);
  *(_QWORD *)(v37 + 32) = v41;
  v42 = objc_msgSend(*(id *)&v30[v32], sel_topAnchor);
  v43 = objc_msgSend(v30, (SEL)&selRef_halfLifeCoefficient);
  v44 = objc_msgSend(v43, (SEL)&selRef_setContentsGravity_ + 4);

  v45 = objc_msgSend(v42, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v44, 16.0);
  *(_QWORD *)(v37 + 40) = v45;
  v46 = objc_msgSend(*(id *)&v30[v32], sel_bottomAnchor);
  v47 = objc_msgSend(v30, (SEL)&selRef_halfLifeCoefficient);
  v48 = objc_msgSend(v47, (SEL)&selRef_userInterfaceStyle + 5);

  v49 = objc_msgSend(v46, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v48, -16.0);
  *(_QWORD *)(v37 + 48) = v49;
  v50 = objc_msgSend(*(id *)&v30[v32], sel_widthAnchor);
  v51 = objc_msgSend(v50, sel_constraintEqualToConstant_, 90.0);

  *(_QWORD *)(v37 + 56) = v51;
  v52 = *(void **)&v30[v32];
  v53 = objc_msgSend(v52, sel_heightAnchor);
  v54 = objc_msgSend(v52, sel_widthAnchor);
  v55 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v54);

  *(_QWORD *)(v37 + 64) = v55;
  v56 = objc_msgSend(*(id *)&v30[v96], (SEL)&selRef_setContentsGravity_ + 4);
  v57 = objc_msgSend(v30, (SEL)&selRef_halfLifeCoefficient);
  v58 = objc_msgSend(v57, (SEL)&selRef_setContentsGravity_ + 4);

  v59 = objc_msgSend(v56, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v58, 8.0);
  *(_QWORD *)(v37 + 72) = v59;
  v60 = objc_msgSend(*(id *)&v30[v96], sel_leadingAnchor);
  v61 = objc_msgSend(*(id *)&v30[v32], sel_trailingAnchor);
  v62 = objc_msgSend(v60, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v61, 16.0);

  *(_QWORD *)(v37 + 80) = v62;
  v63 = objc_msgSend(*(id *)&v30[v96], (SEL)&selRef_ultraQualityImage);
  v64 = objc_msgSend(v30, sel_contentView);
  v65 = objc_msgSend(v64, (SEL)&selRef_ultraQualityImage);

  v66 = objc_msgSend(v63, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v65, -16.0);
  *(_QWORD *)(v37 + 88) = v66;
  v67 = objc_msgSend(*(id *)&v30[v97], sel_topAnchor);
  v68 = objc_msgSend(*(id *)&v30[v96], sel_bottomAnchor);
  v69 = objc_msgSend(v67, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v68, 2.0);

  *(_QWORD *)(v37 + 96) = v69;
  v70 = objc_msgSend(*(id *)&v30[v97], sel_leadingAnchor);
  v71 = objc_msgSend(*(id *)&v30[v32], sel_trailingAnchor);
  v72 = objc_msgSend(v70, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v71, 16.0);

  *(_QWORD *)(v37 + 104) = v72;
  v73 = objc_msgSend(*(id *)&v30[v97], sel_trailingAnchor);
  v74 = objc_msgSend(v30, sel_contentView);
  v75 = objc_msgSend(v74, (SEL)&selRef_ultraQualityImage);

  v76 = objc_msgSend(v73, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v75, -16.0);
  *(_QWORD *)(v37 + 112) = v76;
  v77 = objc_msgSend(*(id *)&v30[v97], sel_bottomAnchor);
  v78 = objc_msgSend(v30, sel_contentView);
  v79 = objc_msgSend(v78, (SEL)&selRef_userInterfaceStyle + 5);

  v80 = objc_msgSend(v77, sel_constraintLessThanOrEqualToAnchor_constant_, v79, -48.0);
  *(_QWORD *)(v37 + 120) = v80;
  v81 = objc_msgSend(*(id *)&v30[v99], (SEL)&selRef_userInterfaceStyle + 5);
  v82 = objc_msgSend(v30, (SEL)&selRef_halfLifeCoefficient);
  v83 = objc_msgSend(v82, (SEL)&selRef_userInterfaceStyle + 5);

  v84 = objc_msgSend(v81, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v83, -16.0);
  *(_QWORD *)(v37 + 128) = v84;
  v85 = objc_msgSend(*(id *)&v30[v99], sel_leadingAnchor);
  v86 = objc_msgSend(*(id *)&v30[v32], (SEL)&selRef_ultraQualityImage);
  v87 = objc_msgSend(v85, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v86, 16.0);

  *(_QWORD *)(v37 + 136) = v87;
  v88 = objc_msgSend(*(id *)&v30[v101], (SEL)&selRef_userInterfaceStyle + 5);
  v89 = objc_msgSend(v30, sel_contentView);
  v90 = objc_msgSend(v89, (SEL)&selRef_userInterfaceStyle + 5);

  v91 = objc_msgSend(v88, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v90, -16.0);
  *(_QWORD *)(v37 + 144) = v91;
  v92 = objc_msgSend(*(id *)&v30[v101], sel_leadingAnchor);
  v93 = objc_msgSend(*(id *)&v30[v99], sel_trailingAnchor);
  v94 = objc_msgSend(v92, (SEL)&selRef_setShortcutsBarWithLeadingGroups_trailingGroups_ + 7, v93, 10.0);

  *(_QWORD *)(v37 + 152) = v94;
  sub_1BB872DCC();
  sub_1BAA659B8();
  v95 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v103, sel_activateConstraints_, v95);

}

void sub_1BB0B900C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  objc_class *ObjCClassFromMetadata;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  objc_class *ObjectType;
  objc_super v28;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = &v1[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_identifier];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_thumbnailImageView;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
  v5 = v1;
  v6 = objc_msgSend(v4, sel_init);
  v7 = objc_msgSend(v6, sel_layer);
  objc_msgSend(v7, sel_setCornerRadius_, 4.0);

  objc_msgSend(v6, sel_setContentMode_, 2);
  objc_msgSend(v6, sel_setClipsToBounds_, 1);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v3] = v6;
  v8 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_publisherTitle;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 8.0);
  objc_msgSend(v9, sel_setFont_, v10);

  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v5[v8] = v9;
  v11 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_articleTitle;
  *(_QWORD *)&v5[v11] = sub_1BB0B8288();
  type metadata accessor for DebugPersonalizationSelectionButton();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v13 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v14 = (void *)sub_1BB872970();
  objc_msgSend(v13, sel_setTitle_forState_, v14, 0);

  v15 = *(id *)&v13[qword_1EF2BB270];
  v16 = (void *)sub_1BB872970();
  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, sel_systemImageNamed_, v16);

  if (v18)
  {
    v19 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_yesButton;
    objc_msgSend(v15, sel_setImage_, v18);

    *(_QWORD *)&v5[v19] = v13;
    v20 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
    v21 = (void *)sub_1BB872970();
    objc_msgSend(v20, sel_setTitle_forState_, v21, 0);

    v22 = *(id *)&v20[qword_1EF2BB270];
    v23 = (void *)sub_1BB872970();
    v24 = objc_msgSend(v17, sel_systemImageNamed_, v23);

    if (v24)
    {
      v25 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_noButton;
      objc_msgSend(v22, sel_setImage_, v24);

      *(_QWORD *)&v5[v25] = v20;
      v28.receiver = v5;
      v28.super_class = ObjectType;
      objc_msgSendSuper2(&v28, sel_initWithCoder_, a1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1BB0B939C()
{
  char *v0;
  char *v1;
  char *v2;
  void *v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  objc_super v16;

  v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, sel_prepareForReuse);
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_identifier];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  swift_bridgeObjectRelease();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_systemBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v4);

  v5 = *(char **)&v1[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_yesButton];
  v6 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v5, sel_setTitleColor_forState_, v6, 0);

  v7 = *(id *)&v5[qword_1EF2BB270];
  v8 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v7, sel_setTintColor_, v8);

  v9 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v9);

  v10 = *(char **)&v1[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_noButton];
  v11 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v10, sel_setTitleColor_forState_, v11, 0);

  v12 = *(id *)&v10[qword_1EF2BB270];
  v13 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v12, sel_setTintColor_, v13);

  v14 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v14);

  sub_1BB86F664();
  return sub_1BB86F664();
}

uint64_t type metadata accessor for DebugPersonalizationArticleTableViewCell()
{
  return objc_opt_self();
}

BOOL static SportsDataServiceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SportsDataServiceError.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t SportsDataServiceError.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB0B9720()
{
  unint64_t result;

  result = qword_1EF2BAFC8;
  if (!qword_1EF2BAFC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataServiceError, &type metadata for SportsDataServiceError);
    atomic_store(result, (unint64_t *)&qword_1EF2BAFC8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsDataServiceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1BB0B97B0 + 4 * byte_1BB8E9F35[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1BB0B97E4 + 4 * asc_1BB8E9F30[v4]))();
}

uint64_t sub_1BB0B97E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0B97EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0B97F4);
  return result;
}

uint64_t sub_1BB0B9800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0B9808);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1BB0B980C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0B9814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataServiceError()
{
  return &type metadata for SportsDataServiceError;
}

uint64_t sub_1BB0B9830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9D8];
  v1 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      v7 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_23;
      v10 = *(_QWORD *)(v1 + 8 * v7);
      if (!v10)
      {
        v7 = v9 + 2;
        if (v9 + 2 >= v5)
          goto LABEL_23;
        v10 = *(_QWORD *)(v1 + 8 * v7);
        if (!v10)
        {
          v7 = v9 + 3;
          if (v9 + 3 >= v5)
            goto LABEL_23;
          v10 = *(_QWORD *)(v1 + 8 * v7);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v4 = (v10 - 1) & v10;
LABEL_5:
    v8 = swift_bridgeObjectRetain();
    result = sub_1BA6E9BD8(v8);
  }
  v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return v12;
  }
  v10 = *(_QWORD *)(v1 + 8 * v11);
  if (v10)
  {
    v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v7 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v7);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BB0B999C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - v6;
  v8 = *MEMORY[0x1E0DB32B0];
  v9 = sub_1BB86DDB0();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a2 + 8))(v7, a1, a2);
  sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1ED3C2210, v4);
  return v11;
}

uint64_t sub_1BB0B9AA4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - v6;
  v8 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a2 + 8))(v7, a1, a2);
  sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1ED3C2210, v4);
  return v9;
}

uint64_t SportsDataServiceType.fetchDataVisualizations(requests:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = 0;
  return SportsDataServiceType.fetchDataVisualizations(requests:context:)(a1, &v4, a2, a3);
}

uint64_t sub_1BB0B9BA4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  int EnumCaseMultiPayload;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = *v1;
  v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SportsDataServiceRequest(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  v17 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)&v30 - v15, v18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v27 = type metadata accessor for SportsDataServiceURLRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v9, type metadata accessor for SportsDataServiceURLRequest);
    v26 = sub_1BB0BADCC((uint64_t)&v9[*(int *)(v7 + 24)], (uint64_t)v9, 1);
    v28 = (uint64_t)v9;
LABEL_6:
    sub_1BA4A2E80(v28, v27);
    return v26;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v27 = type metadata accessor for SportsDataServiceResourceRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    v26 = sub_1BB0BC644((uint64_t)v5, a1);
    v28 = (uint64_t)v5;
    goto LABEL_6;
  }
  v20 = v31;
  v21 = v32;
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v31, v16, v34);
  MEMORY[0x1E0C80A78](v22);
  *(&v30 - 2) = v35;
  *(&v30 - 1) = (uint64_t)v20;
  sub_1BB86EC14();
  sub_1BA4C2DD8(v17, (uint64_t)v13, type metadata accessor for SportsDataServiceRequest);
  v23 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v24 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v13, v24 + v23, type metadata accessor for SportsDataServiceRequest);
  v25 = (void *)sub_1BB86E854();
  sub_1BB0D78E8(0);
  v26 = sub_1BB86E98C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v34);
  return v26;
}

uint64_t sub_1BB0B9EA4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = *(_QWORD *)v1;
  v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SportsDataServiceRequest(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - v15;
  sub_1BA4C2DD8(a1, (uint64_t)&v29 - v15, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v26 = type metadata accessor for SportsDataServiceURLRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v9, type metadata accessor for SportsDataServiceURLRequest);
    v25 = sub_1BB0BB144((uint64_t)&v9[*(int *)(v7 + 24)], (uint64_t)v9, 1);
    v27 = (uint64_t)v9;
LABEL_6:
    sub_1BA4A2E80(v27, v26);
    return v25;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v26 = type metadata accessor for SportsDataServiceResourceRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    v25 = sub_1BB0BCB1C((uint64_t)v5, a1);
    v27 = (uint64_t)v5;
    goto LABEL_6;
  }
  v20 = v29;
  v19 = v30;
  v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v29, v16, v30);
  MEMORY[0x1E0C80A78](v21);
  *(&v29 - 2) = v1;
  *(&v29 - 1) = v20;
  sub_1BB86EC14();
  sub_1BA4C2DD8(a1, (uint64_t)v13, type metadata accessor for SportsDataServiceRequest);
  v22 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v13, v23 + v22, type metadata accessor for SportsDataServiceRequest);
  v24 = (void *)sub_1BB86E854();
  sub_1BB0D8F90(0, &qword_1ED3A7970, (void (*)(void))sub_1BB0D9018, (void (*)(void))sub_1BB0D905C);
  v25 = sub_1BB86E98C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v19);
  return v25;
}

uint64_t sub_1BB0BA1B8(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = *(_QWORD *)v1;
  v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SportsDataServiceRequest(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - v15;
  sub_1BA4C2DD8(a1, (uint64_t)&v29 - v15, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v26 = type metadata accessor for SportsDataServiceURLRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v9, type metadata accessor for SportsDataServiceURLRequest);
    v25 = sub_1BB0BB4D4((uint64_t)&v9[*(int *)(v7 + 24)], (uint64_t)v9, 1);
    v27 = (uint64_t)v9;
LABEL_6:
    sub_1BA4A2E80(v27, v26);
    return v25;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v26 = type metadata accessor for SportsDataServiceResourceRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    v25 = sub_1BB0BD010((uint64_t)v5, a1);
    v27 = (uint64_t)v5;
    goto LABEL_6;
  }
  v20 = v29;
  v19 = v30;
  v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v29, v16, v30);
  MEMORY[0x1E0C80A78](v21);
  *(&v29 - 2) = v1;
  *(&v29 - 1) = v20;
  sub_1BB86EC14();
  sub_1BA4C2DD8(a1, (uint64_t)v13, type metadata accessor for SportsDataServiceRequest);
  v22 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v13, v23 + v22, type metadata accessor for SportsDataServiceRequest);
  v24 = (void *)sub_1BB86E854();
  sub_1BB0D8F90(0, &qword_1ED3A7968, (void (*)(void))sub_1BB0D8DA8, (void (*)(void))sub_1BB0D8DEC);
  v25 = sub_1BB86E98C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v19);
  return v25;
}

uint64_t sub_1BB0BA4CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  int EnumCaseMultiPayload;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = *v1;
  v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SportsDataServiceRequest(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  v17 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)&v30 - v15, v18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v27 = type metadata accessor for SportsDataServiceURLRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v9, type metadata accessor for SportsDataServiceURLRequest);
    v26 = sub_1BB0BB864((uint64_t)&v9[*(int *)(v7 + 24)], (uint64_t)v9, 1);
    v28 = (uint64_t)v9;
LABEL_6:
    sub_1BA4A2E80(v28, v27);
    return v26;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v27 = type metadata accessor for SportsDataServiceResourceRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    v26 = sub_1BB0BD504((uint64_t)v5, a1);
    v28 = (uint64_t)v5;
    goto LABEL_6;
  }
  v20 = v31;
  v21 = v32;
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v31, v16, v34);
  MEMORY[0x1E0C80A78](v22);
  *(&v30 - 2) = v35;
  *(&v30 - 1) = (uint64_t)v20;
  sub_1BB86EC14();
  sub_1BA4C2DD8(v17, (uint64_t)v13, type metadata accessor for SportsDataServiceRequest);
  v23 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v24 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v13, v24 + v23, type metadata accessor for SportsDataServiceRequest);
  v25 = (void *)sub_1BB86E854();
  sub_1BB0D8A0C(0);
  v26 = sub_1BB86E98C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v34);
  return v26;
}

uint64_t sub_1BB0BA7CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  int EnumCaseMultiPayload;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = *v1;
  v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SportsDataServiceRequest(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  v17 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)&v30 - v15, v18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v27 = type metadata accessor for SportsDataServiceURLRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v9, type metadata accessor for SportsDataServiceURLRequest);
    v26 = sub_1BB0BBBDC((uint64_t)&v9[*(int *)(v7 + 24)], (uint64_t)v9, 1);
    v28 = (uint64_t)v9;
LABEL_6:
    sub_1BA4A2E80(v28, v27);
    return v26;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v27 = type metadata accessor for SportsDataServiceResourceRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    v26 = sub_1BB0BD9DC((uint64_t)v5, a1);
    v28 = (uint64_t)v5;
    goto LABEL_6;
  }
  v20 = v31;
  v21 = v32;
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v31, v16, v34);
  MEMORY[0x1E0C80A78](v22);
  *(&v30 - 2) = v35;
  *(&v30 - 1) = (uint64_t)v20;
  sub_1BB86EC14();
  sub_1BA4C2DD8(v17, (uint64_t)v13, type metadata accessor for SportsDataServiceRequest);
  v23 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v24 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v13, v24 + v23, type metadata accessor for SportsDataServiceRequest);
  v25 = (void *)sub_1BB86E854();
  sub_1BB0D882C(0);
  v26 = sub_1BB86E98C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v34);
  return v26;
}

uint64_t sub_1BB0BAACC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  int EnumCaseMultiPayload;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = *v1;
  v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SportsDataServiceRequest(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  v17 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)&v30 - v15, v18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v27 = type metadata accessor for SportsDataServiceURLRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v9, type metadata accessor for SportsDataServiceURLRequest);
    v26 = sub_1BB0BC2CC((uint64_t)&v9[*(int *)(v7 + 24)], (uint64_t)v9, 1);
    v28 = (uint64_t)v9;
LABEL_6:
    sub_1BA4A2E80(v28, v27);
    return v26;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v27 = type metadata accessor for SportsDataServiceResourceRequest;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    v26 = sub_1BB0BE38C((uint64_t)v5, a1);
    v28 = (uint64_t)v5;
    goto LABEL_6;
  }
  v20 = v31;
  v21 = v32;
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v31, v16, v34);
  MEMORY[0x1E0C80A78](v22);
  *(&v30 - 2) = v35;
  *(&v30 - 1) = (uint64_t)v20;
  sub_1BB86EC14();
  sub_1BA4C2DD8(v17, (uint64_t)v13, type metadata accessor for SportsDataServiceRequest);
  v23 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v24 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v13, v24 + v23, type metadata accessor for SportsDataServiceRequest);
  v25 = (void *)sub_1BB86E854();
  sub_1BB0D84EC(0);
  v26 = sub_1BB86E98C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v34);
  return v26;
}

uint64_t sub_1BB0BADCC(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32[2];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;

  v41 = a3;
  v33 = a2;
  v40 = a1;
  v44 = *v3;
  v6 = v3;
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  v38 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v7);
  v42 = v8;
  v32[0] = (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = v11;
  v37 = v11;
  v13 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v6;
  v46 = a2;
  sub_1BB86ECE0();
  v34 = sub_1BB86EC14();
  v35 = v13;
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14 = v9;
  v36 = v9;
  v39(v13, a1, v9);
  sub_1BA4C2DD8(a2, (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceURLRequest);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = *(unsigned __int8 *)(v38 + 80);
  v18 = swift_allocObject();
  v38 = *(_QWORD *)(v10 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v38)(v18 + v16, v13, v14);
  v19 = v32[0];
  sub_1BA5193C4(v32[0], v18 + ((v12 + v17 + v16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v20 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();
  swift_release();

  v21 = v33;
  sub_1BA4C2DD8(v33, v19, type metadata accessor for SportsDataServiceURLRequest);
  v32[1] = v17 | 7;
  v22 = swift_allocObject();
  sub_1BA5193C4(v19, v22 + ((v17 + 16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v23 = (void *)sub_1BB86E854();
  sub_1BB0D78E8(0);
  v34 = sub_1BB86E98C();
  swift_release();
  swift_release();

  sub_1BA4C2DD8(v21, v19, type metadata accessor for SportsDataServiceURLRequest);
  v25 = v35;
  v24 = v36;
  v39(v35, v40, v36);
  v26 = (v17 + 17) & ~v17;
  v27 = (v42 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  *(_BYTE *)(v28 + 16) = v41;
  sub_1BA5193C4(v19, v28 + v26, type metadata accessor for SportsDataServiceURLRequest);
  *(_QWORD *)(v28 + v27) = v43;
  ((void (*)(unint64_t, char *, uint64_t))v38)(v28 + ((v15 + v27 + 8) & ~v15), v25, v24);
  swift_retain();
  v29 = (void *)sub_1BB86E854();
  v30 = sub_1BB86EA28();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1BB0BB144(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;

  v42 = a3;
  v33 = a2;
  v41 = a1;
  v44 = *v3;
  v6 = v3;
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  v39 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v39 + 64);
  MEMORY[0x1E0C80A78](v7);
  v32[0] = (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = v11;
  v38 = v11;
  v13 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v6;
  v46 = a2;
  sub_1BB86ECE0();
  v35 = sub_1BB86EC14();
  v36 = v13;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14 = v9;
  v37 = v9;
  v40(v13, a1, v9);
  sub_1BA4C2DD8(a2, (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceURLRequest);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = *(unsigned __int8 *)(v39 + 80);
  v34 = v8;
  v18 = swift_allocObject();
  v39 = *(_QWORD *)(v10 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v39)(v18 + v16, v13, v14);
  v19 = v32[0];
  sub_1BA5193C4(v32[0], v18 + ((v12 + v17 + v16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v20 = (void *)sub_1BB86E854();
  v32[1] = sub_1BB86E980();
  swift_release();
  swift_release();

  v21 = v33;
  sub_1BA4C2DD8(v33, v19, type metadata accessor for SportsDataServiceURLRequest);
  v22 = swift_allocObject();
  sub_1BA5193C4(v19, v22 + ((v17 + 16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v23 = (void *)sub_1BB86E854();
  sub_1BB0D8F90(0, &qword_1ED3A7970, (void (*)(void))sub_1BB0D9018, (void (*)(void))sub_1BB0D905C);
  v35 = sub_1BB86E98C();
  swift_release();
  swift_release();

  sub_1BA4C2DD8(v21, v19, type metadata accessor for SportsDataServiceURLRequest);
  v25 = v36;
  v24 = v37;
  v40(v36, v41, v37);
  v26 = (v17 + 17) & ~v17;
  v27 = (v34 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  *(_BYTE *)(v28 + 16) = v42;
  sub_1BA5193C4(v19, v28 + v26, type metadata accessor for SportsDataServiceURLRequest);
  *(_QWORD *)(v28 + v27) = v43;
  ((void (*)(unint64_t, char *, uint64_t))v39)(v28 + ((v15 + v27 + 8) & ~v15), v25, v24);
  swift_retain();
  v29 = (void *)sub_1BB86E854();
  v30 = sub_1BB86EA28();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1BB0BB4D4(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;

  v42 = a3;
  v33 = a2;
  v41 = a1;
  v44 = *v3;
  v6 = v3;
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  v39 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v39 + 64);
  MEMORY[0x1E0C80A78](v7);
  v32[0] = (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = v11;
  v38 = v11;
  v13 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v6;
  v46 = a2;
  sub_1BB86ECE0();
  v35 = sub_1BB86EC14();
  v36 = v13;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14 = v9;
  v37 = v9;
  v40(v13, a1, v9);
  sub_1BA4C2DD8(a2, (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceURLRequest);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = *(unsigned __int8 *)(v39 + 80);
  v34 = v8;
  v18 = swift_allocObject();
  v39 = *(_QWORD *)(v10 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v39)(v18 + v16, v13, v14);
  v19 = v32[0];
  sub_1BA5193C4(v32[0], v18 + ((v12 + v17 + v16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v20 = (void *)sub_1BB86E854();
  v32[1] = sub_1BB86E980();
  swift_release();
  swift_release();

  v21 = v33;
  sub_1BA4C2DD8(v33, v19, type metadata accessor for SportsDataServiceURLRequest);
  v22 = swift_allocObject();
  sub_1BA5193C4(v19, v22 + ((v17 + 16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v23 = (void *)sub_1BB86E854();
  sub_1BB0D8F90(0, &qword_1ED3A7968, (void (*)(void))sub_1BB0D8DA8, (void (*)(void))sub_1BB0D8DEC);
  v35 = sub_1BB86E98C();
  swift_release();
  swift_release();

  sub_1BA4C2DD8(v21, v19, type metadata accessor for SportsDataServiceURLRequest);
  v25 = v36;
  v24 = v37;
  v40(v36, v41, v37);
  v26 = (v17 + 17) & ~v17;
  v27 = (v34 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  *(_BYTE *)(v28 + 16) = v42;
  sub_1BA5193C4(v19, v28 + v26, type metadata accessor for SportsDataServiceURLRequest);
  *(_QWORD *)(v28 + v27) = v43;
  ((void (*)(unint64_t, char *, uint64_t))v39)(v28 + ((v15 + v27 + 8) & ~v15), v25, v24);
  swift_retain();
  v29 = (void *)sub_1BB86E854();
  v30 = sub_1BB86EA28();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1BB0BB864(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32[2];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;

  v41 = a3;
  v33 = a2;
  v40 = a1;
  v44 = *v3;
  v6 = v3;
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  v38 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v7);
  v42 = v8;
  v32[0] = (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = v11;
  v37 = v11;
  v13 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v6;
  v46 = a2;
  sub_1BB86ECE0();
  v34 = sub_1BB86EC14();
  v35 = v13;
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14 = v9;
  v36 = v9;
  v39(v13, a1, v9);
  sub_1BA4C2DD8(a2, (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceURLRequest);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = *(unsigned __int8 *)(v38 + 80);
  v18 = swift_allocObject();
  v38 = *(_QWORD *)(v10 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v38)(v18 + v16, v13, v14);
  v19 = v32[0];
  sub_1BA5193C4(v32[0], v18 + ((v12 + v17 + v16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v20 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();
  swift_release();

  v21 = v33;
  sub_1BA4C2DD8(v33, v19, type metadata accessor for SportsDataServiceURLRequest);
  v32[1] = v17 | 7;
  v22 = swift_allocObject();
  sub_1BA5193C4(v19, v22 + ((v17 + 16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v23 = (void *)sub_1BB86E854();
  sub_1BB0D8A0C(0);
  v34 = sub_1BB86E98C();
  swift_release();
  swift_release();

  sub_1BA4C2DD8(v21, v19, type metadata accessor for SportsDataServiceURLRequest);
  v25 = v35;
  v24 = v36;
  v39(v35, v40, v36);
  v26 = (v17 + 17) & ~v17;
  v27 = (v42 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  *(_BYTE *)(v28 + 16) = v41;
  sub_1BA5193C4(v19, v28 + v26, type metadata accessor for SportsDataServiceURLRequest);
  *(_QWORD *)(v28 + v27) = v43;
  ((void (*)(unint64_t, char *, uint64_t))v38)(v28 + ((v15 + v27 + 8) & ~v15), v25, v24);
  swift_retain();
  v29 = (void *)sub_1BB86E854();
  v30 = sub_1BB86EA28();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1BB0BBBDC(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32[2];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;

  v41 = a3;
  v33 = a2;
  v40 = a1;
  v44 = *v3;
  v6 = v3;
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  v38 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v7);
  v42 = v8;
  v32[0] = (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = v11;
  v37 = v11;
  v13 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v6;
  v46 = a2;
  sub_1BB86ECE0();
  v34 = sub_1BB86EC14();
  v35 = v13;
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14 = v9;
  v36 = v9;
  v39(v13, a1, v9);
  sub_1BA4C2DD8(a2, (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceURLRequest);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = *(unsigned __int8 *)(v38 + 80);
  v18 = swift_allocObject();
  v38 = *(_QWORD *)(v10 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v38)(v18 + v16, v13, v14);
  v19 = v32[0];
  sub_1BA5193C4(v32[0], v18 + ((v12 + v17 + v16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v20 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();
  swift_release();

  v21 = v33;
  sub_1BA4C2DD8(v33, v19, type metadata accessor for SportsDataServiceURLRequest);
  v32[1] = v17 | 7;
  v22 = swift_allocObject();
  sub_1BA5193C4(v19, v22 + ((v17 + 16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v23 = (void *)sub_1BB86E854();
  sub_1BB0D882C(0);
  v34 = sub_1BB86E98C();
  swift_release();
  swift_release();

  sub_1BA4C2DD8(v21, v19, type metadata accessor for SportsDataServiceURLRequest);
  v25 = v35;
  v24 = v36;
  v39(v35, v40, v36);
  v26 = (v17 + 17) & ~v17;
  v27 = (v42 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  *(_BYTE *)(v28 + 16) = v41;
  sub_1BA5193C4(v19, v28 + v26, type metadata accessor for SportsDataServiceURLRequest);
  *(_QWORD *)(v28 + v27) = v43;
  ((void (*)(unint64_t, char *, uint64_t))v38)(v28 + ((v15 + v27 + 8) & ~v15), v25, v24);
  swift_retain();
  v29 = (void *)sub_1BB86E854();
  v30 = sub_1BB86EA28();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1BB0BBF54(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32[2];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;

  v41 = a3;
  v33 = a2;
  v40 = a1;
  v44 = *v3;
  v6 = v3;
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  v38 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v7);
  v42 = v8;
  v32[0] = (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = v11;
  v37 = v11;
  v13 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v6;
  v46 = a2;
  sub_1BB86ECE0();
  v34 = sub_1BB86EC14();
  v35 = v13;
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14 = v9;
  v36 = v9;
  v39(v13, a1, v9);
  sub_1BA4C2DD8(a2, (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceURLRequest);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = *(unsigned __int8 *)(v38 + 80);
  v18 = swift_allocObject();
  v38 = *(_QWORD *)(v10 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v38)(v18 + v16, v13, v14);
  v19 = v32[0];
  sub_1BA5193C4(v32[0], v18 + ((v12 + v17 + v16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v20 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();
  swift_release();

  v21 = v33;
  sub_1BA4C2DD8(v33, v19, type metadata accessor for SportsDataServiceURLRequest);
  v32[1] = v17 | 7;
  v22 = swift_allocObject();
  sub_1BA5193C4(v19, v22 + ((v17 + 16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v23 = (void *)sub_1BB86E854();
  sub_1BB0D7BA0(0);
  v34 = sub_1BB86E98C();
  swift_release();
  swift_release();

  sub_1BA4C2DD8(v21, v19, type metadata accessor for SportsDataServiceURLRequest);
  v25 = v35;
  v24 = v36;
  v39(v35, v40, v36);
  v26 = (v17 + 17) & ~v17;
  v27 = (v42 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  *(_BYTE *)(v28 + 16) = v41;
  sub_1BA5193C4(v19, v28 + v26, type metadata accessor for SportsDataServiceURLRequest);
  *(_QWORD *)(v28 + v27) = v43;
  ((void (*)(unint64_t, char *, uint64_t))v38)(v28 + ((v15 + v27 + 8) & ~v15), v25, v24);
  swift_retain();
  v29 = (void *)sub_1BB86E854();
  v30 = sub_1BB86EA28();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1BB0BC2CC(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32[2];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;

  v41 = a3;
  v33 = a2;
  v40 = a1;
  v44 = *v3;
  v6 = v3;
  v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  v38 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v7);
  v42 = v8;
  v32[0] = (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = v11;
  v37 = v11;
  v13 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v6;
  v46 = a2;
  sub_1BB86ECE0();
  v34 = sub_1BB86EC14();
  v35 = v13;
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14 = v9;
  v36 = v9;
  v39(v13, a1, v9);
  sub_1BA4C2DD8(a2, (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceURLRequest);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = *(unsigned __int8 *)(v38 + 80);
  v18 = swift_allocObject();
  v38 = *(_QWORD *)(v10 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v38)(v18 + v16, v13, v14);
  v19 = v32[0];
  sub_1BA5193C4(v32[0], v18 + ((v12 + v17 + v16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v20 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();
  swift_release();

  v21 = v33;
  sub_1BA4C2DD8(v33, v19, type metadata accessor for SportsDataServiceURLRequest);
  v32[1] = v17 | 7;
  v22 = swift_allocObject();
  sub_1BA5193C4(v19, v22 + ((v17 + 16) & ~v17), type metadata accessor for SportsDataServiceURLRequest);
  v23 = (void *)sub_1BB86E854();
  sub_1BB0D84EC(0);
  v34 = sub_1BB86E98C();
  swift_release();
  swift_release();

  sub_1BA4C2DD8(v21, v19, type metadata accessor for SportsDataServiceURLRequest);
  v25 = v35;
  v24 = v36;
  v39(v35, v40, v36);
  v26 = (v17 + 17) & ~v17;
  v27 = (v42 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  *(_BYTE *)(v28 + 16) = v41;
  sub_1BA5193C4(v19, v28 + v26, type metadata accessor for SportsDataServiceURLRequest);
  *(_QWORD *)(v28 + v27) = v43;
  ((void (*)(unint64_t, char *, uint64_t))v38)(v28 + ((v15 + v27 + 8) & ~v15), v25, v24);
  swift_retain();
  v29 = (void *)sub_1BB86E854();
  v30 = sub_1BB86EA28();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1BB0BC644(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = *v2;
  v6 = type metadata accessor for SportsDataServiceRequest(0);
  v46 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v47 = v7;
  v48 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v45 = (uint64_t)&v40 - v10;
  v44 = type metadata accessor for SportsDataServiceResourceRequest(0);
  v49 = *(_QWORD *)(v44 - 8);
  v11 = *(_QWORD *)(v49 + 64);
  MEMORY[0x1E0C80A78](v44);
  v50 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v40 - v16);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v18 = sub_1BB86EFEC();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED3A3BB8);
  sub_1BA4C2DD8(a1, (uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1BA4C2DD8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  v19 = sub_1BB86EFC8();
  v20 = sub_1BB87330C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v43 = a1;
    v22 = v21;
    v23 = swift_slowAlloc();
    v53 = v23;
    *(_DWORD *)v22 = 136446466;
    v40 = v9;
    v41 = a2;
    v42 = v5;
    v24 = *v17;
    v25 = v17[1];
    swift_bridgeObjectRetain();
    v52 = sub_1BA5D2E14(v24, v25, &v53);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v22 + 12) = 2082;
    sub_1BA98BB14((uint64_t)&v14[*(int *)(v44 + 20)], v45);
    v26 = sub_1BB872A00();
    v52 = sub_1BA5D2E14(v26, v27, &v53);
    a2 = v41;
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BA493000, v19, v20, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v23, -1, -1);
    v28 = v22;
    a1 = v43;
    MEMORY[0x1BCCE5C38](v28, -1, -1);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1E0C80A78](v29);
  *(&v40 - 2) = v51;
  *(&v40 - 1) = a1;
  sub_1BA9881CC();
  sub_1BB86EC14();
  v30 = v48;
  sub_1BA4C2DD8(a2, v48, type metadata accessor for SportsDataServiceRequest);
  v31 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v32 = swift_allocObject();
  sub_1BA5193C4(v30, v32 + v31, type metadata accessor for SportsDataServiceRequest);
  v33 = (void *)sub_1BB86E854();
  sub_1BB0D78E8(0);
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v34 = v50;
  sub_1BA4C2DD8(a1, v50, type metadata accessor for SportsDataServiceResourceRequest);
  v35 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v36 = swift_allocObject();
  sub_1BA5193C4(v34, v36 + v35, type metadata accessor for SportsDataServiceResourceRequest);
  v37 = (void *)sub_1BB86E854();
  v38 = sub_1BB86E9A4();
  swift_release();

  swift_release();
  return v38;
}

uint64_t sub_1BB0BCB1C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = *v2;
  v6 = type metadata accessor for SportsDataServiceRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v47 = v8;
  v48 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v46 = v9;
  MEMORY[0x1E0C80A78](v9);
  v45 = (uint64_t)&v40 - v10;
  v44 = type metadata accessor for SportsDataServiceResourceRequest(0);
  v49 = *(_QWORD *)(v44 - 8);
  v11 = *(_QWORD *)(v49 + 64);
  MEMORY[0x1E0C80A78](v44);
  v50 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v40 - v16);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v18 = sub_1BB86EFEC();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED3A3BB8);
  sub_1BA4C2DD8(a1, (uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1BA4C2DD8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  v19 = sub_1BB86EFC8();
  v20 = sub_1BB87330C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v43 = a1;
    v22 = v21;
    v23 = swift_slowAlloc();
    v53 = v23;
    *(_DWORD *)v22 = 136446466;
    v40 = v7;
    v41 = a2;
    v42 = v5;
    v24 = *v17;
    v25 = v17[1];
    swift_bridgeObjectRetain();
    v52 = sub_1BA5D2E14(v24, v25, &v53);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v22 + 12) = 2082;
    sub_1BA98BB14((uint64_t)&v14[*(int *)(v44 + 20)], v45);
    v26 = sub_1BB872A00();
    v52 = sub_1BA5D2E14(v26, v27, &v53);
    v7 = v40;
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    a2 = v41;
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BA493000, v19, v20, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v23, -1, -1);
    v28 = v22;
    a1 = v43;
    MEMORY[0x1BCCE5C38](v28, -1, -1);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1E0C80A78](v29);
  *(&v40 - 2) = v51;
  *(&v40 - 1) = a1;
  sub_1BA9881CC();
  sub_1BB86EC14();
  v30 = v48;
  sub_1BA4C2DD8(a2, v48, type metadata accessor for SportsDataServiceRequest);
  v31 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v32 = swift_allocObject();
  sub_1BA5193C4(v30, v32 + v31, type metadata accessor for SportsDataServiceRequest);
  v33 = (void *)sub_1BB86E854();
  sub_1BB0D8F90(0, &qword_1ED3A7970, (void (*)(void))sub_1BB0D9018, (void (*)(void))sub_1BB0D905C);
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v34 = v50;
  sub_1BA4C2DD8(a1, v50, type metadata accessor for SportsDataServiceResourceRequest);
  v35 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v36 = swift_allocObject();
  sub_1BA5193C4(v34, v36 + v35, type metadata accessor for SportsDataServiceResourceRequest);
  v37 = (void *)sub_1BB86E854();
  v38 = sub_1BB86E9A4();
  swift_release();

  swift_release();
  return v38;
}

uint64_t sub_1BB0BD010(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = *v2;
  v6 = type metadata accessor for SportsDataServiceRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v47 = v8;
  v48 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v46 = v9;
  MEMORY[0x1E0C80A78](v9);
  v45 = (uint64_t)&v40 - v10;
  v44 = type metadata accessor for SportsDataServiceResourceRequest(0);
  v49 = *(_QWORD *)(v44 - 8);
  v11 = *(_QWORD *)(v49 + 64);
  MEMORY[0x1E0C80A78](v44);
  v50 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v40 - v16);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v18 = sub_1BB86EFEC();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED3A3BB8);
  sub_1BA4C2DD8(a1, (uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1BA4C2DD8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  v19 = sub_1BB86EFC8();
  v20 = sub_1BB87330C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v43 = a1;
    v22 = v21;
    v23 = swift_slowAlloc();
    v53 = v23;
    *(_DWORD *)v22 = 136446466;
    v40 = v7;
    v41 = a2;
    v42 = v5;
    v24 = *v17;
    v25 = v17[1];
    swift_bridgeObjectRetain();
    v52 = sub_1BA5D2E14(v24, v25, &v53);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v22 + 12) = 2082;
    sub_1BA98BB14((uint64_t)&v14[*(int *)(v44 + 20)], v45);
    v26 = sub_1BB872A00();
    v52 = sub_1BA5D2E14(v26, v27, &v53);
    v7 = v40;
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    a2 = v41;
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BA493000, v19, v20, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v23, -1, -1);
    v28 = v22;
    a1 = v43;
    MEMORY[0x1BCCE5C38](v28, -1, -1);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1E0C80A78](v29);
  *(&v40 - 2) = v51;
  *(&v40 - 1) = a1;
  sub_1BA9881CC();
  sub_1BB86EC14();
  v30 = v48;
  sub_1BA4C2DD8(a2, v48, type metadata accessor for SportsDataServiceRequest);
  v31 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v32 = swift_allocObject();
  sub_1BA5193C4(v30, v32 + v31, type metadata accessor for SportsDataServiceRequest);
  v33 = (void *)sub_1BB86E854();
  sub_1BB0D8F90(0, &qword_1ED3A7968, (void (*)(void))sub_1BB0D8DA8, (void (*)(void))sub_1BB0D8DEC);
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v34 = v50;
  sub_1BA4C2DD8(a1, v50, type metadata accessor for SportsDataServiceResourceRequest);
  v35 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v36 = swift_allocObject();
  sub_1BA5193C4(v34, v36 + v35, type metadata accessor for SportsDataServiceResourceRequest);
  v37 = (void *)sub_1BB86E854();
  v38 = sub_1BB86E9A4();
  swift_release();

  swift_release();
  return v38;
}

uint64_t sub_1BB0BD504(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = *v2;
  v6 = type metadata accessor for SportsDataServiceRequest(0);
  v46 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v47 = v7;
  v48 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v45 = (uint64_t)&v40 - v10;
  v44 = type metadata accessor for SportsDataServiceResourceRequest(0);
  v49 = *(_QWORD *)(v44 - 8);
  v11 = *(_QWORD *)(v49 + 64);
  MEMORY[0x1E0C80A78](v44);
  v50 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v40 - v16);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v18 = sub_1BB86EFEC();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED3A3BB8);
  sub_1BA4C2DD8(a1, (uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1BA4C2DD8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  v19 = sub_1BB86EFC8();
  v20 = sub_1BB87330C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v43 = a1;
    v22 = v21;
    v23 = swift_slowAlloc();
    v53 = v23;
    *(_DWORD *)v22 = 136446466;
    v40 = v9;
    v41 = a2;
    v42 = v5;
    v24 = *v17;
    v25 = v17[1];
    swift_bridgeObjectRetain();
    v52 = sub_1BA5D2E14(v24, v25, &v53);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v22 + 12) = 2082;
    sub_1BA98BB14((uint64_t)&v14[*(int *)(v44 + 20)], v45);
    v26 = sub_1BB872A00();
    v52 = sub_1BA5D2E14(v26, v27, &v53);
    a2 = v41;
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BA493000, v19, v20, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v23, -1, -1);
    v28 = v22;
    a1 = v43;
    MEMORY[0x1BCCE5C38](v28, -1, -1);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1E0C80A78](v29);
  *(&v40 - 2) = v51;
  *(&v40 - 1) = a1;
  sub_1BA9881CC();
  sub_1BB86EC14();
  v30 = v48;
  sub_1BA4C2DD8(a2, v48, type metadata accessor for SportsDataServiceRequest);
  v31 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v32 = swift_allocObject();
  sub_1BA5193C4(v30, v32 + v31, type metadata accessor for SportsDataServiceRequest);
  v33 = (void *)sub_1BB86E854();
  sub_1BB0D8A0C(0);
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v34 = v50;
  sub_1BA4C2DD8(a1, v50, type metadata accessor for SportsDataServiceResourceRequest);
  v35 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v36 = swift_allocObject();
  sub_1BA5193C4(v34, v36 + v35, type metadata accessor for SportsDataServiceResourceRequest);
  v37 = (void *)sub_1BB86E854();
  v38 = sub_1BB86E9A4();
  swift_release();

  swift_release();
  return v38;
}

uint64_t sub_1BB0BD9DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = *v2;
  v6 = type metadata accessor for SportsDataServiceRequest(0);
  v46 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v47 = v7;
  v48 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v45 = (uint64_t)&v40 - v10;
  v44 = type metadata accessor for SportsDataServiceResourceRequest(0);
  v49 = *(_QWORD *)(v44 - 8);
  v11 = *(_QWORD *)(v49 + 64);
  MEMORY[0x1E0C80A78](v44);
  v50 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v40 - v16);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v18 = sub_1BB86EFEC();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED3A3BB8);
  sub_1BA4C2DD8(a1, (uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1BA4C2DD8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  v19 = sub_1BB86EFC8();
  v20 = sub_1BB87330C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v43 = a1;
    v22 = v21;
    v23 = swift_slowAlloc();
    v53 = v23;
    *(_DWORD *)v22 = 136446466;
    v40 = v9;
    v41 = a2;
    v42 = v5;
    v24 = *v17;
    v25 = v17[1];
    swift_bridgeObjectRetain();
    v52 = sub_1BA5D2E14(v24, v25, &v53);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v22 + 12) = 2082;
    sub_1BA98BB14((uint64_t)&v14[*(int *)(v44 + 20)], v45);
    v26 = sub_1BB872A00();
    v52 = sub_1BA5D2E14(v26, v27, &v53);
    a2 = v41;
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BA493000, v19, v20, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v23, -1, -1);
    v28 = v22;
    a1 = v43;
    MEMORY[0x1BCCE5C38](v28, -1, -1);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1E0C80A78](v29);
  *(&v40 - 2) = v51;
  *(&v40 - 1) = a1;
  sub_1BA9881CC();
  sub_1BB86EC14();
  v30 = v48;
  sub_1BA4C2DD8(a2, v48, type metadata accessor for SportsDataServiceRequest);
  v31 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v32 = swift_allocObject();
  sub_1BA5193C4(v30, v32 + v31, type metadata accessor for SportsDataServiceRequest);
  v33 = (void *)sub_1BB86E854();
  sub_1BB0D882C(0);
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v34 = v50;
  sub_1BA4C2DD8(a1, v50, type metadata accessor for SportsDataServiceResourceRequest);
  v35 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v36 = swift_allocObject();
  sub_1BA5193C4(v34, v36 + v35, type metadata accessor for SportsDataServiceResourceRequest);
  v37 = (void *)sub_1BB86E854();
  v38 = sub_1BB86E9A4();
  swift_release();

  swift_release();
  return v38;
}

uint64_t sub_1BB0BDEB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = *v2;
  v6 = type metadata accessor for SportsDataServiceRequest(0);
  v46 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v47 = v7;
  v48 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v45 = (uint64_t)&v40 - v10;
  v44 = type metadata accessor for SportsDataServiceResourceRequest(0);
  v49 = *(_QWORD *)(v44 - 8);
  v11 = *(_QWORD *)(v49 + 64);
  MEMORY[0x1E0C80A78](v44);
  v50 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v40 - v16);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v18 = sub_1BB86EFEC();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED3A3BB8);
  sub_1BA4C2DD8(a1, (uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1BA4C2DD8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  v19 = sub_1BB86EFC8();
  v20 = sub_1BB87330C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v43 = a1;
    v22 = v21;
    v23 = swift_slowAlloc();
    v53 = v23;
    *(_DWORD *)v22 = 136446466;
    v40 = v9;
    v41 = a2;
    v42 = v5;
    v24 = *v17;
    v25 = v17[1];
    swift_bridgeObjectRetain();
    v52 = sub_1BA5D2E14(v24, v25, &v53);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v22 + 12) = 2082;
    sub_1BA98BB14((uint64_t)&v14[*(int *)(v44 + 20)], v45);
    v26 = sub_1BB872A00();
    v52 = sub_1BA5D2E14(v26, v27, &v53);
    a2 = v41;
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BA493000, v19, v20, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v23, -1, -1);
    v28 = v22;
    a1 = v43;
    MEMORY[0x1BCCE5C38](v28, -1, -1);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1E0C80A78](v29);
  *(&v40 - 2) = v51;
  *(&v40 - 1) = a1;
  sub_1BA9881CC();
  sub_1BB86EC14();
  v30 = v48;
  sub_1BA4C2DD8(a2, v48, type metadata accessor for SportsDataServiceRequest);
  v31 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v32 = swift_allocObject();
  sub_1BA5193C4(v30, v32 + v31, type metadata accessor for SportsDataServiceRequest);
  v33 = (void *)sub_1BB86E854();
  sub_1BB0D7BA0(0);
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v34 = v50;
  sub_1BA4C2DD8(a1, v50, type metadata accessor for SportsDataServiceResourceRequest);
  v35 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v36 = swift_allocObject();
  sub_1BA5193C4(v34, v36 + v35, type metadata accessor for SportsDataServiceResourceRequest);
  v37 = (void *)sub_1BB86E854();
  v38 = sub_1BB86E9A4();
  swift_release();

  swift_release();
  return v38;
}

uint64_t sub_1BB0BE38C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = *v2;
  v6 = type metadata accessor for SportsDataServiceRequest(0);
  v46 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v47 = v7;
  v48 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v45 = (uint64_t)&v40 - v10;
  v44 = type metadata accessor for SportsDataServiceResourceRequest(0);
  v49 = *(_QWORD *)(v44 - 8);
  v11 = *(_QWORD *)(v49 + 64);
  MEMORY[0x1E0C80A78](v44);
  v50 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v40 - v16);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v18 = sub_1BB86EFEC();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED3A3BB8);
  sub_1BA4C2DD8(a1, (uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1BA4C2DD8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  v19 = sub_1BB86EFC8();
  v20 = sub_1BB87330C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v43 = a1;
    v22 = v21;
    v23 = swift_slowAlloc();
    v53 = v23;
    *(_DWORD *)v22 = 136446466;
    v40 = v9;
    v41 = a2;
    v42 = v5;
    v24 = *v17;
    v25 = v17[1];
    swift_bridgeObjectRetain();
    v52 = sub_1BA5D2E14(v24, v25, &v53);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v22 + 12) = 2082;
    sub_1BA98BB14((uint64_t)&v14[*(int *)(v44 + 20)], v45);
    v26 = sub_1BB872A00();
    v52 = sub_1BA5D2E14(v26, v27, &v53);
    a2 = v41;
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BA493000, v19, v20, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v23, -1, -1);
    v28 = v22;
    a1 = v43;
    MEMORY[0x1BCCE5C38](v28, -1, -1);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1E0C80A78](v29);
  *(&v40 - 2) = v51;
  *(&v40 - 1) = a1;
  sub_1BA9881CC();
  sub_1BB86EC14();
  v30 = v48;
  sub_1BA4C2DD8(a2, v48, type metadata accessor for SportsDataServiceRequest);
  v31 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v32 = swift_allocObject();
  sub_1BA5193C4(v30, v32 + v31, type metadata accessor for SportsDataServiceRequest);
  v33 = (void *)sub_1BB86E854();
  sub_1BB0D84EC(0);
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v34 = v50;
  sub_1BA4C2DD8(a1, v50, type metadata accessor for SportsDataServiceResourceRequest);
  v35 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v36 = swift_allocObject();
  sub_1BA5193C4(v34, v36 + v35, type metadata accessor for SportsDataServiceResourceRequest);
  v37 = (void *)sub_1BB86E854();
  v38 = sub_1BB86E9A4();
  swift_release();

  swift_release();
  return v38;
}

uint64_t sub_1BB0BE864(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _QWORD v39[2];
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = *v1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = v3;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v39 - v5;
  v7 = type metadata accessor for SportsDataServiceBatchResourceRequest(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v45 = (uint64_t)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v39 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v39 - v14;
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v16 = sub_1BB86EFEC();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED3A3BB8);
  sub_1BA4C2DD8(a1, (uint64_t)v15, type metadata accessor for SportsDataServiceBatchResourceRequest);
  sub_1BA4C2DD8(a1, (uint64_t)v12, type metadata accessor for SportsDataServiceBatchResourceRequest);
  v17 = sub_1BB86EFC8();
  v18 = sub_1BB87330C();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc();
    v41 = v19;
    v21 = v20;
    v42 = swift_slowAlloc();
    v49 = v42;
    *(_DWORD *)v21 = 136446466;
    v40 = v7;
    v44 = a1;
    v22 = swift_bridgeObjectRetain();
    v23 = MEMORY[0x1BCCE36DC](v22, MEMORY[0x1E0DEA968]);
    v39[1] = v4;
    v24 = v23;
    v43 = v8;
    v26 = v25;
    swift_bridgeObjectRelease();
    v48 = sub_1BA5D2E14(v24, v26, &v49);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for SportsDataServiceBatchResourceRequest);
    *(_WORD *)(v21 + 12) = 2082;
    sub_1BA98BB14((uint64_t)&v12[*(int *)(v40 + 20)], (uint64_t)v6);
    v27 = sub_1BB872A00();
    v48 = sub_1BA5D2E14(v27, v28, &v49);
    sub_1BB873A8C();
    a1 = v44;
    swift_bridgeObjectRelease();
    v8 = v43;
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for SportsDataServiceBatchResourceRequest);
    _os_log_impl(&dword_1BA493000, v17, (os_log_type_t)v41, "Sports data service fetching resources %{public}s, cachePolicy=%{public}s", (uint8_t *)v21, 0x16u);
    v29 = v42;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v29, -1, -1);
    MEMORY[0x1BCCE5C38](v21, -1, -1);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for SportsDataServiceBatchResourceRequest);
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for SportsDataServiceBatchResourceRequest);
  }

  MEMORY[0x1E0C80A78](v30);
  v39[-2] = v47;
  v39[-1] = a1;
  sub_1BA8CB2A8(0, (unint64_t *)&qword_1ED3B91E0, (void (*)(uint64_t))sub_1BA9881CC);
  sub_1BB86EC14();
  v31 = v45;
  sub_1BA4C2DD8(a1, v45, type metadata accessor for SportsDataServiceBatchResourceRequest);
  v32 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v33 = swift_allocObject();
  sub_1BA5193C4(v31, v33 + v32, type metadata accessor for SportsDataServiceBatchResourceRequest);
  v34 = (void *)sub_1BB86E854();
  sub_1BB0D75A0();
  sub_1BB86E98C();
  swift_release();
  swift_release();

  sub_1BA4C2DD8(a1, v31, type metadata accessor for SportsDataServiceBatchResourceRequest);
  v35 = swift_allocObject();
  sub_1BA5193C4(v31, v35 + v32, type metadata accessor for SportsDataServiceBatchResourceRequest);
  v36 = (void *)sub_1BB86E854();
  v37 = sub_1BB86E9A4();
  swift_release();

  swift_release();
  return v37;
}

void sub_1BB0BED14(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5)
{
  void *v5;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  unint64_t v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v68 = a1;
  v69 = a5;
  v71 = a2;
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39C230, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v66 = (char *)&v64 - v10;
  v67 = sub_1BB86C8B0();
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v64 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v64 - v13;
  v15 = sub_1BB86C67C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v64 - v20;
  sub_1BA4B07F0(0, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, v8);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v64 - v23;
  v72 = a3;
  swift_bridgeObjectRetain();
  v25 = a4;
  v26 = objc_msgSend(v25, sel_fileURL);
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_6;
  }
  v27 = v26;
  sub_1BB86C5EC();

  v28 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v28(v14, v18, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    sub_1BA5C699C((uint64_t)v14, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BB0D788C();
    v31 = (void *)swift_allocError();
    swift_willThrow();
    goto LABEL_7;
  }
  v28(v21, v14, v15);
  v29 = sub_1BB86C694();
  v31 = v5;
  if (v5)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
LABEL_7:
    v32 = v72;
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v33 = sub_1BB86EFEC();
    __swift_project_value_buffer(v33, (uint64_t)qword_1ED3A3BB8);
    v34 = v31;
    swift_bridgeObjectRetain();
    v35 = v31;
    v36 = sub_1BB86EFC8();
    v37 = sub_1BB8732F4();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v74 = v39;
      *(_DWORD *)v38 = 136446466;
      swift_bridgeObjectRetain();
      v73 = sub_1BA5D2E14(v71, v32, &v74);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v38 + 12) = 2082;
      v73 = (uint64_t)v31;
      v40 = v31;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
      v70 = v25;
      v41 = sub_1BB872A00();
      v73 = sub_1BA5D2E14(v41, v42, &v74);
      sub_1BB873A8C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BA493000, v36, v37, "Sports data service failed to decode resource %{public}s, error=%{public}s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v39, -1, -1);
      MEMORY[0x1BCCE5C38](v38, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  v43 = v29;
  v44 = v30;
  v70 = v25;
  v45 = type metadata accessor for SportsRoster();
  sub_1BB0D7678();
  sub_1BB86DC78();
  v69 = 0;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  sub_1BA69D314(v43, v44);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v24, 0, 1, v45);
  v46 = v72;
  swift_bridgeObjectRetain();
  v47 = (uint64_t)v24;
  v48 = v71;
  sub_1BB4AA540(v47, v71, v46);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v49 = sub_1BB86EFEC();
  __swift_project_value_buffer(v49, (uint64_t)qword_1ED3A3BB8);
  v50 = v70;
  swift_bridgeObjectRetain();
  v51 = v50;
  v52 = sub_1BB86EFC8();
  v53 = sub_1BB87330C();
  v54 = v53;
  if (os_log_type_enabled(v52, v53))
  {
    v55 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v74 = v56;
    *(_DWORD *)v55 = 136446466;
    LODWORD(v70) = v54;
    swift_bridgeObjectRetain();
    v73 = sub_1BA5D2E14(v48, v46, &v74);
    sub_1BB873A8C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v55 + 12) = 2082;
    v72 = v55 + 14;
    v57 = objc_msgSend(v51, sel_fetchDate);
    v58 = v64;
    sub_1BB86C874();

    v59 = (uint64_t)v66;
    sub_1BB86C994();
    v60 = sub_1BB86C9DC();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 0, 1, v60);
    v61 = sub_1BB86C7C0();
    v63 = v62;
    sub_1BA5C699C(v59, (unint64_t *)&qword_1ED39C230, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v58, v67);
    v73 = sub_1BA5D2E14(v61, v63, &v74);
    sub_1BB873A8C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v52, (os_log_type_t)v70, "Sports data service resolved resource %{public}s with fetch date=%{public}s", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v56, -1, -1);
    MEMORY[0x1BCCE5C38](v55, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1BB0BF53C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  _BYTE *v7;
  uint64_t result;
  id v13;
  _BYTE *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  if (a2 >> 60 == 15)
  {
    sub_1BA98B368();
    swift_allocError();
    *v7 = 5;
    return swift_willThrow();
  }
  if (a3)
  {
    sub_1BA86B484(a1, a2);
    v13 = a3;
    if (objc_msgSend(v13, sel_statusCode) == (id)403)
    {
      sub_1BA98B368();
      swift_allocError();
      *v14 = 19;
      swift_willThrow();

      return sub_1BA69D490(a1, a2);
    }

  }
  else
  {
    sub_1BA69D44C(a1, a2);
  }
  sub_1BB0D9018();
  sub_1BB86DC78();
  result = sub_1BA69D490(a1, a2);
  if (!v5)
  {
    sub_1BA4C2DD8(a4, a5, type metadata accessor for SportsDataServiceURLRequest);
    type metadata accessor for SportsDataServiceRequest(0);
    swift_storeEnumTagMultiPayload();
    result = sub_1BB0D8F90(0, &qword_1ED3A7970, (void (*)(void))sub_1BB0D9018, (void (*)(void))sub_1BB0D905C);
    v15 = a5 + *(int *)(result + 52);
    *(_OWORD *)v15 = v16;
    *(_QWORD *)(v15 + 16) = v17;
  }
  return result;
}

uint64_t sub_1BB0BF6FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  _BYTE *v7;
  uint64_t result;
  id v13;
  _BYTE *v14;
  uint64_t v15;

  if (a2 >> 60 == 15)
  {
    sub_1BA98B368();
    swift_allocError();
    *v7 = 5;
    return swift_willThrow();
  }
  if (a3)
  {
    sub_1BA86B484(a1, a2);
    v13 = a3;
    if (objc_msgSend(v13, sel_statusCode) == (id)403)
    {
      sub_1BA98B368();
      swift_allocError();
      *v14 = 19;
      swift_willThrow();

      return sub_1BA69D490(a1, a2);
    }

  }
  else
  {
    sub_1BA69D44C(a1, a2);
  }
  sub_1BB0D8DA8();
  sub_1BB86DC78();
  result = sub_1BA69D490(a1, a2);
  if (!v5)
  {
    sub_1BA4C2DD8(a4, a5, type metadata accessor for SportsDataServiceURLRequest);
    type metadata accessor for SportsDataServiceRequest(0);
    swift_storeEnumTagMultiPayload();
    result = sub_1BB0D8F90(0, &qword_1ED3A7968, (void (*)(void))sub_1BB0D8DA8, (void (*)(void))sub_1BB0D8DEC);
    *(_QWORD *)(a5 + *(int *)(result + 52)) = v15;
  }
  return result;
}

uint64_t sub_1BB0BF8A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, void (*a5)(_QWORD)@<X5>, void (*a6)(void)@<X6>, uint64_t (*a7)(_QWORD)@<X7>, uint64_t a8@<X8>)
{
  uint64_t v8;
  _BYTE *v10;
  uint64_t result;
  id v18;
  _BYTE *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v22;

  if (a2 >> 60 == 15)
  {
    sub_1BA98B368();
    swift_allocError();
    *v10 = 5;
    return swift_willThrow();
  }
  if (a3)
  {
    sub_1BA86B484(a1, a2);
    v18 = a3;
    if (objc_msgSend(v18, sel_statusCode) == (id)403)
    {
      sub_1BA98B368();
      swift_allocError();
      *v19 = 19;
      swift_willThrow();

      return sub_1BA69D490(a1, a2);
    }
    v20 = a7;

  }
  else
  {
    v20 = a7;
    sub_1BA69D44C(a1, a2);
  }
  a5(0);
  a6();
  sub_1BB86DC78();
  result = sub_1BA69D490(a1, a2);
  if (!v8)
  {
    sub_1BA4C2DD8(a4, a8, type metadata accessor for SportsDataServiceURLRequest);
    type metadata accessor for SportsDataServiceRequest(0);
    swift_storeEnumTagMultiPayload();
    result = v20(0);
    *(_QWORD *)(a8 + *(int *)(result + 52)) = v22;
  }
  return result;
}

uint64_t sub_1BB0BFA64@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t (*a5)(_QWORD)@<X5>, void (*a6)(uint64_t)@<X6>, uint64_t (*a7)(_QWORD)@<X7>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _BYTE *v17;
  uint64_t result;
  id v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;

  v26 = a5;
  v27 = a4;
  v28 = a8;
  v14 = a5(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v24 - v15;
  if (a2 >> 60 == 15)
  {
    sub_1BA98B368();
    swift_allocError();
    *v17 = 5;
    return swift_willThrow();
  }
  if (a3)
  {
    sub_1BA86B484(a1, a2);
    v19 = a3;
    if (objc_msgSend(v19, sel_statusCode) == (id)403)
    {
      sub_1BA98B368();
      swift_allocError();
      *v20 = 19;
      swift_willThrow();

      return sub_1BA69D490(a1, a2);
    }
    v25 = a7;

  }
  else
  {
    v25 = a7;
    v21 = sub_1BA69D44C(a1, a2);
  }
  a6(v21);
  sub_1BB86DC78();
  result = sub_1BA69D490(a1, a2);
  if (!v8)
  {
    v22 = v28;
    sub_1BA4C2DD8(v27, v28, type metadata accessor for SportsDataServiceURLRequest);
    type metadata accessor for SportsDataServiceRequest(0);
    swift_storeEnumTagMultiPayload();
    v23 = v25(0);
    return sub_1BA5193C4((uint64_t)v16, v22 + *(int *)(v23 + 52), v26);
  }
  return result;
}

uint64_t sub_1BB0BFC58(void *a1, _QWORD *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint8_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  os_log_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *v40;

  v38 = a5;
  v35 = a6;
  v36 = a4;
  v34 = a2;
  v8 = type metadata accessor for SportsDataServiceURLRequest(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v37 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86C67C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0
    && (v40 = a1,
        v15 = a1,
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030),
        swift_dynamicCast())
    && v39 == 19)
  {
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v16 = sub_1BB86EFEC();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED3A3BB8);
    v17 = sub_1BB86EFC8();
    v18 = sub_1BB87330C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v33 = v17;
      v20 = v19;
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1BA493000, v33, v18, "Refreshing access token for sports visualizations", v19, 2u);
      v21 = v20;
      v17 = v33;
      MEMORY[0x1BCCE5C38](v21, -1, -1);
    }

    v22 = v34 + 9;
    v23 = v34[12];
    v34 = (_QWORD *)v34[13];
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v24 = v36;
    sub_1BB86E518();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v11);
    v25 = v24;
    v26 = v37;
    sub_1BA4C2DD8(v25, v37, type metadata accessor for SportsDataServiceURLRequest);
    v27 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v28 = (v13 + *(unsigned __int8 *)(v9 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v29 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v29 + v27, v14, v11);
    sub_1BA5193C4(v26, v29 + v28, type metadata accessor for SportsDataServiceURLRequest);
    v30 = (void *)sub_1BB86E854();
    sub_1BB0D8F90(0, &qword_1ED3A7970, (void (*)(void))sub_1BB0D9018, (void (*)(void))sub_1BB0D905C);
    type metadata accessor for SportsDataServiceRequestFetcher();
    v13 = sub_1BB86E980();
    swift_release();
    swift_release();

  }
  else
  {
    swift_willThrow();
    v31 = a1;
  }
  return v13;
}

uint64_t sub_1BB0BFF80(void *a1, _QWORD *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint8_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  os_log_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *v40;

  v38 = a5;
  v35 = a6;
  v36 = a4;
  v34 = a2;
  v8 = type metadata accessor for SportsDataServiceURLRequest(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v37 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86C67C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0
    && (v40 = a1,
        v15 = a1,
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030),
        swift_dynamicCast())
    && v39 == 19)
  {
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v16 = sub_1BB86EFEC();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED3A3BB8);
    v17 = sub_1BB86EFC8();
    v18 = sub_1BB87330C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v33 = v17;
      v20 = v19;
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1BA493000, v33, v18, "Refreshing access token for sports visualizations", v19, 2u);
      v21 = v20;
      v17 = v33;
      MEMORY[0x1BCCE5C38](v21, -1, -1);
    }

    v22 = v34 + 9;
    v23 = v34[12];
    v34 = (_QWORD *)v34[13];
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v24 = v36;
    sub_1BB86E518();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v11);
    v25 = v24;
    v26 = v37;
    sub_1BA4C2DD8(v25, v37, type metadata accessor for SportsDataServiceURLRequest);
    v27 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v28 = (v13 + *(unsigned __int8 *)(v9 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v29 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v29 + v27, v14, v11);
    sub_1BA5193C4(v26, v29 + v28, type metadata accessor for SportsDataServiceURLRequest);
    v30 = (void *)sub_1BB86E854();
    sub_1BB0D8F90(0, &qword_1ED3A7968, (void (*)(void))sub_1BB0D8DA8, (void (*)(void))sub_1BB0D8DEC);
    type metadata accessor for SportsDataServiceRequestFetcher();
    v13 = sub_1BB86E980();
    swift_release();
    swift_release();

  }
  else
  {
    swift_willThrow();
    v31 = a1;
  }
  return v13;
}

uint64_t sub_1BB0C02A8(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(_QWORD), uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint8_t *v23;
  uint8_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD);
  uint64_t v44;
  char v45;
  void *v46;

  v42 = a7;
  v43 = a8;
  v44 = a5;
  v39 = a6;
  v40 = a4;
  v38 = a2;
  v11 = type metadata accessor for SportsDataServiceURLRequest(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v41 = (uint64_t)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86C67C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0
    && (v46 = a1,
        v18 = a1,
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030),
        swift_dynamicCast())
    && v45 == 19)
  {
    v37 = a9;
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v19 = sub_1BB86EFEC();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED3A3BB8);
    v20 = sub_1BB86EFC8();
    v21 = sub_1BB87330C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v36 = v20;
      v23 = v22;
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1BA493000, v36, v21, "Refreshing access token for sports visualizations", v22, 2u);
      v24 = v23;
      v20 = v36;
      MEMORY[0x1BCCE5C38](v24, -1, -1);
    }

    v25 = v38 + 9;
    v26 = v38[12];
    v38 = (_QWORD *)v38[13];
    __swift_project_boxed_opaque_existential_1(v25, v26);
    v27 = v40;
    sub_1BB86E518();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v39, v14);
    v28 = v41;
    sub_1BA4C2DD8(v27, v41, type metadata accessor for SportsDataServiceURLRequest);
    v29 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v30 = (v16 + *(unsigned __int8 *)(v12 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v31 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v31 + v29, v17, v14);
    sub_1BA5193C4(v28, v31 + v30, type metadata accessor for SportsDataServiceURLRequest);
    v32 = (void *)sub_1BB86E854();
    v43(0);
    type metadata accessor for SportsDataServiceRequestFetcher();
    a3 = sub_1BB86E980();
    swift_release();
    swift_release();

  }
  else
  {
    swift_willThrow();
    v33 = a1;
  }
  return a3;
}

uint64_t sub_1BB0C05B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _BYTE *v6;
  uint64_t result;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  if (a2 >> 60 == 15)
  {
    sub_1BA98B368();
    swift_allocError();
    *v6 = 5;
    return swift_willThrow();
  }
  else
  {
    sub_1BA69D44C(a1, a2);
    sub_1BB0D9018();
    sub_1BB86DC78();
    result = sub_1BA69D490(a1, a2);
    if (!v4)
    {
      sub_1BA4C2DD8(a3, a4, type metadata accessor for SportsDataServiceRequest);
      result = sub_1BB0D8F90(0, &qword_1ED3A7970, (void (*)(void))sub_1BB0D9018, (void (*)(void))sub_1BB0D905C);
      v11 = a4 + *(int *)(result + 52);
      *(_OWORD *)v11 = v12;
      *(_QWORD *)(v11 + 16) = v13;
    }
  }
  return result;
}

uint64_t sub_1BB0C06E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _BYTE *v6;
  uint64_t result;
  uint64_t v11;

  if (a2 >> 60 == 15)
  {
    sub_1BA98B368();
    swift_allocError();
    *v6 = 5;
    return swift_willThrow();
  }
  else
  {
    sub_1BA69D44C(a1, a2);
    sub_1BB0D8DA8();
    sub_1BB86DC78();
    result = sub_1BA69D490(a1, a2);
    if (!v4)
    {
      sub_1BA4C2DD8(a3, a4, type metadata accessor for SportsDataServiceRequest);
      result = sub_1BB0D8F90(0, &qword_1ED3A7968, (void (*)(void))sub_1BB0D8DA8, (void (*)(void))sub_1BB0D8DEC);
      *(_QWORD *)(a4 + *(int *)(result + 52)) = v11;
    }
  }
  return result;
}

uint64_t sub_1BB0C07F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X4>, void (*a4)(_QWORD)@<X5>, void (*a5)(uint64_t)@<X6>, uint64_t (*a6)(_QWORD)@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  _BYTE *v9;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  if (a2 >> 60 == 15)
  {
    sub_1BA98B368();
    swift_allocError();
    *v9 = 5;
    return swift_willThrow();
  }
  else
  {
    a4(0);
    v16 = sub_1BA69D44C(a1, a2);
    a5(v16);
    sub_1BB86DC78();
    result = sub_1BA69D490(a1, a2);
    if (!v7)
    {
      sub_1BA4C2DD8(a3, a7, type metadata accessor for SportsDataServiceRequest);
      result = a6(0);
      *(_QWORD *)(a7 + *(int *)(result + 52)) = v17;
    }
  }
  return result;
}

uint64_t sub_1BB0C0908@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t (*a4)(_QWORD)@<X5>, void (*a5)(uint64_t)@<X6>, uint64_t (*a6)(_QWORD)@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;

  v22 = a3;
  v23 = a7;
  v13 = a4(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v21 - v14;
  if (a2 >> 60 == 15)
  {
    sub_1BA98B368();
    swift_allocError();
    *v16 = 5;
    return swift_willThrow();
  }
  else
  {
    v21 = a6;
    v18 = sub_1BA69D44C(a1, a2);
    a5(v18);
    sub_1BB86DC78();
    result = sub_1BA69D490(a1, a2);
    if (!v7)
    {
      v19 = v23;
      sub_1BA4C2DD8(v22, v23, type metadata accessor for SportsDataServiceRequest);
      v20 = v21(0);
      return sub_1BA5193C4((uint64_t)v15, v19 + *(int *)(v20 + 52), a4);
    }
  }
  return result;
}

uint64_t sub_1BB0C0A68@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  uint64_t v45;
  void *v46;
  char *v47;
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;

  v64 = a2;
  v69 = a3;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v70 = (char *)&v58 - v8;
  v9 = sub_1BB86C67C();
  *(_QWORD *)&v72 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v68 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v71 = (char *)&v58 - v12;
  v13 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39C230, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], v6);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v58 - v17;
  v19 = sub_1BB86C8B0();
  v66 = *(_QWORD *)(v19 - 8);
  v67 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v22 = sub_1BB86EFEC();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED3A3BB8);
  v23 = a1;
  v24 = sub_1BB86EFC8();
  v25 = sub_1BB87330C();
  v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    v27 = swift_slowAlloc();
    v60 = swift_slowAlloc();
    *(_QWORD *)&v73 = v60;
    *(_DWORD *)v27 = 136446466;
    v59 = v26;
    v28 = objc_msgSend(v23, sel_resourceID);
    v62 = a4;
    v29 = v28;
    v30 = sub_1BB8729A0();
    v63 = v15;
    v31 = v30;
    v61 = v9;
    v33 = v32;

    v75 = sub_1BA5D2E14(v31, v33, (uint64_t *)&v73);
    sub_1BB873A8C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    v34 = objc_msgSend(v23, sel_fetchDate, v27 + 14);
    sub_1BB86C874();

    sub_1BB86C994();
    v35 = sub_1BB86C9DC();
    v36 = MEMORY[0x1E0CB0E38];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v18, 0, 1, v35);
    v37 = sub_1BB86C7C0();
    v39 = v38;
    v40 = (uint64_t (*)(uint64_t))v36;
    v9 = v61;
    sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED39C230, v40);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v21, v67);
    v75 = sub_1BA5D2E14(v37, v39, (uint64_t *)&v73);
    a4 = v62;
    sub_1BB873A8C();

    v15 = v63;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v24, (os_log_type_t)v59, "Sports data service resolved resource %{public}s with fetch date=%{public}s", (uint8_t *)v27, 0x16u);
    v41 = v60;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v41, -1, -1);
    MEMORY[0x1BCCE5C38](v27, -1, -1);

  }
  else
  {

  }
  v42 = (uint64_t)v70;
  v43 = v71;
  sub_1BA4C2DD8(v69, (uint64_t)v15, type metadata accessor for SportsDataServiceRequest);
  v44 = objc_msgSend(v23, sel_fileURL);
  v45 = v72;
  if (!v44)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v42, 1, 1, v9);
    goto LABEL_11;
  }
  v46 = v44;
  v47 = v68;
  sub_1BB86C5EC();

  v48 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
  v48(v42, v47, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v42, 1, v9) == 1)
  {
LABEL_11:
    sub_1BA5C699C(v42, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BB0D788C();
    swift_allocError();
    swift_willThrow();
    return sub_1BA4A2E80((uint64_t)v15, type metadata accessor for SportsDataServiceRequest);
  }
  v48((uint64_t)v43, (char *)v42, v9);
  v49 = v65;
  v50 = sub_1BB86C694();
  v52 = v9;
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v9);
    return sub_1BA4A2E80((uint64_t)v15, type metadata accessor for SportsDataServiceRequest);
  }
  v54 = v50;
  v55 = v51;
  sub_1BB0D9018();
  sub_1BB86DC78();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v52);
  sub_1BA69D314(v54, v55);
  v72 = v73;
  v56 = v74;
  v57 = a4
      + *(int *)(sub_1BB0D8F90(0, &qword_1ED3A7970, (void (*)(void))sub_1BB0D9018, (void (*)(void))sub_1BB0D905C) + 52);
  *(_OWORD *)v57 = v72;
  *(_QWORD *)(v57 + 16) = v56;
  return sub_1BA5193C4((uint64_t)v15, a4, type metadata accessor for SportsDataServiceRequest);
}

uint64_t sub_1BB0C10C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  uint64_t v45;
  void *v46;
  char *v47;
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v63 = a2;
  v68 = a3;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v57 - v8;
  v9 = sub_1BB86C67C();
  v71 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v67 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v70 = (char *)&v57 - v12;
  v13 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39C230, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], v6);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v57 - v17;
  v19 = sub_1BB86C8B0();
  v65 = *(_QWORD *)(v19 - 8);
  v66 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v22 = sub_1BB86EFEC();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED3A3BB8);
  v23 = a1;
  v24 = sub_1BB86EFC8();
  v25 = sub_1BB87330C();
  v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    v27 = swift_slowAlloc();
    v59 = swift_slowAlloc();
    v73 = v59;
    *(_DWORD *)v27 = 136446466;
    v58 = v26;
    v28 = objc_msgSend(v23, sel_resourceID);
    v61 = a4;
    v29 = v28;
    v30 = sub_1BB8729A0();
    v62 = v15;
    v31 = v30;
    v60 = v9;
    v33 = v32;

    v72 = sub_1BA5D2E14(v31, v33, &v73);
    sub_1BB873A8C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    v34 = objc_msgSend(v23, sel_fetchDate, v27 + 14);
    sub_1BB86C874();

    sub_1BB86C994();
    v35 = sub_1BB86C9DC();
    v36 = MEMORY[0x1E0CB0E38];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v18, 0, 1, v35);
    v37 = sub_1BB86C7C0();
    v39 = v38;
    v40 = (uint64_t (*)(uint64_t))v36;
    v9 = v60;
    sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED39C230, v40);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v21, v66);
    v72 = sub_1BA5D2E14(v37, v39, &v73);
    a4 = v61;
    sub_1BB873A8C();

    v15 = v62;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v24, (os_log_type_t)v58, "Sports data service resolved resource %{public}s with fetch date=%{public}s", (uint8_t *)v27, 0x16u);
    v41 = v59;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v41, -1, -1);
    MEMORY[0x1BCCE5C38](v27, -1, -1);

  }
  else
  {

  }
  v42 = (uint64_t)v69;
  v43 = v70;
  sub_1BA4C2DD8(v68, (uint64_t)v15, type metadata accessor for SportsDataServiceRequest);
  v44 = objc_msgSend(v23, sel_fileURL);
  v45 = v71;
  if (!v44)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v42, 1, 1, v9);
    goto LABEL_11;
  }
  v46 = v44;
  v47 = v67;
  sub_1BB86C5EC();

  v48 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
  v48(v42, v47, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v42, 1, v9) == 1)
  {
LABEL_11:
    sub_1BA5C699C(v42, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BB0D788C();
    swift_allocError();
    swift_willThrow();
    return sub_1BA4A2E80((uint64_t)v15, type metadata accessor for SportsDataServiceRequest);
  }
  v48((uint64_t)v43, (char *)v42, v9);
  v49 = v64;
  v50 = sub_1BB86C694();
  v52 = v9;
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v9);
    return sub_1BA4A2E80((uint64_t)v15, type metadata accessor for SportsDataServiceRequest);
  }
  v54 = v50;
  v55 = v51;
  sub_1BB0D8DA8();
  sub_1BB86DC78();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v52);
  sub_1BA69D314(v54, v55);
  v56 = v73;
  *(_QWORD *)(a4
            + *(int *)(sub_1BB0D8F90(0, &qword_1ED3A7968, (void (*)(void))sub_1BB0D8DA8, (void (*)(void))sub_1BB0D8DEC)+ 52)) = v56;
  return sub_1BA5193C4((uint64_t)v15, a4, type metadata accessor for SportsDataServiceRequest);
}

uint64_t sub_1BB0C1704@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD)@<X3>, void (*a5)(void)@<X4>, uint64_t (*a6)(_QWORD)@<X5>, uint64_t a7@<X8>)
{
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  void *v50;
  char *v51;
  void (*v52)(uint64_t, char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t (*v69)(_QWORD);
  uint64_t v70;
  void (*v71)(_QWORD);
  void (*v72)(void);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  v69 = a6;
  v70 = a2;
  v71 = a4;
  v72 = a5;
  v78 = a3;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v79 = (char *)v62 - v11;
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v77 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v74 = (char *)v62 - v16;
  v17 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39C230, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], v9);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v62 - v21;
  v23 = sub_1BB86C8B0();
  v75 = *(_QWORD *)(v23 - 8);
  v76 = v23;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v26 = sub_1BB86EFEC();
  __swift_project_value_buffer(v26, (uint64_t)qword_1ED3A3BB8);
  v27 = a1;
  v28 = sub_1BB86EFC8();
  v29 = sub_1BB87330C();
  v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    v31 = swift_slowAlloc();
    v67 = a7;
    v32 = v31;
    v64 = swift_slowAlloc();
    v81 = v64;
    *(_DWORD *)v32 = 136446466;
    v63 = v30;
    v33 = objc_msgSend(v27, sel_resourceID);
    v68 = v19;
    v34 = v33;
    v35 = sub_1BB8729A0();
    v65 = v13;
    v66 = v12;
    v36 = v35;
    v38 = v37;

    v80 = sub_1BA5D2E14(v36, v38, &v81);
    sub_1BB873A8C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    v62[1] = v32 + 14;
    v39 = objc_msgSend(v27, sel_fetchDate);
    sub_1BB86C874();

    sub_1BB86C994();
    v40 = sub_1BB86C9DC();
    v41 = MEMORY[0x1E0CB0E38];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v22, 0, 1, v40);
    v42 = sub_1BB86C7C0();
    v44 = v43;
    v45 = (uint64_t (*)(uint64_t))v41;
    v13 = v65;
    sub_1BA5C699C((uint64_t)v22, (unint64_t *)&qword_1ED39C230, v45);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v25, v76);
    v80 = sub_1BA5D2E14(v42, v44, &v81);
    v19 = v68;
    sub_1BB873A8C();

    v12 = v66;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v28, (os_log_type_t)v63, "Sports data service resolved resource %{public}s with fetch date=%{public}s", (uint8_t *)v32, 0x16u);
    v46 = v64;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v46, -1, -1);
    v47 = v32;
    a7 = v67;
    MEMORY[0x1BCCE5C38](v47, -1, -1);

  }
  else
  {

  }
  sub_1BA4C2DD8(v78, (uint64_t)v19, type metadata accessor for SportsDataServiceRequest);
  v48 = objc_msgSend(v27, sel_fileURL);
  v49 = (uint64_t)v79;
  if (!v48)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v79, 1, 1, v12);
    goto LABEL_11;
  }
  v50 = v48;
  v51 = v77;
  sub_1BB86C5EC();

  v52 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v52(v49, v51, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v49, 0, 1, v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v49, 1, v12) == 1)
  {
LABEL_11:
    sub_1BA5C699C(v49, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BB0D788C();
    swift_allocError();
    swift_willThrow();
    return sub_1BA4A2E80((uint64_t)v19, type metadata accessor for SportsDataServiceRequest);
  }
  v53 = v13;
  v54 = v74;
  v52((uint64_t)v74, (char *)v49, v12);
  v55 = v73;
  v56 = sub_1BB86C694();
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v54, v12);
    return sub_1BA4A2E80((uint64_t)v19, type metadata accessor for SportsDataServiceRequest);
  }
  v59 = v56;
  v60 = v57;
  v71(0);
  v72();
  sub_1BB86DC78();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v74, v12);
  sub_1BA69D314(v59, v60);
  v61 = v81;
  *(_QWORD *)(a7 + *(int *)(v69(0) + 52)) = v61;
  return sub_1BA5193C4((uint64_t)v19, a7, type metadata accessor for SportsDataServiceRequest);
}

uint64_t sub_1BB0C1D48@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD, double)@<X3>, void (*a5)(void)@<X4>, uint64_t (*a6)(_QWORD)@<X5>, uint64_t a7@<X8>)
{
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  void *v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(_QWORD, double);
  uint64_t (*v70)(_QWORD);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(void);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v70 = a6;
  v74 = a5;
  v78 = a3;
  v73 = a2;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v79 = (char *)&v64 - v12;
  v80 = sub_1BB86C67C();
  v83 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v77 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v82 = (char *)&v64 - v16;
  v71 = a4(0, v15);
  MEMORY[0x1E0C80A78](v71);
  v72 = (char *)&v64 - v17;
  v18 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1E0C80A78](v18);
  v81 = (uint64_t)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39C230, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], v10);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v64 - v21;
  v23 = sub_1BB86C8B0();
  v76 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v26 = sub_1BB86EFEC();
  __swift_project_value_buffer(v26, (uint64_t)qword_1ED3A3BB8);
  v27 = a1;
  v28 = sub_1BB86EFC8();
  v29 = sub_1BB87330C();
  v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    v31 = swift_slowAlloc();
    v66 = v30;
    v32 = v31;
    v67 = swift_slowAlloc();
    v85 = v67;
    *(_DWORD *)v32 = 136446466;
    v33 = objc_msgSend(v27, sel_resourceID);
    v68 = a7;
    v34 = v33;
    v35 = sub_1BB8729A0();
    v65 = v23;
    v36 = v35;
    v69 = a4;
    v38 = v37;

    v84 = sub_1BA5D2E14(v36, v38, &v85);
    sub_1BB873A8C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    v39 = objc_msgSend(v27, sel_fetchDate, v32 + 14);
    sub_1BB86C874();

    sub_1BB86C994();
    v40 = sub_1BB86C9DC();
    v41 = MEMORY[0x1E0CB0E38];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v22, 0, 1, v40);
    v42 = sub_1BB86C7C0();
    v44 = v43;
    v45 = (uint64_t (*)(uint64_t))v41;
    a4 = v69;
    sub_1BA5C699C((uint64_t)v22, (unint64_t *)&qword_1ED39C230, v45);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v25, v65);
    v84 = sub_1BA5D2E14(v42, v44, &v85);
    a7 = v68;
    sub_1BB873A8C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v28, (os_log_type_t)v66, "Sports data service resolved resource %{public}s with fetch date=%{public}s", (uint8_t *)v32, 0x16u);
    v46 = v67;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v46, -1, -1);
    MEMORY[0x1BCCE5C38](v32, -1, -1);

  }
  else
  {

  }
  v48 = v82;
  v47 = v83;
  v49 = v81;
  sub_1BA4C2DD8(v78, v81, type metadata accessor for SportsDataServiceRequest);
  v50 = objc_msgSend(v27, sel_fileURL);
  v51 = v80;
  if (!v50)
  {
    v55 = (uint64_t)v79;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v79, 1, 1, v80);
    goto LABEL_11;
  }
  v52 = v50;
  v53 = v77;
  sub_1BB86C5EC();

  v54 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v55 = (uint64_t)v79;
  v54(v79, v53, v51);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v55, 0, 1, v51);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v55, 1, v51) == 1)
  {
LABEL_11:
    sub_1BA5C699C(v55, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BB0D788C();
    swift_allocError();
    swift_willThrow();
    return sub_1BA4A2E80(v49, type metadata accessor for SportsDataServiceRequest);
  }
  v54(v48, (char *)v55, v51);
  v56 = v75;
  v57 = sub_1BB86C694();
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v51);
    return sub_1BA4A2E80(v49, type metadata accessor for SportsDataServiceRequest);
  }
  v60 = v57;
  v61 = v58;
  v74();
  v62 = (uint64_t)v72;
  sub_1BB86DC78();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v51);
  sub_1BA69D314(v60, v61);
  sub_1BA5193C4(v49, a7, type metadata accessor for SportsDataServiceRequest);
  v63 = v70(0);
  return sub_1BA5193C4(v62, a7 + *(int *)(v63 + 52), (uint64_t (*)(_QWORD))a4);
}

uint64_t SportsDataServiceType.fetchRosters(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(a3 + 88))(a1, &v4, a2);
}

uint64_t SportsDataServiceType.fetchDataVisualizations(request:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  char v6;
  __int128 v7;
  uint64_t v8;
  char v9;

  v3 = *((_QWORD *)a1 + 2);
  v4 = *((_BYTE *)a1 + 24);
  v7 = *a1;
  v8 = v3;
  v9 = v4;
  v6 = 0;
  return (*(uint64_t (**)(__int128 *, char *, uint64_t))(a3 + 96))(&v7, &v6, a2);
}

uint64_t SportsDataServiceType.fetchDataVisualizations(requests:context:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v8;
  uint64_t v9;

  v8 = *a2;
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3A3A80, (uint64_t)&type metadata for SportsDataVisualizationResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = v4;
  *(_BYTE *)(v9 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return sub_1BB86E95C();
}

uint64_t sub_1BB0C24F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = a6;
  *(_BYTE *)(v6 + 96) = a4;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  *(_QWORD *)(v6 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1BB0C2514()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_BYTE *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = swift_allocObject();
  *(_QWORD *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v3 + 32) = v2;
  *(_BYTE *)(v3 + 40) = v1;
  swift_unknownObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_1BB0C25C8;
  return sub_1BB86ECC8();
}

uint64_t sub_1BB0C25C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BB0C263C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_25:
    v17 = *(uint64_t **)(v0 + 24);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 16) = v4;
    sub_1BA4AD288(0, &qword_1ED3CF7B8, (uint64_t)&type metadata for SportsDataVisualization, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C69E0(&qword_1ED3AAF00, &qword_1ED3CF7B8, (uint64_t)&type metadata for SportsDataVisualization, MEMORY[0x1E0DEAF38]);
    v18 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    *v17 = v18;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = (uint64_t *)(v1 + 32);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v5 = *v3;
    v6 = *(_QWORD *)(*v3 + 16);
    v7 = v4[2];
    v8 = v7 + v6;
    if (__OFADD__(v7, v6))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v8 <= v4[3] >> 1)
    {
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v7 <= v8)
        v10 = v7 + v6;
      else
        v10 = v7;
      v4 = sub_1BB38C57C(isUniquelyReferenced_nonNull_native, v10, 1, v4);
      if (*(_QWORD *)(v5 + 16))
      {
LABEL_14:
        v11 = v4[2];
        if ((v4[3] >> 1) - v11 < v6)
          goto LABEL_28;
        v12 = (unint64_t)&v4[v11 + 4];
        if (v5 + 32 < v12 + 8 * v6 && v12 < v5 + 32 + 8 * v6)
          return sub_1BB873F84();
        swift_arrayInitWithCopy();
        if (v6)
        {
          v14 = v4[2];
          v15 = __OFADD__(v14, v6);
          v16 = v14 + v6;
          if (v15)
            goto LABEL_29;
          v4[2] = v16;
        }
        goto LABEL_4;
      }
    }
    if (v6)
    {
      __break(1u);
      break;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    ++v3;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return sub_1BB873F84();
}

uint64_t sub_1BB0C28A4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C28D8()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0C2904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_BYTE *)(v1 + 48);
  v5 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 16);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1BA8195A4;
  *(_BYTE *)(v5 + 96) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = v7;
  *(_QWORD *)(v5 + 24) = a1;
  return swift_task_switch();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchTaxonomyGraphResource(cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchStandingConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchLineScoreConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchBoxScoreConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchBracketConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchKeyPlayersConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchInjuryReportConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchScoreConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchSyncingConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchSyncingConfigV2Resource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchRosters(for:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchDataVisualizations(request:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t sub_1BB0C29DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 40) = a6;
  *(_BYTE *)(v6 + 96) = a4;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a3;
  *(_OWORD *)(v6 + 48) = *(_OWORD *)a2;
  *(_QWORD *)(v6 + 64) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(v6 + 97) = *(_BYTE *)(a2 + 24);
  return swift_task_switch();
}

uint64_t sub_1BB0C2A14()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;
  __int128 v8;
  uint64_t v9;
  char v10;
  char v11;

  v1 = *(_BYTE *)(v0 + 97);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_BYTE *)(v0 + 96);
  v8 = *(_OWORD *)(v0 + 48);
  v9 = v2;
  v10 = v1;
  v11 = v5;
  *(_QWORD *)(v0 + 72) = (*(uint64_t (**)(__int128 *, char *, uint64_t))(v4 + 96))(&v8, &v11, v3);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v6;
  *v6 = v0;
  v6[1] = sub_1BB0C2AA4;
  return sub_1BB86E908();
}

uint64_t sub_1BB0C2AA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BB0C2B18()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BB0C2B4C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  SportsDataVisualization.identifier.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB0C2B8C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB0C2BE8()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  type metadata accessor for SportsDataServiceRequest(0);
  sub_1BB86EC14();
  v0 = (void *)sub_1BB86E854();
  sub_1BB0D8F90(0, &qword_1ED3A7970, (void (*)(void))sub_1BB0D9018, (void (*)(void))sub_1BB0D905C);
  sub_1BB86E980();
  swift_release();

  v1 = (void *)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();

  v2 = (void *)sub_1BB86E854();
  v3 = sub_1BB86E9A4();
  swift_release();

  return v3;
}

uint64_t sub_1BB0C2D04()
{
  return sub_1BB0C2D4C();
}

uint64_t sub_1BB0C2D28()
{
  return sub_1BB0C2D4C();
}

uint64_t sub_1BB0C2D4C()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  type metadata accessor for SportsDataServiceRequest(0);
  sub_1BB86EC14();
  v0 = (void *)sub_1BB86E854();
  sub_1BB0D8F90(0, &qword_1ED3A7968, (void (*)(void))sub_1BB0D8DA8, (void (*)(void))sub_1BB0D8DEC);
  sub_1BB86E980();
  swift_release();

  v1 = (void *)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();

  v2 = (void *)sub_1BB86E854();
  v3 = sub_1BB86E9A4();
  swift_release();

  return v3;
}

uint64_t sub_1BB0C2E64()
{
  return sub_1BB0C2D4C();
}

uint64_t sub_1BB0C2E88()
{
  return sub_1BB0C2D4C();
}

uint64_t sub_1BB0C2EAC()
{
  return sub_1BB0C2D4C();
}

uint64_t sub_1BB0C2ED0()
{
  return sub_1BB0C2D4C();
}

uint64_t sub_1BB0C2EF4()
{
  return sub_1BB0C2D4C();
}

uint64_t sub_1BB0C2F18()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  type metadata accessor for SportsDataServiceRequest(0);
  sub_1BB86EC14();
  v0 = (void *)sub_1BB86E854();
  sub_1BB0D8A0C(0);
  sub_1BB86E980();
  swift_release();

  v1 = (void *)sub_1BB86E854();
  sub_1BA4D9CE8(0, &qword_1EF2BB0A8);
  sub_1BB86E974();
  swift_release();

  v2 = (void *)sub_1BB86E854();
  v3 = sub_1BB86E9A4();
  swift_release();

  return v3;
}

uint64_t sub_1BB0C3018()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  type metadata accessor for SportsDataServiceRequest(0);
  sub_1BB86EC14();
  v0 = (void *)sub_1BB86E854();
  sub_1BB0D882C(0);
  sub_1BB86E980();
  swift_release();

  v1 = (void *)sub_1BB86E854();
  sub_1BA4D9CE8(0, &qword_1EF2BB0A8);
  sub_1BB86E974();
  swift_release();

  v2 = (void *)sub_1BB86E854();
  v3 = sub_1BB86E9A4();
  swift_release();

  return v3;
}

uint64_t sub_1BB0C311C(void *a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v26;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v2 = (void *)qword_1ED476750;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  v4 = v2;
  v5 = objc_msgSend(a1, sel_identifier);
  v6 = sub_1BB8729A0();
  v8 = v7;

  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BA6A2D8C();
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 32) = v6;
  *(_QWORD *)(v3 + 40) = v8;
  v10 = sub_1BB87330C();
  sub_1BB86EF44("Sports data service fetching event rosters for %{public}@", 57, 2, &dword_1BA493000, v4, v10, v3);

  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a1, sel_identifier);
  sub_1BB8729A0();

  sub_1BB86E7C4();
  v12 = swift_bridgeObjectRelease();
  if (v26)
  {
    v13 = (void *)qword_1ED476750;
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
    v15 = v13;
    v16 = objc_msgSend(a1, sel_identifier);
    v17 = sub_1BB8729A0();
    v19 = v18;

    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 64) = v9;
    *(_QWORD *)(v14 + 32) = v17;
    *(_QWORD *)(v14 + 40) = v19;
    v20 = sub_1BB87330C();
    sub_1BB86EF44("Sports data service resolved cached rosters for %{public}@", 58, 2, &dword_1BA493000, v15, v20, v14);

    swift_bridgeObjectRelease();
    sub_1BA4AD288(0, &qword_1EF2BB070, (uint64_t)&type metadata for SportsEventRoster, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    MEMORY[0x1E0C80A78](v12);
    type metadata accessor for SportsDataServiceBatchResourceRequest(0);
    sub_1BB86EC14();
    v22 = (void *)sub_1BB86E854();
    sub_1BB0D75A0();
    sub_1BB86E980();
    swift_release();

    *(_QWORD *)(swift_allocObject() + 16) = a1;
    swift_unknownObjectRetain();
    v23 = (void *)sub_1BB86E854();
    sub_1BB86E98C();
    swift_release();
    swift_release();

    *(_QWORD *)(swift_allocObject() + 16) = a1;
    swift_unknownObjectRetain();
    v24 = (void *)sub_1BB86E854();
    v21 = sub_1BB86E9A4();
    swift_release();
    swift_release();

  }
  return v21;
}

uint64_t sub_1BB0C3508(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v17;

  v3 = v2;
  v5 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  v17 = *a2;
  if (qword_1ED3AAC10 != -1)
    swift_once();
  v8 = (void *)qword_1ED476750;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
  v10 = v8;
  sub_1BB873E34();
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = 0xE000000000000000;
  v11 = sub_1BB87330C();
  sub_1BB86EF44("Sports data service fetching data visualizations for request %{public}@", 71, 2, &dword_1BA493000, v10, v11, v9);

  swift_bridgeObjectRelease();
  sub_1BA98B604(v5, v4, v6, v7);
  sub_1BB86E7C4();
  sub_1BA98B574(v5, v4, v6, v7);
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3A3A80, (uint64_t)&type metadata for SportsDataVisualizationResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v3;
  *(_QWORD *)(v12 + 24) = v5;
  *(_QWORD *)(v12 + 32) = v4;
  *(_QWORD *)(v12 + 40) = v6;
  *(_BYTE *)(v12 + 48) = v7;
  *(_BYTE *)(v12 + 49) = v17;
  sub_1BA98B604(v5, v4, v6, v7);
  swift_retain();
  sub_1BB86E95C();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v5;
  *(_QWORD *)(v13 + 24) = v4;
  *(_QWORD *)(v13 + 32) = v6;
  *(_BYTE *)(v13 + 40) = v7;
  sub_1BA98B604(v5, v4, v6, v7);
  v14 = (void *)sub_1BB86E854();
  v15 = sub_1BB86E98C();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_1BB0C38E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - v6;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  sub_1BB86EC14();
  sub_1BA98BB14(a2, (uint64_t)v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  sub_1BA98BB70((uint64_t)v7, v9 + v8);
  v10 = (void *)sub_1BB86E854();
  type metadata accessor for SportsDataServiceRequest(0);
  v11 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1BB0C3A18(uint64_t a1, uint64_t a2)
{
  return sub_1BB0C3BC4(a1, a2, sub_1BB0B9EA4);
}

uint64_t sub_1BB0C3A34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(a1
                + *(int *)(sub_1BB0D8F90(0, &qword_1ED3A7970, (void (*)(void))sub_1BB0D9018, (void (*)(void))sub_1BB0D905C)+ 52));
  v4 = v3[1];
  v5 = v3[2];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB0C3AB0(uint64_t a1)
{
  return sub_1BB0C450C(a1, "Sports data service failed to fetch taxonomy graph; error = %{public}@", 70);
}

uint64_t sub_1BB0C3AC0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - v4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  v6 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1BA9889B4(1, (uint64_t)v5);
  v8 = v7;
  sub_1BA5C699C((uint64_t)v5, (unint64_t *)&qword_1ED3C2210, v2);
  return v8;
}

uint64_t sub_1BB0C3BA8(uint64_t a1, uint64_t a2)
{
  return sub_1BB0C3BC4(a1, a2, sub_1BB0BA1B8);
}

uint64_t sub_1BB0C3BC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 80));
  return a3(a1);
}

uint64_t sub_1BB0C3C0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB0C3D18(a1, a2);
}

uint64_t sub_1BB0C3C20(uint64_t a1)
{
  return sub_1BB0C450C(a1, "Sports data service failed to fetch standings config resource; error = %{public}@", 81);
}

uint64_t sub_1BB0C3C30(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - v4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  v6 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1BA9889B4(2, (uint64_t)v5);
  v8 = v7;
  sub_1BA5C699C((uint64_t)v5, (unint64_t *)&qword_1ED3C2210, v2);
  return v8;
}

uint64_t sub_1BB0C3D18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1
                  + *(int *)(sub_1BB0D8F90(0, &qword_1ED3A7968, (void (*)(void))sub_1BB0D8DA8, (void (*)(void))sub_1BB0D8DEC)+ 52));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB0C3D80(uint64_t a1)
{
  return sub_1BB0C450C(a1, "Sports data service failed to fetch line score config resource; error = %{public}@", 82);
}

uint64_t sub_1BB0C3D90(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - v4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  v6 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1BA9889B4(3, (uint64_t)v5);
  v8 = v7;
  sub_1BA5C699C((uint64_t)v5, (unint64_t *)&qword_1ED3C2210, v2);
  return v8;
}

uint64_t sub_1BB0C3E78(uint64_t a1)
{
  return sub_1BB0C450C(a1, "Sports data service failed to fetch box scores config resource; error = %{public}@", 82);
}

uint64_t sub_1BB0C3E88(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - v4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  v6 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1BA9889B4(4, (uint64_t)v5);
  v8 = v7;
  sub_1BA5C699C((uint64_t)v5, (unint64_t *)&qword_1ED3C2210, v2);
  return v8;
}

uint64_t sub_1BB0C3F70(uint64_t a1)
{
  return sub_1BB0C450C(a1, "Sports data service failed to fetch brackets config resource; error = %{public}@", 80);
}

uint64_t sub_1BB0C3F80(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - v4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  v6 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1BA9889B4(5, (uint64_t)v5);
  v8 = v7;
  sub_1BA5C699C((uint64_t)v5, (unint64_t *)&qword_1ED3C2210, v2);
  return v8;
}

uint64_t sub_1BB0C4068(uint64_t a1)
{
  return sub_1BB0C450C(a1, "Sports data service failed to fetch key players config resource; error = %{public}@", 83);
}

uint64_t sub_1BB0C4078(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - v4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  v6 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1BA9889B4(6, (uint64_t)v5);
  v8 = v7;
  sub_1BA5C699C((uint64_t)v5, (unint64_t *)&qword_1ED3C2210, v2);
  return v8;
}

uint64_t sub_1BB0C4160(uint64_t a1)
{
  return sub_1BB0C450C(a1, "Sports data service failed to fetch injury reports config resource; error = %{public}@",
           86);
}

uint64_t sub_1BB0C4170(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - v4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  v6 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1BA9889B4(7, (uint64_t)v5);
  v8 = v7;
  sub_1BA5C699C((uint64_t)v5, (unint64_t *)&qword_1ED3C2210, v2);
  return v8;
}

uint64_t sub_1BB0C4258(uint64_t a1)
{
  return sub_1BB0C450C(a1, "Sports data service failed to fetch score config resource; error = %{public}@", 77);
}

uint64_t sub_1BB0C4268(uint64_t a1, uint64_t a2)
{
  return sub_1BB0C3BC4(a1, a2, sub_1BB0BA4CC);
}

uint64_t sub_1BB0C4284@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB0C44A4(a1, sub_1BB0D8A0C, (uint64_t (*)(_QWORD))type metadata accessor for SportsSyncingConfigResource, (uint64_t)&protocol witness table for SportsSyncingConfigResource, a2);
}

uint64_t sub_1BB0C42B0(uint64_t a1)
{
  return sub_1BB0C450C(a1, "Sports data service failed to fetch syncing config resource; error = %{public}@", 79);
}

uint64_t sub_1BB0C42C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v15[2];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - v7;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  v9 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_1BB86EC14();
  sub_1BA98BB14((uint64_t)v8, (uint64_t)v5);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  sub_1BA98BB70((uint64_t)v5, v11 + v10);
  v12 = (void *)sub_1BB86E854();
  type metadata accessor for SportsDataServiceRequest(0);
  v13 = sub_1BB86E974();
  swift_release();
  swift_release();

  sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0]);
  return v13;
}

uint64_t sub_1BB0C445C(uint64_t a1, uint64_t a2)
{
  return sub_1BB0C3BC4(a1, a2, sub_1BB0BA7CC);
}

uint64_t sub_1BB0C4478@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB0C44A4(a1, sub_1BB0D882C, (uint64_t (*)(_QWORD))type metadata accessor for SportsSyncingConfigV2Resource, (uint64_t)&protocol witness table for SportsSyncingConfigV2Resource, a2);
}

uint64_t sub_1BB0C44A4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + *(int *)(a2(0) + 52));
  a5[3] = a3(0);
  a5[4] = a4;
  *a5 = v8;
  return swift_retain();
}

uint64_t sub_1BB0C450C(uint64_t a1, const char *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v5 = (id)qword_1ED476750;
  v6 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  swift_getErrorValue();
  v8 = sub_1BB87456C();
  v10 = v9;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  sub_1BB86EF44(a2, a3, 2, &dword_1BA493000, v5, v6, v7);

  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BB0C4640()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v13;

  v0 = type metadata accessor for SportsDataServiceBatchResourceRequest(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (uint64_t *)((char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_rosterResourceIDs);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BB87276C();

    v6 = sub_1BA85CEF0(v5);
    swift_bridgeObjectRelease();
    v7 = (_QWORD *)((char *)v2 + *(int *)(v0 + 20));
    *v7 = 0x40F5180000000000;
    v8 = *MEMORY[0x1E0DB32C8];
    v9 = sub_1BB86DDB0();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 104))(v7, v8, v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    *v2 = v6;
    sub_1BA4B07F0(0, &qword_1ED3A3A90, type metadata accessor for SportsDataServiceBatchResourceRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v2 = (_QWORD *)sub_1BB86E9E0();
  }
  else
  {
    sub_1BA98B368();
    swift_allocError();
    *v11 = 17;
    swift_willThrow();
  }
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1BB0C47F8(uint64_t a1, uint64_t a2)
{
  return sub_1BB0C3BC4(a1, a2, sub_1BB0BE864);
}

uint64_t sub_1BB0C4814@<X0>(id a1@<X2>, uint64_t a2@<X0>, uint64_t *a3@<X8>)
{
  id v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t result;
  _BYTE *v15;

  v6 = objc_msgSend(a1, sel_rosterResourceIDs);
  if (v6)
  {
    v7 = v6;
    v8 = sub_1BB87276C();

    swift_bridgeObjectRetain();
    v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v10 = sub_1BB0D4EA4(MEMORY[0x1E0DEE9E0], v8, v8);
    swift_bridgeObjectRelease_n();
    v11 = *(_QWORD *)(a2 + *(int *)(sub_1BB0D75A0() + 52));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BB0D51B0(v9, v11, v11, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v13 = objc_msgSend(a1, sel_identifier);
    sub_1BB8729A0();

    swift_bridgeObjectRetain();
    result = sub_1BB86E7DC();
    *a3 = v12;
  }
  else
  {
    sub_1BA98B368();
    swift_allocError();
    *v15 = 17;
    return swift_willThrow();
  }
  return result;
}

void sub_1BB0C49BC(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *oslog;
  uint64_t v18;

  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v4 = sub_1BB86EFEC();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED3A3BB8);
  swift_unknownObjectRetain();
  v5 = a1;
  swift_unknownObjectRetain();
  v6 = a1;
  oslog = sub_1BB86EFC8();
  v7 = sub_1BB8732F4();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v18 = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = objc_msgSend(a2, sel_UMCCanonicalID);
    if (v10)
    {
      v11 = v10;
      v12 = sub_1BB8729A0();
      v14 = v13;

    }
    else
    {
      v14 = 0xEE00444920434D55;
      v12 = 0x206E776F6E6B6E75;
    }
    sub_1BA5D2E14(v12, v14, &v18);
    sub_1BB873A8C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    swift_getErrorValue();
    v15 = sub_1BB87456C();
    sub_1BA5D2E14(v15, v16, &v18);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BA493000, oslog, v7, "Sports data service failed to fetch roster resource for event=%{public}s; error=%{public}s",
      (uint8_t *)v8,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v9, -1, -1);
    MEMORY[0x1BCCE5C38](v8, -1, -1);

  }
  else
  {
    swift_unknownObjectRelease_n();

  }
}

uint64_t sub_1BB0C4C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v7;
  _QWORD *v9;

  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  *(_QWORD *)(v7 + 32) = a5;
  *(_BYTE *)(v7 + 40) = a6;
  *(_BYTE *)(v7 + 41) = a7;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 48) = v9;
  *v9 = v7;
  v9[1] = sub_1BB0C4CC8;
  return sub_1BB0C4D40(a1, v7 + 16, (_BYTE *)(v7 + 41));
}

uint64_t sub_1BB0C4CC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BB0C4D34()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C4D40(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 2424) = v3;
  *(_QWORD *)(v4 + 2376) = a1;
  *(_QWORD *)(v4 + 2472) = type metadata accessor for SportsDataConfiguration();
  *(_QWORD *)(v4 + 2520) = swift_task_alloc();
  *(_QWORD *)(v4 + 2568) = swift_task_alloc();
  sub_1BB0D4370(0);
  *(_QWORD *)(v4 + 2616) = v7;
  *(_QWORD *)(v4 + 2664) = swift_task_alloc();
  *(_QWORD *)(v4 + 2712) = swift_task_alloc();
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v4 + 2760) = *(_QWORD *)a2;
  *(_QWORD *)(v4 + 2808) = v8;
  *(_QWORD *)(v4 + 2856) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(v4 + 2098) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(v4 + 2099) = *a3;
  return swift_task_switch();
}

uint64_t sub_1BB0C4E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 2856);
  v2 = *(_QWORD *)(v0 + 2808);
  v3 = *(_QWORD *)(v0 + 2760);
  v4 = *(_QWORD *)(v0 + 2424);
  v5 = (void *)qword_1ED476750;
  v6 = *(_BYTE *)(v0 + 2098);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_QWORD *)(v0 + 2904) = v7;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v0 + 2296) = 0;
  *(_QWORD *)(v0 + 2304) = 0xE000000000000000;
  *(_QWORD *)(v0 + 2168) = v3;
  *(_QWORD *)(v0 + 2176) = v2;
  *(_QWORD *)(v0 + 2184) = v1;
  *(_BYTE *)(v0 + 2192) = v6;
  v9 = v5;
  sub_1BB873E34();
  v10 = *(_QWORD *)(v0 + 2296);
  v11 = *(_QWORD *)(v0 + 2304);
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1BA6A2D8C();
  *(_QWORD *)(v0 + 2952) = v12;
  *(_QWORD *)(v8 + 64) = v12;
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = v11;
  v13 = sub_1BB87330C();
  sub_1BB86EF44("Sports data service fetching data visualizations for request %{public}@", 71, 2, &dword_1BA493000, v9, v13, v8);
  swift_bridgeObjectRelease();

  v14 = swift_allocObject();
  *(_QWORD *)(v0 + 3000) = v14;
  *(_QWORD *)(v14 + 16) = v4;
  *(_QWORD *)(v14 + 24) = v3;
  *(_QWORD *)(v14 + 32) = v2;
  *(_QWORD *)(v14 + 40) = v1;
  *(_BYTE *)(v14 + 48) = v6;
  swift_retain();
  sub_1BA98B604(v3, v2, v1, v6);
  swift_retain();
  swift_asyncLet_begin();
  v15 = swift_allocObject();
  *(_QWORD *)(v0 + 3048) = v15;
  *(_QWORD *)(v15 + 16) = v4;
  *(_QWORD *)(v15 + 24) = v3;
  *(_QWORD *)(v15 + 32) = v2;
  *(_QWORD *)(v15 + 40) = v1;
  *(_BYTE *)(v15 + 48) = v6;
  swift_retain();
  sub_1BA98B604(v3, v2, v1, v6);
  swift_retain();
  swift_asyncLet_begin();
  swift_retain_n();
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1BB0C50E0()
{
  uint64_t v0;
  uint64_t *v1;

  v1[387] = v0;
  if (v0)
    return swift_task_switch();
  sub_1BA4C2DD8(v1[339], v1[333], (uint64_t (*)(_QWORD))sub_1BB0D4370);
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1BB0C516C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 3104) = v0;
  return swift_task_switch();
}

uint64_t sub_1BB0C5194()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _BYTE v26[32];

  v25 = *(_QWORD *)(v0 + 2952);
  v1 = *(_BYTE *)(v0 + 2098);
  v2 = *(_QWORD *)(v0 + 2856);
  v3 = *(_QWORD *)(v0 + 2808);
  v4 = *(_QWORD *)(v0 + 2760);
  v5 = *(_QWORD *)(v0 + 2664);
  v6 = *(_QWORD *)(v0 + 2616);
  *(_QWORD *)(v0 + 3112) = *(_QWORD *)(v0 + 2280);
  *(_QWORD *)(v0 + 3120) = *(_QWORD *)(v0 + 2288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1BB0D6710((uint64_t)v26, v5);
  *(_QWORD *)(v0 + 3128) = v7;
  sub_1BB3B4660(v7, v0 + 1976);
  v8 = (void *)qword_1ED476750;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB887E50;
  v10 = *(_QWORD *)(v0 + 1976);
  v11 = MEMORY[0x1E0DEB418];
  v12 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v9 + 64) = v12;
  *(_QWORD *)(v9 + 32) = v10;
  v13 = *(_QWORD *)(v0 + 1984);
  *(_QWORD *)(v9 + 96) = v11;
  *(_QWORD *)(v9 + 104) = v12;
  *(_QWORD *)(v9 + 72) = v13;
  v14 = *(_QWORD *)(v0 + 1992);
  *(_QWORD *)(v9 + 136) = v11;
  *(_QWORD *)(v9 + 144) = v12;
  *(_QWORD *)(v9 + 112) = v14;
  v15 = *(_QWORD *)(v0 + 2000);
  *(_QWORD *)(v9 + 176) = v11;
  *(_QWORD *)(v9 + 184) = v12;
  *(_QWORD *)(v9 + 152) = v15;
  v16 = *(_QWORD *)(v0 + 2008);
  *(_QWORD *)(v9 + 216) = v11;
  *(_QWORD *)(v9 + 224) = v12;
  *(_QWORD *)(v9 + 192) = v16;
  v17 = *(_QWORD *)(v0 + 2024);
  *(_QWORD *)(v9 + 256) = v11;
  *(_QWORD *)(v9 + 264) = v12;
  *(_QWORD *)(v9 + 232) = v17;
  v18 = *(_QWORD *)(v0 + 2016);
  *(_QWORD *)(v9 + 296) = v11;
  *(_QWORD *)(v9 + 304) = v12;
  *(_QWORD *)(v9 + 272) = v18;
  v19 = *(_QWORD *)(*(_QWORD *)(v5 + *(int *)(v6 + 44)) + 16);
  *(_QWORD *)(v9 + 336) = v11;
  *(_QWORD *)(v9 + 344) = v12;
  *(_QWORD *)(v9 + 312) = v19;
  *(_QWORD *)(v0 + 2312) = 0;
  *(_QWORD *)(v0 + 2320) = 0xE000000000000000;
  *(_QWORD *)(v0 + 2104) = v4;
  *(_QWORD *)(v0 + 2112) = v3;
  *(_QWORD *)(v0 + 2120) = v2;
  *(_BYTE *)(v0 + 2128) = v1;
  v20 = v8;
  sub_1BB873E34();
  v21 = *(_QWORD *)(v0 + 2312);
  v22 = *(_QWORD *)(v0 + 2320);
  *(_QWORD *)(v9 + 376) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 384) = v25;
  *(_QWORD *)(v9 + 352) = v21;
  *(_QWORD *)(v9 + 360) = v22;
  v23 = sub_1BB87330C();
  sub_1BB86EF44("Sports data service fetched %ld score, %ld standing, %ld bracket, %ld box score, %ld line score, %ld key players and %ld injury report visualizations in %ld batches for request %{public}@", 187, 2, &dword_1BA493000, v20, v23, v9);
  swift_bridgeObjectRelease();

  return swift_asyncLet_get_throwing();
}

uint64_t sub_1BB0C5394()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 3136) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1BB0C53FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[391];
  v2 = v0[315];
  v3 = v0[309];
  sub_1BA4C2DD8(v0[321], v2, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataConfiguration);
  v4 = *(_QWORD *)(v2 + *(int *)(v3 + 20));
  swift_bridgeObjectRetain();
  v5 = sub_1BB0D5E98(v1, v4, MEMORY[0x1E0DEE9E8]);
  v0[393] = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRetain();
  v0[394] = sub_1BB0D5E98(v7, v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)swift_task_alloc();
  v0[395] = v8;
  *v8 = v0;
  v8[1] = sub_1BB0C5508;
  return sub_1BB0C6AE4(v5);
}

uint64_t sub_1BB0C5508(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 3168) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BB0C5570()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  char v17;

  v1 = *(_QWORD *)(v0 + 3168);
  v16 = *(_QWORD *)(v0 + 2952);
  v17 = *(_BYTE *)(v0 + 2099);
  v2 = *(_BYTE *)(v0 + 2098);
  v3 = *(_QWORD *)(v0 + 2856);
  v4 = *(_QWORD *)(v0 + 2808);
  v5 = *(_QWORD *)(v0 + 2760);
  v6 = (void *)qword_1ED476750;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87A390;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v0 + 2264) = 0;
  *(_QWORD *)(v0 + 2272) = 0xE000000000000000;
  *(_QWORD *)(v0 + 2072) = v5;
  *(_QWORD *)(v0 + 2080) = v4;
  *(_QWORD *)(v0 + 2088) = v3;
  *(_BYTE *)(v0 + 2096) = v2;
  v10 = v6;
  sub_1BB873E34();
  v11 = *(_QWORD *)(v0 + 2264);
  v12 = *(_QWORD *)(v0 + 2272);
  *(_QWORD *)(v7 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 104) = v16;
  *(_QWORD *)(v7 + 72) = v11;
  *(_QWORD *)(v7 + 80) = v12;
  v13 = sub_1BB87330C();
  sub_1BB86EF44("Sports data service updated event statuses for %ld data visualizations for request %{public}@", 93, 2, &dword_1BA493000, v10, v13, v7);
  swift_bridgeObjectRelease();

  *(_BYTE *)(v0 + 2097) = v17;
  *(_QWORD *)(v0 + 2136) = v5;
  *(_QWORD *)(v0 + 2144) = v4;
  *(_QWORD *)(v0 + 2152) = v3;
  *(_BYTE *)(v0 + 2160) = v2;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 3176) = v14;
  *v14 = v0;
  v14[1] = sub_1BB0C5738;
  return sub_1BB0C719C(*(_QWORD *)(v0 + 2376), (_BYTE *)(v0 + 2097), *(_QWORD *)(v0 + 3152), *(_QWORD *)(v0 + 3112), *(_QWORD *)(v0 + 3120), *(_QWORD *)(v0 + 2664), *(_QWORD *)(v0 + 2520), *(_QWORD *)(v0 + 3168));
}

uint64_t sub_1BB0C5738()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 3184) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BB0C57FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2664);
  sub_1BA4A2E80(*(_QWORD *)(v0 + 2520), (uint64_t (*)(_QWORD))type metadata accessor for SportsDataConfiguration);
  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))sub_1BB0D4370);
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C5868()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C587C()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C58D0()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C58E4()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C592C()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C5940()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C59D0()
{
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C59E8()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C59FC()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C5A50()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C5A64()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C5AAC()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C5AC0()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C5B58()
{
  uint64_t v0;

  sub_1BA4A2E80(*(_QWORD *)(v0 + 2664), (uint64_t (*)(_QWORD))sub_1BB0D4370);
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C5BA8()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C5BBC()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C5C10()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C5C24()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C5C6C()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C5C80()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C5D18()
{
  uint64_t v0;

  sub_1BA4A2E80(*(_QWORD *)(v0 + 2664), (uint64_t (*)(_QWORD))sub_1BB0D4370);
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C5D68()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C5D7C()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C5DD0()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C5DE4()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C5E2C()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C5E40()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C5ED8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unsigned int v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v13 = *(_QWORD *)(v0 + 3184);
  v1 = *(_QWORD *)(v0 + 2952);
  v2 = *(_BYTE *)(v0 + 2098);
  v3 = *(_QWORD *)(v0 + 2856);
  v4 = *(_QWORD *)(v0 + 2808);
  v5 = *(_QWORD *)(v0 + 2760);
  v16 = *(_QWORD *)(v0 + 2520);
  v17 = *(_QWORD *)(v0 + 2664);
  v15 = (id)qword_1ED476750;
  v14 = sub_1BB8732F4();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v0 + 2248) = 0;
  *(_QWORD *)(v0 + 2256) = 0xE000000000000000;
  *(_QWORD *)(v0 + 2200) = v5;
  *(_QWORD *)(v0 + 2208) = v4;
  *(_QWORD *)(v0 + 2216) = v3;
  *(_BYTE *)(v0 + 2224) = v2;
  sub_1BB873E34();
  v7 = *(_QWORD *)(v0 + 2248);
  v8 = *(_QWORD *)(v0 + 2256);
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = v1;
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v8;
  *(_QWORD *)(v0 + 2232) = 0;
  *(_QWORD *)(v0 + 2240) = 0xE000000000000000;
  *(_QWORD *)(v0 + 2328) = v13;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  v10 = *(_QWORD *)(v0 + 2232);
  v11 = *(_QWORD *)(v0 + 2240);
  *(_QWORD *)(v6 + 96) = v9;
  *(_QWORD *)(v6 + 104) = v1;
  *(_QWORD *)(v6 + 72) = v10;
  *(_QWORD *)(v6 + 80) = v11;
  sub_1BB86EF44("Sports data service failed to fetch data visualizations for request=%{public}@, error=%{public}@", 96, 2, &dword_1BA493000, v15, v14, v6);
  swift_bridgeObjectRelease();

  swift_willThrow();
  sub_1BA4A2E80(v16, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataConfiguration);
  sub_1BA4A2E80(v17, (uint64_t (*)(_QWORD))sub_1BB0D4370);
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C60B8()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C60CC()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C6120()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C6134()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C617C()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C6190()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C6228@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, char a5@<W5>, _QWORD *a6@<X8>)
{
  uint64_t v7;

  v7 = *a1;
  sub_1BA98B604(a2, a3, a4, a5);
  swift_bridgeObjectRetain();
  sub_1BB86E7DC();
  *a6 = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB0C62A8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BB0D7274(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BB0C62D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 80) = a6;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1BB0C62FC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  __int128 v8;

  v1 = *(_BYTE *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 48);
  v8 = *(_OWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v8;
  *(_QWORD *)(v4 + 40) = v2;
  *(_BYTE *)(v4 + 48) = v1;
  type metadata accessor for SportsDataServiceBatchRequest(0);
  sub_1BB86EC14();
  swift_task_dealloc();
  v5 = (void *)sub_1BB86E854();
  sub_1BB0D4370(0);
  type metadata accessor for SportsDataService();
  *(_QWORD *)(v0 + 56) = sub_1BB86E980();

  swift_release();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  *v6 = v0;
  v6[1] = sub_1BB0C6408;
  return sub_1BB86E908();
}

uint64_t sub_1BB0C6408()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BB0C647C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 80) = a6;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1BB0C64A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;
  uint64_t v6;
  char v7;

  v1 = *(_BYTE *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 48);
  v5 = *(_OWORD *)(v0 + 32);
  v6 = v2;
  v7 = v1;
  *(_QWORD *)(v0 + 56) = sub_1BB0C65C4((uint64_t)&v5);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_1BB0C651C;
  return sub_1BB86E908();
}

uint64_t sub_1BB0C651C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BB0C6590()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C65C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint8_t *buf;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)a1;
  v1 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a1 + 24);
  if (*(_BYTE *)(a1 + 24))
  {
    if (v4 == 1 && *(_BYTE *)(v2 + 33) == 1)
      goto LABEL_4;
  }
  else if ((v1 & 0x100) != 0)
  {
LABEL_4:
    type metadata accessor for SportsFeaturedEventsResource();
    sub_1BB86EC14();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v2;
    *(_QWORD *)(v5 + 24) = v1;
    *(_QWORD *)(v5 + 32) = v3;
    *(_BYTE *)(v5 + 40) = v4;
    sub_1BA98B604(v2, v1, v3, v4);
    v6 = (void *)sub_1BB86E854();
    sub_1BB0D7D34();
    sub_1BB86E980();
    swift_release();
    swift_release();

    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v2;
    *(_QWORD *)(v7 + 24) = v1;
    *(_QWORD *)(v7 + 32) = v3;
    *(_BYTE *)(v7 + 40) = v4;
    sub_1BA98B604(v2, v1, v3, v4);
    v8 = (void *)sub_1BB86E854();
    sub_1BB86E98C();
    swift_release();
    swift_release();

    v9 = (void *)sub_1BB86E854();
    v10 = sub_1BB86EA1C();
    swift_release();

    return v10;
  }
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v12 = sub_1BB86EFEC();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED3A3BB8);
  sub_1BA98B604(v2, v1, v3, v4);
  sub_1BA98B604(v2, v1, v3, v4);
  v13 = sub_1BB86EFC8();
  v14 = sub_1BB87330C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    *(_DWORD *)v15 = 136446210;
    v21 = v20;
    buf = v15;
    SportsDataVisualizationRequest.tagIds.getter();
    v16 = MEMORY[0x1BCCE36DC]();
    v18 = v17;
    swift_bridgeObjectRelease();
    sub_1BA5D2E14(v16, v18, &v21);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA98B574(v2, v1, v3, v4);
    sub_1BA98B574(v2, v1, v3, v4);
    _os_log_impl(&dword_1BA493000, v13, v14, "Skipping featured events fetch for request with tagIds=%{public}s", buf, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v20, -1, -1);
    MEMORY[0x1BCCE5C38](buf, -1, -1);
  }
  else
  {
    sub_1BA98B574(v2, v1, v3, v4);
    sub_1BA98B574(v2, v1, v3, v4);
  }

  sub_1BA4AD288(0, &qword_1ED3A0D78, (uint64_t)&type metadata for SportsFeaturedEventsResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB0C69B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1BB0C69CC()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[3] + 136), *(_QWORD *)(v0[3] + 160));
  v0[4] = sub_1BB0ED3A0();
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_1BB0C6A3C;
  return sub_1BB86E908();
}

uint64_t sub_1BB0C6A3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BB0C6AB0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C6AE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[8] = a1;
  v2[9] = v1;
  v3 = sub_1BB0D78E8(0);
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = *(_QWORD *)(type metadata accessor for SportsEventStatusResponse() - 8);
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BB0C6B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13[2];

  v1 = *(_QWORD *)(v0 + 64);
  v2 = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(type metadata accessor for SportsDataVisualizationResponseItem() - 8);
    v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BB0D152C(v5, (uint64_t)v13);
      sub_1BA6E9BD8(v13[0]);
      v5 += v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v2 = v12;
  }
  *(_QWORD *)(v0 + 40) = v2;
  v7 = MEMORY[0x1E0DEA968];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&unk_1ED3B95E0, (unint64_t *)&qword_1ED3B95C0, v7, MEMORY[0x1E0DEAF38]);
  v8 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 16))
  {
    v13[0] = v8;
    swift_bridgeObjectRetain();
    sub_1BA79BAB4(v13);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 48) = v13[0];
    sub_1BA5C69E0(&qword_1ED3CF870, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEAF50]);
    *(_QWORD *)(v0 + 120) = sub_1BB8730F0();
    swift_release();
    swift_retain();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v10;
    *v10 = v0;
    v10[1] = sub_1BB0C6DD8;
    return sub_1BB86ECC8();
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = sub_1BA8F3E3C(MEMORY[0x1E0DEE9D8]);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v9);
  }
}

uint64_t sub_1BB0C6DD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 136) = a1;
  *(_QWORD *)(v3 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_1BB0C6E74()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 80);
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B0E8(0, v2, 0);
    v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    v7 = v16;
    do
    {
      v8 = *(_QWORD *)(v0 + 112);
      v9 = *(_QWORD *)(v0 + 96);
      sub_1BA4C2DD8(v5, v9, sub_1BB0D78E8);
      sub_1BA4C2DD8(v9 + *(int *)(v15 + 52), v8, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponse);
      sub_1BA4A2E80(v9, sub_1BB0D78E8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B0E8(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v16;
      }
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BAC7B0E8(v10 > 1, v11 + 1, 1);
        v7 = v16;
      }
      v12 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_1BA5193C4(v12, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v11, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponse);
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  v13 = sub_1BB0D6ECC(v7);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
}

uint64_t sub_1BB0C7030()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v1 = *(void **)(v0 + 144);
  v2 = (void *)qword_1ED476750;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  swift_getErrorValue();
  v4 = v2;
  v5 = sub_1BB87456C();
  v7 = v6;
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v7;
  v8 = sub_1BB87330C();
  sub_1BB86EF44("Error while fetching latest event status; falling back to visualization response status data. Error=%{public}@",
    110,
    2,
    &dword_1BA493000,
    v4,
    v8,
    v3);
  swift_bridgeObjectRelease();

  v9 = sub_1BA8F3E3C(MEMORY[0x1E0DEE9D8]);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v9);
}

uint64_t sub_1BB0C719C(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v13;

  *(_QWORD *)(v9 + 1760) = v8;
  *(_QWORD *)(v9 + 1752) = a8;
  *(_QWORD *)(v9 + 1744) = a7;
  *(_QWORD *)(v9 + 1736) = a6;
  *(_QWORD *)(v9 + 1728) = a5;
  *(_QWORD *)(v9 + 1720) = a4;
  *(_QWORD *)(v9 + 1712) = a3;
  *(_QWORD *)(v9 + 1704) = a1;
  *(_QWORD *)(v9 + 1768) = *(_QWORD *)(type metadata accessor for SportsDataVisualizationResponseScoreItem() - 8);
  *(_QWORD *)(v9 + 1776) = swift_task_alloc();
  v11 = type metadata accessor for SportsDataVisualizationResponseItem();
  *(_QWORD *)(v9 + 1784) = v11;
  *(_QWORD *)(v9 + 1792) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 1800) = swift_task_alloc();
  *(_QWORD *)(v9 + 1808) = swift_task_alloc();
  *(_QWORD *)(v9 + 1816) = swift_task_alloc();
  *(_QWORD *)(v9 + 1824) = swift_task_alloc();
  *(_BYTE *)(v9 + 1936) = *a2;
  *(_OWORD *)(v9 + 1832) = *(_OWORD *)v13;
  *(_QWORD *)(v9 + 1848) = *(_QWORD *)(v13 + 16);
  *(_BYTE *)(v9 + 1937) = *(_BYTE *)(v13 + 24);
  return swift_task_switch();
}

uint64_t sub_1BB0C7298()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = v0[215];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v45 = MEMORY[0x1E0DEE9D8];
    v4 = v0[224];
    v5 = v0[221];
    swift_bridgeObjectRetain();
    sub_1BAC7B0BC(0, v2, 0);
    v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    v8 = v45;
    do
    {
      v9 = v0[228];
      v10 = v0[222];
      sub_1BA4C2DD8(v6, v10, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      sub_1BA4C2DD8(v10, v9, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      swift_storeEnumTagMultiPayload();
      sub_1BA4A2E80(v10, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B0BC(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v45;
      }
      v12 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1BAC7B0BC(v11 > 1, v12 + 1, 1);
        v8 = v45;
      }
      v13 = v0[228];
      *(_QWORD *)(v8 + 16) = v12 + 1;
      sub_1BA5193C4(v13, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
      v6 += v7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
  }
  v46 = v0[214];
  swift_bridgeObjectRetain();
  sub_1BB386C80(v8);
  v0[207] = v46;
  sub_1BB0D6AD0(0);
  sub_1BA4A2870(&qword_1ED3AB068, (uint64_t (*)(uint64_t))sub_1BB0D6AD0, MEMORY[0x1E0DEAF38]);
  v14 = sub_1BB872BC8();
  v0[232] = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = v0[224];
    v17 = v14 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v18 = *(_QWORD *)(v16 + 72);
    swift_bridgeObjectRetain();
    v19 = v15;
    do
    {
      v20 = v0[227];
      sub_1BA4C2DD8(v17, v20, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
      sub_1BAF85538();
      v22 = v21;
      sub_1BA4A2E80(v20, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
      sub_1BA6E9BD8(v22);
      v17 += v18;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  v42 = sub_1BA6E43EC(v3);
  swift_bridgeObjectRelease();
  if (v15)
  {
    v23 = v0[225];
    v24 = v0[224];
    v25 = v14 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    v26 = *(_QWORD *)(v24 + 72);
    v41 = v14;
    swift_bridgeObjectRetain();
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v43 = v26;
    do
    {
      v28 = v0[226];
      v29 = v0[225];
      sub_1BA4C2DD8(v25, v28, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
      sub_1BA4C2DD8(v28, v29, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v31 = v0[226];
      if (EnumCaseMultiPayload <= 2)
      {
        sub_1BA4A2E80(v0[225], (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
        sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
      }
      else
      {
        v32 = *(_QWORD *)(v23 + 16);
        v44 = *(_QWORD *)(v23 + 24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27 = sub_1BA6EA0D0(0, v27[2] + 1, 1, v27);
        v34 = v27[2];
        v33 = v27[3];
        if (v34 >= v33 >> 1)
          v27 = sub_1BA6EA0D0((_QWORD *)(v33 > 1), v34 + 1, 1, v27);
        v27[2] = v34 + 1;
        v35 = &v27[2 * v34];
        v35[4] = v32;
        v35[5] = v44;
        v26 = v43;
      }
      v25 += v26;
      --v15;
    }
    while (v15);
    v36 = v41;
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v36 = v14;
  }
  v37 = v0[220];
  v0[233] = sub_1BA6E43EC((uint64_t)v27);
  swift_bridgeObjectRelease();
  v38 = swift_allocObject();
  v0[234] = v38;
  *(_QWORD *)(v38 + 16) = v37;
  *(_QWORD *)(v38 + 24) = v36;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1BB0D6BF0(255, (unint64_t *)&unk_1ED3AACA0, (unint64_t *)&qword_1ED3AB1E0);
  swift_asyncLet_begin();
  v39 = swift_allocObject();
  v0[235] = v39;
  *(_QWORD *)(v39 + 16) = v37;
  *(_QWORD *)(v39 + 24) = v42;
  swift_retain();
  swift_retain();
  sub_1BB0D6BF0(255, (unint64_t *)&qword_1ED3AACB0, (unint64_t *)&qword_1ED3CF9B0);
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1BB0C77EC()
{
  uint64_t v0;
  _QWORD *v1;

  v1[236] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_asyncLet_finish();
  }
  else
  {
    v1[237] = v1[195];
    swift_bridgeObjectRetain();
    return swift_asyncLet_get();
  }
}

uint64_t sub_1BB0C788C()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C78A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v1 = v0[233];
  v2 = v0[201];
  v0[238] = v2;
  swift_bridgeObjectRetain();
  v3 = sub_1BB0D58BC(v1, v2);
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BB0D4678(v3);
  swift_release();
  v4 = (void *)sub_1BB86E854();
  sub_1BB0D6C54();
  sub_1BB86ECBC();

  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BB86E854();
  sub_1BB0D6CC8();
  v0[239] = sub_1BB86E974();

  swift_release();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)swift_task_alloc();
  v0[240] = v6;
  *v6 = v0;
  v6[1] = sub_1BB0C79E8;
  return sub_1BB86E908();
}

uint64_t sub_1BB0C79E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1928) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1BB0C7A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;

  v1 = *(_QWORD *)(v0 + 1904);
  v2 = *(_QWORD *)(v0 + 1896);
  v23 = *(_QWORD *)(v0 + 1856);
  v22 = *(_BYTE *)(v0 + 1937);
  v21 = *(_QWORD *)(v0 + 1848);
  v20 = *(_OWORD *)(v0 + 1832);
  v3 = *(_QWORD *)(v0 + 1760);
  v25 = v2;
  v4 = *(_QWORD *)(v0 + 1752);
  v24 = v4;
  v5 = *(_QWORD *)(v0 + 1744);
  v6 = *(_QWORD *)(v0 + 1736);
  v7 = *(_QWORD *)(v0 + 1728);
  v19 = *(_QWORD *)(v0 + 1720);
  v8 = *(_QWORD *)(v0 + 1464);
  *(_QWORD *)(v0 + 1512) = MEMORY[0x1E0DEE9D8];
  v9 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v3;
  *(_QWORD *)(v9 + 24) = v6;
  *(_QWORD *)(v9 + 32) = v5;
  *(_QWORD *)(v9 + 40) = v4;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + 48) = v2;
  *(_QWORD *)(v9 + 56) = v19;
  *(_QWORD *)(v9 + 64) = v7;
  *(_QWORD *)(v9 + 72) = v1;
  *(_OWORD *)(v9 + 80) = v20;
  *(_QWORD *)(v9 + 96) = v21;
  *(_BYTE *)(v9 + 104) = v22;
  *(_QWORD *)(v9 + 112) = v8;
  *(_QWORD *)(v9 + 120) = v0 + 1512;
  v26 = sub_1BB1422D0((void (*)(_QWORD *__return_ptr, _QWORD))sub_1BB0D6D2C, v9, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v11 = *(_QWORD *)(v0 + 1512);
  sub_1BA6F7928();
  swift_bridgeObjectRetain();
  v12 = sub_1BB86E530();
  sub_1BB0CEB70(v11, v6, v12, v24, v25, v7, v1, (uint64_t *)&v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = (uint64_t)v27;
  sub_1BB0D6D78();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = v13;
  sub_1BA6E6C68(v13);
  if ((~v13 & 0xF000000000000007) != 0)
  {
    sub_1BA6E6C68(v13);
    v10 = sub_1BB38C57C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v16 = v10[2];
    v15 = v10[3];
    if (v16 >= v15 >> 1)
      v10 = sub_1BB38C57C((_QWORD *)(v15 > 1), v16 + 1, 1, v10);
    v10[2] = v16 + 1;
    v10[v16 + 4] = v13;
  }
  v17 = *(_QWORD **)(v0 + 1704);
  swift_bridgeObjectRelease();
  v27 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB3839E4((uint64_t)v10);
  sub_1BA6E6CD8(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v17 = v27;
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C7D38()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C7D4C()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C7DA0()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C7DB4()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C7E44()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C7E58()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C7EAC()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C7EC0()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C7F58()
{
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C7F70()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C7F84()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BB0C7FD8()
{
  return swift_task_switch();
}

uint64_t sub_1BB0C7FEC()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C8084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;

  v4 = type metadata accessor for SportsDataServiceBatchRequest(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  swift_retain();
  v7 = swift_bridgeObjectRetain();
  sub_1BB0D4840(v7, a2);
  swift_bridgeObjectRelease();
  swift_release();
  v8 = (void *)sub_1BB86E854();
  sub_1BB0D7BA0(0);
  sub_1BB86ECBC();
  swift_bridgeObjectRelease();

  sub_1BA4C2DD8(a1, (uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceBatchRequest);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, type metadata accessor for SportsDataServiceBatchRequest);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1BB0D8224;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = (void *)sub_1BB86E854();
  sub_1BB0D4370(0);
  v13 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1BB0C822C()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  type metadata accessor for SportsDataServiceRequest(0);
  sub_1BB86EC14();
  v0 = (void *)sub_1BB86E854();
  sub_1BB0D84EC(0);
  sub_1BB86E980();
  swift_release();

  v1 = (void *)sub_1BB86E854();
  type metadata accessor for SportsFeaturedEventsResource();
  sub_1BB86E974();
  swift_release();

  v2 = (void *)sub_1BB86E854();
  v3 = sub_1BB86E9A4();
  swift_release();

  return v3;
}

uint64_t sub_1BB0C8330(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, char a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char **v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v62 = a3;
  v63 = a5;
  v54 = a2;
  v8 = type metadata accessor for SportsFeaturedEventsResource();
  MEMORY[0x1E0C80A78](v8);
  v53 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v52 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v52 - v14;
  if (qword_1ED3A3BD0 != -1)
    goto LABEL_39;
  while (2)
  {
    v16 = sub_1BB86EFEC();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED3A3BB8);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource);
    v55 = a1;
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource);
    v17 = sub_1BB86EFC8();
    v18 = sub_1BB87330C();
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = swift_slowAlloc();
      v61 = swift_slowAlloc();
      v64 = v61;
      *(_DWORD *)v20 = 136446466;
      v59 = v20 + 4;
      sub_1BB0D7EA0();
      sub_1BB86E530();
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v21 = sub_1BB8727D8();
      LODWORD(v60) = v19;
      v23 = v22;
      swift_bridgeObjectRelease();
      v65 = sub_1BA5D2E14(v21, v23, &v64);
      a1 = &v66;
      sub_1BB873A8C();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource);
      *(_WORD *)(v20 + 12) = 2082;
      v59 = v20 + 14;
      sub_1BB0D7F90();
      sub_1BB86E530();
      sub_1BA4AD288(0, &qword_1ED3A1018, (uint64_t)&type metadata for SportsFeaturedAffinityEvent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v15 = (char *)sub_1BB8727D8();
      v25 = v24;
      swift_bridgeObjectRelease();
      v65 = sub_1BA5D2E14((uint64_t)v15, v25, &v64);
      sub_1BB873A8C();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource);
      _os_log_impl(&dword_1BA493000, v17, (os_log_type_t)v60, "Fetch featured events, featured tagIds=%{public}s, affinity tagIds=%{public}s", (uint8_t *)v20, 0x16u);
      v26 = v61;
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v26, -1, -1);
      MEMORY[0x1BCCE5C38](v20, -1, -1);
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource);
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource);
    }

    sub_1BB0D7EA0();
    v27 = sub_1BB86E530();
    v65 = sub_1BA574368(v27);
    sub_1BB0D7F90();
    v28 = sub_1BB86E530();
    v29 = 0;
    v30 = *(_QWORD *)(v28 + 64);
    v56 = v28;
    v57 = v28 + 64;
    v31 = 1 << *(_BYTE *)(v28 + 32);
    v32 = -1;
    if (v31 < 64)
      v32 = ~(-1 << v31);
    v33 = v32 & v30;
    v58 = (unint64_t)(v31 + 63) >> 6;
LABEL_9:
    while (v33)
    {
      v34 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      v35 = v34 | (v29 << 6);
LABEL_22:
      v39 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v35);
      v40 = *(_QWORD *)(v39 + 16);
      if (v40)
      {
        v60 = v33;
        v61 = v29;
        v41 = (uint64_t *)(*(_QWORD *)(v28 + 48) + 16 * v35);
        v42 = *v41;
        a1 = (uint64_t *)v41[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v59 = v39;
        v43 = (char **)(v39 + 40);
        while (1)
        {
          v44 = (uint64_t)*(v43 - 1);
          v12 = *v43;
          if (!a6)
            break;
          v15 = (char *)MEMORY[0x1E0DEE9E8];
          if (a6 == 1)
          {
            v15 = *(char **)(v62 + 40);
LABEL_29:
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v45 = sub_1BA6EBD20((uint64_t)v15, v44);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v45 & 1) == 0)
          {
            swift_bridgeObjectRetain();
            sub_1BA6EE5AC(&v64, v42, (uint64_t)a1);
            swift_bridgeObjectRelease();
          }
          v43 += 2;
          if (!--v40)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v28 = v56;
            v33 = v60;
            v29 = v61;
            goto LABEL_9;
          }
        }
        v15 = v63;
        goto LABEL_29;
      }
    }
    if (__OFADD__(v29++, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v29 >= v58)
      break;
    v37 = *(_QWORD *)(v57 + 8 * v29);
    if (v37)
    {
LABEL_21:
      v33 = (v37 - 1) & v37;
      v35 = __clz(__rbit64(v37)) + (v29 << 6);
      goto LABEL_22;
    }
    v38 = v29 + 1;
    if (v29 + 1 >= v58)
      break;
    v37 = *(_QWORD *)(v57 + 8 * v38);
    if (v37)
      goto LABEL_20;
    v38 = v29 + 2;
    if (v29 + 2 >= v58)
      break;
    v37 = *(_QWORD *)(v57 + 8 * v38);
    if (v37)
    {
LABEL_20:
      v29 = v38;
      goto LABEL_21;
    }
    v38 = v29 + 3;
    if (v29 + 3 < v58)
    {
      v37 = *(_QWORD *)(v57 + 8 * v38);
      if (!v37)
      {
        while (1)
        {
          v29 = v38 + 1;
          if (__OFADD__(v38, 1))
            break;
          if (v29 >= v58)
            goto LABEL_36;
          v37 = *(_QWORD *)(v57 + 8 * v29);
          ++v38;
          if (v37)
            goto LABEL_21;
        }
LABEL_38:
        __break(1u);
LABEL_39:
        swift_once();
        continue;
      }
      goto LABEL_20;
    }
    break;
  }
LABEL_36:
  swift_release();
  v46 = (uint64_t)v53;
  v47 = (uint64_t)v55;
  swift_retain();
  v48 = swift_bridgeObjectRetain();
  sub_1BB0D4C00(v48);
  swift_bridgeObjectRelease_n();
  swift_release();
  v49 = (void *)sub_1BB86E854();
  sub_1BB0D4370(0);
  sub_1BB86ECBC();
  swift_bridgeObjectRelease();

  sub_1BA4C2DD8(v47, v46, (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource);
  sub_1BA4B07F0(0, &qword_1ED3A3A70, (uint64_t (*)(uint64_t))type metadata accessor for SportsFeaturedEventsResource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1BB86E9E0();
  v50 = sub_1BB86EBF0();
  swift_release();
  swift_release();
  return v50;
}

uint64_t sub_1BB0C89D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)();
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  int64_t v45;
  uint64_t v46;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  BOOL v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t result;
  _QWORD v95[2];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  char *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v103 = a5;
  v102 = a4;
  v101 = a3;
  v100 = a2;
  v105 = a6;
  v8 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  v97 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v112 = (_QWORD *)((char *)v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v124 = type metadata accessor for SportsDataVisualizationResponseData();
  v114 = *(_QWORD *)(v124 - 8);
  MEMORY[0x1E0C80A78](v124);
  v123 = (char *)v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SportsDataVisualizationResponse();
  MEMORY[0x1E0C80A78](v11);
  v115 = (uint64_t)v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1BB0D7BA0(0);
  v120 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v119 = (uint64_t)v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0D7D34();
  v15 = v14;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SportsFeaturedEventsResource();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(int *)(v15 + 48);
  v22 = (uint64_t)&v17[v21];
  v23 = *a1;
  sub_1BA4C2DD8((uint64_t)a1 + v21, v22, (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource);
  sub_1BA5193C4(v22, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource);
  sub_1BB0D7EA0();
  swift_bridgeObjectRetain();
  v24 = sub_1BB86E530();
  v25 = sub_1BB0B9830(v24);
  v98 = v6;
  swift_bridgeObjectRelease();
  v99 = sub_1BA6E43EC(v25);
  swift_bridgeObjectRelease();
  v104 = v20;
  v26 = sub_1BB853A84();
  v27 = v26;
  v127 = MEMORY[0x1E0DEE9D8];
  v108 = *(_QWORD *)(v23 + 16);
  if (!v108)
  {
    swift_bridgeObjectRelease();
    v67 = MEMORY[0x1E0DEE9D8];
LABEL_36:
    swift_bridgeObjectRetain();
    v68 = v100;
    v69 = v101;
    v70 = v102;
    v71 = v103;
    sub_1BA98B604(v100, v101, v102, v103);
    v72 = v99;
    swift_bridgeObjectRetain();
    v73 = v98;
    v74 = sub_1BB0D5AD8(v67, v27, v68, v69, v70, v71, v72);
    v125 = v73;
    swift_bridgeObjectRelease();
    sub_1BA98B574(v68, v69, v70, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v75 = *(_QWORD *)(v74 + 16);
    v76 = MEMORY[0x1E0DEE9D8];
    v124 = v74;
    if (v75)
    {
      v127 = MEMORY[0x1E0DEE9D8];
      sub_1BA7447E8(0, v75, 0);
      v77 = v74 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
      v78 = *(_QWORD *)(v97 + 72);
      v76 = v127;
      do
      {
        v79 = v112;
        sub_1BA4C2DD8(v77, (uint64_t)v112, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        v80 = *v79;
        v81 = v79[1];
        swift_bridgeObjectRetain();
        sub_1BA4A2E80((uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA7447E8(0, *(_QWORD *)(v76 + 16) + 1, 1);
          v76 = v127;
        }
        v83 = *(_QWORD *)(v76 + 16);
        v82 = *(_QWORD *)(v76 + 24);
        if (v83 >= v82 >> 1)
        {
          sub_1BA7447E8(v82 > 1, v83 + 1, 1);
          v76 = v127;
        }
        *(_QWORD *)(v76 + 16) = v83 + 1;
        v84 = v76 + 16 * v83;
        *(_QWORD *)(v84 + 32) = v80;
        *(_QWORD *)(v84 + 40) = v81;
        v77 += v78;
        --v75;
      }
      while (v75);
    }
    v34 = sub_1BA6E43EC(v76);
    swift_bridgeObjectRelease();
    if (qword_1ED3A3BD0 != -1)
      goto LABEL_53;
    goto LABEL_44;
  }
  v96 = v26;
  sub_1BB0D4370(0);
  v29 = *(_QWORD *)(v28 - 8);
  v110 = v23 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  v111 = v28;
  v109 = *(_QWORD *)(v29 + 72);
  v95[1] = v23;
  swift_bridgeObjectRetain();
  v30 = 0;
  v31 = type metadata accessor for SportsDataVisualizationResponseData;
LABEL_3:
  v32 = *(_QWORD *)(v110 + v109 * v30 + *(int *)(v111 + 44));
  v118 = *(_QWORD *)(v32 + 16);
  if (!v118)
  {
    v34 = MEMORY[0x1E0DEE9D8];
    goto LABEL_33;
  }
  v106 = v30;
  v117 = v119 + *(int *)(v107 + 52);
  v116 = v32 + ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80));
  swift_bridgeObjectRetain();
  v33 = 0;
  v34 = MEMORY[0x1E0DEE9D8];
  v113 = v32;
  while (1)
  {
    if (v33 >= *(_QWORD *)(v32 + 16))
      goto LABEL_52;
    v35 = v119;
    sub_1BA4C2DD8(v116 + *(_QWORD *)(v120 + 72) * v33, v119, sub_1BB0D7BA0);
    v36 = v115;
    sub_1BA4C2DD8(v117, v115, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponse);
    sub_1BA4A2E80(v35, sub_1BB0D7BA0);
    sub_1BAC8B1E0();
    v37 = sub_1BB86E1E8();
    sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponse);
    v38 = *(_QWORD *)(v37 + 16);
    if (v38)
      break;
    swift_bridgeObjectRelease();
LABEL_6:
    if (++v33 == v118)
    {
      swift_bridgeObjectRelease();
      v30 = v106;
LABEL_33:
      v65 = v34;
      v66 = v30 + 1;
      sub_1BB386C80(v65);
      v30 = v66;
      if (v66 == v108)
      {
        swift_bridgeObjectRelease_n();
        v67 = v127;
        v27 = v96;
        goto LABEL_36;
      }
      goto LABEL_3;
    }
  }
  v121 = v37;
  v122 = v33;
  v39 = v37 + ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80));
  v125 = *(_QWORD *)(v114 + 72);
  v40 = (uint64_t)v123;
  while (1)
  {
    v41 = v31;
    sub_1BA4C2DD8(v39, v40, (uint64_t (*)(_QWORD))v31);
    sub_1BB0D7C54();
    v42 = sub_1BB86E1E8();
    v43 = *(_QWORD *)(v42 + 16);
    v44 = *(_QWORD *)(v34 + 16);
    v45 = v44 + v43;
    if (__OFADD__(v44, v43))
      break;
    v46 = v42;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v45 <= *(_QWORD *)(v34 + 24) >> 1)
    {
      v48 = *(_QWORD *)(v46 + 16);
      if (!v48)
        goto LABEL_10;
    }
    else
    {
      if (v44 <= v45)
        v49 = v44 + v43;
      else
        v49 = v44;
      v34 = sub_1BB392B10(isUniquelyReferenced_nonNull_native, v49, 1, v34);
      v48 = *(_QWORD *)(v46 + 16);
      if (!v48)
      {
LABEL_10:
        if (v43)
          goto LABEL_49;
        goto LABEL_11;
      }
    }
    v50 = *(_QWORD *)(v34 + 16);
    v51 = (*(_QWORD *)(v34 + 24) >> 1) - v50;
    v52 = type metadata accessor for SportsDataVisualizationResponseItem();
    if (v51 < (uint64_t)v48)
      goto LABEL_50;
    v53 = *(_QWORD *)(v52 - 8);
    v54 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    v55 = *(_QWORD *)(v53 + 72);
    v56 = v34 + v54 + v55 * v50;
    v57 = v46 + v54;
    v58 = v55 * v48;
    v59 = v56 + v58;
    v60 = v57 + v58;
    v61 = v57 >= v59 || v56 >= v60;
    v40 = (uint64_t)v123;
    if (!v61)
    {
      result = sub_1BB873F84();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
    if (v48 < v43)
      goto LABEL_49;
    v62 = *(_QWORD *)(v34 + 16);
    v63 = __OFADD__(v62, v48);
    v64 = v62 + v48;
    if (v63)
      goto LABEL_51;
    *(_QWORD *)(v34 + 16) = v64;
LABEL_11:
    swift_bridgeObjectRelease();
    v31 = v41;
    sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))v41);
    v39 += v125;
    if (!--v38)
    {
      swift_bridgeObjectRelease();
      v32 = v113;
      v33 = v122;
      goto LABEL_6;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  swift_once();
LABEL_44:
  v85 = sub_1BB86EFEC();
  __swift_project_value_buffer(v85, (uint64_t)qword_1ED3A3BB8);
  swift_bridgeObjectRetain_n();
  v86 = sub_1BB86EFC8();
  v87 = sub_1BB87330C();
  if (os_log_type_enabled(v86, v87))
  {
    v88 = (uint8_t *)swift_slowAlloc();
    v89 = swift_slowAlloc();
    v127 = v89;
    *(_DWORD *)v88 = 136446210;
    swift_bridgeObjectRetain();
    v90 = sub_1BB87303C();
    v92 = v91;
    swift_bridgeObjectRelease();
    v126 = sub_1BA5D2E14(v90, v92, &v127);
    sub_1BB873A8C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v86, v87, "Successfully fetched featured events=%{public}s", v88, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v89, -1, -1);
    MEMORY[0x1BCCE5C38](v88, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  result = sub_1BA4A2E80((uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource);
  v93 = v105;
  *v105 = v124;
  v93[1] = v34;
  return result;
}

void sub_1BB0C9340(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  _QWORD v11[6];

  v11[2] = a3;
  v11[3] = a4;
  v11[1] = a2;
  v11[5] = a5;
  v6 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1E0C80A78](v7);
  sub_1BA4C2DD8(a1, (uint64_t)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v10 = (char *)sub_1BB0C9428 + 4 * byte_1BB8EA060[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB0C9428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 - 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56))(v3, 1, 1, v0);
}

void sub_1BB0C9490()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_1BA5193C4(v2, v3, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  sub_1BAF853BC();
  if (!*(_QWORD *)(v1 + 16) || (v7 = sub_1BA6E35A8(v5, v6), (v8 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v4 - 72);
LABEL_7:
    sub_1BAF853BC();
    v14 = sub_1BA761FE4(v12, v13, *(_QWORD *)(v4 - 88));
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      sub_1BA4A2E80(v3, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      JUMPOUT(0x1BB0C9454);
    }
LABEL_13:
    sub_1BA5193C4(v3, v10, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    JUMPOUT(0x1BB0C9458);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v0)
  {
    v10 = *(_QWORD *)(v4 - 72);
    if (v0 != 1)
    {
      v11 = MEMORY[0x1E0DEE9E8];
LABEL_12:
      v15 = sub_1BA6EBD20(v11, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        goto LABEL_13;
      goto LABEL_7;
    }
    v11 = *(_QWORD *)(*(_QWORD *)(v4 - 104) + 40);
  }
  else
  {
    v10 = *(_QWORD *)(v4 - 72);
    v11 = *(_QWORD *)(v4 - 96);
  }
  swift_bridgeObjectRetain();
  goto LABEL_12;
}

void sub_1BB0C95D4(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v4 = sub_1BB86EFEC();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED3A3BB8);
  v5 = a1;
  v6 = a1;
  v7 = sub_1BB86EFC8();
  v8 = sub_1BB8732F4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_getErrorValue();
    v11 = sub_1BB87456C();
    sub_1BA5D2E14(v11, v12, &v14);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BA493000, v7, v8, "Failed to fetch featured events; error=%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v10, -1, -1);
    MEMORY[0x1BCCE5C38](v9, -1, -1);
  }
  else
  {

  }
  v13 = MEMORY[0x1E0DEE9E8];
  *a2 = MEMORY[0x1E0DEE9D8];
  a2[1] = v13;
}

void sub_1BB0C97BC(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_1BAF85074();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB0C97F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BB0C9810()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[5] = sub_1BB0C9870(v0[4]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1BA8B2D9C;
  return sub_1BB86E908();
}

uint64_t sub_1BB0C9870(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  _QWORD v17[5];
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v2);
  v17[3] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - v6;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v17 - v11;
  v22 = MEMORY[0x1E0DEE9E8];
  if (*(_QWORD *)(a1 + 16))
  {
    v18 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v17[4] = *(_QWORD *)(v10 + 72);
    v17[1] = a1;
    swift_bridgeObjectRetain();
    sub_1BA4C2DD8(v18, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
    sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
    v13 = (char *)&loc_1BB0C9A28 + 4 * byte_1BB8EA067[swift_getEnumCaseMultiPayload()];
    v20 = 1;
    __asm { BR              X9 }
  }
  MEMORY[0x1E0C80A78](v9);
  v17[-2] = v17[2];
  v17[-1] = &v22;
  sub_1BA4E0A38();
  sub_1BB86EC14();
  v14 = (void *)sub_1BB86E854();
  sub_1BB0D6BF0(0, (unint64_t *)&unk_1ED3AACA0, (unint64_t *)&qword_1ED3AB1E0);
  v15 = sub_1BB86E974();
  swift_release();

  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1BB0C9D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1BB0C9DB0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v1 = (_QWORD *)v0[4];
  v2 = v1[26];
  v3 = v1[27];
  __swift_project_boxed_opaque_existential_1(v1 + 23, v2);
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BA67F4CC(v4);
  swift_bridgeObjectRelease();
  v0[6] = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v3 + 16))(v5, v2, v3);
  swift_release();
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_1BB0C9E6C;
  return sub_1BB86E908();
}

uint64_t sub_1BB0C9E6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BB0C9ED8()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0C9EEC()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;

  v1 = *(void **)(v0 + 64);
  swift_release();
  v2 = sub_1BA8F3E58(MEMORY[0x1E0DEE9D8]);

  **(_QWORD **)(v0 + 24) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BB0C9F44(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  char *v19;
  _QWORD v20[22];

  v20[1] = a7;
  v20[2] = a5;
  v20[6] = a3;
  v20[7] = a6;
  v20[8] = a2;
  v20[21] = a8;
  v20[3] = a14;
  v20[4] = a9;
  v20[5] = a4;
  v15 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v15);
  v16 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1E0C80A78](v16);
  sub_1BA4C2DD8(a1, (uint64_t)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
  v19 = (char *)sub_1BB0CA03C + 4 * byte_1BB8EA075[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB0CA03C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BA5193C4(v2, (uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  sub_1BA6F7928();
  sub_1BB86E530();
  *(_QWORD *)(v6 - 152) = v3;
  *(_QWORD *)(v6 - 144) = v0;
  *(_QWORD *)(v6 - 136) = v5;
  *(_BYTE *)(v6 - 128) = v4;
  sub_1BB0CA3BC(v1, *(_QWORD *)(v6 - 192), *(_QWORD *)(v6 - 224), *(_QWORD *)(v6 - 184), *(_QWORD *)(v6 - 232), *(_QWORD *)(v6 - 208), v6 - 152, *(uint64_t **)(v6 - 72));
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
}

void sub_1BB0CA3BC(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char v105;
  _QWORD *v106;
  char v107[8];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  _OWORD v129[4];
  uint64_t v130;

  v118 = a5;
  v119 = a6;
  v111 = a4;
  v120 = a3;
  v122 = a2;
  v125 = a8;
  v10 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  MEMORY[0x1E0C80A78](v10);
  v109 = (uint64_t)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, qword_1ED3A8EE0, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v124 = (uint64_t)&v109 - v14;
  sub_1BA4B07F0(0, &qword_1ED3AA978, type metadata accessor for SportsDataVisualizationResponseEventStatus, v12);
  MEMORY[0x1E0C80A78](v15);
  v116 = (char *)&v109 - v16;
  v114 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  v113 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v117 = (uint64_t)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v110 = (uint64_t)&v109 - v19;
  v20 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (uint64_t *)((char *)&v109 - v24);
  MEMORY[0x1E0C80A78](v26);
  v121 = (char *)&v109 - v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (uint64_t *)((char *)&v109 - v29);
  MEMORY[0x1E0C80A78](v31);
  v112 = (uint64_t)&v109 - v32;
  MEMORY[0x1E0C80A78](v33);
  v35 = (uint64_t *)((char *)&v109 - v34);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v12);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v109 - v37;
  v39 = sub_1BB86C67C();
  v127 = *(_QWORD *)(v39 - 8);
  v128 = v39;
  MEMORY[0x1E0C80A78](v39);
  v115 = (char *)&v109 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41);
  v126 = (char *)&v109 - v42;
  v43 = *(unsigned __int8 *)(a7 + 24);
  v123 = v20;
  if (v43 == 2)
    v44 = 1;
  else
    v44 = *((_BYTE *)a1 + *(int *)(v20 + 40));
  LOBYTE(v129[0]) = v44;
  sub_1BB0CED94(v129, (uint64_t)v38);
  v45 = v127;
  v46 = v128;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v38, 1, v128) == 1)
  {
    sub_1BA5C699C((uint64_t)v38, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v47 = sub_1BB86EFEC();
    __swift_project_value_buffer(v47, (uint64_t)qword_1ED3A3BB8);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    v48 = sub_1BB86EFC8();
    v49 = sub_1BB8732F4();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc();
      *(_QWORD *)&v129[0] = swift_slowAlloc();
      *(_DWORD *)v50 = 136446466;
      v51 = *v25;
      v52 = v25[1];
      swift_bridgeObjectRetain();
      v130 = sub_1BA5D2E14(v51, v52, (uint64_t *)v129);
      sub_1BB873A8C();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      *(_WORD *)(v50 + 12) = 2082;
      __asm { BR              X10 }
    }
    sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);

    goto LABEL_39;
  }
  v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v45 + 32))(v126, v38, v46);
  v54 = a1[7];
  MEMORY[0x1E0C80A78](v53);
  v108 = v122;
  swift_bridgeObjectRetain();
  v55 = sub_1BB142438((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB0D7478, (uint64_t)v107, v54);
  swift_bridgeObjectRelease();
  if (v55 >> 62)
  {
    swift_bridgeObjectRetain();
    v56 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v56 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v57 = v124;
  if (v56 != *(_QWORD *)(a1[7] + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v71 = sub_1BB86EFEC();
    __swift_project_value_buffer(v71, (uint64_t)qword_1ED3A3BB8);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    v72 = (uint64_t)v121;
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    v73 = sub_1BB86EFC8();
    v74 = sub_1BB8732F4();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = swift_slowAlloc();
      *(_QWORD *)&v129[0] = swift_slowAlloc();
      *(_DWORD *)v75 = 136446466;
      v76 = *v30;
      v77 = v30[1];
      swift_bridgeObjectRetain();
      v130 = sub_1BA5D2E14(v76, v77, (uint64_t *)v129);
      sub_1BB873A8C();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      *(_WORD *)(v75 + 12) = 2082;
      __asm { BR              X10 }
    }

    sub_1BA4A2E80(v72, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    goto LABEL_38;
  }
  v58 = (void *)sub_1BB0CF09C(a1, v119);
  v59 = v120;
  if (v58)
  {
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_isDeprecated))
    {
      swift_bridgeObjectRelease();
      if (qword_1ED3A3BD0 != -1)
        swift_once();
      v60 = sub_1BB86EFEC();
      __swift_project_value_buffer(v60, (uint64_t)qword_1ED3A3BB8);
      sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      swift_unknownObjectRetain_n();
      v61 = sub_1BB86EFC8();
      v62 = sub_1BB87330C();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = swift_slowAlloc();
        v64 = swift_slowAlloc();
        *(_QWORD *)&v129[0] = v64;
        *(_DWORD *)v63 = 136446466;
        v65 = *v35;
        v66 = v35[1];
        swift_bridgeObjectRetain();
        v130 = sub_1BA5D2E14(v65, v66, (uint64_t *)v129);
        sub_1BB873A8C();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        *(_WORD *)(v63 + 12) = 2082;
        v67 = objc_msgSend(v58, sel_description);
        v68 = sub_1BB8729A0();
        v70 = v69;

        v130 = sub_1BA5D2E14(v68, v70, (uint64_t *)v129);
        sub_1BB873A8C();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA493000, v61, v62, "Sports data service not created score for deprecated id=%{public}s, event=%{public}s", (uint8_t *)v63, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v64, -1, -1);
        MEMORY[0x1BCCE5C38](v63, -1, -1);
        swift_unknownObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v127 + 8))(v126, v128);
LABEL_39:
        v99 = 0xF000000000000007;
        goto LABEL_40;
      }
      swift_unknownObjectRelease_n();

      sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      swift_unknownObjectRelease_n();
LABEL_38:
      (*(void (**)(char *, uint64_t))(v45 + 8))(v126, v46);
      goto LABEL_39;
    }
    swift_unknownObjectRelease();
  }
  v78 = v111;
  v121 = (char *)sub_1BB0CF2F8(a1, v111, v58);
  v119 = sub_1BB0CF680((int)a1, v78, v58);
  if (*(_QWORD *)(v59 + 16))
  {
    v79 = *a1;
    v80 = a1[1];
    swift_bridgeObjectRetain();
    v81 = sub_1BA6E35A8(v79, v80);
    v82 = (uint64_t)v116;
    if ((v83 & 1) != 0)
    {
      v84 = v81;
      v85 = *(_QWORD *)(v59 + 56);
      v86 = type metadata accessor for SportsEventStatusResponseEmbed();
      v87 = *(_QWORD *)(v86 - 8);
      v88 = v85 + *(_QWORD *)(v87 + 72) * v84;
      v45 = v127;
      v57 = v124;
      sub_1BA4C2DD8(v88, v124, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseEmbed);
      v89 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56);
      v46 = v128;
      v89(v57, 0, 1, v86);
    }
    else
    {
      v86 = type metadata accessor for SportsEventStatusResponseEmbed();
      v57 = v124;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v124, 1, 1, v86);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for SportsEventStatusResponseEmbed();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 48))(v57, 1, v86) != 1)
    {
      sub_1BA4C2DD8(v57 + *(int *)(v86 + 20), v82, type metadata accessor for SportsDataVisualizationResponseEventStatus);
      sub_1BA4A2E80(v57, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseEmbed);
      v91 = 0;
      goto LABEL_33;
    }
  }
  else
  {
    v90 = type metadata accessor for SportsEventStatusResponseEmbed();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v57, 1, 1, v90);
    v82 = (uint64_t)v116;
  }
  sub_1BA5C699C(v57, qword_1ED3A8EE0, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed);
  v91 = 1;
LABEL_33:
  v92 = v123;
  v93 = v113;
  v94 = v114;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56))(v82, v91, 1, v114);
  v95 = v112;
  sub_1BA4C2DD8((uint64_t)a1, v112, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  v96 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v82, 1, v94);
  v122 = (uint64_t)v58;
  if (v96 == 1)
  {
    v97 = v109;
    sub_1BA4C2DD8(v95 + *(int *)(v92 + 36), v109, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseMetadata);
    sub_1BA4A2E80(v95, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    v98 = v110;
    sub_1BA5193C4(v97, v110, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    sub_1BA5C699C(v82, &qword_1ED3AA978, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  }
  else
  {
    sub_1BA4A2E80(v95, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    v98 = v110;
    sub_1BA5193C4(v82, v110, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  }
  v99 = swift_allocObject();
  v100 = *a1;
  v101 = a1[1];
  v102 = (uint64_t)v115;
  v103 = v126;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v115, v126, v46);
  sub_1BA4C2DD8(v98, v117, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  sub_1BB5FA504();
  swift_bridgeObjectRetain_n();
  v104 = v45;
  v105 = sub_1BA761FE4(v100, v101, v118);
  swift_bridgeObjectRelease();
  type metadata accessor for SportsScoreDataVisualization();
  memset(v129, 0, 48);
  swift_allocObject();
  v106 = SportsScoreDataVisualization.init(competitorTags:leagueTag:umcCanonicalId:event:embedUrl:urlDataSources:eventStatus:isFeatured:metadata:debugData:config:)(v119, (uint64_t)v121, v100, v101, v122, v102, v55, &v130, v105 & 1, 0, 0, (uint64_t *)v129);
  sub_1BA4A2E80(v98, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v103, v46);
  *(_QWORD *)(v99 + 16) = v106;
LABEL_40:
  *v125 = v99;
}

uint64_t sub_1BB0CB448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _DWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  _OWORD v63[3];
  uint64_t v64;

  v61 = a5;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v53 - v10;
  v12 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  v62 = *(unsigned __int8 *)(a1 + 56);
  if (!*(_QWORD *)(a3 + 16))
  {
LABEL_10:
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v34 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v59 = v18;
  v60 = v16;
  v58 = *(_QWORD *)a1;
  v21 = *(_QWORD *)(a1 + 8);
  v56 = (char *)&v53 - v17;
  v57 = v21;
  v22 = *(_QWORD *)(a1 + 40);
  v23 = *(_QWORD *)(a1 + 48);
  v55 = v22;
  swift_bridgeObjectRetain();
  v24 = sub_1BA6E35A8(v19, v20);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v54 = v23;
  v26 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v24);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_14;
  swift_bridgeObjectRetain();
  v27 = sub_1BA6E35A8(v19, v20);
  if ((v28 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v35 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v29 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v63[0]) = v62;
  v30 = v57;
  sub_1BB0CED94(v63, (uint64_t)v11);
  v32 = v59;
  v31 = v60;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v11, 1, v60) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1BA5C699C((uint64_t)v11, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v33 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v53 = v29;
  v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v56, v11, v31);
  MEMORY[0x1E0C80A78](v36);
  *(&v53 - 2) = a2;
  v37 = v54;
  swift_bridgeObjectRetain();
  v38 = sub_1BB142438((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB0D9A68, (uint64_t)(&v53 - 4), v37);
  swift_bridgeObjectRelease();
  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    v39 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v40 = v61;
  if (v39 == *(_QWORD *)(v54 + 16))
  {
    v41 = swift_allocObject();
    v42 = v30;
    v44 = v59;
    v43 = v60;
    v45 = v56;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v14, v56, v60);
    v64 = v53;
    type metadata accessor for SportsBoxScoreDataVisualization();
    memset(v63, 0, sizeof(v63));
    swift_allocObject();
    swift_bridgeObjectRetain();
    v46 = SportsBoxScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v58, v42, v26, (uint64_t)v14, v38, &v64, (uint64_t *)v63);
    result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    *(_QWORD *)(v41 + 16) = v46;
    v48 = v41 | 0x6000000000000000;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v49 = sub_1BB86EFEC();
    __swift_project_value_buffer(v49, (uint64_t)qword_1ED3A3BB8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v50 = sub_1BB86EFC8();
    v51 = sub_1BB8732F4();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)&v63[0] = swift_slowAlloc();
      *v52 = 136446210;
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    swift_unknownObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v56, v60);
    v48 = 0xF000000000000007;
  }
  *v40 = v48;
  return result;
}

uint64_t sub_1BB0CC0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, unint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  NSObject *v45;
  _DWORD *v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  uint64_t v62;
  _OWORD v63[3];
  uint64_t v64[3];

  v61 = a5;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v51 - v10;
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v59 = v12;
  v60 = v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 24);
  v62 = *(unsigned __int8 *)(a1 + 56);
  if (!*(_QWORD *)(a3 + 16))
  {
LABEL_8:
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v30 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v56 = a2;
  v57 = (char *)&v51 - v17;
  v54 = a4;
  v20 = v18;
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD *)(a1 + 8);
  v23 = *(_QWORD *)(a1 + 40);
  v24 = *(_QWORD *)(a1 + 48);
  v55 = v23;
  swift_bridgeObjectRetain();
  v58 = v20;
  v25 = sub_1BA6E35A8(v20, v19);
  if ((v26 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v53 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v25);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v63[0]) = v62;
  v51 = v21;
  sub_1BB0CED94(v63, (uint64_t)v11);
  v28 = v59;
  v27 = v60;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v11, 1, v59) == 1)
  {
    sub_1BA5C699C((uint64_t)v11, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v29 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v52 = v22;
  v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v27 + 32))(v57, v11, v28);
  MEMORY[0x1E0C80A78](v31);
  *(&v51 - 2) = v56;
  swift_bridgeObjectRetain();
  v32 = sub_1BB142438((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB0D9A68, (uint64_t)(&v51 - 4), v24);
  v33 = v24;
  swift_bridgeObjectRelease();
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    v34 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v35 = v60;
  v36 = v61;
  v37 = v58;
  if (v34 == *(_QWORD *)(v33 + 16))
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v15, v57, v28);
    v38 = v54;
    if (*(_QWORD *)(v54 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39 = sub_1BA6E35A8(v37, v19);
      v40 = v51;
      if ((v41 & 1) != 0)
      {
        v42 = *(_QWORD *)(*(_QWORD *)(v38 + 56) + 8 * v39);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v42 = 0;
      }
      v48 = v52;
    }
    else
    {
      v48 = v52;
      swift_bridgeObjectRetain();
      v42 = 0;
      v40 = v51;
    }
    v49 = swift_allocObject();
    v64[0] = v42;
    type metadata accessor for SportsLineScoreDataVisualization();
    memset(v63, 0, sizeof(v63));
    swift_allocObject();
    v50 = SportsLineScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v40, v48, v53, (uint64_t)v15, v32, v64, (uint64_t *)v63);
    result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v57, v28);
    *(_QWORD *)(v49 + 16) = v50;
    v43 = v49 | 0x8000000000000000;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v44 = sub_1BB86EFEC();
    __swift_project_value_buffer(v44, (uint64_t)qword_1ED3A3BB8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v45 = sub_1BB86EFC8();
    LODWORD(v61) = sub_1BB8732F4();
    if (os_log_type_enabled(v45, (os_log_type_t)v61))
    {
      v46 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)&v63[0] = swift_slowAlloc();
      *v46 = 136446210;
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    swift_unknownObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v57, v28);
    v43 = 0xF000000000000007;
  }
  *v36 = v43;
  return result;
}

uint64_t sub_1BB0CCB38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, unint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t result;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _DWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  uint64_t v62;
  _OWORD v63[3];
  uint64_t v64;

  v61 = a5;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v53 - v10;
  v12 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  v62 = *(unsigned __int8 *)(a1 + 56);
  if (!*(_QWORD *)(a3 + 16))
  {
LABEL_10:
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v34 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v59 = v18;
  v60 = v16;
  v58 = *(_QWORD *)a1;
  v21 = *(_QWORD *)(a1 + 8);
  v56 = (char *)&v53 - v17;
  v57 = v21;
  v22 = *(_QWORD *)(a1 + 40);
  v23 = *(_QWORD *)(a1 + 48);
  v55 = v22;
  swift_bridgeObjectRetain();
  v24 = sub_1BA6E35A8(v19, v20);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v54 = v23;
  v26 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v24);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_14;
  swift_bridgeObjectRetain();
  v27 = sub_1BA6E35A8(v19, v20);
  if ((v28 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v35 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v29 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v63[0]) = v62;
  v30 = v57;
  sub_1BB0CED94(v63, (uint64_t)v11);
  v32 = v59;
  v31 = v60;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v11, 1, v60) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1BA5C699C((uint64_t)v11, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v33 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v53 = v29;
  v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v56, v11, v31);
  MEMORY[0x1E0C80A78](v36);
  *(&v53 - 2) = a2;
  v37 = v54;
  swift_bridgeObjectRetain();
  v38 = sub_1BB142438((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB0D9A68, (uint64_t)(&v53 - 4), v37);
  swift_bridgeObjectRelease();
  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    v39 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v40 = v61;
  if (v39 == *(_QWORD *)(v54 + 16))
  {
    v41 = swift_allocObject();
    v42 = v30;
    v44 = v59;
    v43 = v60;
    v45 = v56;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v14, v56, v60);
    v64 = v53;
    type metadata accessor for SportsInjuryReportDataVisualization();
    memset(v63, 0, sizeof(v63));
    swift_allocObject();
    swift_bridgeObjectRetain();
    v46 = SportsInjuryReportDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v58, v42, v26, (uint64_t)v14, v38, &v64, (uint64_t *)v63);
    result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    *(_QWORD *)(v41 + 16) = v46;
    v48 = v41 | 0xA000000000000000;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v49 = sub_1BB86EFEC();
    __swift_project_value_buffer(v49, (uint64_t)qword_1ED3A3BB8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v50 = sub_1BB86EFC8();
    v51 = sub_1BB8732F4();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)&v63[0] = swift_slowAlloc();
      *v52 = 136446210;
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    swift_unknownObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v56, v60);
    v48 = 0xF000000000000007;
  }
  *v40 = v48;
  return result;
}

uint64_t sub_1BB0CD7A0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  char *v40;
  _DWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  _OWORD v46[3];
  uint64_t v47;
  _OWORD v48[2];
  __int128 v49;
  char v50;
  _QWORD v51[2];

  v44 = a3;
  v45 = a4;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v42 - v7;
  v9 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v42 - v13;
  v15 = *(_OWORD *)(a1 + 16);
  v48[0] = *(_OWORD *)a1;
  v48[1] = v15;
  v49 = *(_OWORD *)(a1 + 32);
  v16 = *(unsigned __int8 *)(a1 + 48);
  v50 = v16;
  LOBYTE(v46[0]) = v16;
  v17 = v48[0];
  v19 = v18;
  sub_1BB0CED94(v46, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v9) == 1)
  {
    sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v20 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
    *(_QWORD *)&v46[0] = 0;
    *((_QWORD *)&v46[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v21 = *(uint64_t (**)(char *, char *, uint64_t))(v19 + 32);
  v42 = v14;
  v43 = v9;
  v22 = v21(v14, v8, v9);
  v23 = *((_QWORD *)&v49 + 1);
  MEMORY[0x1E0C80A78](v22);
  *(&v42 - 2) = a2;
  swift_bridgeObjectRetain();
  v24 = sub_1BB142438((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB0D9A68, (uint64_t)(&v42 - 4), v23);
  swift_bridgeObjectRelease();
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v25 == *(_QWORD *)(v23 + 16))
  {
    v26 = swift_allocObject();
    v27 = v49;
    v51[0] = v49;
    v28 = v44;
    swift_bridgeObjectRetain();
    sub_1BA781758((uint64_t)v51);
    v29 = sub_1BB0D5D6C(v27, v28);
    swift_bridgeObjectRelease();
    sub_1BA4F6CCC((uint64_t)v51);
    swift_bridgeObjectRetain();
    v30 = sub_1BB0CFA60((uint64_t)v48, v28);
    v32 = v42;
    v31 = v43;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v11, v42, v43);
    v47 = 1;
    type metadata accessor for SportsStandingDataVisualization();
    memset(v46, 0, sizeof(v46));
    swift_allocObject();
    v33 = SportsStandingDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(v29, v17, *((uint64_t *)&v17 + 1), v30, (uint64_t)v11, v24, &v47, (uint64_t *)v46);
    result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v32, v31);
    *(_QWORD *)(v26 + 16) = v33;
    v35 = v26 | 0x2000000000000000;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v36 = sub_1BB86EFEC();
    __swift_project_value_buffer(v36, (uint64_t)qword_1ED3A3BB8);
    sub_1BB0D7490((uint64_t)v48);
    sub_1BB0D7490((uint64_t)v48);
    v37 = sub_1BB86EFC8();
    v38 = sub_1BB8732F4();
    v39 = os_log_type_enabled(v37, v38);
    v40 = v42;
    if (v39)
    {
      v41 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)&v46[0] = swift_slowAlloc();
      *v41 = 136446210;
      __asm { BR              X9 }
    }

    sub_1BB0D74E0((uint64_t)v48);
    sub_1BB0D74E0((uint64_t)v48);
    result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v40, v43);
    v35 = 0xF000000000000007;
  }
  *v45 = v35;
  return result;
}

uint64_t sub_1BB0CDF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, unint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t result;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _DWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  uint64_t v62;
  _OWORD v63[3];
  uint64_t v64;

  v61 = a5;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v53 - v10;
  v12 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  v62 = *(unsigned __int8 *)(a1 + 56);
  if (!*(_QWORD *)(a3 + 16))
  {
LABEL_10:
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v34 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v59 = v18;
  v60 = v16;
  v58 = *(_QWORD *)a1;
  v21 = *(_QWORD *)(a1 + 8);
  v56 = (char *)&v53 - v17;
  v57 = v21;
  v22 = *(_QWORD *)(a1 + 40);
  v23 = *(_QWORD *)(a1 + 48);
  v55 = v22;
  swift_bridgeObjectRetain();
  v24 = sub_1BA6E35A8(v19, v20);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v54 = v23;
  v26 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v24);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_14;
  swift_bridgeObjectRetain();
  v27 = sub_1BA6E35A8(v19, v20);
  if ((v28 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v35 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v29 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v63[0]) = v62;
  v30 = v57;
  sub_1BB0CED94(v63, (uint64_t)v11);
  v32 = v59;
  v31 = v60;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v11, 1, v60) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1BA5C699C((uint64_t)v11, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v33 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v53 = v29;
  v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v56, v11, v31);
  MEMORY[0x1E0C80A78](v36);
  *(&v53 - 2) = a2;
  v37 = v54;
  swift_bridgeObjectRetain();
  v38 = sub_1BB142438((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB0D9A68, (uint64_t)(&v53 - 4), v37);
  swift_bridgeObjectRelease();
  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    v39 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v40 = v61;
  if (v39 == *(_QWORD *)(v54 + 16))
  {
    v41 = swift_allocObject();
    v42 = v30;
    v44 = v59;
    v43 = v60;
    v45 = v56;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v14, v56, v60);
    v64 = v53;
    type metadata accessor for SportsKeyPlayerDataVisualization();
    memset(v63, 0, sizeof(v63));
    swift_allocObject();
    swift_bridgeObjectRetain();
    v46 = SportsKeyPlayerDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v58, v42, v26, (uint64_t)v14, v38, &v64, (uint64_t *)v63);
    result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    *(_QWORD *)(v41 + 16) = v46;
    v48 = v41 | 0xC000000000000000;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v49 = sub_1BB86EFEC();
    __swift_project_value_buffer(v49, (uint64_t)qword_1ED3A3BB8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v50 = sub_1BB86EFC8();
    v51 = sub_1BB8732F4();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)&v63[0] = swift_slowAlloc();
      *v52 = 136446210;
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    swift_unknownObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v56, v60);
    v48 = 0xF000000000000007;
  }
  *v40 = v48;
  return result;
}

uint64_t sub_1BB0CEB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char v34[16];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v31 = a7;
  v32 = a1;
  v33 = a8;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3AD8, (uint64_t (*)(uint64_t))sub_1BA89C564, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  sub_1BA89C564();
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v30 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v30 - v22;
  v35 = v8;
  v36 = a2;
  v37 = a3;
  v38 = a4;
  v39 = a5;
  v40 = a6;
  v41 = v31;
  v42 = sub_1BB1420F4((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB0D6DE4, (uint64_t)v34, v32);
  sub_1BA89C5C4();
  sub_1BA4A2870((unint64_t *)&qword_1ED3CF840, (uint64_t (*)(uint64_t))sub_1BA89C5C4, MEMORY[0x1E0DEAF50]);
  sub_1BB86EC8C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
  {
    result = sub_1BA5C699C((uint64_t)v16, (unint64_t *)&unk_1ED3A3AD8, (uint64_t (*)(uint64_t))sub_1BA89C564);
    v25 = 0xF000000000000007;
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v26(v23, v16, v18);
    v27 = swift_allocObject();
    v28 = v30;
    v26(v30, v23, v18);
    type metadata accessor for SportsBracketGroupDataVisualization();
    v29 = swift_allocObject();
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v26)(v29 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations, v28, v18);
    *(_QWORD *)(v27 + 16) = v29;
    v25 = v27 | 0x4000000000000000;
  }
  *v33 = v25;
  return result;
}

uint64_t sub_1BB0CED94@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD v12[2];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v12 - v5;
  v7 = *a1;
  LOBYTE(v12[0]) = *a1;
  sub_1BB0D1130((uint64_t)v12);
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_1BA5C699C((uint64_t)v6, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v10 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    __asm { BR              X9 }
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
}

uint64_t sub_1BB0CF09C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v3 = a1[3];
  if (!v3)
  {
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v10 = (id)qword_1ED476750;
    v11 = sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BB87CE70;
    v14 = *a1;
    v13 = a1[1];
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v12 + 32) = v14;
    *(_QWORD *)(v12 + 40) = v13;
    swift_bridgeObjectRetain();
    sub_1BB86EF44("Sports data resolving a score without an event, score=%{public}@", 64, 2, &dword_1BA493000, v10, v11, v12);

    goto LABEL_12;
  }
  v5 = a1[2];
  v6 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_9:
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v15 = (id)qword_1ED476750;
    v16 = sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BB87A390;
    v19 = *a1;
    v18 = a1[1];
    v20 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    v21 = sub_1BA6A2D8C();
    *(_QWORD *)(v17 + 32) = v19;
    *(_QWORD *)(v17 + 40) = v18;
    *(_QWORD *)(v17 + 96) = v20;
    *(_QWORD *)(v17 + 104) = v21;
    *(_QWORD *)(v17 + 64) = v21;
    *(_QWORD *)(v17 + 72) = v5;
    *(_QWORD *)(v17 + 80) = v3;
    swift_bridgeObjectRetain();
    sub_1BB86EF44("Score has event but the event was not fetched, score=%{public}@, event=%{public}@", 81, 2, &dword_1BA493000, v15, v16, v17);

LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BA6E35A8(v5, v3);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v7);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease_n();
  return v9;
}

id sub_1BB0CF2F8(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;

  if (!a3)
  {
    v19 = a1[5];
    if (v19)
    {
      v21 = a1[4];
      v22 = qword_1ED3AAC10;
      swift_bridgeObjectRetain();
      if (v22 != -1)
        swift_once();
      v23 = (id)qword_1ED476750;
      v24 = sub_1BB8732F4();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1BB87A390;
      v26 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
      v27 = sub_1BA6A2D8C();
      *(_QWORD *)(v25 + 32) = v21;
      *(_QWORD *)(v25 + 40) = v19;
      v28 = v21;
      v29 = *a1;
      v30 = a1[1];
      *(_QWORD *)(v25 + 96) = v26;
      *(_QWORD *)(v25 + 104) = v27;
      *(_QWORD *)(v25 + 64) = v27;
      *(_QWORD *)(v25 + 72) = v29;
      v38 = v29;
      *(_QWORD *)(v25 + 80) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB86EF44("Sports data score requires league tag %{public}@ but there was no event associated, score=%{public}@", 100, 2, &dword_1BA493000, v23, v24, v25);

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        v31 = sub_1BA6E35A8(v28, v19);
        if ((v32 & 1) != 0)
        {
          v18 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v31);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease_n();
          return v18;
        }
        swift_bridgeObjectRelease();
      }
      v33 = (id)qword_1ED476750;
      v34 = sub_1BB8732F4();
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1BB87A390;
      v36 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v35 + 64) = v27;
      *(_QWORD *)(v35 + 32) = v28;
      *(_QWORD *)(v35 + 40) = v19;
      *(_QWORD *)(v35 + 96) = v36;
      *(_QWORD *)(v35 + 104) = v27;
      *(_QWORD *)(v35 + 72) = v38;
      *(_QWORD *)(v35 + 80) = v30;
      swift_bridgeObjectRetain();
      sub_1BB86EF44("Sports data score requires league tag %{public}@ but there was no event or tag fetched, score=%{public}@", 104, 2, &dword_1BA493000, v33, v34, v35);

      swift_bridgeObjectRelease();
    }
    return 0;
  }
  v5 = qword_1ED3AAC10;
  swift_unknownObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = (void *)qword_1ED476750;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87A390;
  v8 = v6;
  v9 = objc_msgSend(a3, sel_identifier);
  v10 = sub_1BB8729A0();
  v12 = v11;

  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1BA6A2D8C();
  *(_QWORD *)(v7 + 32) = v10;
  *(_QWORD *)(v7 + 40) = v12;
  v16 = *a1;
  v15 = a1[1];
  *(_QWORD *)(v7 + 96) = v13;
  *(_QWORD *)(v7 + 104) = v14;
  *(_QWORD *)(v7 + 64) = v14;
  *(_QWORD *)(v7 + 72) = v16;
  *(_QWORD *)(v7 + 80) = v15;
  swift_bridgeObjectRetain();
  v17 = sub_1BB87330C();
  sub_1BB86EF44("Sports data score resolving league tag %{public}@ from event, score=%{public}@", 78, 2, &dword_1BA493000, v8, v17, v7);

  swift_bridgeObjectRelease();
  v18 = objc_msgSend(a3, sel_eventLeagueTag);
  swift_unknownObjectRelease();
  return v18;
}

unint64_t sub_1BB0CF680(int a1, uint64_t a2, id a3)
{
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v40;

  if (a3 && (v4 = objc_msgSend(a3, sel_eventCompetitorTags)) != 0)
  {
    v5 = v4;
    sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3AB1E0);
    v6 = sub_1BB872DB4();

  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_1BB0D5D6C(v7, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v6 >> 62))
  {
    v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!(v8 >> 62))
      goto LABEL_7;
LABEL_12:
    swift_bridgeObjectRetain();
    v25 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v9 < v25)
      goto LABEL_8;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v9 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (v8 >> 62)
    goto LABEL_12;
LABEL_7:
  if (v9 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_8:
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v10 = (id)qword_1ED476750;
    v40 = sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BB87FC80;
    v12 = sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3AB1E0);
    v13 = MEMORY[0x1BCCE36DC](v8, v12);
    v15 = v14;
    v16 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    v17 = sub_1BA6A2D8C();
    *(_QWORD *)(v11 + 64) = v17;
    *(_QWORD *)(v11 + 32) = v13;
    *(_QWORD *)(v11 + 40) = v15;
    v18 = swift_bridgeObjectRetain();
    v19 = MEMORY[0x1BCCE36DC](v18, v16);
    v21 = v20;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 96) = v16;
    *(_QWORD *)(v11 + 104) = v17;
    *(_QWORD *)(v11 + 72) = v19;
    *(_QWORD *)(v11 + 80) = v21;
    v22 = MEMORY[0x1BCCE36DC](v6, v12);
    v24 = v23;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 136) = v16;
    *(_QWORD *)(v11 + 144) = v17;
    *(_QWORD *)(v11 + 112) = v22;
    *(_QWORD *)(v11 + 120) = v24;
    sub_1BB86EF44("Sports data resolving score from legacy fetch with %{public}@ from requirements %{public}@, event contained %{public}@", 118, 2, &dword_1BA493000, v10, v40, v11);
    v6 = v8;
    goto LABEL_16;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  if (qword_1ED3AAC10 != -1)
    swift_once();
  v26 = (void *)qword_1ED476750;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BB87A390;
  v28 = sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3AB1E0);
  v10 = v26;
  v29 = MEMORY[0x1BCCE36DC](v6, v28);
  v31 = v30;
  v32 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
  v33 = sub_1BA6A2D8C();
  *(_QWORD *)(v27 + 64) = v33;
  *(_QWORD *)(v27 + 32) = v29;
  *(_QWORD *)(v27 + 40) = v31;
  v34 = swift_bridgeObjectRetain();
  v35 = MEMORY[0x1BCCE36DC](v34, v32);
  v37 = v36;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v27 + 96) = v32;
  *(_QWORD *)(v27 + 104) = v33;
  *(_QWORD *)(v27 + 72) = v35;
  *(_QWORD *)(v27 + 80) = v37;
  v38 = sub_1BB87330C();
  sub_1BB86EF44("Sports data resolving score from event with %{public}@ from requirements %{public}@", 83, 2, &dword_1BA493000, v10, v38, v27);
LABEL_16:

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BB0CFA60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 24);
  if (!v2 || !*(_QWORD *)(a2 + 16))
    return 0;
  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v5 = sub_1BA6E35A8(v4, v2);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v5);
    swift_unknownObjectRetain();
  }
  else
  {
    v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

_QWORD *sub_1BB0CFADC@<X0>(uint64_t a1@<X0>, char *a2@<X2>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, char *a7@<X7>, _QWORD *a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  _QWORD *result;
  _OWORD v14[4];
  uint64_t v15;
  char v16;

  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)&v14[0] = *(_QWORD *)a1;
  *((_QWORD *)&v14[0] + 1) = v9;
  v12 = *(_OWORD *)(a1 + 32);
  v14[1] = *(_OWORD *)(a1 + 16);
  v14[2] = v12;
  v14[3] = *(_OWORD *)(a1 + 48);
  v15 = v10;
  v16 = v11;
  result = sub_1BB0CFB60(v14, a2, a3, a4, a5, a6, a7);
  *a8 = result;
  return result;
}

_QWORD *sub_1BB0CFB60(_OWORD *a1, char *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  char *v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  char *v50;
  _DWORD *v51;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD v63[3];
  uint64_t v64;
  _OWORD v65[3];
  _BYTE v66[25];
  uint64_t v67;
  _QWORD v68[2];

  v61 = a6;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v55 - v14;
  v16 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v16);
  v59 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v55 - v19;
  *(_OWORD *)&v66[9] = *(_OWORD *)((char *)a1 + 57);
  v21 = a1[1];
  v65[0] = *a1;
  v65[1] = v21;
  v22 = a1[2];
  v23 = a1[3];
  v25 = v24;
  v65[2] = v22;
  *(_OWORD *)v66 = v23;
  v62 = v66[24];
  LOBYTE(v63[0]) = v66[24];
  v57 = *((_QWORD *)&v65[0] + 1);
  v58 = *(_QWORD *)&v65[0];
  sub_1BB0CED94(v63, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v15, 1, v16) == 1)
  {
    sub_1BA5C699C((uint64_t)v15, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v26 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    __asm { BR              X9 }
  }
  v56 = v25;
  v27 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
  v55 = v20;
  v60 = v16;
  v28 = v27(v20, v15, v16);
  v29 = *(_QWORD *)&v66[16];
  v67 = *(_QWORD *)&v66[16];
  MEMORY[0x1E0C80A78](v28);
  *(&v55 - 8) = v7;
  *(&v55 - 7) = a3;
  *(&v55 - 6) = (char *)v65;
  *(&v55 - 5) = a7;
  v30 = a5;
  *(&v55 - 4) = (char *)a5;
  *(&v55 - 3) = a2;
  v54 = v61;
  sub_1BA781758((uint64_t)&v67);
  v31 = sub_1BB1425B4((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_1BB0D6E2C, (uint64_t)(&v55 - 10), v29);
  v32 = sub_1BA4F6CCC((uint64_t)&v67);
  v33 = *(_QWORD *)&v66[8];
  MEMORY[0x1E0C80A78](v32);
  v53 = a2;
  swift_bridgeObjectRetain();
  v34 = sub_1BB142438((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB0D9A68, (uint64_t)(&v55 - 4), v33);
  swift_bridgeObjectRelease();
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    v35 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v36 = v60;
  v37 = v56;
  if (v35 == *(_QWORD *)(v33 + 16))
  {
    v38 = *(_QWORD *)v66;
    v68[0] = *(_QWORD *)v66;
    swift_bridgeObjectRetain();
    sub_1BA781758((uint64_t)v68);
    v39 = sub_1BB0D5D6C(v38, a5);
    swift_bridgeObjectRelease();
    sub_1BA4F6CCC((uint64_t)v68);
    v40 = v57;
    swift_bridgeObjectRetain();
    v41 = sub_1BB0CFA60((uint64_t)v65, a5);
    v42 = sub_1BB0D10B4((uint64_t)v65, v30);
    v43 = (uint64_t)v59;
    v44 = v55;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v59, v55, v36);
    v64 = 1;
    type metadata accessor for SportsBracketDataVisualization();
    memset(v63, 0, sizeof(v63));
    swift_allocObject();
    v45 = SportsBracketDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(v39, v58, v40, v41, v42, v43, v34, v31, &v64, (uint64_t *)v63);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v44, v36);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED3A3BD0 != -1)
      swift_once();
    v46 = sub_1BB86EFEC();
    __swift_project_value_buffer(v46, (uint64_t)qword_1ED3A3BB8);
    sub_1BB0D6E5C((uint64_t)v65);
    sub_1BB0D6E5C((uint64_t)v65);
    v47 = sub_1BB86EFC8();
    v48 = sub_1BB8732F4();
    v49 = os_log_type_enabled(v47, v48);
    v50 = v55;
    if (v49)
    {
      v51 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)&v63[0] = swift_slowAlloc();
      *v51 = 136446210;
      __asm { BR              X9 }
    }

    sub_1BAE8FFD4((uint64_t)v65);
    sub_1BAE8FFD4((uint64_t)v65);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v50, v60);
    return 0;
  }
  return v45;
}

uint64_t sub_1BB0D03C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, _QWORD *a7@<X8>, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  void (*v34)(char *, char *, uint64_t);
  void *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  _DWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t result;
  _QWORD *v75;
  char v76[8];
  uint64_t v77;
  uint64_t v78;
  char *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  _OWORD v98[4];
  uint64_t v99;

  v96 = a7;
  v87 = a6;
  v92 = a3;
  v93 = a5;
  v94 = a2;
  v10 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  MEMORY[0x1E0C80A78](v10);
  v81 = (uint64_t)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v12);
  v95 = (unint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v85 = (char *)&v78 - v15;
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, qword_1ED3A8EE0, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v82 = (uint64_t)&v78 - v18;
  sub_1BA4B07F0(0, &qword_1ED3AA978, type metadata accessor for SportsDataVisualizationResponseEventStatus, v16);
  MEMORY[0x1E0C80A78](v19);
  v84 = (char *)&v78 - v20;
  v83 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  v88 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v89 = (uint64_t)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v86 = (char *)&v78 - v23;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v16);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v78 - v25;
  v27 = sub_1BB86C67C();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v90 = (char *)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v78 - v31;
  v91 = v12;
  LOBYTE(v98[0]) = *((_BYTE *)a1 + *(int *)(v12 + 40));
  sub_1BB0CED94(v98, (uint64_t)v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_1BA5C699C((uint64_t)v26, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v33 = (id)qword_1ED476750;
    sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
    *(_QWORD *)&v98[0] = 0;
    *((_QWORD *)&v98[0] + 1) = 0xE000000000000000;
    __asm { BR              X10 }
  }
  v34 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v94 = v27;
  v34(v32, v26, v27);
  v35 = (void *)sub_1BB0CF09C(a1, v92);
  v80 = sub_1BB0CF2F8(a1, a4, v35);
  v92 = (uint64_t)v35;
  v36 = sub_1BB0CF680((int)a1, a4, v35);
  v37 = a1[7];
  MEMORY[0x1E0C80A78](v36);
  v77 = v93;
  swift_bridgeObjectRetain();
  v38 = v97;
  v39 = sub_1BB142438((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB0D9A68, (uint64_t)v76, v37);
  swift_bridgeObjectRelease();
  v40 = v32;
  v93 = v39;
  if (v39 >> 62)
  {
    swift_bridgeObjectRetain();
    v41 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v41 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v42 = v95;
  if (v41 == *(_QWORD *)(a1[7] + 16))
  {
    v95 = v36;
    v78 = a8;
    v43 = v87;
    v44 = *(_QWORD *)(v87 + 16);
    v79 = v32;
    v97 = v38;
    if (v44)
    {
      v45 = *a1;
      v46 = a1[1];
      swift_bridgeObjectRetain();
      v47 = sub_1BA6E35A8(v45, v46);
      if ((v48 & 1) != 0)
      {
        v49 = v47;
        v50 = *(_QWORD *)(v43 + 56);
        v51 = type metadata accessor for SportsEventStatusResponseEmbed();
        v52 = *(_QWORD *)(v51 - 8);
        v53 = v50 + *(_QWORD *)(v52 + 72) * v49;
        v54 = v82;
        sub_1BA4C2DD8(v53, v82, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseEmbed);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      }
      else
      {
        v51 = type metadata accessor for SportsEventStatusResponseEmbed();
        v54 = v82;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v82, 1, 1, v51);
      }
      v61 = (uint64_t)v84;
      v60 = (uint64_t)v85;
      v62 = v83;
      swift_bridgeObjectRelease();
      type metadata accessor for SportsEventStatusResponseEmbed();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v54, 1, v51) != 1)
      {
        sub_1BA4C2DD8(v54 + *(int *)(v51 + 20), v61, type metadata accessor for SportsDataVisualizationResponseEventStatus);
        sub_1BA4A2E80(v54, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseEmbed);
        v63 = 0;
        goto LABEL_21;
      }
    }
    else
    {
      v59 = type metadata accessor for SportsEventStatusResponseEmbed();
      v54 = v82;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v82, 1, 1, v59);
      v61 = (uint64_t)v84;
      v60 = (uint64_t)v85;
      v62 = v83;
    }
    sub_1BA5C699C(v54, qword_1ED3A8EE0, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed);
    v63 = 1;
LABEL_21:
    v64 = (uint64_t)v86;
    v65 = v88;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v61, v63, 1, v62);
    sub_1BA4C2DD8((uint64_t)a1, v60, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v61, 1, v62);
    v67 = v79;
    if (v66 == 1)
    {
      v68 = v81;
      sub_1BA4C2DD8(v60 + *(int *)(v91 + 36), v81, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseMetadata);
      sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      sub_1BA5193C4(v68, v64, type metadata accessor for SportsDataVisualizationResponseEventStatus);
      sub_1BA5C699C(v61, &qword_1ED3AA978, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    }
    else
    {
      sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      sub_1BA5193C4(v61, v64, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    }
    v69 = *a1;
    v70 = a1[1];
    v71 = (uint64_t)v90;
    v72 = v94;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v90, v67, v94);
    sub_1BA4C2DD8(v64, v89, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    sub_1BB5FA504();
    swift_bridgeObjectRetain_n();
    v73 = sub_1BA761FE4(v69, v70, v78);
    swift_bridgeObjectRelease();
    type metadata accessor for SportsScoreDataVisualization();
    memset(v98, 0, 48);
    swift_allocObject();
    v75 = SportsScoreDataVisualization.init(competitorTags:leagueTag:umcCanonicalId:event:embedUrl:urlDataSources:eventStatus:isFeatured:metadata:debugData:config:)(v95, (uint64_t)v80, v69, v70, v92, v71, v93, &v99, v73 & 1, 0, 0, (uint64_t *)v98);
    sub_1BA4A2E80(v64, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v67, v72);
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v55 = sub_1BB86EFEC();
  __swift_project_value_buffer(v55, (uint64_t)qword_1ED3A3BB8);
  sub_1BA4C2DD8((uint64_t)a1, v42, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  v56 = sub_1BB86EFC8();
  v57 = sub_1BB8732F4();
  if (os_log_type_enabled(v56, v57))
  {
    v79 = v40;
    v58 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)&v98[0] = swift_slowAlloc();
    *v58 = 136446210;
    __asm { BR              X10 }
  }

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v40, v94);
  v75 = 0;
LABEL_25:
  *v96 = v75;
  return result;
}

uint64_t sub_1BB0D0FE0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v6 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[1];
  v12 = *a1;
  v13 = v9;
  v14 = a1[2];
  (*(void (**)(char *, uint64_t))(v10 + 16))(v8, a2);
  v15 = v12;
  v16 = v13;
  v17 = v14;
  sub_1BA739BF4((uint64_t)&v15);
  sub_1BA739BF4((uint64_t)&v16);
  sub_1BA739BF4((uint64_t)&v17);
  result = sub_1BB296434(&v12, (uint64_t)v8);
  *a3 = result;
  return result;
}

uint64_t sub_1BB0D10B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 40);
  if (!v2 || !*(_QWORD *)(a2 + 16))
    return 0;
  v4 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  v5 = sub_1BA6E35A8(v4, v2);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v5);
    swift_unknownObjectRetain();
  }
  else
  {
    v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1BB0D1130(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB0D115C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unsigned __int8 v3;

  v3 = 0;
  return sub_1BB0D1A14(&v3, a1, a2);
}

uint64_t sub_1BB0D1200(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v3[2] = a1;
  v3[3] = a3;
  type metadata accessor for SportsDataServiceRequest(0);
  v5 = swift_task_alloc();
  v6 = *a2;
  v3[4] = v5;
  v3[5] = v6;
  return swift_task_switch();
}

uint64_t sub_1BB0D1260()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[3] + 16), *(_QWORD *)(v0[3] + 40));
  v1 = swift_bridgeObjectRetain();
  v0[6] = sub_1BA989D18(v1);
  swift_bridgeObjectRelease();
  v2 = (_QWORD *)swift_task_alloc();
  v0[7] = v2;
  *v2 = v0;
  v2[1] = sub_1BB0D1318;
  return sub_1BB86E908();
}

uint64_t sub_1BB0D1318()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BB0D1384()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[4];
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[3] + 56), *(_QWORD *)(v0[3] + 80));
  v0[9] = sub_1BB0B9BA4(v1);
  v2 = (_QWORD *)swift_task_alloc();
  v0[10] = v2;
  *v2 = v0;
  v2[1] = sub_1BB0D13F8;
  return sub_1BB86E908();
}

uint64_t sub_1BB0D13F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1BB0D1464()
{
  uint64_t v0;

  sub_1BA4A2E80(*(_QWORD *)(v0 + 32), type metadata accessor for SportsDataServiceRequest);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0D14AC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB0D14E8()
{
  uint64_t v0;

  sub_1BA4A2E80(*(_QWORD *)(v0 + 32), type metadata accessor for SportsDataServiceRequest);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BB0D152C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v10[2] = a2;
  v11 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1E0C80A78](v11);
  v3 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  v12 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA4C2DD8(a1, (uint64_t)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (char *)sub_1BB0D16A4 + 4 * byte_1BB8EA164[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB0D16A4()
{
  uint64_t v0;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  **(_QWORD **)(v0 - 128) = MEMORY[0x1E0DEE9D8];
  return result;
}

void sub_1BB0D16FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BA4C2DD8(v0, v1, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  sub_1BA4C2DD8(v1 + *(int *)(*(_QWORD *)(v3 - 72) + 36), v2, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseMetadata);
  SportsDataVisualizationResponseEventStatus.isFinalized.getter();
  v5 = v4;
  sub_1BA4A2E80(v2, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  if ((v5 & 1) != 0)
  {
    sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    JUMPOUT(0x1BB0D16CCLL);
  }
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  sub_1BAF853BC();
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v8;
  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  **(_QWORD **)(v3 - 128) = v6;
  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  JUMPOUT(0x1BB0D16DCLL);
}

uint64_t sub_1BB0D1A14@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - v7;
  v9 = *a1;
  if (qword_1ED3A3400 != -1)
    swift_once();
  if ((sub_1BB86D258() & 1) != 0)
  {
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1EF2A7138 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    sub_1BB86C634();
    swift_bridgeObjectRelease();
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1ED3AAC10 != -1)
        swift_once();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
      v21[0] = 0;
      v21[1] = 0xE000000000000000;
      __asm { BR              X9 }
    }
  }
  else
  {
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (*(_QWORD *)(a2 + 16) && (v13 = sub_1BB4AB7A0(v9), (v14 & 1) != 0))
  {
    v15 = v13;
    v16 = *(_QWORD *)(a2 + 56);
    v17 = sub_1BB86C67C();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a3, v16 + *(_QWORD *)(v18 + 72) * v15, v17);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v17);
  }
  else
  {
    v19 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
}

uint64_t sub_1BB0D1E4C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - v7;
  v9 = *a1;
  if (qword_1ED3A3670 != -1)
    swift_once();
  if ((sub_1BB86D258() & 1) != 0)
  {
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1EF2A7148 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    sub_1BB86C634();
    swift_bridgeObjectRelease();
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1ED3AAC10 != -1)
        swift_once();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
      v21[0] = 0;
      v21[1] = 0xE000000000000000;
      __asm { BR              X9 }
    }
  }
  else
  {
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (*(_QWORD *)(a2 + 16) && (v13 = sub_1BB4AB7A0(v9), (v14 & 1) != 0))
  {
    v15 = v13;
    v16 = *(_QWORD *)(a2 + 56);
    v17 = sub_1BB86C67C();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a3, v16 + *(_QWORD *)(v18 + 72) * v15, v17);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v17);
  }
  else
  {
    v19 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
}

uint64_t sub_1BB0D2284@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - v7;
  v9 = *a1;
  if (qword_1ED3A34E0 != -1)
    swift_once();
  if ((sub_1BB86D258() & 1) != 0)
  {
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1EF2A7158 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    sub_1BB86C634();
    swift_bridgeObjectRelease();
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1ED3AAC10 != -1)
        swift_once();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
      v21[0] = 0;
      v21[1] = 0xE000000000000000;
      __asm { BR              X9 }
    }
  }
  else
  {
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (*(_QWORD *)(a2 + 16) && (v13 = sub_1BB4AB7A0(v9), (v14 & 1) != 0))
  {
    v15 = v13;
    v16 = *(_QWORD *)(a2 + 56);
    v17 = sub_1BB86C67C();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a3, v16 + *(_QWORD *)(v18 + 72) * v15, v17);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v17);
  }
  else
  {
    v19 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
}

uint64_t sub_1BB0D26BC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - v7;
  v9 = *a1;
  if (qword_1ED3ABAC8 != -1)
    swift_once();
  if ((sub_1BB86D258() & 1) != 0)
  {
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1EF2A7170 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    sub_1BB86C634();
    swift_bridgeObjectRelease();
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1ED3AAC10 != -1)
        swift_once();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
      v21[0] = 0;
      v21[1] = 0xE000000000000000;
      __asm { BR              X9 }
    }
  }
  else
  {
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (*(_QWORD *)(a2 + 16) && (v13 = sub_1BB4AB7A0(v9), (v14 & 1) != 0))
  {
    v15 = v13;
    v16 = *(_QWORD *)(a2 + 56);
    v17 = sub_1BB86C67C();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a3, v16 + *(_QWORD *)(v18 + 72) * v15, v17);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v17);
  }
  else
  {
    v19 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
}

uint64_t sub_1BB0D2AF4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - v7;
  v9 = *a1;
  if (qword_1ED3A3450 != -1)
    swift_once();
  if ((sub_1BB86D258() & 1) != 0)
  {
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1EF2A70F8 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    sub_1BB86C634();
    swift_bridgeObjectRelease();
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1ED3AAC10 != -1)
        swift_once();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
      v21[0] = 0;
      v21[1] = 0xE000000000000000;
      __asm { BR              X9 }
    }
  }
  else
  {
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (*(_QWORD *)(a2 + 16) && (v13 = sub_1BB4AB7A0(v9), (v14 & 1) != 0))
  {
    v15 = v13;
    v16 = *(_QWORD *)(a2 + 56);
    v17 = sub_1BB86C67C();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a3, v16 + *(_QWORD *)(v18 + 72) * v15, v17);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v17);
  }
  else
  {
    v19 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
}

uint64_t sub_1BB0D2F2C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - v7;
  v9 = *a1;
  if (qword_1ED3A3530 != -1)
    swift_once();
  if ((sub_1BB86D258() & 1) != 0)
  {
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1EF2A7128 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    sub_1BB86C634();
    swift_bridgeObjectRelease();
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1ED3AAC10 != -1)
        swift_once();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
      v21[0] = 0;
      v21[1] = 0xE000000000000000;
      __asm { BR              X9 }
    }
  }
  else
  {
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (*(_QWORD *)(a2 + 16) && (v13 = sub_1BB4AB7A0(v9), (v14 & 1) != 0))
  {
    v15 = v13;
    v16 = *(_QWORD *)(a2 + 56);
    v17 = sub_1BB86C67C();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a3, v16 + *(_QWORD *)(v18 + 72) * v15, v17);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v17);
  }
  else
  {
    v19 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
}

uint64_t sub_1BB0D3364@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - v7;
  v9 = *a1;
  if (qword_1ED3A3620 != -1)
    swift_once();
  if ((sub_1BB86D258() & 1) != 0)
  {
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1EF2A7108 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    sub_1BB86C634();
    swift_bridgeObjectRelease();
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1ED3AAC10 != -1)
        swift_once();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
      v21[0] = 0;
      v21[1] = 0xE000000000000000;
      __asm { BR              X9 }
    }
  }
  else
  {
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (*(_QWORD *)(a2 + 16) && (v13 = sub_1BB4AB7A0(v9), (v14 & 1) != 0))
  {
    v15 = v13;
    v16 = *(_QWORD *)(a2 + 56);
    v17 = sub_1BB86C67C();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a3, v16 + *(_QWORD *)(v18 + 72) * v15, v17);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v17);
  }
  else
  {
    v19 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
}

uint64_t sub_1BB0D379C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - v7;
  v9 = *a1;
  if (qword_1ED3A35D0 != -1)
    swift_once();
  if ((sub_1BB86D258() & 1) != 0)
  {
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1EF2A7118 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    sub_1BB86C634();
    swift_bridgeObjectRelease();
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1ED3AAC10 != -1)
        swift_once();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
      v21[0] = 0;
      v21[1] = 0xE000000000000000;
      __asm { BR              X9 }
    }
  }
  else
  {
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (*(_QWORD *)(a2 + 16) && (v13 = sub_1BB4AB7A0(v9), (v14 & 1) != 0))
  {
    v15 = v13;
    v16 = *(_QWORD *)(a2 + 56);
    v17 = sub_1BB86C67C();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a3, v16 + *(_QWORD *)(v18 + 72) * v15, v17);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v17);
  }
  else
  {
    v19 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
}

uint64_t sub_1BB0D3BD4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = a1[15];
  v2 = a1[16];
  __swift_project_boxed_opaque_existential_1(a1 + 12, v1);
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BA67F4CC(v3);
  swift_bridgeObjectRelease();
  v5 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v2 + 16))(v4, v1, v2);
  swift_release();
  return v5;
}

uint64_t sub_1BB0D3C64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_29:
    v40 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_30:
    result = swift_bridgeObjectRelease();
    *a2 = v40;
    return result;
  }
LABEL_28:
  swift_bridgeObjectRetain_n();
  v3 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_29;
LABEL_3:
  v42 = v2 & 0xC000000000000001;
  v40 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v41 = v2;
  for (i = 0; ; i = v6)
  {
    while (1)
    {
      if (v42)
      {
        v5 = (void *)MEMORY[0x1BCCE4630](i, v2);
        v6 = i + 1;
        if (__OFADD__(i, 1))
          goto LABEL_27;
      }
      else
      {
        v5 = *(void **)(v2 + 8 * i + 32);
        swift_unknownObjectRetain();
        v6 = i + 1;
        if (__OFADD__(i, 1))
        {
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
      }
      v7 = objc_msgSend(v5, sel_asSports);
      if (v7)
        break;
      v43 = v6;
      v8 = v3;
      if (qword_1ED3AAC10 != -1)
        swift_once();
      v9 = (id)qword_1ED476750;
      v10 = sub_1BB8732F4();
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
      v12 = objc_msgSend(v5, sel_identifier);
      v13 = sub_1BB8729A0();
      v15 = v14;

      *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v11 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v11 + 32) = v13;
      *(_QWORD *)(v11 + 40) = v15;
      sub_1BB86EF44("Sports data service references a tag that is not backed by sports data, %{public}@", 82, 2, &dword_1BA493000, v9, v10, v11);
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      ++i;
      v3 = v8;
      v2 = v41;
      if (v43 == v8)
        goto LABEL_30;
    }
    v16 = v7;
    v17 = objc_msgSend(v7, sel_identifier);
    v18 = sub_1BB8729A0();
    v20 = v19;

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = v18;
    v22 = v18;
    v23 = v20;
    v25 = sub_1BA6E35A8(v22, v20);
    v26 = v40[2];
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
      break;
    v29 = v24;
    if (v40[3] >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C94E0();
      v30 = v23;
    }
    else
    {
      sub_1BB4BA598(v28, isUniquelyReferenced_nonNull_native);
      v30 = v23;
      v31 = sub_1BA6E35A8(v44, v23);
      if ((v29 & 1) != (v32 & 1))
        goto LABEL_33;
      v25 = v31;
    }
    if ((v29 & 1) != 0)
    {
      v33 = v40[7];
      swift_unknownObjectRelease();
      *(_QWORD *)(v33 + 8 * v25) = v16;
    }
    else
    {
      v40[(v25 >> 6) + 8] |= 1 << v25;
      v34 = (uint64_t *)(v40[6] + 16 * v25);
      *v34 = v44;
      v34[1] = v30;
      *(_QWORD *)(v40[7] + 8 * v25) = v16;
      v35 = v40[2];
      v36 = __OFADD__(v35, 1);
      v37 = v35 + 1;
      if (v36)
        goto LABEL_32;
      v40[2] = v37;
      swift_bridgeObjectRetain();
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6 == v3)
      goto LABEL_30;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB0D4044(uint64_t a1, uint64_t a2)
{
  return sub_1BB0C3BC4(a1, a2, sub_1BB0BAACC);
}

uint64_t sub_1BB0D4060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1BB0D84EC(0);
  return sub_1BA4C2DD8(a1 + *(int *)(v4 + 52), a2, (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource);
}

void sub_1BB0D40B0(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  NSObject *oslog;
  uint64_t v11;

  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v2 = sub_1BB86EFEC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED3A3BB8);
  v3 = a1;
  v4 = a1;
  oslog = sub_1BB86EFC8();
  v5 = sub_1BB8732F4();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v11 = v7;
    *(_DWORD *)v6 = 136446210;
    swift_getErrorValue();
    v8 = sub_1BB87456C();
    sub_1BA5D2E14(v8, v9, &v11);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BA493000, oslog, v5, "Sports data service failed to fetch featured event resource; error = %{public}s",
      v6,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v7, -1, -1);
    MEMORY[0x1BCCE5C38](v6, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1BB0D4288()
{
  return objectdestroy_3Tm_2();
}

uint64_t sub_1BB0D4290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v9 = *(_OWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_WORD *)(v1 + 48);
  v6 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_1BA8195A4;
  *(_OWORD *)(v6 + 16) = v9;
  *(_QWORD *)(v6 + 32) = v4;
  *(_WORD *)(v6 + 40) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 48) = v7;
  *v7 = v6;
  v7[1] = sub_1BB0C4CC8;
  return sub_1BB0C4D40(a1, v6 + 16, (_BYTE *)(v6 + 41));
}

uint64_t sub_1BB0D4350@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB0C6228(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), a2);
}

void sub_1BB0D4370(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3A8E50)
  {
    v2 = type metadata accessor for SportsDataVisualizationResponse();
    v3 = sub_1BB0D43E4();
    v4 = sub_1BB0D4400();
    v5 = type metadata accessor for SportsDataServiceBatchResponse(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3A8E50);
  }
}

uint64_t sub_1BB0D43E4()
{
  return sub_1BA4A2870(&qword_1ED3A9288, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponse, (uint64_t)&unk_1BB8AAF88);
}

uint64_t sub_1BB0D4400()
{
  return sub_1BA4A2870(&qword_1ED3A9280, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponse, (uint64_t)&unk_1BB8AAF60);
}

uint64_t sub_1BB0D441C()
{
  return objectdestroy_3Tm_2();
}

uint64_t sub_1BB0D4424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v9;

  v9 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_BYTE *)(v1 + 48);
  v7 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_1BA8195A4;
  *(_BYTE *)(v7 + 80) = v6;
  *(_QWORD *)(v7 + 40) = v4;
  *(_QWORD *)(v7 + 48) = v5;
  *(_OWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1BB0D44B4()
{
  return objectdestroy_3Tm_2();
}

uint64_t objectdestroy_3Tm_2()
{
  uint64_t v0;

  swift_release();
  sub_1BA98B574(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1BB0D44FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v9;

  v9 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_BYTE *)(v1 + 48);
  v7 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_1BA4B0D38;
  *(_BYTE *)(v7 + 80) = v6;
  *(_QWORD *)(v7 + 40) = v4;
  *(_QWORD *)(v7 + 48) = v5;
  *(_OWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1BB0D458C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BA8195A4;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_1BB0D45EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v7 = *a1;
  swift_retain();
  v8 = sub_1BB0D5704(MEMORY[0x1E0DEE9E0], v7, a2);
  swift_release();
  sub_1BA4C2DD8(a3, a4, type metadata accessor for SportsDataServiceBatchResourceRequest);
  result = sub_1BB0D75A0();
  *(_QWORD *)(a4 + *(int *)(result + 52)) = v8;
  return result;
}

uint64_t sub_1BB0D4678(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v2)
      break;
    v7 = MEMORY[0x1E0DEE9D8];
    result = sub_1BB873DD4();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (void *)MEMORY[0x1BCCE4630](v4, a1);
      }
      else
      {
        v5 = *(void **)(a1 + 8 * v4 + 32);
        swift_unknownObjectRetain();
      }
      ++v4;
      sub_1BB0C311C(v5);
      *(_QWORD *)(swift_allocObject() + 16) = v5;
      swift_unknownObjectRetain();
      v6 = (void *)sub_1BB86E854();
      sub_1BB0D6C54();
      sub_1BB86E974();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();

      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      if (v2 == v4)
        return v7;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BB0D4840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  int EnumCaseMultiPayload;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD v30[4];
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = a2;
  v4 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1E0C80A78](v4);
  v38 = (uint64_t)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86C67C();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1E0C80A78](v36);
  v35 = (uint64_t)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SportsDataServiceRequest(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v34 = (uint64_t)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v30 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v30[1] = v2;
    v43 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v17 = *(unsigned __int8 *)(v10 + 80);
    v18 = a1 + ((v17 + 32) & ~v17);
    v41 = *(_QWORD *)(v10 + 72);
    v31 = (v17 + 16) & ~v17;
    v32 = (_QWORD *)(v42 + 56);
    v19 = v31 + v11;
    v20 = (_QWORD *)(v42 + 56);
    v30[2] = v17 | 7;
    v30[3] = v19;
    v33 = v9;
    while (1)
    {
      v23 = *__swift_project_boxed_opaque_existential_1(v20, *(_QWORD *)(v42 + 80));
      sub_1BA4C2DD8(v18, (uint64_t)v14, type metadata accessor for SportsDataServiceRequest);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          v25 = v37;
          v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v39 + 32))(v37, v14, v40);
          MEMORY[0x1E0C80A78](v26);
          v30[-2] = v23;
          v30[-1] = v25;
          sub_1BB86EC14();
          v27 = v34;
          sub_1BA4C2DD8(v18, v34, type metadata accessor for SportsDataServiceRequest);
          v28 = swift_allocObject();
          sub_1BA5193C4(v27, v28 + v31, type metadata accessor for SportsDataServiceRequest);
          v29 = (void *)sub_1BB86E854();
          sub_1BB0D7BA0(0);
          type metadata accessor for SportsDataServiceRequestFetcher();
          sub_1BB86E98C();
          v20 = v32;
          swift_release();
          swift_release();

          (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v40);
          goto LABEL_5;
        }
        v21 = v38;
        v22 = type metadata accessor for SportsDataServiceResourceRequest;
        sub_1BA5193C4((uint64_t)v14, v38, type metadata accessor for SportsDataServiceResourceRequest);
        sub_1BB0BDEB4(v21, v18);
      }
      else
      {
        v21 = v35;
        v22 = type metadata accessor for SportsDataServiceURLRequest;
        sub_1BA5193C4((uint64_t)v14, v35, type metadata accessor for SportsDataServiceURLRequest);
        sub_1BB0BBF54(v21 + *(int *)(v36 + 24), v21, 1);
      }
      sub_1BA4A2E80(v21, v22);
LABEL_5:
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v18 += v41;
      if (!--v15)
        return v43;
    }
  }
  return result;
}

uint64_t sub_1BB0D4C00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int64_t v4;
  int v5;
  int v6;
  char v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    result = sub_1BA580CE4(v1);
    v4 = result;
    v6 = v5;
    v8 = v7 & 1;
    v21 = v1 + 56;
    v20 = v1;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v1 + 32))
    {
      if (((*(_QWORD *)(v21 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        goto LABEL_11;
      if (*(_DWORD *)(v1 + 36) != v6)
        goto LABEL_12;
      v9 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v4);
      v10 = *v9;
      v11 = v9[1];
      v22 = v8;
      type metadata accessor for SportsDataVisualizationAllRequest();
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v10;
      *(_QWORD *)(v12 + 24) = v11;
      *(_WORD *)(v12 + 32) = 1;
      v25 = v10;
      v26 = v11;
      swift_bridgeObjectRetain_n();
      v24 = sub_1BB873060();
      v13 = v25;
      v14 = v26;
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(&v23, v13, v14);
      swift_bridgeObjectRelease();
      v15 = v24;
      v16 = swift_arrayDestroy();
      *(_QWORD *)(v12 + 40) = v15;
      MEMORY[0x1E0C80A78](v16);
      type metadata accessor for SportsDataServiceBatchRequest(0);
      sub_1BB86EC14();
      v17 = (void *)sub_1BB86E854();
      sub_1BB0D4370(0);
      sub_1BB86E980();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      sub_1BB873DB0();
      sub_1BB873DE0();
      v1 = v20;
      sub_1BB873DEC();
      sub_1BB873DBC();
      result = sub_1BA57FFE8(v4, v6, v22 & 1, v20);
      v4 = result;
      v6 = v18;
      v8 = v19 & 1;
      if (!--v2)
      {
        sub_1BA8CA884(result, v18, v8);
        return v27;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB0D4EA4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  char v43;
  _QWORD *v44;

  v5 = a2 + 64;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    while (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      if (*(_QWORD *)(a3 + 16))
      {
LABEL_23:
        v16 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v12);
        v18 = *v16;
        v17 = v16[1];
        swift_bridgeObjectRetain();
        v19 = sub_1BA6E35A8(v18, v17);
        if ((v20 & 1) != 0)
        {
          v21 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v19);
          v39 = *v21;
          v40 = v21[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v44 = a1;
          v23 = sub_1BA6E35A8(v39, v40);
          v24 = a1[2];
          v25 = (v22 & 1) == 0;
          v26 = v24 + v25;
          if (__OFADD__(v24, v25))
            goto LABEL_39;
          if (a1[3] >= v26)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v43 = v22;
              v38 = v23;
              sub_1BB4C216C();
              v23 = v38;
              v22 = v43;
            }
          }
          else
          {
            v42 = v22;
            sub_1BB4AE750(v26, isUniquelyReferenced_nonNull_native);
            v27 = sub_1BA6E35A8(v39, v40);
            v29 = v28 & 1;
            v22 = v42;
            if ((v42 & 1) != v29)
              goto LABEL_41;
            v23 = v27;
          }
          a1 = v44;
          if ((v22 & 1) != 0)
          {
            v30 = (uint64_t *)(v44[7] + 16 * v23);
            swift_bridgeObjectRelease();
            *v30 = v18;
            v30[1] = v17;
          }
          else
          {
            v44[(v23 >> 6) + 8] |= 1 << v23;
            v31 = (uint64_t *)(v44[6] + 16 * v23);
            *v31 = v39;
            v31[1] = v40;
            v32 = (uint64_t *)(v44[7] + 16 * v23);
            *v32 = v18;
            v32[1] = v17;
            v33 = v44[2];
            v34 = __OFADD__(v33, 1);
            v35 = v33 + 1;
            if (v34)
              goto LABEL_40;
            v44[2] = v35;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v13 >= v9)
      goto LABEL_36;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v9)
        goto LABEL_36;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v9)
          goto LABEL_36;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
        {
          v10 = v13 + 3;
          if (v13 + 3 >= v9)
            goto LABEL_36;
          v14 = *(_QWORD *)(v5 + 8 * v10);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_23;
  }
  v15 = v13 + 4;
  if (v15 >= v9)
  {
LABEL_36:
    swift_release();
    return (uint64_t)a1;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v9)
      goto LABEL_36;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB0D51B0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int isUniquelyReferenced_nonNull_native;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  _QWORD *v71;

  v62 = a4;
  v63 = a1;
  sub_1BA4B07F0(0, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v57 - v7;
  v68 = type metadata accessor for SportsRoster();
  v9 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v61 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v66 = (uint64_t)&v57 - v12;
  v13 = *(_QWORD *)(a2 + 64);
  v64 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v65 = (unint64_t)(v14 + 63) >> 6;
  v69 = a2;
  swift_bridgeObjectRetain();
  v17 = 0;
  v58 = a3;
  v67 = v8;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_25;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v21 >= v65)
      goto LABEL_46;
    v22 = *(_QWORD *)(v64 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v65)
        goto LABEL_46;
      v22 = *(_QWORD *)(v64 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v65)
          goto LABEL_46;
        v22 = *(_QWORD *)(v64 + 8 * v17);
        if (!v22)
        {
          v17 = v21 + 3;
          if (v21 + 3 >= v65)
            goto LABEL_46;
          v22 = *(_QWORD *)(v64 + 8 * v17);
          if (!v22)
            break;
        }
      }
    }
LABEL_24:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_25:
    v70 = v17;
    v24 = (uint64_t *)(*(_QWORD *)(v69 + 48) + 16 * v20);
    v25 = v24[1];
    if (!*(_QWORD *)(a3 + 16))
    {
      v18 = a3;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v68);
      swift_bridgeObjectRetain();
LABEL_5:
      sub_1BA5C699C((uint64_t)v8, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
      goto LABEL_6;
    }
    v26 = *v24;
    swift_bridgeObjectRetain_n();
    v27 = sub_1BA6E35A8(v26, v25);
    v18 = a3;
    if ((v28 & 1) != 0)
    {
      v8 = v67;
      sub_1BA4C2DD8(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v9 + 72) * v27, (uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
      v29 = 0;
    }
    else
    {
      v29 = 1;
      v8 = v67;
    }
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v31 = v9;
    v32 = v68;
    v30(v8, v29, 1, v68);
    swift_bridgeObjectRelease();
    v33 = v32;
    v9 = v31;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v8, 1, v33) == 1)
      goto LABEL_5;
    sub_1BA5193C4((uint64_t)v8, v66, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
    v34 = v62;
    if (!*(_QWORD *)(v62 + 16))
      goto LABEL_37;
    swift_bridgeObjectRetain();
    v35 = sub_1BA6E35A8(v26, v25);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_37:
      sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
      v8 = v67;
      goto LABEL_6;
    }
    v37 = (uint64_t *)(*(_QWORD *)(v34 + 56) + 16 * v35);
    v39 = *v37;
    v38 = v37[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8(v66, v61, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
    v40 = v63;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v71 = v40;
    v60 = v38;
    v43 = sub_1BA6E35A8(v39, v38);
    v44 = v40[2];
    v45 = (v42 & 1) == 0;
    v46 = v44 + v45;
    if (__OFADD__(v44, v45))
      goto LABEL_48;
    v47 = v42;
    v48 = v40[3];
    v59 = v39;
    if (v48 >= v46)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C92E8();
      v18 = v58;
      v49 = v60;
    }
    else
    {
      sub_1BB4BA240(v46, isUniquelyReferenced_nonNull_native);
      v49 = v60;
      v50 = sub_1BA6E35A8(v39, v60);
      if ((v47 & 1) != (v51 & 1))
        goto LABEL_51;
      v43 = v50;
      v18 = v58;
    }
    v63 = v71;
    if ((v47 & 1) != 0)
    {
      sub_1BA7229AC(v61, v71[7] + *(_QWORD *)(v31 + 72) * v43, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
    }
    else
    {
      v71[(v43 >> 6) + 8] |= 1 << v43;
      v52 = (uint64_t *)(v63[6] + 16 * v43);
      *v52 = v59;
      v52[1] = v49;
      sub_1BA5193C4(v61, v63[7] + *(_QWORD *)(v31 + 72) * v43, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
      v53 = v63[2];
      v54 = __OFADD__(v53, 1);
      v55 = v53 + 1;
      if (v54)
        goto LABEL_49;
      v63[2] = v55;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
    v8 = v67;
    v9 = v31;
LABEL_6:
    v17 = v70;
    swift_bridgeObjectRelease();
    a3 = v18;
  }
  v23 = v21 + 4;
  if (v23 >= v65)
  {
LABEL_46:
    swift_release();
    return (uint64_t)v63;
  }
  v22 = *(_QWORD *)(v64 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v65)
      goto LABEL_46;
    v22 = *(_QWORD *)(v64 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_24;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB0D5704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  int64_t v23;
  uint64_t v24;

  v24 = a1;
  v4 = v3;
  v7 = a2 + 64;
  v8 = 1 << *(_BYTE *)(a2 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a2 + 64);
  v23 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * i);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    v22 = v21;
    sub_1BB0BED14((uint64_t)&v24, v20, v19, v22, a3);
    if (v4)
    {
      swift_release();

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }

    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v12 >= v23)
      goto LABEL_22;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    if (!v16)
      break;
LABEL_13:
    v10 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v23)
    goto LABEL_22;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_12;
  v17 = v12 + 2;
  if (v12 + 2 >= v23)
  {
LABEL_22:
    swift_release();
    return v24;
  }
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_12:
    v12 = v17;
    goto LABEL_13;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v23)
      goto LABEL_22;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_13;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1BB0D58BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v21 = MEMORY[0x1E0DEE9D8];
  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    while (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      if (*(_QWORD *)(a2 + 16))
      {
LABEL_24:
        v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
        v17 = *v16;
        v18 = v16[1];
        swift_bridgeObjectRetain_n();
        sub_1BA6E35A8(v17, v18);
        if ((v19 & 1) != 0)
        {
          swift_unknownObjectRetain();
          v20 = swift_bridgeObjectRelease_n();
          MEMORY[0x1BCCE36AC](v20);
          if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          result = sub_1BB872DCC();
        }
        else
        {
          result = swift_bridgeObjectRelease_n();
        }
      }
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v13 >= v8)
      goto LABEL_28;
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_28;
      v14 = *(_QWORD *)(v4 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_28;
        v14 = *(_QWORD *)(v4 + 8 * v10);
        if (!v14)
        {
          v10 = v13 + 3;
          if (v13 + 3 >= v8)
            goto LABEL_28;
          v14 = *(_QWORD *)(v4 + 8 * v10);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    if (*(_QWORD *)(a2 + 16))
      goto LABEL_24;
  }
  v15 = v13 + 4;
  if (v15 >= v8)
  {
LABEL_28:
    swift_release();
    return v21;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_28;
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_1BB0D5AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;

  v35 = a6;
  v33 = a4;
  v34 = a5;
  v31 = a2;
  v32 = a3;
  sub_1BA4B07F0(0, &qword_1ED3AA8D8, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseScoreItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - v11;
  v30 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  v13 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29 = (uint64_t)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v27 = (uint64_t)&v25 - v16;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
    return MEMORY[0x1E0DEE9D8];
  v18 = *(_QWORD *)(type metadata accessor for SportsDataVisualizationResponseItem() - 8);
  v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v28 = *(_QWORD *)(v18 + 72);
  v25 = a1;
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x1E0DEE9D8];
  v26 = a7;
  do
  {
    sub_1BB0C9340(v19, v32, v34, a7, (uint64_t)v12);
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v30) == 1)
    {
      sub_1BA5C699C((uint64_t)v12, &qword_1ED3AA8D8, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    }
    else
    {
      v21 = v27;
      sub_1BA5193C4((uint64_t)v12, v27, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      sub_1BA5193C4(v21, v29, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1BB392B24(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v23 = *(_QWORD *)(v20 + 16);
      v22 = *(_QWORD *)(v20 + 24);
      if (v23 >= v22 >> 1)
        v20 = sub_1BB392B24(v22 > 1, v23 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v23 + 1;
      sub_1BA5193C4(v29, v20+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v23, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      a7 = v26;
    }
    v19 += v28;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1BB0D5D6C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  result = MEMORY[0x1E0DEE9D8];
  v11 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        swift_bridgeObjectRetain_n();
        sub_1BA6E35A8(v7, v8);
        if ((v9 & 1) != 0)
        {
          swift_unknownObjectRetain();
          v10 = swift_bridgeObjectRelease_n();
          MEMORY[0x1BCCE36AC](v10);
          if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1BB0D5E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v28[6];
  __int128 v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v34 = a2;
  v35 = a3;
  v33 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1E0C80A78](v33);
  v36 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  MEMORY[0x1E0C80A78](v6);
  v32 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v31);
  v28[5] = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v38 = (char *)v28 - v10;
  v11 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v30 = (char *)v28 - v15;
  MEMORY[0x1E0C80A78](v16);
  v37 = (char *)v28 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v28 - v19;
  MEMORY[0x1E0C80A78](v21);
  v43 = (uint64_t)v28 - v23;
  result = MEMORY[0x1E0DEE9D8];
  v44 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(a1 + 16))
  {
    v28[4] = v3;
    v41 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v25 = *(_QWORD *)(v22 + 72);
    v29 = xmmword_1BB87FC80;
    v39 = v11;
    v40 = v13;
    v42 = v25;
    v26 = v43;
    sub_1BA4C2DD8(a1 + v41, v43, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
    sub_1BA4C2DD8(v26, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
    v27 = (char *)&loc_1BB0D60E8 + 4 * a0a[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1BB0D6710(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;

  v55 = type metadata accessor for SportsDataVisualizationResponseData();
  v48 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SportsDataVisualizationResponse();
  MEMORY[0x1E0C80A78](v5);
  v52 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB0D7BA0(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0D4370(0);
  v12 = *(_QWORD *)(a2 + *(int *)(v11 + 44));
  v51 = *(_QWORD *)(v12 + 16);
  if (!v51)
    return MEMORY[0x1E0DEE9D8];
  v50 = &v10[*(int *)(v7 + 52)];
  v49 = v12 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  swift_bridgeObjectRetain();
  v13 = 0;
  v14 = MEMORY[0x1E0DEE9D8];
  v46 = v10;
  v47 = v8;
  v45 = v12;
  while (1)
  {
    if (v13 >= *(_QWORD *)(v12 + 16))
      goto LABEL_36;
    sub_1BA4C2DD8(v49 + *(_QWORD *)(v8 + 72) * v13, (uint64_t)v10, sub_1BB0D7BA0);
    v15 = v52;
    sub_1BA4C2DD8((uint64_t)v50, v52, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponse);
    sub_1BA4A2E80((uint64_t)v10, sub_1BB0D7BA0);
    sub_1BAC8B1E0();
    v16 = sub_1BB86E1E8();
    sub_1BA4A2E80(v15, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponse);
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
      break;
    swift_bridgeObjectRelease();
LABEL_4:
    if (++v13 == v51)
    {
      swift_bridgeObjectRelease();
      return v14;
    }
  }
  v53 = v16;
  v54 = v13;
  v18 = v16 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
  v19 = *(_QWORD *)(v48 + 72);
  while (1)
  {
    sub_1BA4C2DD8(v18, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseData);
    sub_1BB0D7C54();
    v20 = sub_1BB86E1E8();
    v21 = *(_QWORD *)(v20 + 16);
    v22 = *(_QWORD *)(v14 + 16);
    v23 = v22 + v21;
    if (__OFADD__(v22, v21))
      break;
    v24 = v20;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v23 <= *(_QWORD *)(v14 + 24) >> 1)
    {
      v26 = *(_QWORD *)(v24 + 16);
      if (!v26)
        goto LABEL_8;
    }
    else
    {
      if (v22 <= v23)
        v27 = v22 + v21;
      else
        v27 = v22;
      v14 = sub_1BB392B10(isUniquelyReferenced_nonNull_native, v27, 1, v14);
      v26 = *(_QWORD *)(v24 + 16);
      if (!v26)
      {
LABEL_8:
        if (v21)
          goto LABEL_33;
        goto LABEL_9;
      }
    }
    v28 = *(_QWORD *)(v14 + 16);
    v29 = (*(_QWORD *)(v14 + 24) >> 1) - v28;
    v30 = type metadata accessor for SportsDataVisualizationResponseItem();
    if (v29 < (uint64_t)v26)
      goto LABEL_34;
    v31 = *(_QWORD *)(v30 - 8);
    v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v33 = *(_QWORD *)(v31 + 72);
    v34 = v14 + v32 + v33 * v28;
    v35 = v24 + v32;
    v36 = v33 * v26;
    v37 = v34 + v36;
    v38 = v35 + v36;
    if (v35 < v37 && v34 < v38)
      goto LABEL_37;
    swift_arrayInitWithCopy();
    if (v26 < v21)
      goto LABEL_33;
    v40 = *(_QWORD *)(v14 + 16);
    v41 = __OFADD__(v40, v26);
    v42 = v40 + v26;
    if (v41)
      goto LABEL_35;
    *(_QWORD *)(v14 + 16) = v42;
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseData);
    v18 += v19;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      v10 = v46;
      v8 = v47;
      v12 = v45;
      v13 = v54;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BB0D6AD0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AB060, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BB0D6AF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1BA8195A4;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t objectdestroy_42Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0D6B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1BA8195A4;
  *(_OWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 24) = a1;
  return swift_task_switch();
}

void sub_1BB0D6BF0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA4EFE00(255, a3);
    v4 = sub_1BB872814();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BB0D6C54()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AB200)
  {
    sub_1BA4EFE00(255, (unint64_t *)&qword_1ED3CF9B0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AB200);
  }
}

void sub_1BB0D6CC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AAC58)
  {
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AAC58);
  }
}

void sub_1BB0D6D2C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  LOBYTE(v3) = *(_BYTE *)(v2 + 104);
  sub_1BB0C9F44(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 64), a2, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), v3, *(_QWORD *)(v2 + 112));
}

void sub_1BB0D6D78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB8B8)
  {
    sub_1BA4AD288(255, (unint64_t *)&unk_1ED3D59D0, (uint64_t)&type metadata for SportsDataVisualization, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB8B8);
  }
}

_QWORD *sub_1BB0D6DE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB0CFADC(a1, *(char **)(v2 + 24), *(char **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(char **)(v2 + 64), a2);
}

uint64_t sub_1BB0D6E08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB0D6E2C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BB0D03C0(a1, v2[4], v2[5], v2[6], v2[7], v2[8], a2, v2[9]);
}

uint64_t sub_1BB0D6E5C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB0D6ECC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  int isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  _QWORD v39[2];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;

  v2 = type metadata accessor for SportsEventStatusResponseEmbed();
  v48 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SportsEventStatusResponseData();
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for SportsEventStatusResponse();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)sub_1BA8F3E3C(MEMORY[0x1E0DEE9D8]);
  v44 = *(_QWORD *)(a1 + 16);
  if (!v44)
    return (uint64_t)v12;
  v43 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v42 = *(_QWORD *)(v9 + 72);
  v39[1] = a1;
  swift_bridgeObjectRetain();
  v13 = 0;
  v14 = type metadata accessor for SportsEventStatusResponseEmbed;
  v47 = v7;
  v40 = v11;
  while (1)
  {
    sub_1BA4C2DD8(v43 + v42 * v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponse);
    sub_1BAB69A18();
    v15 = sub_1BB86E1E8();
    if (*(_QWORD *)(v15 + 16))
      break;
LABEL_4:
    ++v13;
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponse);
    if (v13 == v44)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v12;
    }
  }
  v50 = *(_QWORD *)(v15 + 16);
  v45 = v15;
  v46 = v13;
  v16 = v41;
  v17 = v15 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  swift_bridgeObjectRetain();
  v49 = *(_QWORD *)(v16 + 72);
  while (1)
  {
    sub_1BA4C2DD8(v17, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseData);
    v19 = *v7;
    v20 = v7[1];
    v21 = (uint64_t)v7;
    v22 = (uint64_t)v4;
    v23 = v14;
    sub_1BA4C2DD8(v21, (uint64_t)v4, (uint64_t (*)(_QWORD))v14);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v51 = v12;
    v26 = sub_1BA6E35A8(v19, v20);
    v27 = v12[2];
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
      break;
    v30 = v25;
    if (v12[3] >= v29)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C930C();
    }
    else
    {
      sub_1BB4BA264(v29, isUniquelyReferenced_nonNull_native);
      v31 = sub_1BA6E35A8(v19, v20);
      if ((v30 & 1) != (v32 & 1))
        goto LABEL_22;
      v26 = v31;
    }
    v4 = (char *)v22;
    v12 = v51;
    if ((v30 & 1) != 0)
    {
      v18 = v51[7] + *(_QWORD *)(v48 + 72) * v26;
      v14 = v23;
      sub_1BA7229AC(v22, v18, (uint64_t (*)(_QWORD))v23);
    }
    else
    {
      v51[(v26 >> 6) + 8] |= 1 << v26;
      v33 = (uint64_t *)(v12[6] + 16 * v26);
      *v33 = v19;
      v33[1] = v20;
      v34 = v12[7] + *(_QWORD *)(v48 + 72) * v26;
      v14 = v23;
      sub_1BA5193C4(v22, v34, (uint64_t (*)(_QWORD))v23);
      v35 = v12[2];
      v36 = __OFADD__(v35, 1);
      v37 = v35 + 1;
      if (v36)
        goto LABEL_21;
      v12[2] = v37;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v47;
    sub_1BA4A2E80((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseData);
    v17 += v49;
    if (!--v50)
    {
      swift_bridgeObjectRelease();
      v11 = v40;
      v13 = v46;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB0D7274(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v5 = (void *)*(v2 - 1);
    v6 = *v2;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v5, sel_identifier);
    v8 = sub_1BB8729A0();
    v10 = v9;

    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = sub_1BA6E35A8(v8, v10);
    v14 = v3[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      break;
    v17 = v12;
    if (v3[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v12 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BB4C9330();
        if ((v17 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BB4BA288(v16, isUniquelyReferenced_nonNull_native);
      v18 = sub_1BA6E35A8(v8, v10);
      if ((v17 & 1) != (v19 & 1))
        goto LABEL_21;
      v13 = v18;
      if ((v17 & 1) != 0)
      {
LABEL_3:
        v4 = v3[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v4 + 8 * v13) = v6;
        goto LABEL_4;
      }
    }
    v3[(v13 >> 6) + 8] |= 1 << v13;
    v20 = (uint64_t *)(v3[6] + 16 * v13);
    *v20 = v8;
    v20[1] = v10;
    *(_QWORD *)(v3[7] + 8 * v13) = v6;
    v21 = v3[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_20;
    v3[2] = v23;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 += 2;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB0D7478@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB0D0FE0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB0D7490(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB0D74E0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB0D7530()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0D7554@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  *a2 = *(_QWORD *)(v2 + 16);
  a2[1] = v3;
  swift_unknownObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1BB0D7588()
{
  return sub_1BB0C4640();
}

uint64_t sub_1BB0D75A0()
{
  uint64_t result;

  result = qword_1ED3A79A0;
  if (!qword_1ED3A79A0)
  {
    sub_1BA8CB2A8(255, (unint64_t *)&qword_1ED3AAC38, (void (*)(uint64_t))type metadata accessor for SportsRoster);
    type metadata accessor for SportsDataServiceBatchResourceRequest(255);
    sub_1BB0D7694((unint64_t *)&qword_1ED3AAC50, sub_1BB0D7678, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_1BB0D7694((unint64_t *)&qword_1ED3AAC40, sub_1BB0D7714, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    type metadata accessor for SportsDataServiceResponse();
  }
  return result;
}

uint64_t sub_1BB0D7678()
{
  return sub_1BA4A2870(&qword_1ED3A56D8, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, (uint64_t)&protocol conformance descriptor for SportsRoster);
}

uint64_t sub_1BB0D7694(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  result = *a1;
  if (!result)
  {
    sub_1BA8CB2A8(255, (unint64_t *)&qword_1ED3AAC38, (void (*)(uint64_t))type metadata accessor for SportsRoster);
    v10 = v9;
    v11[0] = a3;
    v11[1] = a2();
    result = MEMORY[0x1BCCE5B24](a4, v10, v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB0D7714()
{
  return sub_1BA4A2870(&qword_1ED3A56D0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, (uint64_t)&protocol conformance descriptor for SportsRoster);
}

uint64_t sub_1BB0D7730@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB0C4814(*(id *)(v2 + 16), a1, a2);
}

void sub_1BB0D7748(void *a1)
{
  uint64_t v1;

  sub_1BB0C49BC(a1, *(void **)(v1 + 16));
}

uint64_t sub_1BB0D7750()
{
  uint64_t v0;

  return sub_1BAFF9D88(*(_QWORD **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1BB0D776C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceBatchResourceRequest(0) - 8) + 80);
  return sub_1BB0D45EC(a1, a2, v3 + ((v7 + 16) & ~v7), a3);
}

uint64_t objectdestroy_78Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for SportsDataServiceBatchResourceRequest(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  v4 = sub_1BB86DDB0();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1BB0D7878(uint64_t a1)
{
  return sub_1BB0D9868(a1, type metadata accessor for SportsDataServiceBatchResourceRequest, (uint64_t (*)(uint64_t, uint64_t))sub_1BAFF9E0C);
}

unint64_t sub_1BB0D788C()
{
  unint64_t result;

  result = qword_1EF2BB078;
  if (!qword_1EF2BB078)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E13E8, &type metadata for SportsDataServiceRequestFetcher.Errors);
    atomic_store(result, &qword_1EF2BB078);
  }
  return result;
}

uint64_t sub_1BB0D78D0()
{
  uint64_t v0;

  return sub_1BB0D3BD4(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1BB0D78E8(uint64_t a1)
{
  return sub_1BB0D7BC4(a1, (uint64_t *)&unk_1ED3A7980, (void (*)(uint64_t))type metadata accessor for SportsEventStatusResponse, (void (*)(void))sub_1BB0D790C, (void (*)(void))sub_1BB0D7928);
}

uint64_t sub_1BB0D790C()
{
  return sub_1BA4A2870(&qword_1ED3A79F8, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponse, (uint64_t)&unk_1BB8A4C24);
}

uint64_t sub_1BB0D7928()
{
  return sub_1BA4A2870(&qword_1ED3A79F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponse, (uint64_t)&unk_1BB8A4BFC);
}

uint64_t sub_1BB0D7944(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1BA8195A4;
  return sub_1BB0D1200(a1, a2, v2);
}

uint64_t sub_1BB0D79A8()
{
  return sub_1BAFFA9E8();
}

uint64_t sub_1BB0D79C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceRequest(0) - 8) + 80);
  return sub_1BB0C0908(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v2 + ((v5 + 16) & ~v5), (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponse, (void (*)(uint64_t))sub_1BB0D790C, sub_1BB0D78E8, a2);
}

uint64_t sub_1BB0D7A40()
{
  uint64_t v0;

  return sub_1BAFFA0A0(*(_QWORD *)(v0 + 16));
}

void (**sub_1BB0D7A5C(uint64_t a1, uint64_t a2))(char *, uint64_t, uint64_t)
{
  return sub_1BB0D90CC(a1, a2);
}

uint64_t sub_1BB0D7A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8) + 80);
  return sub_1BB0BFA64(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), v2 + ((v5 + 16) & ~v5), (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponse, (void (*)(uint64_t))sub_1BB0D790C, sub_1BB0D78E8, a2);
}

uint64_t sub_1BB0D7AF4(void *a1, _QWORD *a2)
{
  return sub_1BB0D8BD8(a1, a2, (uint64_t)&unk_1E72E3420, (void (*)(_QWORD))sub_1BB0D78E8, (uint64_t)sub_1BB0D7B24);
}

uint64_t sub_1BB0D7B24(uint64_t a1, uint64_t a2)
{
  return sub_1BB0D8404(a1, a2, (uint64_t (*)(unint64_t, unint64_t, _QWORD))sub_1BB0BADCC);
}

uint64_t sub_1BB0D7B40()
{
  uint64_t v0;

  return sub_1BAFFAAC0(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1BB0D7B5C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB0D86CC(a1, a2, (uint64_t (*)(_QWORD, double))type metadata accessor for SportsEventStatusResponse, (void (*)(void))sub_1BB0D790C, sub_1BB0D78E8, a3);
}

uint64_t sub_1BB0D7B8C(uint64_t a1)
{
  return sub_1BB0D9868(a1, type metadata accessor for SportsDataServiceResourceRequest, (uint64_t (*)(uint64_t, uint64_t))sub_1BAFFAB50);
}

uint64_t sub_1BB0D7BA0(uint64_t a1)
{
  return sub_1BB0D7BC4(a1, (uint64_t *)&unk_1ED3A7990, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponse, (void (*)(void))sub_1BB0D43E4, (void (*)(void))sub_1BB0D4400);
}

uint64_t sub_1BB0D7BC4(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t), void (*a4)(void), void (*a5)(void))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a3(255);
    type metadata accessor for SportsDataServiceRequest(255);
    a4();
    a5();
    type metadata accessor for SportsDataServiceResponse();
  }
  return result;
}

void sub_1BB0D7C54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3980)
  {
    type metadata accessor for SportsDataVisualizationResponseItem();
    sub_1BA4A2870(&qword_1ED3AA1A8, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseItem, (uint64_t)&unk_1BB8DA038);
    sub_1BA4A2870(&qword_1ED3AA1A0, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseItem, (uint64_t)&unk_1BB8DA010);
    v0 = sub_1BB86E1F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3980);
  }
}

uint64_t sub_1BB0D7CF8()
{
  return sub_1BB0C822C();
}

uint64_t sub_1BB0D7D14(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB0C8330(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(char **)(v2 + 32), *(_BYTE *)(v2 + 40));
}

void sub_1BB0D7D34()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AB020)
  {
    sub_1BB0D7DA0();
    type metadata accessor for SportsFeaturedEventsResource();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AB020);
  }
}

void sub_1BB0D7DA0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t TupleTypeMetadata2;
  uint64_t v2;

  if (!qword_1ED3AB018)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
    sub_1BA4B07F0(255, &qword_1ED3AB030, (uint64_t (*)(uint64_t))sub_1BB0D4370, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5B089C(255, (unint64_t *)&qword_1ED3B9670, (unint64_t *)&qword_1ED3BA030, MEMORY[0x1E0DEDAF0], v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AB018);
  }
}

uint64_t objectdestroy_7Tm()
{
  uint64_t v0;

  sub_1BA98B574(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1BB0D7E80@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB0C89D0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), a2);
}

void sub_1BB0D7EA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A39D0)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA585B04((unint64_t *)&qword_1ED3B95F0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1BA585B04((unint64_t *)&qword_1ED39DA10, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    v0 = sub_1BB86E53C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A39D0);
  }
}

void sub_1BB0D7F90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A2580)
  {
    sub_1BA4AD288(255, &qword_1ED3A1018, (uint64_t)&type metadata for SportsFeaturedAffinityEvent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB0D80C8(&qword_1ED3A2F80, (uint64_t (*)(void))sub_1BB0D8084, MEMORY[0x1E0DEAF40]);
    sub_1BB0D80C8((unint64_t *)&unk_1ED3A2F70, (uint64_t (*)(void))sub_1BB0D8144, MEMORY[0x1E0DEAF10]);
    v0 = sub_1BB86E53C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A2580);
  }
}

unint64_t sub_1BB0D8084()
{
  unint64_t result;

  result = qword_1ED3A2C58;
  if (!qword_1ED3A2C58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB957738, &type metadata for SportsFeaturedAffinityEvent);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C58);
  }
  return result;
}

uint64_t sub_1BB0D80C8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1ED3A1018, (uint64_t)&type metadata for SportsFeaturedAffinityEvent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB0D8144()
{
  unint64_t result;

  result = qword_1ED3A2C48;
  if (!qword_1ED3A2C48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB957710, &type metadata for SportsFeaturedAffinityEvent);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C48);
  }
  return result;
}

uint64_t sub_1BB0D8188()
{
  return sub_1BB0D8790();
}

uint64_t sub_1BB0D819C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceBatchRequest(0) - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0D8224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceBatchRequest(0) - 8) + 80);
  sub_1BA4C2DD8(v2 + ((v5 + 16) & ~v5), a2, type metadata accessor for SportsDataServiceBatchRequest);
  sub_1BB0D4370(0);
  *(_QWORD *)(a2 + *(int *)(v6 + 44)) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB0D828C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB0D82B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceRequest(0) - 8) + 80);
  return sub_1BB0C0908(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v2 + ((v5 + 16) & ~v5), (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponse, (void (*)(uint64_t))sub_1BB0D43E4, sub_1BB0D7BA0, a2);
}

uint64_t sub_1BB0D8338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8) + 80);
  return sub_1BB0BFA64(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), v2 + ((v5 + 16) & ~v5), (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponse, (void (*)(uint64_t))sub_1BB0D43E4, sub_1BB0D7BA0, a2);
}

uint64_t sub_1BB0D83B8(void *a1, _QWORD *a2)
{
  return sub_1BB0D8BD8(a1, a2, (uint64_t)&unk_1E72E35D8, (void (*)(_QWORD))sub_1BB0D7BA0, (uint64_t)sub_1BB0D83E8);
}

uint64_t sub_1BB0D83E8(uint64_t a1, uint64_t a2)
{
  return sub_1BB0D8404(a1, a2, (uint64_t (*)(unint64_t, unint64_t, _QWORD))sub_1BB0BBF54);
}

uint64_t sub_1BB0D8404(uint64_t a1, uint64_t a2, uint64_t (*a3)(unint64_t, unint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8) + 80);
  return a3(v3 + v6, v3 + ((v6 + v7 + v8) & ~v8), 0);
}

uint64_t sub_1BB0D848C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB0D86CC(a1, a2, (uint64_t (*)(_QWORD, double))type metadata accessor for SportsDataVisualizationResponse, (void (*)(void))sub_1BB0D43E4, sub_1BB0D7BA0, a3);
}

uint64_t sub_1BB0D84BC()
{
  uint64_t v0;

  return sub_1BB0C42C0(v0);
}

uint64_t sub_1BB0D84EC(uint64_t a1)
{
  return sub_1BB0D7BC4(a1, &qword_1ED3A7978, (void (*)(uint64_t))type metadata accessor for SportsFeaturedEventsResource, (void (*)(void))sub_1BB0D8510, (void (*)(void))sub_1BB0D852C);
}

uint64_t sub_1BB0D8510()
{
  return sub_1BA4A2870(&qword_1ED3A84C0, (uint64_t (*)(uint64_t))type metadata accessor for SportsFeaturedEventsResource, (uint64_t)&unk_1BB9576E8);
}

uint64_t sub_1BB0D852C()
{
  return sub_1BA4A2870(&qword_1ED3A84B8, (uint64_t (*)(uint64_t))type metadata accessor for SportsFeaturedEventsResource, (uint64_t)&unk_1BB9576C0);
}

uint64_t sub_1BB0D854C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceRequest(0) - 8) + 80);
  return sub_1BB0C0908(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v2 + ((v5 + 16) & ~v5), (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource, (void (*)(uint64_t))sub_1BB0D8510, sub_1BB0D84EC, a2);
}

uint64_t sub_1BB0D85D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8) + 80);
  return sub_1BB0BFA64(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), v2 + ((v5 + 16) & ~v5), (uint64_t (*)(_QWORD))type metadata accessor for SportsFeaturedEventsResource, (void (*)(uint64_t))sub_1BB0D8510, sub_1BB0D84EC, a2);
}

uint64_t sub_1BB0D8650(void *a1, _QWORD *a2)
{
  return sub_1BB0D8BD8(a1, a2, (uint64_t)&unk_1E72E36F0, (void (*)(_QWORD))sub_1BB0D84EC, (uint64_t)sub_1BB0D8680);
}

uint64_t sub_1BB0D8680(uint64_t a1, uint64_t a2)
{
  return sub_1BB0D8404(a1, a2, (uint64_t (*)(unint64_t, unint64_t, _QWORD))sub_1BB0BC2CC);
}

uint64_t sub_1BB0D86A0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB0D86CC(a1, a2, (uint64_t (*)(_QWORD, double))type metadata accessor for SportsFeaturedEventsResource, (void (*)(void))sub_1BB0D8510, sub_1BB0D84EC, a3);
}

uint64_t sub_1BB0D86CC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD, double)@<X2>, void (*a4)(void)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;

  v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceRequest(0) - 8) + 80);
  return sub_1BB0C1D48(*a1, a2, v6 + ((v13 + 16) & ~v13), a3, a4, a5, a6);
}

uint64_t sub_1BB0D8758()
{
  uint64_t v0;

  return sub_1BA989AFC(v0);
}

uint64_t sub_1BB0D8774(uint64_t a1)
{
  return sub_1BB0D98EC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1BA989ABC);
}

uint64_t sub_1BB0D8790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char v8;

  v1 = *(_QWORD *)(v0 + 16);
  v5 = *(_OWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_BYTE *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  v6 = v5;
  v7 = v2;
  v8 = v3;
  return sub_1BA98843C((uint64_t)&v6);
}

uint64_t sub_1BB0D87FC()
{
  uint64_t v0;

  return sub_1BB0C42C0(v0);
}

uint64_t sub_1BB0D882C(uint64_t a1)
{
  return sub_1BB0D7BC4(a1, &qword_1EF2BB090, (void (*)(uint64_t))type metadata accessor for SportsSyncingConfigV2Resource, (void (*)(void))sub_1BB0D8850, (void (*)(void))sub_1BB0D886C);
}

uint64_t sub_1BB0D8850()
{
  return sub_1BA4A2870(&qword_1EF2BB098, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncingConfigV2Resource, (uint64_t)&protocol conformance descriptor for SportsSyncingConfigV2Resource);
}

uint64_t sub_1BB0D886C()
{
  return sub_1BA4A2870(&qword_1EF2BB0A0, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncingConfigV2Resource, (uint64_t)&protocol conformance descriptor for SportsSyncingConfigV2Resource);
}

uint64_t sub_1BB0D888C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB0D8A98(a1, (void (*)(_QWORD))type metadata accessor for SportsSyncingConfigV2Resource, (void (*)(uint64_t))sub_1BB0D8850, sub_1BB0D882C, a2);
}

uint64_t sub_1BB0D88C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8) + 80);
  return sub_1BB0BF8A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), v2 + ((v5 + 16) & ~v5), (void (*)(_QWORD))type metadata accessor for SportsSyncingConfigV2Resource, (void (*)(void))sub_1BB0D8850, sub_1BB0D882C, a2);
}

uint64_t sub_1BB0D8940(void *a1, _QWORD *a2)
{
  return sub_1BB0D8BD8(a1, a2, (uint64_t)&unk_1E72E3830, (void (*)(_QWORD))sub_1BB0D882C, (uint64_t)sub_1BB0D8970);
}

uint64_t sub_1BB0D8970(uint64_t a1, uint64_t a2)
{
  return sub_1BB0D8404(a1, a2, (uint64_t (*)(unint64_t, unint64_t, _QWORD))sub_1BB0BBBDC);
}

uint64_t sub_1BB0D8990@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB0D8CE8(a1, a2, (void (*)(_QWORD))type metadata accessor for SportsSyncingConfigV2Resource, (void (*)(void))sub_1BB0D8850, sub_1BB0D882C, a3);
}

uint64_t sub_1BB0D89C0()
{
  uint64_t v0;

  return sub_1BA989ADC(v0);
}

uint64_t sub_1BB0D89DC()
{
  uint64_t v0;

  return sub_1BB0C42C0(v0);
}

uint64_t sub_1BB0D8A0C(uint64_t a1)
{
  return sub_1BB0D7BC4(a1, &qword_1EF2BB0B0, (void (*)(uint64_t))type metadata accessor for SportsSyncingConfigResource, (void (*)(void))sub_1BB0D8A30, (void (*)(void))sub_1BB0D8A4C);
}

uint64_t sub_1BB0D8A30()
{
  return sub_1BA4A2870(&qword_1EF2BB0B8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncingConfigResource, (uint64_t)&protocol conformance descriptor for SportsSyncingConfigResource);
}

uint64_t sub_1BB0D8A4C()
{
  return sub_1BA4A2870(&qword_1EF2BB0C0, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncingConfigResource, (uint64_t)&protocol conformance descriptor for SportsSyncingConfigResource);
}

uint64_t sub_1BB0D8A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB0D8A98(a1, (void (*)(_QWORD))type metadata accessor for SportsSyncingConfigResource, (void (*)(uint64_t))sub_1BB0D8A30, sub_1BB0D8A0C, a2);
}

uint64_t sub_1BB0D8A98@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X2>, void (*a3)(uint64_t)@<X3>, uint64_t (*a4)(_QWORD)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceRequest(0) - 8) + 80);
  return sub_1BB0C07F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v5 + ((v11 + 16) & ~v11), a2, a3, a4, a5);
}

uint64_t sub_1BB0D8B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8) + 80);
  return sub_1BB0BF8A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), v2 + ((v5 + 16) & ~v5), (void (*)(_QWORD))type metadata accessor for SportsSyncingConfigResource, (void (*)(void))sub_1BB0D8A30, sub_1BB0D8A0C, a2);
}

uint64_t sub_1BB0D8BAC(void *a1, _QWORD *a2)
{
  return sub_1BB0D8BD8(a1, a2, (uint64_t)&unk_1E72E3970, (void (*)(_QWORD))sub_1BB0D8A0C, (uint64_t)sub_1BB0D8C9C);
}

uint64_t sub_1BB0D8BD8(void *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v11 = *(_QWORD *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 80);
  return sub_1BB0C02A8(a1, a2, *(unsigned __int8 *)(v5 + 16), v5 + v12, *(_QWORD *)(v5 + v13), v5 + ((v13 + v14 + 8) & ~v14), a3, a4, a5);
}

uint64_t sub_1BB0D8C9C(uint64_t a1, uint64_t a2)
{
  return sub_1BB0D8404(a1, a2, (uint64_t (*)(unint64_t, unint64_t, _QWORD))sub_1BB0BB864);
}

uint64_t sub_1BB0D8CBC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB0D8CE8(a1, a2, (void (*)(_QWORD))type metadata accessor for SportsSyncingConfigResource, (void (*)(void))sub_1BB0D8A30, sub_1BB0D8A0C, a3);
}

uint64_t sub_1BB0D8CE8@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;

  v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceRequest(0) - 8) + 80);
  return sub_1BB0C1704(*a1, a2, v6 + ((v13 + 16) & ~v13), a3, a4, a5, a6);
}

uint64_t sub_1BB0D8D74()
{
  uint64_t v0;

  return sub_1BA989A9C(v0);
}

uint64_t sub_1BB0D8D90()
{
  uint64_t v0;

  return sub_1BB0C4170(v0);
}

unint64_t sub_1BB0D8DA8()
{
  unint64_t result;

  result = qword_1ED3A79D0;
  if (!qword_1ED3A79D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEmbedConfigResource, &type metadata for SportsEmbedConfigResource);
    atomic_store(result, (unint64_t *)&qword_1ED3A79D0);
  }
  return result;
}

unint64_t sub_1BB0D8DEC()
{
  unint64_t result;

  result = qword_1ED3A79C8;
  if (!qword_1ED3A79C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEmbedConfigResource, &type metadata for SportsEmbedConfigResource);
    atomic_store(result, (unint64_t *)&qword_1ED3A79C8);
  }
  return result;
}

uint64_t sub_1BB0D8E34(_QWORD *a1, uint64_t a2)
{
  return sub_1BB0D9250(a1, a2, type metadata accessor for SportsDataServiceRequest, (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_1BB0C06E0);
}

uint64_t sub_1BB0D8E60(_QWORD *a1, uint64_t a2)
{
  return sub_1BB0D9250(a1, a2, type metadata accessor for SportsDataServiceURLRequest, (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_1BB0BF6FC);
}

uint64_t sub_1BB0D8E88(uint64_t a1, uint64_t a2)
{
  return sub_1BB0D9408(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, unint64_t))sub_1BB0BFF80);
}

uint64_t sub_1BB0D8EA8(uint64_t a1, uint64_t a2)
{
  return sub_1BB0D8404(a1, a2, (uint64_t (*)(unint64_t, unint64_t, _QWORD))sub_1BB0BB4D4);
}

uint64_t sub_1BB0D8EC8(_QWORD *a1, uint64_t a2)
{
  return sub_1BB0D9750(a1, a2, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BB0C10C0);
}

uint64_t sub_1BB0D8EE8()
{
  uint64_t v0;

  return sub_1BB0C4078(v0);
}

uint64_t sub_1BB0D8F00()
{
  uint64_t v0;

  return sub_1BB0C3F80(v0);
}

uint64_t sub_1BB0D8F18()
{
  uint64_t v0;

  return sub_1BB0C3E88(v0);
}

uint64_t sub_1BB0D8F30()
{
  uint64_t v0;

  return sub_1BB0C3D90(v0);
}

uint64_t sub_1BB0D8F48()
{
  uint64_t v0;

  return sub_1BB0C3C30(v0);
}

uint64_t sub_1BB0D8F60()
{
  uint64_t v0;

  return sub_1BB0C3AC0(v0);
}

uint64_t sub_1BB0D8F78()
{
  uint64_t v0;

  return sub_1BB0C38E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB0D8F90(uint64_t a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    type metadata accessor for SportsDataServiceRequest(255);
    a3();
    a4();
    type metadata accessor for SportsDataServiceResponse();
  }
  return result;
}

unint64_t sub_1BB0D9018()
{
  unint64_t result;

  result = qword_1ED3A81C8;
  if (!qword_1ED3A81C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsTaxonomyGraphResource, &type metadata for SportsTaxonomyGraphResource);
    atomic_store(result, (unint64_t *)&qword_1ED3A81C8);
  }
  return result;
}

unint64_t sub_1BB0D905C()
{
  unint64_t result;

  result = qword_1ED3A81C0;
  if (!qword_1ED3A81C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsTaxonomyGraphResource, &type metadata for SportsTaxonomyGraphResource);
    atomic_store(result, (unint64_t *)&qword_1ED3A81C0);
  }
  return result;
}

uint64_t sub_1BB0D90A4(_QWORD *a1, uint64_t a2)
{
  return sub_1BB0D9250(a1, a2, type metadata accessor for SportsDataServiceRequest, (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_1BB0C05B8);
}

void (**sub_1BB0D90CC(uint64_t a1, uint64_t a2))(char *, uint64_t, uint64_t)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8) + 80);
  return sub_1BAFFA10C(a1, a2, v2 + v6, v2 + ((v6 + v7 + v8) & ~v8));
}

uint64_t objectdestroy_98Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t *v6;

  v1 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1BB86C67C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v3 + v1[5], v4);
  v5(v3 + v1[6], v4);
  v6 = (uint64_t *)(v3 + v1[7]);
  if (v6[3])
  {
    sub_1BA69D314(*v6, v6[1]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0D922C(_QWORD *a1, uint64_t a2)
{
  return sub_1BB0D9250(a1, a2, type metadata accessor for SportsDataServiceURLRequest, (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_1BB0BF53C);
}

uint64_t sub_1BB0D9250(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return a4(*a1, a1[1], a1[2], a2, v4 + ((v8 + 16) & ~v8));
}

uint64_t objectdestroy_101Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t);
  uint64_t *v8;
  uint64_t v10;

  v1 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = *(_QWORD *)(v2 + 64);
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v7(v0 + v3, v4);
  v7(v0 + v3 + v1[5], v4);
  v7(v0 + v3 + v1[6], v4);
  v8 = (uint64_t *)(v0 + v3 + v1[7]);
  if (v8[3])
  {
    sub_1BA69D314(*v8, v8[1]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  v7(v0 + ((((v10 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_1BB0D93EC(uint64_t a1, uint64_t a2)
{
  return sub_1BB0D9408(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, unint64_t))sub_1BB0BFC58);
}

uint64_t sub_1BB0D9408(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, unint64_t))
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 80);
  return a3(a1, a2, *(unsigned __int8 *)(v3 + 16), v3 + v8, *(_QWORD *)(v3 + v9), v3 + ((v9 + v10 + 8) & ~v10));
}

uint64_t objectdestroy_95Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t *v10;

  v1 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  v8 = v0 + v3;
  v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v8, v1);
  v9(v0 + v7, v1);
  v9(v0 + v7 + v5[5], v1);
  v9(v0 + v7 + v5[6], v1);
  v10 = (uint64_t *)(v0 + v7 + v5[7]);
  if (v10[3])
  {
    sub_1BA69D314(*v10, v10[1]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0D95AC(uint64_t a1, uint64_t a2)
{
  return sub_1BB0D8404(a1, a2, (uint64_t (*)(unint64_t, unint64_t, _QWORD))sub_1BB0BB144);
}

uint64_t objectdestroy_92Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceRequest(0) - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = v0 + v2;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      v9 = v3 + *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
      v10 = sub_1BB86DDB0();
      v11 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      break;
    case 1:
      v12 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v2, v12);
      break;
    case 0:
      v5 = sub_1BB86C67C();
      v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v6(v0 + v2, v5);
      v7 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
      v6(v3 + v7[5], v5);
      v6(v3 + v7[6], v5);
      v8 = (uint64_t *)(v3 + v7[7]);
      if (v8[3])
      {
        sub_1BA69D314(*v8, v8[1]);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      break;
  }
  return swift_deallocObject();
}

uint64_t sub_1BB0D9734(_QWORD *a1, uint64_t a2)
{
  return sub_1BB0D9750(a1, a2, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BB0C0A68);
}

uint64_t sub_1BB0D9750(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SportsDataServiceRequest(0) - 8) + 80);
  return a3(*a1, a2, v3 + ((v7 + 16) & ~v7));
}

uint64_t objectdestroy_110Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for SportsDataServiceResourceRequest(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  v4 = sub_1BB86DDB0();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1BB0D9868(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

uint64_t sub_1BB0D98B4()
{
  uint64_t v0;

  return sub_1BA989A60(v0);
}

uint64_t sub_1BB0D98D0(uint64_t a1)
{
  return sub_1BB0D98EC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1BA989A80);
}

uint64_t sub_1BB0D98EC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return a2(a1, v2 + ((v6 + 16) & ~v6));
}

uint64_t sub_1BB0D9960()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0D9984(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v6 = *(_QWORD *)(v2 + 32);
  v7 = *(_BYTE *)(v2 + 40);
  v8 = swift_task_alloc();
  v9 = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(v3 + 16) = v8;
  *(_QWORD *)v8 = v3;
  *(_QWORD *)(v8 + 8) = sub_1BA8195A4;
  *(_BYTE *)(v8 + 96) = v7;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = v6;
  v10 = *a2;
  *(_OWORD *)(v8 + 32) = v9;
  *(_OWORD *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 64) = *((_QWORD *)a2 + 2);
  *(_BYTE *)(v8 + 97) = *((_BYTE *)a2 + 24);
  return swift_task_switch();
}

uint64_t sub_1BB0D9A2C()
{
  return sub_1BB0D79A8();
}

uint64_t sub_1BB0D9A40()
{
  return sub_1BB0D7A40();
}

uint64_t sub_1BB0D9A54()
{
  return sub_1BB0D7B40();
}

uint64_t sub_1BB0D9A68@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB0D7478(a1, a2);
}

char *sub_1BB0D9A7C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  char *v8;
  objc_class *ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  uint64_t v22;
  id v23;
  char *v24;
  id v25;
  char *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  id v30;
  void *v31;
  id v32;
  objc_super v34;

  ObjectType = (objc_class *)swift_getObjectType();
  v18 = sub_1BB86D678();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (double *)((char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView;
  v23 = objc_allocWithZone(MEMORY[0x1E0DC3C28]);
  v24 = v8;
  *(_QWORD *)&v8[v22] = objc_msgSend(v23, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *v21 = a5;
  v21[1] = a6;
  v21[2] = a7;
  v21[3] = a8;
  (*(void (**)(double *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E0DB5D00], v18);
  v25 = objc_allocWithZone((Class)sub_1BB86D834());
  *(_QWORD *)&v24[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_columnDebugView] = sub_1BB86D828();

  v34.receiver = v24;
  v34.super_class = ObjectType;
  v26 = (char *)objc_msgSendSuper2(&v34, sel_initWithFrame_, a1, a2, a3, a4);
  v27 = OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView;
  v28 = *(void **)&v26[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView];
  v29 = v26;
  objc_msgSend(v29, sel_addSubview_, v28);
  objc_msgSend(v29, sel_addSubview_, *(_QWORD *)&v29[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_columnDebugView]);
  v30 = v28;
  sub_1BB873594();
  objc_msgSend(v30, sel_setFrame_);

  v31 = *(void **)&v26[v27];
  objc_msgSend(v31, sel_setClipsToBounds_, 0);
  objc_msgSend(v31, sel_setShowsVerticalScrollIndicator_, 0);
  v32 = v31;
  objc_msgSend(v32, sel_setShowsHorizontalScrollIndicator_, 0);

  return v29;
}

id sub_1BB0D9D5C()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGFloat v10;
  CGFloat Width;
  void *v12;
  objc_super v14;
  CGRect v15;
  CGRect v16;

  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView];
  objc_msgSend(v1, sel_frame);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(v0, sel_bounds);
  v10 = CGRectGetWidth(v15) * 0.5;
  objc_msgSend(v1, sel_bounds);
  Width = CGRectGetWidth(v16);
  MEMORY[0x1BCCE3EF8](v10 - Width * 0.5, v3, v5, v7, v9);
  objc_msgSend(v1, sel_setFrame_);
  v12 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_columnDebugView];
  objc_msgSend(v1, sel_frame);
  return objc_msgSend(v12, sel_setFrame_);
}

uint64_t type metadata accessor for DebugGroupLayoutView()
{
  return objc_opt_self();
}

uint64_t sub_1BB0D9F18()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  void *v8;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView), sel_subviews));
  sub_1BA81CF48();
  v2 = sub_1BB872DB4();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  result = sub_1BB873F30();
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1BCCE4630](i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      swift_getObjectType();
      if (swift_conformsToProtocol2())
        v8 = v7;
      else
        v8 = 0;
      if (v8)
      {
        swift_getObjectType();
        sub_1BB870EDC();
      }

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_1BB0DA078()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  id v7;
  __int128 v8[2];
  uint64_t v9;
  id v10;
  _QWORD v11[4];

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView), sel_subviews));
  sub_1BA81CF48();
  v2 = sub_1BB872DB4();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_14;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1BCCE4630](i, v2);
      else
        v5 = *(id *)(v2 + 8 * i + 32);
      v6 = v5;
      v10 = v5;
      sub_1BB0DA2B4();
      v7 = v6;
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1BA4CECCC(v8, (uint64_t)v11);
        __swift_project_boxed_opaque_existential_1(v11, v11[3]);
        sub_1BB871554();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      }
      else
      {
        v9 = 0;
        memset(v8, 0, sizeof(v8));

        sub_1BB0DA308((uint64_t)v8);
      }
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1BB0DA238()
{
  sub_1BB0DA078();
}

void sub_1BB0DA258()
{
  sub_1BB0DA398(&qword_1EF2BB118, (uint64_t)&unk_1BB8EA2C0);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t sub_1BB0DA290()
{
  return sub_1BB0DA398(&qword_1EF2BB110, (uint64_t)&unk_1BB8EA288);
}

unint64_t sub_1BB0DA2B4()
{
  unint64_t result;

  result = qword_1ED39C400;
  if (!qword_1ED39C400)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED39C400);
  }
  return result;
}

uint64_t sub_1BB0DA308(uint64_t a1)
{
  uint64_t v2;

  sub_1BB0DA344();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BB0DA344()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C408)
  {
    sub_1BB0DA2B4();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C408);
  }
}

uint64_t sub_1BB0DA398(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DebugGroupLayoutView();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB0DA3D4()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB0DA418()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  sub_1BB872AFC(0);
  sub_1BA835484();
  sub_1BB87303C();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  sub_1BA5ABD90(v0, v1);
  return 0;
}

uint64_t destroy for FormatBindResult.FailureReason(uint64_t a1)
{
  return sub_1BA7529B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for FormatBindResult.FailureReason(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BA757FCC(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FormatBindResult.FailureReason(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BA757FCC(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BA7529B4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FormatBindResult.FailureReason(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1BA7529B4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBindResult.FailureReason(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatBindResult.FailureReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BB0DAA00(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatBindResult.FailureReason()
{
  return &type metadata for FormatBindResult.FailureReason;
}

uint64_t initializeWithCopy for FormatBindResult(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v3 = *((unsigned __int8 *)a2 + 32);
  if (v3 > 3)
  {
    v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  }
  else
  {
    v4 = *a2;
    v5 = a2[1];
    v6 = a2[2];
    v7 = a2[3];
    sub_1BA757FCC(*a2, v5, v6, v7, v3);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = v3;
  }
  return a1;
}

uint64_t assignWithCopy for FormatBindResult(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = *((unsigned __int8 *)a2 + 32);
  if (v4 > 3)
  {
    if (v5 <= 3)
    {
      v15 = *(_QWORD *)a2;
      v16 = *((_QWORD *)a2 + 1);
      v18 = *((_QWORD *)a2 + 2);
      v17 = *((_QWORD *)a2 + 3);
      sub_1BA757FCC(*(_QWORD *)a2, v16, v18, v17, v5);
      *(_QWORD *)a1 = v15;
      *(_QWORD *)(a1 + 8) = v16;
      *(_QWORD *)(a1 + 16) = v18;
      *(_QWORD *)(a1 + 24) = v17;
      *(_BYTE *)(a1 + 32) = v5;
      return a1;
    }
LABEL_7:
    v19 = *a2;
    v20 = a2[1];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)a1 = v19;
    *(_OWORD *)(a1 + 16) = v20;
    return a1;
  }
  if (v5 > 3)
  {
    sub_1BA7529B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v4);
    goto LABEL_7;
  }
  v6 = *(_QWORD *)a2;
  v7 = *((_QWORD *)a2 + 1);
  v9 = *((_QWORD *)a2 + 2);
  v8 = *((_QWORD *)a2 + 3);
  sub_1BA757FCC(*(_QWORD *)a2, v7, v9, v8, v5);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v8;
  v14 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v5;
  sub_1BA7529B4(v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for FormatBindResult(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 > 3)
    goto LABEL_5;
  v5 = *(unsigned __int8 *)(a2 + 32);
  if (v5 > 3)
  {
    sub_1BA7529B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v4);
LABEL_5:
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    return a1;
  }
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 32) = v5;
  sub_1BA7529B4(v6, v7, v8, v9, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBindResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  if (v4 + 1 >= 2)
    return v4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FormatBindResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = ~(_BYTE)a2;
  }
  return result;
}

uint64_t sub_1BB0DAC7C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 > 3)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1BB0DAC90(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBindResult()
{
  return &type metadata for FormatBindResult;
}

uint64_t PuzzleMenuConfig.init(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  int v6;
  uint64_t countAndFlagsBits;
  void *object;
  unint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  int v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  int v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _OWORD *v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  _OWORD v87[7];
  _OWORD v88[2];
  Swift::String v89[9];
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  void *v99;
  _QWORD *v100;
  char v101;
  char v102;
  char *v103;
  uint64_t v104;
  void *v105;
  char v106;
  char v107;
  char v108;

  if (!*(_QWORD *)(a1 + 16))
  {
    object = 0;
    countAndFlagsBits = 0;
    goto LABEL_22;
  }
  v4 = sub_1BA6E35A8(25705, 0xE200000000000000);
  if ((v5 & 1) == 0)
  {
    countAndFlagsBits = 0;
    object = 0;
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_13;
LABEL_22:
    v13 = 0;
    v12 = 0;
    goto LABEL_23;
  }
  sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v90);
  v6 = swift_dynamicCast();
  if (v6)
    countAndFlagsBits = v89[0]._countAndFlagsBits;
  else
    countAndFlagsBits = 0;
  if (v6)
    object = v89[0]._object;
  else
    object = 0;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_22;
LABEL_13:
  v9 = sub_1BA6E35A8(1852793705, 0xE400000000000000);
  if ((v10 & 1) != 0)
  {
    sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)&v90);
    v11 = swift_dynamicCast();
    if (v11)
      v12 = v89[0]._countAndFlagsBits;
    else
      v12 = 0;
    if (v11)
      v13 = v89[0]._object;
    else
      v13 = 0;
    if (!*(_QWORD *)(a1 + 16))
    {
LABEL_23:
      v83 = 0;
      v84 = 0;
      if (*(_QWORD *)(a1 + 16))
        goto LABEL_24;
LABEL_52:
      v81 = 0;
      v82 = 0;
      goto LABEL_53;
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_23;
  }
  v24 = sub_1BA6E35A8(0xD000000000000012, 0x80000001BB979B10);
  if ((v25 & 1) == 0)
    goto LABEL_23;
  sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v24, (uint64_t)&v90);
  v26 = swift_dynamicCast();
  if (v26)
    v27 = v89[0]._countAndFlagsBits;
  else
    v27 = 0;
  if (v26)
    v28 = v89[0]._object;
  else
    v28 = 0;
  v83 = v28;
  v84 = v27;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_52;
LABEL_24:
  v14 = sub_1BA6E35A8(0xD000000000000010, 0x80000001BB979B30);
  if ((v15 & 1) == 0)
  {
    v81 = 0;
    v82 = 0;
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_34;
LABEL_53:
    v23 = 0;
    v22 = 0;
    goto LABEL_54;
  }
  sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v90);
  v16 = swift_dynamicCast();
  if (v16)
    v17 = v89[0]._countAndFlagsBits;
  else
    v17 = 0;
  if (v16)
    v18 = v89[0]._object;
  else
    v18 = 0;
  v81 = v18;
  v82 = v17;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_53;
LABEL_34:
  v19 = sub_1BA6E35A8(0x7069746C6F6F74, 0xE700000000000000);
  if ((v20 & 1) != 0)
  {
    sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v19, (uint64_t)&v90);
    v21 = swift_dynamicCast();
    if (v21)
      v22 = v89[0]._countAndFlagsBits;
    else
      v22 = 0;
    if (v21)
      v23 = v89[0]._object;
    else
      v23 = 0;
    if (!*(_QWORD *)(a1 + 16))
    {
LABEL_54:
      v79 = 0;
      v80 = 0;
      v29 = *(_QWORD *)(a1 + 16);
      if (v29)
        goto LABEL_55;
LABEL_78:
      v77 = 0;
      v78 = 0;
      goto LABEL_79;
    }
  }
  else
  {
    v22 = 0;
    v23 = 0;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_54;
  }
  v37 = sub_1BA6E35A8(0x656C746974, 0xE500000000000000);
  if ((v38 & 1) == 0)
    goto LABEL_54;
  sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v37, (uint64_t)&v90);
  v39 = swift_dynamicCast();
  if (v39)
    v40 = v89[0]._countAndFlagsBits;
  else
    v40 = 0;
  if (v39)
    v41 = v89[0]._object;
  else
    v41 = 0;
  v79 = v41;
  v80 = v40;
  v29 = *(_QWORD *)(a1 + 16);
  if (!v29)
    goto LABEL_78;
LABEL_55:
  v30 = sub_1BA6E35A8(0x656C746974627573, 0xE800000000000000);
  if ((v31 & 1) == 0)
  {
    v77 = 0;
    v78 = 0;
    v29 = *(_QWORD *)(a1 + 16);
    if (!v29)
      goto LABEL_79;
    goto LABEL_65;
  }
  sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v30, (uint64_t)&v90);
  v32 = swift_dynamicCast();
  if (v32)
    v33 = v89[0]._countAndFlagsBits;
  else
    v33 = 0;
  if (v32)
    v34 = v89[0]._object;
  else
    v34 = 0;
  v77 = v34;
  v78 = v33;
  v29 = *(_QWORD *)(a1 + 16);
  if (v29)
  {
LABEL_65:
    v35 = sub_1BA6E35A8(0x656E696C6E69, 0xE600000000000000);
    if ((v36 & 1) != 0
      && (sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v35, (uint64_t)&v90), swift_dynamicCast()))
    {
      LOBYTE(v29) = v89[0]._countAndFlagsBits;
    }
    else
    {
      LOBYTE(v29) = 0;
    }
  }
LABEL_79:
  v108 = v29;
  v85 = v23;
  v86 = v22;
  if (!*(_QWORD *)(a1 + 16))
  {
    v107 = 0;
    goto LABEL_90;
  }
  v42 = sub_1BA6E35A8(0xD000000000000011, 0x80000001BB979B50);
  if ((v43 & 1) != 0
    && (sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v42, (uint64_t)&v90), swift_dynamicCast()))
  {
    v44 = v89[0]._countAndFlagsBits;
  }
  else
  {
    v44 = 0;
  }
  v45 = *(_QWORD *)(a1 + 16);
  v107 = v44;
  if (!v45
    || (v46 = sub_1BA6E35A8(0x6574617473, 0xE500000000000000), (v47 & 1) == 0)
    || (sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v46, (uint64_t)&v90), (swift_dynamicCast() & 1) == 0))
  {
LABEL_90:
    v48 = 3;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_102;
    goto LABEL_91;
  }
  PuzzleMenuConfig.State.init(rawValue:)(v89[0]);
  v48 = v90;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_102;
LABEL_91:
  v49 = sub_1BA6E35A8(0x7475626972747461, 0xEA00000000007365);
  if ((v50 & 1) == 0
    || (sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v49, (uint64_t)&v90),
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]), (swift_dynamicCast() & 1) == 0))
  {
LABEL_102:
    v53 = 0;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_108;
    goto LABEL_103;
  }
  v74 = v12;
  v51 = *(_QWORD *)(v89[0]._countAndFlagsBits + 16);
  if (v51)
  {
    v75 = countAndFlagsBits;
    swift_bridgeObjectRetain();
    v52 = v89[0]._countAndFlagsBits + 40;
    v53 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      swift_bridgeObjectRetain();
      v54 = sub_1BB873FE4();
      swift_bridgeObjectRelease();
      if (v54 <= 2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v53 = sub_1BB391C30(0, *((_QWORD *)v53 + 2) + 1, 1, v53);
        v56 = *((_QWORD *)v53 + 2);
        v55 = *((_QWORD *)v53 + 3);
        if (v56 >= v55 >> 1)
          v53 = sub_1BB391C30((char *)(v55 > 1), v56 + 1, 1, v53);
        *((_QWORD *)v53 + 2) = v56 + 1;
        v53[v56 + 32] = v54;
      }
      v52 += 16;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease();
    countAndFlagsBits = v75;
  }
  else
  {
    v53 = (char *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v12 = v74;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_108;
LABEL_103:
  v57 = sub_1BA6E35A8(0x736D657469, 0xE500000000000000);
  if ((v58 & 1) != 0)
  {
    sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v57, (uint64_t)&v90);
    goto LABEL_109;
  }
LABEL_108:
  v90 = 0u;
  v91 = 0u;
LABEL_109:
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v91 + 1))
  {
    sub_1BA6EDA74((uint64_t)&v90);
    goto LABEL_122;
  }
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2B0738, (uint64_t (*)(uint64_t))sub_1BA78647C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_122:
    v62 = 0;
    goto LABEL_126;
  }
  v59 = v12;
  v60 = *(_QWORD *)(v89[0]._countAndFlagsBits + 16);
  if (v60)
  {
    v76 = countAndFlagsBits;
    swift_bridgeObjectRetain();
    v61 = 0;
    v62 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v63 = swift_bridgeObjectRetain();
      PuzzleMenuConfig.init(with:)(v87, v63);
      sub_1BACCB7C4((uint64_t)v87, (uint64_t)v89);
      sub_1BACCB7C4((uint64_t)v89, (uint64_t)&v90);
      if (sub_1BACCB820((uint64_t)&v90) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v62 = sub_1BB391C1C(0, v62[2] + 1, 1, v62);
        v65 = v62[2];
        v64 = v62[3];
        if (v65 >= v64 >> 1)
          v62 = sub_1BB391C1C((_QWORD *)(v64 > 1), v65 + 1, 1, v62);
        sub_1BACCB7C4((uint64_t)v89, (uint64_t)v87);
        v62[2] = v65 + 1;
        v66 = &v62[18 * v65];
        v66[2] = v87[0];
        v67 = v87[4];
        v69 = v87[1];
        v68 = v87[2];
        v66[5] = v87[3];
        v66[6] = v67;
        v66[3] = v69;
        v66[4] = v68;
        v71 = v87[6];
        v70 = v88[0];
        v72 = v87[5];
        *(_OWORD *)((char *)v66 + 153) = *(_OWORD *)((char *)v88 + 9);
        v66[8] = v71;
        v66[9] = v70;
        v66[7] = v72;
      }
      if (v60 - 1 == v61)
        break;
      ++v61;
    }
    swift_bridgeObjectRelease_n();
    countAndFlagsBits = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
    v62 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v59;
LABEL_126:
  *(_QWORD *)&v90 = countAndFlagsBits;
  *((_QWORD *)&v90 + 1) = object;
  *(_QWORD *)&v91 = v80;
  *((_QWORD *)&v91 + 1) = v79;
  v92 = v78;
  v93 = v77;
  v94 = v12;
  v95 = v13;
  v96 = v84;
  v97 = v83;
  v98 = v82;
  v99 = v81;
  v100 = v62;
  v101 = v108;
  v102 = v48;
  v103 = v53;
  v104 = v86;
  v105 = v85;
  v106 = v107;
  nullsub_1(&v90);
  return sub_1BACCB7C4((uint64_t)&v90, a2);
}

uint64_t PuzzleMenusConfiguration.menus.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::PuzzleMenusConfiguration_optional __swiftcall PuzzleMenusConfiguration.init(with:)(Swift::OpaquePointer with)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  Swift::Bool v29;
  _OWORD v30[7];
  _OWORD v31[2];
  _QWORD v32[18];
  uint64_t v33[19];
  NewsFeed::PuzzleMenusConfiguration_optional result;

  v3 = v1;
  if (*((_QWORD *)with._rawValue + 2)
    && (v4 = sub_1BA6E35A8(0x73756E656DLL, 0xE500000000000000), (v5 & 1) != 0)
    && (sub_1BA747A10(*((_QWORD *)with._rawValue + 7) + 32 * v4, (uint64_t)v33),
        sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2B0738, (uint64_t (*)(uint64_t))sub_1BA78647C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]), (swift_dynamicCast() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v32[0] + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      v7 = 0;
      v8 = v6 - 1;
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v10 = swift_bridgeObjectRetain();
        PuzzleMenuConfig.init(with:)(v10, (uint64_t)v30);
        sub_1BACCB7C4((uint64_t)v30, (uint64_t)v32);
        sub_1BACCB7C4((uint64_t)v32, (uint64_t)v33);
        if (sub_1BACCB820((uint64_t)v33) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BB391C1C(0, v9[2] + 1, 1, v9);
          v12 = v9[2];
          v11 = v9[3];
          if (v12 >= v11 >> 1)
            v9 = sub_1BB391C1C((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
          sub_1BACCB7C4((uint64_t)v32, (uint64_t)v30);
          v9[2] = v12 + 1;
          v13 = &v9[18 * v12];
          v13[2] = v30[0];
          v14 = v30[4];
          v15 = v30[2];
          v16 = v30[1];
          v13[5] = v30[3];
          v13[6] = v14;
          v13[3] = v16;
          v13[4] = v15;
          v17 = v31[0];
          v18 = v30[6];
          v19 = v30[5];
          *(_OWORD *)((char *)v13 + 153) = *(_OWORD *)((char *)v31 + 9);
          v13[8] = v18;
          v13[9] = v17;
          v13[7] = v19;
        }
        if (v8 == v7)
          break;
        ++v7;
      }
      v28 = (void *)swift_bridgeObjectRelease_n();
    }
    else
    {
      v28 = (void *)swift_bridgeObjectRelease();
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v20 = sub_1BB86EFEC();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED476918);
    swift_bridgeObjectRetain();
    v21 = sub_1BB86EFC8();
    v22 = sub_1BB8732F4();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v33[0] = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain();
      v25 = sub_1BB872778();
      v27 = v26;
      swift_bridgeObjectRelease();
      v32[0] = sub_1BA5D2E14(v25, v27, v33);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA493000, v21, v22, "Failed parsing PuzzleMenusConfiguration. Invalid menus entry: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v24, -1, -1);
      MEMORY[0x1BCCE5C38](v23, -1, -1);

    }
    else
    {

      v28 = (void *)swift_bridgeObjectRelease_n();
    }
    v9 = 0;
  }
  *v3 = v9;
  result.value.menus._rawValue = v28;
  result.is_nil = v29;
  return result;
}

uint64_t sub_1BB0DB98C()
{
  return 0x73756E656DLL;
}

uint64_t sub_1BB0DB9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73756E656DLL && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB0DBA2C()
{
  sub_1BB0DE120();
  return sub_1BB874710();
}

uint64_t sub_1BB0DBA54()
{
  sub_1BB0DE120();
  return sub_1BB87471C();
}

uint64_t PuzzleMenusConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];

  sub_1BA4CDF6C(0, &qword_1EF2BB120, (uint64_t (*)(void))sub_1BB0DE120, (uint64_t)&type metadata for PuzzleMenusConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0DE120();
  sub_1BB8746C8();
  v10[3] = v8;
  sub_1BA4AD288(0, &qword_1EF2A96C0, (uint64_t)&type metadata for PuzzleMenuConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB0DE164(&qword_1EF2B1F68, (uint64_t (*)(void))sub_1BACCB9D0, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleMenusConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v12 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BB130, (uint64_t (*)(void))sub_1BB0DE120, (uint64_t)&type metadata for PuzzleMenusConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0DE120();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v12;
    sub_1BA4AD288(0, &qword_1EF2A96C0, (uint64_t)&type metadata for PuzzleMenuConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB0DE164(&qword_1EF2B1F80, (uint64_t (*)(void))sub_1BACCBA90, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB0DBD58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PuzzleMenusConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1BB0DBD6C(_QWORD *a1)
{
  return PuzzleMenusConfiguration.encode(to:)(a1);
}

NewsFeed::PuzzleMenuConfig::State_optional __swiftcall PuzzleMenuConfig.State.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (NewsFeed::PuzzleMenuConfig::State_optional)sub_1BB0DC054(v1);
}

uint64_t PuzzleMenuConfig.State.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 28271;
  if (*v0 != 1)
    v1 = 0x646578696DLL;
  if (*v0)
    return v1;
  else
    return 6710895;
}

uint64_t sub_1BB0DBDD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB800144(*a1, *a2);
}

uint64_t sub_1BB0DBDDC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB0DBE64()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB0DBEC8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::PuzzleMenuConfig::State_optional sub_1BB0DBF4C(Swift::String *a1)
{
  return PuzzleMenuConfig.State.init(rawValue:)(*a1);
}

void sub_1BB0DBF58(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE300000000000000;
  v4 = 0xE200000000000000;
  v5 = 28271;
  if (v2 != 1)
  {
    v5 = 0x646578696DLL;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 6710895;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB0DBFA0()
{
  sub_1BB0DFD54();
  return sub_1BB872D60();
}

uint64_t sub_1BB0DBFFC()
{
  sub_1BB0DFD54();
  return sub_1BB872D0C();
}

NewsFeed::PuzzleMenuConfig::Attribute_optional __swiftcall PuzzleMenuConfig.Attribute.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (NewsFeed::PuzzleMenuConfig::Attribute_optional)sub_1BB0DC054(v1);
}

uint64_t sub_1BB0DC054@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t PuzzleMenuConfig.Attribute.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x64656C6261736964;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x7463757274736564;
}

uint64_t sub_1BB0DC110(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB80022C(*a1, *a2);
}

uint64_t sub_1BB0DC11C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB0DC1C8()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB0DC250()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::PuzzleMenuConfig::Attribute_optional sub_1BB0DC2F8(Swift::String *a1)
{
  return PuzzleMenuConfig.Attribute.init(rawValue:)(*a1);
}

void sub_1BB0DC304(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB00000000657669;
  v4 = 0xE800000000000000;
  v5 = 0x64656C6261736964;
  if (v2 != 1)
  {
    v5 = 0xD000000000000012;
    v4 = 0x80000001BB959DB0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7463757274736564;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB0DC370()
{
  sub_1BB0DFD10();
  return sub_1BB872D60();
}

uint64_t sub_1BB0DC3CC()
{
  sub_1BB0DFD10();
  return sub_1BB872D0C();
}

uint64_t PuzzleMenuConfig.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.icon.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.accessibilityLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.toolbarItemLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMenuConfig.inline.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 104);
}

void PuzzleMenuConfig.state.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 105);
}

uint64_t PuzzleMenuConfig.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMenuConfig.tooltip.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.iconThemeInverted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 136);
}

__n128 PuzzleMenuConfig.init(identifier:title:subtitle:icon:accessibilityLabel:toolbarItemLabel:tooltip:items:inline:state:attributes:iconThemeInverted:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __n128 a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char *a16, uint64_t a17, char a18)
{
  __n128 result;
  char v19;

  result = a11;
  v19 = *a16;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(__n128 *)(a9 + 80) = a11;
  *(_QWORD *)(a9 + 96) = a14;
  *(_BYTE *)(a9 + 104) = a15;
  *(_BYTE *)(a9 + 105) = v19;
  *(_QWORD *)(a9 + 112) = a17;
  *(_QWORD *)(a9 + 120) = a12;
  *(_QWORD *)(a9 + 128) = a13;
  *(_BYTE *)(a9 + 136) = a18;
  return result;
}

uint64_t PuzzleMenuConfig.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 72);
  v7 = *(_QWORD *)(v1 + 96);
  v16 = *(unsigned __int8 *)(v1 + 105);
  v15 = *(_QWORD *)(v1 + 88);
  v17 = *(_QWORD *)(v1 + 112);
  v18 = *(_QWORD *)(v1 + 128);
  if (*(_QWORD *)(v1 + 8))
  {
    sub_1BB8745E4();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    sub_1BB8745E4();
    if (v3)
    {
LABEL_3:
      sub_1BB8745E4();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      swift_bridgeObjectRelease();
      if (v4)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  sub_1BB8745E4();
  if (v4)
  {
LABEL_4:
    sub_1BB8745E4();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    v8 = v15;
    if (v5)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  sub_1BB8745E4();
  v8 = v15;
  if (v5)
  {
LABEL_5:
    sub_1BB8745E4();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  sub_1BB8745E4();
  if (v6)
  {
LABEL_6:
    sub_1BB8745E4();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    v9 = v17;
    if (v8)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  sub_1BB8745E4();
  v9 = v17;
  if (v8)
  {
LABEL_7:
    sub_1BB8745E4();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_8;
LABEL_19:
    sub_1BB8745E4();
    goto LABEL_20;
  }
LABEL_18:
  sub_1BB8745E4();
  if (!v7)
    goto LABEL_19;
LABEL_8:
  sub_1BB8745E4();
  v10 = *(_QWORD *)(v7 + 16);
  sub_1BB8745D8();
  if (v10)
  {
    swift_bridgeObjectRetain();
    PuzzleMenuConfig.hash(into:)(a1);
    v11 = v10 - 1;
    if (v11)
    {
      v12 = v7 + 176;
      do
      {
        v12 += 144;
        PuzzleMenuConfig.hash(into:)(a1);
        --v11;
      }
      while (v11);
    }
    swift_bridgeObjectRelease();
  }
LABEL_20:
  sub_1BB8745E4();
  if (v16 == 3)
  {
    sub_1BB8745E4();
    v13 = v18;
    if (!v9)
      goto LABEL_22;
LABEL_25:
    sub_1BB8745E4();
    swift_bridgeObjectRetain();
    sub_1BB0DE4BC(a1, v9);
    swift_bridgeObjectRelease();
    if (!v13)
      goto LABEL_23;
LABEL_26:
    sub_1BB8745E4();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    return sub_1BB8745E4();
  }
  sub_1BB8745E4();
  v13 = v18;
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  if (v9)
    goto LABEL_25;
LABEL_22:
  sub_1BB8745E4();
  if (v13)
    goto LABEL_26;
LABEL_23:
  sub_1BB8745E4();
  return sub_1BB8745E4();
}

uint64_t sub_1BB0DC9B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB0DC9F0
                                                            + 4 * asc_1BB8EA3C0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB0DC9F0()
{
  return 0x656C746974;
}

uint64_t sub_1BB0DCA04()
{
  return 0x656C746974627573;
}

uint64_t sub_1BB0DCA1C()
{
  return 1852793705;
}

unint64_t sub_1BB0DCA2C()
{
  return 0xD000000000000012;
}

uint64_t sub_1BB0DCAEC()
{
  unsigned __int8 *v0;

  return sub_1BB0DC9B8(*v0);
}

uint64_t sub_1BB0DCAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB0DF87C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB0DCB18()
{
  sub_1BB0DED68();
  return sub_1BB874710();
}

uint64_t sub_1BB0DCB40()
{
  sub_1BB0DED68();
  return sub_1BB87471C();
}

uint64_t PuzzleMenuConfig.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _DWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  sub_1BA4CDF6C(0, &qword_1EF2BB138, (uint64_t (*)(void))sub_1BB0DED68, (uint64_t)&type metadata for PuzzleMenuConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = *(_QWORD *)(v1 + 16);
  v33 = *(_QWORD *)(v1 + 24);
  v34 = v6;
  v7 = *(_QWORD *)(v1 + 32);
  v31 = *(_QWORD *)(v1 + 40);
  v32 = v7;
  v8 = *(_QWORD *)(v1 + 48);
  v29 = *(_QWORD *)(v1 + 56);
  v30 = v8;
  v9 = *(_QWORD *)(v1 + 72);
  v27 = *(_QWORD *)(v1 + 64);
  v28 = v9;
  v10 = *(_QWORD *)(v1 + 88);
  v25 = *(_QWORD *)(v1 + 80);
  v26 = v10;
  v24 = *(_QWORD *)(v1 + 96);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 104);
  v22 = *(unsigned __int8 *)(v1 + 105);
  v23 = v8;
  v11 = *(_QWORD *)(v1 + 112);
  v19 = *(_QWORD *)(v1 + 120);
  v20 = *(_QWORD *)(v1 + 128);
  v21 = v11;
  v18[1] = *(unsigned __int8 *)(v1 + 136);
  v12 = a1[3];
  v13 = a1;
  v15 = (char *)v18 - v14;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_1BB0DED68();
  sub_1BB8746C8();
  LOBYTE(v37) = 0;
  v16 = v35;
  sub_1BB87411C();
  if (!v16)
  {
    LOBYTE(v37) = 1;
    sub_1BB87411C();
    LOBYTE(v37) = 2;
    sub_1BB87411C();
    v35 = v5;
    LOBYTE(v37) = 3;
    sub_1BB87411C();
    LOBYTE(v37) = 4;
    sub_1BB87411C();
    LOBYTE(v37) = 5;
    sub_1BB87411C();
    v37 = v24;
    v36 = 6;
    sub_1BA4AD288(0, &qword_1EF2A96C0, (uint64_t)&type metadata for PuzzleMenuConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB0DE164(&qword_1EF2B1F68, (uint64_t (*)(void))sub_1BACCB9D0, MEMORY[0x1E0DEAF10]);
    sub_1BB87414C();
    LOBYTE(v37) = 7;
    sub_1BB874188();
    LOBYTE(v37) = v22;
    v36 = 8;
    sub_1BB0DEDAC();
    sub_1BB87414C();
    v37 = v21;
    v36 = 9;
    sub_1BA4AD288(0, &qword_1EF2BB150, (uint64_t)&type metadata for PuzzleMenuConfig.Attribute, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB0DEE78(&qword_1EF2BB158, (uint64_t (*)(void))sub_1BB0DEDF0, MEMORY[0x1E0DEAF10]);
    sub_1BB87414C();
    LOBYTE(v37) = 10;
    sub_1BB87411C();
    LOBYTE(v37) = 11;
    sub_1BB874188();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v15, v4);
}

uint64_t PuzzleMenuConfig.hashValue.getter()
{
  _BYTE v1[72];

  sub_1BB8745CC();
  PuzzleMenuConfig.hash(into:)((uint64_t)v1);
  return sub_1BB874608();
}

uint64_t PuzzleMenuConfig.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _OWORD v67[2];
  _QWORD v68[13];
  char v69;
  char v70;
  int v71;
  __int16 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  int v78;
  __int16 v79;
  _QWORD *v80;

  sub_1BA4CDF6C(0, &qword_1EF2BB168, (uint64_t (*)(void))sub_1BB0DED68, (uint64_t)&type metadata for PuzzleMenuConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v59 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v43 - v7;
  v9 = a1[3];
  v80 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BB0DED68();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  v10 = v6;
  LOBYTE(v68[0]) = 0;
  v11 = sub_1BB87402C();
  v13 = v12;
  LOBYTE(v68[0]) = 1;
  swift_bridgeObjectRetain();
  v54 = sub_1BB87402C();
  LOBYTE(v68[0]) = 2;
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_1BB87402C();
  v58 = v15;
  v53 = v16;
  LOBYTE(v68[0]) = 3;
  v18 = v17;
  swift_bridgeObjectRetain();
  v19 = sub_1BB87402C();
  v57 = v18;
  v52 = v19;
  LOBYTE(v68[0]) = 4;
  v21 = v20;
  swift_bridgeObjectRetain();
  v22 = sub_1BB87402C();
  v56 = v21;
  v51 = v22;
  LOBYTE(v68[0]) = 5;
  v24 = v23;
  swift_bridgeObjectRetain();
  v25 = sub_1BB87402C();
  v55 = v24;
  v50 = v25;
  v27 = v26;
  sub_1BA4AD288(0, &qword_1EF2A96C0, (uint64_t)&type metadata for PuzzleMenuConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v60) = 6;
  sub_1BB0DE164(&qword_1EF2B1F80, (uint64_t (*)(void))sub_1BACCBA90, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB874068();
  v49 = v11;
  v28 = v27;
  v29 = v68[0];
  LOBYTE(v68[0]) = 7;
  swift_bridgeObjectRetain();
  v48 = sub_1BB8740A4();
  LOBYTE(v60) = 8;
  sub_1BB0DEE34();
  sub_1BB874068();
  v46 = v29;
  v45 = LOBYTE(v68[0]);
  sub_1BA4AD288(0, &qword_1EF2BB150, (uint64_t)&type metadata for PuzzleMenuConfig.Attribute, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v60) = 9;
  sub_1BB0DEE78(&qword_1EF2BB178, (uint64_t (*)(void))sub_1BB0DEEF4, MEMORY[0x1E0DEAF40]);
  sub_1BB874068();
  v30 = v68[0];
  LOBYTE(v68[0]) = 10;
  v47 = v30;
  swift_bridgeObjectRetain();
  v44 = sub_1BB87402C();
  v32 = v31;
  v77 = 11;
  swift_bridgeObjectRetain();
  v33 = sub_1BB8740A4();
  v48 &= 1u;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v59);
  LODWORD(v59) = v33 & 1;
  *(_QWORD *)&v60 = v49;
  *((_QWORD *)&v60 + 1) = v13;
  v43 = v13;
  *(_QWORD *)&v61 = v54;
  *((_QWORD *)&v61 + 1) = v58;
  *(_QWORD *)&v62 = v53;
  *((_QWORD *)&v62 + 1) = v57;
  *(_QWORD *)&v63 = v52;
  *((_QWORD *)&v63 + 1) = v56;
  *(_QWORD *)&v64 = v51;
  *((_QWORD *)&v64 + 1) = v55;
  *(_QWORD *)&v65 = v50;
  *((_QWORD *)&v65 + 1) = v28;
  v34 = v47;
  *(_QWORD *)&v66 = v46;
  BYTE8(v66) = v48;
  BYTE9(v66) = v45;
  *(_QWORD *)&v67[0] = v47;
  *((_QWORD *)&v67[0] + 1) = v44;
  *(_QWORD *)&v67[1] = v32;
  BYTE8(v67[1]) = v59;
  sub_1BA880110((uint64_t)&v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = v56;
  swift_bridgeObjectRelease();
  v36 = v55;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = v46;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = v67[0];
  a2[6] = v66;
  a2[7] = v38;
  *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)v67 + 9);
  v39 = v63;
  a2[2] = v62;
  a2[3] = v39;
  v40 = v65;
  a2[4] = v64;
  a2[5] = v40;
  v41 = v61;
  *a2 = v60;
  a2[1] = v41;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  v68[0] = v49;
  v68[1] = v43;
  v68[2] = v54;
  v68[3] = v58;
  v68[4] = v53;
  v68[5] = v57;
  v68[6] = v52;
  v68[7] = v35;
  v68[8] = v51;
  v68[9] = v36;
  v68[10] = v50;
  v68[11] = v28;
  v68[12] = v37;
  v69 = v48;
  v70 = v45;
  v71 = v78;
  v72 = v79;
  v73 = v34;
  v74 = v44;
  v75 = v32;
  v76 = v59;
  return sub_1BA8801B4((uint64_t)v68);
}

uint64_t sub_1BB0DD9E4@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return PuzzleMenuConfig.init(from:)(a1, a2);
}

uint64_t sub_1BB0DD9F8(_QWORD *a1)
{
  return PuzzleMenuConfig.encode(to:)(a1);
}

uint64_t sub_1BB0DDA0C()
{
  _BYTE v1[72];

  sub_1BB8745CC();
  PuzzleMenuConfig.hash(into:)((uint64_t)v1);
  return sub_1BB874608();
}

uint64_t sub_1BB0DDA4C()
{
  _BYTE v1[72];

  sub_1BB8745CC();
  PuzzleMenuConfig.hash(into:)((uint64_t)v1);
  return sub_1BB874608();
}

uint64_t PuzzleMenuConfig.withState(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  v3 = *a1;
  v5 = *(_QWORD *)(v2 + 88);
  v4 = *(_QWORD *)(v2 + 96);
  v6 = *(_BYTE *)(v2 + 104);
  v7 = *(_QWORD *)(v2 + 128);
  v8 = *(_BYTE *)(v2 + 136);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v2 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v2 + 40);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(v2 + 72);
  *(_QWORD *)(a2 + 88) = v5;
  *(_QWORD *)(a2 + 96) = v4;
  *(_BYTE *)(a2 + 104) = v6;
  *(_BYTE *)(a2 + 105) = v3;
  *(_OWORD *)(a2 + 112) = *(_OWORD *)(v2 + 112);
  *(_BYTE *)(a2 + 136) = v8;
  *(_QWORD *)(a2 + 128) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMenuConfig.selecting(identifier:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t i;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  int v57;
  __int16 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _BYTE v66[25];
  _OWORD v67[6];
  __int128 v68;
  _BYTE v69[25];

  v4 = v3[6];
  v5 = v3[7];
  v6 = v3[4];
  v67[5] = v3[5];
  v68 = v4;
  *(_OWORD *)v69 = v5;
  *(_OWORD *)&v69[9] = *(_OWORD *)((char *)v3 + 121);
  v7 = v3[3];
  v67[2] = v3[2];
  v67[3] = v7;
  v67[4] = v6;
  v8 = v3[1];
  v67[0] = *v3;
  v67[1] = v8;
  if ((_QWORD)v68)
  {
    v9 = *(_QWORD *)(v68 + 16);
    if (v9)
    {
      v42 = a3;
      v10 = swift_bridgeObjectRetain();
      v48 = v9 - 1;
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = 32;
      for (i = v10; ; v10 = i)
      {
        v59 = *(_OWORD *)(v10 + v12);
        v13 = *(_OWORD *)(v10 + v12 + 16);
        v14 = *(_OWORD *)(v10 + v12 + 32);
        v15 = *(_OWORD *)(v10 + v12 + 64);
        v62 = *(_OWORD *)(v10 + v12 + 48);
        v63 = v15;
        v60 = v13;
        v61 = v14;
        v16 = *(_OWORD *)(v10 + v12 + 80);
        v17 = *(_OWORD *)(v10 + v12 + 96);
        v18 = *(_OWORD *)(v10 + v12 + 112);
        *(_OWORD *)&v66[9] = *(_OWORD *)(v10 + v12 + 121);
        v65 = v17;
        *(_OWORD *)v66 = v18;
        v64 = v16;
        v19 = *((_QWORD *)&v59 + 1);
        v46 = v12;
        v56 = v59;
        if (a2)
        {
          if (*((_QWORD *)&v59 + 1) && (v59 == __PAIR128__(a2, a1) || (sub_1BB874398() & 1) != 0))
          {
LABEL_8:
            v47 = 1;
            goto LABEL_11;
          }
        }
        else if (!*((_QWORD *)&v59 + 1))
        {
          goto LABEL_8;
        }
        v47 = 0;
LABEL_11:
        v20 = *((_QWORD *)&v60 + 1);
        v21 = *((_QWORD *)&v61 + 1);
        v53 = v61;
        v54 = v60;
        v22 = *((_QWORD *)&v62 + 1);
        v23 = *((_QWORD *)&v63 + 1);
        v51 = v63;
        v52 = v62;
        v24 = *((_QWORD *)&v64 + 1);
        v50 = v64;
        v25 = v65;
        v49 = BYTE8(v65);
        v26 = *(_OWORD *)v66;
        v27 = *(_QWORD *)&v66[16];
        v55 = v66[24];
        sub_1BA880110((uint64_t)&v59);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v11 = sub_1BB391C1C(0, v11[2] + 1, 1, v11);
        v29 = v11[2];
        v28 = v11[3];
        v30 = v11;
        if (v29 >= v28 >> 1)
          v30 = sub_1BB391C1C((_QWORD *)(v28 > 1), v29 + 1, 1, v11);
        v30[2] = v26 + 1;
        v11 = v30;
        v31 = &v30[18 * v26];
        v31[4] = v56;
        v31[5] = v19;
        v31[6] = v54;
        v31[7] = v20;
        v31[8] = v53;
        v31[9] = v21;
        v31[10] = v52;
        v31[11] = v22;
        v31[12] = v51;
        v31[13] = v23;
        v31[14] = v50;
        v31[15] = v24;
        v31[16] = v25;
        *((_BYTE *)v31 + 136) = v49;
        *((_BYTE *)v31 + 137) = v47;
        *(_DWORD *)((char *)v31 + 138) = v57;
        *((_WORD *)v31 + 71) = v58;
        *((_OWORD *)v31 + 9) = v26;
        v31[20] = v27;
        *((_BYTE *)v31 + 168) = v55;
        sub_1BA8801B4((uint64_t)&v59);
        if (!v48)
        {
          swift_bridgeObjectRelease();
          a3 = v42;
          goto LABEL_20;
        }
        --v48;
        v12 = v46 + 144;
      }
    }
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_20:
    v37 = *((_QWORD *)&v67[5] + 1);
    v38 = *(_QWORD *)&v69[16];
    v39 = BYTE8(v68);
    v40 = BYTE9(v68);
    v41 = v69[24];
    *(_QWORD *)a3 = *(_QWORD *)&v67[0];
    *(_OWORD *)(a3 + 8) = *(_OWORD *)((char *)v67 + 8);
    *(_OWORD *)(a3 + 24) = *(_OWORD *)((char *)&v67[1] + 8);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)((char *)&v67[2] + 8);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)((char *)&v67[3] + 8);
    *(_OWORD *)(a3 + 72) = *(_OWORD *)((char *)&v67[4] + 8);
    *(_QWORD *)(a3 + 88) = v37;
    *(_QWORD *)(a3 + 96) = v11;
    *(_BYTE *)(a3 + 104) = v39;
    *(_BYTE *)(a3 + 105) = v40;
    *(_OWORD *)(a3 + 112) = *(_OWORD *)v69;
    *(_BYTE *)(a3 + 136) = v41;
    *(_QWORD *)(a3 + 128) = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    v32 = v3[7];
    *(_OWORD *)(a3 + 96) = v3[6];
    *(_OWORD *)(a3 + 112) = v32;
    *(_OWORD *)(a3 + 121) = *(_OWORD *)((char *)v3 + 121);
    v33 = v3[3];
    *(_OWORD *)(a3 + 32) = v3[2];
    *(_OWORD *)(a3 + 48) = v33;
    v34 = v3[5];
    *(_OWORD *)(a3 + 64) = v3[4];
    *(_OWORD *)(a3 + 80) = v34;
    v35 = v3[1];
    *(_OWORD *)a3 = *v3;
    *(_OWORD *)(a3 + 16) = v35;
    return sub_1BA880110((uint64_t)v67);
  }
}

uint64_t PuzzleMenuConfig.selectedItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[7];
  _OWORD v10[2];

  v3 = *(_QWORD *)(v1 + 96);
  if (v3 && *(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain_n();
    v4 = *(_OWORD *)(v3 + 128);
    v9[5] = *(_OWORD *)(v3 + 112);
    v9[6] = v4;
    v10[0] = *(_OWORD *)(v3 + 144);
    *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)(v3 + 153);
    v5 = *(_OWORD *)(v3 + 48);
    v6 = *(_OWORD *)(v3 + 80);
    v7 = *(_OWORD *)(v3 + 96);
    v9[2] = *(_OWORD *)(v3 + 64);
    v9[3] = v6;
    v9[4] = v7;
    v9[0] = *(_OWORD *)(v3 + 32);
    v9[1] = v5;
    __asm { BR              X9 }
  }
  sub_1BB0DEF38(v9);
  return sub_1BACCB7C4((uint64_t)v9, a1);
}

unint64_t sub_1BB0DE120()
{
  unint64_t result;

  result = qword_1EF2BB128;
  if (!qword_1EF2BB128)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EA948, &type metadata for PuzzleMenusConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB128);
  }
  return result;
}

uint64_t sub_1BB0DE164(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1EF2A96C0, (uint64_t)&type metadata for PuzzleMenuConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB0DE1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1BB8745D8();
  if (v3)
  {
    v5 = (unsigned __int8 *)(a2 + 48);
    do
    {
      v8 = *((_QWORD *)v5 - 2);
      v9 = *((_QWORD *)v5 - 1);
      v10 = *v5;
      if (v10 >> 6)
      {
        if (v10 >> 6 != 1)
        {
          result = sub_1BB8745D8();
          goto LABEL_6;
        }
        sub_1BB8745D8();
        switch(v9)
        {
          case 0uLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 0;
            break;
          case 1uLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 1;
            break;
          case 2uLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 2;
            break;
          case 3uLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 3;
            break;
          case 4uLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 4;
            break;
          case 5uLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 5;
            break;
          case 6uLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 6;
            break;
          case 7uLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 7;
            break;
          case 8uLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 8;
            break;
          case 9uLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 9;
            break;
          case 0xAuLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 10;
            break;
          case 0xBuLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 11;
            break;
          case 0xCuLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 12;
            break;
          case 0xDuLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 13;
            break;
          case 0xEuLL:
            sub_1BB8745D8();
            v6 = v8;
            v7 = 14;
            break;
          default:
            sub_1BB8745D8();
            sub_1BA682148(v8, v9);
            sub_1BB872A90();
            goto LABEL_4;
        }
      }
      else
      {
        sub_1BB8745D8();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        sub_1BB8745E4();
LABEL_4:
        v6 = v8;
        v7 = v9;
      }
      result = sub_1BA895B84(v6, v7, v10);
LABEL_6:
      v5 += 24;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1BB0DE4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1BB8745D8();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      ++v5;
      sub_1BB872A90();
      result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t _s8NewsFeed16PuzzleMenuConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t result;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  int v92;
  char v93;
  char v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  int v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  int v110;
  char v111;
  uint64_t v112;
  int v113;
  int v114;
  uint64_t v115;
  char v116;
  int v117;
  char v118;
  char v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int v178;
  int v179;
  int v180;
  int v181;

  v3 = *(_QWORD *)(a1 + 8);
  v174 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  v177 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v10 = *(_QWORD *)(a1 + 88);
  v11 = *(_QWORD *)(a1 + 96);
  v12 = *(unsigned __int8 *)(a1 + 104);
  v13 = *(unsigned __int8 *)(a1 + 105);
  v14 = *(_QWORD *)(a1 + 112);
  v168 = *(_QWORD *)(a1 + 120);
  v169 = *(_QWORD *)(a1 + 128);
  v15 = *(unsigned __int8 *)(a1 + 136);
  v16 = *(_QWORD *)(a2 + 8);
  v173 = *(_QWORD *)(a2 + 16);
  v17 = *(_QWORD *)(a2 + 24);
  v172 = *(_QWORD *)(a2 + 32);
  v18 = *(_QWORD *)(a2 + 48);
  v176 = *(_QWORD *)(a2 + 40);
  v20 = *(_QWORD *)(a2 + 56);
  v19 = *(_QWORD *)(a2 + 64);
  v21 = *(_QWORD *)(a2 + 72);
  v22 = *(_QWORD *)(a2 + 80);
  v23 = *(_QWORD *)(a2 + 88);
  v171 = *(_QWORD *)(a2 + 96);
  v24 = *(unsigned __int8 *)(a2 + 104);
  v170 = *(unsigned __int8 *)(a2 + 105);
  v26 = *(_QWORD *)(a2 + 112);
  v25 = *(_QWORD *)(a2 + 120);
  v27 = *(_QWORD *)(a2 + 128);
  v28 = *(unsigned __int8 *)(a2 + 136);
  if (!v3)
  {
    v167 = *(_QWORD *)(a1 + 40);
    if (v16)
      return 0;
    goto LABEL_8;
  }
  if (!v16)
    return 0;
  v167 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v16)
    goto LABEL_8;
  v139 = *(_QWORD *)(a1 + 64);
  v143 = *(_QWORD *)(a2 + 120);
  v153 = *(unsigned __int8 *)(a2 + 104);
  v158 = *(unsigned __int8 *)(a2 + 136);
  v148 = *(_QWORD *)(a1 + 96);
  v29 = *(unsigned __int8 *)(a1 + 136);
  v125 = *(_QWORD *)(a2 + 112);
  v128 = *(_QWORD *)(a2 + 48);
  v30 = *(_QWORD *)(a1 + 112);
  v133 = *(_QWORD *)(a1 + 56);
  v136 = *(_QWORD *)(a1 + 48);
  v31 = *(unsigned __int8 *)(a1 + 105);
  v120 = *(unsigned __int8 *)(a1 + 104);
  v32 = *(_QWORD *)(a1 + 80);
  v121 = *(_QWORD *)(a1 + 88);
  v122 = *(_QWORD *)(a2 + 72);
  v33 = *(_QWORD *)(a2 + 88);
  v131 = *(_QWORD *)(a2 + 56);
  v34 = *(_QWORD *)(a2 + 80);
  v35 = *(_QWORD *)(a1 + 72);
  v36 = *(_QWORD *)(a2 + 64);
  v37 = sub_1BB874398();
  v19 = v36;
  v10 = v121;
  v21 = v122;
  v8 = v35;
  v22 = v34;
  v18 = v128;
  v20 = v131;
  v23 = v33;
  v9 = v32;
  v7 = v133;
  v12 = v120;
  v13 = v31;
  v5 = v136;
  v6 = v139;
  v14 = v30;
  v26 = v125;
  v15 = v29;
  v25 = v143;
  v11 = v148;
  v24 = v153;
  v28 = v158;
  v38 = v37;
  result = 0;
  if ((v38 & 1) != 0)
  {
LABEL_8:
    if (v177)
    {
      if (!v17)
        return 0;
      if (v174 != v173 || v177 != v17)
      {
        v140 = v6;
        v178 = v15;
        v126 = v26;
        v129 = v18;
        v134 = v7;
        v137 = v5;
        v40 = v14;
        v41 = v13;
        v154 = v24;
        v159 = v28;
        v163 = v27;
        v144 = v25;
        v149 = v11;
        v42 = v12;
        v43 = v9;
        v44 = v10;
        v45 = v23;
        v46 = v22;
        v47 = v8;
        v48 = v21;
        v175 = v19;
        v49 = sub_1BB874398();
        v19 = v175;
        v21 = v48;
        v8 = v47;
        v6 = v140;
        v25 = v144;
        v22 = v46;
        v23 = v45;
        v10 = v44;
        v9 = v43;
        v12 = v42;
        v11 = v149;
        v24 = v154;
        v28 = v159;
        v27 = v163;
        v13 = v41;
        v14 = v40;
        v7 = v134;
        v5 = v137;
        v26 = v126;
        v18 = v129;
        v15 = v178;
        v50 = v49;
        result = 0;
        if ((v50 & 1) == 0)
          return result;
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v167)
    {
      if (!v176)
        return 0;
      if (v4 != v172 || v167 != v176)
      {
        v141 = v6;
        v145 = v25;
        v179 = v15;
        v130 = v18;
        v132 = v20;
        v51 = v14;
        v52 = v13;
        v155 = v24;
        v160 = v28;
        v164 = v27;
        v150 = v11;
        v53 = v12;
        v54 = v9;
        v55 = v10;
        v56 = v23;
        v57 = v22;
        v135 = v7;
        v138 = v5;
        v58 = v8;
        v123 = v21;
        v59 = v19;
        v60 = sub_1BB874398();
        v19 = v59;
        v21 = v123;
        v8 = v58;
        v7 = v135;
        v5 = v138;
        v6 = v141;
        v25 = v145;
        v22 = v57;
        v23 = v56;
        v10 = v55;
        v9 = v54;
        v12 = v53;
        v11 = v150;
        v24 = v155;
        v28 = v160;
        v27 = v164;
        v13 = v52;
        v14 = v51;
        v18 = v130;
        v20 = v132;
        v15 = v179;
        v61 = v60;
        result = 0;
        if ((v61 & 1) == 0)
          return result;
      }
    }
    else if (v176)
    {
      return 0;
    }
    if (v7)
    {
      if (!v20)
        return 0;
      if (v5 != v18 || v7 != v20)
      {
        v142 = v6;
        v146 = v25;
        v180 = v15;
        v62 = v14;
        v63 = v13;
        v156 = v24;
        v161 = v28;
        v165 = v27;
        v151 = v11;
        v64 = v12;
        v65 = v9;
        v66 = v10;
        v67 = v23;
        v68 = v22;
        v69 = v8;
        v124 = v21;
        v70 = v19;
        v71 = sub_1BB874398();
        v19 = v70;
        v21 = v124;
        v8 = v69;
        v6 = v142;
        v25 = v146;
        v22 = v68;
        v23 = v67;
        v10 = v66;
        v9 = v65;
        v12 = v64;
        v11 = v151;
        v24 = v156;
        v28 = v161;
        v27 = v165;
        v13 = v63;
        v14 = v62;
        v15 = v180;
        v72 = v71;
        result = 0;
        if ((v72 & 1) == 0)
          return result;
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v8)
    {
      if (!v21)
        return 0;
      if (v6 != v19 || v8 != v21)
      {
        v73 = v25;
        v74 = v15;
        v75 = v14;
        v76 = v13;
        v157 = v24;
        v162 = v28;
        v166 = v27;
        v152 = v11;
        v77 = v12;
        v78 = v9;
        v79 = v10;
        v80 = v23;
        v81 = v22;
        v82 = sub_1BB874398();
        v22 = v81;
        v23 = v80;
        v10 = v79;
        v9 = v78;
        v12 = v77;
        v11 = v152;
        v24 = v157;
        v28 = v162;
        v27 = v166;
        v13 = v76;
        v14 = v75;
        v15 = v74;
        v25 = v73;
        v83 = v82;
        result = 0;
        if ((v83 & 1) == 0)
          return result;
      }
    }
    else if (v21)
    {
      return 0;
    }
    if (v10)
    {
      if (!v23)
        return 0;
      if (v9 != v22 || v10 != v23)
      {
        v84 = v25;
        v85 = v15;
        v86 = v14;
        v87 = v13;
        v88 = v28;
        v89 = v27;
        v90 = v24;
        v91 = v11;
        v92 = v12;
        v93 = sub_1BB874398();
        v12 = v92;
        v11 = v91;
        v24 = v90;
        v27 = v89;
        v28 = v88;
        v13 = v87;
        v14 = v86;
        v15 = v85;
        v25 = v84;
        v94 = v93;
        result = 0;
        if ((v94 & 1) == 0)
          return result;
      }
    }
    else if (v23)
    {
      return 0;
    }
    if (v11)
    {
      if (!v171)
        return 0;
      v95 = v12;
      v181 = v13;
      v127 = v26;
      v96 = v14;
      v97 = v25;
      v98 = v28;
      v99 = v15;
      swift_bridgeObjectRetain();
      v100 = swift_bridgeObjectRetain();
      v101 = sub_1BA88DC3C(v100, v171);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v101 & 1) == 0)
        return result;
      v15 = v99;
      v28 = v98;
      v25 = v97;
      v14 = v96;
      v26 = v127;
      v13 = v181;
      if (((v95 ^ v24) & 1) != 0)
        return result;
    }
    else
    {
      result = 0;
      if (v171 || ((v12 ^ v24) & 1) != 0)
        return result;
    }
    if (v13 == 3)
    {
      if (v170 != 3)
        return 0;
    }
    else
    {
      if (v170 == 3)
        return 0;
      v102 = 6710895;
      v147 = v25;
      if (v13)
      {
        if (v13 == 1)
        {
          v103 = 0xE200000000000000;
          v104 = 28271;
        }
        else
        {
          v103 = 0xE500000000000000;
          v104 = 0x646578696DLL;
        }
      }
      else
      {
        v103 = 0xE300000000000000;
        v104 = 6710895;
      }
      if (v170)
      {
        v105 = v26;
        v106 = v28;
        v107 = v27;
        if (v170 == 1)
        {
          v108 = 0xE200000000000000;
          v102 = 28271;
        }
        else
        {
          v108 = 0xE500000000000000;
          v102 = 0x646578696DLL;
        }
      }
      else
      {
        v105 = v26;
        v107 = v27;
        v106 = v28;
        v108 = 0xE300000000000000;
      }
      v109 = v14;
      v110 = v15;
      if (v104 == v102 && v103 == v108)
      {
        swift_bridgeObjectRelease_n();
        v15 = v110;
        v28 = v106;
        v27 = v107;
        v25 = v147;
        v14 = v109;
        v26 = v105;
      }
      else
      {
        v111 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        v15 = v110;
        v28 = v106;
        v27 = v107;
        v25 = v147;
        v14 = v109;
        v26 = v105;
        if ((v111 & 1) == 0)
          return result;
      }
    }
    if (v14)
    {
      if (!v26)
        return 0;
      v112 = v25;
      v113 = v28;
      v114 = v15;
      swift_bridgeObjectRetain();
      v115 = swift_bridgeObjectRetain();
      v116 = sub_1BA88DD18(v115, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v114;
      v28 = v113;
      if ((v116 & 1) == 0)
        return 0;
    }
    else
    {
      v112 = v25;
      if (v26)
        return 0;
    }
    if (v169)
    {
      if (v27)
      {
        if (v168 != v112 || v169 != v27)
        {
          v117 = v15;
          v118 = sub_1BB874398();
          v15 = v117;
          v119 = v118;
          result = 0;
          if ((v119 & 1) == 0)
            return result;
        }
        return v15 ^ v28 ^ 1u;
      }
    }
    else if (!v27)
    {
      return v15 ^ v28 ^ 1u;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BB0DED68()
{
  unint64_t result;

  result = qword_1EF2BB140;
  if (!qword_1EF2BB140)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EA8F8, &type metadata for PuzzleMenuConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB140);
  }
  return result;
}

unint64_t sub_1BB0DEDAC()
{
  unint64_t result;

  result = qword_1EF2BB148;
  if (!qword_1EF2BB148)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleMenuConfig.State, &type metadata for PuzzleMenuConfig.State);
    atomic_store(result, (unint64_t *)&qword_1EF2BB148);
  }
  return result;
}

unint64_t sub_1BB0DEDF0()
{
  unint64_t result;

  result = qword_1EF2BB160;
  if (!qword_1EF2BB160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleMenuConfig.Attribute, &type metadata for PuzzleMenuConfig.Attribute);
    atomic_store(result, (unint64_t *)&qword_1EF2BB160);
  }
  return result;
}

unint64_t sub_1BB0DEE34()
{
  unint64_t result;

  result = qword_1EF2BB170;
  if (!qword_1EF2BB170)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleMenuConfig.State, &type metadata for PuzzleMenuConfig.State);
    atomic_store(result, (unint64_t *)&qword_1EF2BB170);
  }
  return result;
}

uint64_t sub_1BB0DEE78(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1EF2BB150, (uint64_t)&type metadata for PuzzleMenuConfig.Attribute, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB0DEEF4()
{
  unint64_t result;

  result = qword_1EF2BB180;
  if (!qword_1EF2BB180)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleMenuConfig.Attribute, &type metadata for PuzzleMenuConfig.Attribute);
    atomic_store(result, (unint64_t *)&qword_1EF2BB180);
  }
  return result;
}

double sub_1BB0DEF38(_OWORD *a1)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1BB87FC90;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  *(_OWORD *)((char *)a1 + 121) = 0u;
  return result;
}

unint64_t sub_1BB0DEF60()
{
  unint64_t result;

  result = qword_1EF2BB188;
  if (!qword_1EF2BB188)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleMenuConfig.State, &type metadata for PuzzleMenuConfig.State);
    atomic_store(result, (unint64_t *)&qword_1EF2BB188);
  }
  return result;
}

unint64_t sub_1BB0DEFA8()
{
  unint64_t result;

  result = qword_1EF2BB190;
  if (!qword_1EF2BB190)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleMenuConfig.Attribute, &type metadata for PuzzleMenuConfig.Attribute);
    atomic_store(result, (unint64_t *)&qword_1EF2BB190);
  }
  return result;
}

unint64_t sub_1BB0DEFF0()
{
  unint64_t result;

  result = qword_1EF2BB198;
  if (!qword_1EF2BB198)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleMenuConfig, &type metadata for PuzzleMenuConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2BB198);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMenusConfiguration()
{
  return &type metadata for PuzzleMenusConfiguration;
}

uint64_t destroy for PuzzleMenuConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleMenuConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleMenuConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t assignWithTake for PuzzleMenuConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleMenuConfig(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 137))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleMenuConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 137) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 137) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMenuConfig()
{
  return &type metadata for PuzzleMenuConfig;
}

ValueMetadata *type metadata accessor for PuzzleMenuConfig.State()
{
  return &type metadata for PuzzleMenuConfig.State;
}

uint64_t _s8NewsFeed16PuzzleMenuConfigV5StateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB0DF4E4 + 4 * byte_1BB8EA3E4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB0DF518 + 4 * byte_1BB8EA3DF[v4]))();
}

uint64_t sub_1BB0DF518(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0DF520(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0DF528);
  return result;
}

uint64_t sub_1BB0DF534(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0DF53CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB0DF540(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0DF548(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMenuConfig.Attribute()
{
  return &type metadata for PuzzleMenuConfig.Attribute;
}

uint64_t storeEnumTagSinglePayload for PuzzleMenuConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BB0DF5B0 + 4 * byte_1BB8EA3EE[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BB0DF5E4 + 4 * byte_1BB8EA3E9[v4]))();
}

uint64_t sub_1BB0DF5E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0DF5EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0DF5F4);
  return result;
}

uint64_t sub_1BB0DF600(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0DF608);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BB0DF60C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0DF614(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMenuConfig.CodingKeys()
{
  return &type metadata for PuzzleMenuConfig.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PuzzleMenusConfiguration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB0DF670 + 4 * byte_1BB8EA3F3[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB0DF690 + 4 * byte_1BB8EA3F8[v4]))();
}

_BYTE *sub_1BB0DF670(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB0DF690(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB0DF698(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB0DF6A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB0DF6A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB0DF6B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMenusConfiguration.CodingKeys()
{
  return &type metadata for PuzzleMenusConfiguration.CodingKeys;
}

unint64_t sub_1BB0DF6D0()
{
  unint64_t result;

  result = qword_1EF2BB1A0;
  if (!qword_1EF2BB1A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EA818, &type metadata for PuzzleMenusConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB1A0);
  }
  return result;
}

unint64_t sub_1BB0DF718()
{
  unint64_t result;

  result = qword_1EF2BB1A8;
  if (!qword_1EF2BB1A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EA8D0, &type metadata for PuzzleMenuConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB1A8);
  }
  return result;
}

unint64_t sub_1BB0DF760()
{
  unint64_t result;

  result = qword_1EF2BB1B0;
  if (!qword_1EF2BB1B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EA840, &type metadata for PuzzleMenuConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB1B0);
  }
  return result;
}

unint64_t sub_1BB0DF7A8()
{
  unint64_t result;

  result = qword_1EF2BB1B8;
  if (!qword_1EF2BB1B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EA868, &type metadata for PuzzleMenuConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB1B8);
  }
  return result;
}

unint64_t sub_1BB0DF7F0()
{
  unint64_t result;

  result = qword_1EF2BB1C0;
  if (!qword_1EF2BB1C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EA788, &type metadata for PuzzleMenusConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB1C0);
  }
  return result;
}

unint64_t sub_1BB0DF838()
{
  unint64_t result;

  result = qword_1EF2BB1C8;
  if (!qword_1EF2BB1C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EA7B0, &type metadata for PuzzleMenusConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB1C8);
  }
  return result;
}

uint64_t sub_1BB0DF87C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB979B10 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB979B30 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656E696C6E69 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7069746C6F6F74 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB979B50)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

unint64_t sub_1BB0DFD10()
{
  unint64_t result;

  result = qword_1EF2BB1D0;
  if (!qword_1EF2BB1D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleMenuConfig.Attribute, &type metadata for PuzzleMenuConfig.Attribute);
    atomic_store(result, (unint64_t *)&qword_1EF2BB1D0);
  }
  return result;
}

unint64_t sub_1BB0DFD54()
{
  unint64_t result;

  result = qword_1EF2BB1D8;
  if (!qword_1EF2BB1D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleMenuConfig.State, &type metadata for PuzzleMenuConfig.State);
    atomic_store(result, (unint64_t *)&qword_1EF2BB1D8);
  }
  return result;
}

uint64_t SportsEmbedConfigResourceRank.leagueType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsEmbedConfigResourceRank.statisticName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB0DFDF0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6974736974617473;
  else
    return 0x795465756761656CLL;
}

uint64_t sub_1BB0DFE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB0E0408(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB0DFE60()
{
  sub_1BB0DFFE4();
  return sub_1BB874710();
}

uint64_t sub_1BB0DFE88()
{
  sub_1BB0DFFE4();
  return sub_1BB87471C();
}

uint64_t SportsEmbedConfigResourceRank.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1BB0E01D0(0, &qword_1EF2BB1E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0DFFE4();
  sub_1BB8746C8();
  v13 = 0;
  v9 = v11[3];
  sub_1BB87417C();
  if (!v9)
  {
    v12 = 1;
    sub_1BB87411C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB0DFFE4()
{
  unint64_t result;

  result = qword_1ED3A89B0;
  if (!qword_1ED3A89B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EAAF4, &type metadata for SportsEmbedConfigResourceRank.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A89B0);
  }
  return result;
}

uint64_t SportsEmbedConfigResourceRank.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;

  sub_1BB0E01D0(0, &qword_1ED3AB4A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0DFFE4();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v20 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB87402C();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v17;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BB0E01D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB0DFFE4();
    v7 = a3(a1, &type metadata for SportsEmbedConfigResourceRank.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB0E022C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsEmbedConfigResourceRank.init(from:)(a1, a2);
}

uint64_t sub_1BB0E0240(_QWORD *a1)
{
  return SportsEmbedConfigResourceRank.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceRank()
{
  return &type metadata for SportsEmbedConfigResourceRank;
}

uint64_t storeEnumTagSinglePayload for SportsEmbedConfigResourceRank.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB0E02B0 + 4 * byte_1BB8EA9A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB0E02E4 + 4 * byte_1BB8EA9A0[v4]))();
}

uint64_t sub_1BB0E02E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0E02EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0E02F4);
  return result;
}

uint64_t sub_1BB0E0300(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0E0308);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB0E030C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0E0314(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceRank.CodingKeys()
{
  return &type metadata for SportsEmbedConfigResourceRank.CodingKeys;
}

unint64_t sub_1BB0E0334()
{
  unint64_t result;

  result = qword_1EF2BB1E8;
  if (!qword_1EF2BB1E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EAACC, &type metadata for SportsEmbedConfigResourceRank.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB1E8);
  }
  return result;
}

unint64_t sub_1BB0E037C()
{
  unint64_t result;

  result = qword_1ED3A89C0;
  if (!qword_1ED3A89C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EAA3C, &type metadata for SportsEmbedConfigResourceRank.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A89C0);
  }
  return result;
}

unint64_t sub_1BB0E03C4()
{
  unint64_t result;

  result = qword_1ED3A89B8;
  if (!qword_1ED3A89B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EAA64, &type metadata for SportsEmbedConfigResourceRank.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A89B8);
  }
  return result;
}

uint64_t sub_1BB0E0408(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x795465756761656CLL && a2 == 0xEA00000000006570;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974736974617473 && a2 == 0xED0000656D614E63)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t FeedLayoutContext.__allocating_init(stylerFactory:layoutAttributesFactoryProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t FeedLayoutContext.stylerFactory.getter()
{
  return swift_retain();
}

uint64_t FeedLayoutContext.layoutAttributesFactoryProvider.getter()
{
  return swift_retain();
}

uint64_t FeedLayoutContext.init(stylerFactory:layoutAttributesFactoryProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t FeedLayoutContext.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t method lookup function for FeedLayoutContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedLayoutContext.__allocating_init(stylerFactory:layoutAttributesFactoryProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void FormatString.bind(binder:context:)()
{
  sub_1BB0E0838();
}

uint64_t sub_1BB0E05D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatString.init(from:)(a1, a2);
}

uint64_t sub_1BB0E05E8(_QWORD *a1)
{
  return FormatString.encode(to:)(a1);
}

void sub_1BB0E05FC()
{
  sub_1BB0E0838();
}

uint64_t sub_1BB0E0614@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[48];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v25[-v7];
  v10 = *(_QWORD *)v2;
  v9 = *(_QWORD *)(v2 + 8);
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    result = sub_1BB635AE8(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
    if (v3)
      return result;
    v13 = result;
    v14 = v12;
    v15 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 1, 1, v15);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v13;
    *(_QWORD *)(v16 + 24) = v14;
    *(_QWORD *)(v16 + 32) = MEMORY[0x1E0DEE9D8];
    v17 = v16 | 0x5000000000000000;
    sub_1BA6EA07C();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(inited + 32) = v10;
    *(_QWORD *)(inited + 40) = v9;
    swift_bridgeObjectRetain();
    v19 = sub_1BA862444(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    *a2 = v17;
    a2[1] = v19;
    v20 = type metadata accessor for FormatOptionsNodeStatementResult();
    sub_1BA8D81BC((uint64_t)v8, (uint64_t)a2 + *(int *)(v20 + 24));
  }
  else
  {
    v20 = type metadata accessor for FormatOptionsNodeStatementResult();
    v21 = (char *)a2 + *(int *)(v20 + 24);
    v22 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    v23 = swift_allocObject();
    v24 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v23 + 16) = v10;
    *(_QWORD *)(v23 + 24) = v9;
    *(_QWORD *)(v23 + 32) = v24;
    *a2 = v23 | 0x5000000000000000;
    a2[1] = 1;
    swift_bridgeObjectRetain();
  }
  type metadata accessor for FormatOptionsNodeStatementResult();
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 0, 1, v20);
}

void sub_1BB0E0838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];
  char v12;

  v2 = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11[-1] - v4;
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v7 = *(_QWORD *)(v0 + 8);
    v6 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)v0;
    v11[0] = *(_QWORD *)v0;
    v11[1] = v7;
    v11[2] = v6;
    v12 = 5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1BB6B84D4(v11, &v12);
    if (!v2)
    {
      sub_1BB3757A0(v8, v7, v9, 1, (uint64_t)v5);
      sub_1BA98DC18((uint64_t)v5);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1BB0E0944(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB0E0968();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB0E0968()
{
  unint64_t result;

  result = qword_1EF2BB1F0;
  if (!qword_1EF2BB1F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatString, &type metadata for FormatString);
    atomic_store(result, (unint64_t *)&qword_1EF2BB1F0);
  }
  return result;
}

unint64_t sub_1BB0E09AC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEA18CC();
  a1[2] = sub_1BAEE4D88();
  result = sub_1BB0E09E0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB0E09E0()
{
  unint64_t result;

  result = qword_1EF2BB1F8;
  if (!qword_1EF2BB1F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatString, &type metadata for FormatString);
    atomic_store(result, (unint64_t *)&qword_1EF2BB1F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatString()
{
  return &type metadata for FormatString;
}

uint64_t sub_1BB0E0A34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0E0A60@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  id v8;
  objc_super v9;
  _BYTE v10[40];

  sub_1BA4C010C((uint64_t)a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86DC0C();
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    v6 = (objc_class *)type metadata accessor for FormatModule();
    v7 = (char *)objc_allocWithZone(v6);
    sub_1BA4C010C((uint64_t)v10, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed12FormatModule_resolver]);
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed12FormatModule_tracker] = v5;
    v9.receiver = v7;
    v9.super_class = v6;
    v8 = objc_msgSendSuper2(&v9, sel_init);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    a2[3] = v6;
    a2[4] = &protocol witness table for FormatModule;
    *a2 = v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB0E0B34@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _OWORD v9[2];
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;
  _BYTE v13[40];

  sub_1BA4C010C((uint64_t)a1, (uint64_t)v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A0200);
  result = sub_1BB86DF48();
  if (!v12)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatTracker();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for WebEmbedManager();
  result = sub_1BB86DF3C();
  if (result)
  {
    v6 = result;
    type metadata accessor for FormatPluginFactory();
    memset(v9, 0, sizeof(v9));
    v10 = 0;
    v7 = (_QWORD *)swift_allocObject();
    v8 = sub_1BB0E5DE0((uint64_t)v13, (uint64_t)v11, v5, v6, (uint64_t)v9, v7);
    result = swift_release();
    *a2 = v8;
    a2[1] = &protocol witness table for FormatPluginFactory;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BB0E0C88(uint64_t a1)
{
  return sub_1BA4CD098(a1, (void (*)(_QWORD))sub_1BA840BB0, MEMORY[0x1E0DB9978]);
}

uint64_t sub_1BB0E0C9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for FormatTracker();
  result = swift_allocObject();
  *a1 = result;
  a1[1] = (uint64_t)&protocol witness table for FormatTracker;
  return result;
}

uint64_t sub_1BB0E0CD8()
{
  type metadata accessor for FormatViewController();
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BA505288(0, &qword_1ED3A5AE8);
  sub_1BB86E5E4();
  type metadata accessor for FormatRouter();
  sub_1BB86DCC0();
  swift_release();
  swift_release();
  sub_1BA505288(0, &qword_1ED3A6DC0);
  sub_1BB86E5E4();
  swift_release();
  sub_1BA505288(0, &qword_1ED3A6810);
  sub_1BB86E5E4();
  swift_release();
  sub_1BA505288(0, &qword_1ED3A6AF0);
  sub_1BB86E5E4();
  swift_release();
  type metadata accessor for FormatPluginData();
  sub_1BB86E5E4();
  swift_release();
  sub_1BA505288(0, &qword_1ED3A0200);
  sub_1BB86E5E4();
  swift_release();
  sub_1BB0E4E6C();
  sub_1BB86E5D8();
  swift_release();
  type metadata accessor for FormatBlueprintModifierFactory();
  sub_1BB86E5D8();
  swift_release();
  sub_1BB0E4F34();
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB0E54CC();
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BA5AA2AC(0, &qword_1ED3AC9D0, (uint64_t (*)(uint64_t))sub_1BA840BB0, sub_1BB0E5334, MEMORY[0x1E0DBB420]);
  sub_1BB86E5D8();
  swift_release();
  sub_1BB870FC0();
  sub_1BB86E5D8();
  swift_release();
  sub_1BB0E4FE0();
  sub_1BB86E5D8();
  swift_release();
  sub_1BA505288(0, &qword_1ED3A3F38);
  sub_1BB86E5E4();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB0E55B4(0);
  sub_1BB86E5D8();
  swift_release();
  type metadata accessor for FormatBlueprintLayoutBuilder();
  sub_1BB86E5D8();
  swift_release();
  sub_1BB0E5684();
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  type metadata accessor for FormatCollectionView();
  sub_1BB86E5D8();
  swift_release();
  sub_1BB0E50C0();
  sub_1BB86E5D8();
  swift_release();
  sub_1BA505288(0, &qword_1ED3A3F98);
  sub_1BB86E5E4();
  sub_1BB870DC8();
  sub_1BB86DCC0();
  swift_release();
  swift_release();
  sub_1BB0E5750(0);
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB0E5204();
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB0E5350();
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB0E5428();
  sub_1BB86E5D8();
  swift_release();
  type metadata accessor for FormatBlueprintViewCellProvider();
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  type metadata accessor for FormatBlueprintViewSupplementaryViewProvider();
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BA5AA2AC(0, &qword_1ED3A3F28, (uint64_t (*)(uint64_t))sub_1BB0E4E6C, sub_1BB0E5318, MEMORY[0x1E0DBA600]);
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BA5AA2AC(0, &qword_1ED3AD200, (uint64_t (*)(uint64_t))sub_1BB0E50C0, sub_1BB0E54B0, MEMORY[0x1E0DB9DC0]);
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB86FF88();
  sub_1BB86E5D8();
  swift_release();
  sub_1BB0E57AC();
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB870A2C();
  sub_1BB86E5D8();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BA505288(0, &qword_1ED3A3FB0);
  sub_1BB86E5E4();
  swift_release();
  sub_1BB8709A8();
  sub_1BB86E5D8();
  swift_release();
  sub_1BA505288(0, &qword_1ED3AE338);
  sub_1BB86E5E4();
  return swift_release();
}

char *sub_1BB0E1648(_QWORD *a1)
{
  char *result;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A6DC0);
  result = (char *)sub_1BB86DF48();
  if (!v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E5684();
  result = (char *)sub_1BB86DF3C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA840BB0();
  result = (char *)sub_1BB86DF3C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v4 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = (char *)sub_1BB86DF48();
  if (!v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86DC0C();
  result = (char *)sub_1BB86DF3C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
  sub_1BB86FD54();
  swift_allocObject();
  v5 = sub_1BB86FD48();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86F508();
  result = (char *)sub_1BB86DF3C();
  if (result)
  {
    v6 = (uint64_t)result;
    v7 = objc_allocWithZone((Class)type metadata accessor for FormatViewController());
    return sub_1BB64EAB8(v9, v10, v3, v4, v5, v6);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BB0E18B8(void **a1, _QWORD *a2)
{
  void *v3;
  uint64_t result;
  uint64_t ObjectType;
  void (*v6)(void *, uint64_t);
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, &qword_1ED3D4110);
  result = sub_1BB86DF48();
  if (v10)
  {
    ObjectType = swift_getObjectType();
    v6 = *(void (**)(void *, uint64_t))(v11 + 16);
    v7 = v3;
    v6(v3, ObjectType);
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1BB0E57AC();
    result = sub_1BB86DF3C();
    if (result)
    {
      swift_unknownObjectRelease();
      v8 = sub_1BA4A2870(&qword_1ED3A3F78, (uint64_t (*)(uint64_t))sub_1BB0E57AC, MEMORY[0x1E0DBB510]);
      v9 = &v7[OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider];
      swift_beginAccess();
      *((_QWORD *)v9 + 1) = v8;
      swift_unknownObjectWeakAssign();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0E1A14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];

  sub_1BA4C010C(a1, (uint64_t)v6);
  v3 = type metadata accessor for FormatRouter();
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  result = sub_1BA4CECCC(v6, v4 + 24);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_1E7279350;
  *a2 = v4;
  return result;
}

void sub_1BB0E1A8C(uint64_t a1, _QWORD *a2)
{
  id v2;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FormatViewController();
  v2 = (id)sub_1BB86DF3C();
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1BB0E1AF8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD v23[5];
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A6810);
  result = sub_1BB86DF48();
  v5 = v28;
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = v29;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A5AE8);
  result = sub_1BB86DF48();
  if (!v27)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4C38);
  result = sub_1BB86DF48();
  v7 = v24;
  if (v24)
  {
    v8 = v25;
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    v10 = MEMORY[0x1E0C80A78](v9);
    v12 = (_QWORD *)((char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
    v14 = *v12;
    v15 = type metadata accessor for FormatRouter();
    v23[3] = v15;
    v23[4] = &off_1E7279350;
    v23[0] = v14;
    type metadata accessor for FormatEventHandler();
    v16 = (_QWORD *)swift_allocObject();
    v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v15);
    v18 = MEMORY[0x1E0C80A78](v17);
    v20 = (_QWORD *)((char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
    v22 = sub_1BB0E5ED8(v5, v6, *v20, v7, v8, v16);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    *a2 = v22;
    a2[1] = &off_1E7302FD0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BB0E1D64@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD **v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE v17[24];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A6AF0);
  result = sub_1BB86DF48();
  v5 = v19;
  if (!v19)
  {
    __break(1u);
    goto LABEL_8;
  }
  v6 = v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E4F34();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatBlueprintModifierFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3C4178, (uint64_t)&type metadata for FormatOfflineModel, (uint64_t)&off_1E730DCF8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for OfflineManager);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3AE338);
  result = sub_1BB86DF48();
  if (v18)
  {
    v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
    v11 = MEMORY[0x1E0C80A78](v10);
    v13 = (_QWORD **)&v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_QWORD **, double))(v14 + 16))(v13, v11);
    v15 = sub_1BB0E5FC0(v5, v6, v7, v8, v9, *v13);
    swift_release();
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    *a2 = v15;
    a2[1] = &off_1E72896F8;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BB0E1FA4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  sub_1BA4B07F0(0, &qword_1ED3A5A18, (uint64_t (*)(uint64_t))type metadata accessor for FormatPluginData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = type metadata accessor for FormatPluginData();
  sub_1BB86DF48();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for FormatDataManager();
    v9 = swift_allocObject();
    result = sub_1BA866C58((uint64_t)v6, v9 + OBJC_IVAR____TtC8NewsFeed17FormatDataManager_pluginData);
    *a2 = v9;
    a2[1] = (uint64_t)&off_1E727DD60;
  }
  return result;
}

void sub_1BB0E20B4()
{
  sub_1BB873EAC();
  __break(1u);
}

void sub_1BB0E210C()
{
  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB0E2164(uint64_t a1)
{
  return sub_1BA4CD098(a1, (void (*)(_QWORD))sub_1BB0E4E6C, MEMORY[0x1E0DB80B0]);
}

uint64_t sub_1BB0E2178(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A0200);
  result = sub_1BB86DF48();
  if (v4)
  {
    type metadata accessor for FormatBlueprintModifierFactory();
    v2 = swift_allocObject();
    sub_1BA4CECCC(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB0E2214(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E4E6C();
  result = sub_1BB86DF3C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB0E4FE0();
    result = sub_1BB86DF3C();
    if (result)
    {
      sub_1BB0E4F34();
      swift_allocObject();
      return sub_1BB86FEA4();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0E22F4(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  sub_1BB0E5C50();
  swift_allocObject();
  sub_1BB870E04();
  sub_1BB0E5D18();
  swift_allocObject();
  sub_1BA4A2870(&qword_1ED3A3F40, (uint64_t (*)(uint64_t))sub_1BB0E5C50, MEMORY[0x1E0DBB1D0]);
  sub_1BB870B88();
  sub_1BB86FEBC();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BB0E54CC();
  result = sub_1BB86DF3C();
  if (result)
  {
    swift_allocObject();
    sub_1BA4A2870(&qword_1ED3A3FB8, (uint64_t (*)(uint64_t))sub_1BB0E54CC, MEMORY[0x1E0DBBFB0]);
    sub_1BB870B88();
    sub_1BB86FEBC();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB0E2440(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v2 = sub_1BB8712B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3AD220, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC140], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v14 - v7;
  if (qword_1ED3D2448 != -1)
    swift_once();
  if (byte_1ED3D2B41 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC128], v2);
    sub_1BB8712C0();
    v9 = sub_1BB8712CC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  }
  else
  {
    v10 = sub_1BB8712CC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatBlueprintLayoutBuilder();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v12 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E55B4(0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v13 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA5AA2AC(0, &qword_1ED3AC9D0, (uint64_t (*)(uint64_t))sub_1BA840BB0, sub_1BB0E5334, MEMORY[0x1E0DBB420]);
  result = sub_1BB86DF3C();
  if (result)
  {
    v14[0] = v13;
    v14[1] = v12;
    sub_1BB0E54CC();
    swift_allocObject();
    return sub_1BB871230();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1BB0E269C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v3 = type metadata accessor for FeedAdPipelineProcessor();
  sub_1BA4C010C((uint64_t)a2, (uint64_t)&v12);
  v4 = swift_allocObject();
  sub_1BA4CECCC(&v12, v4 + 16);
  v5 = sub_1BB86DF24();
  result = swift_release();
  if (v5)
  {
    v13 = v3;
    v14 = sub_1BA4A2870(qword_1ED3A4F80, (uint64_t (*)(uint64_t))type metadata accessor for FeedAdPipelineProcessor, (uint64_t)&protocol conformance descriptor for FeedAdPipelineProcessor);
    *(_QWORD *)&v12 = v5;
    sub_1BB87123C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v7 = type metadata accessor for FeedItemRendererPipelineProcessor(0);
    sub_1BA4C010C((uint64_t)a2, (uint64_t)&v12);
    v8 = swift_allocObject();
    sub_1BA4CECCC(&v12, v8 + 16);
    v9 = sub_1BB86DF24();
    result = swift_release();
    if (v9)
    {
      v13 = v7;
      v14 = sub_1BA4A2870(&qword_1ED3A51C0, type metadata accessor for FeedItemRendererPipelineProcessor, (uint64_t)&protocol conformance descriptor for FeedItemRendererPipelineProcessor);
      *(_QWORD *)&v12 = v9;
      sub_1BB87123C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
      v10 = sub_1BB870EC4();
      swift_allocObject();
      v11 = sub_1BB870EB8();
      v13 = v10;
      v14 = MEMORY[0x1E0DBB430];
      *(_QWORD *)&v12 = v11;
      sub_1BB87123C();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0E28A0(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  void *v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FormatCollectionView();
  result = sub_1BB86DF3C();
  if (result)
  {
    v4 = (void *)result;
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9790);
    sub_1BB872A9C();
    sub_1BB86DDE0();

    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB0E2964(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA840BB0();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB870FC0();
  result = sub_1BB86DF0C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A3F98);
  result = sub_1BB86DF18();
  if (v3)
  {
    sub_1BA5AA2AC(0, &qword_1ED3AC9D0, (uint64_t (*)(uint64_t))sub_1BA840BB0, sub_1BB0E5334, MEMORY[0x1E0DBB420]);
    swift_allocObject();
    return sub_1BB870EAC();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BB0E2AF0()
{
  sub_1BB870BB8();
  sub_1BB873558();
  sub_1BB870D80();
  sub_1BB873558();
  sub_1BB871188();
  sub_1BB873558();
  sub_1BB870CFC();
  sub_1BB873558();
  type metadata accessor for FormatMicaSectionDecorationItem();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B8770, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaSectionDecorationItem, (uint64_t)&protocol conformance descriptor for FormatMicaSectionDecorationItem);
  return sub_1BB873558();
}

uint64_t sub_1BB0E2BA4(uint64_t a1)
{
  return sub_1BA4CD098(a1, (void (*)(_QWORD))MEMORY[0x1E0DBB678], MEMORY[0x1E0DBB670]);
}

uint64_t sub_1BB0E2BB8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  char v8[40];
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E50C0();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A3FC8);
  result = sub_1BB86DF48();
  if (!v12)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA5AA2AC(0, &qword_1ED3AD200, (uint64_t (*)(uint64_t))sub_1BB0E50C0, sub_1BB0E54B0, MEMORY[0x1E0DB9DC0]);
  v4 = v3;
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v5 = result;
  v10 = v4;
  v11 = sub_1BB0E5B2C();
  v9 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A3F38);
  result = sub_1BB86DF18();
  if (v7)
  {
    sub_1BA4CECCC(&v6, (uint64_t)v8);
    sub_1BB0E4FE0();
    swift_allocObject();
    return sub_1BB8700C0();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BB0E2D80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1BB870924();
  swift_allocObject();
  result = sub_1BB870918();
  v4 = MEMORY[0x1E0DB9D98];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_1BB0E2DD4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, &qword_1ED3A9BB0);
  sub_1BB86DF48();
  if (!v8)
    return sub_1BB0E5BFC((uint64_t)&v7);
  sub_1BA4CECCC(&v7, (uint64_t)v9);
  v4 = v10;
  v5 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v5 + 8))(a1, a2, v4, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t sub_1BB0E2EA4(uint64_t a1)
{
  return sub_1BA4CD098(a1, sub_1BB0E55B4, MEMORY[0x1E0DBB3E8]);
}

uint64_t sub_1BB0E2EB8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BA4B07F0(0, &qword_1ED3A5A18, (uint64_t (*)(uint64_t))type metadata accessor for FormatPluginData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA50CAA8(0, qword_1ED3D3178, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver);
  result = sub_1BB86DF3C();
  if (result)
  {
    v6 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v7 = type metadata accessor for FormatPluginData();
    sub_1BB86DF48();
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7);
    if ((_DWORD)result != 1)
    {
      type metadata accessor for FormatBlueprintLayoutBuilder();
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v6;
      sub_1BA866C58((uint64_t)v4, v8 + OBJC_IVAR____TtC8NewsFeed28FormatBlueprintLayoutBuilder_pluginData);
      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0E3014(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E4E6C();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E50C0();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A3F98);
  result = sub_1BB86DF18();
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A3FC8);
  result = sub_1BB86DF48();
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA5AA2AC(0, &qword_1ED3A3F28, (uint64_t (*)(uint64_t))sub_1BB0E4E6C, sub_1BB0E5318, MEMORY[0x1E0DBA600]);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86FF88();
  result = sub_1BB86DF0C();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = sub_1BB86DF48();
  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86DC0C();
  result = sub_1BB86DF3C();
  if (result)
  {
    sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
    sub_1BB0E5684();
    v4 = objc_allocWithZone(v3);
    return sub_1BB870828();
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1BB0E332C(uint64_t a1, _QWORD *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA5AA2AC(0, &qword_1ED3AC9D0, (uint64_t (*)(uint64_t))sub_1BA840BB0, sub_1BB0E5334, MEMORY[0x1E0DBB420]);
  if (sub_1BB86DF3C())
    sub_1BB0E5B94();
  sub_1BB870810();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA5AA2AC(0, &qword_1ED3AD200, (uint64_t (*)(uint64_t))sub_1BB0E50C0, sub_1BB0E54B0, MEMORY[0x1E0DB9DC0]);
  if (sub_1BB86DF3C())
    sub_1BB0E5B2C();
  return sub_1BB8707F8();
}

uint64_t sub_1BB0E346C(_QWORD *a1)
{
  uint64_t result;
  void *v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E5750(0);
  result = sub_1BB86DF0C();
  if (result)
  {
    v2 = (void *)result;
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatCollectionView()), sel_initWithFrame_collectionViewLayout_, result, 0.0, 0.0, 0.0, 0.0);

    return (uint64_t)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB0E3514(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatCollectionView();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E5204();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E5350();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E5428();
  result = sub_1BB86DF3C();
  if (result)
  {
    sub_1BB0E50C0();
    swift_allocObject();
    return sub_1BB87042C();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BB0E3654@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E50C0();
  result = sub_1BB86DF3C();
  if (result)
  {
    sub_1BB870438();
    swift_release();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB0E5AD8();
    result = sub_1BB86DF3C();
    if (result)
    {
      sub_1BB870DC8();
      result = sub_1BB870DBC();
      v5 = MEMORY[0x1E0DBAFF8];
      *a2 = result;
      a2[1] = v5;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0E3748()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = sub_1BB870588();
  v1 = MEMORY[0x1E0C80A78](v0);
  (*(void (**)(char *, _QWORD, double))(v3 + 104))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB9470], v1);
  return sub_1BB870DB0();
}

uint64_t sub_1BB0E37CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  Class v9;
  char *v10;
  _QWORD *v11;
  _QWORD v12[2];

  sub_1BA4B07F0(0, &qword_1ED3A5A18, (uint64_t (*)(uint64_t))type metadata accessor for FormatPluginData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v12 - v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB870FC0();
  result = sub_1BB86DF0C();
  if (result)
  {
    v6 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v7 = type metadata accessor for FormatPluginData();
    sub_1BB86DF48();
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7);
    if ((_DWORD)result != 1)
    {
      v8 = v4[*(int *)(v7 + 44)];
      sub_1BA95992C((uint64_t)v4);
      sub_1BB0E5750(0);
      v10 = (char *)objc_allocWithZone(v9);
      v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      *(_QWORD *)&v10[*(_QWORD *)(class metadata base offset for FormatCollectionViewLayout
                                + (*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v10)
                                + 24)] = 0;
      *(_QWORD *)&v10[*(_QWORD *)(class metadata base offset for FormatCollectionViewLayout
                                + (*v11 & *(_QWORD *)v10)
                                + 32)] = 0x3FD3333333333333;
      *(_QWORD *)&v10[*(_QWORD *)(class metadata base offset for FormatCollectionViewLayout
                                + (*v11 & *(_QWORD *)v10)
                                + 40)] = 0;
      v10[*(_QWORD *)(class metadata base offset for FormatCollectionViewLayout + (*v11 & *(_QWORD *)v10) + 16)] = v8;
      v12[1] = v6;
      return sub_1BB870D38();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0E39A8()
{
  sub_1BB870BB8();
  sub_1BB873558();
  sub_1BB870D80();
  sub_1BB873558();
  sub_1BB871188();
  sub_1BB873558();
  sub_1BB870CFC();
  sub_1BB873558();
  type metadata accessor for FormatMicaSectionDecorationItem();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B8770, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaSectionDecorationItem, (uint64_t)&protocol conformance descriptor for FormatMicaSectionDecorationItem);
  return sub_1BB873558();
}

uint64_t sub_1BB0E3A5C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class v6;
  id v7;
  __int128 v8[2];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E4E6C();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA840BB0();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatBlueprintViewCellProvider();
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v8);
  v4 = swift_allocObject();
  sub_1BA4CECCC(v8, v4 + 16);
  v5 = sub_1BB86DF24();
  result = swift_release();
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatBlueprintViewSupplementaryViewProvider();
  result = sub_1BB86DF3C();
  if (result)
  {
    *(_QWORD *)&v8[0] = v3;
    sub_1BB0E5204();
    v7 = objc_allocWithZone(v6);
    return sub_1BB870F54();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BB0E3BE8(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, &qword_1ED3A3FB0);
  result = sub_1BB86DF18();
  v3 = v6;
  if (v6)
  {
    v4 = v7;
    __swift_project_boxed_opaque_existential_1(v5, v6);
    MEMORY[0x1BCCE1AEC](v3, v4);
    sub_1BB870F60();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB0E3CBC(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E4E6C();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA840BB0();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA5AA2AC(0, &qword_1ED3A3F28, (uint64_t (*)(uint64_t))sub_1BB0E4E6C, sub_1BB0E5318, MEMORY[0x1E0DBA600]);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = sub_1BB86DF48();
  if (!v6)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86DC0C();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A3F18);
  result = sub_1BB86DF48();
  if (v5)
  {
    sub_1BB0E5350();
    v4 = objc_allocWithZone(v3);
    return sub_1BB870E34();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BB0E3F10(uint64_t a1, _QWORD *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BB86FF88();
  sub_1BB86DF0C();
  sub_1BB870E40();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BB0E57AC();
  if (sub_1BB86DF3C())
    sub_1BA4A2870(&qword_1ED3A3F78, (uint64_t (*)(uint64_t))sub_1BB0E57AC, MEMORY[0x1E0DBB510]);
  sub_1BB870E4C();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BB8709A8();
  sub_1BB86DF0C();
  sub_1BB870E28();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BB0E5684();
  sub_1BB86DF3C();
  return sub_1BB870E1C();
}

uint64_t sub_1BB0E407C(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E4E6C();
  result = sub_1BB86DF3C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA840BB0();
    result = sub_1BB86DF3C();
    if (result)
    {
      sub_1BB0E5428();
      v4 = objc_allocWithZone(v3);
      return sub_1BB87102C();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0E4138(_QWORD *a1)
{
  uint64_t result;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D3358);
  result = sub_1BB86DF48();
  if (v3)
  {
    type metadata accessor for FormatBlueprintViewCellProvider();
    v2 = (_QWORD *)swift_allocObject();
    v2[3] = 0;
    swift_unknownObjectWeakInit();
    v2[4] = v3;
    v2[5] = v4;
    return (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BB0E41E0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _UNKNOWN **v3;
  id v4;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FormatViewController();
  v4 = (id)sub_1BB86DF3C();
  v3 = &protocol witness table for FormatViewController;
  if (!v4)
    v3 = 0;
  *(_QWORD *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1BB0E4260(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, qword_1ED3D3550);
  result = sub_1BB86DF48();
  if (v4)
  {
    type metadata accessor for FormatBlueprintViewSupplementaryViewProvider();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    sub_1BA4CECCC(&v3, v2 + 32);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BB0E430C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _UNKNOWN **v3;
  id v4;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FormatViewController();
  v4 = (id)sub_1BB86DF3C();
  v3 = &off_1E732D000;
  if (!v4)
    v3 = 0;
  *(_QWORD *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1BB0E438C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  _QWORD v14[2];

  v2 = sub_1BB870F78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1BB870F90();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA5AA2AC(0, &qword_1ED3A3F20, (uint64_t (*)(uint64_t))sub_1BB0E4E6C, sub_1BB0E5318, MEMORY[0x1E0DBA5F0]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E4E6C();
  result = sub_1BB86DF3C();
  if (result)
  {
    v13 = result;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DBA5E8], v8);
    *v5 = 0;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBB5B0], v2);
    sub_1BB870F84();
    v14[1] = v13;
    sub_1BA5AA2AC(0, &qword_1ED3A3F28, (uint64_t (*)(uint64_t))sub_1BB0E4E6C, sub_1BB0E5318, MEMORY[0x1E0DBA600]);
    swift_allocObject();
    return sub_1BB870B64();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB0E4580(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4[5];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, (unint64_t *)&qword_1EF2BB200);
  sub_1BB86DF48();
  sub_1BB0E5980(0);
  v2 = swift_allocObject();
  sub_1BB0E59E8((uint64_t)v4, v2 + 16);
  v4[0] = v2;
  sub_1BA4A2870(&qword_1EF2BB218, (uint64_t (*)(uint64_t))sub_1BB0E5980, (uint64_t)&protocol conformance descriptor for FeedItemImpressionProcessor<A>);
  sub_1BB870B58();
  return swift_release();
}

uint64_t sub_1BB0E4658(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E50C0();
  result = sub_1BB86DF3C();
  if (result)
  {
    sub_1BA5AA2AC(0, &qword_1ED3AD200, (uint64_t (*)(uint64_t))sub_1BB0E50C0, sub_1BB0E54B0, MEMORY[0x1E0DB9DC0]);
    swift_allocObject();
    return sub_1BB870930();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB0E46EC(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA840BB0();
  result = sub_1BB86DF3C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1BB0E50C0();
    result = sub_1BB86DF3C();
    if (result)
    {
      sub_1BB0E58F8();
      v5 = v4;
      swift_allocObject();
      v6 = sub_1BB871260();
      v7[3] = v5;
      v7[4] = sub_1BA4A2870(&qword_1ED3AD210, (uint64_t (*)(uint64_t))sub_1BB0E58F8, MEMORY[0x1E0DBBFE8]);
      v7[0] = v6;
      sub_1BB87093C();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0E4808(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BB0E5890();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87A390;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E57AC();
  result = sub_1BB86DF3C();
  if (result)
  {
    v4 = result;
    v5 = sub_1BA4A2870(&qword_1ED3A3F70, (uint64_t (*)(uint64_t))sub_1BB0E57AC, MEMORY[0x1E0DBB518]);
    *(_QWORD *)(v2 + 32) = v4;
    *(_QWORD *)(v2 + 40) = v5;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB870A2C();
    result = sub_1BB86DF0C();
    if (result)
    {
      v6 = MEMORY[0x1E0DB9FC8];
      *(_QWORD *)(v2 + 48) = result;
      *(_QWORD *)(v2 + 56) = v6;
      sub_1BB86FF88();
      swift_allocObject();
      return sub_1BB86FF7C();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0E492C(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E50C0();
  result = sub_1BB86DF3C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB0E4E6C();
    result = sub_1BB86DF3C();
    if (result)
    {
      sub_1BB0E57AC();
      swift_allocObject();
      return sub_1BB870F3C();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0E4A08(uint64_t a1, _QWORD *a2)
{
  return sub_1BB0E4AB4(a1, a2, sub_1BB0E5874, MEMORY[0x1E0DBB500]);
}

uint64_t sub_1BB0E4A1C(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E50C0();
  result = sub_1BB86DF3C();
  if (result)
  {
    sub_1BB870438();
    swift_release();
    sub_1BB870A2C();
    swift_allocObject();
    return sub_1BB870A20();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB0E4AA0(uint64_t a1, _QWORD *a2)
{
  return sub_1BB0E4AB4(a1, a2, sub_1BB0E5858, MEMORY[0x1E0DB9FC0]);
}

uint64_t sub_1BB0E4AB4(uint64_t a1, _QWORD *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BB0E5684();
  v6 = sub_1BB86DF3C();
  if (v6)
    v7 = a3();
  else
    v7 = 0;
  return a4(v6, v7);
}

uint64_t sub_1BB0E4B38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0E5684();
  v4 = v3;
  result = sub_1BB86DF3C();
  if (result)
  {
    v6 = result;
    a2[3] = v4;
    result = sub_1BA4A2870(&qword_1ED3A3ED8, (uint64_t (*)(uint64_t))sub_1BB0E5684, MEMORY[0x1E0DB9B58]);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB0E4BC4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  id v2;

  v0 = sub_1BB870990();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9E20];
  MEMORY[0x1E0C80A78](v0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB800, v1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
  sub_1BB870984();
  sub_1BA4A2870((unint64_t *)&unk_1ED3A3EF0, v1, MEMORY[0x1E0DB9E28]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AADB0, v1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334(&qword_1ED3AADC0, (unint64_t *)&unk_1ED3AADB0, v1);
  sub_1BB873BC4();
  v2 = objc_allocWithZone((Class)sub_1BB8709A8());
  return sub_1BB87099C();
}

uint64_t sub_1BB0E4D10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for FormatAutoscrollPointFactory();
  result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E72EE6B8;
  *a1 = result;
  return result;
}

uint64_t static String.formatModule.getter()
{
  return 0x6F4D74616D726F46;
}

void sub_1BB0E4D74()
{
  uint64_t Strong;
  uint64_t v1;
  void *v2;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = MEMORY[0x1BCCE5D40](Strong + 16);
    if (v1)
    {
      if (MEMORY[0x1BCCE5D40](v1 + 16))
      {
        swift_retain();
        sub_1BB8707BC();
        v2 = (void *)sub_1BB870438();
        swift_release();
        objc_msgSend(v2, sel_reloadData);
        swift_release_n();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

      }
      else
      {
        swift_release();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_release();
    }
  }
}

void sub_1BB0E4E6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3DE0)
  {
    type metadata accessor for FormatSectionDescriptor();
    type metadata accessor for FormatModel();
    sub_1BA4A2870(&qword_1ED3A7240, (uint64_t (*)(uint64_t))type metadata accessor for FormatSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatSectionDescriptor);
    sub_1BA4A2870((unint64_t *)&qword_1ED3A53E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatModel, (uint64_t)&protocol conformance descriptor for FormatModel);
    v0 = sub_1BB86FEEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3DE0);
  }
}

void sub_1BB0E4F34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3DC8)
  {
    sub_1BB0E4E6C();
    sub_1BB0E4FE0();
    sub_1BB0E5318();
    sub_1BA4A2870(&qword_1ED3A3E68, (uint64_t (*)(uint64_t))sub_1BB0E4FE0, MEMORY[0x1E0DB8440]);
    v0 = sub_1BB86FEE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3DC8);
  }
}

void sub_1BB0E4FE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3E70)
  {
    type metadata accessor for FormatSectionDescriptor();
    type metadata accessor for FormatModel();
    sub_1BB0E50C0();
    sub_1BA4A2870(&qword_1ED3A7240, (uint64_t (*)(uint64_t))type metadata accessor for FormatSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatSectionDescriptor);
    sub_1BA4A2870((unint64_t *)&qword_1ED3A53E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatModel, (uint64_t)&protocol conformance descriptor for FormatModel);
    sub_1BB0E54B0();
    v0 = sub_1BB8700CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3E70);
  }
}

void sub_1BB0E50C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3EA0)
  {
    sub_1BA49A224(255, (unint64_t *)&unk_1ED3AB1D0);
    sub_1BB0E5204();
    sub_1BB0E5350();
    sub_1BB0E5428();
    type metadata accessor for FormatViewController();
    sub_1BA4A2870(&qword_1ED3A3F88, (uint64_t (*)(uint64_t))sub_1BB0E5204, MEMORY[0x1E0DBB5A8]);
    sub_1BA4A2870(&qword_1ED3A3F50, (uint64_t (*)(uint64_t))sub_1BB0E5350, MEMORY[0x1E0DBB230]);
    sub_1BA4A2870(&qword_1ED3A3FA0, (uint64_t (*)(uint64_t))sub_1BB0E5428, MEMORY[0x1E0DBB950]);
    v0 = sub_1BB870444();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3EA0);
  }
}

void sub_1BB0E5204()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3F90)
  {
    sub_1BB0E4E6C();
    sub_1BA840BB0();
    type metadata accessor for FormatBlueprintViewCellProvider();
    type metadata accessor for FormatBlueprintViewSupplementaryViewProvider();
    sub_1BB0E5318();
    sub_1BB0E5334();
    sub_1BA4A2870(&qword_1ED3A9020, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlueprintViewCellProvider, (uint64_t)&protocol conformance descriptor for FormatBlueprintViewCellProvider);
    sub_1BA4A2870(&qword_1ED3A4670, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlueprintViewSupplementaryViewProvider, (uint64_t)&protocol conformance descriptor for FormatBlueprintViewSupplementaryViewProvider);
    sub_1BB04CD3C();
    v0 = sub_1BB870F6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3F90);
  }
}

uint64_t sub_1BB0E5318()
{
  return sub_1BA4A2870(&qword_1ED3A3DD8, (uint64_t (*)(uint64_t))sub_1BB0E4E6C, MEMORY[0x1E0DB80D0]);
}

uint64_t sub_1BB0E5334()
{
  return sub_1BA4A2870(&qword_1ED3A3EB8, (uint64_t (*)(uint64_t))sub_1BA840BB0, MEMORY[0x1E0DB9998]);
}

void sub_1BB0E5350()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3F58)
  {
    sub_1BB0E4E6C();
    sub_1BA840BB0();
    type metadata accessor for FormatViewController();
    sub_1BB0E5318();
    sub_1BB0E5334();
    sub_1BA4A2870(&qword_1ED3A6990, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewController, (uint64_t)&protocol conformance descriptor for FormatViewController);
    sub_1BB04CD3C();
    v0 = sub_1BB870E58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3F58);
  }
}

void sub_1BB0E5428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3FA8)
  {
    sub_1BB0E4E6C();
    sub_1BA840BB0();
    sub_1BB0E5318();
    sub_1BB0E5334();
    v0 = sub_1BB871038();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3FA8);
  }
}

uint64_t sub_1BB0E54B0()
{
  return sub_1BA4A2870(&qword_1ED3A3E98, (uint64_t (*)(uint64_t))sub_1BB0E50C0, MEMORY[0x1E0DB9008]);
}

void sub_1BB0E54CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3FC0)
  {
    sub_1BA840BB0();
    type metadata accessor for FormatBlueprintLayoutBuilder();
    sub_1BB0E55B4(255);
    sub_1BB0E5334();
    sub_1BA4A2870(&qword_1ED3A8328, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlueprintLayoutBuilder, (uint64_t)&unk_1BB941F00);
    sub_1BA4A2870(&qword_1ED3A3F60, (uint64_t (*)(uint64_t))sub_1BB0E55B4, MEMORY[0x1E0DBB3F8]);
    v0 = sub_1BB871248();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3FC0);
  }
}

void sub_1BB0E55B4(uint64_t a1)
{
  sub_1BB0E55D8(a1, &qword_1ED3A3F68, sub_1BB0E5668, (uint64_t (*)(void))sub_1BB04CD3C, MEMORY[0x1E0DBB3F0]);
}

void sub_1BB0E55D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  unint64_t v10;
  uint64_t v11;
  _QWORD v12[4];

  if (!*a2)
  {
    v12[0] = type metadata accessor for FormatLayoutSectionDescriptor(255);
    v12[1] = &type metadata for FormatLayoutModel;
    v12[2] = a3();
    v12[3] = a4();
    v10 = a5(a1, v12);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_1BB0E5668()
{
  return sub_1BA4A2870(&qword_1ED3A88C0, type metadata accessor for FormatLayoutSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatLayoutSectionDescriptor);
}

void sub_1BB0E5684()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3EE0)
  {
    sub_1BB0E4E6C();
    sub_1BB0E50C0();
    type metadata accessor for FormatViewController();
    sub_1BB0E5318();
    sub_1BB0E54B0();
    sub_1BA4A2870(&qword_1ED3A6990, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewController, (uint64_t)&protocol conformance descriptor for FormatViewController);
    v0 = sub_1BB870840();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3EE0);
  }
}

void sub_1BB0E5750(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3A7B48)
  {
    v2 = sub_1BB870FC0();
    v4 = type metadata accessor for FormatCollectionViewLayout(a1, v2, MEMORY[0x1E0DBB668], v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3A7B48);
  }
}

void sub_1BB0E57AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3F80)
  {
    sub_1BB0E50C0();
    sub_1BB0E4E6C();
    sub_1BB0E54B0();
    sub_1BA4A2870(&qword_1ED3A3DD0, (uint64_t (*)(uint64_t))sub_1BB0E4E6C, MEMORY[0x1E0DB80C8]);
    v0 = sub_1BB870F48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3F80);
  }
}

uint64_t sub_1BB0E5858()
{
  return sub_1BA4A2870(&qword_1ED3A3EC8, (uint64_t (*)(uint64_t))sub_1BB0E5684, MEMORY[0x1E0DB9B48]);
}

uint64_t sub_1BB0E5874()
{
  return sub_1BA4A2870(&qword_1ED3A3ED0, (uint64_t (*)(uint64_t))sub_1BB0E5684, MEMORY[0x1E0DB9B60]);
}

void sub_1BB0E5890()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB7F8)
  {
    sub_1BA505288(255, &qword_1ED3A3EB0);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB7F8);
  }
}

void sub_1BB0E58F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AD218)
  {
    sub_1BA840BB0();
    sub_1BB0E50C0();
    sub_1BB0E5334();
    sub_1BB0E54B0();
    v0 = sub_1BB87126C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AD218);
  }
}

void sub_1BB0E5980(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF2BB208)
  {
    sub_1BB0E4E6C();
    v3 = v2;
    v4 = sub_1BB0E5318();
    v5 = type metadata accessor for FeedItemImpressionProcessor(a1, v3, v4, (uint64_t)&protocol witness table for FormatModel);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF2BB208);
  }
}

uint64_t sub_1BB0E59E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB0E5A44(0, (unint64_t *)&qword_1EF2BB210, (unint64_t *)&qword_1EF2BB200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BB0E5A44(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA505288(255, a3);
    v4 = sub_1BB873A2C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BB0E5A9C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BB0E5AC0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BB0E28A0(a1, (_QWORD *)(v1 + 16));
}

unint64_t sub_1BB0E5AD8()
{
  unint64_t result;

  result = qword_1EF2BB220;
  if (!qword_1EF2BB220)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2BB220);
  }
  return result;
}

unint64_t sub_1BB0E5B2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AD1F8;
  if (!qword_1ED3AD1F8)
  {
    sub_1BA5AA2AC(255, &qword_1ED3AD200, (uint64_t (*)(uint64_t))sub_1BB0E50C0, sub_1BB0E54B0, MEMORY[0x1E0DB9DC0]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB9DC8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AD1F8);
  }
  return result;
}

unint64_t sub_1BB0E5B94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AD208;
  if (!qword_1ED3AD208)
  {
    sub_1BA5AA2AC(255, &qword_1ED3AC9D0, (uint64_t (*)(uint64_t))sub_1BA840BB0, sub_1BB0E5334, MEMORY[0x1E0DBB420]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DBB428], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AD208);
  }
  return result;
}

uint64_t sub_1BB0E5BFC(uint64_t a1)
{
  uint64_t v2;

  sub_1BB0E5A44(0, (unint64_t *)&qword_1ED3A9BB8, &qword_1ED3A9BB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BB0E5C50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3F48)
  {
    type metadata accessor for FormatSectionDescriptor();
    type metadata accessor for FormatModel();
    sub_1BA4A2870(&qword_1ED3A7240, (uint64_t (*)(uint64_t))type metadata accessor for FormatSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatSectionDescriptor);
    sub_1BA4A2870((unint64_t *)&qword_1ED3A53E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatModel, (uint64_t)&protocol conformance descriptor for FormatModel);
    v0 = sub_1BB870E10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3F48);
  }
}

void sub_1BB0E5D18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3F30)
  {
    type metadata accessor for FormatSectionDescriptor();
    type metadata accessor for FormatModel();
    sub_1BA4A2870(&qword_1ED3A7240, (uint64_t (*)(uint64_t))type metadata accessor for FormatSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatSectionDescriptor);
    sub_1BA4A2870((unint64_t *)&qword_1ED3A53E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatModel, (uint64_t)&protocol conformance descriptor for FormatModel);
    v0 = sub_1BB870B94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3F30);
  }
}

_QWORD *sub_1BB0E5DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v11;

  a6[3] = 0;
  swift_unknownObjectWeakInit();
  a6[5] = 0;
  swift_unknownObjectWeakInit();
  a6[24] = MEMORY[0x1E0DEE9E8];
  sub_1BA4C010C(a1, (uint64_t)(a6 + 6));
  sub_1BA4C010C(a2, (uint64_t)(a6 + 11));
  sub_1BB0E6124(a5, (uint64_t)(a6 + 18));
  a6[23] = a4;
  type metadata accessor for WeakFormatTracker();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v11 + 24) = &protocol witness table for FormatTracker;
  swift_unknownObjectWeakAssign();
  sub_1BB0E5BFC(a5);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  a6[16] = v11;
  a6[17] = &protocol witness table for WeakFormatTracker;
  return a6;
}

_QWORD *sub_1BB0E5ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD v17[5];

  v17[3] = type metadata accessor for FormatRouter();
  v17[4] = &off_1E7279350;
  v17[0] = a3;
  a6[3] = 0;
  swift_unknownObjectWeakInit();
  a6[5] = 0;
  swift_unknownObjectWeakInit();
  a6[6] = a1;
  a6[7] = a2;
  sub_1BA4C010C((uint64_t)v17, (uint64_t)(a6 + 8));
  a6[13] = a4;
  a6[14] = a5;
  v12 = a6[7];
  ObjectType = swift_getObjectType();
  v14 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v12 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v15 = swift_retain();
  v14(v15, &off_1E7302FB0, ObjectType, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return a6;
}

_QWORD *sub_1BB0E5FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (**v14)();
  uint64_t v15;
  _QWORD v17[5];

  v17[3] = *a6;
  v17[4] = &off_1E72EE6B8;
  v17[0] = a6;
  sub_1BA5AA2AC(0, &qword_1ED3A59E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlueprintModifierFactory, sub_1BB0E60DC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatInteractor);
  v11 = (_QWORD *)swift_allocObject();
  v11[3] = 0;
  swift_unknownObjectWeakInit();
  v11[6] = a1;
  v11[7] = a2;
  v11[4] = a3;
  v11[5] = a4;
  v11[8] = a5;
  sub_1BA4C010C((uint64_t)v17, (uint64_t)(v11 + 9));
  v12 = v11[8];
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = (void (**)())(v12 + qword_1EF2C4690);
  v15 = *(_QWORD *)(v12 + qword_1EF2C4690);
  *v14 = sub_1BB0E611C;
  v14[1] = (void (*)())v13;
  swift_retain();
  sub_1BA49EBE0(v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v11;
}

uint64_t sub_1BB0E60DC()
{
  return sub_1BA4A2870(&qword_1ED3A8BD0, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlueprintModifierFactory, (uint64_t)&unk_1BB8DDFD0);
}

uint64_t sub_1BB0E60F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1BB0E611C()
{
  sub_1BB0E4D74();
}

uint64_t sub_1BB0E6124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB0E5A44(0, (unint64_t *)&qword_1ED3A9BB8, &qword_1ED3A9BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB0E618C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  id v65;
  void *v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  char v90;

  v77 = a1;
  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v75 - v15;
  v17 = *a3;
  v18 = a3[1];
  v19 = a3[2];
  v20 = a3[3];
  v21 = a3[4];
  v22 = a3[5];
  if (!*((_BYTE *)a3 + 48))
  {
    v76 = a3[5];
    v75 = v21;
    v26 = v17;
    v27 = objc_msgSend(*(id *)(v77 + 56), sel_publishDate, v14);
    if (v27)
    {
      v28 = v27;
      sub_1BB86C874();

      v29 = 0;
    }
    else
    {
      v29 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v16, v29, 1, v5);
    sub_1BA76D70C((uint64_t)v16, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
      v32 = v26;
      v82 = v26;
      v83 = v18;
      v84 = v19;
      v85 = v20;
      v33 = v75;
      v86 = v75;
      v87 = v76;
      sub_1BA968170(v32, v18, v19, v20, v75, v76, 0);
      v77 = FormatDateFormat.format(_:)((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1BA968124(v32, v18, v19, v20, v33, v76, 0);
      v34 = (uint64_t)v16;
      v35 = v77;
      sub_1BA6ED6EC(v34, (uint64_t)&qword_1ED3B0540, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      return v35;
    }
    sub_1BA6ED6EC((uint64_t)v16, (uint64_t)&qword_1ED3B0540, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    return 0;
  }
  if (*((_BYTE *)a3 + 48) != 1)
  {
    if (!(v19 | v18 | v17 | v20 | v21 | v22))
    {
      v35 = *(_QWORD *)(v77 + 40);
      swift_bridgeObjectRetain();
      return v35;
    }
    v30 = v19 | v18 | v20 | v21 | v22;
    if (v17 == 1 && !v30)
    {
      v31 = objc_msgSend(*(id *)(v77 + 56), sel_title, v14);
      goto LABEL_70;
    }
    if (v17 == 2 && !v30)
    {
      v31 = objc_msgSend(*(id *)(v77 + 56), sel_subtitle, v14);
LABEL_70:
      v65 = v31;
      if (v65)
      {
        v66 = v65;
        v35 = sub_1BB8729A0();

        return v35;
      }
      return 0;
    }
    if (v17 != 3 || v30)
    {
      if (v17 != 4 || v30)
      {
        if (v17 != 5 || v30)
        {
          if (v17 != 6 || v30)
          {
            if (v17 != 7 || v30)
            {
              if (v17 != 8 || v30)
              {
                if (v17 != 9 || v30)
                {
                  if (v17 != 10 || v30)
                  {
                    if (v17 == 11 && !v30)
                      __asm { BR              X10 }
                    v68 = v77;
                    sub_1BA93EB58(v77, (uint64_t)&v82);
                    v69 = v87;
                    v70 = v88;
                    v71 = v90;
                    swift_bridgeObjectRetain();
                    sub_1BA93EBE8((uint64_t)&v82);
                    v82 = 0x656C7A7A7570;
                    v83 = 0xE600000000000000;
                    v84 = v69;
                    v85 = v70;
                    LOBYTE(v86) = v71;
                    v87 = MEMORY[0x1E0DEE9E8];
                    sub_1BB86BD4C();
                    swift_allocObject();
                    sub_1BB86BD40();
                    sub_1BB0E78A4(0);
                    sub_1BB0E7940();
                    v35 = sub_1BB86F8BC();
                    v74 = v73;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    sub_1BA93EB58(v68, (uint64_t)&v82);
                    if (!v74)
                    {
                      v72 = objc_msgSend(v89, sel_identifier);
                      v35 = sub_1BB8729A0();

                    }
                    sub_1BA93EBE8((uint64_t)&v82);
                    return v35;
                  }
                  v31 = objc_msgSend(*(id *)(v77 + 56), sel_teaserAnswer, v14);
                }
                else
                {
                  v31 = objc_msgSend(*(id *)(v77 + 56), sel_teaserNumber, v14);
                }
              }
              else
              {
                v31 = objc_msgSend(*(id *)(v77 + 56), sel_teaserDirection, v14);
              }
            }
            else
            {
              v31 = objc_msgSend(*(id *)(v77 + 56), sel_teaserInfo, v14);
            }
          }
          else
          {
            v31 = objc_msgSend(*(id *)(v77 + 56), sel_teaserClue, v14);
          }
        }
        else
        {
          v31 = objc_msgSend(*(id *)(v77 + 56), sel_difficultyDescription, v14);
        }
      }
      else
      {
        v31 = objc_msgSend(*(id *)(v77 + 56), sel_puzzleDescription, v14);
      }
      goto LABEL_70;
    }
    v49 = objc_msgSend(*(id *)(v77 + 56), sel_authors, v14);
    if (v49)
    {
      v50 = v49;
      v51 = sub_1BB872DB4();

      v35 = Array<A>.localizedOxfordCommaSeparatedList.getter(v51);
      v53 = v52;
      swift_bridgeObjectRelease();
      if (v53)
        return v35;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!a2)
    return 0;
  v23 = *a3;
  swift_getObjectType();
  v24 = qword_1ED3A4058;
  swift_retain();
  if (v24 != -1)
    swift_once();
  sub_1BA93EB58(v77, (uint64_t)&v82);
  sub_1BA83C6D8();
  sub_1BB86FF40();
  sub_1BA6ED6EC((uint64_t)&v82, (uint64_t)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  if ((v23 & 1) == 0)
  {
    if (v81 <= 1u)
    {
      v25 = *(double *)&v80;
LABEL_26:
      if (qword_1ED3A0FC8 != -1)
        swift_once();
      v37 = (id)qword_1ED3A0FB8;
      v38 = objc_msgSend(v37, sel_stringFromTimeInterval_, v25);
      if (v38)
      {
        v39 = v38;
        v40 = sub_1BB8729A0();
        v42 = v41;

      }
      else
      {
        v40 = 0;
        v42 = 0xE000000000000000;
      }
      v82 = v40;
      v83 = v42;
      v80 = 44;
      v81 = 0xE100000000000000;
      v78 = 0;
      v79 = 0xE000000000000000;
      sub_1BA7114A0();
      v54 = MEMORY[0x1E0DEA968];
      v55 = sub_1BB873B04();
      v57 = v56;
      swift_bridgeObjectRelease();
      v82 = v55;
      v83 = v57;
      v80 = 32;
      v81 = 0xE100000000000000;
      v58 = sub_1BB873AB0();
      v59 = *(_QWORD *)(v58 + 16);
      if (v59 >= 2)
        v59 = 2;
      v82 = v58;
      v83 = v58 + 32;
      v84 = 0;
      v85 = (2 * v59) | 1;
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3CFA28, v54, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEBF30]);
      sub_1BAFA72D0();
      v35 = sub_1BB872904();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v35;
    }
    v25 = 0.0;
    if (v81 == 2)
      goto LABEL_26;
    goto LABEL_40;
  }
  if (v81 > 1u)
  {
    v36 = 0.0;
    if (v81 != 2)
    {
LABEL_40:
      swift_release();
      return 0;
    }
  }
  else
  {
    v36 = *(double *)&v80;
  }
  if (qword_1EF2A7430 != -1)
    swift_once();
  v43 = (id)qword_1EF2CA990;
  v44 = objc_msgSend(v43, sel_stringFromTimeInterval_, v36);
  if (v44)
  {
    v45 = v44;
    v46 = sub_1BB8729A0();
    v48 = v47;

  }
  else
  {
    v46 = 0;
    v48 = 0xE000000000000000;
  }
  v82 = v46;
  v83 = v48;
  v80 = 44;
  v81 = 0xE100000000000000;
  v78 = 0;
  v79 = 0xE000000000000000;
  sub_1BA7114A0();
  v60 = MEMORY[0x1E0DEA968];
  v35 = sub_1BB873B04();
  v62 = v61;
  swift_bridgeObjectRelease();
  v82 = v35;
  v83 = v62;
  v80 = 32;
  v81 = 0xE100000000000000;
  v63 = sub_1BB873AB0();
  v64 = *(_QWORD *)(v63 + 16);
  if (v64 >= 2)
    v64 = 2;
  v82 = v63;
  v83 = v63 + 32;
  v84 = 0;
  v85 = (2 * v64) | 1;
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3CFA28, v60, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEBF30]);
  sub_1BAFA72D0();
  sub_1BB872904();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v35;
}

void sub_1BB0E6D14()
{
  JUMPOUT(0x1BB0E6AE0);
}

uint64_t FormatPuzzleBinding.Text.text(from:computedContext:selectors:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  double v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  void *v69;
  uint64_t v71;
  uint64_t (*v72)(_QWORD);
  char v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t (*v80)(_QWORD);
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(_QWORD);
  uint64_t v92;
  id v93;
  char v94;

  v81 = a4;
  v80 = a3;
  v7 = sub_1BB86C8B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v79 - v17;
  v20 = *(_QWORD *)v4;
  v19 = *(_QWORD *)(v4 + 8);
  v21 = *(_QWORD *)(v4 + 16);
  v22 = *(_QWORD *)(v4 + 24);
  v23 = *(_QWORD *)(v4 + 32);
  v24 = *(_QWORD *)(v4 + 40);
  if (!*(_BYTE *)(v4 + 48))
  {
    v79 = *(_QWORD *)(v4 + 8);
    v80 = (uint64_t (*)(_QWORD))v24;
    v81 = v23;
    v28 = v20;
    v29 = objc_msgSend(*(id *)(a1 + 56), sel_publishDate, v16);
    if (v29)
    {
      v30 = v29;
      sub_1BB86C874();

      v31 = 0;
    }
    else
    {
      v31 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v18, v31, 1, v7);
    sub_1BA76D70C((uint64_t)v18, (uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
      v86 = v28;
      v87 = v79;
      v88 = v21;
      v89 = v22;
      v34 = v81;
      v35 = v80;
      v90 = v81;
      v91 = v80;
      sub_1BA968170(v28, v79, v21, v22, v81, (uint64_t)v80, 0);
      v36 = FormatDateFormat.format(_:)((uint64_t)v10);
      v37 = v10;
      v38 = v36;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v37, v7);
      sub_1BA968124(v28, v79, v21, v22, v34, (uint64_t)v35, 0);
      sub_1BA6ED6EC((uint64_t)v18, (uint64_t)&qword_1ED3B0540, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      return v38;
    }
    sub_1BA6ED6EC((uint64_t)v18, (uint64_t)&qword_1ED3B0540, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    return 0;
  }
  if (*(_BYTE *)(v4 + 48) != 1)
  {
    if (!(v21 | v19 | v20 | v22 | v23 | v24))
    {
      v38 = *(_QWORD *)(a1 + 40);
      swift_bridgeObjectRetain();
      return v38;
    }
    v32 = v21 | v19 | v22 | v23 | v24;
    if (v20 == 1 && !v32)
    {
      v33 = objc_msgSend(*(id *)(a1 + 56), sel_title, v16);
      goto LABEL_70;
    }
    if (v20 == 2 && !v32)
    {
      v33 = objc_msgSend(*(id *)(a1 + 56), sel_subtitle, v16);
LABEL_70:
      v68 = v33;
      if (v68)
      {
        v69 = v68;
        v38 = sub_1BB8729A0();

        return v38;
      }
      return 0;
    }
    if (v20 != 3 || v32)
    {
      if (v20 != 4 || v32)
      {
        if (v20 != 5 || v32)
        {
          if (v20 != 6 || v32)
          {
            if (v20 != 7 || v32)
            {
              if (v20 != 8 || v32)
              {
                if (v20 != 9 || v32)
                {
                  if (v20 != 10 || v32)
                  {
                    if (v20 == 11 && !v32)
                      __asm { BR              X10 }
                    sub_1BA93EB58(a1, (uint64_t)&v86);
                    v72 = v91;
                    v71 = v92;
                    v73 = v94;
                    swift_bridgeObjectRetain();
                    v74 = sub_1BA93EBE8((uint64_t)&v86);
                    v75 = v80(v74);
                    v86 = 0x656C7A7A7570;
                    v87 = 0xE600000000000000;
                    v88 = (uint64_t)v72;
                    v89 = v71;
                    LOBYTE(v90) = v73;
                    v91 = (uint64_t (*)(_QWORD))v75;
                    sub_1BB86BD4C();
                    swift_allocObject();
                    sub_1BB86BD40();
                    sub_1BB0E78A4(0);
                    sub_1BB0E7940();
                    v38 = sub_1BB86F8BC();
                    v78 = v77;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    sub_1BA93EB58(a1, (uint64_t)&v86);
                    if (!v78)
                    {
                      v76 = objc_msgSend(v93, sel_identifier);
                      v38 = sub_1BB8729A0();

                    }
                    sub_1BA93EBE8((uint64_t)&v86);
                    return v38;
                  }
                  v33 = objc_msgSend(*(id *)(a1 + 56), sel_teaserAnswer, v16);
                }
                else
                {
                  v33 = objc_msgSend(*(id *)(a1 + 56), sel_teaserNumber, v16);
                }
              }
              else
              {
                v33 = objc_msgSend(*(id *)(a1 + 56), sel_teaserDirection, v16);
              }
            }
            else
            {
              v33 = objc_msgSend(*(id *)(a1 + 56), sel_teaserInfo, v16);
            }
          }
          else
          {
            v33 = objc_msgSend(*(id *)(a1 + 56), sel_teaserClue, v16);
          }
        }
        else
        {
          v33 = objc_msgSend(*(id *)(a1 + 56), sel_difficultyDescription, v16);
        }
      }
      else
      {
        v33 = objc_msgSend(*(id *)(a1 + 56), sel_puzzleDescription, v16);
      }
      goto LABEL_70;
    }
    v52 = objc_msgSend(*(id *)(a1 + 56), sel_authors, v16);
    if (v52)
    {
      v53 = v52;
      v54 = sub_1BB872DB4();

      v38 = Array<A>.localizedOxfordCommaSeparatedList.getter(v54);
      v56 = v55;
      swift_bridgeObjectRelease();
      if (v56)
        return v38;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!a2)
    return 0;
  v25 = *(_QWORD *)v4;
  swift_getObjectType();
  v26 = qword_1ED3A4058;
  swift_retain();
  if (v26 != -1)
    swift_once();
  sub_1BA93EB58(a1, (uint64_t)&v86);
  sub_1BA83C6D8();
  sub_1BB86FF40();
  sub_1BA6ED6EC((uint64_t)&v86, (uint64_t)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  if ((v25 & 1) == 0)
  {
    if (v85 <= 1u)
    {
      v27 = *(double *)&v84;
LABEL_26:
      if (qword_1ED3A0FC8 != -1)
        swift_once();
      v40 = (id)qword_1ED3A0FB8;
      v41 = objc_msgSend(v40, sel_stringFromTimeInterval_, v27);
      if (v41)
      {
        v42 = v41;
        v43 = sub_1BB8729A0();
        v45 = v44;

      }
      else
      {
        v43 = 0;
        v45 = 0xE000000000000000;
      }
      v86 = v43;
      v87 = v45;
      v84 = 44;
      v85 = 0xE100000000000000;
      v82 = 0;
      v83 = 0xE000000000000000;
      sub_1BA7114A0();
      v57 = MEMORY[0x1E0DEA968];
      v58 = sub_1BB873B04();
      v60 = v59;
      swift_bridgeObjectRelease();
      v86 = v58;
      v87 = v60;
      v84 = 32;
      v85 = 0xE100000000000000;
      v61 = sub_1BB873AB0();
      v62 = *(_QWORD *)(v61 + 16);
      if (v62 >= 2)
        v62 = 2;
      v86 = v61;
      v87 = v61 + 32;
      v88 = 0;
      v89 = (2 * v62) | 1;
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3CFA28, v57, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEBF30]);
      sub_1BAFA72D0();
      v38 = sub_1BB872904();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v38;
    }
    v27 = 0.0;
    if (v85 == 2)
      goto LABEL_26;
    goto LABEL_40;
  }
  if (v85 > 1u)
  {
    v39 = 0.0;
    if (v85 != 2)
    {
LABEL_40:
      swift_release();
      return 0;
    }
  }
  else
  {
    v39 = *(double *)&v84;
  }
  if (qword_1EF2A7430 != -1)
    swift_once();
  v46 = (id)qword_1EF2CA990;
  v47 = objc_msgSend(v46, sel_stringFromTimeInterval_, v39);
  if (v47)
  {
    v48 = v47;
    v49 = sub_1BB8729A0();
    v51 = v50;

  }
  else
  {
    v49 = 0;
    v51 = 0xE000000000000000;
  }
  v86 = v49;
  v87 = v51;
  v84 = 44;
  v85 = 0xE100000000000000;
  v82 = 0;
  v83 = 0xE000000000000000;
  sub_1BA7114A0();
  v63 = MEMORY[0x1E0DEA968];
  v38 = sub_1BB873B04();
  v65 = v64;
  swift_bridgeObjectRelease();
  v86 = v38;
  v87 = v65;
  v84 = 32;
  v85 = 0xE100000000000000;
  v66 = sub_1BB873AB0();
  v67 = *(_QWORD *)(v66 + 16);
  if (v67 >= 2)
    v67 = 2;
  v86 = v66;
  v87 = v66 + 32;
  v88 = 0;
  v89 = (2 * v67) | 1;
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3CFA28, v63, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEBF30]);
  sub_1BAFA72D0();
  sub_1BB872904();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v38;
}

void sub_1BB0E7868()
{
  JUMPOUT(0x1BB0E7694);
}

uint64_t sub_1BB0E7898(uint64_t a1, uint64_t a2)
{
  return sub_1BA7E3378(a1, a2, (void (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
}

void sub_1BB0E78A4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EF2BB228)
  {
    v2 = sub_1BB0E78FC();
    v4 = type metadata accessor for FormatCellAutomation(a1, (uint64_t)&type metadata for PuzzleAutomation, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF2BB228);
  }
}

unint64_t sub_1BB0E78FC()
{
  unint64_t result;

  result = qword_1EF2BB230;
  if (!qword_1EF2BB230)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAutomation, &type metadata for PuzzleAutomation);
    atomic_store(result, (unint64_t *)&qword_1EF2BB230);
  }
  return result;
}

unint64_t sub_1BB0E7940()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BB238;
  if (!qword_1EF2BB238)
  {
    sub_1BB0E78A4(255);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCellAutomation<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BB238);
  }
  return result;
}

uint64_t FormatPuzzleBinding.Text.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  v4 = 15;
  if (v2 < 0xF)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static FormatPuzzleBinding.Text.CodingType.allCases.getter()
{
  return &unk_1E724FAD8;
}

uint64_t FormatPuzzleBinding.Text.CodingType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB0E7A24 + 4 * byte_1BB8EACB8[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB0E7A24()
{
  return 0x656C746974;
}

uint64_t sub_1BB0E7A38()
{
  return 0x656C746974627573;
}

uint64_t sub_1BB0E7A50()
{
  return 0x614E726F68747561;
}

uint64_t sub_1BB0E7A6C()
{
  return 0x7470697263736564;
}

uint64_t sub_1BB0E7A8C()
{
  return 0x6C75636966666964;
}

uint64_t sub_1BB0E7AA8()
{
  return 0x446873696C627570;
}

uint64_t sub_1BB0E7AC8()
{
  return 0x6C43726573616574;
}

uint64_t sub_1BB0E7AE0()
{
  return 0x6E49726573616574;
}

uint64_t sub_1BB0E7AF8()
{
  return 0x6944726573616574;
}

uint64_t sub_1BB0E7B1C()
{
  return 0x754E726573616574;
}

uint64_t sub_1BB0E7B3C()
{
  return 0x6E41726573616574;
}

uint64_t sub_1BB0E7B5C()
{
  return 0x6172754479616C70;
}

uint64_t sub_1BB0E7B7C()
{
  return 0x654C737365636361;
}

uint64_t sub_1BB0E7B9C()
{
  return 0x6974616D6F747561;
}

uint64_t sub_1BB0E7BB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7FCC10(*a1, *a2);
}

uint64_t sub_1BB0E7BC0()
{
  sub_1BB8745CC();
  FormatPuzzleBinding.Text.CodingType.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB0E7C24()
{
  FormatPuzzleBinding.Text.CodingType.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB0E7C74()
{
  sub_1BB8745CC();
  FormatPuzzleBinding.Text.CodingType.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB0E7CD4@<X0>(char *a1@<X8>)
{
  return FormatPuzzleBinding.Text.CodingType.init(rawValue:)(a1);
}

uint64_t sub_1BB0E7CE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatPuzzleBinding.Text.CodingType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BB0E7D04()
{
  sub_1BB0E9790();
  return sub_1BB872D60();
}

uint64_t sub_1BB0E7D60()
{
  sub_1BB0E9790();
  return sub_1BB872D0C();
}

void sub_1BB0E7DAC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724FAD8;
}

uint64_t sub_1BB0E7DBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPuzzleBinding.Text.init(from:)(a1, a2);
}

uint64_t sub_1BB0E7DD0(_QWORD *a1)
{
  return FormatPuzzleBinding.Text.encode(to:)(a1);
}

void sub_1BB0E7DE8(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB0E7E30()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _BYTE v6[56];
  _BYTE v7[264];

  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  sub_1BA93EB58(v1, (uint64_t)v7);
  memset(v6, 0, 48);
  v6[48] = 2;
  result = sub_1BB0E8988(0x696669746E656449, 0xEA00000000007265, (uint64_t)v7, (uint64_t)v6, (_QWORD *)(v4 + v3));
  *v0 = v4;
  return result;
}

uint64_t sub_1BB0E8988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v7 = *(_QWORD *)(a4 + 8);
  v8 = *(_QWORD *)(a4 + 16);
  v9 = *(_QWORD *)(a4 + 24);
  v10 = *(_QWORD *)(a4 + 32);
  v11 = *(_QWORD *)(a4 + 40);
  v12 = *(_BYTE *)(a4 + 48);
  *(_QWORD *)&v21 = *(_QWORD *)a4;
  v6 = v21;
  *((_QWORD *)&v21 + 1) = v7;
  *(_QWORD *)&v22 = v8;
  *((_QWORD *)&v22 + 1) = v9;
  v23 = v10;
  v24 = v11;
  v25 = v12;
  v13 = sub_1BB0E618C(a3, 0, (uint64_t *)&v21);
  v15 = v14;
  sub_1BA968124(v6, v7, v8, v9, v10, v11, v12);
  v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0)
    v16 = v13 & 0xFFFFFFFFFFFFLL;
  if (v16)
  {
    *(_QWORD *)&v21 = v13;
    *((_QWORD *)&v21 + 1) = v15;
    *((_QWORD *)&v22 + 1) = MEMORY[0x1E0DEA968];
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = 0u;
    v22 = 0u;
  }
  sub_1BAAF40BC(a1, a2, (uint64_t)&v21, a5);
  return sub_1BA93EBE8(a3);
}

BOOL _s8NewsFeed19FormatPuzzleBindingV4TextO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[6];
  uint64_t v60[7];

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v14 = *(unsigned __int8 *)(a2 + 48);
  v57 = *(_QWORD *)a1;
  v58 = v2;
  if (!*(_BYTE *)(a1 + 48))
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(_QWORD *)a2;
    v19 = *(_QWORD *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 48))
    {
      v60[0] = *(_QWORD *)a1;
      v60[1] = v2;
      v60[2] = v5;
      v60[3] = v4;
      v26 = v4;
      v47 = v4;
      v54 = v7;
      v60[4] = v7;
      v60[5] = v6;
      v27 = v18;
      v59[0] = v18;
      v59[1] = v17;
      v28 = v17;
      v29 = v19;
      v49 = v19;
      v50 = v17;
      v59[2] = v19;
      v59[3] = v11;
      v59[4] = v13;
      v59[5] = v12;
      v30 = v18;
      v31 = v17;
      v32 = v11;
      v33 = v11;
      v51 = v11;
      v52 = v13;
      v34 = v13;
      v35 = v13;
      v36 = v12;
      v37 = v6;
      v48 = v6;
      v53 = v12;
      v38 = v2;
      v39 = v3;
      sub_1BA968170(v30, v31, v29, v33, v35, v12, 0);
      sub_1BA968170(v39, v38, v5, v26, v54, v37, 0);
      sub_1BA968170(v27, v28, v49, v32, v34, v36, 0);
      sub_1BA968170(v39, v38, v5, v47, v54, v48, 0);
      v16 = _s8NewsFeed010FormatDateC0O2eeoiySbAC_ACtFZ_0(v60, v59);
      sub_1BA968124(v39, v38, v5, v47, v54, v48, 0);
      sub_1BA968124(v27, v50, v49, v51, v52, v53, 0);
      sub_1BA968124(v27, v50, v49, v51, v52, v53, 0);
      sub_1BA968124(v57, v58, v5, v47, v54, v48, 0);
      return v16;
    }
    v55 = 0;
    v56 = *(_QWORD *)(a1 + 16);
    v20 = *(_QWORD *)(a2 + 40);
    v21 = *(_QWORD *)(a1 + 24);
    v22 = *(_QWORD *)(a1 + 32);
    v23 = *(_QWORD *)(a1 + 40);
    sub_1BA7336E0(v3, v2, v56);
    v6 = v23;
    v7 = v22;
    v4 = v21;
    v12 = v20;
    v10 = v19;
    v9 = v18;
    v8 = v17;
    goto LABEL_83;
  }
  v56 = *(_QWORD *)(a1 + 16);
  v55 = *(_BYTE *)(a1 + 48);
  if (v55 != 1)
  {
    if (v5 | v2 | v3 | v4 | v7 | v6)
    {
      v24 = v5 | v2 | v4 | v7 | v6;
      if (v3 == 1 && !v24)
      {
        if (v14 == 2 && v9 == 1 && !(v10 | v8 | v11 | v13 | v12))
        {
          v16 = 1;
          v25 = *(_QWORD *)(a2 + 40);
          sub_1BA968124(1, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
          sub_1BA968124(1, 0, 0, v11, v13, v25, 2);
          return v16;
        }
LABEL_83:
        v42 = v10;
        v43 = v10;
        v44 = v12;
        v45 = v6;
        sub_1BA968170(v9, v8, v42, v11, v13, v12, v14);
        sub_1BA968124(v57, v58, v56, v4, v7, v45, v55);
        sub_1BA968124(v9, v8, v43, v11, v13, v44, v14);
        return 0;
      }
      if (v3 != 2 || v24)
      {
        if (v3 != 3 || v24)
        {
          if (v3 != 4 || v24)
          {
            if (v3 != 5 || v24)
            {
              if (v3 != 6 || v24)
              {
                if (v3 != 7 || v24)
                {
                  if (v3 != 8 || v24)
                  {
                    if (v3 != 9 || v24)
                    {
                      if (v3 != 10 || v24)
                      {
                        if (v3 != 11 || v24)
                        {
                          if (v14 != 2 || v9 != 12 || v10 | v8 | v11 | v13 | v12)
                            goto LABEL_83;
                          v40 = *(_QWORD *)(a2 + 40);
                          sub_1BA968124(12, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
                          v41 = 12;
                        }
                        else
                        {
                          if (v14 != 2 || v9 != 11 || v10 | v8 | v11 | v13 | v12)
                            goto LABEL_83;
                          v40 = *(_QWORD *)(a2 + 40);
                          sub_1BA968124(11, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
                          v41 = 11;
                        }
                      }
                      else
                      {
                        if (v14 != 2 || v9 != 10 || v10 | v8 | v11 | v13 | v12)
                          goto LABEL_83;
                        v40 = *(_QWORD *)(a2 + 40);
                        sub_1BA968124(10, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
                        v41 = 10;
                      }
                    }
                    else
                    {
                      if (v14 != 2 || v9 != 9 || v10 | v8 | v11 | v13 | v12)
                        goto LABEL_83;
                      v40 = *(_QWORD *)(a2 + 40);
                      sub_1BA968124(9, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
                      v41 = 9;
                    }
                  }
                  else
                  {
                    if (v14 != 2 || v9 != 8 || v10 | v8 | v11 | v13 | v12)
                      goto LABEL_83;
                    v40 = *(_QWORD *)(a2 + 40);
                    sub_1BA968124(8, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
                    v41 = 8;
                  }
                }
                else
                {
                  if (v14 != 2 || v9 != 7 || v10 | v8 | v11 | v13 | v12)
                    goto LABEL_83;
                  v40 = *(_QWORD *)(a2 + 40);
                  sub_1BA968124(7, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
                  v41 = 7;
                }
              }
              else
              {
                if (v14 != 2 || v9 != 6 || v10 | v8 | v11 | v13 | v12)
                  goto LABEL_83;
                v40 = *(_QWORD *)(a2 + 40);
                sub_1BA968124(6, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
                v41 = 6;
              }
            }
            else
            {
              if (v14 != 2 || v9 != 5 || v10 | v8 | v11 | v13 | v12)
                goto LABEL_83;
              v40 = *(_QWORD *)(a2 + 40);
              sub_1BA968124(5, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
              v41 = 5;
            }
          }
          else
          {
            if (v14 != 2 || v9 != 4 || v10 | v8 | v11 | v13 | v12)
              goto LABEL_83;
            v40 = *(_QWORD *)(a2 + 40);
            sub_1BA968124(4, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
            v41 = 4;
          }
        }
        else
        {
          if (v14 != 2 || v9 != 3 || v10 | v8 | v11 | v13 | v12)
            goto LABEL_83;
          v40 = *(_QWORD *)(a2 + 40);
          sub_1BA968124(3, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
          v41 = 3;
        }
      }
      else
      {
        if (v14 != 2 || v9 != 2 || v10 | v8 | v11 | v13 | v12)
          goto LABEL_83;
        v40 = *(_QWORD *)(a2 + 40);
        sub_1BA968124(2, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
        v41 = 2;
      }
    }
    else
    {
      if (v14 != 2 || v10 | v8 | v9 | v11 | v13 | v12)
        goto LABEL_83;
      v40 = *(_QWORD *)(a2 + 40);
      sub_1BA968124(0, 0, 0, *(_QWORD *)(a1 + 24), v7, v6, 2);
      v41 = 0;
    }
    sub_1BA968124(v41, 0, 0, v11, v13, v40, 2);
    return 1;
  }
  if (v14 != 1)
    goto LABEL_83;
  v15 = *(_QWORD *)(a2 + 40);
  sub_1BA968124(v57, v2, v5, v4, v7, v6, 1);
  sub_1BA968124(v9, v8, v10, v11, v13, v15, 1);
  return ((v9 ^ v57) & 1) == 0;
}

unint64_t sub_1BB0E9258()
{
  unint64_t result;

  result = qword_1EF2BB240;
  if (!qword_1EF2BB240)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Text.CodingType, &type metadata for FormatPuzzleBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2BB240);
  }
  return result;
}

unint64_t sub_1BB0E92A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BB248;
  if (!qword_1EF2BB248)
  {
    sub_1BA4AD288(255, &qword_1EF2BB250, (uint64_t)&type metadata for FormatPuzzleBinding.Text.CodingType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BB248);
  }
  return result;
}

unint64_t sub_1BB0E9300(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB0E9324();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB0E9324()
{
  unint64_t result;

  result = qword_1EF2BB258;
  if (!qword_1EF2BB258)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Text, &type metadata for FormatPuzzleBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2BB258);
  }
  return result;
}

unint64_t sub_1BB0E9368(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE75CCC();
  a1[2] = sub_1BAEF9B08();
  result = sub_1BB0E939C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB0E939C()
{
  unint64_t result;

  result = qword_1EF2BB260;
  if (!qword_1EF2BB260)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Text, &type metadata for FormatPuzzleBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2BB260);
  }
  return result;
}

uint64_t _s4TextOwxx_0(uint64_t a1)
{
  return sub_1BA968124(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t _s4TextOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BA968170(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s4TextOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BA968170(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1BA968124(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s4TextOwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1BA968124(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t _s4TextOwet_3(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s4TextOwst_3(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BB0E95EC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BB0E9604(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Text()
{
  return &type metadata for FormatPuzzleBinding.Text;
}

uint64_t _s4TextO10CodingTypeOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1BB0E9688 + 4 * byte_1BB8EACEB[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1BB0E96BC + 4 * byte_1BB8EACE6[v4]))();
}

uint64_t sub_1BB0E96BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0E96C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0E96CCLL);
  return result;
}

uint64_t sub_1BB0E96D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0E96E0);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1BB0E96E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0E96EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Text.CodingType()
{
  return &type metadata for FormatPuzzleBinding.Text.CodingType;
}

uint64_t sub_1BB0E9708(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1BB872AD8();
    return sub_1BB872B98();
  }
  return result;
}

unint64_t sub_1BB0E9790()
{
  unint64_t result;

  result = qword_1ED3A6630;
  if (!qword_1ED3A6630)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Text.CodingType, &type metadata for FormatPuzzleBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A6630);
  }
  return result;
}

uint64_t static ErrorStyler.feedTheme.getter()
{
  int v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  if (qword_1ED3D5150 != -1)
    swift_once();
  v0 = byte_1ED3D5168;
  v1 = (void *)objc_opt_self();
  v2 = v1;
  if (v0 == 1)
  {
    v3 = objc_msgSend(v1, sel_secondarySystemBackgroundColor);
    v4 = objc_msgSend(v2, sel_systemBackgroundColor);
    v5 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v3, v4);

  }
  else
  {
    v6 = objc_msgSend(v1, sel_systemBackgroundColor);
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  return sub_1BB86F52C();
}

uint64_t type metadata accessor for DebugPersonalizationSelectionButton()
{
  uint64_t result;

  result = qword_1EF2BB278;
  if (!qword_1EF2BB278)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB0E9934()
{
  return swift_initClassMetadata2();
}

char *sub_1BB0E9980(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  objc_super v46;

  v9 = qword_1EF2BB268;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_init);
  v12 = qword_1EF2BB270;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);

  v46.receiver = v11;
  v46.super_class = (Class)type metadata accessor for DebugPersonalizationSelectionButton();
  v13 = (char *)objc_msgSendSuper2(&v46, sel_initWithFrame_, a1, a2, a3, a4);
  v14 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v14, sel_setCornerRadius_, 12.0);

  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v15 = objc_msgSend(v13, sel_widthAnchor);
  v16 = objc_msgSend(v15, sel_constraintEqualToConstant_, 100.0);

  objc_msgSend(v16, sel_setActive_, 1);
  v17 = objc_msgSend(v13, sel_heightAnchor);
  v18 = objc_msgSend(v17, (SEL)&selRef_initWithHeadline_articleURL_selectedText_ + 2, 25.0);

  objc_msgSend(v18, sel_setActive_, 1);
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_labelColor);
  objc_msgSend(v13, sel_setTitleColor_forState_, v20, 0);

  v21 = qword_1EF2BB270;
  v22 = *(id *)&v13[qword_1EF2BB270];
  v23 = objc_msgSend(v19, sel_labelColor);
  objc_msgSend(v22, sel_setTintColor_, v23);

  v24 = objc_msgSend(v19, sel_secondarySystemBackgroundColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v24);

  v25 = qword_1EF2BB268;
  objc_msgSend(v13, sel_addSubview_, *(_QWORD *)&v13[qword_1EF2BB268]);
  objc_msgSend(v13, sel_addSubview_, *(_QWORD *)&v13[v21]);
  objc_msgSend(*(id *)&v13[v25], (SEL)&selRef_setTailIndent_, 0);
  v26 = objc_msgSend(*(id *)&v13[v25], sel_centerXAnchor);
  v27 = objc_msgSend(v13, sel_centerXAnchor);
  v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  objc_msgSend(v28, sel_setActive_, 1);
  v29 = objc_msgSend(*(id *)&v13[v25], sel_centerYAnchor);
  v30 = objc_msgSend(v13, sel_centerYAnchor);
  v31 = objc_msgSend(v29, (SEL)&selRef_userInterfaceIdiom + 6, v30);

  objc_msgSend(v31, sel_setActive_, 1);
  v32 = objc_msgSend(*(id *)&v13[v25], sel_leadingAnchor);
  v33 = objc_msgSend(*(id *)&v13[v21], sel_trailingAnchor);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, 15.0);

  objc_msgSend(v34, sel_setActive_, 1);
  objc_msgSend(*(id *)&v13[v21], sel_setContentMode_, 1);
  objc_msgSend(*(id *)&v13[v21], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v35 = objc_msgSend(*(id *)&v13[v21], sel_leadingAnchor);
  v36 = objc_msgSend(v13, sel_leadingAnchor);
  v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v36, 15.0);

  objc_msgSend(v37, sel_setActive_, 1);
  v38 = objc_msgSend(*(id *)&v13[v21], sel_centerYAnchor);
  v39 = objc_msgSend(*(id *)&v13[v25], sel_centerYAnchor);
  v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  objc_msgSend(v40, sel_setActive_, 1);
  v41 = objc_msgSend(*(id *)&v13[v21], sel_widthAnchor);
  v42 = objc_msgSend(v41, sel_constraintEqualToConstant_, 20.0);

  objc_msgSend(v42, sel_setActive_, 1);
  v43 = objc_msgSend(*(id *)&v13[v21], sel_heightAnchor);
  v44 = objc_msgSend(v43, sel_constraintEqualToConstant_, 20.0);

  objc_msgSend(v44, sel_setActive_, 1);
  return v13;
}

char *sub_1BB0E9F48(double a1, double a2, double a3, double a4)
{
  return sub_1BB0E9980(a1, a2, a3, a4);
}

void sub_1BB0E9F68(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;

  v5 = qword_1EF2BB268;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v7 = a3;
  *(_QWORD *)&a1[v5] = objc_msgSend(v6, sel_init);
  v8 = qword_1EF2BB270;
  *(_QWORD *)&a1[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);

  sub_1BB873EAC();
  __break(1u);
}

void sub_1BB0EA024()
{
  uint64_t v0;

}

id sub_1BB0EA050()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugPersonalizationSelectionButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BB0EA084(uint64_t a1)
{

}

uint64_t sub_1BB0EA0BC()
{
  return type metadata accessor for DebugPersonalizationSelectionButton();
}

uint64_t destroy for DebugFormatHistory(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugFormatHistory(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v7 = (_OWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 <= 2)
  {
    *(_OWORD *)(a1 + 88) = *v7;
  }
  else
  {
    *(_BYTE *)(a1 + 88) = *(_BYTE *)v7;
    *(_QWORD *)(a1 + 96) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  v11 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v11;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v12 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v12;
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  v14 = *(_QWORD *)(a2 + 184);
  v13 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v14;
  *(_QWORD *)(a1 + 192) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatHistory(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a2 + 96);
  if (v4 == 2)
  {
    if (v5 > 2)
      goto LABEL_8;
    goto LABEL_11;
  }
  if (v5 == 2)
  {
    sub_1BA92760C(a1 + 88);
    goto LABEL_11;
  }
  if (v4 >= 2)
  {
    if (v5 >= 2)
    {
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1BB0EA510(a1 + 88);
    goto LABEL_11;
  }
  if (v5 < 2)
  {
LABEL_11:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_12;
  }
LABEL_8:
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
LABEL_12:
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB0EA510(uint64_t a1)
{
  uint64_t v2;

  sub_1BA927570(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for DebugFormatHistory(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v7 = (_BYTE *)(a2 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a2 + 96);
  if (v8 != 2)
  {
    if (v9 == 2)
    {
      sub_1BA92760C(a1 + 88);
    }
    else if (v8 >= 2)
    {
      if (v9 >= 2)
      {
        *(_BYTE *)(a1 + 88) = *v7;
        *(_QWORD *)(a1 + 96) = v9;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_1BB0EA510(a1 + 88);
    }
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)v7;
LABEL_8:
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_release();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatHistory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 200))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatHistory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatHistory()
{
  return &type metadata for DebugFormatHistory;
}

void sub_1BB0EA7A8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  double v13;
  unint64_t v14;
  double v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v21;
  unint64_t v22;
  unint64_t v23;
  double *v24;
  uint64_t v25;

  v13 = CACurrentMediaTime();
  sub_1BB40E38C(a4, a5, a6, &v25);
  if (v6)
    return;
  v15 = CACurrentMediaTime();
  v16 = *(_QWORD **)(a3 + 184);
  v17 = *(id *)(a3 + 192);
  v18 = v16[2];
  if (!((unint64_t)v17 >> 62))
  {
    v19 = *(_QWORD *)(((unint64_t)v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v19)
      goto LABEL_4;
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v19 = sub_1BB873F30();
  v14 = swift_bridgeObjectRelease();
  if (!v19)
    goto LABEL_18;
LABEL_4:
  if (v18 == 0x8000000000000000 && v19 == -1)
  {
    __break(1u);
    return;
  }
  v14 = v18 % v19;
  if (((unint64_t)v17 & 0xC000000000000001) == 0)
  {
    if ((v14 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v14 < *(_QWORD *)(((unint64_t)v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v21 = *((id *)v17 + v14 + 4);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_19:
  v21 = (id)MEMORY[0x1BCCE4630](v14, v17);
LABEL_12:
  v17 = v21;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_22:
    v16 = sub_1BB392C68(0, v16[2] + 1, 1, v16);
  v23 = v16[2];
  v22 = v16[3];
  if (v23 >= v22 >> 1)
    v16 = sub_1BB392C68((_QWORD *)(v22 > 1), v23 + 1, 1, v16);
  v16[2] = v23 + 1;
  v24 = (double *)&v16[4 * v23];
  *((_QWORD *)v24 + 4) = a1;
  *((_QWORD *)v24 + 5) = a2;
  v24[6] = (v15 - v13) * 1000.0;
  *((_QWORD *)v24 + 7) = v17;
  *(_QWORD *)(a3 + 184) = v16;
}

uint64_t FeedChannelClusteringResult.clusters.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::FeedChannelClusteringResult __swiftcall FeedChannelClusteringResult.init(clusters:)(NewsFeed::FeedChannelClusteringResult clusters)
{
  NewsFeed::FeedChannelClusteringResult *v1;

  v1->clusters._rawValue = clusters.clusters._rawValue;
  return clusters;
}

void static FeedChannelClusteringResult.empty.getter(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

uint64_t FeedChannelClusteringResult.scoredHeadlines.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = MEMORY[0x1E0DEE9D8];
  v5 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 40;
    do
    {
      v4 = swift_bridgeObjectRetain();
      sub_1BB3847D8(v4);
      v3 += 24;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t static FeedChannelClusteringResult.- infix(_:_:)@<X0>(unint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
  {
LABEL_12:
    v16 = sub_1BA6E43EC(v5);
    swift_bridgeObjectRelease();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v16;
    v18 = swift_bridgeObjectRetain();
    v19 = sub_1BB0EAF64(v18, (uint64_t)sub_1BAA68974, v17);
    swift_release();
    result = swift_bridgeObjectRelease();
    *a2 = v19;
    return result;
  }
  v20 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA7447E8(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    v5 = v20;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = (void *)MEMORY[0x1BCCE4630](v7, a1);
      }
      else
      {
        v8 = *(void **)(a1 + 8 * v7 + 32);
        swift_unknownObjectRetain();
      }
      v9 = objc_msgSend(v8, sel_identifier);
      v10 = sub_1BB8729A0();
      v12 = v11;
      swift_unknownObjectRelease();

      v14 = *(_QWORD *)(v20 + 16);
      v13 = *(_QWORD *)(v20 + 24);
      if (v14 >= v13 >> 1)
        sub_1BA7447E8(v13 > 1, v14 + 1, 1);
      ++v7;
      *(_QWORD *)(v20 + 16) = v14 + 1;
      v15 = v20 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
    }
    while (v4 != v7);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t FeedChannelClusteringResult.next(filterAgainst:)(_QWORD *a1, _QWORD *a2, unint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = a3;
  v8 = *v3;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v39 = MEMORY[0x1E0DEE9D8];
    v11 = (unint64_t)&v39;
    sub_1BA7447E8(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v38 = (uint64_t)a2;
    v4 = 0;
    v10 = v39;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        v12 = (void *)MEMORY[0x1BCCE4630](v4, v5);
      }
      else
      {
        v12 = *(void **)(v5 + 8 * v4 + 32);
        swift_unknownObjectRetain();
      }
      v13 = objc_msgSend(v12, sel_identifier);
      v14 = sub_1BB8729A0();
      v16 = v15;
      swift_unknownObjectRelease();

      v39 = v10;
      v18 = *(_QWORD *)(v10 + 16);
      v17 = *(_QWORD *)(v10 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BA7447E8(v17 > 1, v18 + 1, 1);
        v10 = v39;
      }
      ++v4;
      *(_QWORD *)(v10 + 16) = v18 + 1;
      v19 = v10 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
    }
    while (v9 != v4);
    a2 = (_QWORD *)v38;
  }
  v20 = sub_1BA6E43EC(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v21 = swift_bridgeObjectRetain();
  v11 = sub_1BB0EB084(v21, v20);
  v5 = v22;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  if ((v5 & 1) != 0)
  {
    v33 = 0;
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    goto LABEL_29;
  }
  if ((v11 & 0x8000000000000000) != 0)
    goto LABEL_32;
  if (v11 >= *(_QWORD *)(v8 + 16))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v24 = (_QWORD *)(v8 + 24 * v11);
  v26 = v24[4];
  v25 = v24[5];
  v27 = (void *)v24[6];
  v11 = sub_1BA9BE674(v11 + 1, v8);
  v31 = v30 >> 1;
  if (v29 != v30 >> 1)
  {
    v4 = v29;
    v5 = v30;
    v38 = v28;
    *a1 = v26;
    a1[1] = v25;
    a1[2] = v27;
    if ((v30 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      v34 = v27;
LABEL_21:
      v33 = sub_1BA85DD3C(v11, v38, v4, v5);
LABEL_28:
      result = swift_unknownObjectRelease();
      goto LABEL_29;
    }
    sub_1BB874434();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v35 = v27;
    v36 = swift_dynamicCastClass();
    if (!v36)
    {
      swift_unknownObjectRelease();
      v36 = MEMORY[0x1E0DEE9D8];
    }
    v37 = *(_QWORD *)(v36 + 16);
    swift_release();
    if (!__OFSUB__(v31, v4))
    {
      if (v37 == v31 - v4)
      {
        v33 = swift_dynamicCastClass();
        if (!v33)
        {
          swift_unknownObjectRelease();
          v33 = MEMORY[0x1E0DEE9D8];
        }
        goto LABEL_28;
      }
      goto LABEL_35;
    }
LABEL_34:
    __break(1u);
LABEL_35:
    swift_unknownObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v32 = v27;
  result = swift_unknownObjectRelease();
  v33 = 0;
  *a1 = v26;
  a1[1] = v25;
  a1[2] = v32;
LABEL_29:
  *a2 = v33;
  return result;
}

uint64_t sub_1BB0EAF40()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0EAF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v18;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B114(0, v3, 0);
    v4 = v18;
    v6 = (void **)(a1 + 48);
    do
    {
      v7 = (uint64_t)*(v6 - 2);
      v8 = (uint64_t)*(v6 - 1);
      v9 = *v6;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain_n();
      v10 = v9;
      v11 = sub_1BAC9C5F8(a2, a3, v8);
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v18 + 16);
      v12 = *(_QWORD *)(v18 + 24);
      if (v13 >= v12 >> 1)
        sub_1BAC7B114(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v18 + 16) = v13 + 1;
      v14 = (_QWORD *)(v18 + 24 * v13);
      v14[4] = v7;
      v14[5] = v11;
      v14[6] = v10;
      v6 += 3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1BB0EB084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;

  v22 = *(_QWORD *)(a1 + 16);
  if (!v22)
    return 0;
  v2 = a2;
  v3 = 0;
  v23 = a1 + 32;
  v25 = a2 + 56;
  do
  {
    v4 = v23 + 24 * v3;
    v5 = *(void **)v4;
    v6 = *(void **)(v4 + 16);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v24 = v6;
    v7 = objc_msgSend(v5, sel_identifier);
    v8 = sub_1BB8729A0();
    v10 = v9;

    if (!*(_QWORD *)(v2 + 16))
      goto LABEL_19;
    v11 = v2;
    sub_1BB8745CC();
    sub_1BB872A90();
    v12 = sub_1BB874608();
    v13 = -1 << *(_BYTE *)(v2 + 32);
    v14 = v12 & ~v13;
    if (((*(_QWORD *)(v25 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      goto LABEL_19;
    v15 = *(_QWORD *)(v11 + 48);
    v16 = (_QWORD *)(v15 + 16 * v14);
    v17 = *v16 == v8 && v16[1] == v10;
    if (!v17 && (sub_1BB874398() & 1) == 0)
    {
      v18 = ~v13;
      while (1)
      {
        v14 = (v14 + 1) & v18;
        if (((*(_QWORD *)(v25 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          break;
        v19 = (_QWORD *)(v15 + 16 * v14);
        v20 = *v19 == v8 && v19[1] == v10;
        if (v20 || (sub_1BB874398() & 1) != 0)
          goto LABEL_3;
      }
LABEL_19:

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_3:

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    ++v3;
    v2 = v11;
  }
  while (v3 != v22);
  return 0;
}

ValueMetadata *type metadata accessor for FeedChannelClusteringResult()
{
  return &type metadata for FeedChannelClusteringResult;
}

uint64_t sub_1BB0EB2A4(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  unint64_t v16;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v2 + 16))(v5, v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v7 = *(_QWORD *)(a1 + 16);
      sub_1BB0EB41C();
      v8 = *(_QWORD *)&v5[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      v15 = 0x287365676E616863;
      v16 = 0xE800000000000000;
      v9 = *(_QWORD *)(v8 + 16);
      swift_bridgeObjectRelease();
      v14[1] = v9;
      sub_1BB87420C();
      sub_1BB872AFC(v10);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v11);
      v12 = v15;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
    }
    else
    {
      return 0x676E616863206F6ELL;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
    return 0x6C616974696E69;
  }
  return v12;
}

void sub_1BB0EB41C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BB2C8[0])
  {
    type metadata accessor for DebugFormatCacheFile();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, qword_1EF2BB2C8);
  }
}

uint64_t sub_1BB0EB470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for DebugFormatManagerData(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    result = type metadata accessor for DebugFormatFileDirectoryMetadata(319);
    if (v6 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1BB0EB4F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t, unint64_t, uint64_t);
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v9 = sub_1BB86EB84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = (v11 | 7) + v8 + 1;
  v13 = *(_QWORD *)(v10 + 64);
  v14 = v13 + v11;
  v15 = v13 + 7;
  v16 = (v12 & ~(v11 | 7)) + ((v13 + 7 + ((v13 + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 17;
  v17 = v11 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v17 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || v16 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
    swift_retain();
  }
  else
  {
    v21 = *((unsigned __int8 *)a2 + v8);
    if (v21 >= 2)
    {
      if (v8 <= 3)
        v22 = v8;
      else
        v22 = 4;
      __asm { BR              X14 }
    }
    v23 = v5;
    v24 = ~(v11 | 7);
    v25 = ~v11;
    v33 = v15;
    v34 = v9;
    if (v21 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v23);
      *(_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)a1 + v8) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v23);
      *((_BYTE *)a1 + v8) = 0;
    }
    v26 = ((unint64_t)a2 + v12) & v24;
    v27 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
    v27(((unint64_t)a1 + v12) & v24, v26, v34);
    v28 = (v14 + (((unint64_t)a1 + v12) & v24)) & v25;
    v29 = (v14 + v26) & v25;
    v27(v28, v29, v34);
    v30 = (v33 + v28) & 0xFFFFFFFFFFFFFFF8;
    v31 = (v33 + v29) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
    *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BB0EB774(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  if (((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v4)
    v5 = *(_QWORD *)(v3 + 64);
  else
    v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v6 = *(unsigned __int8 *)(a1 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(uint64_t))(v3 + 8))(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t))(v3 + 8))(a1);
  }
  v8 = sub_1BB86EB84();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (a1 + v5 + (v10 | 7) + 1) & ~(v10 | 7);
  v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v12(v11, v8);
  v12((*(_QWORD *)(v9 + 64) + v10 + v11) & ~v10, v8);
  return swift_bridgeObjectRelease();
}

_BYTE *sub_1BB0EB8D0(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = __src[v7];
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v7] = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    __dst[v7] = 0;
  }
  v10 = sub_1BB86EB84();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v7 + (v12 | 7) + 1;
  v14 = (unint64_t)&__dst[v13] & ~(v12 | 7);
  v15 = (unint64_t)&__src[v13] & ~(v12 | 7);
  v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
  v16(v14, v15, v10);
  v17 = *(_QWORD *)(v11 + 64);
  v18 = (v17 + v12 + v14) & ~v12;
  v19 = (v17 + v12 + v15) & ~v12;
  v16(v18, v19, v10);
  v20 = (v17 + 7 + v18) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v17 + 7 + v19) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  swift_bridgeObjectRetain();
  return __dst;
}

unsigned __int8 *sub_1BB0EBAC8(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void (*v19)(unint64_t, unint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (__dst != __src)
  {
    v9 = __dst[v8];
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    }
    v11 = __src[v8];
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v8] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v8] = 0;
    }
  }
  v13 = sub_1BB86EB84();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v8 + (v15 | 7) + 1;
  v17 = (unint64_t)&__dst[v16] & ~(v15 | 7);
  v18 = (unint64_t)&__src[v16] & ~(v15 | 7);
  v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 24);
  v19(v17, v18, v13);
  v20 = *(_QWORD *)(v14 + 64);
  v21 = (v20 + v15 + v17) & ~v15;
  v22 = (v20 + v15 + v18) & ~v15;
  v19(v21, v22, v13);
  v23 = (v20 + 7 + v21) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v20 + 7 + v22) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v23 + 16) = *(_BYTE *)(v24 + 16);
  return __dst;
}

_BYTE *sub_1BB0EBDAC(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = __src[v7];
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v7] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    __dst[v7] = 0;
  }
  v10 = sub_1BB86EB84();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v7 + (v12 | 7) + 1;
  v14 = (unint64_t)&__dst[v13] & ~(v12 | 7);
  v15 = (unint64_t)&__src[v13] & ~(v12 | 7);
  v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32);
  v16(v14, v15, v10);
  v17 = *(_QWORD *)(v11 + 64);
  v18 = (v17 + v12 + v14) & ~v12;
  v19 = (v17 + v12 + v15) & ~v12;
  v16(v18, v19, v10);
  v20 = (v17 + 7 + v18) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v17 + 7 + v19) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  return __dst;
}

unsigned __int8 *sub_1BB0EBF78(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void (*v19)(unint64_t, unint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (__dst != __src)
  {
    v9 = __dst[v8];
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    }
    v11 = __src[v8];
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v8] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v8] = 0;
    }
  }
  v13 = sub_1BB86EB84();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v8 + (v15 | 7) + 1;
  v17 = (unint64_t)&__dst[v16] & ~(v15 | 7);
  v18 = (unint64_t)&__src[v16] & ~(v15 | 7);
  v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 40);
  v19(v17, v18, v13);
  v20 = *(_QWORD *)(v14 + 64);
  v21 = (v20 + v15 + v17) & ~v15;
  v22 = (v20 + v15 + v18) & ~v15;
  v19(v21, v22, v13);
  v23 = (v20 + 7 + v21) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v20 + 7 + v22) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v23 + 16) = *(_BYTE *)(v24 + 16);
  return __dst;
}

uint64_t sub_1BB0EC250(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unsigned int v18;
  int v19;
  int v21;
  int v22;
  unint64_t v23;
  unint64_t v24;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v5)
    v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  else
    v6 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v7 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = v10 | 7;
  v12 = v6 + (v10 | 7) + 1;
  v13 = *(_QWORD *)(v7 + 64);
  v14 = v13 + v10;
  v15 = v13 + 7;
  if (a2 <= v9)
    goto LABEL_24;
  v16 = (v12 & ~v11) + ((v15 + (v14 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 17;
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v18 = ((a2 - v9 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v18))
    {
      v19 = *(_DWORD *)&a1[v16];
      if (!v19)
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v18 > 0xFF)
    {
      v19 = *(unsigned __int16 *)&a1[v16];
      if (!*(_WORD *)&a1[v16])
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v18 < 2)
      goto LABEL_24;
  }
  v19 = a1[v16];
  if (!a1[v16])
  {
LABEL_24:
    v23 = (unint64_t)&a1[v12] & ~v11;
    if (v8 >= 0x7FFFFFFF)
      return (*(uint64_t (**)(unint64_t))(v7 + 48))(v23);
    v24 = *(_QWORD *)(((v15 + ((v14 + v23) & ~v10)) & 0xFFFFFFFFFFFFF8) + 8);
    if (v24 >= 0xFFFFFFFF)
      LODWORD(v24) = -1;
    return (v24 + 1);
  }
LABEL_17:
  v21 = (v19 - 1) << v17;
  if (v16 >= 4)
    v21 = 0;
  if ((v12 & ~(_DWORD)v11) + (((_DWORD)v15 + (v14 & ~(_DWORD)v10)) & 0xFFFFFFF8) == -16)
    v22 = *a1;
  else
    v22 = *(_DWORD *)a1;
  return v9 + (v22 | v21) + 1;
}

void sub_1BB0EC3E0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;

  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7)
    v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  else
    v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v9 = *(_QWORD *)(sub_1BB86EB84() - 8);
  if (*(_DWORD *)(v9 + 84) <= 0x7FFFFFFFu)
    v10 = 0x7FFFFFFF;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((v8 + (*(unsigned __int8 *)(v9 + 80) | 7) + 1) & ~(*(unsigned __int8 *)(v9 + 80) | 7))
      + ((*(_QWORD *)(v9 + 64)
        + 7
        + ((*(_QWORD *)(v9 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  if (a3 <= v10)
  {
    v12 = 0u;
  }
  else if (v11 <= 3)
  {
    v14 = ((a3 - v10 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v12 = 4u;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = 1u;
  }
  if (v10 >= a2)
    __asm { BR              X16 }
  v13 = ~v10 + a2;
  if (v11 < 4)
  {
    v13 &= ~(-1 << (8 * v11));
    bzero(a1, v11);
    if ((_DWORD)v11 == 1)
    {
      *a1 = v13;
      goto LABEL_22;
    }
  }
  else
  {
    bzero(a1, v11);
  }
  *(_DWORD *)a1 = v13;
LABEL_22:
  __asm { BR              X10 }
}

uint64_t type metadata accessor for DebugFormatManagerResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugFormatManagerResult);
}

uint64_t type metadata accessor for DebugFormatManagerData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugFormatManagerData);
}

uint64_t sub_1BB0EC638()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2[4] = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1BB0EC6BC(_QWORD *__dst, unsigned __int8 *__src, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v4 = __dst;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || v7 + 1 > 0x18)
  {
    v10 = *(_QWORD *)__src;
    *v4 = *(_QWORD *)__src;
    v4 = (_QWORD *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v11 = __src[v7];
    if (v11 >= 2)
    {
      if (v7 <= 3)
        v12 = v7;
      else
        v12 = 4;
      __asm { BR              X14 }
    }
    if (v11 == 1)
    {
      (*(void (**)(_QWORD *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v4 + v7) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(_QWORD *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *((_BYTE *)v4 + v7) = 0;
    }
  }
  return v4;
}

uint64_t sub_1BB0EC82C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 <= v3)
    v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(a1 + v4);
  if (v5 >= 2)
  {
    if (v4 <= 3)
      v6 = v4;
    else
      v6 = 4;
    __asm { BR              X14 }
  }
  if (v5 != 1)
    return (*(uint64_t (**)(uint64_t))(v2 + 8))(a1);
  (*(void (**)(uint64_t))(v2 + 8))(a1);
  return swift_bridgeObjectRelease();
}

_BYTE *sub_1BB0EC920(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = __src[v7];
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v7] = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1BB0ECA50(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7)
      v8 = *(_QWORD *)(v6 + 64);
    else
      v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    v9 = __dst[v8];
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    }
    v11 = __src[v8];
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v8] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v8] = 0;
    }
  }
  return __dst;
}

_BYTE *sub_1BB0ECC4C(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = __src[v7];
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v7] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1BB0ECD78(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7)
      v8 = *(_QWORD *)(v6 + 64);
    else
      v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    v9 = __dst[v8];
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    }
    v11 = __src[v8];
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v8] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v8] = 0;
    }
  }
  return __dst;
}

uint64_t sub_1BB0ECF70(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 <= v3)
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_21:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 3)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_21;
LABEL_14:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 254);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB0ED03C + 4 * byte_1BB8EB04A[(v5 - 1)]))();
}

void sub_1BB0ED088(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v5)
    v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1BB0ED238(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  v3 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v3 <= v2)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v3) < 2u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB0ED288 + 4 * byte_1BB8EB058[v4]))();
}

void sub_1BB0ED2D0(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v4)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  else
    v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (a2 > 1)
  {
    v6 = a2 - 2;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t sub_1BB0ED3A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1BA53CDBC(0, qword_1ED3CA7A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v12 - v1;
  v3 = type metadata accessor for SportsDataConfiguration();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v12 - v8;
  swift_retain();
  sub_1BB86E878();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1BA53CD1C((uint64_t)v2);
    v12[0] = 0xD000000000000015;
    v12[1] = 0x80000001BB979E50;
    v10 = sub_1BB86E0EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BB0EDA7C((uint64_t)v2, (uint64_t)v9);
    sub_1BA988294((uint64_t)v9, (uint64_t)v6);
    sub_1BA53CDBC(0, &qword_1ED3A3A48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v10 = sub_1BB86E9E0();
    sub_1BA9882D8((uint64_t)v9);
  }
  return v10;
}

uint64_t sub_1BB0ED54C()
{
  void *v0;
  void *v1;
  uint64_t v2;

  type metadata accessor for SportsDataConfiguration();
  sub_1BB86EC14();
  v0 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();

  v1 = (void *)sub_1BB86E854();
  v2 = sub_1BB86EA28();
  swift_release();

  return v2;
}

uint64_t sub_1BB0ED60C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v14[2];

  v2 = type metadata accessor for SportsDataConfiguration();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA53CDBC(0, qword_1ED3CA7A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v14 - v10;
  sub_1BA988294(a1, (uint64_t)v14 - v10);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v12(v11, 0, 1, v2);
  sub_1BA53CD68((uint64_t)v11, (uint64_t)v8);
  swift_retain();
  sub_1BB86E884();
  swift_release();
  sub_1BA53CD1C((uint64_t)v11);
  v12(v11, 1, 1, v2);
  sub_1BA53CD68((uint64_t)v11, (uint64_t)v8);
  swift_retain();
  sub_1BB86E884();
  swift_release();
  sub_1BA53CD1C((uint64_t)v11);
  sub_1BA988294(a1, (uint64_t)v5);
  sub_1BA53CDBC(0, &qword_1ED3A3A48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

char *sub_1BB0ED7C4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;

  sub_1BA53CDBC(0, qword_1ED3CA7A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - v9;
  v11 = type metadata accessor for SportsDataConfiguration();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v21 = (uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v20 - v15;
  swift_retain();
  sub_1BB86E878();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1BA53CD1C((uint64_t)v10);
    swift_willThrow();
    v17 = a1;
  }
  else
  {
    sub_1BB0EDA7C((uint64_t)v10, (uint64_t)v16);
    sub_1BA988294((uint64_t)v16, (uint64_t)v7);
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v18(v7, 0, 1, v11);
    sub_1BA53CD68((uint64_t)v7, (uint64_t)v4);
    swift_retain();
    sub_1BB86E884();
    swift_release();
    sub_1BA53CD1C((uint64_t)v7);
    v18(v7, 1, 1, v11);
    sub_1BA53CD68((uint64_t)v7, (uint64_t)v4);
    swift_retain();
    sub_1BB86E884();
    swift_release();
    sub_1BA53CD1C((uint64_t)v7);
    sub_1BA988294((uint64_t)v16, v21);
    sub_1BA53CDBC(0, &qword_1ED3A3A48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v10 = (char *)sub_1BB86E9E0();
    sub_1BA9882D8((uint64_t)v16);
  }
  return v10;
}

uint64_t sub_1BB0EDA38()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB0EDA74()
{
  return sub_1BB0ED54C();
}

uint64_t sub_1BB0EDA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsDataConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB0EDAC0()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_1BA98786C();
}

uint64_t MotionContainerView.motionLayer.getter()
{
  void *v0;
  id v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = objc_msgSend(v0, sel_layer);
  v2 = objc_msgSend(v1, sel_sublayers);

  if (v2)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9960);
    v3 = sub_1BB872DB4();

    if (v3 >> 62)
      goto LABEL_16;
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v4; v4 = sub_1BB873F30())
    {
      v5 = 4;
      while (1)
      {
        v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCE4630](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
        v7 = v6;
        v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        sub_1BB0EDD04();
        v9 = swift_dynamicCastClass();
        if (v9)
        {
          v10 = v9;
          swift_bridgeObjectRelease_n();
          return v10;
        }

        ++v5;
        if (v8 == v4)
          goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t MotionContainerView.shouldMonitorScroll.getter()
{
  return 0;
}

uint64_t MotionContainerView.blueprintViewportMonitor(_:viewportMotionDataDidChange:)()
{
  sub_1BB870C00();
  sub_1BB8702D0();
  return swift_release();
}

uint64_t MotionContainerView.blueprintViewportMonitor(_:viewportMotionEnabled:)()
{
  return sub_1BB8702B8();
}

uint64_t sub_1BB0EDCB0()
{
  sub_1BB870C00();
  sub_1BB8702D0();
  return swift_release();
}

uint64_t sub_1BB0EDCEC()
{
  return sub_1BB8702B8();
}

void sub_1BB0EDD04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BB3D0)
  {
    sub_1BA49A224(255, &qword_1EF2BB3D8);
    v0 = sub_1BB86F598();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BB3D0);
  }
}

id sub_1BB0EDD68()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id result;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  id v18;
  int64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v30;
  uint64_t v31;
  void **v32;
  void *v33;
  void *v34;
  double v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  char **v45;
  double v46;
  double v47;
  double v48;
  double v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double *v55;
  void *v56;
  char *v57;
  void *v58;
  void *v59;
  char *v60;
  uint64_t v61;
  _QWORD v62[16];
  _OWORD v63[7];
  _QWORD v64[16];
  _QWORD v65[16];
  _QWORD v66[16];
  _QWORD v67[16];
  _QWORD v68[16];
  _QWORD v69[16];
  _BYTE v70[32];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v1 = v0;
  v2 = sub_1BB0EE4F8();
  v3 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile];
  sub_1BAF97E40((uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile], (uint64_t)v64);
  v4 = (uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_sourceFile;
  sub_1BAF97E40((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_sourceFile, (uint64_t)v65);
  sub_1BAF97E40((uint64_t)v64, v4);
  sub_1BA6A0C50(v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFC6A8C);
  sub_1BA6A0C50(v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
  sub_1BAF97E40(v4, (uint64_t)v66);
  sub_1BAF97E40((uint64_t)v66, (uint64_t)v70);
  sub_1BA6A0C50(v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFC6A8C);
  sub_1BAFC5CD8((uint64_t)v70);
  sub_1BA6A0C50(v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);

  v5 = sub_1BB0EE5F8();
  sub_1BAF97E40(v3, (uint64_t)v67);
  v6 = (uint64_t)&v5[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_sourceFile];
  sub_1BAF97E40((uint64_t)&v5[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_sourceFile], (uint64_t)v68);
  sub_1BAF97E40((uint64_t)v67, v6);
  sub_1BA6A0C50(v67, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFC6A8C);
  sub_1BA6A0C50(v68, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
  sub_1BAFF4518();

  sub_1BAF97E40(v3, (uint64_t)v69);
  sub_1BAF97E40((uint64_t)v69, (uint64_t)v70);
  if (sub_1BA8CF120((uint64_t)v70) != 1)
  {
    v11 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView];
    v12 = v71;
    v13 = v72;
    v14 = __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_editor]+ OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_sourceTheme), *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_editor]+ OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_sourceTheme+ 24));
    v15 = v14[5];
    v63[4] = v14[4];
    v63[5] = v15;
    v63[6] = v14[6];
    v16 = v14[1];
    v63[0] = *v14;
    v63[1] = v16;
    v17 = v14[3];
    v63[2] = v14[2];
    v63[3] = v17;
    sub_1BAF97E40((uint64_t)v69, (uint64_t)v62);
    sub_1BB0F0E74(v62);
    v18 = sub_1BB0F03B8(v12, v13, (uint64_t)v63, 0);
    objc_msgSend(v11, sel_setAttributedText_, v18);

    sub_1BA7114A0();
    v19 = *(_QWORD *)(sub_1BB873AB0() + 16);
    result = (id)swift_bridgeObjectRelease();
    if (!v19)
    {
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v60 = v1;
    v61 = MEMORY[0x1E0DEE9D8];
    result = (id)sub_1BA7447E8(0, v19, 0);
    v20 = 0;
    v21 = 1;
    v22 = v19;
    do
    {
      if (v20)
        goto LABEL_25;
      sub_1BA6F0168();
      result = (id)sub_1BB873B58();
      v23 = result;
      v25 = v24;
      v27 = *(_QWORD *)(v61 + 16);
      v26 = *(_QWORD *)(v61 + 24);
      if (v27 >= v26 >> 1)
        result = (id)sub_1BA7447E8(v26 > 1, v27 + 1, 1);
      *(_QWORD *)(v61 + 16) = v27 + 1;
      v28 = v61 + 16 * v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_QWORD *)(v28 + 40) = v25;
      v20 = v21 == v19;
      if (v21 == v19)
      {
        v21 = 0;
      }
      else if (__OFADD__(v21++, 1))
      {
        __break(1u);
        goto LABEL_24;
      }
      --v22;
    }
    while (v22);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6A0BA4();
    sub_1BB872904();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    sub_1BA847C08();
    v31 = swift_allocObject();
    v32 = (void **)MEMORY[0x1E0DC1138];
    *(_OWORD *)(v31 + 16) = xmmword_1BB87A390;
    v33 = *v32;
    *(_QWORD *)(v31 + 32) = *v32;
    v34 = (void *)objc_opt_self();
    v35 = *MEMORY[0x1E0DC1438];
    swift_bridgeObjectRetain();
    v36 = v33;
    v37 = objc_msgSend(v34, sel_monospacedSystemFontOfSize_weight_, 14.0, v35);
    v38 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    *(_QWORD *)(v31 + 40) = v37;
    v39 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(v31 + 64) = v38;
    *(_QWORD *)(v31 + 72) = v39;
    *(_QWORD *)(v31 + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    *(_QWORD *)(v31 + 80) = v30;
    v40 = v39;
    v41 = v30;
    sub_1BA76E82C(v31);
    v42 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v43 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BA76F768();
    v44 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v45 = (char **)objc_msgSend(v42, sel_initWithString_attributes_, v43, v44);

    swift_bridgeObjectRelease();
    objc_msgSend(v45, sel_boundingRectWithSize_options_context_, 1, 0, 1.79769313e308, 1.79769313e308);
    v47 = v46;
    v49 = v48;
    v50 = *(void **)&v60[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel];
    objc_msgSend(v50, sel_setAttributedText_, v45);
    objc_msgSend(v50, sel_setFrame_, 0.0, 0.0, v47, v49);
    sub_1BB0EE680(0);
    if (v73)
    {
      v52 = v74;
      v51 = v75;
      swift_bridgeObjectRetain();
      v53 = sub_1BB0EED34() * (double)v51;
      v54 = *(double *)&v60[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___charSize
                          + 8];

      sub_1BA6A0C50(v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
      swift_bridgeObjectRelease();
      v55 = (double *)&v60[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize];
      *v55 = v53;
      v55[1] = v54;
      v55[2] = v53;
      v55[3] = v54 * (double)v52;
      v45 = &selRef_backgroundColor;
      result = objc_msgSend(v60, sel_view);
      if (!result)
        goto LABEL_28;
      v56 = result;
      objc_msgSend(result, sel_setNeedsLayout);

      result = objc_msgSend(v60, sel_view);
      if (result)
        goto LABEL_22;
      __break(1u);
    }

    sub_1BA6A0C50(v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
    v57 = &v60[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize];
    *(_OWORD *)v57 = 0u;
    *((_OWORD *)v57 + 1) = 0u;
    result = objc_msgSend(v60, sel_view);
    if (!result)
      goto LABEL_29;
    v58 = result;
    objc_msgSend(result, sel_setNeedsLayout);

    result = objc_msgSend(v60, sel_view);
    if (!result)
      goto LABEL_30;
LABEL_22:
    v59 = result;
    objc_msgSend(result, sel_layoutIfNeeded);

    return sub_1BB0EFDA4();
  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView], sel_setAttributedText_, 0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel], sel_setAttributedText_, 0);
  v7 = &v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = result;
  objc_msgSend(result, sel_setNeedsLayout);

  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return result;
  }
  v10 = result;
  objc_msgSend(result, sel_layoutIfNeeded);

  return sub_1BB0EFDA4();
}

id sub_1BB0EE4F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  objc_super v14;
  _OWORD v15[8];

  v1 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___breakpointView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___breakpointView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___breakpointView);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_editor);
    swift_retain();
    sub_1BB0EED34();
    v6 = v5;
    v7 = (objc_class *)type metadata accessor for DebugFormatDebuggerSourceBreakpointView();
    v8 = (char *)objc_allocWithZone(v7);
    v9 = (uint64_t)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_sourceFile];
    sub_1BA8EBB18(v15);
    sub_1BAF97E40((uint64_t)v15, v9);
    *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_editor] = v4;
    *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_breakpointSize] = v6;
    v14.receiver = v8;
    v14.super_class = v7;
    v10 = objc_msgSendSuper2(&v14, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v11 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v10;
    v3 = v10;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

char *sub_1BB0EE5F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___highlightView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___highlightView);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___highlightView);
  }
  else
  {
    v4 = v0;
    objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerSourceHighlightView());
    v5 = swift_retain();
    v6 = sub_1BAFF4644(v5);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

uint64_t sub_1BB0EE680(char a1)
{
  unint64_t v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t result;
  char *v11;
  int v12;
  __objc2_class_ro *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __objc2_meth_list *v38;
  __objc2_meth_list *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  CGAffineTransform v45;
  unint64_t v46;
  _BYTE v47[128];
  _BYTE v48[128];
  uint64_t v49[6];
  CGRect v50;
  CGRect v51;
  CGRect v52;

  v43 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView);
  v3 = objc_msgSend(v43, sel_subviews);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
  v4 = sub_1BB872DB4();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v5)
      goto LABEL_12;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      goto LABEL_12;
  }
  if (v5 < 1)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x1BCCE4630](i, v4);
    else
      v7 = *(id *)(v4 + 8 * i + 32);
    v8 = v7;
    type metadata accessor for DebugFormatDebuggerSourceMetricView();
    if (swift_dynamicCastClass())
      objc_msgSend(v8, sel_removeFromSuperview);

  }
LABEL_12:
  swift_bridgeObjectRelease();
  v9 = v1;
  swift_retain();
  sub_1BB86D2B8();
  result = swift_release();
  if (v48[0] != 1)
    return result;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel), sel_bounds);
  CGRectGetMaxX(v50);
  v11 = (char *)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile);
  sub_1BAF97E40(v9 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile, (uint64_t)v47);
  sub_1BAF97E40((uint64_t)v47, (uint64_t)v48);
  v12 = sub_1BA8CF120((uint64_t)v48);
  v13 = (__objc2_class_ro *)MEMORY[0x1E0DEE9D8];
  v14 = MEMORY[0x1E0DEE9D8];
  if (v12 != 1)
  {
    v14 = *((_QWORD *)v11 + 10);
    swift_bridgeObjectRetain();
  }
  v46 = (unint64_t)v13;
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    v1 = MEMORY[0x1E0DEE9D8];
    if ((a1 & 1) == 0)
      return swift_bridgeObjectRelease();
LABEL_38:
    if (!(v1 >> 62))
    {
      v36 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (!v36)
        goto LABEL_50;
      goto LABEL_40;
    }
LABEL_49:
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v36 = result;
    if (!result)
      goto LABEL_50;
LABEL_40:
    if (v36 < 1)
    {
      __break(1u);
      return result;
    }
    v37 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v38 = (__objc2_meth_list *)MEMORY[0x1BCCE4630](v37, v1);
      else
        v38 = (__objc2_meth_list *)*(id *)(v1 + 8 * v37 + 32);
      v39 = v38;
      ++v37;
      CGAffineTransformMakeScale(&v45, 0.0, 0.0);
      -[__objc2_meth_list setTransform:](v39, sel_setTransform_, &v45);

    }
    while (v36 != v37);
LABEL_50:
    v40 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v40);
    sub_1BB87375C();
    return swift_bridgeObjectRelease();
  }
  v41 = a1;
  v44 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceMetrics;
  v42 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView);
  v16 = (uint64_t *)(v14 + 56);
  do
  {
    v18 = *(v16 - 2);
    v17 = *(v16 - 1);
    v19 = *v16;
    v20 = v9;
    v21 = *(_QWORD *)(v9 + v44);
    if (!v21)
    {
      swift_bridgeObjectRetain();
      v28 = MEMORY[0x1E0DEE9D8];
      v26 = MEMORY[0x1E0DEE9D8];
      goto LABEL_30;
    }
    v22 = *(v16 - 3);
    v23 = *(_QWORD *)(v21 + 16);
    v24 = *(_QWORD *)(v23 + 16);
    swift_bridgeObjectRetain();
    if (v24)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = sub_1BB4AB3C0(v22, v18, v17, v19);
      v26 = MEMORY[0x1E0DEE9D8];
      if ((v27 & 1) != 0)
      {
        v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v25);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = MEMORY[0x1E0DEE9D8];
    }
    v29 = *(_QWORD *)(v20 + v44);
    if (v29)
    {
      v30 = *(_QWORD *)(v29 + 32);
      if (*(_QWORD *)(v30 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31 = sub_1BB4AB3C0(v22, v18, v17, v19);
        if ((v32 & 1) != 0)
        {
          v28 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    v28 = MEMORY[0x1E0DEE9D8];
LABEL_30:
    sub_1BB3766BC(v28, v26, (uint64_t)v49);
    swift_bridgeObjectRelease();
    v1 = (unint64_t)objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerSourceMetricView());
    v33 = sub_1BAA659F4(v49);
    objc_msgSend(v33, sel_sizeToFit);
    if (__OFSUB__(v19, 1))
    {
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    v9 = v20;
    sub_1BB0EED34();
    v1 = (unint64_t)&StubThumbnailProcessor;
    objc_msgSend(v33, sel_bounds);
    CGRectGetWidth(v51);
    swift_bridgeObjectRelease();
    if (__OFSUB__(v17, 1))
      goto LABEL_47;
    objc_msgSend(v33, sel_bounds);
    CGRectGetHeight(v52);
    v34 = v33;
    objc_msgSend(v34, sel_frame);
    sub_1BB873594();
    objc_msgSend(v34, sel_setFrame_);

    objc_msgSend(v43, sel_insertSubview_belowSubview_, v34, v42);
    v35 = v34;
    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    v16 += 4;
    sub_1BB872E8C();
    sub_1BB872DCC();

    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  v1 = v46;
  if ((v41 & 1) != 0)
    goto LABEL_38;
  return swift_bridgeObjectRelease();
}

double sub_1BB0EED34()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t inited;
  void **v4;
  void *v5;
  void *v6;
  double v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___charSize;
  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___charSize
                 + 16) & 1) == 0)
    return *(double *)v1;
  v2 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  sub_1BA847C08();
  inited = swift_initStackObject();
  v4 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v5 = *v4;
  *(_QWORD *)(inited + 32) = *v4;
  v6 = (void *)objc_opt_self();
  v7 = *MEMORY[0x1E0DC1438];
  v8 = v5;
  v9 = objc_msgSend(v6, sel_monospacedSystemFontOfSize_weight_, 14.0, v7);
  v10 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v9;
  v11 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 72) = v11;
  *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v2;
  v12 = v11;
  v13 = v2;
  sub_1BA76E82C(inited);
  v14 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v15 = (void *)sub_1BB872970();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v16 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

  objc_msgSend(v17, sel_size);
  v19 = v18;
  v21 = v20;

  *(double *)v1 = v19;
  *(_QWORD *)(v1 + 8) = v21;
  *(_BYTE *)(v1 + 16) = 0;
  return v19;
}

void sub_1BB0EEF5C()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  char *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  objc_super v20;

  v1 = v0;
  v20.receiver = v0;
  v20.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v20, sel_viewDidLoad);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView];
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  objc_msgSend(v2, sel_setDirectionalLockEnabled_, 1);
  objc_msgSend(v2, sel_setAlwaysBounceVertical_, 1);
  objc_msgSend(v2, sel_setAlwaysBounceHorizontal_, 1);
  objc_msgSend(v2, sel_setDelegate_, v1);
  objc_msgSend(v2, sel_setContentInset_, 8.0, *(double *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding]+ *(double *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding], 0.0, 0.0);
  v5 = objc_msgSend(v1, sel_view);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_addSubview_, v2);

    v7 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView];
    v8 = objc_msgSend(v3, sel_tertiarySystemBackgroundColor);
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

    v9 = objc_msgSend(v7, sel_textContainer);
    objc_msgSend(v9, sel_setLineFragmentPadding_, 0.0);

    objc_msgSend(v7, sel_setTextContainerInset_, *MEMORY[0x1E0DC49E8], *(double *)(MEMORY[0x1E0DC49E8] + 8), *(double *)(MEMORY[0x1E0DC49E8] + 16), *(double *)(MEMORY[0x1E0DC49E8] + 24));
    objc_msgSend(v7, sel_setScrollEnabled_, 0);
    objc_msgSend(v7, sel_setEditable_, 0);
    objc_msgSend(v7, sel_setSelectable_, 0);
    objc_msgSend(v2, sel_addSubview_, v7);
    v10 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView];
    v11 = objc_msgSend(v3, sel_tertiarySystemBackgroundColor);
    objc_msgSend(v10, sel_setBackgroundColor_, v11);

    objc_msgSend(v2, sel_addSubview_, v10);
    v12 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel];
    objc_msgSend(v12, sel_setUserInteractionEnabled_, 0);
    objc_msgSend(v12, sel_setTextAlignment_, 2);
    objc_msgSend(v12, sel_setNumberOfLines_, 0);
    v13 = objc_msgSend(v3, sel_tertiarySystemBackgroundColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v13);

    objc_msgSend(v2, sel_addSubview_, v12);
    v14 = sub_1BB0EE5F8();
    objc_msgSend(v2, sel_addSubview_, v14);

    v15 = sub_1BB0EE4F8();
    objc_msgSend(v2, sel_addSubview_, v15);

    swift_retain();
    sub_1BB86D2D0();
    swift_release();
    sub_1BB86D2DC();
    swift_release();
    v16 = sub_1BB0EE5F8();
    v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v18 = (uint64_t *)&v16[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_didTapOnHighlight];
    swift_beginAccess();
    v19 = *v18;
    *v18 = (uint64_t)sub_1BB0F1058;
    v18[1] = v17;
    sub_1BA49EBE0(v19);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BB0EF360()
{
  return sub_1BB0EE680(1);
}

void sub_1BB0EF384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1BB0EF3F0(a1, a2);

  }
}

void sub_1BB0EF3F0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  int EnumCaseMultiPayload;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;

  v3 = v2;
  v6 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  MEMORY[0x1E0C80A78](v6);
  v8 = (void **)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB0F1060(a1, (uint64_t)v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_1BB0F10A4((uint64_t)v8);
  }
  else
  {
    v10 = *v8;
    if (*v8)
    {
      v11 = v10;
      v12 = sub_1BA9075EC(v10);
      v13 = sub_1BA90A31C(v12);
      v15 = v14;
      v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_editor];
      v17 = objc_allocWithZone((Class)type metadata accessor for DebugFormatErrorViewController());
      swift_retain();
      v18 = v13;
      swift_bridgeObjectRetain();
      v19 = sub_1BB5E45E0(v16, v13, v15);

      swift_release();
      swift_bridgeObjectRelease();
      v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v19);
      objc_msgSend(v20, sel_setModalPresentationStyle_, 7);
      v21 = objc_msgSend(v20, sel_popoverPresentationController);
      if (v21)
      {
        v22 = v21;
        objc_msgSend(v21, sel_setSourceView_, a2);

      }
      objc_msgSend(v20, sel_setPreferredContentSize_, 540.0, 620.0);
      objc_msgSend(v3, sel_presentViewController_animated_completion_, v20, 1, 0);

      swift_bridgeObjectRelease();
    }
  }
}

id sub_1BB0EF6C8()
{
  char *v0;
  void *v1;
  id result;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double Width;
  double v47;
  void *v48;
  double v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  char *v58;
  double v59;
  double v60;
  char *v61;
  char *v62;
  double v63;
  double v64;
  void *v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  double v72;
  CGFloat v73;
  char *v74;
  double v75;
  double v76;
  double v77;
  double v78;
  _BYTE v79[128];
  _BYTE v80[128];
  objc_super v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;

  v81.receiver = v0;
  v81.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v81, sel_viewWillLayoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView];
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v3 = result;
  objc_msgSend(result, sel_bounds);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v1, sel_setFrame_, v5, v7, v9, v11);
  v12 = sub_1BB0EE4F8();
  v13 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding];
  v78 = v13;
  v14 = sub_1BB0EED34();
  v16 = v15;
  v17 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel];
  objc_msgSend(v17, sel_frame, v14);
  objc_msgSend(v12, sel_setFrame_, v13, 0.0, v16, CGRectGetHeight(v82));

  objc_msgSend(v17, sel_frame);
  v18 = sub_1BB0EE4F8();
  objc_msgSend(v18, sel_frame);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v83.origin.x = v20;
  v83.origin.y = v22;
  v83.size.width = v24;
  v83.size.height = v26;
  CGRectGetMaxX(v83);
  sub_1BB87357C();
  objc_msgSend(v17, sel_setFrame_);
  v27 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView];
  objc_msgSend(v27, sel_sizeThatFits_, 0.0, 0.0);
  v29 = v28;
  v31 = v30;
  objc_msgSend(v17, sel_bounds);
  objc_msgSend(v27, sel_setFrame_, v78 * 3.0 + CGRectGetMaxX(v84), 0.0, v29, v31);
  objc_msgSend(v17, sel_bounds);
  objc_msgSend(v1, sel_setContentSize_, v29 + CGRectGetMaxX(v85), v31);
  v32 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView];
  objc_msgSend(v1, sel_contentOffset);
  v34 = v33;
  objc_msgSend(v1, sel_contentOffset);
  v36 = v35;
  v37 = sub_1BB0EE4F8();
  objc_msgSend(v37, sel_bounds);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;

  v86.origin.x = v39;
  v86.origin.y = v41;
  v86.size.width = v43;
  v86.size.height = v45;
  Width = CGRectGetWidth(v86);
  objc_msgSend(v17, sel_bounds);
  v47 = CGRectGetWidth(v87);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v48 = result;
  v49 = v78 * 3.0 + Width + v47;
  objc_msgSend(result, sel_bounds);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v57 = v56;

  v88.origin.x = v51;
  v88.origin.y = v53;
  v88.size.width = v55;
  v88.size.height = v57;
  objc_msgSend(v32, sel_setFrame_, v34, v36, v49, CGRectGetHeight(v88));
  v58 = &v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile];
  sub_1BAF97E40((uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile], (uint64_t)v79);
  sub_1BAF97E40((uint64_t)v79, (uint64_t)v80);
  if (sub_1BA8CF120((uint64_t)v80) == 1 || !*((_QWORD *)v58 + 7))
  {
    v74 = sub_1BB0EE5F8();
    objc_msgSend(v74, sel_setHidden_, 1);

    objc_msgSend(v1, sel_adjustedContentInset);
    v76 = -v75;
    objc_msgSend(v1, sel_adjustedContentInset);
    objc_msgSend(v1, sel_setContentOffset_, v76, -v77);
    sub_1BB0EFB78(v1);
    return sub_1BB0EFB78(v1);
  }
  v59 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize + 8];
  v60 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize + 24];
  v61 = sub_1BB0EE5F8();
  objc_msgSend(v61, sel_setHidden_, 0);

  v62 = sub_1BB0EE5F8();
  objc_msgSend(v1, sel_contentOffset);
  v64 = v63;
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v65 = result;
    objc_msgSend(result, sel_bounds);
    v67 = v66;
    v69 = v68;
    v71 = v70;
    v73 = v72;

    v89.origin.x = v67;
    v89.origin.y = v69;
    v89.size.width = v71;
    v89.size.height = v73;
    objc_msgSend(v62, sel_setFrame_, v64, v60 - v59 + -1.0, CGRectGetWidth(v89), v59 + 2.0);

    return sub_1BB0EFB78(v1);
  }
LABEL_11:
  __break(1u);
  return result;
}

id sub_1BB0EFB78(void *a1)
{
  uint64_t v1;
  char *v3;
  char *v4;
  id v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  CGFloat MaxX;
  void *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v42;
  CGRect v43;

  v3 = sub_1BB0EE5F8();
  v4 = sub_1BB0EE5F8();
  objc_msgSend(v4, sel_frame);

  MEMORY[0x1BCCE3EF8](objc_msgSend(a1, sel_contentOffset));
  objc_msgSend(v3, sel_setFrame_);

  v5 = sub_1BB0EE4F8();
  v6 = sub_1BB0EE4F8();
  objc_msgSend(v6, sel_frame);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v15 = objc_msgSend(a1, sel_contentOffset);
  v42 = *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding);
  MEMORY[0x1BCCE3EF8](v15, v16 + v42, v8, v10, v12, v14);
  objc_msgSend(v5, sel_setFrame_);

  v17 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel);
  objc_msgSend(v17, sel_frame);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = sub_1BB0EE4F8();
  objc_msgSend(v26, sel_frame);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;

  v43.origin.x = v28;
  v43.origin.y = v30;
  v43.size.width = v32;
  v43.size.height = v34;
  MaxX = CGRectGetMaxX(v43);
  MEMORY[0x1BCCE3EF8](v42 + MaxX, v19, v21, v23, v25);
  objc_msgSend(v17, sel_setFrame_);
  v36 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView);
  objc_msgSend(a1, sel_contentOffset);
  v38 = v37;
  v40 = v39;
  objc_msgSend(v36, sel_frame);
  return objc_msgSend(v36, sel_setFrame_, v38, v40);
}

id sub_1BB0EFDA4()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  double v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  _BYTE v34[128];
  _BYTE v35[136];

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile;
  sub_1BAF97E40(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile, (uint64_t)v34);
  sub_1BAF97E40((uint64_t)v34, (uint64_t)v35);
  result = (id)sub_1BA8CF120((uint64_t)v35);
  if ((_DWORD)result != 1 && *(_QWORD *)(v1 + 56))
  {
    v3 = *(double *)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize + 24);
    v4 = sub_1BB0EE5F8();
    objc_msgSend(v4, sel_frame);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    v13 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView);
    objc_msgSend(v13, sel_contentOffset);
    v15 = v14;
    objc_msgSend(v13, sel_scrollRectToVisible_animated_, 0, v6, v8, v10, v12);
    objc_msgSend(v13, sel_contentOffset);
    if (v16 >= v15)
      v17 = v15;
    else
      v17 = v16;
    objc_msgSend(v13, sel_contentOffset);
    objc_msgSend(v13, sel_setContentOffset_, v17);
    objc_msgSend(v13, sel_contentSize);
    v19 = v18;
    objc_msgSend(v13, sel_visibleSize);
    if (v20 < v19)
    {
      objc_msgSend(v13, sel_contentOffset);
      v22 = v21;
      objc_msgSend(v13, sel_adjustedContentInset);
      v24 = v23;
      objc_msgSend(v13, sel_contentSize);
      v26 = v25;
      objc_msgSend(v13, sel_visibleSize);
      v28 = v27;
      objc_msgSend(v13, sel_adjustedContentInset);
      v30 = -v29;
      objc_msgSend(v13, sel_visibleSize);
      v32 = v3 + v31 * -0.5;
      if (v32 < v30)
        v32 = v30;
      v33 = v24 + v26 - v28;
      if (v32 < v33)
        v33 = v32;
      objc_msgSend(v13, sel_setContentOffset_, v22, v33);
    }
    return sub_1BB0EFB78(v13);
  }
  return result;
}

uint64_t sub_1BB0EFFA0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  _QWORD v7[6];

  v1 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1BB873F30();
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1BCCE4630](v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7[1] = 0;
      v7[2] = 0;
      v7[0] = 0x3FF0000000000000;
      v7[3] = 0x3FF0000000000000;
      v7[4] = 0;
      v7[5] = 0;
      objc_msgSend(v5, sel_setTransform_, v7);

    }
    while (v2 != v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BB0F0238()
{
  return 0x656372756F53;
}

id sub_1BB0F024C()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BB872970();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  return v1;
}

uint64_t sub_1BB0F02B4()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_toolbarItems);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v3 = sub_1BB872DB4();

  return v3;
}

uint64_t sub_1BB0F032C()
{
  id *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_navigationItem);
  v2 = objc_msgSend(v1, sel_leftBarButtonItems);

  if (!v2)
    return 0;
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v3 = sub_1BB872DB4();

  return v3;
}

id sub_1BB0F03B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  _QWORD *v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  id v23;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[3];
  ValueMetadata *v28;
  _UNKNOWN **v29;
  _OWORD v30[7];

  v7 = a4 & 1;
  v28 = &type metadata for DebugFormatDebuggerSourceTheme.Cora;
  v29 = &off_1E72F40F8;
  v8 = (_OWORD *)swift_allocObject();
  v27[0] = v8;
  v9 = *(_OWORD *)(a3 + 80);
  v8[5] = *(_OWORD *)(a3 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a3 + 96);
  v10 = *(_OWORD *)(a3 + 16);
  v8[1] = *(_OWORD *)a3;
  v8[2] = v10;
  v11 = *(_OWORD *)(a3 + 48);
  v8[3] = *(_OWORD *)(a3 + 32);
  v8[4] = v11;
  v12 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  sub_1BB0F0F84((_QWORD *)a3);
  v13 = objc_msgSend(v12, sel_init);
  v14 = sub_1BB044DF0(a1, a2, v7);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = (unint64_t *)(v14 + 40);
    do
    {
      v25 = *(v16 - 1);
      v26 = *v16;
      swift_bridgeObjectRetain_n();
      sub_1BB872AFC(v17);
      swift_bridgeObjectRelease();
      v18 = __swift_project_boxed_opaque_existential_1(v27, (uint64_t)v28);
      v19 = v18[4];
      v20 = v18[6];
      v30[5] = v18[5];
      v30[6] = v20;
      v21 = v18[1];
      v30[0] = *v18;
      v30[1] = v21;
      v22 = v18[2];
      v30[3] = v18[3];
      v30[4] = v19;
      v30[2] = v22;
      v23 = sub_1BB0F0554(v25, v26, (uint64_t)v30);
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_appendAttributedString_, v23);

      v16 += 2;
      --v15;
    }
    while (v15);
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v13;
}

id sub_1BB0F0554(unint64_t a1, unint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  unint64_t v10;
  id v12;
  _QWORD v13[6];

  v13[3] = &type metadata for DebugFormatDebuggerSourceTheme.Cora;
  v13[4] = &off_1E72F40F8;
  v6 = (_OWORD *)swift_allocObject();
  v13[0] = v6;
  v7 = *(_OWORD *)(a3 + 80);
  v6[5] = *(_OWORD *)(a3 + 64);
  v6[6] = v7;
  v6[7] = *(_OWORD *)(a3 + 96);
  v8 = *(_OWORD *)(a3 + 16);
  v6[1] = *(_OWORD *)a3;
  v6[2] = v8;
  v9 = *(_OWORD *)(a3 + 48);
  v6[3] = *(_OWORD *)(a3 + 32);
  v6[4] = v9;
  sub_1BB0F0F84((_QWORD *)a3);
  v10 = sub_1BB045390(a1, a2);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_init);
  if (*(_QWORD *)(v10 + 16))
    __asm { BR              X8 }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v12;
}

id sub_1BB0F0C98(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  objc_super v15;
  _OWORD v16[8];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = (uint64_t)&v2[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile];
  sub_1BA8EBB18(v16);
  sub_1BAF97E40((uint64_t)v16, v5);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceMetrics] = 0;
  v6 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3E50]);
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___highlightView] = 0;
  v10 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v11 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView;
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding] = 0x4020000000000000;
  v12 = &v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v13 = &v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___charSize];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___breakpointView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_editor] = a1;
  swift_retain();

  v15.receiver = v8;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1BB0F0E6C()
{
  uint64_t v0;

  return sub_1BB0EFFA0(*(uint64_t **)(v0 + 16));
}

_QWORD *sub_1BB0F0E74(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = a1[11];
  v3 = a1[12];
  v4 = a1[13];
  v5 = a1[14];
  v6 = (void *)a1[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAF92890(v2, v3, v4, v5, v6);
  return a1;
}

uint64_t sub_1BB0F0F00()
{
  id *v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

_QWORD *sub_1BB0F0F84(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v24;
  void *v25;
  void *v26;

  v2 = (void *)a1[2];
  v3 = (void *)a1[3];
  v4 = (void *)a1[4];
  v5 = (void *)a1[5];
  v6 = (void *)a1[6];
  v7 = (void *)a1[7];
  v8 = (void *)a1[8];
  v9 = (void *)a1[9];
  v10 = (void *)a1[10];
  v24 = (void *)a1[11];
  v25 = (void *)a1[12];
  v26 = (void *)a1[13];
  swift_bridgeObjectRetain();
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  v19 = v10;
  v20 = v24;
  v21 = v25;
  v22 = v26;
  return a1;
}

uint64_t sub_1BB0F1034()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB0F1058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BB0EF384(a1, a2, v2);
}

uint64_t sub_1BB0F1060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB0F10A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BB0F10E0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  _OWORD v8[8];

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile];
  sub_1BA8EBB18(v8);
  sub_1BAF97E40((uint64_t)v8, v1);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceMetrics] = 0;
  v2 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3E50]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___highlightView] = 0;
  v4 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding] = 0x4020000000000000;
  v6 = &v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v7 = &v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___charSize];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___breakpointView] = 0;

  sub_1BB873EAC();
  __break(1u);
}

_QWORD *assignWithCopy for CoverChannelViewLayout(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CoverChannelViewLayout(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FeedGroupTrackerEntity()
{
  return &type metadata for FeedGroupTrackerEntity;
}

uint64_t sub_1BB0F13C0()
{
  if (qword_1EF2A6C98 != -1)
    swift_once();
  qword_1ED4763A0 = qword_1EF2AC7F0;
  *(_QWORD *)algn_1ED4763A8 = *(_QWORD *)algn_1EF2AC7F8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB0F1410(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  sub_1BB0F28D8(0, &qword_1EF2BB480, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0F2894();
  sub_1BB8746C8();
  v12 = *v3;
  HIBYTE(v11) = 0;
  sub_1BA5AA31C(0, &qword_1ED39A670, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2980]);
  sub_1BAA0C020((unint64_t *)&qword_1EF2AD4A0, MEMORY[0x1E0DB2990]);
  sub_1BB8741AC();
  if (!v2)
  {
    v12 = v3[1];
    HIBYTE(v11) = 1;
    sub_1BA5AA2AC(0, &qword_1ED39A668, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    sub_1BB0F2934((unint64_t *)&qword_1EF2AD4B0, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v12 = v3[2];
    HIBYTE(v11) = 2;
    sub_1BB8741AC();
    v12 = v3[3];
    HIBYTE(v11) = 3;
    sub_1BA5AA450(0, (unint64_t *)&qword_1ED39A678, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980]);
    sub_1BB0F2994(&qword_1EF2AD4A8, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v12 = v3[4];
    HIBYTE(v11) = 4;
    sub_1BA5AA2AC(0, &qword_1ED3A3BF8, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    sub_1BB0F29E4((unint64_t *)&qword_1EF2AD4C8, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v12 = v3[5];
    HIBYTE(v11) = 5;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB0F1710()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB0F1734 + 4 * byte_1BB8EB2F0[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1BB0F1734()
{
  return 0x657461446E656573;
}

uint64_t sub_1BB0F174C()
{
  return 1684957547;
}

uint64_t sub_1BB0F175C()
{
  return 0x6449676174;
}

uint64_t sub_1BB0F1770()
{
  return 0x7364496D657469;
}

uint64_t sub_1BB0F1788()
{
  return 0x496E6F6973736573;
}

uint64_t sub_1BB0F17A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB0F38C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB0F17C8()
{
  sub_1BB0F2894();
  return sub_1BB874710();
}

uint64_t sub_1BB0F17F0()
{
  sub_1BB0F2894();
  return sub_1BB87471C();
}

uint64_t sub_1BB0F1818()
{
  uint64_t v0;

  if (qword_1ED39E4B8 != -1)
    swift_once();
  v0 = qword_1ED4763A0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BB0F1874()
{
  sub_1BA5C6C84();
  return sub_1BB86F004();
}

uint64_t sub_1BB0F18AC()
{
  sub_1BA5C6C84();
  return sub_1BB86F01C();
}

uint64_t sub_1BB0F18E4()
{
  sub_1BA5C6C84();
  return sub_1BB86F010();
}

double sub_1BB0F1934@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1BB0F1CDC(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1BB0F1974(_QWORD *a1)
{
  return sub_1BB0F1410(a1);
}

uint64_t sub_1BB0F1988()
{
  sub_1BA5C6C84();
  return sub_1BB86F040();
}

uint64_t sub_1BB0F19C0()
{
  sub_1BA5C6C84();
  return sub_1BB86F034();
}

uint64_t sub_1BB0F1A00()
{
  sub_1BA5C6C84();
  return sub_1BB86F028();
}

unint64_t sub_1BB0F1A58()
{
  unint64_t result;

  result = qword_1EF2BB468;
  if (!qword_1EF2BB468)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EB460, &type metadata for FeedGroupTrackerEntity);
    atomic_store(result, (unint64_t *)&qword_1EF2BB468);
  }
  return result;
}

uint64_t sub_1BB0F1A9C()
{
  return sub_1BB0F1AA8();
}

uint64_t sub_1BB0F1AA8()
{
  uint64_t result;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  if (v12 >= 2)
  {
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB86F064();
    sub_1BB86F22C();
    result = swift_release();
    if (v10)
    {
      sub_1BB872AFC(v5);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v6);
      sub_1BB86F064();
      sub_1BB86F22C();
      swift_release();
      sub_1BB872AFC(v7);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v8);
      sub_1BB872AFC(v9);
      sub_1BA6E3730(v11, v12);
      goto LABEL_8;
    }
  }
  else
  {
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB86F064();
    sub_1BB86F22C();
    result = swift_release();
    if (v10)
    {
      sub_1BB872AFC(v1);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v2);
      sub_1BB86F064();
      sub_1BB86F22C();
      swift_release();
      sub_1BB872AFC(v3);
      swift_bridgeObjectRelease();
LABEL_8:
      sub_1BB872AFC(v4);
      return 0x3D646E696B7BLL;
    }
    __break(1u);
    __break(1u);
  }
  __break(1u);
  __break(1u);
  return result;
}

uint64_t sub_1BB0F1CDC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v32)(uint64_t, uint64_t, unint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  uint64_t *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t, uint64_t);
  char *v68;
  char *v69;
  _QWORD *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char v79;
  uint64_t v80;

  v70 = a1;
  v61 = a2;
  sub_1BB0F28D8(0, &qword_1EF2BB470, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v64 = v2;
  v62 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v73 = (char *)&v60 - v3;
  sub_1BA5AA370(0, &qword_1ED3A3C78, &qword_1ED3A3C70, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4);
  MEMORY[0x1E0C80A78](v4);
  v72 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v71 = (char *)&v60 - v7;
  sub_1BA5AA528(0, (unint64_t *)&qword_1ED39A6C0, (uint64_t)&qword_1ED39A6B8, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_1BA5AA450);
  MEMORY[0x1E0C80A78](v8);
  v69 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v68 = (char *)&v60 - v11;
  sub_1BA5AA370(0, &qword_1ED39A6B0, &qword_1ED39A6A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], sub_1BAA0A328);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v60 - v16;
  sub_1BA5AA528(0, (unint64_t *)&qword_1ED39A6D0, (uint64_t)&qword_1ED39A6C8, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_1BA5AA31C);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v60 - v22;
  v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88];
  sub_1BA5AA31C(0, &qword_1ED39A6C8, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2C88]);
  v26 = v25;
  v66 = v25;
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v77 = v23;
  v27(v23, 1, 1, v25);
  v78 = v20;
  v27(v20, 1, 1, v26);
  sub_1BA5AA31C(0, &qword_1ED39A708, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA31C(0, &qword_1ED39A670, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v76 = sub_1BB86F058();
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BA5AA2AC(0, &qword_1ED39A6A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], sub_1BAA0A328, v24);
  v30 = v29;
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v31(v17, 1, 1, v29);
  v31(v14, 1, 1, v30);
  sub_1BA5AA2AC(0, &qword_1ED39A700, v28, sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  v32 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980];
  sub_1BA5AA2AC(0, &qword_1ED39A668, v28, sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  v63 = v33;
  swift_allocObject();
  v75 = sub_1BB86F058();
  v34 = v66;
  v67 = v27;
  v27(v77, 1, 1, v66);
  v27(v78, 1, 1, v34);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v65 = sub_1BB86F058();
  v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88];
  sub_1BA5AA450(0, (unint64_t *)&qword_1ED39A6B8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2C88]);
  v37 = v36;
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v38(v68, 1, 1, v36);
  v38(v69, 1, 1, v37);
  sub_1BA5AA450(0, (unint64_t *)&qword_1ED39A710, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA450(0, (unint64_t *)&qword_1ED39A678, v32);
  v68 = v39;
  swift_allocObject();
  v69 = (char *)sub_1BB86F058();
  sub_1BA5AA2AC(0, &qword_1ED3A3C70, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, v35);
  v41 = v40;
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v42(v71, 1, 1, v40);
  v42(v72, 1, 1, v41);
  sub_1BA5AA2AC(0, &qword_1ED3A3CD0, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA2AC(0, &qword_1ED3A3BF8, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v72 = (char *)sub_1BB86F058();
  v43 = v67;
  v67(v77, 1, 1, v34);
  v43(v78, 1, 1, v34);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  sub_1BB86F058();
  v44 = v70;
  __swift_project_boxed_opaque_existential_1(v70, v70[3]);
  sub_1BB0F2894();
  v45 = v74;
  v46 = v73;
  sub_1BB87468C();
  if (v45)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    v79 = 0;
    v47 = sub_1BAA0C020((unint64_t *)&qword_1EF2AD468, MEMORY[0x1E0DB2998]);
    sub_1BB8740D4();
    v78 = (char *)v47;
    swift_release();
    v48 = v80;
    v79 = 1;
    sub_1BB0F2934((unint64_t *)&qword_1EF2AD478, MEMORY[0x1E0DB2998]);
    swift_retain();
    sub_1BB8740D4();
    v76 = v48;
    swift_release();
    v49 = v80;
    v79 = 2;
    swift_retain();
    sub_1BB8740D4();
    v75 = v49;
    swift_release();
    v50 = v80;
    v79 = 3;
    sub_1BB0F2994(&qword_1EF2AD470, MEMORY[0x1E0DB2998]);
    swift_retain();
    sub_1BB8740D4();
    swift_release();
    v51 = v80;
    v79 = 4;
    sub_1BB0F29E4((unint64_t *)&qword_1EF2AD490, MEMORY[0x1E0DB2998]);
    swift_retain();
    sub_1BB8740D4();
    swift_release();
    v52 = v80;
    v79 = 5;
    swift_retain();
    sub_1BB8740D4();
    v53 = v62;
    swift_release();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v46, v64);
    v54 = v80;
    swift_retain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v55 = v75;
    swift_release();
    v56 = v52;
    v57 = v76;
    result = swift_release();
    v59 = v61;
    *v61 = v57;
    v59[1] = v55;
    v59[2] = v50;
    v59[3] = v51;
    v59[4] = v56;
    v59[5] = v54;
  }
  return result;
}

unint64_t sub_1BB0F2894()
{
  unint64_t result;

  result = qword_1EF2BB478;
  if (!qword_1EF2BB478)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EB5DC, &type metadata for FeedGroupTrackerEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB478);
  }
  return result;
}

void sub_1BB0F28D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB0F2894();
    v7 = a3(a1, &type metadata for FeedGroupTrackerEntity.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB0F2934(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA5AA2AC(255, &qword_1ED39A668, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB0F2994(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA5AA450(255, (unint64_t *)&qword_1ED39A678, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB0F29E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA5AA2AC(255, &qword_1ED3A3BF8, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB0F2A44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t result;
  uint64_t *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v86 = a3;
  v87 = a2;
  v85 = a1;
  v78 = a4;
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v4);
  v77 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5AA370(0, &qword_1ED3A3C78, &qword_1ED3A3C70, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4);
  MEMORY[0x1E0C80A78](v6);
  v80 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v76 = (char *)&v72 - v9;
  sub_1BA5AA528(0, (unint64_t *)&qword_1ED39A6C0, (uint64_t)&qword_1ED39A6B8, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_1BA5AA450);
  MEMORY[0x1E0C80A78](v10);
  v79 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v74 = (char *)&v72 - v13;
  sub_1BA5AA370(0, &qword_1ED39A6B0, &qword_1ED39A6A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], sub_1BAA0A328);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v72 - v18;
  sub_1BA5AA528(0, (unint64_t *)&qword_1ED39A6D0, (uint64_t)&qword_1ED39A6C8, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_1BA5AA31C);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v72 - v24;
  v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88];
  sub_1BA5AA31C(0, &qword_1ED39A6C8, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2C88]);
  v28 = v27;
  v81 = v27;
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v83 = v25;
  v29(v25, 1, 1, v27);
  v88 = v22;
  v29(v22, 1, 1, v28);
  sub_1BA5AA31C(0, &qword_1ED39A708, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA31C(0, &qword_1ED39A670, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v75 = sub_1BB86F058();
  v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BA5AA2AC(0, &qword_1ED39A6A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], sub_1BAA0A328, v26);
  v32 = v31;
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v33(v19, 1, 1, v31);
  v33(v16, 1, 1, v32);
  sub_1BA5AA2AC(0, &qword_1ED39A700, v30, sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA5AA2AC(0, &qword_1ED39A668, v30, sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v84 = sub_1BB86F058();
  v34 = v81;
  v73 = v29;
  v29(v83, 1, 1, v81);
  v29(v88, 1, 1, v34);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v82 = sub_1BB86F058();
  v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88];
  sub_1BA5AA450(0, (unint64_t *)&qword_1ED39A6B8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2C88]);
  v37 = v36;
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v38(v74, 1, 1, v36);
  v38(v79, 1, 1, v37);
  v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8];
  sub_1BA5AA450(0, (unint64_t *)&qword_1ED39A710, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA5AA450(0, (unint64_t *)&qword_1ED39A678, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v40 = sub_1BB86F058();
  sub_1BA5AA2AC(0, &qword_1ED3A3C70, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, v35);
  v42 = v41;
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  v43(v76, 1, 1, v41);
  v43(v80, 1, 1, v42);
  sub_1BA5AA2AC(0, &qword_1ED3A3CD0, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, v39);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA5AA2AC(0, &qword_1ED3A3BF8, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v44 = sub_1BB86F058();
  v45 = v81;
  v46 = v73;
  v73(v83, 1, 1, v81);
  v46(v88, 1, 1, v45);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v47 = sub_1BB86F058();
  v48 = v75;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v49 = v85[1];
  v50 = v85;
  v91 = *v85;
  v92 = v49;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  v79 = (char *)v40;
  swift_retain();
  v80 = (char *)v44;
  swift_retain();
  v88 = (char *)v47;
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v52 = type metadata accessor for FeedCursorTrackerGroup(0, v87, v86, v51);
  v53 = *(int *)(v52 + 40);
  v83 = (char *)v52;
  v54 = (char *)v50 + v53;
  v55 = sub_1BB86C8B0();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = v77;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v77, v54, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v57, 0, 1, v55);
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1BB872CF4();
  v89 = v91;
  v90 = v92;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  v58 = v84;
  swift_retain();
  v59 = v82;
  swift_retain();
  v60 = v79;
  swift_retain();
  v61 = v80;
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v62 = v83;
  v63 = v85;
  v64 = (uint64_t *)((char *)v85 + *((int *)v83 + 11));
  v65 = v64[1];
  v91 = *v64;
  v92 = v65;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  v66 = v61;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v91 = *(uint64_t *)((char *)v63 + *((int *)v62 + 12));
  sub_1BA5AA5E8();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v91 = sub_1BB86F334();
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v67 = v88;
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v68 = (uint64_t *)((char *)v63 + *((int *)v62 + 13));
  v69 = v68[1];
  v91 = *v68;
  v92 = v69;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  v71 = v78;
  *v78 = v48;
  v71[1] = v58;
  v71[2] = v59;
  v71[3] = (uint64_t)v60;
  v71[4] = (uint64_t)v66;
  v71[5] = (uint64_t)v67;
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedGroupTrackerEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB0F376C + 4 * byte_1BB8EB2FB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB0F37A0 + 4 * byte_1BB8EB2F6[v4]))();
}

uint64_t sub_1BB0F37A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0F37A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0F37B0);
  return result;
}

uint64_t sub_1BB0F37BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0F37C4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB0F37C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0F37D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupTrackerEntity.CodingKeys()
{
  return &type metadata for FeedGroupTrackerEntity.CodingKeys;
}

unint64_t sub_1BB0F37F0()
{
  unint64_t result;

  result = qword_1EF2BB488;
  if (!qword_1EF2BB488)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EB5B4, &type metadata for FeedGroupTrackerEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB488);
  }
  return result;
}

unint64_t sub_1BB0F3838()
{
  unint64_t result;

  result = qword_1EF2BB490;
  if (!qword_1EF2BB490)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EB524, &type metadata for FeedGroupTrackerEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB490);
  }
  return result;
}

unint64_t sub_1BB0F3880()
{
  unint64_t result;

  result = qword_1EF2BB498;
  if (!qword_1EF2BB498)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EB54C, &type metadata for FeedGroupTrackerEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB498);
  }
  return result;
}

uint64_t sub_1BB0F38C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657461446E656573 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6449676174 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7364496D657469 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

char *sub_1BB0F3B20(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  void *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  objc_super v35;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = OBJC_IVAR____TtC8NewsFeed35DebugFormatMarkdownHeaderFooterView_label;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  if (a2)
  {
    v9 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v35.receiver = v8;
  v35.super_class = ObjectType;
  v10 = (char *)objc_msgSendSuper2(&v35, sel_initWithReuseIdentifier_, v9);

  v11 = OBJC_IVAR____TtC8NewsFeed35DebugFormatMarkdownHeaderFooterView_label;
  v12 = *(void **)&v10[OBJC_IVAR____TtC8NewsFeed35DebugFormatMarkdownHeaderFooterView_label];
  v13 = v10;
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v14 = objc_msgSend(v13, sel_contentView);
  objc_msgSend(v14, sel_addSubview_, v12);

  v15 = (void *)objc_opt_self();
  sub_1BA65E330();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BB895C60;
  v17 = objc_msgSend(*(id *)&v10[v11], sel_topAnchor);
  v18 = objc_msgSend(v13, sel_contentView);
  v19 = objc_msgSend(v18, sel_topAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, 16.0);
  *(_QWORD *)(v16 + 32) = v20;
  v21 = objc_msgSend(*(id *)&v10[v11], sel_leadingAnchor);
  v22 = objc_msgSend(v13, sel_contentView);
  v23 = objc_msgSend(v22, sel_leadingAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, 16.0);
  *(_QWORD *)(v16 + 40) = v24;
  v25 = objc_msgSend(*(id *)&v10[v11], sel_trailingAnchor);
  v26 = objc_msgSend(v13, sel_contentView);
  v27 = objc_msgSend(v26, sel_trailingAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, -16.0);
  *(_QWORD *)(v16 + 48) = v28;
  v29 = objc_msgSend(*(id *)&v10[v11], sel_bottomAnchor);
  v30 = objc_msgSend(v13, sel_contentView);
  v31 = objc_msgSend(v30, sel_bottomAnchor);

  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, -16.0);
  *(_QWORD *)(v16 + 56) = v32;
  sub_1BB872DCC();
  sub_1BAA659B8();
  v33 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_activateConstraints_, v33);

  return v13;
}

uint64_t type metadata accessor for DebugFormatMarkdownHeaderFooterView()
{
  return objc_opt_self();
}

uint64_t sub_1BB0F3FE8()
{
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B08C0, (uint64_t (*)(uint64_t))sub_1BA4E0A38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BB0F4058(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  return a2(&v3);
}

uint64_t sub_1BB0F4088()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0F40AC()
{
  return sub_1BB0F3FE8();
}

uint64_t sub_1BB0F40C8()
{
  return 8;
}

_QWORD *sub_1BB0F40D4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BB0F40E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB0F4104()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB0F4138()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C79A0)
  {
    sub_1BB86E008();
    sub_1BA6BCC84();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C79A0);
  }
}

uint64_t sub_1BB0F41AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  __int128 v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = a2[5];
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v12 = type metadata accessor for FormatDerivedDataFile();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v47 = v13;
      v18 = *v11;
      v19 = v11[1];
      v20 = *((_BYTE *)v11 + 16);
      sub_1BA987528(*v11, v19, v20);
      *v10 = v18;
      v10[1] = v19;
      *((_BYTE *)v10 + 16) = v20;
      v21 = *((unsigned __int8 *)v11 + 40);
      if (v21 <= 0xFD)
      {
        v22 = v11[3];
        v23 = v11[4];
        sub_1BA895B64(v22, v23, *((_BYTE *)v11 + 40));
        v10[3] = v22;
        v10[4] = v23;
        *((_BYTE *)v10 + 40) = v21;
      }
      else
      {
        *(_OWORD *)(v10 + 3) = *(_OWORD *)(v11 + 3);
        *((_BYTE *)v10 + 40) = *((_BYTE *)v11 + 40);
      }
      v48 = v4;
      v24 = v11[7];
      v10[6] = v11[6];
      v10[7] = v24;
      v25 = *((unsigned __int16 *)v11 + 54);
      v26 = *((unsigned int *)v11 + 26);
      swift_bridgeObjectRetain();
      if (v25 >> 9 <= 0x7EuLL)
      {
        v28 = v26 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v25 << 32);
        v29 = v11[8];
        v30 = v11[9];
        v32 = v11[10];
        v31 = v11[11];
        v46 = v11[12];
        sub_1BA8EBBF0(v29, v30, v32, v31, v46, v28);
        v10[8] = v29;
        v10[9] = v30;
        v10[10] = v32;
        v10[11] = v31;
        v10[12] = v46;
        *((_WORD *)v10 + 54) = WORD2(v28);
        *((_DWORD *)v10 + 26) = v28;
      }
      else
      {
        v27 = *((_OWORD *)v11 + 5);
        *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
        *((_OWORD *)v10 + 5) = v27;
        *(_OWORD *)((char *)v10 + 94) = *(_OWORD *)((char *)v11 + 94);
      }
      v33 = v11[15];
      v10[14] = v11[14];
      v10[15] = v33;
      v34 = *(int *)(v12 + 32);
      v35 = (char *)v10 + v34;
      v36 = (char *)v11 + v34;
      v37 = sub_1BB86EB84();
      v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v35, v36, v37);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v10, 0, 1, v12);
      v4 = v48;
    }
    v39 = *(int *)(a3 + 28);
    v40 = (char *)v4 + v39;
    v41 = (uint64_t)a2 + v39;
    v42 = sub_1BB86EB84();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
    v43 = type metadata accessor for DebugFormatCacheFileMetadata();
    *(_QWORD *)&v40[*(int *)(v43 + 20)] = *(_QWORD *)(v41 + *(int *)(v43 + 20));
    type metadata accessor for FormatFile();
    swift_bridgeObjectRetain();
    v44 = (char *)&loc_1BB0F4480 + 4 * word_1BB8EB6F0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v16 = *a2;
  *v4 = *a2;
  v17 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v17;
}

void sub_1BB0F5160(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF2BB4D0)
  {
    v2 = type metadata accessor for FormatFile();
    v3 = sub_1BA4A2870(&qword_1ED3B3030, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
    v4 = sub_1BA4A2870(&qword_1EF2AB3D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
    v5 = type metadata accessor for DebugFormatServiceResult(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF2BB4D0);
  }
}

uint64_t sub_1BB0F5204(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for FormatDerivedDataFile();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_1BA986FA0(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_BYTE *)(v4 + 16));
    v6 = *(unsigned __int8 *)(v4 + 40);
    if (v6 <= 0xFD)
      sub_1BA895B84(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), v6);
    swift_bridgeObjectRelease();
    if (*(unsigned __int16 *)(v4 + 108) >> 9 <= 0x7EuLL)
      sub_1BA8EBC78(*(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96), *(unsigned int *)(v4 + 104) | ((unint64_t)*(unsigned __int16 *)(v4 + 108) << 32));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v4 + *(int *)(v5 + 32);
    v8 = sub_1BB86EB84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + a2[7];
  v10 = sub_1BB86EB84();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  type metadata accessor for DebugFormatCacheFileMetadata();
  swift_bridgeObjectRelease();
  v12 = a1 + a2[8];
  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for FormatContent(0);
      v14 = v12 + *(int *)(v13 + 20);
      v15 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v12 + *(int *)(v13 + 40);
      v17 = sub_1BB871E24();
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      goto LABEL_37;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(v12 + 106) != 255)
      {
        v19 = *(unsigned __int16 *)(v12 + 104) | (*(unsigned __int8 *)(v12 + 106) << 16);
        sub_1BA77A170(*(_QWORD *)(v12 + 96), v19, SBYTE2(v19), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
      }
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      goto LABEL_37;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 56) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 168) >= 3uLL)
        swift_bridgeObjectRelease();
      v20 = (int *)type metadata accessor for FormatPackage();
      v21 = v12 + v20[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = type metadata accessor for FormatCompilerOptions(0);
      v23 = v21 + *(int *)(v22 + 24);
      if (*(_QWORD *)(v23 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v24 = v23 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v25 = sub_1BB86E710();
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
      if (!v27(v24, 1, v25))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
      v28 = v21 + *(int *)(v22 + 28);
      if (!v27(v28, 1, v25))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v25);
      swift_bridgeObjectRelease();
      v11(v12 + v20[24], v10);
      v29 = v12 + v20[25];
      if (!v27(v29, 1, v25))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v25);
      break;
    case 6u:
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 7u:
      swift_release();
      break;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), *(_QWORD *)(v12 + 48), *(_QWORD *)(v12 + 56), *(_QWORD *)(v12 + 64), *(_QWORD *)(v12 + 72), *(_BYTE *)(v12 + 80));
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = v12 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      v31 = type metadata accessor for FormatContent(0);
      v32 = v30 + *(int *)(v31 + 20);
      v33 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = v30 + *(int *)(v31 + 40);
      v35 = sub_1BB871E24();
      v36 = *(_QWORD *)(v35 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
LABEL_37:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_38:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  sub_1BB0F5160(0);
  sub_1BA69D314(*(_QWORD *)(v12 + *(int *)(v37 + 44)), *(_QWORD *)(v12 + *(int *)(v37 + 44) + 8));
  return swift_bridgeObjectRelease();
}

void sub_1BB0F59A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v5 = a1;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v11 = type metadata accessor for FormatDerivedDataFile();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v43 = v12;
    v15 = *v10;
    v16 = v10[1];
    v17 = *((_BYTE *)v10 + 16);
    sub_1BA987528(*v10, v16, v17);
    *v9 = v15;
    v9[1] = v16;
    *((_BYTE *)v9 + 16) = v17;
    v18 = *((unsigned __int8 *)v10 + 40);
    if (v18 <= 0xFD)
    {
      v19 = v10[3];
      v20 = v10[4];
      sub_1BA895B64(v19, v20, *((_BYTE *)v10 + 40));
      v9[3] = v19;
      v9[4] = v20;
      *((_BYTE *)v9 + 40) = v18;
    }
    else
    {
      *(_OWORD *)(v9 + 3) = *(_OWORD *)(v10 + 3);
      *((_BYTE *)v9 + 40) = *((_BYTE *)v10 + 40);
    }
    v44 = v5;
    v21 = v10[7];
    v9[6] = v10[6];
    v9[7] = v21;
    v22 = *((unsigned __int16 *)v10 + 54);
    v23 = *((unsigned int *)v10 + 26);
    swift_bridgeObjectRetain();
    if (v22 >> 9 <= 0x7EuLL)
    {
      v25 = v23 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v22 << 32);
      v26 = v10[8];
      v27 = v10[9];
      v29 = v10[10];
      v28 = v10[11];
      v42 = v10[12];
      sub_1BA8EBBF0(v26, v27, v29, v28, v42, v25);
      v9[8] = v26;
      v9[9] = v27;
      v9[10] = v29;
      v9[11] = v28;
      v9[12] = v42;
      *((_WORD *)v9 + 54) = WORD2(v25);
      *((_DWORD *)v9 + 26) = v25;
    }
    else
    {
      v24 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v24;
      *(_OWORD *)((char *)v9 + 94) = *(_OWORD *)((char *)v10 + 94);
    }
    v30 = v10[15];
    v9[14] = v10[14];
    v9[15] = v30;
    v31 = *(int *)(v11 + 32);
    v32 = (char *)v9 + v31;
    v33 = (char *)v10 + v31;
    v34 = sub_1BB86EB84();
    v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35(v32, v33, v34);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v9, 0, 1, v11);
    v5 = v44;
  }
  v36 = *(int *)(a3 + 28);
  v37 = v5 + v36;
  v38 = a2 + v36;
  v39 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  v40 = type metadata accessor for DebugFormatCacheFileMetadata();
  *(_QWORD *)(v37 + *(int *)(v40 + 20)) = *(_QWORD *)(v38 + *(int *)(v40 + 20));
  type metadata accessor for FormatFile();
  swift_bridgeObjectRetain();
  v41 = (char *)sub_1BB0F5C50 + 4 * word_1BB8EB720[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB0F5C50(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__dst,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  char *v78;
  char *v79;

  *(_QWORD *)(v40 - 96) = v38;
  *(_QWORD *)(v40 - 88) = v39;
  v41 = v37[1];
  *v36 = *v37;
  v36[1] = v41;
  v42 = (int *)type metadata accessor for FormatContent(0);
  v43 = v42[5];
  v44 = (char *)v36 + v43;
  v45 = (char *)v37 + v43;
  v46 = sub_1BB86C8B0();
  v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
  swift_bridgeObjectRetain();
  v47(v44, v45, v46);
  v48 = v42[6];
  v49 = (_QWORD *)((char *)v36 + v48);
  v50 = (_QWORD *)((char *)v37 + v48);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v52 = v42[7];
  v53 = (_QWORD *)((char *)v36 + v52);
  v54 = (_QWORD *)((char *)v37 + v52);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  v56 = v42[8];
  v57 = (_QWORD *)((char *)v36 + v56);
  v58 = (_QWORD *)((char *)v37 + v56);
  v59 = v58[1];
  *v57 = *v58;
  v57[1] = v59;
  v60 = v42[9];
  v61 = (_QWORD *)((char *)v36 + v60);
  v62 = (_QWORD *)((char *)v37 + v60);
  v63 = v62[1];
  *v61 = *v62;
  v61[1] = v63;
  v64 = v42[10];
  v78 = (char *)v37 + v64;
  v79 = (char *)v36 + v64;
  v65 = sub_1BB871E24();
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v67(v78, 1, v65))
  {
    sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
    memcpy(v79, v78, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v79, v78, v65);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v79, 0, 1, v65);
  }
  v69 = *(_QWORD *)(v40 - 88);
  *(_QWORD *)((char *)v36 + v42[11]) = *(_QWORD *)((char *)v37 + v42[11]);
  *(_QWORD *)((char *)v36 + v42[12]) = *(_QWORD *)((char *)v37 + v42[12]);
  *(_QWORD *)((char *)v36 + v42[13]) = *(_QWORD *)((char *)v37 + v42[13]);
  *(_QWORD *)((char *)v36 + v42[14]) = *(_QWORD *)((char *)v37 + v42[14]);
  *(_QWORD *)((char *)v36 + v42[15]) = *(_QWORD *)((char *)v37 + v42[15]);
  *(_QWORD *)((char *)v36 + v42[16]) = *(_QWORD *)((char *)v37 + v42[16]);
  *(_QWORD *)((char *)v36 + v42[17]) = *(_QWORD *)((char *)v37 + v42[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  sub_1BB0F5160(0);
  v71 = v70;
  v72 = *(int *)(v70 + 44);
  v73 = (_QWORD *)((char *)v36 + v72);
  v74 = (_QWORD *)((char *)v37 + v72);
  v75 = *v74;
  v76 = v74[1];
  sub_1BA69D44C(*v74, v76);
  *v73 = v75;
  v73[1] = v76;
  *(_QWORD *)((char *)v36 + *(int *)(v71 + 48)) = *(_QWORD *)((char *)v37 + *(int *)(v71 + 48));
  swift_bridgeObjectRetain();
  return v69;
}

_QWORD *sub_1BB0F6934(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned int v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  _OWORD *v26;
  _OWORD *v27;
  unsigned int v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unsigned __int8 v53;
  _OWORD *v54;
  _OWORD *v55;
  unint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;

  v5 = a1;
  *a1 = *(_QWORD *)a2;
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = *(_QWORD *)(a2 + 16);
  *((_BYTE *)v5 + 24) = *(_BYTE *)(a2 + 24);
  v5[4] = *(_QWORD *)(a2 + 32);
  v5[5] = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)v5 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for FormatDerivedDataFile();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((char *)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      v104 = v5;
      v15 = *(_QWORD *)v8;
      v16 = *(_QWORD *)(v8 + 8);
      v17 = *(_BYTE *)(v8 + 16);
      sub_1BA987528(*(_QWORD *)v8, v16, v17);
      *(_QWORD *)v7 = v15;
      *((_QWORD *)v7 + 1) = v16;
      v7[16] = v17;
      v18 = *(unsigned __int8 *)(v8 + 40);
      v102 = a3;
      if (v18 <= 0xFD)
      {
        v30 = *(_QWORD *)(v8 + 24);
        v31 = *(_QWORD *)(v8 + 32);
        sub_1BA895B64(v30, v31, v18);
        *((_QWORD *)v7 + 3) = v30;
        *((_QWORD *)v7 + 4) = v31;
        v7[40] = v18;
      }
      else
      {
        v19 = *(_OWORD *)(v8 + 24);
        v7[40] = *(_BYTE *)(v8 + 40);
        *(_OWORD *)(v7 + 24) = v19;
      }
      *((_QWORD *)v7 + 6) = *(_QWORD *)(v8 + 48);
      *((_QWORD *)v7 + 7) = *(_QWORD *)(v8 + 56);
      v32 = *(unsigned __int16 *)(v8 + 108);
      v33 = *(unsigned int *)(v8 + 104);
      swift_bridgeObjectRetain();
      if (v32 >> 9 <= 0x7EuLL)
      {
        v36 = v33 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v32 << 32);
        v37 = *(_QWORD *)(v8 + 64);
        v38 = *(_QWORD *)(v8 + 72);
        v39 = *(_QWORD *)(v8 + 88);
        v101 = *(_QWORD *)(v8 + 80);
        v40 = *(_QWORD *)(v8 + 96);
        sub_1BA8EBBF0(v37, v38, v101, v39, v40, v36);
        *((_QWORD *)v7 + 8) = v37;
        *((_QWORD *)v7 + 9) = v38;
        *((_QWORD *)v7 + 10) = v101;
        *((_QWORD *)v7 + 11) = v39;
        *((_QWORD *)v7 + 12) = v40;
        *((_WORD *)v7 + 54) = WORD2(v36);
        *((_DWORD *)v7 + 26) = v36;
      }
      else
      {
        v34 = *(_OWORD *)(v8 + 64);
        v35 = *(_OWORD *)(v8 + 80);
        *(_OWORD *)(v7 + 94) = *(_OWORD *)(v8 + 94);
        *((_OWORD *)v7 + 4) = v34;
        *((_OWORD *)v7 + 5) = v35;
      }
      *((_QWORD *)v7 + 14) = *(_QWORD *)(v8 + 112);
      *((_QWORD *)v7 + 15) = *(_QWORD *)(v8 + 120);
      v41 = *(int *)(v9 + 32);
      v42 = &v7[v41];
      v43 = v8 + v41;
      v44 = sub_1BB86EB84();
      v45 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      a3 = v102;
      v5 = v104;
      goto LABEL_29;
    }
  }
  else
  {
    if (!v13)
    {
      v103 = a3;
      v105 = v5;
      v20 = *(_QWORD *)v8;
      v21 = *(_QWORD *)(v8 + 8);
      v22 = *(_BYTE *)(v8 + 16);
      sub_1BA987528(*(_QWORD *)v8, v21, v22);
      v23 = *(_QWORD *)v7;
      v24 = *((_QWORD *)v7 + 1);
      *(_QWORD *)v7 = v20;
      *((_QWORD *)v7 + 1) = v21;
      v25 = v7[16];
      v7[16] = v22;
      sub_1BA986FA0(v23, v24, v25);
      v26 = v7 + 24;
      v27 = (_OWORD *)(v8 + 24);
      v28 = *(unsigned __int8 *)(v8 + 40);
      if (v7[40] <= 0xFDu)
      {
        if (v28 <= 0xFD)
        {
          v49 = *(_QWORD *)(v8 + 24);
          v50 = *(_QWORD *)(v8 + 32);
          sub_1BA895B64(v49, v50, *(_BYTE *)(v8 + 40));
          v51 = *((_QWORD *)v7 + 3);
          v52 = *((_QWORD *)v7 + 4);
          *((_QWORD *)v7 + 3) = v49;
          *((_QWORD *)v7 + 4) = v50;
          v53 = v7[40];
          v7[40] = v28;
          sub_1BA895B84(v51, v52, v53);
        }
        else
        {
          sub_1BB0F7E00((uint64_t)(v7 + 24));
          v46 = *(_BYTE *)(v8 + 40);
          *v26 = *v27;
          v7[40] = v46;
        }
      }
      else if (v28 <= 0xFD)
      {
        v47 = *(_QWORD *)(v8 + 24);
        v48 = *(_QWORD *)(v8 + 32);
        sub_1BA895B64(v47, v48, *(_BYTE *)(v8 + 40));
        *((_QWORD *)v7 + 3) = v47;
        *((_QWORD *)v7 + 4) = v48;
        v7[40] = v28;
      }
      else
      {
        v29 = *v27;
        v7[40] = *(_BYTE *)(v8 + 40);
        *v26 = v29;
      }
      *((_QWORD *)v7 + 6) = *(_QWORD *)(v8 + 48);
      *((_QWORD *)v7 + 7) = *(_QWORD *)(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v54 = v7 + 64;
      v55 = (_OWORD *)(v8 + 64);
      v56 = *(unsigned int *)(v8 + 104) | ((unint64_t)*(unsigned __int16 *)(v8 + 108) << 32);
      if (*((unsigned __int16 *)v7 + 54) >> 9 <= 0x7EuLL)
      {
        if (((v56 >> 41) & 0x7F) == 0x7F)
        {
          sub_1BAA14AE0((uint64_t)(v7 + 64));
          v59 = *(_OWORD *)(v8 + 94);
          v60 = *(_OWORD *)(v8 + 80);
          *v54 = *v55;
          *((_OWORD *)v7 + 5) = v60;
          *(_OWORD *)(v7 + 94) = v59;
        }
        else
        {
          v66 = *(_QWORD *)(v8 + 64);
          v67 = *(_QWORD *)(v8 + 72);
          v69 = *(_QWORD *)(v8 + 80);
          v68 = *(_QWORD *)(v8 + 88);
          v70 = *(_QWORD *)(v8 + 96);
          sub_1BA8EBBF0(v66, v67, v69, v68, v70, *(unsigned int *)(v8 + 104) | ((unint64_t)*(unsigned __int16 *)(v8 + 108) << 32));
          v71 = *((_QWORD *)v7 + 8);
          v72 = *((_QWORD *)v7 + 9);
          v73 = *((_QWORD *)v7 + 10);
          v74 = *((_QWORD *)v7 + 11);
          v75 = *((_QWORD *)v7 + 12);
          v76 = *((unsigned int *)v7 + 26) | ((unint64_t)*((unsigned __int16 *)v7 + 54) << 32);
          *((_QWORD *)v7 + 8) = v66;
          *((_QWORD *)v7 + 9) = v67;
          *((_QWORD *)v7 + 10) = v69;
          *((_QWORD *)v7 + 11) = v68;
          *((_QWORD *)v7 + 12) = v70;
          *((_DWORD *)v7 + 26) = v56;
          *((_WORD *)v7 + 54) = WORD2(v56);
          sub_1BA8EBC78(v71, v72, v73, v74, v75, v76);
        }
      }
      else if (((v56 >> 41) & 0x7F) == 0x7F)
      {
        v57 = *v55;
        v58 = *(_OWORD *)(v8 + 80);
        *(_OWORD *)(v7 + 94) = *(_OWORD *)(v8 + 94);
        *v54 = v57;
        *((_OWORD *)v7 + 5) = v58;
      }
      else
      {
        v61 = *(_QWORD *)(v8 + 64);
        v62 = *(_QWORD *)(v8 + 72);
        v64 = *(_QWORD *)(v8 + 80);
        v63 = *(_QWORD *)(v8 + 88);
        v65 = *(_QWORD *)(v8 + 96);
        sub_1BA8EBBF0(v61, v62, v64, v63, v65, *(unsigned int *)(v8 + 104) | ((unint64_t)*(unsigned __int16 *)(v8 + 108) << 32));
        *((_QWORD *)v7 + 8) = v61;
        *((_QWORD *)v7 + 9) = v62;
        *((_QWORD *)v7 + 10) = v64;
        *((_QWORD *)v7 + 11) = v63;
        *((_QWORD *)v7 + 12) = v65;
        *((_WORD *)v7 + 54) = WORD2(v56);
        *((_DWORD *)v7 + 26) = v56;
      }
      a3 = v103;
      v5 = v105;
      *((_QWORD *)v7 + 14) = *(_QWORD *)(v8 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 15) = *(_QWORD *)(v8 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v77 = *(int *)(v9 + 32);
      v78 = &v7[v77];
      v79 = v8 + v77;
      v80 = sub_1BB86EB84();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 24))(v78, v79, v80);
      goto LABEL_29;
    }
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
  }
  sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  memcpy(v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_29:
  v81 = *(int *)(a3 + 28);
  v82 = (char *)v5 + v81;
  v83 = a3;
  v84 = a2 + v81;
  v85 = sub_1BB86EB84();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 24))(v82, v84, v85);
  v86 = type metadata accessor for DebugFormatCacheFileMetadata();
  *(_QWORD *)&v82[*(int *)(v86 + 20)] = *(_QWORD *)(v84 + *(int *)(v86 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v87 = *(int *)(v83 + 32);
  v88 = (char *)v5 + v87;
  v89 = a2 + v87;
  if (v5 != (_QWORD *)a2)
  {
    sub_1BA4A2E80((uint64_t)v5 + v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    type metadata accessor for FormatFile();
    v90 = (char *)&loc_1BB0F6ED0 + 4 * word_1BB8EB738[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_1BB0F5160(0);
  v92 = v91;
  v93 = *(int *)(v91 + 44);
  v94 = (uint64_t *)&v88[v93];
  v95 = (uint64_t *)(v89 + v93);
  v96 = *v95;
  v97 = v95[1];
  sub_1BA69D44C(*v95, v97);
  v98 = *v94;
  v99 = v94[1];
  *v94 = v96;
  v94[1] = v97;
  sub_1BA69D314(v98, v99);
  *(_QWORD *)&v88[*(int *)(v92 + 48)] = *(_QWORD *)(v89 + *(int *)(v92 + 48));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BB0F7E00(uint64_t a1)
{
  destroy for FormatDerivedDataContextScope(a1);
  return a1;
}

_OWORD *sub_1BB0F7E34(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v82;
  int *v83;
  unsigned int (*v84)(char *, uint64_t, uint64_t);
  int *v85;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  a1[2] = a2[2];
  v6 = a3[6];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for FormatDerivedDataFile();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *((_BYTE *)v7 + 16) = *((_BYTE *)v8 + 16);
    *(_OWORD *)((char *)v7 + 24) = *(_OWORD *)((char *)v8 + 24);
    *((_BYTE *)v7 + 40) = *((_BYTE *)v8 + 40);
    v12 = v8[7];
    v13 = v8[5];
    v7[6] = v8[6];
    v7[7] = v12;
    v14 = v8[4];
    v7[3] = v8[3];
    v7[4] = v14;
    v7[5] = v13;
    v15 = *(int *)(v9 + 32);
    v16 = (char *)v7 + v15;
    v17 = (char *)v8 + v15;
    v18 = sub_1BB86EB84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_1BB86EB84();
  v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  v24 = type metadata accessor for DebugFormatCacheFileMetadata();
  *(_QWORD *)&v20[*(int *)(v24 + 20)] = *(_QWORD *)&v21[*(int *)(v24 + 20)];
  v25 = a3[8];
  v26 = (_OWORD *)((char *)a1 + v25);
  v27 = (_OWORD *)((char *)a2 + v25);
  v28 = type metadata accessor for FormatFile();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 11:
      v41 = v27[1];
      *v26 = *v27;
      v26[1] = v41;
      v26[2] = v27[2];
      v42 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      v43 = (char *)v26 + v42;
      v44 = (char *)v27 + v42;
      *(_OWORD *)((char *)v26 + v42) = *(_OWORD *)((char *)v27 + v42);
      v45 = (int *)type metadata accessor for FormatContent(0);
      v46 = v45[5];
      v47 = &v43[v46];
      v48 = &v44[v46];
      v49 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      *(_OWORD *)&v43[v45[6]] = *(_OWORD *)&v44[v45[6]];
      *(_OWORD *)&v43[v45[7]] = *(_OWORD *)&v44[v45[7]];
      *(_OWORD *)&v43[v45[8]] = *(_OWORD *)&v44[v45[8]];
      *(_OWORD *)&v43[v45[9]] = *(_OWORD *)&v44[v45[9]];
      v50 = v45[10];
      v51 = &v43[v50];
      v52 = &v44[v50];
      v53 = sub_1BB871E24();
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      *(_QWORD *)&v43[v45[11]] = *(_QWORD *)&v44[v45[11]];
      *(_QWORD *)&v43[v45[12]] = *(_QWORD *)&v44[v45[12]];
      *(_QWORD *)&v43[v45[13]] = *(_QWORD *)&v44[v45[13]];
      *(_QWORD *)&v43[v45[14]] = *(_QWORD *)&v44[v45[14]];
      *(_QWORD *)&v43[v45[15]] = *(_QWORD *)&v44[v45[15]];
      *(_QWORD *)&v43[v45[16]] = *(_QWORD *)&v44[v45[16]];
      *(_QWORD *)&v43[v45[17]] = *(_QWORD *)&v44[v45[17]];
      goto LABEL_25;
    case 5:
      v56 = v27[1];
      *v26 = *v27;
      v26[1] = v56;
      v26[2] = v27[2];
      *((_WORD *)v26 + 24) = *((_WORD *)v27 + 24);
      *(_OWORD *)((char *)v26 + 56) = *(_OWORD *)((char *)v27 + 56);
      *(_OWORD *)((char *)v26 + 72) = *(_OWORD *)((char *)v27 + 72);
      *(_OWORD *)((char *)v26 + 88) = *(_OWORD *)((char *)v27 + 88);
      *(_OWORD *)((char *)v26 + 104) = *(_OWORD *)((char *)v27 + 104);
      *(_OWORD *)((char *)v26 + 120) = *(_OWORD *)((char *)v27 + 120);
      *(_OWORD *)((char *)v26 + 136) = *(_OWORD *)((char *)v27 + 136);
      *((_QWORD *)v26 + 19) = *((_QWORD *)v27 + 19);
      v26[10] = v27[10];
      v83 = (int *)type metadata accessor for FormatPackage();
      v57 = v83[23];
      v58 = (char *)v26 + v57;
      v59 = (char *)v27 + v57;
      *(_OWORD *)((char *)v26 + v57) = *(_OWORD *)((char *)v27 + v57);
      v85 = (int *)type metadata accessor for FormatCompilerOptions(0);
      v60 = v85[6];
      v82 = v58;
      v61 = &v58[v60];
      v62 = &v59[v60];
      v63 = *(_OWORD *)&v59[v60 + 16];
      *(_OWORD *)v61 = *(_OWORD *)&v59[v60];
      *((_OWORD *)v61 + 1) = v63;
      *((_OWORD *)v61 + 2) = *(_OWORD *)&v59[v60 + 32];
      v64 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v65 = &v61[v64];
      v66 = &v62[v64];
      v67 = sub_1BB86E710();
      v68 = *(_QWORD *)(v67 - 8);
      v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
      if (v84(v66, 1, v67))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
      v70 = v85[7];
      v71 = &v82[v70];
      v72 = &v59[v70];
      if (v84(&v59[v70], 1, v67))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        v74 = v68;
      }
      else
      {
        v75 = v72;
        v74 = v68;
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v71, v75, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v71, 0, 1, v67);
      }
      *(_QWORD *)&v82[v85[8]] = *(_QWORD *)&v59[v85[8]];
      v23((char *)v26 + v83[24], (char *)v27 + v83[24], v22);
      v76 = v83[25];
      v77 = (char *)v26 + v76;
      v78 = (char *)v27 + v76;
      if (v84((char *)v27 + v76, 1, v67))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v77, v78, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v77, 0, 1, v67);
      }
      goto LABEL_25;
    case 0:
      *v26 = *v27;
      v30 = (int *)type metadata accessor for FormatContent(0);
      v31 = v30[5];
      v32 = (char *)v26 + v31;
      v33 = (char *)v27 + v31;
      v34 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
      *(_OWORD *)((char *)v26 + v30[6]) = *(_OWORD *)((char *)v27 + v30[6]);
      *(_OWORD *)((char *)v26 + v30[7]) = *(_OWORD *)((char *)v27 + v30[7]);
      *(_OWORD *)((char *)v26 + v30[8]) = *(_OWORD *)((char *)v27 + v30[8]);
      *(_OWORD *)((char *)v26 + v30[9]) = *(_OWORD *)((char *)v27 + v30[9]);
      v35 = v30[10];
      v36 = (char *)v26 + v35;
      v37 = (char *)v27 + v35;
      v38 = sub_1BB871E24();
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      *(_QWORD *)((char *)v26 + v30[11]) = *(_QWORD *)((char *)v27 + v30[11]);
      *(_QWORD *)((char *)v26 + v30[12]) = *(_QWORD *)((char *)v27 + v30[12]);
      *(_QWORD *)((char *)v26 + v30[13]) = *(_QWORD *)((char *)v27 + v30[13]);
      *(_QWORD *)((char *)v26 + v30[14]) = *(_QWORD *)((char *)v27 + v30[14]);
      *(_QWORD *)((char *)v26 + v30[15]) = *(_QWORD *)((char *)v27 + v30[15]);
      *(_QWORD *)((char *)v26 + v30[16]) = *(_QWORD *)((char *)v27 + v30[16]);
      *(_QWORD *)((char *)v26 + v30[17]) = *(_QWORD *)((char *)v27 + v30[17]);
LABEL_25:
      swift_storeEnumTagMultiPayload();
      goto LABEL_26;
  }
  memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_26:
  sub_1BB0F5160(0);
  *(_OWORD *)((char *)v26 + *(int *)(v80 + 44)) = *(_OWORD *)((char *)v27 + *(int *)(v80 + 44));
  *(_QWORD *)((char *)v26 + *(int *)(v80 + 48)) = *(_QWORD *)((char *)v27 + *(int *)(v80 + 48));
  return a1;
}

uint64_t sub_1BB0F85B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  _OWORD *v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  _OWORD *v56;
  uint64_t v57;
  int EnumCaseMultiPayload;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char *v115;
  int *v116;
  unsigned int (*v117)(char *, uint64_t, uint64_t);
  int *v118;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (uint64_t *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = type metadata accessor for FormatDerivedDataFile();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t *)v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
LABEL_6:
      sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      goto LABEL_19;
    }
    v24 = *((_BYTE *)v10 + 16);
    v25 = *v9;
    v26 = v9[1];
    *(_OWORD *)v9 = *v10;
    v27 = *((_BYTE *)v9 + 16);
    *((_BYTE *)v9 + 16) = v24;
    sub_1BA986FA0(v25, v26, v27);
    v28 = (_OWORD *)((char *)v10 + 24);
    v29 = *((unsigned __int8 *)v9 + 40);
    if (v29 <= 0xFD)
    {
      v30 = *((unsigned __int8 *)v10 + 40);
      if (v30 <= 0xFD)
      {
        v31 = v9[3];
        v32 = v9[4];
        *(_OWORD *)(v9 + 3) = *v28;
        *((_BYTE *)v9 + 40) = v30;
        sub_1BA895B84(v31, v32, v29);
LABEL_13:
        v33 = *((_QWORD *)v10 + 7);
        v9[6] = *((_QWORD *)v10 + 6);
        v9[7] = v33;
        swift_bridgeObjectRelease();
        if (*((unsigned __int16 *)v9 + 54) >> 9 <= 0x7EuLL)
        {
          v34 = *((unsigned int *)v10 + 26) | ((unint64_t)*((unsigned __int16 *)v10 + 54) << 32);
          if (((v34 >> 41) & 0x7F) != 0x7F)
          {
            v36 = *((unsigned int *)v9 + 26) | ((unint64_t)*((unsigned __int16 *)v9 + 54) << 32);
            v37 = *((_QWORD *)v10 + 12);
            v38 = v9[8];
            v39 = v9[9];
            v40 = v9[10];
            v41 = v9[11];
            v42 = v9[12];
            v43 = v10[5];
            *((_OWORD *)v9 + 4) = v10[4];
            *((_OWORD *)v9 + 5) = v43;
            v9[12] = v37;
            *((_DWORD *)v9 + 26) = v34;
            *((_WORD *)v9 + 54) = WORD2(v34);
            sub_1BA8EBC78(v38, v39, v40, v41, v42, v36);
            goto LABEL_18;
          }
          sub_1BAA14AE0((uint64_t)(v9 + 8));
        }
        v35 = v10[5];
        *((_OWORD *)v9 + 4) = v10[4];
        *((_OWORD *)v9 + 5) = v35;
        *(_OWORD *)((char *)v9 + 94) = *(_OWORD *)((char *)v10 + 94);
LABEL_18:
        v9[14] = *((_QWORD *)v10 + 14);
        swift_bridgeObjectRelease();
        v9[15] = *((_QWORD *)v10 + 15);
        swift_bridgeObjectRelease();
        v44 = *(int *)(v11 + 32);
        v45 = (char *)v9 + v44;
        v46 = (char *)v10 + v44;
        v47 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v45, v46, v47);
        goto LABEL_19;
      }
      sub_1BB0F7E00((uint64_t)(v9 + 3));
    }
    *(_OWORD *)(v9 + 3) = *v28;
    *((_BYTE *)v9 + 40) = *((_BYTE *)v10 + 40);
    goto LABEL_13;
  }
  if (v15)
    goto LABEL_6;
  *(_OWORD *)v9 = *v10;
  *((_BYTE *)v9 + 16) = *((_BYTE *)v10 + 16);
  *(_OWORD *)(v9 + 3) = *(_OWORD *)((char *)v10 + 24);
  *((_BYTE *)v9 + 40) = *((_BYTE *)v10 + 40);
  v17 = v10[7];
  v18 = v10[5];
  *((_OWORD *)v9 + 6) = v10[6];
  *((_OWORD *)v9 + 7) = v17;
  v19 = v10[4];
  *((_OWORD *)v9 + 3) = v10[3];
  *((_OWORD *)v9 + 4) = v19;
  *((_OWORD *)v9 + 5) = v18;
  v20 = *(int *)(v11 + 32);
  v21 = (char *)v9 + v20;
  v22 = (char *)v10 + v20;
  v23 = sub_1BB86EB84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_19:
  v48 = a3[7];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = sub_1BB86EB84();
  v52 = *(_QWORD *)(v51 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 40))(v49, v50, v51);
  v53 = type metadata accessor for DebugFormatCacheFileMetadata();
  *(_QWORD *)(v49 + *(int *)(v53 + 20)) = *(_QWORD *)(v50 + *(int *)(v53 + 20));
  swift_bridgeObjectRelease();
  v54 = a3[8];
  v55 = (_OWORD *)(a1 + v54);
  v56 = (_OWORD *)(a2 + v54);
  if (a1 != a2)
  {
    sub_1BA4A2E80(a1 + v54, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v57 = type metadata accessor for FormatFile();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 11:
        v70 = v56[1];
        *v55 = *v56;
        v55[1] = v70;
        v55[2] = v56[2];
        v71 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        v72 = (char *)v55 + v71;
        v73 = (char *)v56 + v71;
        *(_OWORD *)((char *)v55 + v71) = *(_OWORD *)((char *)v56 + v71);
        v74 = (int *)type metadata accessor for FormatContent(0);
        v75 = v74[5];
        v76 = &v72[v75];
        v77 = &v73[v75];
        v78 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
        *(_OWORD *)&v72[v74[6]] = *(_OWORD *)&v73[v74[6]];
        *(_OWORD *)&v72[v74[7]] = *(_OWORD *)&v73[v74[7]];
        *(_OWORD *)&v72[v74[8]] = *(_OWORD *)&v73[v74[8]];
        *(_OWORD *)&v72[v74[9]] = *(_OWORD *)&v73[v74[9]];
        v79 = v74[10];
        v80 = &v72[v79];
        v81 = &v73[v79];
        v82 = sub_1BB871E24();
        v83 = *(_QWORD *)(v82 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
          memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v80, v81, v82);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
        }
        *(_QWORD *)&v72[v74[11]] = *(_QWORD *)&v73[v74[11]];
        *(_QWORD *)&v72[v74[12]] = *(_QWORD *)&v73[v74[12]];
        *(_QWORD *)&v72[v74[13]] = *(_QWORD *)&v73[v74[13]];
        *(_QWORD *)&v72[v74[14]] = *(_QWORD *)&v73[v74[14]];
        *(_QWORD *)&v72[v74[15]] = *(_QWORD *)&v73[v74[15]];
        *(_QWORD *)&v72[v74[16]] = *(_QWORD *)&v73[v74[16]];
        *(_QWORD *)&v72[v74[17]] = *(_QWORD *)&v73[v74[17]];
        goto LABEL_41;
      case 5:
        v85 = v56[1];
        *v55 = *v56;
        v55[1] = v85;
        v55[2] = v56[2];
        *((_WORD *)v55 + 24) = *((_WORD *)v56 + 24);
        *(_OWORD *)((char *)v55 + 56) = *(_OWORD *)((char *)v56 + 56);
        *(_OWORD *)((char *)v55 + 72) = *(_OWORD *)((char *)v56 + 72);
        *(_OWORD *)((char *)v55 + 88) = *(_OWORD *)((char *)v56 + 88);
        *(_OWORD *)((char *)v55 + 104) = *(_OWORD *)((char *)v56 + 104);
        *(_OWORD *)((char *)v55 + 120) = *(_OWORD *)((char *)v56 + 120);
        *(_OWORD *)((char *)v55 + 136) = *(_OWORD *)((char *)v56 + 136);
        *((_QWORD *)v55 + 19) = *((_QWORD *)v56 + 19);
        v55[10] = v56[10];
        v116 = (int *)type metadata accessor for FormatPackage();
        v86 = v116[23];
        v87 = (char *)v55 + v86;
        v88 = (char *)v56 + v86;
        *(_OWORD *)((char *)v55 + v86) = *(_OWORD *)((char *)v56 + v86);
        v118 = (int *)type metadata accessor for FormatCompilerOptions(0);
        v89 = v118[6];
        v115 = v87;
        v90 = &v87[v89];
        v91 = &v88[v89];
        v92 = *(_OWORD *)&v88[v89 + 16];
        *(_OWORD *)v90 = *(_OWORD *)&v88[v89];
        *((_OWORD *)v90 + 1) = v92;
        *((_OWORD *)v90 + 2) = *(_OWORD *)&v88[v89 + 32];
        v93 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        v94 = &v90[v93];
        v95 = &v91[v93];
        v96 = sub_1BB86E710();
        v97 = *(_QWORD *)(v96 - 8);
        v117 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
        if (v117(v95, 1, v96))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v94, v95, v96);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
        }
        v99 = v118[7];
        v100 = &v115[v99];
        v101 = &v88[v99];
        if (v117(&v88[v99], 1, v96))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
          v103 = v97;
        }
        else
        {
          v104 = v101;
          v103 = v97;
          (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v100, v104, v96);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v100, 0, 1, v96);
        }
        *(_QWORD *)&v115[v118[8]] = *(_QWORD *)&v88[v118[8]];
        (*(void (**)(char *, char *, uint64_t))(v52 + 32))((char *)v55 + v116[24], (char *)v56 + v116[24], v51);
        v105 = v116[25];
        v106 = (char *)v55 + v105;
        v107 = (char *)v56 + v105;
        if (v117((char *)v56 + v105, 1, v96))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v106, v107, v96);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v106, 0, 1, v96);
        }
        goto LABEL_41;
      case 0:
        *v55 = *v56;
        v59 = (int *)type metadata accessor for FormatContent(0);
        v60 = v59[5];
        v61 = (char *)v55 + v60;
        v62 = (char *)v56 + v60;
        v63 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        *(_OWORD *)((char *)v55 + v59[6]) = *(_OWORD *)((char *)v56 + v59[6]);
        *(_OWORD *)((char *)v55 + v59[7]) = *(_OWORD *)((char *)v56 + v59[7]);
        *(_OWORD *)((char *)v55 + v59[8]) = *(_OWORD *)((char *)v56 + v59[8]);
        *(_OWORD *)((char *)v55 + v59[9]) = *(_OWORD *)((char *)v56 + v59[9]);
        v64 = v59[10];
        v65 = (char *)v55 + v64;
        v66 = (char *)v56 + v64;
        v67 = sub_1BB871E24();
        v68 = *(_QWORD *)(v67 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
        }
        *(_QWORD *)((char *)v55 + v59[11]) = *(_QWORD *)((char *)v56 + v59[11]);
        *(_QWORD *)((char *)v55 + v59[12]) = *(_QWORD *)((char *)v56 + v59[12]);
        *(_QWORD *)((char *)v55 + v59[13]) = *(_QWORD *)((char *)v56 + v59[13]);
        *(_QWORD *)((char *)v55 + v59[14]) = *(_QWORD *)((char *)v56 + v59[14]);
        *(_QWORD *)((char *)v55 + v59[15]) = *(_QWORD *)((char *)v56 + v59[15]);
        *(_QWORD *)((char *)v55 + v59[16]) = *(_QWORD *)((char *)v56 + v59[16]);
        *(_QWORD *)((char *)v55 + v59[17]) = *(_QWORD *)((char *)v56 + v59[17]);
LABEL_41:
        swift_storeEnumTagMultiPayload();
        goto LABEL_42;
    }
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
LABEL_42:
  sub_1BB0F5160(0);
  v110 = v109;
  v111 = *(int *)(v109 + 44);
  v112 = *(_QWORD *)((char *)v55 + v111);
  v113 = *(_QWORD *)((char *)v55 + v111 + 8);
  *(_OWORD *)((char *)v55 + v111) = *(_OWORD *)((char *)v56 + v111);
  sub_1BA69D314(v112, v113);
  *(_QWORD *)((char *)v55 + *(int *)(v110 + 48)) = *(_QWORD *)((char *)v56 + *(int *)(v110 + 48));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB0F8F20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB0F8F2C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = type metadata accessor for DebugFormatCacheFileMetadata();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        sub_1BB0F5160(0);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BB0F9000()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB0F900C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = type metadata accessor for DebugFormatCacheFileMetadata();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        sub_1BB0F5160(0);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatCacheFile()
{
  uint64_t result;

  result = qword_1EF2BB530;
  if (!qword_1EF2BB530)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB0F9118()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BA4A3FB4(319, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  if (v0 <= 0x3F)
  {
    type metadata accessor for DebugFormatCacheFileMetadata();
    if (v1 <= 0x3F)
    {
      sub_1BB0F5160(319);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1BB0F91DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a7;
  v30 = a1;
  v31 = a6;
  v16 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v28 - v20;
  v22 = (int *)type metadata accessor for DebugFormatCacheFile();
  v29 = a8 + v22[7];
  sub_1BA4C2DD8(a1, v29, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  v23 = a8 + v22[8];
  sub_1BA4C2DD8(a2, v23, (uint64_t (*)(_QWORD))sub_1BB0F5160);
  *(_QWORD *)a8 = a3;
  *(_QWORD *)(a8 + 8) = a4;
  *(double *)(a8 + 16) = a9;
  *(_BYTE *)(a8 + 24) = a5;
  v24 = v32;
  *(_QWORD *)(a8 + 32) = v31;
  *(_QWORD *)(a8 + 40) = v24;
  sub_1BA4C2DD8(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
  v34 = 47;
  v35 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v25);
  swift_bridgeObjectRelease();
  v26 = v33;
  sub_1BB73FF08((uint64_t)v18, v34, v35);
  sub_1BA4A2E80(a2, (uint64_t (*)(_QWORD))sub_1BB0F5160);
  sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  if (!v26)
    return sub_1BB0FA12C((uint64_t)v21, a8 + v22[6]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  return sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))sub_1BB0F5160);
}

uint64_t sub_1BB0F93DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;

  v56 = a2;
  v62 = type metadata accessor for FormatDerivedDataFile();
  v58 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v59 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0F5160(0);
  v60 = v4;
  MEMORY[0x1E0C80A78](v4);
  v61 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  MEMORY[0x1E0C80A78](v6);
  v57 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v63 = (char *)&v53 - v9;
  v64 = type metadata accessor for DebugFormatCacheFileMetadata();
  MEMORY[0x1E0C80A78](v64);
  v65 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0FA238(0, &qword_1EF2BB578, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v12 = v11;
  v13 = *((_QWORD *)v11 - 1);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v53 - v14;
  v16 = type metadata accessor for DebugFormatCacheFile();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0FA058();
  v19 = v66;
  sub_1BB87468C();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = v63;
  v66 = v13;
  v54 = v16;
  v55 = a1;
  LOBYTE(v67) = 3;
  sub_1BA4A2870(&qword_1EF2BB588, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFileMetadata, (uint64_t)&unk_1BB8A3B30);
  sub_1BB8740D4();
  v22 = v15;
  v23 = (uint64_t)&v18[*(int *)(v54 + 28)];
  sub_1BA5193C4(v65, v23, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  v71 = 0;
  sub_1BB0FA09C();
  sub_1BB8740D4();
  v24 = v68;
  v25 = v69;
  v26 = v70;
  *(_QWORD *)v18 = v67;
  *((_QWORD *)v18 + 1) = v24;
  *((_QWORD *)v18 + 2) = v25;
  v18[24] = v26;
  LOBYTE(v67) = 1;
  *((_QWORD *)v18 + 4) = sub_1BB874098();
  *((_QWORD *)v18 + 5) = v27;
  LOBYTE(v67) = 2;
  sub_1BA4A2870(&qword_1EF2BB598, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile, (uint64_t)&unk_1BB9464D8);
  v28 = (uint64_t)v21;
  v65 = 0;
  sub_1BB874068();
  v29 = v54;
  v30 = v28;
  v31 = (uint64_t)&v18[*(int *)(v54 + 24)];
  sub_1BB0FA12C(v30, v31);
  LOBYTE(v67) = 4;
  sub_1BA4A2870(&qword_1EF2BB5A0, (uint64_t (*)(uint64_t))sub_1BB0F5160, (uint64_t)&unk_1BB9156A0);
  v32 = (uint64_t)v61;
  sub_1BB8740D4();
  v64 = (uint64_t)v22;
  sub_1BA5193C4(v32, (uint64_t)&v18[*(int *)(v29 + 32)], (uint64_t (*)(_QWORD))sub_1BB0F5160);
  v35 = v57;
  sub_1BB0FA180(v31, v57);
  v36 = v62;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v35, 1, v62) == 1)
  {
    (*(void (**)(uint64_t, char *))(v66 + 8))(v64, v12);
    sub_1BB0FA0E0(v35);
    v37 = (uint64_t)v55;
  }
  else
  {
    v63 = v12;
    v38 = v35;
    v39 = v59;
    sub_1BA5193C4(v38, v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    v40 = v39 + *(int *)(v36 + 32);
    v37 = (uint64_t)v55;
    if (qword_1EF2A7438 != -1)
      swift_once();
    v41 = sub_1BB86EB84();
    v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8];
    v43 = __swift_project_value_buffer(v41, (uint64_t)qword_1EF3D0990);
    sub_1BA4A2870(&qword_1ED39C378, v42, MEMORY[0x1E0DB4DE8]);
    if ((sub_1BB872958() & 1) == 0)
    {
      v62 = type metadata accessor for DebugFormatManagerError();
      sub_1BA4A2870(&qword_1EF2BB5A8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
      swift_allocError();
      v45 = v44;
      sub_1BB0FA1D4();
      v47 = v45 + *(int *)(v46 + 48);
      v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
      v48(v45, v40, v41);
      v49 = v47;
      v50 = v18;
      v48(v49, v43, v41);
      v51 = v54;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
      (*(void (**)(uint64_t, char *))(v66 + 8))(v64, v63);
      v52 = v65;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      swift_bridgeObjectRelease();
      if (!v52)
        swift_bridgeObjectRelease();
      sub_1BB0FA0E0((uint64_t)&v50[*(int *)(v51 + 24)]);
      sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
      v33 = (uint64_t)&v50[*(int *)(v51 + 32)];
      v34 = (uint64_t (*)(_QWORD))sub_1BB0F5160;
      return sub_1BA4A2E80(v33, v34);
    }
    sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    (*(void (**)(uint64_t, char *))(v66 + 8))(v64, v63);
  }
  sub_1BA4C2DD8((uint64_t)v18, v56, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  __swift_destroy_boxed_opaque_existential_1(v37);
  v33 = (uint64_t)v18;
  v34 = (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile;
  return sub_1BA4A2E80(v33, v34);
}

uint64_t sub_1BB0F9B24(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = v1;
  sub_1BB0FA238(0, &qword_1EF2BB5B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v14[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0FA058();
  sub_1BB8746C8();
  v10 = v3[1];
  v11 = v3[2];
  v12 = *((_BYTE *)v3 + 24);
  v15 = *v3;
  v16 = v10;
  v17 = v11;
  v18 = v12;
  v14[15] = 0;
  sub_1BB0FA294();
  sub_1BB8741AC();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1BB87417C();
    type metadata accessor for DebugFormatCacheFile();
    LOBYTE(v15) = 2;
    type metadata accessor for FormatDerivedDataFile();
    sub_1BA4A2870(&qword_1EF2BB5C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile, (uint64_t)&unk_1BB9464B0);
    sub_1BB87414C();
    LOBYTE(v15) = 3;
    type metadata accessor for DebugFormatCacheFileMetadata();
    sub_1BA4A2870(&qword_1EF2BB5D0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFileMetadata, (uint64_t)&unk_1BB8A3B08);
    sub_1BB8741AC();
    LOBYTE(v15) = 4;
    sub_1BB0F5160(0);
    sub_1BA4A2870(&qword_1EF2BB5D8, (uint64_t (*)(uint64_t))sub_1BB0F5160, (uint64_t)&unk_1BB915678);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB0F9D94()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB0F9DC8 + 4 * byte_1BB8EB750[*v0]))(0x6C69466775626564, 0xE900000000000065);
}

unint64_t sub_1BB0F9DC8()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB0F9DE4()
{
  return 0x4464657669726564;
}

uint64_t sub_1BB0F9E08()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1BB0F9E20()
{
  return 0x746C75736572;
}

uint64_t sub_1BB0F9E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB0FA47C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB0F9E58()
{
  sub_1BB0FA058();
  return sub_1BB874710();
}

uint64_t sub_1BB0F9E80()
{
  sub_1BB0FA058();
  return sub_1BB87471C();
}

uint64_t sub_1BB0F9EA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB0F93DC(a1, a2);
}

uint64_t sub_1BB0F9EBC(_QWORD *a1)
{
  return sub_1BB0F9B24(a1);
}

BOOL sub_1BB0F9ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  double v12;
  int v13;
  double v14;
  int v15;
  BOOL v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v23;

  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - v9;
  v12 = *(double *)(a1 + 16);
  v13 = *(unsigned __int8 *)(a1 + 24);
  v14 = *(double *)(a2 + 16);
  v15 = *(unsigned __int8 *)(a2 + 24);
  v16 = *v11 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (!v16 && (sub_1BB874398() & 1) == 0 || v12 != v14)
  {
    sub_1BA4C2DD8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    sub_1BA4C2DD8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
LABEL_11:
    v21 = 0;
    goto LABEL_12;
  }
  sub_1BA4C2DD8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BA4C2DD8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  if (v13 != v15)
    goto LABEL_11;
  v17 = *(int *)(a3 + 28);
  v18 = &v10[v17];
  v19 = &v7[v17];
  if ((sub_1BB86EB3C() & 1) == 0)
    goto LABEL_11;
  v20 = type metadata accessor for DebugFormatCacheFileMetadata();
  v21 = sub_1BA882868(*(_QWORD *)&v18[*(int *)(v20 + 20)], *(_QWORD *)&v19[*(int *)(v20 + 20)]);
LABEL_12:
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  return v21;
}

unint64_t sub_1BB0FA058()
{
  unint64_t result;

  result = qword_1EF2BB580;
  if (!qword_1EF2BB580)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EB90C, &type metadata for DebugFormatCacheFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB580);
  }
  return result;
}

unint64_t sub_1BB0FA09C()
{
  unint64_t result;

  result = qword_1EF2BB590;
  if (!qword_1EF2BB590)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9273E4, &type metadata for DebugFormatFile);
    atomic_store(result, (unint64_t *)&qword_1EF2BB590);
  }
  return result;
}

uint64_t sub_1BB0FA0E0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB0FA12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB0FA180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BB0FA1D4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BB5B0)
  {
    sub_1BB86EB84();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2BB5B0);
  }
}

void sub_1BB0FA238(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB0FA058();
    v7 = a3(a1, &type metadata for DebugFormatCacheFile.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB0FA294()
{
  unint64_t result;

  result = qword_1EF2BB5C0;
  if (!qword_1EF2BB5C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9273BC, &type metadata for DebugFormatFile);
    atomic_store(result, (unint64_t *)&qword_1EF2BB5C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatCacheFile.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB0FA324 + 4 * byte_1BB8EB75A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB0FA358 + 4 * byte_1BB8EB755[v4]))();
}

uint64_t sub_1BB0FA358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0FA360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0FA368);
  return result;
}

uint64_t sub_1BB0FA374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0FA37CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB0FA380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0FA388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCacheFile.CodingKeys()
{
  return &type metadata for DebugFormatCacheFile.CodingKeys;
}

unint64_t sub_1BB0FA3A8()
{
  unint64_t result;

  result = qword_1EF2BB5E0;
  if (!qword_1EF2BB5E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EB8E4, &type metadata for DebugFormatCacheFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB5E0);
  }
  return result;
}

unint64_t sub_1BB0FA3F0()
{
  unint64_t result;

  result = qword_1EF2BB5E8;
  if (!qword_1EF2BB5E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EB854, &type metadata for DebugFormatCacheFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB5E8);
  }
  return result;
}

unint64_t sub_1BB0FA438()
{
  unint64_t result;

  result = qword_1EF2BB5F0;
  if (!qword_1EF2BB5F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EB87C, &type metadata for DebugFormatCacheFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB5F0);
  }
  return result;
}

uint64_t sub_1BB0FA47C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C69466775626564 && a2 == 0xE900000000000065;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB97A100 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4464657669726564 && a2 == 0xEF656C6946617461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BB0FA6B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(unint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;

  v65 = a1;
  v66 = a4;
  v59 = a3;
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v11);
  v61 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1BB86BF20();
  v13 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v67 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v60 = (char *)v50 - v16;
  sub_1BA7F1104(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BB86BFF8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v64 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a2[1];
  if (!v24)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v8 + 16))(a5, v65, v7, v22);
  v57 = v8;
  v58 = a5;
  v55 = v13;
  v56 = v10;
  v62 = *a2;
  v63 = v7;
  v26 = a2[2];
  v25 = a2[3];
  v28 = a2[4];
  v27 = a2[5];
  v29 = v65;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB86BF74();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1BA993900(v62, v24);
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA7F1104);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v58, v29, v63);
  }
  else
  {
    v54 = v27;
    v50[0] = v28;
    v50[1] = v25;
    v50[2] = v26;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v64, v19, v20);
    v31 = sub_1BB86BF38();
    if (v31)
      v32 = v31;
    else
      v32 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v33 = v60;
    v34 = v62;
    sub_1BB86BEFC();
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52 = v21;
    v53 = v20;
    v51 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v32 = sub_1BA785BF0(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
    v36 = v63;
    v38 = *(_QWORD *)(v32 + 16);
    v37 = *(_QWORD *)(v32 + 24);
    if (v38 >= v37 >> 1)
      v32 = sub_1BA785BF0(v37 > 1, v38 + 1, 1, v32);
    *(_QWORD *)(v32 + 16) = v38 + 1;
    v66 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    v39 = *(_QWORD *)(v55 + 72);
    v40 = *(void (**)(unint64_t, char *, uint64_t))(v55 + 32);
    v40(v32 + v66 + v39 * v38, v33, v68);
    v41 = v54;
    v42 = *(_QWORD *)(v54 + 16);
    if (v42)
    {
      swift_bridgeObjectRetain();
      v43 = v41 + 56;
      do
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_1BB86BEFC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v45 = *(_QWORD *)(v32 + 16);
        v44 = *(_QWORD *)(v32 + 24);
        if (v45 >= v44 >> 1)
          v32 = sub_1BA785BF0(v44 > 1, v45 + 1, 1, v32);
        v43 += 32;
        *(_QWORD *)(v32 + 16) = v45 + 1;
        v40(v32 + v66 + v45 * v39, v67, v68);
        --v42;
      }
      while (v42);
      swift_bridgeObjectRelease();
      v34 = v62;
      v36 = v63;
    }
    v46 = v64;
    sub_1BB86BF44();
    v47 = (uint64_t)v61;
    sub_1BB86BF80();
    sub_1BA993900(v34, v51);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v46, v53);
    v49 = v56;
    v48 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v56, v65, v36);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v47, 1, v36) == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v58, v49, v36);
      return sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v36);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v58, v47, v36);
    }
  }
}

uint64_t sub_1BB0FABBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned __int8 *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;

  v30 = a4;
  v15 = sub_1BB86C8E0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a7;
  sub_1BB86C8D4();
  v20 = sub_1BB86C8C8();
  v28 = v21;
  v29 = v20;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (a1)
    v22 = objc_msgSend(a1, sel_asSports);
  else
    v22 = 0;
  v32 = v19;
  v23 = sub_1BB0FAF14((uint64_t)a1, a5, &v32);
  swift_bridgeObjectRelease();
  v31 = v19;
  v24 = sub_1BB0FB700(a1, a2, a3, a6, 0x64657461727563, 0xE700000000000000, 0, &v31);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  result = swift_unknownObjectRelease();
  v26 = v28;
  *a8 = v29;
  a8[1] = v26;
  v27 = v30;
  a8[2] = (uint64_t)v22;
  a8[3] = v27;
  a8[4] = v23;
  a8[5] = (uint64_t)v24;
  return result;
}

uint64_t SportsDataVisualizationConfig.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsDataVisualizationConfig.backingTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsDataVisualizationConfig.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsDataVisualizationConfig.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsDataVisualizationConfig.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsDataVisualizationConfig.init(backingTag:leagueTag:championshipTag:embedConfig:groupType:feedConfiguration:embedType:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t result;
  id v22;
  uint64_t v23;
  _QWORD v28[2];

  v12 = a4[1];
  v14 = a4[2];
  v13 = a4[3];
  v15 = a4[4];
  v16 = *a8;
  v28[0] = *a4;
  v28[1] = v12;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v17);
  FCFeedDescriptorConfiguration.description.getter(a7);
  sub_1BB872AFC(v18);
  swift_bridgeObjectRelease();
  v23 = v28[0];
  v22 = objc_msgSend(a1, sel_asSports);
  LOBYTE(v28[0]) = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_1BB0FAF14((uint64_t)a1, v13, (unsigned __int8 *)v28);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v28[0]) = v16;
  v20 = sub_1BB0FB700(a1, a2, a3, v14, a5, a6, a7, (unsigned __int8 *)v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
  swift_unknownObjectRelease();
  result = swift_unknownObjectRelease();
  *a9 = v23;
  a9[1] = v12;
  a9[2] = v22;
  a9[3] = v15;
  a9[4] = v19;
  a9[5] = v20;
  return result;
}

unint64_t sub_1BB0FAF14(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  char *v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t ObjCClassFromMetadata;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  char *v73;
  void (*v74)(uint64_t, char *, uint64_t);
  void (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  unint64_t v84;

  v81 = a2;
  v82 = type metadata accessor for FormatOption();
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v79 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v72 = (_QWORD **)((char *)&v71 - v7);
  MEMORY[0x1E0C80A78](v8);
  v71 = (_QWORD **)((char *)&v71 - v9);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD **)((char *)&v71 - v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD **)((char *)&v71 - v14);
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v71 - v24;
  v27 = *a3;
  v28 = MEMORY[0x1E0DEE9D8];
  v84 = MEMORY[0x1E0DEE9D8];
  if (a1)
  {
    swift_getObjectType();
    v83 = v27;
    sub_1BB0FCCB0(&v83, (uint64_t)v26);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v17 + 56))((char *)&v71 - v24, 1, 1, v16, v25);
  }
  sub_1BA4C2DD8((uint64_t)v26, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16) == 1)
  {
    sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    goto LABEL_12;
  }
  v73 = v26;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v22, v16);
  sub_1BA7125BC(0);
  v30 = v29;
  v31 = swift_allocBox();
  v33 = v32;
  v74 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
  v74(v32, v19, v16);
  *(_QWORD *)(v33 + *(int *)(v30 + 36)) = v28;
  *v15 = 0x752D726564616568;
  v15[1] = 0xEA00000000006C72;
  v15[2] = v31 | 0x6000000000000000;
  v15[3] = 1;
  v34 = (char *)v15 + *(int *)(v82 + 28);
  v35 = type metadata accessor for FormatVersionRequirement(0);
  v75 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v76 = v35;
  v75(v34, 1, 1);
  v36 = sub_1BA7AD174(0, 1, 1, v28);
  v38 = *(_QWORD *)(v36 + 16);
  v37 = *(_QWORD *)(v36 + 24);
  if (v38 >= v37 >> 1)
    v36 = sub_1BA7AD174(v37 > 1, v38 + 1, 1, v36);
  *(_QWORD *)(v36 + 16) = v38 + 1;
  v78 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  v77 = *(_QWORD *)(v80 + 72);
  sub_1BA5193C4((uint64_t)v15, v36 + v78 + v77 * v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  v39 = swift_allocBox();
  v41 = v40;
  v74(v40, v19, v16);
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v41 + *(int *)(v30 + 36)) = MEMORY[0x1E0DEE9D8];
  *v12 = 0xD000000000000013;
  v12[1] = 0x80000001BB97A140;
  v12[2] = v39 | 0x6000000000000000;
  v12[3] = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v75)((char *)v12 + *(int *)(v82 + 28), 1, 1, v76);
  v43 = *(_QWORD *)(v36 + 16);
  v42 = *(_QWORD *)(v36 + 24);
  if (v43 >= v42 >> 1)
    v36 = sub_1BA7AD174(v42 > 1, v43 + 1, 1, v36);
  *(_QWORD *)(v36 + 16) = v43 + 1;
  sub_1BA5193C4((uint64_t)v12, v36 + v78 + v43 * v77, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  v84 = v36;
  v26 = v73;
  if (((1 << v27) & 0xF3) != 0)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
LABEL_12:
    v44 = (uint64_t)v79;
    if (v27 != 2)
      goto LABEL_18;
    goto LABEL_13;
  }
  if (v27 == 2)
  {
    v59 = swift_allocBox();
    v61 = v60;
    v74(v60, v19, v16);
    *(_QWORD *)(v61 + *(int *)(v30 + 36)) = v28;
    v62 = v71;
    *v71 = 0x676E69646E617473;
    v62[1] = 0xEC0000006C72752DLL;
    v62[2] = v59 | 0x6000000000000000;
    v62[3] = 1;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v75)((char *)v62 + *(int *)(v82 + 28), 1, 1, v76);
    v64 = *(_QWORD *)(v36 + 16);
    v63 = *(_QWORD *)(v36 + 24);
    if (v64 >= v63 >> 1)
      v36 = sub_1BA7AD174(v63 > 1, v64 + 1, 1, v36);
    v26 = v73;
    *(_QWORD *)(v36 + 16) = v64 + 1;
    sub_1BA5193C4((uint64_t)v62, v36 + v78 + v64 * v77, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v84 = v36;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v44 = (uint64_t)v79;
LABEL_13:
    v45 = v26;
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v47 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v48 = sub_1BB86C340();
    v50 = v49;

    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 16) = v48;
    *(_QWORD *)(v51 + 24) = v50;
    *(_QWORD *)(v51 + 32) = v28;
    strcpy((char *)v44, "header-title");
    *(_BYTE *)(v44 + 13) = 0;
    *(_WORD *)(v44 + 14) = -5120;
    *(_QWORD *)(v44 + 16) = v51 | 0x5000000000000000;
    *(_QWORD *)(v44 + 24) = 1;
    v52 = v44 + *(int *)(v82 + 28);
    v53 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 1, 1, v53);
    v54 = v84;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v54 = sub_1BA7AD174(0, *(_QWORD *)(v54 + 16) + 1, 1, v54);
    v56 = *(_QWORD *)(v54 + 16);
    v55 = *(_QWORD *)(v54 + 24);
    v26 = v45;
    if (v56 >= v55 >> 1)
      v54 = sub_1BA7AD174(v55 > 1, v56 + 1, 1, v54);
    *(_QWORD *)(v54 + 16) = v56 + 1;
    sub_1BA5193C4(v44, v54+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v84 = v54;
    goto LABEL_18;
  }
  v65 = swift_allocBox();
  v67 = v66;
  v74(v66, v19, v16);
  *(_QWORD *)(v67 + *(int *)(v30 + 36)) = v28;
  v68 = v72;
  *v72 = 0x2D74656B63617262;
  v68[1] = 0xEB000000006C7275;
  v68[2] = v65 | 0x6000000000000000;
  v68[3] = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v75)((char *)v68 + *(int *)(v82 + 28), 1, 1, v76);
  v70 = *(_QWORD *)(v36 + 16);
  v69 = *(_QWORD *)(v36 + 24);
  if (v70 >= v69 >> 1)
    v36 = sub_1BA7AD174(v69 > 1, v70 + 1, 1, v36);
  *(_QWORD *)(v36 + 16) = v70 + 1;
  sub_1BA5193C4((uint64_t)v68, v36 + v78 + v70 * v77, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  v84 = v36;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
LABEL_18:
  v57 = swift_bridgeObjectRetain();
  sub_1BA6D3834(v57);
  sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  return v84;
}

_QWORD *sub_1BB0FB700(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 *a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  int v21;
  char **v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t inited;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  _QWORD *v72;
  uint64_t v73;

  v68 = a5;
  v69 = a7;
  v70 = a4;
  v73 = *MEMORY[0x1E0C80C00];
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a8;
  v72 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (a1)
  {
    swift_getObjectType();
    v71 = v21;
    sub_1BB0FCCB0(&v71, (uint64_t)v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
      if (((1 << v21) & 0xF3) == 0)
      {
        if (v21 == 2)
        {
          v67 = sub_1BB86C538();
          v24 = v23;
          v25 = sub_1BB38FBF8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
          v27 = v25[2];
          v26 = v25[3];
          if (v27 >= v26 >> 1)
            v25 = sub_1BB38FBF8((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
          v25[2] = v27 + 1;
          v28 = &v25[4 * v27];
          v29 = 0x676E69646E617473;
          v30 = 0xEB000000006C7255;
        }
        else
        {
          v67 = sub_1BB86C538();
          v24 = v31;
          v25 = sub_1BB38FBF8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
          v33 = v25[2];
          v32 = v25[3];
          if (v33 >= v32 >> 1)
            v25 = sub_1BB38FBF8((_QWORD *)(v32 > 1), v33 + 1, 1, v25);
          v25[2] = v33 + 1;
          v28 = &v25[4 * v33];
          v29 = 0x5574656B63617262;
          v30 = 0xEA00000000006C72;
        }
        v28[4] = v29;
        v28[5] = v30;
        v28[6] = v67;
        v28[7] = v24;
        v72 = v25;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    }
    v34 = objc_msgSend(a1, sel_asSports);
    v22 = &selRef_backgroundColor;
    if (v34)
    {
      v35 = objc_msgSend(v34, sel_UMCCanonicalID);
      if (!v35)
      {
        swift_unknownObjectRelease();
        if (!a2)
          goto LABEL_31;
        goto LABEL_24;
      }
      v36 = v35;
      v37 = sub_1BB8729A0();
      v39 = v38;

      v40 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v40 = sub_1BB38FBF8(0, v40[2] + 1, 1, v40);
      v42 = v40[2];
      v41 = v40[3];
      if (v42 >= v41 >> 1)
        v40 = sub_1BB38FBF8((_QWORD *)(v41 > 1), v42 + 1, 1, v40);
      v40[2] = v42 + 1;
      v43 = &v40[4 * v42];
      v43[4] = 0x7463656A627573;
      v43[5] = 0xE700000000000000;
      v43[6] = v37;
      v43[7] = v39;
      swift_unknownObjectRelease();
      v72 = v40;
    }
    if (!a2)
      goto LABEL_31;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v17 + 56))(v15, 1, 1, v16, v18);
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v22 = &selRef_backgroundColor;
    if (!a2)
      goto LABEL_31;
  }
LABEL_24:
  v44 = objc_msgSend((id)swift_unknownObjectRetain(), v22[254]);
  if (v44)
  {
    v45 = v44;
    v46 = sub_1BB8729A0();
    v48 = v47;

    v49 = v72;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v49 = sub_1BB38FBF8(0, v49[2] + 1, 1, v49);
    v51 = v49[2];
    v50 = v49[3];
    if (v51 >= v50 >> 1)
      v49 = sub_1BB38FBF8((_QWORD *)(v50 > 1), v51 + 1, 1, v49);
    v49[2] = v51 + 1;
    v52 = &v49[4 * v51];
    v52[4] = 0x65756761656CLL;
    v52[5] = 0xE600000000000000;
    v52[6] = v46;
    v52[7] = v48;
    swift_unknownObjectRelease();
    v72 = v49;
  }
  else
  {
    swift_unknownObjectRelease();
  }
LABEL_31:
  if (a3)
  {
    v53 = objc_msgSend((id)swift_unknownObjectRetain(), v22[254]);
    if (v53)
    {
      v54 = v53;
      v55 = sub_1BB8729A0();
      v57 = v56;

      v58 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v58 = sub_1BB38FBF8(0, v58[2] + 1, 1, v58);
      v60 = v58[2];
      v59 = v58[3];
      if (v60 >= v59 >> 1)
        v58 = sub_1BB38FBF8((_QWORD *)(v59 > 1), v60 + 1, 1, v58);
      v58[2] = v60 + 1;
      v61 = (char *)&v58[4 * v60];
      strcpy(v61 + 32, "championship");
      v61[45] = 0;
      *((_WORD *)v61 + 23) = -5120;
      *((_QWORD *)v61 + 6) = v55;
      *((_QWORD *)v61 + 7) = v57;
      swift_unknownObjectRelease();
      v72 = v58;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  sub_1BB0FE310(0, qword_1ED3AF4A0, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  *(_QWORD *)(inited + 32) = 0x756F724764656566;
  *(_QWORD *)(inited + 40) = 0xE900000000000070;
  *(_QWORD *)(inited + 48) = v68;
  *(_QWORD *)(inited + 56) = a6;
  v63 = FCFeedDescriptorConfiguration.description.getter(v69);
  *(_QWORD *)(inited + 64) = 0xD000000000000011;
  *(_QWORD *)(inited + 72) = 0x80000001BB96A630;
  *(_QWORD *)(inited + 80) = v63;
  *(_QWORD *)(inited + 88) = v64;
  swift_bridgeObjectRetain();
  sub_1BB386068(inited);
  v65 = swift_bridgeObjectRetain();
  sub_1BB386068(v65);
  return v72;
}

uint64_t SportsDataVisualizationConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;
  uint64_t v36;

  v34 = a2;
  sub_1BB0FD080(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0FD170(0, &qword_1EF2BB5F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v28 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0FD0B8();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12 = (uint64_t)v6;
  v32 = a1;
  v33 = v9;
  LOBYTE(v36) = 0;
  v13 = v8;
  v15 = sub_1BB874098();
  v17 = v16;
  sub_1BB0FD09C(0);
  v19 = v18;
  LOBYTE(v36) = 1;
  sub_1BA4A2870((unint64_t *)&unk_1ED3A3B50, (uint64_t (*)(uint64_t))sub_1BB0FD09C, MEMORY[0x1E0DB50A0]);
  swift_bridgeObjectRetain();
  sub_1BB874068();
  v31 = v17;
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v12, 1, v19) == 1)
  {
    sub_1BA4A2E80(v12, (uint64_t (*)(_QWORD))sub_1BB0FD080);
    v21 = 0;
  }
  else
  {
    sub_1BB86ED1C();
    v21 = v36;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v12, v19);
  }
  sub_1BA6BCC84();
  v35 = 2;
  sub_1BA64D3D4((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
  swift_unknownObjectRetain();
  sub_1BB8740D4();
  v22 = v36;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v35 = 3;
  sub_1BA5BB878((unint64_t *)&qword_1ED3B9450, sub_1BA836304, MEMORY[0x1E0DEAF40]);
  v30 = v22;
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v23 = v36;
  sub_1BB0FE310(0, &qword_1ED3AE4C0, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
  v35 = 4;
  sub_1BB0FD0FC(&qword_1EF2BB600, (uint64_t (*)(void))sub_1BAA61698, MEMORY[0x1E0DEAF40]);
  v29 = v23;
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v13);
  v24 = v36;
  v25 = v31;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v26 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v27 = v34;
  *v34 = v15;
  v27[1] = v25;
  v27[2] = v21;
  v27[3] = v26;
  v27[4] = v29;
  v27[5] = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t SportsDataVisualizationConfig.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  sub_1BB0FD080(0);
  MEMORY[0x1E0C80A78](v3);
  v24 = (uint64_t)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0FD170(0, (unint64_t *)&unk_1ED3AF430, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = v1[3];
  v22 = v1[4];
  v23 = v9;
  v21 = v1[5];
  v10 = a1[3];
  v11 = a1;
  v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1BB0FD0B8();
  sub_1BB8746C8();
  LOBYTE(v27) = 0;
  v14 = v8;
  v15 = v25;
  sub_1BB87417C();
  if (!v15)
  {
    v17 = v22;
    v16 = v23;
    v18 = swift_unknownObjectRetain();
    v19 = v24;
    sub_1BAF9B48C(v18, v24);
    LOBYTE(v27) = 1;
    sub_1BB0FD09C(0);
    sub_1BA4A2870((unint64_t *)&unk_1ED3A3B40, (uint64_t (*)(uint64_t))sub_1BB0FD09C, MEMORY[0x1E0DB5098]);
    sub_1BB87414C();
    sub_1BA4A2E80(v19, (uint64_t (*)(_QWORD))sub_1BB0FD080);
    v27 = v16;
    v26 = 2;
    sub_1BA6BCC84();
    sub_1BA64D3D4((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
    v27 = v17;
    v26 = 3;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5BB878((unint64_t *)&qword_1ED39BE80, sub_1BA836320, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v27 = v21;
    v26 = 4;
    sub_1BB0FE310(0, &qword_1ED3AE4C0, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    sub_1BB0FD0FC((unint64_t *)&qword_1ED3AE4C8, (uint64_t (*)(void))sub_1BAA60A78, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v14, v13);
}

void sub_1BB0FC570(char *a1)
{
  sub_1BB7F05BC(*a1);
}

void sub_1BB0FC57C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB0FC5D4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB0FC668()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB0FC6AC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB0FC728()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB0FC77C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB0FC810@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB0FE294();
  *a1 = result;
  return result;
}

uint64_t sub_1BB0FC83C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB0FC874 + 4 * byte_1BB8EB96F[*v0]))();
}

void sub_1BB0FC874(_QWORD *a1@<X8>)
{
  *a1 = 0x54676E696B636162;
  a1[1] = 0xEA00000000006761;
}

void sub_1BB0FC894(_QWORD *a1@<X8>)
{
  *a1 = 0x726F7463656C6573;
  a1[1] = 0xE900000000000073;
}

void sub_1BB0FC8B4(_QWORD *a1@<X8>)
{
  *a1 = 0x736E6F6974706FLL;
  a1[1] = 0xE700000000000000;
}

void sub_1BB0FC8D0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6574656D61726170;
  a1[1] = v1 + 3089;
}

uint64_t sub_1BB0FC8EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB0FC924 + 4 * byte_1BB8EB974[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB0FC924()
{
  return 0x54676E696B636162;
}

uint64_t sub_1BB0FC940()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BB0FC95C()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BB0FC974()
{
  return 0x6574656D61726170;
}

uint64_t sub_1BB0FC98C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB0FE294();
  *a1 = result;
  return result;
}

uint64_t sub_1BB0FC9B0()
{
  sub_1BB0FD0B8();
  return sub_1BB874710();
}

uint64_t sub_1BB0FC9D8()
{
  sub_1BB0FD0B8();
  return sub_1BB87471C();
}

uint64_t sub_1BB0FCA00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsDataVisualizationConfig.init(from:)(a1, a2);
}

uint64_t sub_1BB0FCA14(_QWORD *a1)
{
  return SportsDataVisualizationConfig.encode(to:)(a1);
}

uint64_t SportsDataVisualizationConfig.hash(into:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_identifier);
    sub_1BB8729A0();

    sub_1BB8745E4();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1BB8745E4();
  }
  result = sub_1BB8745D8();
  v5 = *(_QWORD *)(v2 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = v2 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      sub_1BB872A90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 32;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t SportsDataVisualizationConfig.hashValue.getter()
{
  sub_1BB8745CC();
  SportsDataVisualizationConfig.hash(into:)();
  return sub_1BB874608();
}

uint64_t sub_1BB0FCBE8()
{
  sub_1BB8745CC();
  SportsDataVisualizationConfig.hash(into:)();
  return sub_1BB874608();
}

uint64_t sub_1BB0FCC4C()
{
  sub_1BB8745CC();
  SportsDataVisualizationConfig.hash(into:)();
  return sub_1BB874608();
}

uint64_t sub_1BB0FCCB0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  int v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = objc_msgSend(v3, sel_identifier, v11);
  if (!v15)
  {
    sub_1BB8729A0();
    v15 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_, v15);

  sub_1BB86C5EC();
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3998]);
  v18 = (void *)sub_1BB86C58C();
  v19 = objc_msgSend(v17, sel_initWithURL_resolvingAgainstBaseURL_, v18, 1);

  if (((1 << v14) & 0xF3) != 0)
  {
    if (!v19)
    {
LABEL_5:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a2, 1, 1, v9);
    }
  }
  else
  {
    if (v14 == 2)
    {
      if (!v19)
        goto LABEL_5;
    }
    else if (!v19)
    {
      goto LABEL_5;
    }
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE690], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BB86BF20();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
    v21 = v19;
    sub_1BB86BEFC();
    v22 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setQueryItems_, v22);

  }
  v23 = objc_msgSend(v19, sel_URL);
  if (v23)
  {
    v24 = v23;
    sub_1BB86C5EC();

    v25 = 0;
    v19 = v24;
  }
  else
  {
    v25 = 1;
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v25, 1, v9);
  return sub_1BA5193C4((uint64_t)v8, a2, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
}

void sub_1BB0FD080(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3A3B70, (uint64_t (*)(uint64_t))sub_1BB0FD09C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB0FD09C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3A3B60, (uint64_t (*)(uint64_t))sub_1BA8EB1C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
}

unint64_t sub_1BB0FD0B8()
{
  unint64_t result;

  result = qword_1ED3ADC00;
  if (!qword_1ED3ADC00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EBB94, &type metadata for SportsDataVisualizationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC00);
  }
  return result;
}

uint64_t sub_1BB0FD0FC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BB0FE310(255, &qword_1ED3AE4C0, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB0FD170(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB0FD0B8();
    v7 = a3(a1, &type metadata for SportsDataVisualizationConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t _s8NewsFeed29SportsDataVisualizationConfigV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;

  v2 = (void *)a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v19 = a1[5];
  v6 = (void *)a2[2];
  v5 = a2[3];
  v8 = a2[4];
  v7 = a2[5];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_1BB874398() & 1) == 0)
    return 0;
  if (v2)
  {
    v9 = objc_msgSend(v2, sel_identifier);
    v10 = sub_1BB8729A0();
    v12 = v11;

    if (!v6)
    {
      if (!v12)
        goto LABEL_19;
LABEL_17:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    if (!v6)
      goto LABEL_19;
    v12 = 0;
    v10 = 0;
  }
  v13 = objc_msgSend(v6, sel_identifier);
  v14 = sub_1BB8729A0();
  v16 = v15;

  if (v12)
  {
    if (v16)
    {
      if (v10 == v14 && v12 == v16)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
          return 0;
      }
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  if (v16)
    goto LABEL_17;
LABEL_19:
  if ((sub_1BA6EB330(v4, v5) & 1) != 0 && (sub_1BA883260(v3, v8) & 1) != 0)
    return sub_1BA883274(v19, v7);
  return 0;
}

unint64_t sub_1BB0FD388()
{
  unint64_t result;

  result = qword_1EF2BB608;
  if (!qword_1EF2BB608)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualizationConfig, &type metadata for SportsDataVisualizationConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2BB608);
  }
  return result;
}

uint64_t destroy for SportsDataVisualizationConfig()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SportsDataVisualizationConfig(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SportsDataVisualizationConfig(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsDataVisualizationConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationConfig()
{
  return &type metadata for SportsDataVisualizationConfig;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB0FD5EC + 4 * byte_1BB8EB97E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB0FD620 + 4 * byte_1BB8EB979[v4]))();
}

uint64_t sub_1BB0FD620(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0FD628(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0FD630);
  return result;
}

uint64_t sub_1BB0FD63C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0FD644);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB0FD648(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0FD650(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationConfig.CodingKeys()
{
  return &type metadata for SportsDataVisualizationConfig.CodingKeys;
}

unint64_t sub_1BB0FD670()
{
  unint64_t result;

  result = qword_1EF2BB610;
  if (!qword_1EF2BB610)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EBB6C, &type metadata for SportsDataVisualizationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB610);
  }
  return result;
}

unint64_t sub_1BB0FD6B8()
{
  unint64_t result;

  result = qword_1ED3ADC18;
  if (!qword_1ED3ADC18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EBAA4, &type metadata for SportsDataVisualizationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC18);
  }
  return result;
}

unint64_t sub_1BB0FD700()
{
  unint64_t result;

  result = qword_1ED3ADC10;
  if (!qword_1ED3ADC10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EBACC, &type metadata for SportsDataVisualizationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC10);
  }
  return result;
}

_QWORD *sub_1BB0FD744(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *result;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  char *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  int64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  int64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  int64_t v73;
  char v74;
  int v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  char v86;
  _QWORD *v87;
  uint64_t v88;
  __int128 v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t inited;
  _QWORD *v100;
  void (*v101)(_QWORD *, _QWORD, uint64_t, _QWORD *);
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int64_t v106;
  void (*v107)(_QWORD *, _QWORD, uint64_t);
  char *v108;
  unint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  char v120;
  _OWORD v121[2];
  uint64_t v122;
  _OWORD v123[2];
  uint64_t v124;
  _OWORD v125[2];
  uint64_t v126;

  v2 = type metadata accessor for FormatOption();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v104 = (uint64_t)&v91 - v7;
  sub_1BA8C88C8(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v108 = (char *)&v91 - v15;
  v16 = a1[1];
  if (!v16)
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  v105 = v14;
  v106 = v12;
  v91 = v3;
  v92 = v5;
  v96 = v13;
  v17 = *a1;
  v18 = (void *)a1[2];
  v19 = a1[3];
  v21 = a1[4];
  v20 = a1[5];
  v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v22);
  v23 = *(_QWORD *)(v9 + 72);
  v24 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v110 = v23;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
  v109 = v24;
  v26 = (_QWORD *)(v25 + v24);
  v95 = v16;
  v93 = v18;
  v97 = v20;
  if (v18)
  {
    swift_unknownObjectRetain_n();
    sub_1BA99178C(v17, v16);
    v27 = v21;
    v28 = v26;
    v29 = objc_msgSend(v18, sel_identifier);
    v30 = sub_1BB8729A0();
    v32 = v31;

    v26 = v28;
    v116 = xmmword_1BB87FC90;
    v117 = 0u;
    v118 = 0u;
    v119 = 0u;
    v120 = 0;
    *(_QWORD *)&v111 = v30;
    *((_QWORD *)&v111 + 1) = v32;
    *(_QWORD *)&v112 = v18;
    BYTE8(v112) = 0;
    *(_QWORD *)&v114 = 0;
    *((_QWORD *)&v114 + 1) = 0xE000000000000000;
    *(_QWORD *)&v113 = 0;
    BYTE8(v113) = 0;
    *(_QWORD *)&v115 = 0;
    *((_QWORD *)&v115 + 1) = MEMORY[0x1E0DEE9E8];
    sub_1BAAF8BF4(6775124, 0xE300000000000000, (uint64_t)&v111, v28);
    swift_unknownObjectRelease();
    v21 = v27;
    v20 = v97;
  }
  else
  {
    v120 = 0;
    v118 = 0u;
    v119 = 0u;
    v116 = 0u;
    v117 = 0u;
    v114 = 0u;
    v115 = 0u;
    v112 = 0u;
    v113 = 0u;
    v111 = 0u;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAAF8BF4(6775124, 0xE300000000000000, (uint64_t)&v111, v26);
  }
  v34 = v108;
  v94 = v17;
  v35 = type metadata accessor for FormatInspectionItem(0);
  v107 = *(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v108 = (char *)v35;
  v107(v26, 0, 1);
  sub_1BAF89090(0x20676E696B636142, 0xEB00000000676154, 0, 0, v25, v121);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v36 = inited;
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v36 + 64) = &off_1E72D2F60;
  v37 = swift_allocObject();
  *(_QWORD *)(v36 + 32) = v37;
  *(_QWORD *)(v37 + 48) = v122;
  v38 = v121[1];
  *(_OWORD *)(v37 + 16) = v121[0];
  *(_OWORD *)(v37 + 32) = v38;
  v39 = *(_QWORD *)(v20 + 16);
  v40 = MEMORY[0x1E0DEE9D8];
  v98 = v21;
  v103 = v19;
  if (v39)
  {
    *(_QWORD *)&v111 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC79E1C(0, v39, 0);
    v40 = v111;
    v41 = type metadata accessor for FormatInspectionItem.Value(0);
    v101 = *(void (**)(_QWORD *, _QWORD, uint64_t, _QWORD *))(*(_QWORD *)(v41 - 8) + 56);
    v102 = (_QWORD *)v41;
    v100 = v34 + 2;
    v42 = (uint64_t *)(v20 + 56);
    do
    {
      v106 = v39;
      v43 = *(v42 - 3);
      v44 = *(v42 - 2);
      v45 = *v42;
      v46 = v108;
      v47 = v34;
      v48 = (_QWORD *)((char *)v34 + *((int *)v108 + 6));
      *v48 = *(v42 - 1);
      v48[1] = v45;
      v49 = v102;
      swift_storeEnumTagMultiPayload();
      v101(v48, 0, 1, v49);
      *v47 = v43;
      v47[1] = v44;
      v50 = v100;
      *v100 = 0;
      v50[1] = 0;
      v51 = (char *)v47 + *((int *)v46 + 7);
      *(_QWORD *)v51 = 0;
      *((_QWORD *)v51 + 1) = 0;
      v51[16] = -1;
      ((void (*)(_QWORD *, _QWORD, uint64_t, char *))v107)(v47, 0, 1, v46);
      *(_QWORD *)&v111 = v40;
      v53 = *(_QWORD *)(v40 + 16);
      v52 = *(_QWORD *)(v40 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53 >= v52 >> 1)
      {
        sub_1BAC79E1C(v52 > 1, v53 + 1, 1);
        v40 = v111;
      }
      v42 += 4;
      *(_QWORD *)(v40 + 16) = v53 + 1;
      sub_1BA5193C4((uint64_t)v47, v40 + v109 + v53 * v110, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v39 = v106 - 1;
      v34 = v47;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
    v19 = v103;
    v21 = v98;
  }
  sub_1BAF89090(0x6574656D61726150, 0xEA00000000007372, 0, 0, v40, v123);
  swift_bridgeObjectRelease();
  v54 = inited;
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v54 + 104) = &off_1E72D2F60;
  v55 = swift_allocObject();
  *(_QWORD *)(v54 + 72) = v55;
  *(_QWORD *)(v55 + 48) = v124;
  v56 = v123[1];
  *(_OWORD *)(v55 + 16) = v123[0];
  *(_OWORD *)(v55 + 32) = v56;
  v57 = *(_QWORD *)(v21 + 16);
  v58 = MEMORY[0x1E0DEE9D8];
  v59 = (uint64_t *)v105;
  if (v57)
  {
    *(_QWORD *)&v111 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC79E1C(0, v57, 0);
    v60 = v21 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
    v61 = *(_QWORD *)(v91 + 72);
    v62 = v92;
    do
    {
      v63 = v104;
      sub_1BA4C2DD8(v60, v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BA4C2DD8(v63, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BB0798DC(v62, v59);
      ((void (*)(uint64_t *, _QWORD, uint64_t, char *))v107)(v59, 0, 1, v108);
      sub_1BA4A2E80(v63, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v58 = v111;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E1C(0, *(_QWORD *)(v58 + 16) + 1, 1);
        v58 = v111;
      }
      v65 = *(_QWORD *)(v58 + 16);
      v64 = *(_QWORD *)(v58 + 24);
      if (v65 >= v64 >> 1)
      {
        sub_1BAC79E1C(v64 > 1, v65 + 1, 1);
        v58 = v111;
      }
      *(_QWORD *)(v58 + 16) = v65 + 1;
      v59 = (uint64_t *)v105;
      sub_1BA5193C4(v105, v58 + v109 + v65 * v110, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v60 += v61;
      --v57;
    }
    while (v57);
    swift_bridgeObjectRelease();
  }
  sub_1BAF89090(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v58, v125);
  swift_bridgeObjectRelease();
  v66 = inited;
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v66 + 144) = &off_1E72D2F60;
  v67 = swift_allocObject();
  *(_QWORD *)(v66 + 112) = v67;
  *(_QWORD *)(v67 + 48) = v126;
  v68 = v125[1];
  *(_OWORD *)(v67 + 16) = v125[0];
  *(_OWORD *)(v67 + 32) = v68;
  v69 = *(_QWORD *)(v19 + 16);
  v70 = MEMORY[0x1E0DEE9D8];
  v71 = v96;
  if (v69)
  {
    *(_QWORD *)&v111 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC79E1C(0, v69, 0);
    v70 = v111;
    result = (_QWORD *)sub_1BA580CE4(v19);
    v73 = (int64_t)result;
    v104 = v19 + 56;
    v75 = v74 & 1;
    v102 = v71 + 2;
    while ((v73 & 0x8000000000000000) == 0 && v73 < 1 << *(_BYTE *)(v19 + 32))
    {
      if (((*(_QWORD *)(v104 + (((unint64_t)v73 >> 3) & 0xFFFFFFFFFFFFF8)) >> v73) & 1) == 0)
        goto LABEL_32;
      if (*(_DWORD *)(v19 + 36) != (_DWORD)v72)
        goto LABEL_33;
      LODWORD(v105) = v75;
      v106 = v72;
      v76 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 16 * v73);
      v77 = *v76;
      v78 = v76[1];
      v79 = v108;
      v80 = (_QWORD *)((char *)v71 + *((int *)v108 + 6));
      *v80 = 0;
      v80[1] = 0xE000000000000000;
      v81 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v80, 0, 1, v81);
      *v71 = v77;
      v71[1] = v78;
      v82 = v102;
      *v102 = 0;
      v82[1] = 0;
      v83 = (char *)v71 + *((int *)v79 + 7);
      *(_QWORD *)v83 = 0;
      *((_QWORD *)v83 + 1) = 0;
      v83[16] = -1;
      ((void (*)(_QWORD *, _QWORD, uint64_t, char *))v107)(v71, 0, 1, v79);
      *(_QWORD *)&v111 = v70;
      v85 = *(_QWORD *)(v70 + 16);
      v84 = *(_QWORD *)(v70 + 24);
      swift_bridgeObjectRetain();
      if (v85 >= v84 >> 1)
      {
        sub_1BAC79E1C(v84 > 1, v85 + 1, 1);
        v70 = v111;
      }
      *(_QWORD *)(v70 + 16) = v85 + 1;
      sub_1BA5193C4((uint64_t)v71, v70 + v109 + v85 * v110, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v19 = v103;
      result = (_QWORD *)sub_1BA57FFE8(v73, v106, v105 & 1, v103);
      v73 = (int64_t)result;
      v75 = v86 & 1;
      if (!--v69)
      {
        sub_1BA8CA884((uint64_t)result, v72, v75);
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  else
  {
LABEL_30:
    v87 = (_QWORD *)inited;
    sub_1BAF89090(0x726F7463656C6553, 0xE900000000000073, 0, 0, v70, &v111);
    swift_bridgeObjectRelease();
    v87[22] = &type metadata for FormatInspectionGroup;
    v87[23] = &off_1E72D2F60;
    v88 = swift_allocObject();
    v87[19] = v88;
    *(_QWORD *)(v88 + 48) = v113;
    v89 = v112;
    *(_OWORD *)(v88 + 16) = v111;
    *(_OWORD *)(v88 + 32) = v89;
    v90 = sub_1BB6DF010((uint64_t)v87);
    swift_setDeallocating();
    sub_1BA89EA04(0);
    swift_arrayDestroy();
    sub_1BA993900(v94, v95);
    return v90;
  }
  return result;
}

uint64_t sub_1BB0FE158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  if (!*(_QWORD *)(a4 + 8))
  {
    if (!a5)
      goto LABEL_5;
    goto LABEL_3;
  }
  v12 = 14906;
  v14 = 0xE200000000000000;
  sub_1BB872AFC((_QWORD *)0x3A3A);
  if (a5)
  {
LABEL_3:
    v6 = objc_msgSend(a5, sel_identifier, v12, v14);
    sub_1BB8729A0();

    sub_1BB872AFC((_QWORD *)0x3A3A);
    swift_bridgeObjectRelease();
  }
LABEL_5:
  v13 = sub_1BB86C538();
  sub_1BB872AFC(v7);
  sub_1BB872AFC(v8);
  sub_1BB872AFC(v9);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v10);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1BB0FE294()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1BB0FE2DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB0FE310(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for SportsConfigResourceParameter);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BB0FE358()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t static FormatArraySubscript.== infix(_:_:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  if (*a1 != *a2)
    return 0;
  type metadata accessor for FormatArraySubscript(0, a3, a4, a4);
  return sub_1BB872958() & 1;
}

uint64_t type metadata accessor for FormatArraySubscript(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatArraySubscript);
}

uint64_t sub_1BB0FE404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v7;

  *a5 = a1;
  v7 = (char *)a5 + *(int *)(type metadata accessor for FormatArraySubscript(0, a3, a4, a4) + 36);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v7, a2, a3);
}

uint64_t FormatArraySubscript.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FormatArraySubscript.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

void sub_1BB0FE480(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  FormatArraySubscript.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_1BB0FE49C(uint64_t a1, uint64_t a2)
{
  FormatArraySubscript.encode(to:)(a1, a2);
}

uint64_t FormatArrayIndex.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

BOOL static FormatArrayIndex.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BB0FE4CC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB0FE4F8(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>);
  a1[2] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, a2);
  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, a2);
  a1[3] = result;
  return result;
}

unint64_t sub_1BB0FE550(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB0FE574();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB0FE574()
{
  unint64_t result;

  result = qword_1EF2BB618;
  if (!qword_1EF2BB618)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArrayIndex, &type metadata for FormatArrayIndex);
    atomic_store(result, (unint64_t *)&qword_1EF2BB618);
  }
  return result;
}

unint64_t sub_1BB0FE5B8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEB2C44();
  a1[2] = sub_1BAEED2F8();
  result = sub_1BB0FE5EC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB0FE5EC()
{
  unint64_t result;

  result = qword_1EF2BB620[0];
  if (!qword_1EF2BB620[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArrayIndex, &type metadata for FormatArrayIndex);
    atomic_store(result, qword_1EF2BB620);
  }
  return result;
}

uint64_t sub_1BB0FE630@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatArrayIndex.init(from:)(a1, a2);
}

uint64_t sub_1BB0FE644(_QWORD *a1)
{
  return FormatArrayIndex.encode(to:)(a1);
}

uint64_t sub_1BB0FE658(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return static FormatArraySubscript.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1BB0FE664()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BB0FE6E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 8) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 8) & ~v5, ((unint64_t)a2 + v5 + 8) & ~v5);
  }
  return v3;
}

uint64_t sub_1BB0FE784(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1BB0FE7A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_1BB0FE7F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_1BB0FE844(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_1BB0FE894(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1BB0FE8E4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = ((v6 + 8) & ~v6) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v6 + 8) & ~v6);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB0FE9A4 + 4 * byte_1BB8EBBF0[(v8 - 1)]))();
}

void sub_1BB0FEA04(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((v8 + 8) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, ((v8 + 8) & ~v8) + *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

ValueMetadata *type metadata accessor for FormatArrayIndex()
{
  return &type metadata for FormatArrayIndex;
}

uint64_t dispatch thunk of PuzzleStatsStateStoreType.puzzleStatsState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleStatsStateStoreType.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleStatsStateStoreType.update(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1BB0FEBF8()
{
  return sub_1BB86E344();
}

uint64_t FormatInjuryReportDataVisualization.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatInjuryReportDataVisualization.properties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatInjuryReportDataVisualization.eventIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatInjuryReportDataVisualization.tagIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatInjuryReportDataVisualization.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatInjuryReportDataVisualization.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatInjuryReportDataVisualization.properties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatInjuryReportDataVisualization.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *FormatInjuryReportDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  swift_beginAccess();
  v12[6] = a5;
  swift_beginAccess();
  v12[7] = a6;
  return v12;
}

_QWORD *FormatInjuryReportDataVisualization.init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  swift_beginAccess();
  v6[6] = a5;
  swift_beginAccess();
  v6[7] = a6;
  return v6;
}

uint64_t sub_1BB0FEEE8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB0FEF24 + 4 * byte_1BB8EBE20[*v0]))(0x656449746E657665, 0xEF7265696669746ELL);
}

uint64_t sub_1BB0FEF24()
{
  return 0x746E656449676174;
}

uint64_t sub_1BB0FEF48()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BB0FEF64()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BB0FEF80()
{
  sub_1BB0FF2E0();
  return sub_1BB874710();
}

uint64_t sub_1BB0FEFA8()
{
  sub_1BB0FF2E0();
  return sub_1BB87471C();
}

uint64_t FormatInjuryReportDataVisualization.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatInjuryReportDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatInjuryReportDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v14[4];
  _QWORD *v15;
  char v16;
  char v17;

  v3 = v1;
  sub_1BB0FF80C(0, &qword_1EF2BB6A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0FF2E0();
  sub_1BB8746C8();
  v16 = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v16 = 1;
    sub_1BB87417C();
    swift_beginAccess();
    v11 = *(_QWORD *)(v3 + 48);
    if (*(_QWORD *)(v11 + 16))
    {
      v17 = 2;
      swift_bridgeObjectRetain_n();
      v12 = sub_1BA67F4CC(v11);
      swift_bridgeObjectRelease();
      v15 = v12;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v15);
      swift_release();
      v14[1] = v15;
      sub_1BB0FF7B4();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v13 = *(_QWORD *)(v3 + 56);
    if (*(_QWORD *)(v13 + 16))
    {
      v17 = 3;
      v15 = (_QWORD *)v13;
      sub_1BB0FF7B4();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA89BC1C();
      sub_1BB874464();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB0FF2E0()
{
  unint64_t result;

  result = qword_1EF2BB6B0;
  if (!qword_1EF2BB6B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EBFEC, &type metadata for FormatInjuryReportDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB6B0);
  }
  return result;
}

uint64_t FormatInjuryReportDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatInjuryReportDataVisualization.init(from:)(a1);
  return v2;
}

_QWORD *FormatInjuryReportDataVisualization.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v38 = *v1;
  sub_1BA89B794();
  v34 = v3;
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v36 = v5;
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0FF80C(0, &qword_1EF2BB6C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v29 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0FF2E0();
  v13 = v37;
  v14 = v1;
  sub_1BB87468C();
  if (v13)
  {
    swift_deallocPartialClassInstance();
    v18 = (uint64_t)a1;
  }
  else
  {
    v15 = v7;
    v16 = v36;
    v37 = a1;
    v44 = 0;
    v1[2] = sub_1BB874098();
    v1[3] = v17;
    v43 = 1;
    v1[4] = sub_1BB874098();
    v1[5] = v20;
    v30 = v1;
    v42 = 2;
    v21 = sub_1BB8740F8();
    v31 = v12;
    if ((v21 & 1) != 0)
    {
      v39 = 2;
      sub_1BA50AD30(&qword_1ED3BBE20, 255, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
      sub_1BB8740D4();
      v22 = v9;
      v23 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v16);
    }
    else
    {
      v22 = v9;
      v23 = MEMORY[0x1E0DEE9E8];
    }
    v14 = v30;
    v30[6] = v23;
    v41 = 3;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v40 = 3;
      sub_1BA50AD30(&qword_1ED39EDD8, 255, (uint64_t (*)(uint64_t))sub_1BA89B794, MEMORY[0x1E0DB3610]);
      v24 = v34;
      v25 = v35;
      sub_1BB8740D4();
      v26 = v22;
      v27 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v24);
    }
    else
    {
      v27 = MEMORY[0x1E0DEE9D8];
      v26 = v22;
    }
    v28 = (uint64_t)v37;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v26);
    v14[7] = v27;
    v18 = v28;
  }
  __swift_destroy_boxed_opaque_existential_1(v18);
  return v14;
}

_QWORD *sub_1BB0FF734@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatInjuryReportDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB0FF788(_QWORD *a1)
{
  return FormatInjuryReportDataVisualization.encode(to:)(a1);
}

uint64_t sub_1BB0FF7A8(_QWORD **a1, _QWORD **a2)
{
  return static FormatInjuryReportDataVisualization.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1BB0FF7B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BB6B8;
  if (!qword_1EF2BB6B8)
  {
    sub_1BB0FF80C(255, &qword_1EF2BB6A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BB6B8);
  }
  return result;
}

void sub_1BB0FF80C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB0FF2E0();
    v7 = a3(a1, &type metadata for FormatInjuryReportDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB0FF868(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1EF2B1C20, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatInjuryReportDataVisualization, (uint64_t)&protocol conformance descriptor for FormatInjuryReportDataVisualization);
  a1[2] = sub_1BA50AD30(&qword_1EF2B1C60, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatInjuryReportDataVisualization, (uint64_t)&protocol conformance descriptor for FormatInjuryReportDataVisualization);
  result = sub_1BA50AD30(&qword_1EF2BB6C8, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatInjuryReportDataVisualization, (uint64_t)&protocol conformance descriptor for FormatInjuryReportDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatInjuryReportDataVisualization()
{
  return objc_opt_self();
}

uint64_t sub_1BB0FF900@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB0FF94C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatInjuryReportDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatInjuryReportDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatInjuryReportDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t storeEnumTagSinglePayload for FormatInjuryReportDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB0FFA10 + 4 * byte_1BB8EBE29[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB0FFA44 + 4 * byte_1BB8EBE24[v4]))();
}

uint64_t sub_1BB0FFA44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0FFA4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0FFA54);
  return result;
}

uint64_t sub_1BB0FFA60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0FFA68);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB0FFA6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0FFA74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatInjuryReportDataVisualization.CodingKeys()
{
  return &type metadata for FormatInjuryReportDataVisualization.CodingKeys;
}

unint64_t sub_1BB0FFA94()
{
  unint64_t result;

  result = qword_1EF2BB790;
  if (!qword_1EF2BB790)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EBFC4, &type metadata for FormatInjuryReportDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB790);
  }
  return result;
}

unint64_t sub_1BB0FFADC()
{
  unint64_t result;

  result = qword_1EF2BB798;
  if (!qword_1EF2BB798)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EBF34, &type metadata for FormatInjuryReportDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB798);
  }
  return result;
}

unint64_t sub_1BB0FFB24()
{
  unint64_t result;

  result = qword_1EF2BB7A0;
  if (!qword_1EF2BB7A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EBF5C, &type metadata for FormatInjuryReportDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB7A0);
  }
  return result;
}

void sub_1BB0FFB68()
{
  qword_1ED4763F0 = 0x406E000000000000;
}

uint64_t LayeredMediaLayerRenderer.shouldShow(_:for:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  double v4;
  uint64_t *v5;
  uint64_t v6;
  BOOL v7;
  char *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double *v19;
  uint64_t v20;
  _BYTE *v21;
  char v23;
  __int128 v24[8];
  _BYTE v25[128];

  sub_1BA8FB30C(a1, (uint64_t)v24);
  v4 = *(double *)(a2 + 16);
  v5 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  sub_1BA8FB30C(v24, (uint64_t)v25);
  LODWORD(a2) = sub_1BA8FB348((uint64_t)v25);
  v6 = sub_1BA8FB354((uint64_t)v25);
  v7 = (_DWORD)a2 == 1;
  v8 = (char *)(v6 + 16);
  v9 = (uint64_t *)(v6 + 48);
  v10 = (uint64_t *)(v6 + 56);
  v11 = (uint64_t *)(v6 + 64);
  v12 = (uint64_t *)(v6 + 72);
  v13 = (double *)(v6 + 8);
  if ((_DWORD)a2 == 1)
  {
    v13 = (double *)(v6 + 16);
    v8 = (char *)(v6 + 24);
  }
  else
  {
    v12 = (uint64_t *)(v6 + 64);
    v11 = (uint64_t *)(v6 + 56);
    v10 = (uint64_t *)(v6 + 48);
    v9 = (uint64_t *)(v6 + 40);
  }
  v14 = *v12;
  v15 = *v11;
  v16 = *v10;
  v17 = *v9;
  v18 = *v8;
  if (v7)
    v19 = (double *)(v6 + 32);
  else
    v19 = (double *)(v6 + 24);
  v20 = *v5;
  if (v7)
    v21 = (_BYTE *)(v6 + 40);
  else
    v21 = (_BYTE *)(v6 + 32);
  if ((v18 & 1) == 0 && *v13 > v4 || (*v21 & 1) == 0 && v4 > *v19)
    return 0;
  if (v16)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_1BB5C94D4(v17, v16, v20) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (v14)
  {
    v23 = sub_1BB5C9614(v15, v14, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
      return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 1;
}

uint64_t LayeredMediaLayerRenderer.offscreenRender(_:on:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  int v5;
  id *v6;
  unint64_t *v7;
  unint64_t *v8;
  unint64_t *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  id v19;
  id v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _OWORD v31[10];
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  _OWORD v36[4];
  _OWORD v37[2];
  _BYTE v38[144];
  _BYTE v39[144];

  sub_1BA8FB494(a2, (uint64_t)v38);
  v4 = *(_OWORD *)(a3 + 16);
  v31[9] = *(_OWORD *)a3;
  v32 = v4;
  v33 = *(_QWORD *)(a3 + 32);
  sub_1BA8FB494((uint64_t)v38, (uint64_t)v39);
  v5 = sub_1BB101970((uint64_t)v39);
  v6 = (id *)sub_1BB10197C((uint64_t)v39);
  if (v5 == 1)
  {
    v7 = (unint64_t *)&unk_1ED3AC180;
    v8 = &qword_1ED39C3A8;
    v9 = (unint64_t *)&qword_1ED39DA68;
  }
  else
  {
    v7 = (unint64_t *)&unk_1EF2BB7A8;
    v8 = &qword_1ED39C3A0;
    v9 = &qword_1ED39DA58;
  }
  sub_1BB1019E4(v7, v8, v9);
  v10 = *v6;
  objc_msgSend(v10, sel_setFrame_, 0.0, 0.0, v32);

  sub_1BA8FB494((uint64_t)v38, (uint64_t)v31);
  LODWORD(v10) = sub_1BB101970((uint64_t)v31);
  v11 = sub_1BB10197C((uint64_t)v31);
  v12 = *(void **)v11;
  v13 = *(void **)(v11 + 8);
  if ((_DWORD)v10 == 1)
  {
    v15 = *(_OWORD *)(v11 + 16);
    v14 = *(_OWORD *)(v11 + 32);
    v16 = *(_OWORD *)(v11 + 64);
    v36[0] = *(_OWORD *)(v11 + 48);
    v36[1] = v16;
    v17 = *(_OWORD *)(v11 + 80);
    v18 = *(_OWORD *)(v11 + 112);
    v36[3] = *(_OWORD *)(v11 + 96);
    v37[0] = v18;
    *(_OWORD *)((char *)v37 + 9) = *(_OWORD *)(v11 + 121);
    v36[2] = v17;
    v34 = v15;
    v35 = v14;
  }
  else
  {
    v21 = *(_QWORD *)(v11 + 24);
    v22 = *(_BYTE *)(v11 + 32);
    v23 = *(_QWORD *)(v11 + 40);
    v24 = *(_BYTE *)(v11 + 48);
    v25 = *(_QWORD *)(v11 + 104);
    v26 = *(_BYTE *)(v11 + 112);
    v27 = *(_QWORD *)(v11 + 120);
    v28 = *(_BYTE *)(v11 + 128);
    *(_QWORD *)&v34 = *(_QWORD *)(v11 + 16);
    *((_QWORD *)&v34 + 1) = v21;
    LOBYTE(v35) = v22;
    *((_QWORD *)&v35 + 1) = v23;
    LOBYTE(v36[0]) = v24;
    *(_OWORD *)((char *)v36 + 8) = *(_OWORD *)(v11 + 56);
    *(_OWORD *)((char *)&v36[1] + 8) = *(_OWORD *)(v11 + 72);
    *(_OWORD *)((char *)&v36[2] + 8) = *(_OWORD *)(v11 + 88);
    *((_QWORD *)&v36[3] + 1) = v25;
    LOBYTE(v37[0]) = v26;
    *((_QWORD *)&v37[0] + 1) = v27;
    LOBYTE(v37[1]) = v28;
  }
  MEMORY[0x1E0C80A78](v11);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v19 = v12;
  v20 = v13;
  v29 = sub_1BB86EA58();

  return v29;
}

uint64_t LayeredMediaLayerRenderer.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return v0;
}

uint64_t LayeredMediaLayerRenderer.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return swift_deallocClassInstance();
}

void sub_1BB100038(void (*a1)(id), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  _BYTE *v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  id v30;
  void (*v31)(id);
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v17 = *(_QWORD *)a6;
  v18 = *(_OWORD *)(a7 + 16);
  v33 = *(_OWORD *)a7;
  v34 = v18;
  v35 = *(_QWORD *)(a7 + 32);
  swift_retain();
  v19 = sub_1BB100360(v17, (double *)&v33);
  if (v19)
  {
    v20 = v19;
    v31 = a1;
    objc_msgSend(a8, sel_setContentsGravity_, *MEMORY[0x1E0CD2F78]);
    objc_msgSend(a8, sel_setContentsScale_, *(double *)(a7 + 32));
    v21 = (_QWORD *)(a5 + 136);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a5 + 136), *(_QWORD *)(a5 + 160));
    *((_QWORD *)&v34 + 1) = type metadata accessor for LayeredMediaLayerProcessorRequest();
    v35 = sub_1BA4A2870(&qword_1ED3AC568, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaLayerProcessorRequest, (uint64_t)&protocol conformance descriptor for LayeredMediaLayerProcessorRequest);
    *(_QWORD *)&v33 = v20;
    swift_retain();
    v22 = (void *)sub_1BB86F904();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
    if (v22)
    {
      swift_release();
      v31(objc_msgSend(a8, sel_setImage_, v22));

    }
    else
    {
      v27 = qword_1ED39EA60;
      swift_retain();
      if (v27 != -1)
        swift_once();
      v28 = (void *)qword_1ED476408;
      v29 = (_QWORD *)swift_allocObject();
      v29[2] = a8;
      v29[3] = sub_1BA4D7948;
      v29[4] = v16;
      v29[5] = a3;
      v29[6] = a4;
      v30 = a8;
      swift_retain();
      sub_1BB101C14(v21, v20, v28, (uint64_t)sub_1BB101A9C, (uint64_t)v29, v30);
      swift_release();
      swift_release();
    }
    sub_1BB1020D4(*(_QWORD *)(a6 + 88), *(_BYTE *)(a6 + 96) & 1, *(_QWORD *)(a6 + 104), *(_BYTE *)(a6 + 112), a7, a9);
    swift_release();
  }
  else
  {
    swift_release();
    if (qword_1ED39E0B0 != -1)
      swift_once();
    v23 = (id)qword_1ED4763D0;
    v24 = sub_1BB8732F4();
    sub_1BB86EF44("Failed to find image variant for image layer", 44, 2, &dword_1BA493000, v23, v24, MEMORY[0x1E0DEE9D8]);

    sub_1BB101A54();
    v25 = (void *)swift_allocError();
    *v26 = 1;
    a3();

  }
}

uint64_t sub_1BB100360(uint64_t a1, double *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  double v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD v22[5];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39D320, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaImageVariant, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22[-1] - v6;
  v8 = type metadata accessor for LayeredMediaImageVariant();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (void **)((char *)&v22[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *a2;
  v13 = *((_QWORD *)a2 + 1);
  v14 = a2[2];
  v15 = a2[3];
  v16 = a2[4];
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 80));
  *(double *)v22 = v12;
  v22[1] = v13;
  *(double *)&v22[2] = v14;
  *(double *)&v22[3] = v15;
  *(double *)&v22[4] = v16;
  sub_1BB14A8E0(a1, (uint64_t)v22, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1ED39D320, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaImageVariant);
    return 0;
  }
  else
  {
    sub_1BAA9E444((uint64_t)v7, (uint64_t)v11);
    v18 = *v11;
    type metadata accessor for LayeredMediaLayerProcessorRequest();
    v19 = swift_allocObject();
    v17 = sub_1BB101D94(v18, v19, v14, v15, v16);
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for LayeredMediaImageVariant);
  }
  return v17;
}

void sub_1BB100504(uint64_t a1, id a2, void (*a3)(id), uint64_t a4, void (*a5)(void))
{
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  _BYTE *v12;

  v8 = objc_msgSend(a2, sel_setImage_, a1);
  if (a1)
  {
    a3(v8);
  }
  else
  {
    if (qword_1ED39E0B0 != -1)
      swift_once();
    v9 = (id)qword_1ED4763D0;
    v10 = sub_1BB8732F4();
    sub_1BB86EF44("Failed to load image for layer", 30, 2, &dword_1BA493000, v9, v10, MEMORY[0x1E0DEE9D8]);

    sub_1BB101A54();
    v11 = (void *)swift_allocError();
    *v12 = 2;
    a5();

  }
}

void sub_1BB100614(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t *a6, double *a7, NSObject *a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  NSObject *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  NSObject *v38;
  NSObject *v39;
  NSObject *v40;
  void *v41;
  NSObject *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  id v47;
  uint64_t v48;
  void *v49;
  _BYTE *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  id v56;
  id v57;
  _QWORD *v58;
  void *v59;
  id v60;
  id v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  NSObject *v67;
  NSObject *v68;
  uint64_t v69;
  void (*v70)(void);
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  _QWORD *v74;
  NSObject *v75;
  NSObject *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(void);
  uint64_t v80;
  id v81;
  uint64_t *v82;
  NSObject *v83;
  uint64_t v84;
  uint64_t v85;
  double *v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  double v90[5];
  void *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;

  v83 = a8;
  v85 = a5;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39D320, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaImageVariant, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v77 - v16;
  v84 = type metadata accessor for LayeredMediaImageVariant();
  v18 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  v22 = *a6;
  swift_retain();
  v86 = a7;
  sub_1BB552250(v22, a7, v90);
  sub_1BB101F84((uint64_t)v90, (uint64_t)&v91);
  v23 = v91;
  if (!v91)
  {
    swift_release();
    if (qword_1ED39E0B0 != -1)
      swift_once();
    v30 = (id)qword_1ED4763D0;
    v31 = sub_1BB8732F4();
    sub_1BB86EF44("Failed to find video variant for video layer", 44, 2, &dword_1BA493000, v30, v31, MEMORY[0x1E0DEE9D8]);

    sub_1BB101A54();
    v32 = (void *)swift_allocError();
    *v33 = 1;
    a3();
    goto LABEL_18;
  }
  v78 = v21;
  v82 = a6;
  v77 = v20;
  v80 = a4;
  v94 = v92;
  v95 = v93;
  v24 = dispatch_group_create();
  dispatch_group_enter(v24);
  v25 = objc_msgSend(v23, sel_filePath);
  v79 = a3;
  if (v25)
  {
    v26 = v25;
    v27 = sub_1BB8729A0();
    v29 = v28;

    *(_QWORD *)&v87 = v27;
    *((_QWORD *)&v87 + 1) = v29;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED39C340, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1BB86E9E0();
  }
  else
  {
    MEMORY[0x1E0C80A78](0);
    *(&v77 - 2) = (char *)v23;
    sub_1BA4AD288(v34, (unint64_t *)&qword_1ED39C340, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1BB86EA58();
  }
  v35 = (uint64_t)v86;
  v96 = v95;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = v23;
  v37 = v95;
  *(_OWORD *)(v36 + 24) = v94;
  *(_OWORD *)(v36 + 40) = v37;
  v38 = v83;
  *(_QWORD *)(v36 + 56) = v83;
  *(_QWORD *)(v36 + 64) = v24;
  v81 = v23;
  sub_1BA739BF4((uint64_t)&v96);
  v39 = v38;
  v40 = v24;
  v41 = (void *)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();
  swift_release();

  *(_QWORD *)(swift_allocObject() + 16) = v40;
  v42 = v40;
  v43 = (void *)sub_1BB86E854();
  sub_1BB86E9A4();
  swift_release();
  swift_release();
  swift_release();

  v44 = v85;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v85 + 56), *(_QWORD *)(v85 + 80));
  v45 = v82[1];
  v46 = *(_OWORD *)(v35 + 16);
  v87 = *(_OWORD *)v35;
  v88 = v46;
  v89 = *(_QWORD *)(v35 + 32);
  sub_1BB14A8E0(v45, (uint64_t)&v87, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v84) == 1)
  {
    swift_release();
    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED39D320, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaImageVariant);
    if (qword_1ED39E0B0 != -1)
      swift_once();
    v47 = (id)qword_1ED4763D0;
    v48 = sub_1BB8732F4();
    sub_1BB86EF44("Failed to find still image variant for video layer", 50, 2, &dword_1BA493000, v47, v48, MEMORY[0x1E0DEE9D8]);

    sub_1BB101A54();
    v49 = (void *)swift_allocError();
    *v50 = 1;
    v79();

    sub_1BA73D624((uint64_t)&v96);
    return;
  }
  v51 = (uint64_t)v77;
  sub_1BAA9E444((uint64_t)v17, (uint64_t)v77);
  sub_1BA4B07F0(0, &qword_1ED39DC90, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaImageVariant, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v52 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1BB87CE70;
  sub_1BB10205C(v51, v53 + v52);
  v54 = *(_OWORD *)(v35 + 16);
  v87 = *(_OWORD *)v35;
  v88 = v54;
  v89 = *(_QWORD *)(v35 + 32);
  v55 = sub_1BB100360(v53, (double *)&v87);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (!v55)
  {
    swift_release();
    if (qword_1ED39E0B0 != -1)
      swift_once();
    v61 = (id)qword_1ED4763D0;
    v62 = sub_1BB8732F4();
    sub_1BB86EF44("Failed to find still image variant for video layer", 50, 2, &dword_1BA493000, v61, v62, MEMORY[0x1E0DEE9D8]);

    sub_1BB101A54();
    v32 = (void *)swift_allocError();
    *v63 = 1;
    v79();

    sub_1BA73D624((uint64_t)&v96);
    sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))type metadata accessor for LayeredMediaImageVariant);
LABEL_18:

    return;
  }
  v84 = a9;
  v56 = -[NSObject stillImageLayer](v39, sel_stillImageLayer);
  objc_msgSend(v56, sel_setContentsGravity_, *MEMORY[0x1E0CD2F78]);

  v57 = -[NSObject stillImageLayer](v39, sel_stillImageLayer);
  objc_msgSend(v57, sel_setContentsScale_, *(double *)(v35 + 32));

  -[NSObject setVideoGravity:](v39, sel_setVideoGravity_, *MEMORY[0x1E0C8A6E0]);
  v58 = (_QWORD *)(v44 + 136);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v44 + 136), *(_QWORD *)(v44 + 160));
  *((_QWORD *)&v88 + 1) = type metadata accessor for LayeredMediaLayerProcessorRequest();
  v89 = sub_1BA4A2870(&qword_1ED3AC568, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaLayerProcessorRequest, (uint64_t)&protocol conformance descriptor for LayeredMediaLayerProcessorRequest);
  *(_QWORD *)&v87 = v55;
  swift_retain();
  v59 = (void *)sub_1BB86F904();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  v83 = v42;
  if (v59)
  {
    v60 = -[NSObject stillImageLayer](v39, sel_stillImageLayer);
    objc_msgSend(v60, sel_setImage_, v59);

  }
  else
  {
    dispatch_group_enter(v42);
    v60 = -[NSObject stillImageLayer](v39, sel_stillImageLayer);
    v64 = qword_1ED39EA60;
    swift_retain();
    if (v64 != -1)
      swift_once();
    v65 = (void *)qword_1ED476408;
    v66 = swift_allocObject();
    *(_QWORD *)(v66 + 16) = v39;
    *(_QWORD *)(v66 + 24) = v42;
    v67 = v39;
    v68 = v42;
    sub_1BB101C14(v58, v55, v65, (uint64_t)sub_1BB1020CC, v66, v60);
    swift_release();
    swift_release();
  }
  v69 = v80;
  v70 = v79;
  v71 = (uint64_t)v77;
  v72 = v82;
  v73 = v78;

  sub_1BB1020D4(v72[12], v72[13] & 1, v72[14], *((_BYTE *)v72 + 120), (uint64_t)v86, v84);
  if (qword_1ED39EA60 != -1)
    swift_once();
  v74 = (_QWORD *)swift_allocObject();
  v74[2] = v39;
  v74[3] = sub_1BAEFCC00;
  v74[4] = v73;
  v74[5] = v70;
  v74[6] = v69;
  v75 = v39;
  swift_retain();
  v76 = v83;
  sub_1BB8733FC();

  swift_release();
  swift_release();
  sub_1BA73D624((uint64_t)&v96);
  sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))type metadata accessor for LayeredMediaImageVariant);
}

uint64_t sub_1BB101030(uint64_t a1, uint64_t a2, void *a3, NSObject *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  void *v24;
  void *v25;
  unsigned int v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v43)(void);
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t (*v50)(uint64_t);
  id v51;
  void *v52;
  id v53;
  void (*v54)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  dispatch_group_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64[2];

  v59 = a4;
  v62 = a3;
  v64[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BA842538();
  v5 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v57 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v56 - v11;
  MEMORY[0x1E0C80A78](v13);
  v61 = (uint64_t)&v56 - v14;
  v15 = sub_1BB86C67C();
  v63 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v56 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v56 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v56 - v21;
  sub_1BB86C550();
  sub_1BB86C5C8();
  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v58 = v22;
  v24 = (void *)sub_1BB86C58C();
  v25 = (void *)sub_1BB86C58C();
  v64[0] = 0;
  v26 = objc_msgSend(v23, sel_linkItemAtURL_toURL_error_, v24, v25, v64);

  if (v26)
  {
    v27 = v64[0];
  }
  else
  {
    v28 = v64[0];
    v29 = (void *)sub_1BB86C484();

    swift_willThrow();
    v60 = 0;
  }
  v30 = objc_msgSend(v62, sel_player);
  v31 = v63;
  if (!v30)
  {
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
    v38 = v61;
    v39(v61, 1, 1, v15);
    goto LABEL_13;
  }
  v32 = v30;
  v33 = objc_msgSend(v30, sel_currentItem);
  if (!v33)
    goto LABEL_11;
  v34 = v33;
  v35 = objc_msgSend(v33, sel_asset);

  if (!v35)
    goto LABEL_11;
  objc_opt_self();
  v36 = (void *)swift_dynamicCastObjCClass();
  if (!v36)
  {

LABEL_11:
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
    v38 = v61;
    v39(v61, 1, 1, v15);
    goto LABEL_12;
  }
  v37 = objc_msgSend(v36, sel_URL);

  v38 = v61;
  sub_1BB86C5EC();

  v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
  v39(v38, 0, 1, v15);
LABEL_12:

LABEL_13:
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v12, v19, v15);
  v39((uint64_t)v12, 0, 1, v15);
  v40 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_1BA7E8428(v38, (uint64_t)v7);
  sub_1BA7E8428((uint64_t)v12, v40);
  v41 = v38;
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  if (v42((uint64_t)v7, 1, v15) != 1)
  {
    v45 = v57;
    sub_1BA7E8428((uint64_t)v7, v57);
    if (v42(v40, 1, v15) != 1)
    {
      v47 = v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v56, v40, v15);
      sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v48 = sub_1BB872958();
      v49 = *(void (**)(char *, uint64_t))(v31 + 8);
      v49(v47, v15);
      v50 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      sub_1BA5C699C(v61, (unint64_t *)&qword_1ED3D2E70, v50);
      v49((char *)v45, v15);
      v31 = v63;
      sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1ED3D2E70, v50);
      if ((v48 & 1) != 0)
        goto LABEL_21;
LABEL_20:
      v51 = objc_allocWithZone(MEMORY[0x1E0C8B2E8]);
      v52 = (void *)sub_1BB86C58C();
      v53 = objc_msgSend(v51, sel_initWithURL_, v52);

      objc_msgSend(v53, sel_setPreventsDisplaySleepDuringVideoPlayback_, 0);
      objc_msgSend(v53, sel_setMuted_, 1);
      objc_msgSend(v62, sel_setPlayer_, v53);

      goto LABEL_21;
    }
    v46 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BA5C699C(v61, (unint64_t *)&qword_1ED3D2E70, v46);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v45, v15);
LABEL_18:
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA842538);
    goto LABEL_20;
  }
  v43 = MEMORY[0x1E0CAFFF8];
  sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v44 = (uint64_t (*)(uint64_t))v43;
  v31 = v63;
  sub_1BA5C699C(v41, (unint64_t *)&qword_1ED3D2E70, v44);
  if (v42(v40, 1, v15) != 1)
    goto LABEL_18;
  sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
LABEL_21:
  dispatch_group_leave(v59);
  v54 = *(void (**)(char *, uint64_t))(v31 + 8);
  v54(v19, v15);
  return ((uint64_t (*)(char *, uint64_t))v54)(v58, v15);
}

void sub_1BB10164C(uint64_t a1, id a2, NSObject *a3)
{
  id v5;

  v5 = objc_msgSend(a2, sel_stillImageLayer);
  objc_msgSend(v5, sel_setImage_, a1);

  dispatch_group_leave(a3);
}

void sub_1BB1016AC(void *a1, void (*a2)(void), uint64_t a3, void (*a4)(void))
{
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  _BYTE *v13;

  v7 = objc_msgSend(a1, sel_stillImageLayer);
  v8 = objc_msgSend(v7, sel_image);

  if (v8 && (v9 = objc_msgSend(a1, sel_player), v9, v9))
  {
    a2();
  }
  else
  {
    if (qword_1ED39E0B0 != -1)
      swift_once();
    v10 = (id)qword_1ED4763D0;
    v11 = sub_1BB8732F4();
    sub_1BB86EF44("Failed to load video layer", 26, 2, &dword_1BA493000, v10, v11, MEMORY[0x1E0DEE9D8]);

    sub_1BB101A54();
    v12 = (void *)swift_allocError();
    *v13 = 3;
    a4();

  }
}

uint64_t sub_1BB10180C@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  double *v16;
  uint64_t v17;
  void (*v18)(uint64_t *, _QWORD, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v10 = sub_1BB86FC10();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1BB86FC1C();
  result = swift_allocBox();
  if (a2 < 0.0 || a3 < 0.0)
  {
    __break(1u);
  }
  else
  {
    v17 = result;
    *v16 = -a2;
    v16[1] = a2;
    v16[2] = -a3;
    v16[3] = a3;
    v16[4] = a4;
    (*(void (**)(double *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x1E0DB7948], v14);
    *v13 = v17;
    v18 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104);
    v18(v13, *MEMORY[0x1E0DB7910], v10);
    if (a5 >= 0.0)
    {
      v19 = swift_allocBox();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v11 + 32))(v20, v13, v10);
      *a1 = v19;
      return ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v18)(a1, *MEMORY[0x1E0DB7908], v10);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 32))(a1, v13, v10);
    }
  }
  return result;
}

uint64_t sub_1BB101970(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 136) >> 7;
}

uint64_t sub_1BB10197C(uint64_t result)
{
  *(_BYTE *)(result + 136) &= ~0x80u;
  return result;
}

void sub_1BB10198C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_1BB100614(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(uint64_t **)(v4 + 24), *(double **)(v4 + 32), *(NSObject **)(v4 + 40), *(_QWORD *)(v4 + 48));
}

void sub_1BB1019B8(void (*a1)(id), uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_1BB100038(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(void **)(v4 + 40), *(_QWORD *)(v4 + 48));
}

uint64_t sub_1BB1019E4(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA8FB4D0(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6AD0], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for LayeredMediaLayerRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB101A30()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BB101A54()
{
  unint64_t result;

  result = qword_1EF2BB7B0;
  if (!qword_1EF2BB7B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC110, &type metadata for LayeredMediaLayerRenderer.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2BB7B0);
  }
  return result;
}

void sub_1BB101A9C(uint64_t a1)
{
  uint64_t v1;

  sub_1BB100504(a1, *(id *)(v1 + 16), *(void (**)(id))(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

uint64_t sub_1BB101AAC(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  __int128 v17[2];
  _QWORD v18[5];

  v18[3] = sub_1BB8704BC();
  v18[4] = MEMORY[0x1E0DB91C0];
  v18[0] = a2;
  swift_retain();
  sub_1BB870B40();
  v12 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(a6, sel_setIdentifier_, v12);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BA4C010C((uint64_t)v18, (uint64_t)v17);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = v13;
  sub_1BA4CECCC(v17, (uint64_t)(v14 + 4));
  v14[9] = a4;
  v14[10] = a5;
  v15 = a3;
  swift_retain();
  swift_retain();
  sub_1BB86F8EC();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t sub_1BB101C14(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  __int128 v17[2];
  _QWORD v18[5];

  v18[3] = type metadata accessor for LayeredMediaLayerProcessorRequest();
  v18[4] = sub_1BA4A2870(&qword_1ED3AC568, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaLayerProcessorRequest, (uint64_t)&protocol conformance descriptor for LayeredMediaLayerProcessorRequest);
  v18[0] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(a6, sel_setIdentifier_, v12);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BA4C010C((uint64_t)v18, (uint64_t)v17);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = v13;
  sub_1BA4CECCC(v17, (uint64_t)(v14 + 4));
  v14[9] = a4;
  v14[10] = a5;
  v15 = a3;
  swift_retain();
  swift_retain();
  sub_1BB86F8EC();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t sub_1BB101D94(void *a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t inited;
  id v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD v17[5];

  v17[3] = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97A0);
  v17[4] = sub_1BA7499C0();
  v17[0] = a1;
  sub_1BA4C010C((uint64_t)v17, a2 + 64);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FB8, (uint64_t (*)(uint64_t))sub_1BA81E240, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0x616D497265766F63;
  *(_QWORD *)(inited + 40) = 0xEF726579614C6567;
  sub_1BA4C010C((uint64_t)v17, inited + 48);
  *(_QWORD *)(a2 + 56) = sub_1BA739C1C(inited);
  *(double *)(a2 + 32) = a3;
  *(double *)(a2 + 40) = a4;
  *(double *)(a2 + 48) = a5;
  v11 = objc_msgSend(a1, sel_uniqueKey);
  sub_1BB8729A0();

  sub_1BB872AFC(v12);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v13);
  type metadata accessor for CGSize(0);
  sub_1BB873E34();
  sub_1BB872AFC(v14);
  sub_1BB872FDC();
  sub_1BB872AFC(v15);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0xE000000000000000;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return a2;
}

uint64_t sub_1BB101F58()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB101F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED39D380, (uint64_t)&type metadata for LayeredMediaVideoVariant, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB101FE0()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB10201C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB101030(a1, v1 + 16, *(void **)(v1 + 56), *(NSObject **)(v1 + 64));
}

uint64_t sub_1BB102038()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB10205C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LayeredMediaImageVariant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB1020A0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BB1020CC(uint64_t a1)
{
  uint64_t v1;

  sub_1BB10164C(a1, *(id *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_1BB1020D4(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, _QWORD, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a6;
  v11 = sub_1BB870870();
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (double *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1BB86FC10();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (uint64_t *)((char *)&v33 - v19);
  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) == 0)
    {
      v24 = *(double *)&a3 / 100.0 + 1.0;
      v25 = swift_allocBox();
      v27 = v26;
      v28 = sub_1BB86FC1C();
      v29 = swift_allocBox();
      *(_OWORD *)v30 = 0u;
      *(_OWORD *)(v30 + 16) = 0u;
      *(double *)(v30 + 32) = v24;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x1E0DB7948], v28);
      *v27 = v29;
      v31 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104);
      v31(v27, *MEMORY[0x1E0DB7910], v14);
      *v20 = v25;
      v31(v20, *MEMORY[0x1E0DB7908], v14);
      sub_1BB86F580();
      *v13 = v24;
      (*(void (**)(double *, _QWORD, uint64_t))(v34 + 104))(v13, *MEMORY[0x1E0DB9C70], v35);
      sub_1BB86F58C();
    }
  }
  else
  {
    v21 = fabs(*(double *)&a1) / 100.0;
    v22 = *(double *)&a3 / 100.0 + *(double *)&a3 / 100.0;
    if ((a4 & 1) != 0)
      v22 = v21;
    v23 = v22 + 1.0;
    sub_1BB10180C((uint64_t *)((char *)&v33 - v19), v21 * *(double *)(a5 + 16), v21 * *(double *)(a5 + 24), v22 + 1.0, *(double *)&a1);
    (*(void (**)(char *, uint64_t *, uint64_t))(v15 + 16))(v17, v20, v14);
    sub_1BB86F580();
    *v13 = v23;
    (*(void (**)(double *, _QWORD, uint64_t))(v34 + 104))(v13, *MEMORY[0x1E0DB9C70], v35);
    sub_1BB86F58C();
    (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v20, v14);
  }
  if (qword_1ED39E1B0 != -1)
    swift_once();
  return sub_1BB86F568();
}

void sub_1BB102390()
{
  uint64_t v0;

  sub_1BB1016AC(*(void **)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(void))(v0 + 40));
}

uint64_t objectdestroy_8Tm_3()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for LayeredMediaLayerRenderer.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB10242C + 4 * byte_1BB8EC045[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB102460 + 4 * byte_1BB8EC040[v4]))();
}

uint64_t sub_1BB102460(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB102468(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB102470);
  return result;
}

uint64_t sub_1BB10247C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB102484);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB102488(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB102490(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaLayerRenderer.Errors()
{
  return &type metadata for LayeredMediaLayerRenderer.Errors;
}

unint64_t sub_1BB1024B0()
{
  unint64_t result;

  result = qword_1EF2BB7B8;
  if (!qword_1EF2BB7B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC0E8, &type metadata for LayeredMediaLayerRenderer.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2BB7B8);
  }
  return result;
}

id sub_1BB1024F8()
{
  _QWORD *v0;
  id v1;
  uint64_t inited;
  void **v3;
  void *v4;
  void *v5;
  double v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(id *__return_ptr, uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v25[2];

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v1, sel_setMinimumLineHeight_, 20.0);
  objc_msgSend(v1, sel_setAlignment_, 1);
  objc_msgSend(v1, sel_setLineBreakMode_, 0);
  sub_1BA847C08();
  inited = swift_initStackObject();
  v3 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v4 = *v3;
  *(_QWORD *)(inited + 32) = *v3;
  v5 = (void *)objc_opt_self();
  v6 = *MEMORY[0x1E0DC1448];
  swift_bridgeObjectRetain();
  v7 = v4;
  v8 = objc_msgSend(v5, sel_systemFontOfSize_weight_, 17.0, v6);
  v9 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v8;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = v0[5];
  v12 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v11);
  v13 = *(void (**)(id *__return_ptr, uint64_t, uint64_t))(v12 + 64);
  v14 = v10;
  v13(v25, v11, v12);
  v15 = v25[1];

  v16 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v15;
  v17 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 112) = v17;
  *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v1;
  v18 = v17;
  v19 = v1;
  sub_1BA76E82C(inited);
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v21 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v22 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  return v23;
}

id sub_1BB102768()
{
  _QWORD *v0;
  id v1;
  uint64_t inited;
  void **v3;
  void *v4;
  void *v5;
  double v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *__return_ptr, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  _QWORD v25[2];

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v1, sel_setMinimumLineHeight_, 20.0);
  objc_msgSend(v1, sel_setAlignment_, 1);
  objc_msgSend(v1, sel_setLineBreakMode_, 0);
  sub_1BA847C08();
  inited = swift_initStackObject();
  v3 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v4 = *v3;
  *(_QWORD *)(inited + 32) = *v3;
  v5 = (void *)objc_opt_self();
  v6 = *MEMORY[0x1E0DC1448];
  swift_bridgeObjectRetain();
  v7 = v4;
  v8 = objc_msgSend(v5, sel_systemFontOfSize_weight_, 17.0, v6);
  v9 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v8;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = v0[5];
  v12 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v11);
  v13 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 64);
  v14 = v10;
  v13(v25, v11, v12);
  v15 = v25[0];

  v16 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v15;
  v17 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 112) = v17;
  *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v1;
  v18 = v17;
  v19 = v1;
  sub_1BA76E82C(inited);
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v21 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v22 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  return v23;
}

_OWORD *FormatMotion.TranslateWithScale.init(translate:scale:)@<X0>(_OWORD *result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  __int128 v3;

  v3 = result[1];
  *(_OWORD *)a2 = *result;
  *(_OWORD *)(a2 + 16) = v3;
  *(double *)(a2 + 32) = a3;
  return result;
}

uint64_t sub_1BB1029EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMotion.TranslateWithScale.init(from:)(a1, a2);
}

uint64_t sub_1BB102A00(_QWORD *a1)
{
  return FormatMotion.TranslateWithScale.encode(to:)(a1);
}

uint64_t sub_1BB102A18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMotion.init(from:)(a1, a2);
}

void sub_1BB102A2C(_QWORD *a1)
{
  FormatMotion.encode(to:)(a1);
}

void FormatMotion.transform.getter()
{
  __asm { BR              X14 }
}

uint64_t sub_1BB102A78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *v1 = v0;
  v2 = *MEMORY[0x1E0DB7950];
  v3 = sub_1BB86FC1C();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
}

uint64_t _s8NewsFeed12FormatMotionO2eeoiySbAC_ACtFZ_0(__n128 *a1, __n128 *a2)
{
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, double))((char *)sub_1BB102BE0
                                                                         + 4 * byte_1BB8EC1B0[a1[2].n128_u8[8]]))(*a1, *a2, a1[1], a2[1], a2[2].n128_f64[0]);
}

BOOL sub_1BB102BE0@<W0>(int a1@<W8>, double a2@<D0>, double a3@<D1>)
{
  return !a1 && a2 == a3;
}

unint64_t sub_1BB102CB4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB102CD8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB102CD8()
{
  unint64_t result;

  result = qword_1EF2BB7C0;
  if (!qword_1EF2BB7C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMotion.TranslateWithScale, &type metadata for FormatMotion.TranslateWithScale);
    atomic_store(result, (unint64_t *)&qword_1EF2BB7C0);
  }
  return result;
}

uint64_t sub_1BB102D1C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEA6CFC, (uint64_t (*)(void))sub_1BAEEF2F8, (uint64_t (*)(void))sub_1BB102D38);
}

unint64_t sub_1BB102D38()
{
  unint64_t result;

  result = qword_1EF2BB7C8;
  if (!qword_1EF2BB7C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMotion.TranslateWithScale, &type metadata for FormatMotion.TranslateWithScale);
    atomic_store(result, (unint64_t *)&qword_1EF2BB7C8);
  }
  return result;
}

unint64_t sub_1BB102D7C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB102DA0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB102DA0()
{
  unint64_t result;

  result = qword_1EF2BB7D0;
  if (!qword_1EF2BB7D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMotion, &type metadata for FormatMotion);
    atomic_store(result, (unint64_t *)&qword_1EF2BB7D0);
  }
  return result;
}

uint64_t sub_1BB102DE4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA58DEAC, (uint64_t (*)(void))sub_1BAEEC5E0, (uint64_t (*)(void))sub_1BB102E00);
}

unint64_t sub_1BB102E00()
{
  unint64_t result;

  result = qword_1EF2BB7D8;
  if (!qword_1EF2BB7D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMotion, &type metadata for FormatMotion);
    atomic_store(result, (unint64_t *)&qword_1EF2BB7D8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatMotion(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_1BB102E8C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_1BB102E94(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatMotion()
{
  return &type metadata for FormatMotion;
}

ValueMetadata *type metadata accessor for FormatMotion.TranslateWithScale()
{
  return &type metadata for FormatMotion.TranslateWithScale;
}

_QWORD *sub_1BB102EBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v14;
  __int128 v15;
  _QWORD *v16;
  _QWORD *result;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v45)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v46;
  _QWORD *v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  __int128 v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(unint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;

  v2 = *(_QWORD *)a1;
  v1 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  switch(*(_BYTE *)(a1 + 40))
  {
    case 0:
      v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v4);
      sub_1BA8C88C8(0);
      v7 = *(_QWORD *)(v6 - 8);
      v8 = *(_QWORD *)(v7 + 72);
      v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1BB87A390;
      v11 = (_QWORD *)(v10 + v9);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0x656C616353, 0xE500000000000000, v11);
      v12 = type metadata accessor for FormatInspectionItem(0);
      v13 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
      v13(v11, 0, 1, v12);
      sub_1BAAF9DE0(0x656C616353, 0xE500000000000000, v2, 0, (_QWORD *)((char *)v11 + v8));
      v13((_QWORD *)((char *)v11 + v8), 0, 1, v12);
      sub_1BAF89090(0x6E6F69746F4DLL, 0xE600000000000000, 0, 0, v10, &v83);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(inited + 64) = &off_1E72D2F60;
      v14 = swift_allocObject();
      *(_QWORD *)(inited + 32) = v14;
      *(_QWORD *)(v14 + 48) = v85;
      v15 = v84;
      *(_OWORD *)(v14 + 16) = v83;
      *(_OWORD *)(v14 + 32) = v15;
      v16 = sub_1BB6DF010(inited);
      swift_setDeallocating();
      sub_1BA89EA04(0);
      goto LABEL_13;
    case 1:
      v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v19 = v1;
      v20 = swift_initStackObject();
      *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v18);
      sub_1BA8C88C8(0);
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(_QWORD *)(v22 + 72);
      v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      v25 = 2 * v23;
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BB87FC80;
      v27 = (char *)(v26 + v24);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0x615220656C616353, 0xEB0000000065676ELL, v27);
      v28 = type metadata accessor for FormatInspectionItem(0);
      v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
      v29(v27, 0, 1, v28);
      v30 = &v27[v23];
      sub_1BAAF9DE0(0x6F42207265776F4CLL, 0xEB00000000646E75, v2, 0, v30);
      v29(v30, 0, 1, v28);
      v31 = &v27[v25];
      v32 = v31;
      v33 = v19;
      goto LABEL_9;
    case 2:
      v79 = *(_QWORD *)(a1 + 16);
      v34 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v35 = swift_initStackObject();
      *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v34);
      sub_1BA8C88C8(0);
      v37 = *(_QWORD *)(v36 - 8);
      v38 = v2;
      v39 = *(_QWORD *)(v37 + 72);
      v40 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      v41 = 2 * v39;
      v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1BB87FC80;
      v43 = (_QWORD *)(v42 + v40);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0x725420656C616353, 0xEF6574616C736E61, v43);
      v44 = type metadata accessor for FormatInspectionItem(0);
      v45 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
      v45(v43, 0, 1, v44);
      v46 = (_QWORD *)((char *)v43 + v39);
      sub_1BAAFA010(88, 0xE100000000000000, v38, v1, 0, v46);
      v45(v46, 0, 1, v44);
      v47 = (_QWORD *)((char *)v43 + v41);
      sub_1BAAFA010(89, 0xE100000000000000, v79, v3, 0, v47);
      v45(v47, 0, 1, v44);
      goto LABEL_7;
    case 3:
      v80 = *(_QWORD *)(a1 + 16);
      v48 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v35 = swift_initStackObject();
      *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v48);
      sub_1BA8C88C8(0);
      v50 = *(_QWORD *)(v49 - 8);
      v51 = *(_QWORD *)(v50 + 72);
      v52 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
      v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1BB87FC80;
      v53 = (_QWORD *)(v42 + v52);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0x74616C736E617254, 0xE900000000000065, v53);
      v54 = type metadata accessor for FormatInspectionItem(0);
      v55 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56);
      v55(v53, 0, 1, v54);
      sub_1BAAFA010(88, 0xE100000000000000, v2, v1, 0, (_QWORD *)((char *)v53 + v51));
      v55((_QWORD *)((char *)v53 + v51), 0, 1, v54);
      sub_1BAAFA010(89, 0xE100000000000000, v80, v3, 0, (_QWORD *)((char *)v53 + 2 * v51));
      v55((_QWORD *)((char *)v53 + 2 * v51), 0, 1, v54);
LABEL_7:
      sub_1BAF89090(0x6E6F69746F4DLL, 0xE600000000000000, 0, 0, v42, &v83);
      swift_setDeallocating();
      goto LABEL_11;
    case 4:
      v56 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v81 = v1;
      v20 = swift_initStackObject();
      *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v56);
      sub_1BA8C88C8(0);
      v58 = *(_QWORD *)(v57 - 8);
      v59 = *(_QWORD *)(v58 + 72);
      v60 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BB87FC80;
      v61 = (char *)(v26 + v60);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0x74616C736E617254, 0xEF65676E61522065, v61);
      v28 = type metadata accessor for FormatInspectionItem(0);
      v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
      v29(v61, 0, 1, v28);
      sub_1BAAF9DE0(0x6F42207265776F4CLL, 0xEB00000000646E75, v2, 0, &v61[v59]);
      v29(&v61[v59], 0, 1, v28);
      v31 = &v61[2 * v59];
      v32 = v31;
      v33 = v81;
LABEL_9:
      sub_1BAAF9DE0(0x6F42207265707055, 0xEB00000000646E75, v33, 0, v32);
      v29(v31, 0, 1, v28);
      sub_1BAF89090(0x6E6F69746F4DLL, 0xE600000000000000, 0, 0, v26, &v83);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(v20 + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(v20 + 64) = &off_1E72D2F60;
      v62 = swift_allocObject();
      *(_QWORD *)(v20 + 32) = v62;
      *(_QWORD *)(v62 + 48) = v85;
      v63 = v84;
      *(_OWORD *)(v62 + 16) = v83;
      *(_OWORD *)(v62 + 32) = v63;
      v16 = sub_1BB6DF010(v20);
      swift_setDeallocating();
      goto LABEL_12;
    case 5:
      v78 = *(_QWORD *)(a1 + 32);
      v82 = *(_QWORD *)(a1 + 16);
      v64 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v35 = swift_initStackObject();
      *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v64);
      sub_1BA8C88C8(0);
      v66 = *(_QWORD *)(v65 - 8);
      v67 = *(_QWORD *)(v66 + 72);
      v68 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
      v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_1BB87D7A0;
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0xD00000000000001ALL, 0x80000001BB97A370, (_QWORD *)(v69 + v68));
      v77 = v3;
      v70 = v1;
      v71 = v2;
      v72 = type metadata accessor for FormatInspectionItem(0);
      v73 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56);
      v73(v69 + v68, 0, 1, v72);
      sub_1BAAF9DE0(0x656C616353, 0xE500000000000000, v78, 0, (_QWORD *)(v69 + v68 + v67));
      v73(v69 + v68 + v67, 0, 1, v72);
      sub_1BAAFA010(88, 0xE100000000000000, v71, v70, 0, (_QWORD *)(v69 + v68 + 2 * v67));
      v73(v69 + v68 + 2 * v67, 0, 1, v72);
      v74 = (_QWORD *)(v69 + v68 + 3 * v67);
      sub_1BAAFA010(89, 0xE100000000000000, v82, v77, 0, v74);
      v73((unint64_t)v74, 0, 1, v72);
      sub_1BAF89090(0x6E6F69746F4DLL, 0xE600000000000000, 0, 0, v69, &v83);
      swift_setDeallocating();
LABEL_11:
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(v35 + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(v35 + 64) = &off_1E72D2F60;
      v75 = swift_allocObject();
      *(_QWORD *)(v35 + 32) = v75;
      *(_QWORD *)(v75 + 48) = v85;
      v76 = v84;
      *(_OWORD *)(v75 + 16) = v83;
      *(_OWORD *)(v75 + 32) = v76;
      v16 = sub_1BB6DF010(v35);
      swift_setDeallocating();
LABEL_12:
      sub_1BA89EA04(0);
LABEL_13:
      swift_arrayDestroy();
      result = v16;
      break;
    default:
      result = sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
      break;
  }
  return result;
}

uint64_t sub_1BB103A68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB103A9C(uint64_t a1, id a2)
{
  int v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 == 254)
  {
    v18 = objc_msgSend(a2, sel_layer);
    objc_msgSend(v18, sel_setShadowPath_, 0);
    objc_msgSend(v18, sel_setShadowRadius_, 0.0);
    objc_msgSend(v18, sel_setShadowOffset_, 0.0, 0.0);
    LODWORD(v4) = 0;
    objc_msgSend(v18, sel_setShadowOpacity_, v4);
    objc_msgSend(v18, sel_setShadowColor_, 0);

  }
  else
  {
    v5 = *(_QWORD *)(a1 + 56);
    v15 = *(_QWORD *)(a1 + 64);
    v16 = *(_QWORD *)(a1 + 72);
    v7 = *(_QWORD *)(a1 + 40);
    v6 = *(_QWORD *)(a1 + 48);
    v9 = *(_QWORD *)(a1 + 24);
    v8 = *(_QWORD *)(a1 + 32);
    v11 = *(_QWORD *)(a1 + 8);
    v10 = *(_QWORD *)(a1 + 16);
    v17 = v10;
    v12 = *(_QWORD *)a1;
    swift_retain();
    objc_msgSend(a2, sel_setClipsToBounds_, 0);
    v19 = v12;
    v20 = v11;
    v21 = v10;
    v22 = v9;
    v23 = v8;
    v24 = v7;
    v25 = v6;
    v26 = v5;
    v13 = v5;
    v27 = v15;
    v28 = v16;
    v29 = v3;
    v14 = objc_msgSend(a2, sel_layer);
    sub_1BA5A0518((uint64_t)&v19, a2, v14);

    sub_1BA6E8A78(v12, v11, v17, v9, v8, v7, v6, v13, v15, v16, v3);
  }
}

uint64_t FormatSponsoredBanner.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatSponsoredBanner.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_identifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBanner.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall FormatSponsoredBanner.loadingCoverDismissed()()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;

  v1 = objc_msgSend(v0, sel_subviews);
  sub_1BA81CF48();
  v2 = sub_1BB872DB4();

  if (v2 >> 62)
    goto LABEL_13;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1BB873F30())
  {
    v4 = 4;
    while (1)
    {
      v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCE4630](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      sub_1BB86EDF4();
      if (swift_dynamicCastClass())
      {
        swift_bridgeObjectRelease_n();
        v8 = v6;
        sub_1BB86EDE8();

        return;
      }

      ++v4;
      if (v7 == v3)
        goto LABEL_10;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
}

id FormatSponsoredBanner.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id FormatSponsoredBanner.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_identifier];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0xE000000000000000;
  v11 = &v4[OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_adIdentifier];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v13.receiver = v4;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
}

id FormatSponsoredBanner.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FormatSponsoredBanner.init(coder:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  char *v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_identifier];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0xE000000000000000;
  v5 = &v1[OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_adIdentifier];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

id FormatSponsoredBanner.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BB1041A8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FCFeedPersonalizationConfigurationSet.description.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = 0xD00000000000001DLL;
  switch(a1)
  {
    case 0:
      result = 0x746C7561666544;
      break;
    case 1:
      v3 = 0x206369706F54;
      goto LABEL_7;
    case 2:
      result = 0x656E697A6167614DLL;
      break;
    case 3:
      result = 0xD000000000000014;
      break;
    case 4:
    case 33:
      result = 0xD000000000000011;
      break;
    case 5:
      v3 = 0x206F69647541;
LABEL_7:
      result = v3 & 0xFFFFFFFFFFFFLL | 0x6546000000000000;
      break;
    case 6:
      return result;
    case 7:
      result = 0xD00000000000001FLL;
      break;
    case 10:
      result = 0x20666F2074736542;
      break;
    case 11:
      result = 0x756F5920726F46;
      break;
    case 12:
      result = 0xD000000000000018;
      break;
    case 14:
      result = 0x654E206C61636F4CLL;
      break;
    case 19:
      result = 0xD000000000000014;
      break;
    case 20:
      result = 0xD000000000000012;
      break;
    case 28:
      result = 0xD00000000000001CLL;
      break;
    case 32:
      result = 0x6553206C61636F4CLL;
      break;
    default:
      result = 0x6E776F6E6B6E55;
      break;
  }
  return result;
}

uint64_t sub_1BB1043D0()
{
  uint64_t *v0;

  return FCFeedPersonalizationConfigurationSet.description.getter(*v0);
}

uint64_t static FormatGroupBinding.Temperature.== infix(_:_:)(__int128 *a1)
{
  char v1;
  char v2;
  __int128 v4;
  char v5;

  v1 = *((_BYTE *)a1 + 16);
  v4 = *a1;
  v5 = v1;
  _s8NewsFeed20FormatWeatherBindingV11TemperatureO2eeoiySbAE_AEtFZ_0((uint64_t)&v4);
  return v2 & 1;
}

uint64_t sub_1BB104420@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.Temperature.init(from:)(a1, a2);
}

uint64_t sub_1BB104434(_QWORD *a1)
{
  return FormatGroupBinding.Temperature.encode(to:)(a1);
}

uint64_t sub_1BB104448(__int128 *a1)
{
  char v1;
  char v2;
  __int128 v4;
  char v5;

  v1 = *((_BYTE *)a1 + 16);
  v4 = *a1;
  v5 = v1;
  _s8NewsFeed20FormatWeatherBindingV11TemperatureO2eeoiySbAE_AEtFZ_0((uint64_t)&v4);
  return v2 & 1;
}

unint64_t sub_1BB104490(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1044B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1044B4()
{
  unint64_t result;

  result = qword_1EF2BB7F0;
  if (!qword_1EF2BB7F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Temperature, &type metadata for FormatGroupBinding.Temperature);
    atomic_store(result, (unint64_t *)&qword_1EF2BB7F0);
  }
  return result;
}

unint64_t sub_1BB1044F8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BB10452C();
  a1[2] = sub_1BB104570();
  result = sub_1BB1045B4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB10452C()
{
  unint64_t result;

  result = qword_1EF2BB7F8;
  if (!qword_1EF2BB7F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Temperature, &type metadata for FormatGroupBinding.Temperature);
    atomic_store(result, (unint64_t *)&qword_1EF2BB7F8);
  }
  return result;
}

unint64_t sub_1BB104570()
{
  unint64_t result;

  result = qword_1EF2BB800;
  if (!qword_1EF2BB800)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Temperature, &type metadata for FormatGroupBinding.Temperature);
    atomic_store(result, (unint64_t *)&qword_1EF2BB800);
  }
  return result;
}

unint64_t sub_1BB1045B4()
{
  unint64_t result;

  result = qword_1EF2BB808;
  if (!qword_1EF2BB808)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Temperature, &type metadata for FormatGroupBinding.Temperature);
    atomic_store(result, (unint64_t *)&qword_1EF2BB808);
  }
  return result;
}

uint64_t _s11TemperatureOwxx_0(uint64_t a1)
{
  return sub_1BB104624(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t sub_1BB104624(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return ((uint64_t (*)(void))((char *)sub_1BB104640 + 4 * byte_1BB8EC45C[(a3 >> 4) & 3]))();
}

uint64_t sub_1BB104640(uint64_t a1, uint64_t a2, int a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD))
{
  return a4(a1, a2, a3 & 0xFFFFFFCF);
}

uint64_t _s11TemperatureOwCP_0_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1BB104624(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11TemperatureOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1BB104624(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BB104624(v6, v7, v8);
  return a1;
}

uint64_t _s11TemperatureOwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BB104624(v4, v5, v6);
  return a1;
}

uint64_t _s11TemperatureOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1D && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 29);
  v3 = ((2 * *(unsigned __int8 *)(a1 + 16)) & 0x1C | (*(unsigned __int8 *)(a1 + 16) >> 4) & 3) ^ 0x1F;
  if (v3 >= 0x1C)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s11TemperatureOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1C)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 29;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x1D)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x1D)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * ((((-a2 >> 2) & 7) - 8 * a2) & 0x1F);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.Temperature()
{
  return &type metadata for FormatGroupBinding.Temperature;
}

ValueMetadata *type metadata accessor for A18_V1()
{
  return &type metadata for A18_V1;
}

uint64_t sub_1BB104810(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2BB938, (uint64_t (*)(void))sub_1BB106D20, (uint64_t)&type metadata for A18_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB106D20();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB1049C4()
{
  sub_1BB106D20();
  return sub_1BB874710();
}

uint64_t sub_1BB1049EC()
{
  sub_1BB106D20();
  return sub_1BB87471C();
}

double sub_1BB104A14@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB106B0C(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB104A58(_QWORD *a1)
{
  return sub_1BB104810(a1);
}

uint64_t sub_1BB104A6C()
{
  sub_1BB10688C();
  return sub_1BB86D96C();
}

uint64_t sub_1BB104AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  unsigned __int8 v74;
  ValueMetadata *v75;
  unint64_t v76;
  uint64_t v77;

  v62 = a2;
  v55 = a3;
  v56 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v61 = type metadata accessor for GroupLayoutBindingContext();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v66 = a1;
  sub_1BA4C2DD8(a1, v59, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v58 = sub_1BB86C8C8();
  v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v75 = &type metadata for A18_V1;
  v20 = sub_1BA8EE0D8();
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v67 = sub_1BB874734();
  v68 = v22;
  v71 = 95;
  v72 = 0xE100000000000000;
  v69 = 45;
  v70 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v57;
  *v26 = v58;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v73, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v59, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v28, 0, 1, v61);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v29, 0, 1, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  sub_1BA7C2538(v16, v17);
  v75 = &type metadata for A18_V1;
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  sub_1BA4C2DD8(v62, v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v65;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E7269DC0, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v31;
    v42 = (_QWORD *)(v41 + 16);
    swift_beginAccess();
    v43 = *(_QWORD **)(v41 + 16);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v41 + 16) = v43;
    if ((v44 & 1) == 0)
    {
      v43 = sub_1BA7892A0(0, v43[2] + 1, 1, v43);
      *v42 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
    {
      v43 = sub_1BA7892A0((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
      *v42 = v43;
    }
    v43[2] = v46 + 1;
    v47 = &v43[2 * v46];
    v47[4] = sub_1BACB8D7C;
    v47[5] = 0;
    swift_endAccess();
    v49 = sub_1BA7E1F18((uint64_t)&unk_1E7269DE8, 0, 0, v41, 0, 0, 0, 0);
    swift_release();
    v67 = v40;
    sub_1BA7DD6A0(v49);
    v50 = v67;
    v51 = type metadata accessor for A18_V1.Bound();
    v52 = v55;
    v55[3] = v51;
    v52[4] = sub_1BA4A2870(qword_1EF2BB820, (uint64_t (*)(uint64_t))type metadata accessor for A18_V1.Bound, (uint64_t)&unk_1BB8EC5F8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v73, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v77, (uint64_t)boxed_opaque_existential_0 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v51 + 28)) = v50;
  }
  return result;
}

double sub_1BB105108@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  double result;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _QWORD v38[6];
  char v39[105];
  __int128 v40[9];
  __int128 v41[2];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v36 = a1;
  v35 = sub_1BB86DA38();
  *(_QWORD *)&v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v5 = type metadata accessor for A18_V1.Bound();
  v6 = v1 + *(int *)(v5 + 24);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = *(int *)(v7 + 40);
  v9 = v6;
  v33[1] = v6;
  v10 = *(_QWORD *)(v6 + v8);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BA4C010C(v11 + 16, (uint64_t)&v42);
  sub_1BA4C010C(v11 + 56, (uint64_t)v41);
  v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v42, v14 + 16);
  sub_1BA4CECCC(v41, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v40[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v40, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v10 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v41);
  sub_1BA4C010C(v15 + 56, (uint64_t)v40);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v41, v17 + 16);
  sub_1BA4CECCC(v40, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v39[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v39, (uint64_t *)&v42);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  v18 = v33[0];
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v19 = sub_1BA6B5B08((uint64_t)&v42, *(_QWORD *)(*(_QWORD *)(v18 + *(int *)(v5 + 28)) + 16) - 1);
  *(_QWORD *)&v42 = inited;
  sub_1BA6B5BE8(v19);
  v20 = v42;
  v38[2] = v18;
  v21 = swift_bridgeObjectRetain();
  v22 = sub_1BACB8FF0(v21, v20, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = *MEMORY[0x1E0DB5D88];
  v24 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v3, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v3, *MEMORY[0x1E0DB6200], v35);
  v37 = v22;
  sub_1BB106930(0, &qword_1EF2BB8C8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v35 = sub_1BB86DB34();
  v25 = sub_1BB86DB40();
  v34 = v42;
  v26 = v43;
  v27 = v44;
  *(_QWORD *)&v42 = v22;
  *(_QWORD *)&v41[0] = v45;
  MEMORY[0x1E0C80A78](v25);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v28 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v42 = v28;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v29 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v36;
  *v36 = 0;
  result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((_QWORD *)v30 + 3) = v26;
  *((_QWORD *)v30 + 4) = v27;
  v32 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v30 + 5) = v29;
  *((_QWORD *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1BB1055E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1EF2BB8E0, (uint64_t (*)(void))sub_1BB106848, (uint64_t)&type metadata for A18_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 18;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BB106930(0, &qword_1EF2BB8E8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB1068F0(&qword_1EF2BB8F0, &qword_1EF2BB8E8, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB105740(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD);
  uint64_t v11;
  void (*v12)(uint64_t *);
  uint64_t (*v13)(uint64_t, _QWORD *);
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  void (*v31)(uint64_t, _QWORD, uint64_t);
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BB8E0, (uint64_t (*)(void))sub_1BB106848, (uint64_t)&type metadata for A18_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v29 - v6);
  v36 = a1;
  v8 = sub_1BB86D438();
  v9 = swift_allocBox();
  v10 = *(void (**)(_QWORD))(*(_QWORD *)(v8 - 8) + 104);
  v32 = *MEMORY[0x1E0DB5A38];
  v31 = (void (*)(uint64_t, _QWORD, uint64_t))v10;
  v10(v11);
  *v7 = v9;
  v12 = *(void (**)(uint64_t *))(v5 + 104);
  v30 = *MEMORY[0x1E0DB6318];
  v12(v7);
  v13 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB106930(0, &qword_1EF2BB8F8, MEMORY[0x1E0DB5A10]);
  sub_1BB1068F0(&qword_1EF2BB900, &qword_1EF2BB8F8, v13, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v14 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v14(v7, v4);
  v33 = a1;
  v36 = a1;
  sub_1BAA71EEC();
  v16 = v15;
  v17 = swift_allocBox();
  v19 = (char *)v18 + *(int *)(v16 + 48);
  *v18 = 11;
  v20 = *MEMORY[0x1E0DB61C8];
  v21 = sub_1BB86DA20();
  v22 = v20;
  v23 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v22, v21);
  *v7 = v17;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v12)(v7, *MEMORY[0x1E0DB6338], v4);
  v35 = v23;
  sub_1BB86D498();
  result = ((uint64_t (*)(uint64_t *, uint64_t))v14)(v7, v4);
  if (*(_QWORD *)(v23 + 16) >= 3uLL)
  {
    v25 = v33;
    v36 = v33;
    v26 = swift_allocBox();
    v31(v27, v32, v8);
    *v7 = v26;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v12)(v7, v30, v4);
    sub_1BB86D4EC();
    v14(v7, v4);
    v36 = v25;
    v28 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v12)(v7, *MEMORY[0x1E0DB6410], v4);
    MEMORY[0x1E0C80A78](v28);
    sub_1BB86D498();
    return ((uint64_t (*)(uint64_t *, uint64_t))v14)(v7, v4);
  }
  return result;
}

uint64_t sub_1BB105A60(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t (*v24)(uint64_t, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2BB8E0, (uint64_t (*)(void))sub_1BB106848, (uint64_t)&type metadata for A18_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - v14;
  v28 = a1;
  swift_getKeyPath();
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB6410], v12);
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v17 = (char *)v6 + v4[5];
    v27 = v12;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v26 = v13;
    v20 = v19;
    v21 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    v22 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 1;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v22;
    v23 = v22;
    sub_1BAB62528((uint64_t)v10, (uint64_t)v6);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v24 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB106930(0, &qword_1EF2BB8F8, MEMORY[0x1E0DB5A10]);
    sub_1BB1068F0(&qword_1EF2BB900, &qword_1EF2BB8F8, v24, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v15, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB105D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2BB8E0, (uint64_t (*)(void))sub_1BB106848, (uint64_t)&type metadata for A18_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 9;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB106930(0, &qword_1EF2BB8F8, MEMORY[0x1E0DB5A10]);
  sub_1BB1068F0(&qword_1EF2BB900, &qword_1EF2BB8F8, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 9;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BB105EFC(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2BB8E0, (uint64_t (*)(void))sub_1BB106848, (uint64_t)&type metadata for A18_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for HeadlineViewLayout.Context(0);
    v15 = a2
        + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72)
        + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80));
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB106930(0, &qword_1EF2BB8F8, MEMORY[0x1E0DB5A10]);
    sub_1BB1068F0(&qword_1EF2BB900, &qword_1EF2BB8F8, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1BB1061BC(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2BB8E0, (uint64_t (*)(void))sub_1BB106848, (uint64_t)&type metadata for A18_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for HeadlineViewLayout.Context(0);
    v15 = a2
        + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))
        + 2 * *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72);
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB106930(0, &qword_1EF2BB8F8, MEMORY[0x1E0DB5A10]);
    sub_1BB1068F0(&qword_1EF2BB900, &qword_1EF2BB8F8, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1BB10647C@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A18_V1.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB10655C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB104AD4(a1, a2, a3);
}

uint64_t sub_1BB106570()
{
  return sub_1BB690B24();
}

unint64_t sub_1BB106580(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB1065AC();
  result = sub_1BB1065F0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB1065AC()
{
  unint64_t result;

  result = qword_1EF2BB810;
  if (!qword_1EF2BB810)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC544, &type metadata for A18_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2BB810);
  }
  return result;
}

unint64_t sub_1BB1065F0()
{
  unint64_t result;

  result = qword_1EF2BB818;
  if (!qword_1EF2BB818)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC56C, &type metadata for A18_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2BB818);
  }
  return result;
}

uint64_t type metadata accessor for A18_V1.Bound()
{
  uint64_t result;

  result = qword_1EF2BB880;
  if (!qword_1EF2BB880)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB106670()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB10667C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB1066F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB106704(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB106778()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB106804(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2BB8C0, (uint64_t (*)(uint64_t))type metadata accessor for A18_V1.Bound, (uint64_t)&unk_1BB8EC5D0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB106840(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1055E8(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BB106848()
{
  unint64_t result;

  result = qword_1EF2BB8D0;
  if (!qword_1EF2BB8D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC728, &type metadata for A18_V1.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2BB8D0);
  }
  return result;
}

unint64_t sub_1BB10688C()
{
  unint64_t result;

  result = qword_1EF2BB8D8;
  if (!qword_1EF2BB8D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC6F8, &type metadata for A18_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BB8D8);
  }
  return result;
}

uint64_t sub_1BB1068D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB10647C(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB1068D8()
{
  return swift_deallocObject();
}

uint64_t sub_1BB1068E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB105740(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB1068F0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB106930(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB106930(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A18_V1.Layout;
    v8[1] = &type metadata for A18_V1.Layout.Attributes;
    v8[2] = sub_1BB106848();
    v8[3] = sub_1BB10688C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB1069AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB105A60(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB1069B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB105D14(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB1069BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB105EFC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB1069C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1061BC(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V1.Layout.Attributes()
{
  return &type metadata for A18_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V1.Layout()
{
  return &type metadata for A18_V1.Layout;
}

unint64_t sub_1BB1069F0()
{
  unint64_t result;

  result = qword_1EF2BB908;
  if (!qword_1EF2BB908)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC698, &type metadata for A18_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BB908);
  }
  return result;
}

unint64_t sub_1BB106A38()
{
  unint64_t result;

  result = qword_1EF2BB910;
  if (!qword_1EF2BB910)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC670, &type metadata for A18_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BB910);
  }
  return result;
}

unint64_t sub_1BB106A80()
{
  unint64_t result;

  result = qword_1EF2BB918;
  if (!qword_1EF2BB918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC648, &type metadata for A18_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BB918);
  }
  return result;
}

unint64_t sub_1BB106AC8()
{
  unint64_t result;

  result = qword_1EF2BB920;
  if (!qword_1EF2BB920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC6C0, &type metadata for A18_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BB920);
  }
  return result;
}

uint64_t sub_1BB106B0C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BB928, (uint64_t (*)(void))sub_1BB106D20, (uint64_t)&type metadata for A18_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB106D20();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB106D20()
{
  unint64_t result;

  result = qword_1EF2BB930;
  if (!qword_1EF2BB930)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC81C, &type metadata for A18_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB930);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A18_V1.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB106DB0 + 4 * byte_1BB8EC535[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB106DE4 + 4 * asc_1BB8EC530[v4]))();
}

uint64_t sub_1BB106DE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB106DEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB106DF4);
  return result;
}

uint64_t sub_1BB106E00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB106E08);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB106E0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB106E14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A18_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB106E34()
{
  unint64_t result;

  result = qword_1EF2BB940;
  if (!qword_1EF2BB940)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC7F4, &type metadata for A18_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB940);
  }
  return result;
}

unint64_t sub_1BB106E7C()
{
  unint64_t result;

  result = qword_1EF2BB948;
  if (!qword_1EF2BB948)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC764, &type metadata for A18_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB948);
  }
  return result;
}

unint64_t sub_1BB106EC4()
{
  unint64_t result;

  result = qword_1EF2BB950;
  if (!qword_1EF2BB950)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC78C, &type metadata for A18_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB950);
  }
  return result;
}

uint64_t sub_1BB106F08(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v1, 0);
    v4 = (_BYTE *)(a1 + 40);
    do
    {
      if (*v4 == 1)
      {
        v14 = *(_QWORD *)&asc_1BB8EC988[8 * (char)*((_QWORD *)v4 - 1)];
        v5 = MEMORY[0x1BCCE33A0](&v14, 1);
      }
      else
      {
        v14 = *((_QWORD *)v4 - 1);
        FormatFloat.description.getter();
      }
      v7 = v5;
      v8 = v6;
      v2 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v15;
      }
      v10 = *(_QWORD *)(v2 + 16);
      v9 = *(_QWORD *)(v2 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1BA7447E8(v9 > 1, v10 + 1, 1);
        v2 = v15;
      }
      *(_QWORD *)(v2 + 16) = v10 + 1;
      v11 = v2 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v8;
      v4 += 16;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  v15 = v2;
  sub_1BA6D249C();
  sub_1BA6A0BA4();
  v12 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BB107088(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v1, 0);
    v4 = (_BYTE *)(a1 + 49);
    do
    {
      v5 = *(_QWORD *)(v4 - 17);
      if ((*v4 & 1) != 0)
      {
        v19 = *(_QWORD *)&asc_1BB8EC988[8 * (char)v5];
        v6 = MEMORY[0x1BCCE33A0](&v19, 1);
        v8 = v7;
      }
      else
      {
        v9 = *(_QWORD *)(v4 - 9);
        v10 = *(v4 - 1);
        if ((v10 & 1) != 0)
        {
          v19 = 0x286E6F6974706FLL;
          v20 = 0xE700000000000000;
          sub_1BA69C808(v5, v9, 1);
          sub_1BB872AFC(v12);
          sub_1BB872AFC(v13);
          sub_1BA728F8C(v5, v9, v10, 0);
          v6 = v19;
          v8 = v20;
        }
        else
        {
          v19 = *(_QWORD *)(v4 - 17);
          v6 = sub_1BB87420C();
          v8 = v11;
          sub_1BA728F8C(v5, v9, v10, 0);
        }
      }
      v2 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v21;
      }
      v15 = *(_QWORD *)(v2 + 16);
      v14 = *(_QWORD *)(v2 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BA7447E8(v14 > 1, v15 + 1, 1);
        v2 = v21;
      }
      v4 += 24;
      *(_QWORD *)(v2 + 16) = v15 + 1;
      v16 = v2 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v6;
      *(_QWORD *)(v16 + 40) = v8;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  v19 = v2;
  sub_1BA6D249C();
  sub_1BA6A0BA4();
  v17 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t FormatPointEquation.description.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v0 = swift_bridgeObjectRetain();
  sub_1BB106F08(v0);
  sub_1BB872AFC(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v2);
  v3 = swift_bridgeObjectRetain();
  sub_1BB106F08(v3);
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v5);
  return 40;
}

uint64_t FormatPointEquation.x.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatPointEquation.y.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BB107370(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB107394();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB107394()
{
  unint64_t result;

  result = qword_1EF2BB958;
  if (!qword_1EF2BB958)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPointEquation, &type metadata for FormatPointEquation);
    atomic_store(result, (unint64_t *)&qword_1EF2BB958);
  }
  return result;
}

unint64_t sub_1BB1073D8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA599590();
  a1[2] = sub_1BA616A40();
  result = sub_1BB10740C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB10740C()
{
  unint64_t result;

  result = qword_1EF2BB960;
  if (!qword_1EF2BB960)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPointEquation, &type metadata for FormatPointEquation);
    atomic_store(result, (unint64_t *)&qword_1EF2BB960);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPointEquation()
{
  return &type metadata for FormatPointEquation;
}

BOOL static FormatSlotItemPuzzleStatisticTransform.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL8 result;

  v2 = *a1;
  v3 = *a2;
  result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2)
    return ((v3 ^ v2) & 1) == 0;
  return result;
}

unint64_t sub_1BB107494(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1074B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1074B8()
{
  unint64_t result;

  result = qword_1EF2BB968;
  if (!qword_1EF2BB968)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemPuzzleStatisticTransform, &type metadata for FormatSlotItemPuzzleStatisticTransform);
    atomic_store(result, (unint64_t *)&qword_1EF2BB968);
  }
  return result;
}

unint64_t sub_1BB1074FC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEBAB04();
  a1[2] = sub_1BAEEBF90();
  result = sub_1BB107530();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB107530()
{
  unint64_t result;

  result = qword_1EF2BB970;
  if (!qword_1EF2BB970)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemPuzzleStatisticTransform, &type metadata for FormatSlotItemPuzzleStatisticTransform);
    atomic_store(result, (unint64_t *)&qword_1EF2BB970);
  }
  return result;
}

uint64_t sub_1BB107574@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return FormatSlotItemPuzzleStatisticTransform.init(from:)(a1, a2);
}

uint64_t sub_1BB107588(_QWORD *a1)
{
  return FormatSlotItemPuzzleStatisticTransform.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for FormatSlotItemPuzzleStatisticTransform(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = v6 - 2;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BB1075EC + 4 * asc_1BB8EC9C0[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FormatSlotItemPuzzleStatisticTransform(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB107694 + 4 * byte_1BB8EC9CA[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB1076C8 + 4 * byte_1BB8EC9C5[v5]))();
}

uint64_t sub_1BB1076C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1076D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1076D8);
  return result;
}

uint64_t sub_1BB1076E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1076ECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB1076F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1076F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotItemPuzzleStatisticTransform()
{
  return &type metadata for FormatSlotItemPuzzleStatisticTransform;
}

uint64_t sub_1BB107714(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  _QWORD v54[12];
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;

  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1E0C80A78](v2);
  v57 = (char *)v54 - v3;
  sub_1BA4A3FB4(0, &qword_1ED3C2120, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v54[9] = (char *)v54 - v8;
  MEMORY[0x1E0C80A78](v9);
  v54[4] = (char *)v54 - v10;
  MEMORY[0x1E0C80A78](v11);
  v54[3] = (char *)v54 - v12;
  MEMORY[0x1E0C80A78](v13);
  v54[6] = (char *)v54 - v14;
  MEMORY[0x1E0C80A78](v15);
  v54[5] = (char *)v54 - v16;
  MEMORY[0x1E0C80A78](v17);
  v54[8] = (char *)v54 - v18;
  MEMORY[0x1E0C80A78](v19);
  v54[7] = (char *)v54 - v20;
  v55 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1E0C80A78](v55);
  v58 = (char *)v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v59 = (char *)v54 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v54 - v25;
  v63 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1E0C80A78](v63);
  v54[10] = (char *)v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v56 = (char *)v54 - v29;
  MEMORY[0x1E0C80A78](v30);
  v61 = (char *)v54 - v31;
  MEMORY[0x1E0C80A78](v32);
  v60 = (char *)v54 - v33;
  MEMORY[0x1E0C80A78](v34);
  v62 = (char *)v54 - v35;
  v67 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v67);
  v69 = (char *)v54 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v71);
  v38 = (char *)v54 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v66);
  v65 = (char *)v54 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v40);
  v68 = (char *)v54 - v41;
  v42 = type metadata accessor for FormatContentSlotItemResolution();
  v43 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v45 = (char *)v54 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)v54 - v47;
  v49 = MEMORY[0x1E0DEE9D8];
  v73 = MEMORY[0x1E0DEE9D8];
  v50 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v50)
  {
    v54[2] = v6;
    v51 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    v54[11] = a1;
    v70 = v51;
    v72 = v26;
    v64 = v45;
    sub_1BA4C2DD8(a1 + v51, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
    sub_1BA4C2DD8((uint64_t)v48, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    v52 = (char *)&loc_1BB107BAC + 4 * byte_1BB8EC9CF[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_1BB1082DC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  char v14;
  char v15;

  v13[0] = a4;
  v13[1] = a5;
  sub_1BB108864(0, &qword_1EF2BB988, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB108820();
  sub_1BB8746C8();
  v15 = 0;
  sub_1BB87417C();
  if (!v5)
  {
    v14 = 1;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BB10840C()
{
  _BYTE *v0;

  if (*v0)
    return 1701667182;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BB108444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB108A64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB108468()
{
  sub_1BB108820();
  return sub_1BB874710();
}

uint64_t sub_1BB108490()
{
  sub_1BB108820();
  return sub_1BB87471C();
}

uint64_t sub_1BB1084B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1BB10866C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1BB1084E4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BB1082DC(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1BB108500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C2450, (uint64_t (*)(uint64_t))sub_1BAA85C90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BAFD3CA0();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v11 + 32) = 0x696669746E656449;
  *(_QWORD *)(v11 + 40) = 0xEA00000000007265;
  v12 = MEMORY[0x1E0DEA968];
  v13 = MEMORY[0x1E0DEA9D8];
  *(_QWORD *)(v11 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 80) = v13;
  *(_QWORD *)(v11 + 48) = a1;
  *(_QWORD *)(v11 + 56) = a2;
  *(_BYTE *)(v11 + 88) = 0;
  *(_QWORD *)(v11 + 96) = 1701667150;
  *(_QWORD *)(v11 + 104) = 0xE400000000000000;
  *(_QWORD *)(v11 + 136) = v12;
  *(_QWORD *)(v11 + 144) = v13;
  *(_QWORD *)(v11 + 112) = a3;
  *(_QWORD *)(v11 + 120) = a4;
  *(_BYTE *)(v11 + 152) = 0;
  *(_QWORD *)(inited + 56) = &type metadata for DebugInspectionDataSection;
  *(_QWORD *)(inited + 64) = &off_1E728C9C8;
  *(_QWORD *)(inited + 32) = 0x7453656C7A7A7550;
  *(_QWORD *)(inited + 40) = 0xEF63697473697461;
  *(_QWORD *)(inited + 48) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1BAA85898(inited);
  a5[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a5[4] = (uint64_t)&off_1E728CA90;
  *a5 = result;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionPuzzleStatistic()
{
  return &type metadata for DebugInspectionPuzzleStatistic;
}

uint64_t sub_1BB10866C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1BB108864(0, &qword_1EF2BB978, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB108820();
  sub_1BB87468C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_1BB874098();
    v11 = 1;
    swift_bridgeObjectRetain();
    sub_1BB874098();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1BB108820()
{
  unint64_t result;

  result = qword_1EF2BB980;
  if (!qword_1EF2BB980)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ECC74, &type metadata for DebugInspectionPuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB980);
  }
  return result;
}

void sub_1BB108864(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB108820();
    v7 = a3(a1, &type metadata for DebugInspectionPuzzleStatistic.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for DebugInspectionPuzzleStatistic.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB10890C + 4 * byte_1BB8ECB35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB108940 + 4 * byte_1BB8ECB30[v4]))();
}

uint64_t sub_1BB108940(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB108948(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB108950);
  return result;
}

uint64_t sub_1BB10895C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB108964);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB108968(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB108970(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionPuzzleStatistic.CodingKeys()
{
  return &type metadata for DebugInspectionPuzzleStatistic.CodingKeys;
}

unint64_t sub_1BB108990()
{
  unint64_t result;

  result = qword_1EF2BB990;
  if (!qword_1EF2BB990)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ECC4C, &type metadata for DebugInspectionPuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB990);
  }
  return result;
}

unint64_t sub_1BB1089D8()
{
  unint64_t result;

  result = qword_1EF2BB998;
  if (!qword_1EF2BB998)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ECBBC, &type metadata for DebugInspectionPuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB998);
  }
  return result;
}

unint64_t sub_1BB108A20()
{
  unint64_t result;

  result = qword_1EF2BB9A0;
  if (!qword_1EF2BB9A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ECBE4, &type metadata for DebugInspectionPuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BB9A0);
  }
  return result;
}

uint64_t sub_1BB108A64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t FormatContentBackground.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BAA40194(v1 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content, a1);
}

uint64_t FormatContentBackground.__allocating_init(content:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BB108BD0(a1, v2 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content);
  return v2;
}

uint64_t FormatContentBackground.init(content:)(uint64_t a1)
{
  uint64_t v1;

  sub_1BB108BD0(a1, v1 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content);
  return v1;
}

uint64_t sub_1BB108BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatContentBackground.deinit()
{
  uint64_t v0;

  sub_1BB108C38(v0 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content);
  return v0;
}

uint64_t sub_1BB108C38(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatContentBackground.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BB108C38(v0 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB108CA4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB108D78(&qword_1EF2BB9A8, (uint64_t)&protocol conformance descriptor for FormatContentBackground);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatContentBackground()
{
  uint64_t result;

  result = qword_1ED3A70E0;
  if (!qword_1ED3A70E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB108D14(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB108D78(&qword_1EF2BB9B0, (uint64_t)&protocol conformance descriptor for FormatContentBackground);
  a1[2] = sub_1BB108D78(&qword_1EF2BB9B8, (uint64_t)&protocol conformance descriptor for FormatContentBackground);
  result = sub_1BB108D78(&qword_1EF2BB9C0, (uint64_t)&protocol conformance descriptor for FormatContentBackground);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB108D78(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatContentBackground();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB108DB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BAE8D7F4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB108DE0(_QWORD *a1)
{
  return FormatContentBackground.encode(to:)(a1);
}

uint64_t sub_1BB108E00(_QWORD *a1, _QWORD *a2)
{
  return static FormatContent.== infix(_:_:)(*a1 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content, *a2 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content);
}

uint64_t sub_1BB108E1C()
{
  return type metadata accessor for FormatContentBackground();
}

uint64_t sub_1BB108E24()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatContent(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FormatContentBackground()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatContentBackground.__allocating_init(content:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1BB108EA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t result;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_1BB86D93C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  v9 = *((unsigned __int8 *)v0 + 8);
  if ((_DWORD)v9 == 5)
  {
    v26 = *v0;
    swift_retain();
    sub_1BA742278();
    v11 = v10;
    result = swift_release();
    if (!v1)
    {
      sub_1BB86D750();
      sub_1BB86D930();
      if (byte_1EF3D0978 == 1)
      {
        v14 = v13;
        objc_msgSend(v11, sel_pointSize);
        v16 = round(v14 * (v15 * 4.0) * 0.25);
        if (byte_1EF3D0978)
          v15 = v16;
        v17 = objc_msgSend(v11, sel_fontWithSize_, v15);

        v11 = v17;
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v24 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v11);

      return (uint64_t)v24;
    }
  }
  else
  {
    v26 = *v0;
    swift_retain();
    sub_1BA742278();
    v19 = v18;
    result = swift_release();
    if (!v1)
    {
      sub_1BB86D750();
      sub_1BB86D930();
      if (byte_1EF3D0978 == 1)
      {
        v21 = v20;
        objc_msgSend(v19, sel_pointSize);
        v23 = round(v21 * (v22 * 4.0) * 0.25);
        if (byte_1EF3D0978)
          v22 = v23;
        objc_msgSend(v19, sel_fontWithSize_, v22);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        __asm { BR              X9 }
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      __asm { BR              X9 }
    }
  }
  return result;
}

id sub_1BB1091DC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  void *v36;
  id v37;
  double v38;
  double v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;

  v2 = sub_1BB86D93C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v41 - v8;
  v10 = *v0;
  v11 = *((_QWORD *)v0 + 1);
  v12 = v0[16];
  if (v11)
  {
    v42 = v7;
    v43 = v6;
    if ((_DWORD)v12 == 5)
    {
      LOBYTE(v44) = v10;
      v13 = sub_1BA74658C();
      v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, v13);

      sub_1BB86DD80();
      v15 = v44;
      v16 = sub_1BA72BED4((uint64_t)v44, v11);
      if (!v1)
      {
        v17 = v16;
        swift_release();
        objc_msgSend(v14, sel_scaledValueForValue_, v17);
        v19 = v18;

        LOBYTE(v44) = v10;
        v20 = sub_1BA74658C();
        v21 = (void *)objc_opt_self();
        v22 = objc_msgSend(v21, sel_configurationWithTextStyle_, v20);

        v23 = v22;
        sub_1BB86D750();
        sub_1BB86D930();
        v25 = round(v19 * 4.0 * v24 * 0.25);
        if (byte_1EF3D0978)
          v19 = v25;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v4, v43);
        v26 = objc_msgSend(v21, sel_configurationWithPointSize_, v19);
        v27 = objc_msgSend(v23, sel_configurationByApplyingConfiguration_, v26);
LABEL_16:
        v15 = v27;

        return v15;
      }
    }
    else
    {
      LOBYTE(v44) = v10;
      v30 = sub_1BA74658C();
      v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, v30);

      sub_1BB86DD80();
      v15 = v44;
      v31 = sub_1BA72BED4((uint64_t)v44, v11);
      if (!v1)
      {
        v32 = v31;
        swift_release();
        objc_msgSend(v14, sel_scaledValueForValue_, v32);
        v34 = v33;

        LOBYTE(v44) = v10;
        v35 = sub_1BA74658C();
        v36 = (void *)objc_opt_self();
        v37 = objc_msgSend(v36, sel_configurationWithTextStyle_scale_, v35, v12 - 1);

        v23 = v37;
        sub_1BB86D750();
        sub_1BB86D930();
        v39 = round(v34 * 4.0 * v38 * 0.25);
        if (byte_1EF3D0978)
          v34 = v39;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
        v26 = objc_msgSend(v36, sel_configurationWithPointSize_, v34);
        v27 = objc_msgSend(v23, sel_configurationByApplyingConfiguration_, v26);
        goto LABEL_16;
      }
    }

    swift_release();
  }
  else
  {
    LOBYTE(v44) = *v0;
    v28 = sub_1BA74658C();
    if ((_DWORD)v12 == 5)
      v29 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_, v28);
    else
      v29 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_scale_, v28, v12 - 1);
    v15 = v29;

  }
  return v15;
}

uint64_t sub_1BB109620@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSymbolConfig.Font.init(from:)(a1, a2);
}

uint64_t sub_1BB109634(_QWORD *a1)
{
  return FormatSymbolConfig.Font.encode(to:)(a1);
}

uint64_t sub_1BB109650@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSymbolConfig.TextStyle.init(from:)(a1, a2);
}

uint64_t sub_1BB109664(_QWORD *a1)
{
  return FormatSymbolConfig.TextStyle.encode(to:)(a1);
}

BOOL static FormatSymbolConfig.Weight.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v4;
  char v5;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  sub_1BB803130(*(_BYTE *)a1);
  if ((v4 & 1) == 0)
    return 0;
  if (v2 != 5)
  {
    if (v3 == 5)
      return 0;
    sub_1BB8033A8(v2);
    return (v5 & 1) != 0;
  }
  return v3 == 5;
}

uint64_t sub_1BB1096EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSymbolConfig.Weight.init(from:)(a1, a2);
}

uint64_t sub_1BB109700(_QWORD *a1)
{
  return FormatSymbolConfig.Weight.encode(to:)(a1);
}

BOOL sub_1BB109714(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v4;
  char v5;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  sub_1BB803130(*(_BYTE *)a1);
  if ((v4 & 1) == 0)
    return 0;
  if (v2 != 5)
  {
    if (v3 == 5)
      return 0;
    sub_1BB8033A8(v2);
    return (v5 & 1) != 0;
  }
  return v3 == 5;
}

void static FormatSymbolConfig.Scale.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB1097DC@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BB10984C + 4 * byte_1BB8ECDBA[a1]))(0x6669636570736E75);
}

BOOL sub_1BB10984C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  char v4;
  _BOOL8 result;
  char v6;

  if (a1 == 0x6669636570736E75 && v3 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v4 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v4 & 1) == 0)
      return result;
  }
  if (v1 != 10)
  {
    if (v2 == 10)
      return 0;
    sub_1BB803130(v1);
    return (v6 & 1) != 0;
  }
  return v2 == 10;
}

uint64_t sub_1BB10994C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSymbolConfig.Scale.init(from:)(a1, a2);
}

uint64_t sub_1BB109960(_QWORD *a1)
{
  return FormatSymbolConfig.Scale.encode(to:)(a1);
}

BOOL sub_1BB109974(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v4;
  char v5;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  sub_1BB8033A8(*(_BYTE *)a1);
  if ((v4 & 1) == 0)
    return 0;
  if (v2 != 10)
  {
    if (v3 == 10)
      return 0;
    sub_1BB803130(v2);
    return (v5 & 1) != 0;
  }
  return v3 == 10;
}

uint64_t _s8NewsFeed18FormatSymbolConfigO9TextStyleV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;
  char v13;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  v6 = FormatFontScalingStyle.rawValue.getter();
  v8 = v7;
  if (v6 == FormatFontScalingStyle.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v10 & 1) == 0)
      return result;
  }
  if (v2)
  {
    if (!v4)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BA881EAC(v2, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      return 0;
LABEL_10:
    if (v3 == 5)
    {
      if (v5 != 5)
        return 0;
    }
    else
    {
      if (v5 == 5)
        return 0;
      sub_1BB8033A8(v3);
      if ((v13 & 1) == 0)
        return 0;
    }
    return 1;
  }
  if (!v4)
    goto LABEL_10;
  return 0;
}

uint64_t _s8NewsFeed18FormatSymbolConfigO4SizeV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  char v10;

  v2 = *(_QWORD *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 9);
  v5 = *(_QWORD *)a2;
  v6 = *(unsigned __int8 *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1BA881EAC(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
    return 0;
  if (v3 != 10)
  {
    if (v6 == 10)
      return 0;
    sub_1BB803130(v3);
    if ((v9 & 1) == 0)
      return 0;
LABEL_7:
    if (v4 == 5)
    {
      if (v7 != 5)
        return 0;
    }
    else
    {
      if (v7 == 5)
        return 0;
      sub_1BB8033A8(v4);
      if ((v10 & 1) == 0)
        return 0;
    }
    return 1;
  }
  if (v6 == 10)
    goto LABEL_7;
  return 0;
}

void _s8NewsFeed18FormatSymbolConfigO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1BB109C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v14;
  char v15;
  char v16;
  uint64_t v17;

  if (!v7)
  {
    v17 = v5;
    sub_1BA740408(v4, v0, v1, 0);
    sub_1BA740408(v5, v3, v2, 0);
    sub_1BA740408(v5, v3, v2, 0);
    sub_1BA740408(v4, v0, v1, 0);
    static FormatFont.== infix(_:_:)((uint64_t)&v17);
    if ((v14 & 1) != 0)
    {
      if (v3 == 5)
      {
        sub_1BA740434(v5, v3, v2, 0);
        sub_1BA740434(v4, v0, v1, 0);
        sub_1BA740434(v4, v0, v1, 0);
        sub_1BA740434(v5, v3, v2, 0);
        if (v0 != 5)
          goto LABEL_4;
LABEL_13:
        v12 = 1;
        return v12 & 1;
      }
      if (v0 != 5)
      {
        sub_1BB8033A8(v3);
        v16 = v15;
        sub_1BA740434(v5, v3, v2, 0);
        sub_1BA740434(v4, v0, v1, 0);
        sub_1BA740434(v4, v0, v1, 0);
        sub_1BA740434(v5, v3, v2, 0);
        if ((v16 & 1) == 0)
          goto LABEL_4;
        goto LABEL_13;
      }
    }
    sub_1BA740434(v5, v3, v2, 0);
    sub_1BA740434(v4, v0, v1, 0);
    sub_1BA740434(v4, v0, v1, 0);
    v8 = v5;
    v9 = v3;
    v10 = v2;
    v11 = 0;
    goto LABEL_3;
  }
  swift_retain();
  sub_1BA740408(v4, v0, v1, v7);
  sub_1BA740434(v5, v3, v2, v6);
  v8 = v4;
  v9 = v0;
  v10 = v1;
  v11 = v7;
LABEL_3:
  sub_1BA740434(v8, v9, v10, v11);
LABEL_4:
  v12 = 0;
  return v12 & 1;
}

BOOL _s8NewsFeed18FormatSymbolConfigO4FontV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  int v2;
  int v3;
  char v4;
  char v5;
  uint64_t v7;

  v2 = *((unsigned __int8 *)a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  v7 = *a1;
  static FormatFont.== infix(_:_:)((uint64_t)&v7);
  if ((v4 & 1) == 0)
    return 0;
  if (v2 != 5)
  {
    if (v3 == 5)
      return 0;
    sub_1BB8033A8(v2);
    return (v5 & 1) != 0;
  }
  return v3 == 5;
}

unint64_t sub_1BB10A238(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB10A25C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB10A25C()
{
  unint64_t result;

  result = qword_1EF2BB9C8;
  if (!qword_1EF2BB9C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Font, &type metadata for FormatSymbolConfig.Font);
    atomic_store(result, (unint64_t *)&qword_1EF2BB9C8);
  }
  return result;
}

uint64_t sub_1BB10A2A0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEC2B38, (uint64_t (*)(void))sub_1BAEEA3CC, (uint64_t (*)(void))sub_1BB10A2BC);
}

unint64_t sub_1BB10A2BC()
{
  unint64_t result;

  result = qword_1EF2BB9D0;
  if (!qword_1EF2BB9D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Font, &type metadata for FormatSymbolConfig.Font);
    atomic_store(result, (unint64_t *)&qword_1EF2BB9D0);
  }
  return result;
}

unint64_t sub_1BB10A300(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB10A324();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB10A324()
{
  unint64_t result;

  result = qword_1EF2BB9D8;
  if (!qword_1EF2BB9D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.TextStyle, &type metadata for FormatSymbolConfig.TextStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2BB9D8);
  }
  return result;
}

uint64_t sub_1BB10A368(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEC2AF4, (uint64_t (*)(void))sub_1BAEEA410, (uint64_t (*)(void))sub_1BB10A384);
}

unint64_t sub_1BB10A384()
{
  unint64_t result;

  result = qword_1EF2BB9E0;
  if (!qword_1EF2BB9E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.TextStyle, &type metadata for FormatSymbolConfig.TextStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2BB9E0);
  }
  return result;
}

unint64_t sub_1BB10A3C8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB10A3EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB10A3EC()
{
  unint64_t result;

  result = qword_1EF2BB9E8;
  if (!qword_1EF2BB9E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Size, &type metadata for FormatSymbolConfig.Size);
    atomic_store(result, (unint64_t *)&qword_1EF2BB9E8);
  }
  return result;
}

uint64_t sub_1BB10A430(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA58E364, (uint64_t (*)(void))sub_1BA57DB5C, (uint64_t (*)(void))sub_1BB10A44C);
}

unint64_t sub_1BB10A44C()
{
  unint64_t result;

  result = qword_1EF2BB9F0;
  if (!qword_1EF2BB9F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Size, &type metadata for FormatSymbolConfig.Size);
    atomic_store(result, (unint64_t *)&qword_1EF2BB9F0);
  }
  return result;
}

unint64_t sub_1BB10A490(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB10A4B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB10A4B4()
{
  unint64_t result;

  result = qword_1EF2BB9F8;
  if (!qword_1EF2BB9F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Weight, &type metadata for FormatSymbolConfig.Weight);
    atomic_store(result, (unint64_t *)&qword_1EF2BB9F8);
  }
  return result;
}

uint64_t sub_1BB10A4F8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEC2AB0, (uint64_t (*)(void))sub_1BAEEA454, (uint64_t (*)(void))sub_1BB10A514);
}

unint64_t sub_1BB10A514()
{
  unint64_t result;

  result = qword_1EF2BBA00;
  if (!qword_1EF2BBA00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Weight, &type metadata for FormatSymbolConfig.Weight);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA00);
  }
  return result;
}

unint64_t sub_1BB10A558(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB10A57C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB10A57C()
{
  unint64_t result;

  result = qword_1EF2BBA08;
  if (!qword_1EF2BBA08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Scale, &type metadata for FormatSymbolConfig.Scale);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA08);
  }
  return result;
}

uint64_t sub_1BB10A5C0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEC2A6C, (uint64_t (*)(void))sub_1BAEEA498, (uint64_t (*)(void))sub_1BB10A5DC);
}

unint64_t sub_1BB10A5DC()
{
  unint64_t result;

  result = qword_1EF2BBA10;
  if (!qword_1EF2BBA10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Scale, &type metadata for FormatSymbolConfig.Scale);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA10);
  }
  return result;
}

unint64_t sub_1BB10A620(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB10A644();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB10A644()
{
  unint64_t result;

  result = qword_1EF2BBA18;
  if (!qword_1EF2BBA18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig, &type metadata for FormatSymbolConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA18);
  }
  return result;
}

uint64_t sub_1BB10A688(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA59DF98, (uint64_t (*)(void))sub_1BA60E000, (uint64_t (*)(void))sub_1BB10A6A4);
}

unint64_t sub_1BB10A6A4()
{
  unint64_t result;

  result = qword_1EF2BBA20;
  if (!qword_1EF2BBA20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig, &type metadata for FormatSymbolConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA20);
  }
  return result;
}

uint64_t sub_1BB10A6E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 17);
}

uint64_t sub_1BB10A6F0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 17) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig()
{
  return &type metadata for FormatSymbolConfig;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatSymbolConfig.Font(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatSymbolConfig.Font(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for FormatSymbolConfig.Font(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSymbolConfig.Font(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 251);
  if (*(unsigned __int8 *)(a1 + 8) <= 5u)
    v3 = 5;
  else
    v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 - 6;
  if (*(unsigned __int8 *)(a1 + 8) < 5u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSymbolConfig.Font(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig.Font()
{
  return &type metadata for FormatSymbolConfig.Font;
}

uint64_t sub_1BB10A880(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatSymbolConfig.TextStyle(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FormatSymbolConfig.TextStyle(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSymbolConfig.TextStyle(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSymbolConfig.TextStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig.TextStyle()
{
  return &type metadata for FormatSymbolConfig.TextStyle;
}

uint64_t sub_1BB10AA18(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatSymbolConfig.Size(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t assignWithTake for FormatSymbolConfig.Size(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig.Size()
{
  return &type metadata for FormatSymbolConfig.Size;
}

uint64_t getEnumTagSinglePayload for FormatSymbolConfig.Weight(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 65285 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65285 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65285;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65285;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65285;
  }
LABEL_17:
  if (*((unsigned __int8 *)a1 + 1) <= 5u)
    v6 = 5;
  else
    v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 - 6;
  if (*((unsigned __int8 *)a1 + 1) < 5u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSymbolConfig.Weight(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65285 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65285 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB10ABDC + 4 * byte_1BB8ECDC9[v4]))();
  *a1 = a2 - 251;
  return ((uint64_t (*)(void))((char *)sub_1BB10AC10 + 4 * byte_1BB8ECDC4[v4]))();
}

uint64_t sub_1BB10AC10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BB10AC18(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BB10AC20);
  return result;
}

uint64_t sub_1BB10AC2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BB10AC34);
  *(_BYTE *)(result + 1) = a2 + 5;
  return result;
}

uint64_t sub_1BB10AC38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BB10AC40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig.Weight()
{
  return &type metadata for FormatSymbolConfig.Weight;
}

uint64_t getEnumTagSinglePayload for FormatSymbolConfig.Scale(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 65284 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65284 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65284;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65284;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65284;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSymbolConfig.Scale(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65284 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65284 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB10AD3C + 4 * byte_1BB8ECDD3[v4]))();
  *a1 = a2 - 252;
  return ((uint64_t (*)(void))((char *)sub_1BB10AD70 + 4 * byte_1BB8ECDCE[v4]))();
}

uint64_t sub_1BB10AD70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BB10AD78(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BB10AD80);
  return result;
}

uint64_t sub_1BB10AD8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BB10AD94);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB10AD98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BB10ADA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig.Scale()
{
  return &type metadata for FormatSymbolConfig.Scale;
}

void sub_1BB10ADBC()
{
  __asm { BR              X10 }
}

id sub_1BB10ADF0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_configurationWithScale_, 0);
  v3 = objc_msgSend(v1, sel_configurationWithWeight_, v0);
  v4 = objc_msgSend(v2, sel_configurationByApplyingConfiguration_, v3);

  return v4;
}

id sub_1BB10AE9C()
{
  uint64_t v0;

  return objc_msgSend((id)objc_opt_self(), sel_configurationWithWeight_, v0);
}

void sub_1BB10AEE4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  id v2;

  v1 = v0[1];
  v2 = objc_msgSend((id)objc_opt_self(), sel_configurationWithScale_, *v0 - 1);
  __asm { BR              X9 }
}

id sub_1BB10AF40(void *a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;

  v2 = a1;
  v3 = objc_msgSend(v1, sel_configurationWithWeight_, 1);
  v4 = objc_msgSend(v2, sel_configurationByApplyingConfiguration_, v3);

  return v4;
}

uint64_t FeedRefreshBasicAnimation.__allocating_init(refreshStateMachine:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t FeedRefreshBasicAnimation.animate(context:animation:applyUpdates:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(void (*a1)(void)), uint64_t))
{
  uint64_t v4;

  v4 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  a3(sub_1BB10B178, v4);
  return swift_release_n();
}

uint64_t sub_1BB10B0C0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB10B0E4(void (*a1)(void))
{
  uint64_t result;

  a1();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1BB86DF84();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB10B178(void (*a1)(void))
{
  return sub_1BB10B0E4(a1);
}

uint64_t FeedRefreshBasicAnimation.animationCancelled(context:animation:)()
{
  return sub_1BB86DF84();
}

uint64_t FeedRefreshBasicAnimation.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t FeedRefreshBasicAnimation.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB10B20C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(void (*a1)(void)), uint64_t))
{
  uint64_t v4;

  v4 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  a3(sub_1BB10B178, v4);
  return swift_release_n();
}

uint64_t sub_1BB10B284()
{
  return sub_1BB86DF84();
}

uint64_t method lookup function for FeedRefreshBasicAnimation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedRefreshBasicAnimation.__allocating_init(refreshStateMachine:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t FormatBackgroundLayoutSolverResult.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA5E34EC(v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_content, a1);
}

uint64_t FormatBackgroundLayoutSolverResult.layoutResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;

  v2 = v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 32);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 40);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 48);
  v6 = *(_BYTE *)(v2 + 56);
  v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBackgroundLayoutSolverResult.layoutOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutOptions;
  v4 = sub_1BB8705C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FormatBackgroundLayoutSolverResult.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BA598594(v0 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_content);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutOptions;
  v2 = sub_1BB8705C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FormatBackgroundLayoutSolverResult.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BA598594(v0 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_content);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutOptions;
  v2 = sub_1BB8705C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB10B4A8()
{
  return type metadata accessor for FormatBackgroundLayoutSolverResult();
}

uint64_t type metadata accessor for FormatBackgroundLayoutSolverResult()
{
  uint64_t result;

  result = qword_1ED3A9AE0;
  if (!qword_1ED3A9AE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB10B4EC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FormatContent.Resolved();
  if (v1 <= 0x3F)
  {
    result = sub_1BB8705C4();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FormatBackgroundLayoutSolverResult()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB10B588()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FeedGapOffline.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FeedGapOffline.traits.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

void FeedGapOffline.layoutDirection.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FeedGapOffline.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGapOffline.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGapOffline.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

double FeedGapOffline.init(identifier:title:description:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  double result;

  *(_QWORD *)(a7 + 16) = 18;
  *(_QWORD *)(a7 + 24) = 0;
  *(_BYTE *)(a7 + 32) = 1;
  result = 0.0;
  *(_OWORD *)(a7 + 72) = xmmword_1BB87FC90;
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 40) = a3;
  *(_QWORD *)(a7 + 48) = a4;
  *(_QWORD *)(a7 + 56) = a5;
  *(_QWORD *)(a7 + 64) = a6;
  return result;
}

uint64_t FeedGapOffline.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedGapOffline.debugTitle.getter()
{
  return 0;
}

uint64_t FeedGapOffline.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedGapOffline.debugScoreProfile.getter()
{
  return 0;
}

unint64_t sub_1BB10B6D4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB10B6F8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB10B6F8()
{
  unint64_t result;

  result = qword_1ED3AC140;
  if (!qword_1ED3AC140)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGapOffline, &type metadata for FeedGapOffline);
    atomic_store(result, (unint64_t *)&qword_1ED3AC140);
  }
  return result;
}

unint64_t destroy for FeedGapOffline(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 80);
  if (result >= 0x11)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for FeedGapOffline(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = (_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >= 0x11)
  {
    *(_QWORD *)(a1 + 72) = *v7;
    *(_QWORD *)(a1 + 80) = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v7;
  }
  return a1;
}

uint64_t assignWithCopy for FeedGapOffline(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80) >= 0x11uLL)
  {
    if (v5 >= 0x11)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68(a1 + 72);
    goto LABEL_6;
  }
  if (v5 < 0x11)
  {
LABEL_6:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for FeedGapOffline(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 80) >= 0x11uLL)
  {
    v9 = *(_QWORD *)(a2 + 80);
    if (v9 >= 0x11)
    {
      *(_QWORD *)(a1 + 72) = *v8;
      *(_QWORD *)(a1 + 80) = v9;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)v8;
  return a1;
}

uint64_t sub_1BB10B9F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB10BA2C + 4 * aR[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB10BA2C()
{
  return 0x656C746974;
}

uint64_t sub_1BB10BA40()
{
  return 0x65726F6373;
}

uint64_t sub_1BB10BA54()
{
  return 0x656873696C627570;
}

uint64_t sub_1BB10BA78()
{
  return 0x446873696C627570;
}

uint64_t sub_1BB10BA98()
{
  return 0x6566694C666C6168;
}

unint64_t sub_1BB10BAB0()
{
  return 0xD000000000000016;
}

uint64_t sub_1BB10BACC()
{
  return 0x6269737365636361;
}

uint64_t sub_1BB10BAE8()
{
  return 0x646961507369;
}

uint64_t sub_1BB10BAFC()
{
  return 0x656C646E75426E69;
}

uint64_t sub_1BB10BB14()
{
  return 0x726143614C416E69;
}

uint64_t sub_1BB10BB2C()
{
  return 0x6F725065726F6373;
}

uint64_t sub_1BB10BB4C()
{
  return 0x736369706F74;
}

uint64_t sub_1BB10BB60()
{
  return 0x7365727574616566;
}

uint64_t sub_1BB10BB78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v12[55];
  _BYTE v13[448];
  char v14;

  v3 = v1;
  sub_1BB10E4C0(0, &qword_1EF2BBA70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12[-1] - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB10DE94();
  sub_1BB8746C8();
  LOBYTE(v12[0]) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v12[0]) = 1;
    sub_1BB87411C();
    LOBYTE(v12[0]) = 2;
    sub_1BB874194();
    LOBYTE(v12[0]) = 3;
    sub_1BB87411C();
    LOBYTE(v12[0]) = 4;
    sub_1BB874134();
    LOBYTE(v12[0]) = 5;
    sub_1BB8741C4();
    LOBYTE(v12[0]) = 6;
    sub_1BB87411C();
    LOBYTE(v12[0]) = 7;
    sub_1BB874188();
    LOBYTE(v12[0]) = 8;
    sub_1BB874188();
    LOBYTE(v12[0]) = 9;
    sub_1BB874188();
    LOBYTE(v12[0]) = 10;
    sub_1BB874188();
    sub_1BA6A09F0(v3 + 104, (uint64_t)v13, &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
    sub_1BA6A09F0((uint64_t)v13, (uint64_t)v12, &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
    v14 = 11;
    sub_1BB10E51C();
    sub_1BB87414C();
    v12[0] = *(_QWORD *)(v3 + 544);
    v14 = 12;
    sub_1BA4AD288(0, &qword_1EF2BBA40, (uint64_t)&type metadata for DebugInspectionTag, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB10E560((unint64_t *)&qword_1EF2BBA80, (uint64_t (*)(void))sub_1BB10E5DC, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v12[0] = *(_QWORD *)(v3 + 552);
    v14 = 13;
    sub_1BA4AD288(0, &qword_1EF2BBA58, (uint64_t)&type metadata for DebugInspectionAggregate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB10E620((unint64_t *)&qword_1EF2BBA90, (uint64_t (*)(void))sub_1BB10E69C, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB10BF68()
{
  unsigned __int8 *v0;

  return sub_1BB10B9F0(*v0);
}

uint64_t sub_1BB10BF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB10E884(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB10BF94()
{
  sub_1BB10DE94();
  return sub_1BB874710();
}

uint64_t sub_1BB10BFBC()
{
  sub_1BB10DE94();
  return sub_1BB87471C();
}

void *sub_1BB10BFE4@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _BYTE v5[560];

  result = sub_1BB10D5FC(a1, v5);
  if (!v2)
    return memcpy(a2, v5, 0x230uLL);
  return result;
}

uint64_t sub_1BB10C034(_QWORD *a1)
{
  const void *v1;
  _BYTE v4[560];

  memcpy(v4, v1, sizeof(v4));
  return sub_1BB10BB78(a1);
}

uint64_t sub_1BB10C084@<X0>(uint64_t *a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t result;
  uint64_t *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[440];
  _BYTE v89[16];
  _BYTE v90[16];
  __int128 v91;
  _BYTE __dst[440];
  __int128 v93;
  __int128 v94;
  _BYTE __src[448];

  v2 = v1;
  v4 = MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C2450, (uint64_t (*)(uint64_t))sub_1BAA85C90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87D7A0;
  sub_1BA4AD288(0, (unint64_t *)&qword_1EF2C2430, (uint64_t)&type metadata for DebugInspectionDataItem, (uint64_t (*)(_QWORD, uint64_t))v4);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87D7A0;
  *(_QWORD *)(v6 + 32) = 0x696669746E656449;
  *(_QWORD *)(v6 + 40) = 0xEA00000000007265;
  v91 = *v2;
  v7 = v91;
  v8 = MEMORY[0x1E0DEA968];
  v9 = MEMORY[0x1E0DEA9D8];
  *(_QWORD *)(v6 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 80) = v9;
  *(_OWORD *)(v6 + 48) = v7;
  v10 = (_OWORD *)(v6 + 112);
  *(_QWORD *)(v6 + 96) = 0x656C746954;
  *(_QWORD *)(v6 + 104) = 0xE500000000000000;
  *(_BYTE *)(v6 + 88) = 0;
  sub_1BA6A09F0((uint64_t)(v2 + 1), (uint64_t)v90, (unint64_t *)&qword_1ED3B9200, v8);
  sub_1BA6A09F0((uint64_t)v90, (uint64_t)&v93, (unint64_t *)&qword_1ED3B9200, v8);
  v11 = *((_QWORD *)&v93 + 1);
  if (*((_QWORD *)&v93 + 1))
  {
    *v10 = v93;
    v11 = MEMORY[0x1E0DEA9D8];
    v12 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v12 = 0;
    *(_QWORD *)v10 = 0;
    *(_QWORD *)(v6 + 120) = 0;
    *(_QWORD *)(v6 + 128) = 0;
  }
  *(_QWORD *)(v6 + 136) = v12;
  *(_QWORD *)(v6 + 144) = v11;
  *(_BYTE *)(v6 + 152) = 0;
  *(_QWORD *)(v6 + 160) = 0xD000000000000015;
  *(_QWORD *)(v6 + 168) = 0x80000001BB964160;
  v13 = *((_QWORD *)v2 + 4);
  v14 = MEMORY[0x1E0DEB0E0];
  *(_QWORD *)(v6 + 200) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v6 + 208) = v14;
  *(_QWORD *)(v6 + 176) = v13;
  v15 = (_OWORD *)(v6 + 240);
  strcpy((char *)(v6 + 224), "Publisher Name");
  *(_BYTE *)(v6 + 239) = -18;
  *(_BYTE *)(v6 + 216) = 0;
  v16 = MEMORY[0x1E0DEA968];
  sub_1BA6A09F0((uint64_t)v2 + 40, (uint64_t)v89, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968]);
  sub_1BA6A09F0((uint64_t)v89, (uint64_t)&v94, (unint64_t *)&qword_1ED3B9200, v16);
  v17 = *((_QWORD *)&v94 + 1);
  if (*((_QWORD *)&v94 + 1))
  {
    *v15 = v94;
    v17 = MEMORY[0x1E0DEA9D8];
    v18 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v18 = 0;
    *(_QWORD *)v15 = 0;
    *(_QWORD *)(v6 + 248) = 0;
    *(_QWORD *)(v6 + 256) = 0;
  }
  *(_QWORD *)(v6 + 264) = v18;
  *(_QWORD *)(v6 + 272) = v17;
  *(_BYTE *)(v6 + 280) = 0;
  *(_QWORD *)(v5 + 56) = &type metadata for DebugInspectionDataSection;
  *(_QWORD *)(v5 + 64) = &off_1E728C9C8;
  *(_QWORD *)(v5 + 32) = 0x6575737349;
  *(_QWORD *)(v5 + 40) = 0xE500000000000000;
  *(_QWORD *)(v5 + 48) = v6;
  sub_1BA6A09F0((uint64_t)v2 + 104, (uint64_t)v88, &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  sub_1BA6A09F0((uint64_t)v88, (uint64_t)__src, &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  if (sub_1BB10CB48((uint64_t)__src) == 1)
  {
    *(_QWORD *)(v5 + 104) = 0;
    *(_OWORD *)(v5 + 72) = 0u;
    *(_OWORD *)(v5 + 88) = 0u;
    sub_1BA739BF4((uint64_t)&v91);
    sub_1BA739BF4((uint64_t)v90);
    sub_1BA739BF4((uint64_t)v89);
  }
  else
  {
    memcpy(__dst, __src, sizeof(__dst));
    sub_1BA739BF4((uint64_t)&v91);
    sub_1BA739BF4((uint64_t)v90);
    sub_1BA739BF4((uint64_t)v89);
    sub_1BA95376C(v5 + 72);
  }
  v19 = *((_QWORD *)v2 + 68);
  v87 = v19;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = MEMORY[0x1E0DEE9D8];
  if (v20)
  {
    v22 = v5;
    v77 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AF24(0, v20, 0);
    v21 = v77;
    v23 = (uint64_t *)(v19 + 56);
    do
    {
      v25 = *(v23 - 3);
      v24 = *(v23 - 2);
      v26 = *v23;
      v79 = *(v23 - 1);
      v80 = v26;
      v83 = MEMORY[0x1E0DEA968];
      v84 = MEMORY[0x1E0DEA9D8];
      v81 = v25;
      v82 = v24;
      v85 = 0;
      v27 = *(_QWORD *)(v77 + 16);
      v28 = *(_QWORD *)(v77 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v27 >= v28 >> 1)
        sub_1BAC7AF24(v28 > 1, v27 + 1, 1);
      v23 += 4;
      *(_QWORD *)(v77 + 16) = v27 + 1;
      sub_1BAFD3D30((uint64_t)&v79, v77 + (v27 << 6) + 32);
      --v20;
    }
    while (v20);
    sub_1BA4F6CCC((uint64_t)&v87);
    v5 = v22;
  }
  *(_QWORD *)(v5 + 144) = &off_1E728C9C8;
  *(_QWORD *)(v5 + 112) = 0x736369706F54;
  *(_QWORD *)(v5 + 120) = 0xE600000000000000;
  *(_QWORD *)(v5 + 128) = v21;
  *(_QWORD *)(v5 + 136) = &type metadata for DebugInspectionDataSection;
  v76 = (_QWORD *)v5;
  v29 = *((_QWORD *)v2 + 69);
  v86 = v29;
  v30 = *(_QWORD *)(v29 + 16);
  if (v30)
  {
    v75 = a1;
    v78 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AF24(0, v30, 0);
    sub_1BB10CB60();
    v31 = v29 + 64;
    do
    {
      v32 = *(_QWORD *)(v31 - 24);
      v33 = *(_QWORD *)(v31 - 16);
      v34 = *(_BYTE *)(v31 + 24);
      v79 = *(_QWORD *)(v31 - 32);
      v80 = v32;
      v35 = (_QWORD *)swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1BB872AFC(v36);
      sub_1BB872FF4();
      v37 = 0;
      v35[4] = 0;
      v35[5] = 0xE000000000000000;
      if ((v34 & 1) == 0)
      {
        sub_1BB872AFC(0);
        sub_1BB872FF4();
        v37 = 0xE000000000000000;
      }
      v35[6] = 0;
      v35[7] = v37;
      sub_1BB872AFC(0);
      sub_1BB872FF4();
      v35[8] = 0;
      v35[9] = 0xE000000000000000;
      sub_1BB872AFC(0);
      sub_1BB872FF4();
      v35[10] = 0;
      v35[11] = 0xE000000000000000;
      if (v33)
      {
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA6A0BA4();
        sub_1BB872904();
        sub_1BB872AFC(v38);
        swift_bridgeObjectRelease();
        v39 = 0x203A73676154;
        v40 = 0xE600000000000000;
      }
      else
      {
        v39 = 0;
        v40 = 0;
      }
      v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v35[12] = v39;
      v35[13] = v40;
      v42 = v35[5];
      if (v42)
      {
        v43 = v35[4];
        swift_bridgeObjectRetain();
        v41 = sub_1BA6EA0D0(0, 1, 1, v41);
        v45 = v41[2];
        v44 = v41[3];
        if (v45 >= v44 >> 1)
          v41 = sub_1BA6EA0D0((_QWORD *)(v44 > 1), v45 + 1, 1, v41);
        v41[2] = v45 + 1;
        v46 = &v41[2 * v45];
        v46[4] = v43;
        v46[5] = v42;
      }
      v47 = v35[7];
      if (v47)
      {
        v48 = v35[6];
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v41 = sub_1BA6EA0D0(0, v41[2] + 1, 1, v41);
        v50 = v41[2];
        v49 = v41[3];
        if (v50 >= v49 >> 1)
          v41 = sub_1BA6EA0D0((_QWORD *)(v49 > 1), v50 + 1, 1, v41);
        v41[2] = v50 + 1;
        v51 = &v41[2 * v50];
        v51[4] = v48;
        v51[5] = v47;
      }
      v52 = v35[9];
      if (v52)
      {
        v53 = v35[8];
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v41 = sub_1BA6EA0D0(0, v41[2] + 1, 1, v41);
        v55 = v41[2];
        v54 = v41[3];
        if (v55 >= v54 >> 1)
          v41 = sub_1BA6EA0D0((_QWORD *)(v54 > 1), v55 + 1, 1, v41);
        v41[2] = v55 + 1;
        v56 = &v41[2 * v55];
        v56[4] = v53;
        v56[5] = v52;
      }
      v57 = v35[11];
      if (v57)
      {
        v58 = v35[10];
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v41 = sub_1BA6EA0D0(0, v41[2] + 1, 1, v41);
        v60 = v41[2];
        v59 = v41[3];
        if (v60 >= v59 >> 1)
          v41 = sub_1BA6EA0D0((_QWORD *)(v59 > 1), v60 + 1, 1, v41);
        v41[2] = v60 + 1;
        v61 = &v41[2 * v60];
        v61[4] = v58;
        v61[5] = v57;
      }
      v62 = v35[13];
      if (v62)
      {
        v63 = v35[12];
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v41 = sub_1BA6EA0D0(0, v41[2] + 1, 1, v41);
        v65 = v41[2];
        v64 = v41[3];
        if (v65 >= v64 >> 1)
          v41 = sub_1BA6EA0D0((_QWORD *)(v64 > 1), v65 + 1, 1, v41);
        v41[2] = v65 + 1;
        v66 = &v41[2 * v65];
        v66[4] = v63;
        v66[5] = v62;
      }
      swift_setDeallocating();
      v67 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v67, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA6A0BA4();
      v68 = sub_1BB872904();
      v70 = v69;
      swift_bridgeObjectRelease();
      v83 = v67;
      v84 = MEMORY[0x1E0DEA9D8];
      v81 = v68;
      v82 = v70;
      v85 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v71 = v78;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AF24(0, *(_QWORD *)(v78 + 16) + 1, 1);
        v71 = v78;
      }
      v73 = *(_QWORD *)(v71 + 16);
      v72 = *(_QWORD *)(v71 + 24);
      if (v73 >= v72 >> 1)
      {
        sub_1BAC7AF24(v72 > 1, v73 + 1, 1);
        v71 = v78;
      }
      *(_QWORD *)(v71 + 16) = v73 + 1;
      sub_1BAFD3D30((uint64_t)&v79, v71 + (v73 << 6) + 32);
      v31 += 96;
      --v30;
    }
    while (v30);
    sub_1BA4F6CCC((uint64_t)&v86);
    a1 = v75;
  }
  else
  {
    v71 = MEMORY[0x1E0DEE9D8];
  }
  v76[23] = &off_1E728C9C8;
  v76[19] = 0x7365727574616546;
  v76[20] = 0xE800000000000000;
  v76[21] = v71;
  v76[22] = &type metadata for DebugInspectionDataSection;
  result = sub_1BAA85898((uint64_t)v76);
  a1[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a1[4] = (uint64_t)&off_1E728CA90;
  *a1 = result;
  return result;
}

uint64_t sub_1BB10CB48(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 304);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

void sub_1BB10CB60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9FB0)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9FB0);
  }
}

uint64_t destroy for DebugInspectionIssue(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 408))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugInspectionIssue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  v7 = *(_QWORD *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    v8 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v8;
    v9 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v9;
    v10 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v10;
    v11 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v11;
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    v12 = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 408) = v12;
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    v13 = *(_OWORD *)(a2 + 440);
    v14 = *(_OWORD *)(a2 + 456);
    v15 = *(_OWORD *)(a2 + 488);
    *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 488) = v15;
    *(_OWORD *)(a1 + 440) = v13;
    *(_OWORD *)(a1 + 456) = v14;
    v16 = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
    *(_QWORD *)(a1 + 512) = v16;
    *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x1B8uLL);
  }
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectionIssue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  *(_BYTE *)(a1 + 99) = *(_BYTE *)(a2 + 99);
  v5 = *(_QWORD *)(a2 + 408);
  if (!*(_QWORD *)(a1 + 408))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      v6 = *(_OWORD *)(a2 + 440);
      v7 = *(_OWORD *)(a2 + 456);
      v8 = *(_OWORD *)(a2 + 488);
      *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
      *(_OWORD *)(a1 + 488) = v8;
      *(_OWORD *)(a1 + 440) = v6;
      *(_OWORD *)(a1 + 456) = v7;
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x1B8uLL);
    goto LABEL_8;
  }
  if (!v5)
  {
    sub_1BAFD6454(a1 + 104);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
LABEL_8:
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy560_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x230uLL);
}

uint64_t assignWithTake for DebugInspectionIssue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  *(_BYTE *)(a1 + 99) = *(_BYTE *)(a2 + 99);
  if (!*(_QWORD *)(a1 + 408))
    goto LABEL_5;
  if (!*(_QWORD *)(a2 + 408))
  {
    sub_1BAFD6454(a1 + 104);
LABEL_5:
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x1B8uLL);
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v7;
  v8 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v8;
  v9 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v9;
  v10 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v10;
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  v11 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
LABEL_6:
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionIssue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 560))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectionIssue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 552) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 560) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 560) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionIssue()
{
  return &type metadata for DebugInspectionIssue;
}

void *sub_1BB10D5FC@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD v55[70];
  _QWORD v56[70];
  char v57;
  uint64_t v58;
  _BYTE v59[448];
  uint64_t v60;
  _QWORD v61[71];

  sub_1BB10E4C0(0, &qword_1EF2BBA28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v39 - v8;
  v10 = a1[3];
  v54 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BB10DE94();
  sub_1BB87468C();
  if (v2)
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  v52 = a2;
  v53 = v7;
  LOBYTE(v56[0]) = 0;
  v11 = sub_1BB874098();
  v13 = v12;
  v61[0] = v11;
  v61[1] = v12;
  LOBYTE(v56[0]) = 1;
  swift_bridgeObjectRetain();
  v14 = sub_1BB87402C();
  v51 = v13;
  v61[2] = v14;
  v61[3] = v15;
  LOBYTE(v56[0]) = 2;
  v16 = v14;
  v17 = v15;
  swift_bridgeObjectRetain();
  sub_1BB8740B0();
  v19 = v18;
  v49 = v16;
  v50 = v17;
  v61[4] = v18;
  LOBYTE(v56[0]) = 3;
  v20 = sub_1BB87402C();
  v22 = v21;
  v61[5] = v20;
  v61[6] = v21;
  LOBYTE(v56[0]) = 4;
  swift_bridgeObjectRetain();
  v23 = sub_1BB874044();
  v47 = v20;
  v48 = v23;
  v61[7] = v23;
  LOBYTE(v61[8]) = v24 & 1;
  LOBYTE(v56[0]) = 5;
  LODWORD(v20) = v24;
  v25 = sub_1BB8740E0();
  v46 = v20;
  v26 = v11;
  v61[9] = v25;
  LOBYTE(v56[0]) = 6;
  v27 = v25;
  v28 = sub_1BB87402C();
  v30 = v29;
  v45 = v28;
  v61[10] = v28;
  v61[11] = v29;
  LOBYTE(v56[0]) = 7;
  swift_bridgeObjectRetain();
  v31 = sub_1BB8740A4();
  v44 = v31 & 1;
  LOBYTE(v61[12]) = v31 & 1;
  LOBYTE(v56[0]) = 8;
  v32 = sub_1BB8740A4();
  v43 = v32 & 1;
  BYTE1(v61[12]) = v32 & 1;
  LOBYTE(v56[0]) = 9;
  v33 = sub_1BB8740A4();
  v42 = v33 & 1;
  BYTE2(v61[12]) = v33 & 1;
  LOBYTE(v56[0]) = 10;
  v34 = sub_1BB8740A4();
  v41 = v34 & 1;
  BYTE3(v61[12]) = v34 & 1;
  v59[447] = 11;
  sub_1BB10DF10();
  sub_1BB874068();
  sub_1BA6A09F0((uint64_t)&v60, (uint64_t)v59, &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  sub_1BA6A09F0((uint64_t)v59, (uint64_t)&v61[13], &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  sub_1BA4AD288(0, &qword_1EF2BBA40, (uint64_t)&type metadata for DebugInspectionTag, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v55[0]) = 12;
  sub_1BB10DF54((uint64_t)v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB10E000);
  sub_1BB10E560((unint64_t *)&qword_1EF2BBA48, (uint64_t (*)(void))sub_1BB10E038, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  v35 = v56[0];
  v61[68] = v56[0];
  sub_1BA4AD288(0, &qword_1EF2BBA58, (uint64_t)&type metadata for DebugInspectionAggregate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v39 = v36;
  v57 = 13;
  sub_1BB10E620((unint64_t *)&qword_1EF2BBA60, (uint64_t (*)(void))sub_1BB10E07C, MEMORY[0x1E0DEAF40]);
  v40 = v35;
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v9, v6);
  v37 = v58;
  v61[69] = v58;
  v55[0] = v26;
  v55[1] = v51;
  v55[2] = v49;
  v55[3] = v50;
  v55[4] = v19;
  v55[5] = v47;
  v55[6] = v22;
  v55[7] = v48;
  LOBYTE(v55[8]) = v46 & 1;
  v55[9] = v27;
  v55[10] = v45;
  v55[11] = v30;
  LOBYTE(v55[12]) = v44;
  BYTE1(v55[12]) = v43;
  BYTE2(v55[12]) = v42;
  BYTE3(v55[12]) = v41;
  sub_1BA6A09F0((uint64_t)v59, (uint64_t)&v55[13], &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  v55[68] = v40;
  v55[69] = v37;
  sub_1BB10E0C0((uint64_t)v55);
  swift_bridgeObjectRelease();
  sub_1BB10DF54((uint64_t)v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB10DED8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  memcpy(v56, v61, sizeof(v56));
  sub_1BB10E2C0((uint64_t)v56);
  return memcpy(v52, v55, 0x230uLL);
}

unint64_t sub_1BB10DE94()
{
  unint64_t result;

  result = qword_1EF2BBA30;
  if (!qword_1EF2BBA30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ED52C, &type metadata for DebugInspectionIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA30);
  }
  return result;
}

uint64_t sub_1BB10DED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t result;

  result = a39;
  if (a39)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BB10DF10()
{
  unint64_t result;

  result = qword_1EF2BBA38;
  if (!qword_1EF2BBA38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887A34, &type metadata for DebugInspectionScoreProfile);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA38);
  }
  return result;
}

uint64_t sub_1BB10DF54(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v14 = *(_OWORD *)(a1 + 400);
  v15 = *(_OWORD *)(a1 + 416);
  v12 = *(_OWORD *)(a1 + 368);
  v13 = *(_OWORD *)(a1 + 384);
  v10 = *(_OWORD *)(a1 + 336);
  v11 = *(_OWORD *)(a1 + 352);
  v8 = *(_OWORD *)(a1 + 304);
  v9 = *(_OWORD *)(a1 + 320);
  v6 = *(_OWORD *)(a1 + 272);
  v7 = *(_OWORD *)(a1 + 288);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    v13,
    *((_QWORD *)&v13 + 1),
    v14,
    *((_QWORD *)&v14 + 1),
    v15,
    *((_QWORD *)&v15 + 1),
    *(_QWORD *)(a1 + 432));
  return a1;
}

uint64_t sub_1BB10E000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t result;

  if (a39)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1BB10E038()
{
  unint64_t result;

  result = qword_1EF2BBA50;
  if (!qword_1EF2BBA50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AD4C, &type metadata for DebugInspectionTag);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA50);
  }
  return result;
}

unint64_t sub_1BB10E07C()
{
  unint64_t result;

  result = qword_1EF2BBA68;
  if (!qword_1EF2BBA68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904EB4, &type metadata for DebugInspectionAggregate);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA68);
  }
  return result;
}

uint64_t sub_1BB10E0C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = *(_QWORD *)(a1 + 112);
  v26 = *(_QWORD *)(a1 + 104);
  v23 = *(_QWORD *)(a1 + 128);
  v24 = *(_QWORD *)(a1 + 120);
  v2 = *(_QWORD *)(a1 + 144);
  v22 = *(_QWORD *)(a1 + 136);
  v3 = *(_QWORD *)(a1 + 152);
  v4 = *(_QWORD *)(a1 + 160);
  v20 = *(_OWORD *)(a1 + 184);
  v21 = *(_OWORD *)(a1 + 168);
  v18 = *(_OWORD *)(a1 + 216);
  v19 = *(_OWORD *)(a1 + 200);
  v16 = *(_OWORD *)(a1 + 248);
  v17 = *(_OWORD *)(a1 + 232);
  v14 = *(_OWORD *)(a1 + 280);
  v15 = *(_OWORD *)(a1 + 264);
  v12 = *(_OWORD *)(a1 + 312);
  v13 = *(_OWORD *)(a1 + 296);
  v10 = *(_OWORD *)(a1 + 344);
  v11 = *(_OWORD *)(a1 + 328);
  v8 = *(_OWORD *)(a1 + 376);
  v9 = *(_OWORD *)(a1 + 360);
  v6 = *(_OWORD *)(a1 + 408);
  v7 = *(_OWORD *)(a1 + 392);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB10E000(v26, v25, v24, v23, v22, v2, v3, v4, v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB10E2C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = *(_QWORD *)(a1 + 112);
  v26 = *(_QWORD *)(a1 + 104);
  v23 = *(_QWORD *)(a1 + 128);
  v24 = *(_QWORD *)(a1 + 120);
  v2 = *(_QWORD *)(a1 + 144);
  v22 = *(_QWORD *)(a1 + 136);
  v3 = *(_QWORD *)(a1 + 152);
  v4 = *(_QWORD *)(a1 + 160);
  v20 = *(_OWORD *)(a1 + 184);
  v21 = *(_OWORD *)(a1 + 168);
  v18 = *(_OWORD *)(a1 + 216);
  v19 = *(_OWORD *)(a1 + 200);
  v16 = *(_OWORD *)(a1 + 248);
  v17 = *(_OWORD *)(a1 + 232);
  v14 = *(_OWORD *)(a1 + 280);
  v15 = *(_OWORD *)(a1 + 264);
  v12 = *(_OWORD *)(a1 + 312);
  v13 = *(_OWORD *)(a1 + 296);
  v10 = *(_OWORD *)(a1 + 344);
  v11 = *(_OWORD *)(a1 + 328);
  v8 = *(_OWORD *)(a1 + 376);
  v9 = *(_OWORD *)(a1 + 360);
  v6 = *(_OWORD *)(a1 + 408);
  v7 = *(_OWORD *)(a1 + 392);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB10DED8(v26, v25, v24, v23, v22, v2, v3, v4, v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BB10E4C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB10DE94();
    v7 = a3(a1, &type metadata for DebugInspectionIssue.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB10E51C()
{
  unint64_t result;

  result = qword_1EF2BBA78;
  if (!qword_1EF2BBA78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887A0C, &type metadata for DebugInspectionScoreProfile);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA78);
  }
  return result;
}

uint64_t sub_1BB10E560(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1EF2BBA40, (uint64_t)&type metadata for DebugInspectionTag, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB10E5DC()
{
  unint64_t result;

  result = qword_1EF2BBA88;
  if (!qword_1EF2BBA88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AD24, &type metadata for DebugInspectionTag);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA88);
  }
  return result;
}

uint64_t sub_1BB10E620(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1EF2BBA58, (uint64_t)&type metadata for DebugInspectionAggregate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB10E69C()
{
  unint64_t result;

  result = qword_1EF2BBA98;
  if (!qword_1EF2BBA98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904E8C, &type metadata for DebugInspectionAggregate);
    atomic_store(result, (unint64_t *)&qword_1EF2BBA98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugInspectionIssue.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1BB10E72C + 4 * byte_1BB8ED3F3[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1BB10E760 + 4 * byte_1BB8ED3EE[v4]))();
}

uint64_t sub_1BB10E760(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB10E768(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB10E770);
  return result;
}

uint64_t sub_1BB10E77C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB10E784);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1BB10E788(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB10E790(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionIssue.CodingKeys()
{
  return &type metadata for DebugInspectionIssue.CodingKeys;
}

unint64_t sub_1BB10E7B0()
{
  unint64_t result;

  result = qword_1EF2BBAA0;
  if (!qword_1EF2BBAA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ED504, &type metadata for DebugInspectionIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BBAA0);
  }
  return result;
}

unint64_t sub_1BB10E7F8()
{
  unint64_t result;

  result = qword_1EF2BBAA8;
  if (!qword_1EF2BBAA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ED474, &type metadata for DebugInspectionIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BBAA8);
  }
  return result;
}

unint64_t sub_1BB10E840()
{
  unint64_t result;

  result = qword_1EF2BBAB0;
  if (!qword_1EF2BBAB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ED49C, &type metadata for DebugInspectionIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BBAB0);
  }
  return result;
}

uint64_t sub_1BB10E884(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656873696C627570 && a2 == 0xED0000656D614E72 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6566694C666C6168 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB97A640 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEA0000000000656CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x646961507369 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x656C646E75426E69 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x726143614C416E69 && a2 == 0xEA00000000006574 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6F725065726F6373 && a2 == 0xEC000000656C6966 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x736369706F74 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_1BB10EE60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  v3 = v1;
  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v5);
  v27 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - v14;
  v16 = type metadata accessor for FormatSlotDefinitionItemSet();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  v26 = a1;
  sub_1BAA44168(a1 + *(int *)(v25 + 20), (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BAA441BC((uint64_t)v15);
    v20 = (uint64_t)v27;
  }
  else
  {
    sub_1BA8C88F0((uint64_t)v15, (uint64_t)v19);
    if (*(_BYTE *)(v3 + 9) != 1)
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1BA87DD80();
      swift_allocError();
      *(_BYTE *)v24 = 5;
      *(_QWORD *)(v24 + 8) = 0xD00000000000007ALL;
      *(_QWORD *)(v24 + 16) = 0x80000001BB97A660;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return sub_1BAA44288((uint64_t)v19);
    }
    v23 = v3 + *(int *)(type metadata accessor for FormatDerivedDataBindingSwitchCaseResult() + 20);
    sub_1BAA44244((uint64_t)v19, (uint64_t)v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
    sub_1BB41F6DC(v23, (uint64_t)v9, (uint64_t)v12);
    sub_1BAA441BC((uint64_t)v9);
    result = sub_1BAA44288((uint64_t)v19);
    v20 = (uint64_t)v27;
    if (v2)
      return result;
    sub_1BAA442C4((uint64_t)v12, v23);
  }
  v21 = v3 + *(int *)(type metadata accessor for FormatDerivedDataBindingSwitchCaseResult() + 24);
  result = sub_1BB41F6DC(v21, v26 + *(int *)(v25 + 24), v20);
  if (!v2)
    return sub_1BAA442C4(v20, v21);
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataBindingSwitchCaseResult()
{
  uint64_t result;

  result = qword_1EF2BBB10;
  if (!qword_1EF2BBB10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB10F140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v18 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - v9;
  v11 = type metadata accessor for FormatSlotDefinitionItemSet();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BB710184((uint64_t)v10);
  if (!v1)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      return sub_1BAA441BC((uint64_t)v10);
    }
    else
    {
      sub_1BA8C88F0((uint64_t)v10, (uint64_t)v14);
      if (*(_BYTE *)(v0 + 9) == 1)
      {
        v16 = v0 + *(int *)(type metadata accessor for FormatDerivedDataBindingSwitchCaseResult() + 20);
        sub_1BAA44244((uint64_t)v14, (uint64_t)v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v11);
        sub_1BB41F6DC(v16, (uint64_t)v4, (uint64_t)v7);
        sub_1BAA441BC((uint64_t)v4);
        sub_1BAA44288((uint64_t)v14);
        return sub_1BAA442C4((uint64_t)v7, v16);
      }
      else
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1BA87DD80();
        swift_allocError();
        *(_BYTE *)v17 = 5;
        *(_QWORD *)(v17 + 8) = 0xD00000000000007ALL;
        *(_QWORD *)(v17 + 16) = 0x80000001BB97A660;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        return sub_1BAA44288((uint64_t)v14);
      }
    }
  }
  return result;
}

_QWORD *sub_1BB10F370(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for FormatSlotDefinitionItemSet();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v39 = v12;
      *v9 = *v10;
      v16 = v10[2];
      v9[1] = v10[1];
      v9[2] = v16;
      v17 = v10[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17)
      {
        v18 = v10[4];
        v9[3] = v17;
        v9[4] = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 3) = *(_OWORD *)(v10 + 3);
      }
      v19 = *(int *)(v11 + 36);
      v20 = (char *)v9 + v19;
      v21 = (char *)v10 + v19;
      v22 = sub_1BB86E710();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v12 = v39;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v9, 0, 1, v11);
    }
    v25 = *(int *)(a3 + 24);
    v26 = (_QWORD *)((char *)v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    if (v13(v27, 1, v11))
    {
      sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      v29 = v27[2];
      v26[1] = v27[1];
      v26[2] = v29;
      v30 = v27[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v30)
      {
        v31 = v27[4];
        v26[3] = v30;
        v26[4] = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v26 + 3) = *(_OWORD *)(v27 + 3);
      }
      v32 = *(int *)(v11 + 36);
      v33 = (char *)v26 + v32;
      v34 = (char *)v27 + v32;
      v35 = sub_1BB86E710();
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_1BB10F6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for FormatSlotDefinitionItemSet();
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v7 = v4 + *(int *)(v5 + 36);
    v8 = sub_1BB86E710();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  v10 = a1 + *(int *)(a2 + 24);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v10, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v10 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v12 = v10 + *(int *)(v5 + 36);
    v13 = sub_1BB86E710();
    v14 = *(_QWORD *)(v13 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  return result;
}

uint64_t sub_1BB10F820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v37 = v11;
    *v8 = *v9;
    v14 = v9[2];
    v8[1] = v9[1];
    v8[2] = v14;
    v15 = v9[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15)
    {
      v16 = v9[4];
      v8[3] = v15;
      v8[4] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    }
    v17 = *(int *)(v10 + 36);
    v18 = (char *)v8 + v17;
    v19 = (char *)v9 + v17;
    v20 = sub_1BB86E710();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v11 = v37;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v8, 0, 1, v10);
  }
  v23 = *(int *)(a3 + 24);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  if (v12(v25, 1, v10))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    v27 = v25[2];
    v24[1] = v25[1];
    v24[2] = v27;
    v28 = v25[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28)
    {
      v29 = v25[4];
      v24[3] = v28;
      v24[4] = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v24 + 3) = *(_OWORD *)(v25 + 3);
    }
    v30 = *(int *)(v10 + 36);
    v31 = (char *)v24 + v30;
    v32 = (char *)v25 + v30;
    v33 = sub_1BB86E710();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1BB10FB3C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  size_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  size_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1BAA44288(v8);
      goto LABEL_7;
    }
    v62 = v11;
    *(_DWORD *)v8 = *(_DWORD *)v9;
    *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17 = *(_QWORD *)(v9 + 24);
    if (*(_QWORD *)(v8 + 24))
    {
      if (v17)
      {
        *(_QWORD *)(v8 + 24) = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      sub_1BAA44B5C(v8 + 24);
    }
    else if (v17)
    {
      *(_QWORD *)(v8 + 24) = v17;
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
LABEL_20:
    v24 = *(int *)(v10 + 36);
    v25 = (void *)(v8 + v24);
    v26 = (void *)(v9 + v24);
    v27 = sub_1BB86E710();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
    v60 = v25;
    LODWORD(v25) = v29(v25, 1, v27);
    v30 = v29(v26, 1, v27);
    if ((_DWORD)v25)
    {
      if (!v30)
      {
        (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v60, v26, v27);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v60, 0, 1, v27);
        goto LABEL_28;
      }
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      v32 = *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64);
      v33 = v60;
    }
    else
    {
      if (!v30)
      {
        (*(void (**)(void *, void *, uint64_t))(v28 + 24))(v60, v26, v27);
        goto LABEL_28;
      }
      (*(void (**)(void *, uint64_t))(v28 + 8))(v60, v27);
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      v32 = *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64);
      v33 = v60;
    }
    memcpy(v33, v26, v32);
LABEL_28:
    v11 = v62;
    goto LABEL_29;
  }
  if (v14)
  {
LABEL_7:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_29;
  }
  v61 = v11;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  v15 = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    *(_QWORD *)(v8 + 24) = v15;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  }
  v18 = *(int *)(v10 + 36);
  v19 = (void *)(v8 + v18);
  v20 = (const void *)(v9 + v18);
  v21 = sub_1BB86E710();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v11 = v61;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v8, 0, 1, v10);
LABEL_29:
  v35 = *(int *)(a3 + 24);
  v36 = a1 + v35;
  v37 = (uint64_t)a2 + v35;
  v38 = v12(a1 + v35, 1, v10);
  v39 = v12(v37, 1, v10);
  if (!v38)
  {
    if (v39)
    {
      sub_1BAA44288(v36);
      goto LABEL_35;
    }
    *(_DWORD *)v36 = *(_DWORD *)v37;
    *(_DWORD *)(v36 + 4) = *(_DWORD *)(v37 + 4);
    *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v44 = *(_QWORD *)(v37 + 24);
    if (*(_QWORD *)(v36 + 24))
    {
      if (v44)
      {
        *(_QWORD *)(v36 + 24) = v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_50:
        v52 = *(int *)(v10 + 36);
        v53 = (void *)(v36 + v52);
        v37 += v52;
        v54 = sub_1BB86E710();
        v55 = *(_QWORD *)(v54 - 8);
        v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
        v57 = v56(v53, 1, v54);
        v58 = v56((void *)v37, 1, v54);
        if (v57)
        {
          if (!v58)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v55 + 16))(v53, v37, v54);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v53, 0, 1, v54);
            return a1;
          }
        }
        else
        {
          if (!v58)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v55 + 24))(v53, v37, v54);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v55 + 8))(v53, v54);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v42 = *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64);
        v43 = v53;
        goto LABEL_36;
      }
      sub_1BAA44B5C(v36 + 24);
    }
    else if (v44)
    {
      *(_QWORD *)(v36 + 24) = v44;
      *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_50;
    }
    *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
    goto LABEL_50;
  }
  if (v39)
  {
LABEL_35:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v42 = *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64);
    v43 = (void *)v36;
LABEL_36:
    memcpy(v43, (const void *)v37, v42);
    return a1;
  }
  *(_DWORD *)v36 = *(_DWORD *)v37;
  *(_DWORD *)(v36 + 4) = *(_DWORD *)(v37 + 4);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
  *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
  v40 = *(_QWORD *)(v37 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40)
  {
    *(_QWORD *)(v36 + 24) = v40;
    *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
  }
  v45 = *(int *)(v10 + 36);
  v46 = (void *)(v36 + v45);
  v47 = (const void *)(v37 + v45);
  v48 = sub_1BB86E710();
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v36, 0, 1, v10);
  return a1;
}

_OWORD *sub_1BB110224(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_OWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    v14 = *(int *)(v10 + 36);
    __dst = (char *)v8 + v14;
    v15 = (char *)v9 + v14;
    v16 = sub_1BB86E710();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = *(int *)(a3 + 24);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  if (v12((_OWORD *)((char *)a2 + v19), 1, v10))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v20 = *v21;
    *(_OWORD *)(v20 + 1) = *(_OWORD *)(v21 + 1);
    *(_OWORD *)(v20 + 3) = *(_OWORD *)(v21 + 3);
    v23 = *(int *)(v10 + 36);
    v24 = (char *)v20 + v23;
    v25 = (char *)v21 + v23;
    v26 = sub_1BB86E710();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1BB1104C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  size_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  int v37;
  int v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  size_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1BAA44288((uint64_t)v8);
      goto LABEL_7;
    }
    v60 = v11;
    *v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRelease();
    v8[2] = v9[2];
    swift_bridgeObjectRelease();
    v22 = v9[3];
    if (v8[3])
    {
      if (v22)
      {
        v8[3] = v22;
        swift_bridgeObjectRelease();
        v8[4] = v9[4];
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      sub_1BAA44B5C((uint64_t)(v8 + 3));
    }
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
LABEL_15:
    v23 = *(int *)(v10 + 36);
    v24 = (char *)v8 + v23;
    v25 = (char *)v9 + v23;
    v26 = sub_1BB86E710();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
    v58 = v24;
    LODWORD(v24) = v28(v24, 1, v26);
    v29 = v28(v25, 1, v26);
    if ((_DWORD)v24)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 32))(v58, v25, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v58, 0, 1, v26);
        goto LABEL_23;
      }
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      v31 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64);
      v32 = v58;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 40))(v58, v25, v26);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v27 + 8))(v58, v26);
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      v31 = *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64);
      v32 = v58;
    }
    memcpy(v32, v25, v31);
LABEL_23:
    v11 = v60;
    goto LABEL_24;
  }
  if (v14)
  {
LABEL_7:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_24;
  }
  v59 = v11;
  *v8 = *v9;
  *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
  *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
  v15 = *(int *)(v10 + 36);
  v16 = (char *)v8 + v15;
  v17 = (char *)v9 + v15;
  v18 = sub_1BB86E710();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v11 = v59;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v8, 0, 1, v10);
LABEL_24:
  v34 = *(int *)(a3 + 24);
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = v12((_QWORD *)(a1 + v34), 1, v10);
  v38 = v12(v36, 1, v10);
  if (!v37)
  {
    if (v38)
    {
      sub_1BAA44288((uint64_t)v35);
      goto LABEL_30;
    }
    *v35 = *v36;
    v35[1] = v36[1];
    swift_bridgeObjectRelease();
    v35[2] = v36[2];
    swift_bridgeObjectRelease();
    v48 = v36[3];
    if (v35[3])
    {
      if (v48)
      {
        v35[3] = v48;
        swift_bridgeObjectRelease();
        v35[4] = v36[4];
        swift_bridgeObjectRelease();
LABEL_40:
        v50 = *(int *)(v10 + 36);
        v51 = (char *)v35 + v50;
        v36 = (_QWORD *)((char *)v36 + v50);
        v52 = sub_1BB86E710();
        v53 = *(_QWORD *)(v52 - 8);
        v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
        v55 = v54(v51, 1, v52);
        v56 = v54((char *)v36, 1, v52);
        if (v55)
        {
          if (!v56)
          {
            (*(void (**)(char *, _QWORD *, uint64_t))(v53 + 32))(v51, v36, v52);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v51, 0, 1, v52);
            return a1;
          }
        }
        else
        {
          if (!v56)
          {
            (*(void (**)(char *, _QWORD *, uint64_t))(v53 + 40))(v51, v36, v52);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v52);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v46 = *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64);
        v47 = v51;
        goto LABEL_31;
      }
      sub_1BAA44B5C((uint64_t)(v35 + 3));
    }
    *(_OWORD *)(v35 + 3) = *(_OWORD *)(v36 + 3);
    goto LABEL_40;
  }
  if (v38)
  {
LABEL_30:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v46 = *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64);
    v47 = (char *)v35;
LABEL_31:
    memcpy(v47, v36, v46);
    return a1;
  }
  *v35 = *v36;
  *(_OWORD *)(v35 + 1) = *(_OWORD *)(v36 + 1);
  *(_OWORD *)(v35 + 3) = *(_OWORD *)(v36 + 3);
  v39 = *(int *)(v10 + 36);
  v40 = (char *)v35 + v39;
  v41 = (char *)v36 + v39;
  v42 = sub_1BB86E710();
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v35, 0, 1, v10);
  return a1;
}

uint64_t sub_1BB110A70()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB110A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t sub_1BB110B14()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB110B20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1BB110BA4()
{
  unint64_t v0;

  sub_1BA4A3FB4(319, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1BB110C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  char *v19;
  id v20;
  id v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unsigned __int8 v29;
  char v30;
  void *v31;
  id v32;
  void *v33;
  char *v34;
  void (*v35)(id, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  char *v40;
  uint8_t *v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(char *, uint64_t);
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  const char *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  void *v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  _QWORD *v62;
  id v63;
  void *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  id v68;
  char *v69;
  id v70;
  __int128 v71;
  __int128 v72;
  id v73[3];
  uint64_t v74;
  uint64_t v75;

  v1 = v0;
  v75 = *MEMORY[0x1E0C80C00];
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v67 = (char *)&v66 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v66 - v12;
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v14 = sub_1BB86EFEC();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED476918);
  v16 = sub_1BB86EFC8();
  v17 = sub_1BB87330C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1BA493000, v16, v17, "Checking expired subscription for notifications disabling...", v18, 2u);
    MEMORY[0x1BCCE5C38](v18, -1, -1);
  }

  v19 = (char *)objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_bundleSubscriptionManager), sel_cachedSubscription);
  if (objc_getAssociatedObject(v19, v19 + 1))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v71 = 0u;
    v72 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v71, (uint64_t)v73);
  v68 = v4;
  v69 = (char *)v15;
  if (!v74)
  {
    sub_1BA6EDA74((uint64_t)v73);
    goto LABEL_13;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    v20 = 0;
    v22 = 0;
    goto LABEL_14;
  }
  v20 = v70;
  v21 = objc_msgSend(v70, sel_integerValue);
  if (v21 == (id)-1)
  {

    goto LABEL_31;
  }
  v22 = (unint64_t)v21;
LABEL_14:
  if (objc_getAssociatedObject(v19, (const void *)~v22))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v71 = 0u;
    v72 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v71, (uint64_t)v73);
  if (!v74)
  {
    sub_1BA6EDA74((uint64_t)v73);
LABEL_22:

    if ((v22 & 1) != 0)
      goto LABEL_31;
    goto LABEL_23;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_22;
  v23 = v70;
  v24 = v1;
  v25 = v8;
  v26 = v6;
  v27 = v13;
  v28 = v5;
  v29 = objc_msgSend(v23, sel_integerValue);

  v30 = v29 ^ v22;
  v5 = v28;
  v13 = v27;
  v6 = v26;
  v8 = v25;
  v1 = v24;
  if ((v30 & 1) != 0)
  {
LABEL_31:
    v46 = sub_1BB86EFC8();
    v47 = sub_1BB87330C();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      v49 = "User is a bundle subscriber. Skipping.";
      goto LABEL_33;
    }
    goto LABEL_34;
  }
LABEL_23:
  v31 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_userInfo);
  if ((objc_msgSend(v31, sel_puzzleNotificationsEnabled) & 1) == 0)
  {
    v46 = sub_1BB86EFC8();
    v47 = sub_1BB87330C();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      v49 = "Puzzle notifications already disabled. Skipping.";
LABEL_33:
      _os_log_impl(&dword_1BA493000, v46, v47, v49, v48, 2u);
      MEMORY[0x1BCCE5C38](v48, -1, -1);
    }
LABEL_34:

    return;
  }
  v32 = objc_msgSend(v31, sel_puzzleNotificationsLastChangedDate);
  if (v32)
  {
    v33 = v32;
    v34 = v67;
    sub_1BB86C874();

    v35 = *(void (**)(id, char *, uint64_t))(v6 + 32);
    v36 = (uint64_t)v68;
    v35(v68, v34, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v36, 0, 1, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v36, 1, v5) != 1)
    {
      v35(v13, (char *)v36, v5);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v13, v5);
      v37 = v6;
      v38 = sub_1BB86EFC8();
      v39 = sub_1BB87330C();
      v40 = v13;
      if (os_log_type_enabled(v38, v39))
      {
        v69 = v13;
        v41 = (uint8_t *)swift_slowAlloc();
        v42 = (void *)swift_slowAlloc();
        v73[0] = v42;
        *(_DWORD *)v41 = 136315138;
        sub_1BA4AD9BC();
        v43 = sub_1BB87420C();
        *(_QWORD *)&v71 = sub_1BA5D2E14(v43, v44, (uint64_t *)v73);
        sub_1BB873A8C();
        swift_bridgeObjectRelease();
        v45 = *(void (**)(char *, uint64_t))(v37 + 8);
        v45(v8, v5);
        _os_log_impl(&dword_1BA493000, v38, v39, "Puzzle notifications was set by user on [%s]. Skipping disabling notifications.", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v42, -1, -1);
        MEMORY[0x1BCCE5C38](v41, -1, -1);

        v45(v69, v5);
      }
      else
      {

        v65 = *(void (**)(char *, uint64_t))(v37 + 8);
        v65(v8, v5);
        v65(v40, v5);
      }
      return;
    }
  }
  else
  {
    v36 = (uint64_t)v68;
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v6 + 56))(v68, 1, 1, v5);
  }
  sub_1BA76D750(v36);
  v50 = sub_1BB86EFC8();
  v51 = sub_1BB87330C();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v52 = 0;
    _os_log_impl(&dword_1BA493000, v50, v51, "Disabling notifications state.", v52, 2u);
    MEMORY[0x1BCCE5C38](v52, -1, -1);
  }

  v53 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_notificationController);
  v73[0] = 0;
  if (objc_msgSend(v53, sel_setPuzzleNotificationsEnabled_userTriggered_error_, 0, 0, v73))
  {
    v54 = v73[0];
  }
  else
  {
    v68 = v73[0];
    v55 = v73[0];
    v56 = (void *)sub_1BB86C484();

    swift_willThrow();
    v57 = v56;
    v58 = v56;
    v59 = sub_1BB86EFC8();
    v60 = sub_1BB87330C();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      v62 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v61 = 138412290;
      v63 = v56;
      v64 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v73[0] = v64;
      sub_1BB873A8C();
      *v62 = v64;

      _os_log_impl(&dword_1BA493000, v59, v60, "Failed to disable puzzle notifications. Error = %@.", v61, 0xCu);
      sub_1BA92CD5C();
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v62, -1, -1);
      MEMORY[0x1BCCE5C38](v61, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1BB111500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint8_t *v34;
  uint8_t *v35;
  void *v36;
  id v37;
  void *v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  NSObject *v43;
  uint64_t v44;
  os_log_type_t v45;
  uint64_t v46;
  uint8_t *v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(char *, uint64_t);
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  uint8_t *v80;
  void *v81;
  uint64_t v82;
  unint64_t v83;
  void (*v84)(char *, uint64_t);
  char *v85;
  void *v86;
  id v87;
  id v88;
  void *v89;
  id v90;
  id v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  _QWORD *v95;
  id v96;
  void *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  id v107[2];

  v1 = v0;
  v107[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1BB86EFEC();
  v3 = *(char **)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C8B0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v102 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v99 = (char *)&v98 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v98 - v15;
  MEMORY[0x1E0C80A78](v17);
  v100 = (char *)&v98 - v18;
  MEMORY[0x1E0C80A78](v19);
  v104 = (char *)&v98 - v20;
  MEMORY[0x1E0C80A78](v21);
  v101 = (char *)&v98 - v22;
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v103 = v2;
  v23 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476918);
  v24 = sub_1BB86EFC8();
  v25 = sub_1BB87330C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v105 = v8;
    v27 = v10;
    v28 = v23;
    v29 = v1;
    v30 = v5;
    v31 = v3;
    v32 = v16;
    v33 = v9;
    v34 = v26;
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_1BA493000, v24, v25, "Checking user puzzle engagement for notifications auto disabling...", v26, 2u);
    v35 = v34;
    v9 = v33;
    v16 = v32;
    v3 = v31;
    v5 = v30;
    v1 = v29;
    v23 = v28;
    v10 = v27;
    v8 = v105;
    MEMORY[0x1BCCE5C38](v35, -1, -1);
  }

  v105 = (char *)objc_msgSend(objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_appConfigurationManager), sel_appConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  v36 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_userInfo);
  if ((objc_msgSend(v36, sel_puzzleNotificationsEnabled) & 1) != 0)
  {
    v37 = objc_msgSend(v36, sel_puzzleNotificationsLastChangedDate);
    if (v37)
    {
      v38 = v37;
      v39 = v104;
      sub_1BB86C874();

      v40 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v40(v8, v39, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
      {
        v41 = v101;
        v40(v101, v8, v9);
        v42 = v100;
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v100, v41, v9);
        v43 = sub_1BB86EFC8();
        v44 = v10;
        v45 = sub_1BB87330C();
        if (os_log_type_enabled(v43, v45))
        {
          v46 = v9;
          v47 = (uint8_t *)swift_slowAlloc();
          v48 = (void *)swift_slowAlloc();
          v107[0] = v48;
          *(_DWORD *)v47 = 136315138;
          v104 = (char *)(v47 + 4);
          sub_1BA4AD9BC();
          v49 = sub_1BB87420C();
          v106 = sub_1BA5D2E14(v49, v50, (uint64_t *)v107);
          sub_1BB873A8C();
          swift_bridgeObjectRelease();
          v51 = *(void (**)(char *, uint64_t))(v44 + 8);
          v51(v42, v46);
          _os_log_impl(&dword_1BA493000, v43, v45, "Puzzle notifications were set by user on [%s]. Skipping auto disabling notifications.", v47, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCE5C38](v48, -1, -1);
          MEMORY[0x1BCCE5C38](v47, -1, -1);

          v51(v41, v46);
          return;
        }

        v84 = *(void (**)(char *, uint64_t))(v44 + 8);
        v84(v42, v9);
        v85 = v41;
LABEL_21:
        v84(v85, v9);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      v39 = v104;
    }
    sub_1BA76D750((uint64_t)v8);
    sub_1BB86C880();
    objc_msgSend(v105, sel_autoDisableNotificationEngagementInterval);
    sub_1BB86C7FC();
    v104 = *(char **)(v10 + 8);
    ((void (*)(char *, uint64_t))v104)(v39, v9);
    v55 = (_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_puzzleHistoryService);
    v56 = v1;
    v57 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_puzzleHistoryService + 24);
    v58 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_puzzleHistoryService + 32);
    __swift_project_boxed_opaque_existential_1(v55, v57);
    v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 64))(v16, v57, v58);
    v60 = v10;
    v61 = v59;
    if (*(_QWORD *)(v59 + 16))
    {
      v62 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v3 + 2);
      v63 = v3;
      v64 = v103;
      v62(v5, v23, v103);
      v65 = v102;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v102, v16, v9);
      v66 = v5;
      v67 = sub_1BB86EFC8();
      v68 = sub_1BB87330C();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = swift_slowAlloc();
        v101 = v63;
        v70 = v69;
        v71 = (void *)swift_slowAlloc();
        v100 = v16;
        v72 = v71;
        *(_DWORD *)v70 = 134218242;
        v106 = *(_QWORD *)(v61 + 16);
        v107[0] = v71;
        sub_1BB873A8C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 12) = 2080;
        sub_1BA4AD9BC();
        v99 = v66;
        v73 = sub_1BB87420C();
        v106 = sub_1BA5D2E14(v73, v74, (uint64_t *)v107);
        sub_1BB873A8C();
        swift_bridgeObjectRelease();
        v75 = (void (*)(char *, uint64_t))v104;
        ((void (*)(char *, uint64_t))v104)(v65, v9);
        _os_log_impl(&dword_1BA493000, v67, v68, "User did engage with %ld puzzles since %s. Skipping auto disabling notifications.", (uint8_t *)v70, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v72, -1, -1);
        MEMORY[0x1BCCE5C38](v70, -1, -1);

        (*((void (**)(char *, uint64_t))v101 + 1))(v99, v64);
        v75(v100, v9);
        return;
      }

      v84 = (void (*)(char *, uint64_t))v104;
      ((void (*)(char *, uint64_t))v104)(v65, v9);
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v63 + 1))(v66, v64);
      v85 = v16;
      goto LABEL_21;
    }
    v103 = v56;
    swift_bridgeObjectRelease();
    v76 = v99;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v99, v16, v9);
    v77 = sub_1BB86EFC8();
    v78 = sub_1BB87330C();
    v79 = os_log_type_enabled(v77, v78);
    v98 = v23;
    if (v79)
    {
      v80 = (uint8_t *)swift_slowAlloc();
      v81 = (void *)swift_slowAlloc();
      v107[0] = v81;
      *(_DWORD *)v80 = 136315138;
      sub_1BA4AD9BC();
      v82 = sub_1BB87420C();
      v106 = sub_1BA5D2E14(v82, v83, (uint64_t *)v107);
      sub_1BB873A8C();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v104)(v76, v9);
      _os_log_impl(&dword_1BA493000, v77, v78, "No puzzle engagement since %s. Auto disabling puzzle notifications...", v80, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v81, -1, -1);
      MEMORY[0x1BCCE5C38](v80, -1, -1);
    }
    else
    {
      ((void (*)(char *, uint64_t))v104)(v76, v9);
    }

    v86 = *(void **)(v103 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_notificationController);
    v107[0] = 0;
    if (objc_msgSend(v86, sel_setPuzzleNotificationsEnabled_userTriggered_error_, 0, 0, v107, v98))
    {
      v87 = v107[0];
      ((void (*)(char *, uint64_t))v104)(v16, v9);

    }
    else
    {
      v88 = v107[0];
      v89 = (void *)sub_1BB86C484();

      swift_willThrow();
      v90 = v89;
      v91 = v89;
      v92 = sub_1BB86EFC8();
      v93 = sub_1BB8732F4();
      if (os_log_type_enabled(v92, v93))
      {
        v94 = (uint8_t *)swift_slowAlloc();
        v95 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v94 = 138412290;
        v96 = v89;
        v97 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v107[0] = v97;
        sub_1BB873A8C();
        *v95 = v97;

        _os_log_impl(&dword_1BA493000, v92, v93, "Failed to disable puzzle notifications. Error = %@.", v94, 0xCu);
        sub_1BA92CD5C();
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v95, -1, -1);
        MEMORY[0x1BCCE5C38](v94, -1, -1);

      }
      else
      {

      }
      ((void (*)(char *, uint64_t))v104)(v16, v9);
    }
  }
  else
  {
    v52 = sub_1BB86EFC8();
    v53 = sub_1BB87330C();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      _os_log_impl(&dword_1BA493000, v52, v53, "Puzzle notifications already disabled. Skipping auto disabling.", v54, 2u);
      MEMORY[0x1BCCE5C38](v54, -1, -1);
    }

  }
}

uint64_t sub_1BB112128()
{
  return type metadata accessor for PuzzleNotificationAutoEnableStartupTask();
}

id sub_1BB112228(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  objc_class *ObjectType;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  objc_super v22;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType();
  v15 = &v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_executionPhase];
  v16 = *MEMORY[0x1E0DB46A0];
  v17 = sub_1BB86E6BC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_notificationController] = a1;
  sub_1BA4C010C(a3, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_featureAvailability]);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_bundleSubscriptionManager] = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_userInfo] = a4;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_appConfigurationManager] = a5;
  sub_1BA4C010C(a6, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_puzzleHistoryService]);
  v22.receiver = v7;
  v22.super_class = ObjectType;
  v18 = a1;
  swift_unknownObjectRetain();
  v19 = a4;
  swift_unknownObjectRetain();
  v20 = objc_msgSendSuper2(&v22, sel_init);
  objc_msgSend(a2, sel_addObserver_, v20, v22.receiver, v22.super_class);
  __swift_destroy_boxed_opaque_existential_1(a6);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v20;
}

uint64_t sub_1BB11237C(uint64_t (*a1)(void))
{
  sub_1BB110C28();
  sub_1BB111500();
  return a1();
}

uint64_t FormatItemNodeLayoutContext.key.getter()
{
  return swift_retain();
}

uint64_t FormatItemNodeLayoutContext.inventory.getter()
{
  return swift_retain();
}

uint64_t FormatItemNodeLayoutContext.annotator.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeLayoutContext.feedItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatItemNodeLayoutContext();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 28), a1, type metadata accessor for FeedItem);
}

double FormatItemNodeLayoutContext.itemFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for FormatItemNodeLayoutContext() + 32));
}

double FormatItemNodeLayoutContext.sectionFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for FormatItemNodeLayoutContext() + 36));
}

uint64_t FormatItemNodeLayoutContext.copy(itemFrame:sectionFrame:)@<X0>(_QWORD *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>)
{
  uint64_t *v9;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  double *v24;
  double *v25;

  v19 = *v9;
  v20 = v9[1];
  v22 = v9[2];
  v21 = v9[3];
  v23 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
  sub_1BA4C2DD8((uint64_t)v9 + v23[7], (uint64_t)a1 + v23[7], type metadata accessor for FeedItem);
  *a1 = v19;
  a1[1] = v20;
  a1[2] = v22;
  a1[3] = v21;
  v24 = (double *)((char *)a1 + v23[8]);
  *v24 = a2;
  v24[1] = a3;
  v24[2] = a4;
  v24[3] = a5;
  v25 = (double *)((char *)a1 + v23[9]);
  *v25 = a6;
  v25[1] = a7;
  v25[2] = a8;
  v25[3] = a9;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_retain();
}

void FormatItemNodeLayoutContext.itemIdentifier.getter()
{
  type metadata accessor for FormatItemNodeLayoutContext();
  FeedItem.identifier.getter();
}

uint64_t FormatItemNodeLayoutContext.modelIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[32];
  __int128 v57;
  uint64_t v58;

  v1 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v1);
  v3 = (uint64_t *)((char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v48 = type metadata accessor for WebEmbedDataVisualization();
  v4 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v47 = (uint64_t *)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, &qword_1ED3CB5E0, v6);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v47 - v8;
  v10 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (id *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FormatItemNodeLayoutContext();
  sub_1BA4C2DD8(v0 + *(int *)(v19 + 28), (uint64_t)v18, type metadata accessor for FeedItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      v20 = type metadata accessor for FeedHeadline;
      sub_1BA5193C4((uint64_t)v18, (uint64_t)v15, type metadata accessor for FeedHeadline);
      v21 = objc_msgSend(v15[5], sel_identifier);
      v22 = sub_1BB8729A0();

      v23 = (uint64_t)v15;
      goto LABEL_10;
    case 4u:
      sub_1BA5193C4((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      sub_1BB044324((uint64_t)&v12[*(int *)(v10 + 52)], (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v48) == 1)
      {
        sub_1BB044380((uint64_t)v9);
      }
      else
      {
        v43 = v47;
        sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          v45 = *v43;
          sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          *(_QWORD *)&v49 = v45;
          SportsDataVisualization.umcCanonicalId.getter();
          v22 = v46;
          swift_release();
          sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          return v22;
        }
        sub_1BA4A2E80((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      }
      v24 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
      v25 = (uint64_t)v12;
LABEL_15:
      sub_1BA4A2E80(v25, v24);
      return 0;
    case 5u:
      v31 = *((_OWORD *)v18 + 7);
      v55 = *((_OWORD *)v18 + 6);
      *(_OWORD *)v56 = v31;
      *(_OWORD *)&v56[9] = *(_OWORD *)(v18 + 121);
      v32 = *((_OWORD *)v18 + 1);
      v49 = *(_OWORD *)v18;
      v50 = v32;
      v33 = *((_OWORD *)v18 + 3);
      v51 = *((_OWORD *)v18 + 2);
      v52 = v33;
      v34 = *((_OWORD *)v18 + 5);
      v53 = *((_OWORD *)v18 + 4);
      v54 = v34;
      v35 = objc_msgSend((id)v49, sel_identifier);
      v22 = sub_1BB8729A0();

      sub_1BA8D1FE4((uint64_t)&v49);
      return v22;
    case 7u:
      v36 = *((_OWORD *)v18 + 7);
      v55 = *((_OWORD *)v18 + 6);
      *(_OWORD *)v56 = v36;
      *(_OWORD *)&v56[16] = *((_OWORD *)v18 + 8);
      LOBYTE(v57) = v18[144];
      v37 = *((_OWORD *)v18 + 3);
      v51 = *((_OWORD *)v18 + 2);
      v52 = v37;
      v38 = *((_OWORD *)v18 + 5);
      v53 = *((_OWORD *)v18 + 4);
      v54 = v38;
      v39 = *((_OWORD *)v18 + 1);
      v49 = *(_OWORD *)v18;
      v50 = v39;
      v40 = objc_msgSend((id)v39, sel_identifier);
      v22 = sub_1BB8729A0();

      sub_1BA6A94C4((uint64_t)&v49);
      return v22;
    case 8u:
      v20 = (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem;
      sub_1BA5193C4((uint64_t)v18, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
      v22 = *v3;
      swift_bridgeObjectRetain();
      v23 = (uint64_t)v3;
LABEL_10:
      sub_1BA4A2E80(v23, v20);
      return v22;
    case 0xDu:
      v26 = *((_OWORD *)v18 + 9);
      *(_OWORD *)&v56[16] = *((_OWORD *)v18 + 8);
      v57 = v26;
      v58 = *((_QWORD *)v18 + 20);
      v27 = *((_OWORD *)v18 + 5);
      v53 = *((_OWORD *)v18 + 4);
      v54 = v27;
      v28 = *((_OWORD *)v18 + 7);
      v55 = *((_OWORD *)v18 + 6);
      *(_OWORD *)v56 = v28;
      v29 = *((_OWORD *)v18 + 1);
      v49 = *(_OWORD *)v18;
      v50 = v29;
      v30 = *((_OWORD *)v18 + 3);
      v51 = *((_OWORD *)v18 + 2);
      v52 = v30;
      v22 = *((_QWORD *)&v51 + 1);
      swift_bridgeObjectRetain();
      sub_1BA93EBE8((uint64_t)&v49);
      return v22;
    case 0xEu:
      v41 = *((_QWORD *)v18 + 3);
      v42 = *((_QWORD *)v18 + 4);
      v22 = *((_QWORD *)v18 + 5);
      swift_bridgeObjectRetain();
      sub_1BA6E0CBC(v41, v42);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v22;
    default:
      v24 = type metadata accessor for FeedItem;
      v25 = (uint64_t)v18;
      goto LABEL_15;
  }
}

double sub_1BB112A64(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 32));
}

double sub_1BB112A78(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 36));
}

void sub_1BB112A8C()
{
  FeedItem.identifier.getter();
}

uint64_t sub_1BB112AB0@<X0>(int *a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>)
{
  uint64_t *v10;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  double *v27;

  v21 = *v10;
  v22 = v10[1];
  v24 = v10[2];
  v23 = v10[3];
  sub_1BA4C2DD8((uint64_t)v10 + a1[7], (uint64_t)a2 + a1[7], type metadata accessor for FeedItem);
  *a2 = v21;
  a2[1] = v22;
  a2[2] = v24;
  a2[3] = v23;
  v25 = a1[9];
  v26 = (double *)((char *)a2 + a1[8]);
  *v26 = a3;
  v26[1] = a4;
  v26[2] = a5;
  v26[3] = a6;
  v27 = (double *)((char *)a2 + v25);
  *v27 = a7;
  v27[1] = a8;
  v27[2] = a9;
  v27[3] = a10;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_retain();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatItemNodeLayoutContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int *v65;
  uint64_t v66;
  char *v67;
  int *v68;
  unsigned int (*v69)(char *, uint64_t, int *);
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  __int128 v77;
  int v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  id v83;
  id v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  unint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, char *, void *);
  void *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  id v139;
  _QWORD *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  __int128 v153;
  _OWORD *v154;
  _OWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  unsigned int (*v162)(char *, uint64_t, uint64_t);
  uint64_t v163;
  __int128 v164;
  _OWORD *v165;
  _OWORD *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  int *v175;
  uint64_t v176;
  char *v177;
  int *v178;
  uint64_t v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  __int128 v193;
  _OWORD *v194;
  _OWORD *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  unint64_t v201;
  uint64_t v202;
  unint64_t v203;
  __int128 v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _OWORD *v209;
  _OWORD *v210;
  __int128 v211;
  void *v212;
  uint64_t v213;
  void *v214;
  uint64_t v215;
  id v216;
  id v217;
  __int128 v218;
  uint64_t v219;
  void *v220;
  id v221;
  __int128 v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  id v226;
  _QWORD *v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  id v235;
  _QWORD *v236;
  unint64_t v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  void *v241;
  uint64_t v242;
  id v243;
  id v244;
  __int128 v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  uint64_t v249;
  char *v250;
  id v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  _QWORD *v259;
  _QWORD *v260;
  unint64_t v261;
  uint64_t v262;
  unint64_t v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  uint64_t v268;
  uint64_t v269;
  void *v270;
  id v271;
  _QWORD *v272;
  unint64_t v273;
  uint64_t v274;
  void *v275;
  void (*v276)(_QWORD *, _QWORD, uint64_t, int *);
  id v277;
  uint64_t v278;
  char *v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  int EnumCaseMultiPayload;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  __int128 v289;
  uint64_t v290;
  uint64_t v291;
  _OWORD *v292;
  _OWORD *v293;
  __int128 v294;
  _OWORD *v295;
  _OWORD *v296;
  __int128 v297;
  uint64_t *result;
  uint64_t v299;
  unsigned int (*v300)(char *, uint64_t, int *);
  char *v301;
  char *v302;
  _QWORD *v303;
  void (*v304)(char *, char *, uint64_t);
  uint64_t v305;
  uint64_t v306;
  _QWORD *__dst;
  char *__dsta;
  int *__dstb;
  char *__dstc;
  uint64_t v311;
  void (*v312)(char *, char *, void *);
  void *v313;
  char *v314;
  void *v315;
  char *v316;
  int *v317;
  char *v318;
  char *v319;
  char *v320;
  int *v321;
  unsigned int (*v322)(char *, uint64_t, uint64_t);
  char *v323;
  int *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
    return v7;
  }
  v5 = a3;
  v7 = a1;
  v8 = a2[2];
  a1[1] = a2[1];
  a1[2] = v8;
  a1[3] = a2[3];
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for FeedItem(0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v13 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v13;
      v14 = *((_QWORD *)v11 + 3);
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = v14;
      v10[32] = v11[32];
      v15 = v11 + 40;
      v16 = *((_QWORD *)v11 + 6);
      swift_bridgeObjectRetain();
      if (v16 >= 0x11)
      {
        *((_QWORD *)v10 + 5) = *v15;
        *((_QWORD *)v10 + 6) = v16;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 40) = *(_OWORD *)v15;
      }
      goto LABEL_145;
    case 1u:
      v54 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v54;
      v55 = *((_QWORD *)v11 + 3);
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = v55;
      v10[32] = v11[32];
      v56 = *((_QWORD *)v11 + 6);
      *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 6) = v56;
      v57 = *((_QWORD *)v11 + 8);
      *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
      *((_QWORD *)v10 + 8) = v57;
      v58 = v11 + 72;
      v59 = *((_QWORD *)v11 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v59 >= 0x11)
      {
        *((_QWORD *)v10 + 9) = *v58;
        *((_QWORD *)v10 + 10) = v59;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 72) = *(_OWORD *)v58;
      }
      goto LABEL_145;
    case 2u:
      v325 = v5;
      v17 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v17;
      v18 = (int *)type metadata accessor for FeedBannerAd();
      v19 = v18[5];
      v20 = &v10[v19];
      v21 = &v11[v19];
      v22 = sub_1BB8721C0();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      *(_QWORD *)&v10[v18[6]] = *(_QWORD *)&v11[v18[6]];
      v24 = v18[7];
      v25 = &v10[v24];
      v26 = &v11[v24];
      *(_QWORD *)v25 = *(_QWORD *)v26;
      v25[8] = v26[8];
      v27 = v18[8];
      v28 = &v10[v27];
      v29 = &v11[v27];
      v30 = *((_QWORD *)v29 + 1);
      if (v30 >= 0x11)
      {
        *(_QWORD *)v28 = *(_QWORD *)v29;
        *((_QWORD *)v28 + 1) = v30;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v28 = *(_OWORD *)v29;
      }
      v5 = v325;
      goto LABEL_145;
    case 3u:
      v327 = v5;
      v60 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v60;
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      v10[24] = v11[24];
      v61 = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      *((_QWORD *)v10 + 5) = v61;
      *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
      v10[56] = v11[56];
      v321 = (int *)type metadata accessor for FeedHeadline(0);
      v62 = v321[10];
      v63 = &v10[v62];
      v64 = &v11[v62];
      *v63 = v11[v62];
      v63[1] = v11[v62 + 1];
      v65 = (int *)type metadata accessor for FeedHeadline.State(0);
      v66 = v65[6];
      __dsta = &v63[v66];
      v67 = &v64[v66];
      v68 = (int *)type metadata accessor for SharedItem();
      v305 = *((_QWORD *)v68 - 1);
      v69 = *(unsigned int (**)(char *, uint64_t, int *))(v305 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v69(v67, 1, v68))
      {
        v70 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dsta, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        v181 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(__dsta, v67, v181);
        __dsta[v68[5]] = v67[v68[5]];
        v182 = v68[6];
        v313 = *(void **)&v67[v182];
        *(_QWORD *)&__dsta[v182] = v313;
        v183 = v68[7];
        v316 = &v67[v183];
        v319 = &__dsta[v183];
        v184 = sub_1BB86C67C();
        v304 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 16);
        v185 = v313;
        v304(v319, v316, v184);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v305 + 56))(__dsta, 0, 1, v68);
      }
      v63[v65[7]] = v64[v65[7]];
      v63[v65[8]] = v64[v65[8]];
      v63[v65[9]] = v64[v65[9]];
      v63[v65[10]] = v64[v65[10]];
      v186 = v321[11];
      v187 = &v10[v186];
      v188 = &v11[v186];
      v189 = sub_1BB871B24();
      v190 = *(_QWORD *)(v189 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
        memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v187, v188, v189);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v190 + 56))(v187, 0, 1, v189);
      }
      v5 = v327;
      v198 = v321[12];
      v199 = &v10[v198];
      v200 = &v11[v198];
      v201 = *((_QWORD *)v200 + 1);
      if (v201 >= 0x11)
      {
        *(_QWORD *)v199 = *(_QWORD *)v200;
        *((_QWORD *)v199 + 1) = v201;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v199 = *(_OWORD *)v200;
      }
      v202 = v321[13];
      v203 = *(_QWORD *)&v11[v202];
      if (v203 >= 2)
      {
        if (v203 == 2)
        {
          *(_QWORD *)&v10[v202] = 2;
        }
        else
        {
          *(_QWORD *)&v10[v202] = v203;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(_QWORD *)&v10[v202] = v203;
      }
      v219 = v321[14];
      v220 = *(void **)&v11[v219];
      *(_QWORD *)&v10[v219] = v220;
      v221 = v220;
      goto LABEL_145;
    case 4u:
      v31 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v31;
      v10[16] = v11[16];
      v32 = v11 + 24;
      v33 = *((_QWORD *)v11 + 4);
      if (v33 >= 0x11)
      {
        *((_QWORD *)v10 + 3) = *v32;
        *((_QWORD *)v10 + 4) = v33;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 24) = *(_OWORD *)v32;
      }
      v123 = *((_QWORD *)v11 + 6);
      *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 6) = v123;
      v124 = type metadata accessor for FeedWebEmbed();
      v125 = *(int *)(v124 + 32);
      v323 = &v10[v125];
      v126 = &v11[v125];
      v127 = sub_1BB86C67C();
      v128 = *(_QWORD *)(v127 - 8);
      v129 = *(void (**)(char *, char *, void *))(v128 + 16);
      v130 = (void *)v127;
      swift_bridgeObjectRetain();
      v129(v323, v126, v130);
      v324 = (int *)v124;
      v131 = *(int *)(v124 + 36);
      v132 = &v10[v131];
      v133 = &v11[v131];
      v330 = v5;
      v312 = v129;
      v315 = v130;
      if ((*(unsigned int (**)(char *, uint64_t, void *))(v128 + 48))(&v11[v131], 1, v130))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
      }
      else
      {
        v129(v132, v133, v130);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v128 + 56))(v132, 0, 1, v130);
      }
      *(_QWORD *)&v10[v324[10]] = *(_QWORD *)&v11[v324[10]];
      *(_QWORD *)&v10[v324[11]] = *(_QWORD *)&v11[v324[11]];
      v158 = v324[12];
      v318 = &v10[v158];
      v159 = &v11[v158];
      v160 = type metadata accessor for FeedHeadline(0);
      v161 = *(_QWORD *)(v160 - 8);
      v162 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48);
      swift_retain();
      swift_retain();
      if (v162(v159, 1, v160))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v318, v159, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
      }
      else
      {
        v306 = v161;
        v169 = *((_QWORD *)v159 + 1);
        v170 = v318;
        *(_QWORD *)v318 = *(_QWORD *)v159;
        *((_QWORD *)v318 + 1) = v169;
        *((_QWORD *)v318 + 2) = *((_QWORD *)v159 + 2);
        v318[24] = v159[24];
        v171 = *((_QWORD *)v159 + 5);
        *((_QWORD *)v318 + 4) = *((_QWORD *)v159 + 4);
        *((_QWORD *)v318 + 5) = v171;
        *((_QWORD *)v318 + 6) = *((_QWORD *)v159 + 6);
        v318[56] = v159[56];
        __dstb = (int *)v160;
        v172 = *(int *)(v160 + 40);
        v173 = &v318[v172];
        v303 = v159;
        v174 = &v159[v172];
        *v173 = v159[v172];
        v173[1] = v159[v172 + 1];
        v175 = (int *)type metadata accessor for FeedHeadline.State(0);
        v176 = v175[6];
        v302 = &v173[v176];
        v177 = &v174[v176];
        v178 = (int *)type metadata accessor for SharedItem();
        v299 = *((_QWORD *)v178 - 1);
        v300 = *(unsigned int (**)(char *, uint64_t, int *))(v299 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v300(v177, 1, v178))
        {
          v179 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v302, v177, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
        }
        else
        {
          v246 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 16))(v302, v177, v246);
          v302[v178[5]] = v177[v178[5]];
          v247 = v178[6];
          v248 = *(void **)&v177[v247];
          *(_QWORD *)&v302[v247] = v248;
          v249 = v178[7];
          v301 = &v302[v249];
          v250 = &v177[v249];
          v251 = v248;
          v312(v301, v250, v315);
          v170 = v318;
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v299 + 56))(v302, 0, 1, v178);
        }
        v173[v175[7]] = v174[v175[7]];
        v173[v175[8]] = v174[v175[8]];
        v173[v175[9]] = v174[v175[9]];
        v173[v175[10]] = v174[v175[10]];
        v252 = __dstb[11];
        v253 = (char *)v170 + v252;
        v254 = (char *)v303 + v252;
        v255 = sub_1BB871B24();
        v256 = *(_QWORD *)(v255 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v256 + 48))(v254, 1, v255))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v253, v254, *(_QWORD *)(*(_QWORD *)(v257 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v253, v254, v255);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v256 + 56))(v253, 0, 1, v255);
        }
        v258 = __dstb[12];
        v259 = (_QWORD *)((char *)v170 + v258);
        v260 = (_QWORD *)((char *)v303 + v258);
        v261 = v260[1];
        if (v261 >= 0x11)
        {
          *v259 = *v260;
          v259[1] = v261;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v259 = *(_OWORD *)v260;
        }
        v262 = __dstb[13];
        v263 = *(_QWORD *)((char *)v303 + v262);
        if (v263 >= 2)
        {
          if (v263 == 2)
          {
            *(_QWORD *)((char *)v170 + v262) = 2;
          }
          else
          {
            *(_QWORD *)((char *)v170 + v262) = v263;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)((char *)v170 + v262) = v263;
        }
        v274 = __dstb[14];
        v275 = *(void **)((char *)v303 + v274);
        *(_QWORD *)((char *)v170 + v274) = v275;
        v276 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v306 + 56);
        v277 = v275;
        v276(v170, 0, 1, __dstb);
      }
      v278 = v324[13];
      v279 = &v10[v278];
      v280 = &v11[v278];
      v281 = type metadata accessor for WebEmbedDataVisualization();
      v282 = *(_QWORD *)(v281 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48))(v280, 1, v281))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v279, v280, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
        v5 = v330;
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v285 = *(_QWORD *)v280;
        if (EnumCaseMultiPayload == 1)
        {
          v286 = *((_QWORD *)v280 + 1);
          *(_QWORD *)v279 = v285;
          *((_QWORD *)v279 + 1) = v286;
          v287 = type metadata accessor for GenericDataVisualization();
          v288 = *(int *)(v287 + 20);
          v320 = &v279[v288];
          __dstc = &v280[v288];
          swift_bridgeObjectRetain();
          v312(v320, __dstc, v315);
          *(_QWORD *)&v279[*(int *)(v287 + 24)] = *(_QWORD *)&v280[*(int *)(v287 + 24)];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_QWORD *)v279 = v285;
          swift_retain();
        }
        v5 = v330;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v282 + 56))(v279, 0, 1, v281);
      }
      v10[v324[14]] = v11[v324[14]];
      goto LABEL_145;
    case 5u:
      v71 = *(void **)v11;
      v72 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v72;
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      v10[40] = v11[40];
      v73 = (void *)*((_QWORD *)v11 + 7);
      *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
      *((_QWORD *)v10 + 7) = v73;
      v10[64] = v11[64];
      v74 = *((_QWORD *)v11 + 10);
      v75 = v71;
      swift_bridgeObjectRetain();
      v76 = v73;
      if (v74 == 1)
      {
        v77 = *(_OWORD *)(v11 + 88);
        *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
        *(_OWORD *)(v10 + 88) = v77;
        *(_OWORD *)(v10 + 104) = *(_OWORD *)(v11 + 104);
      }
      else
      {
        *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
        *((_QWORD *)v10 + 10) = v74;
        v136 = *((_QWORD *)v11 + 12);
        *((_QWORD *)v10 + 11) = *((_QWORD *)v11 + 11);
        *((_QWORD *)v10 + 12) = v136;
        v138 = (void *)*((_QWORD *)v11 + 13);
        v137 = *((_QWORD *)v11 + 14);
        *((_QWORD *)v10 + 13) = v138;
        *((_QWORD *)v10 + 14) = v137;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v139 = v138;
      }
      v140 = v11 + 120;
      v141 = *((_QWORD *)v11 + 16);
      if (v141 >= 0x11)
      {
        *((_QWORD *)v10 + 15) = *v140;
        *((_QWORD *)v10 + 16) = v141;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 120) = *(_OWORD *)v140;
      }
      v10[136] = v11[136];
      goto LABEL_145;
    case 6u:
      v78 = v11[281];
      if (v78 == 2)
      {
        v205 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v205;
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        v10[24] = v11[24];
        *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
        v10[40] = v11[40];
        v206 = *((_QWORD *)v11 + 7);
        *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
        *((_QWORD *)v10 + 7) = v206;
        v207 = *((_QWORD *)v11 + 9);
        *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
        *((_QWORD *)v10 + 9) = v207;
        v208 = *((_QWORD *)v11 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v208 == 1)
        {
          v209 = v10 + 80;
          v210 = v11 + 80;
          v211 = *((_OWORD *)v11 + 8);
          *((_OWORD *)v10 + 7) = *((_OWORD *)v11 + 7);
          *((_OWORD *)v10 + 8) = v211;
          v10[144] = v11[144];
          goto LABEL_128;
        }
        v229 = v5;
        *((_QWORD *)v10 + 10) = *((_QWORD *)v11 + 10);
        *((_QWORD *)v10 + 11) = v208;
        v230 = *((_QWORD *)v11 + 15);
        swift_bridgeObjectRetain();
        if (v230)
        {
          v231 = *((_QWORD *)v11 + 16);
          *((_QWORD *)v10 + 15) = v230;
          *((_QWORD *)v10 + 16) = v231;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v230 - 8))((uint64_t)(v10 + 96), (uint64_t)(v11 + 96), v230);
          *((_QWORD *)v10 + 17) = *((_QWORD *)v11 + 17);
        }
        else
        {
          v289 = *((_OWORD *)v11 + 7);
          *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
          *((_OWORD *)v10 + 7) = v289;
          *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
        }
        v10[144] = v11[144];
        v5 = v229;
      }
      else
      {
        if (v78 == 1)
        {
          v79 = *(void **)v11;
          v80 = *((_QWORD *)v11 + 1);
          *(_QWORD *)v10 = *(_QWORD *)v11;
          *((_QWORD *)v10 + 1) = v80;
          *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
          *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
          *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
          v10[40] = v11[40];
          v81 = (void *)*((_QWORD *)v11 + 7);
          *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
          *((_QWORD *)v10 + 7) = v81;
          v10[64] = v11[64];
          v82 = *((_QWORD *)v11 + 10);
          v83 = v79;
          swift_bridgeObjectRetain();
          v84 = v81;
          if (v82 == 1)
          {
            v85 = *(_OWORD *)(v11 + 88);
            *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
            *(_OWORD *)(v10 + 88) = v85;
            *(_OWORD *)(v10 + 104) = *(_OWORD *)(v11 + 104);
          }
          else
          {
            *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
            *((_QWORD *)v10 + 10) = v82;
            v223 = *((_QWORD *)v11 + 12);
            *((_QWORD *)v10 + 11) = *((_QWORD *)v11 + 11);
            *((_QWORD *)v10 + 12) = v223;
            v225 = (void *)*((_QWORD *)v11 + 13);
            v224 = *((_QWORD *)v11 + 14);
            *((_QWORD *)v10 + 13) = v225;
            *((_QWORD *)v10 + 14) = v224;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v226 = v225;
          }
          v227 = v11 + 120;
          v228 = *((_QWORD *)v11 + 16);
          if (v228 >= 0x11)
          {
            *((_QWORD *)v10 + 15) = *v227;
            *((_QWORD *)v10 + 16) = v228;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v10 + 120) = *(_OWORD *)v227;
          }
          v210 = v11 + 144;
          v238 = (void *)*((_QWORD *)v11 + 18);
          v10[136] = v11[136];
          if (v238)
          {
            v239 = *((_QWORD *)v11 + 19);
            v240 = *((_QWORD *)v11 + 20);
            *((_QWORD *)v10 + 18) = v238;
            *((_QWORD *)v10 + 19) = v239;
            *((_QWORD *)v10 + 20) = v240;
            *((_WORD *)v10 + 84) = *((_WORD *)v11 + 84);
            *((_QWORD *)v10 + 22) = *((_QWORD *)v11 + 22);
            v10[184] = v11[184];
            v241 = (void *)*((_QWORD *)v11 + 25);
            *((_QWORD *)v10 + 24) = *((_QWORD *)v11 + 24);
            *((_QWORD *)v10 + 25) = v241;
            v10[208] = v11[208];
            v242 = *((_QWORD *)v11 + 28);
            v243 = v238;
            swift_bridgeObjectRetain();
            v244 = v241;
            if (v242 == 1)
            {
              v245 = *(_OWORD *)(v11 + 232);
              *(_OWORD *)(v10 + 216) = *(_OWORD *)(v11 + 216);
              *(_OWORD *)(v10 + 232) = v245;
              *(_OWORD *)(v10 + 248) = *(_OWORD *)(v11 + 248);
            }
            else
            {
              *((_QWORD *)v10 + 27) = *((_QWORD *)v11 + 27);
              *((_QWORD *)v10 + 28) = v242;
              v268 = *((_QWORD *)v11 + 30);
              *((_QWORD *)v10 + 29) = *((_QWORD *)v11 + 29);
              *((_QWORD *)v10 + 30) = v268;
              v270 = (void *)*((_QWORD *)v11 + 31);
              v269 = *((_QWORD *)v11 + 32);
              *((_QWORD *)v10 + 31) = v270;
              *((_QWORD *)v10 + 32) = v269;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v271 = v270;
            }
            v272 = v11 + 264;
            v273 = *((_QWORD *)v11 + 34);
            if (v273 >= 0x11)
            {
              *((_QWORD *)v10 + 33) = *v272;
              *((_QWORD *)v10 + 34) = v273;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v10 + 264) = *(_OWORD *)v272;
            }
            v10[280] = v11[280];
            goto LABEL_144;
          }
          v209 = v10 + 144;
          v264 = *((_OWORD *)v11 + 16);
          *((_OWORD *)v10 + 15) = *((_OWORD *)v11 + 15);
          *((_OWORD *)v10 + 16) = v264;
          *(_OWORD *)(v10 + 265) = *(_OWORD *)(v11 + 265);
          v265 = *((_OWORD *)v11 + 12);
          *((_OWORD *)v10 + 11) = *((_OWORD *)v11 + 11);
          *((_OWORD *)v10 + 12) = v265;
          v266 = *((_OWORD *)v11 + 14);
          *((_OWORD *)v10 + 13) = *((_OWORD *)v11 + 13);
          *((_OWORD *)v10 + 14) = v266;
LABEL_128:
          v267 = v210[1];
          *v209 = *v210;
          v209[1] = v267;
          goto LABEL_144;
        }
        v212 = *(void **)v11;
        v213 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v213;
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
        *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
        v10[40] = v11[40];
        v214 = (void *)*((_QWORD *)v11 + 7);
        *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
        *((_QWORD *)v10 + 7) = v214;
        v10[64] = v11[64];
        v215 = *((_QWORD *)v11 + 10);
        v216 = v212;
        swift_bridgeObjectRetain();
        v217 = v214;
        if (v215 == 1)
        {
          v218 = *(_OWORD *)(v11 + 88);
          *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
          *(_OWORD *)(v10 + 88) = v218;
          *(_OWORD *)(v10 + 104) = *(_OWORD *)(v11 + 104);
        }
        else
        {
          *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
          *((_QWORD *)v10 + 10) = v215;
          v232 = *((_QWORD *)v11 + 12);
          *((_QWORD *)v10 + 11) = *((_QWORD *)v11 + 11);
          *((_QWORD *)v10 + 12) = v232;
          v234 = (void *)*((_QWORD *)v11 + 13);
          v233 = *((_QWORD *)v11 + 14);
          *((_QWORD *)v10 + 13) = v234;
          *((_QWORD *)v10 + 14) = v233;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v235 = v234;
        }
        v236 = v11 + 120;
        v237 = *((_QWORD *)v11 + 16);
        if (v237 >= 0x11)
        {
          *((_QWORD *)v10 + 15) = *v236;
          *((_QWORD *)v10 + 16) = v237;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v10 + 120) = *(_OWORD *)v236;
        }
        v10[136] = v11[136];
      }
LABEL_144:
      v10[281] = v78;
LABEL_145:
      swift_storeEnumTagMultiPayload();
LABEL_146:
      v290 = *(int *)(v5 + 32);
      v291 = *(int *)(v5 + 36);
      v292 = (_OWORD *)((char *)v7 + v290);
      v293 = (_OWORD *)((char *)a2 + v290);
      v294 = v293[1];
      *v292 = *v293;
      v292[1] = v294;
      v295 = (_OWORD *)((char *)v7 + v291);
      v296 = (_OWORD *)((char *)a2 + v291);
      v297 = v296[1];
      *v295 = *v296;
      v295[1] = v297;
      return v7;
    case 7u:
      v86 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v86;
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      v10[24] = v11[24];
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      v10[40] = v11[40];
      v87 = *((_QWORD *)v11 + 7);
      *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
      *((_QWORD *)v10 + 7) = v87;
      v88 = *((_QWORD *)v11 + 9);
      *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
      *((_QWORD *)v10 + 9) = v88;
      v89 = *((_QWORD *)v11 + 11);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v89 == 1)
      {
        v90 = *((_OWORD *)v11 + 8);
        *((_OWORD *)v10 + 7) = *((_OWORD *)v11 + 7);
        *((_OWORD *)v10 + 8) = v90;
        v10[144] = v11[144];
        v91 = *((_OWORD *)v11 + 6);
        *((_OWORD *)v10 + 5) = *((_OWORD *)v11 + 5);
        *((_OWORD *)v10 + 6) = v91;
      }
      else
      {
        v142 = v5;
        *((_QWORD *)v10 + 10) = *((_QWORD *)v11 + 10);
        *((_QWORD *)v10 + 11) = v89;
        v143 = *((_QWORD *)v11 + 15);
        swift_bridgeObjectRetain();
        if (v143)
        {
          v144 = *((_QWORD *)v11 + 16);
          *((_QWORD *)v10 + 15) = v143;
          *((_QWORD *)v10 + 16) = v144;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v143 - 8))((uint64_t)(v10 + 96), (uint64_t)(v11 + 96), v143);
          *((_QWORD *)v10 + 17) = *((_QWORD *)v11 + 17);
        }
        else
        {
          v222 = *((_OWORD *)v11 + 7);
          *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
          *((_OWORD *)v10 + 7) = v222;
          *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
        }
        v10[144] = v11[144];
        v5 = v142;
      }
      goto LABEL_145;
    case 8u:
      v328 = v5;
      v92 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v92;
      v93 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v94 = &v10[v93];
      v95 = &v11[v93];
      v96 = *((_QWORD *)v95 + 1);
      *(_QWORD *)v94 = *(_QWORD *)v95;
      *((_QWORD *)v94 + 1) = v96;
      v97 = *((_QWORD *)v95 + 3);
      *((_QWORD *)v94 + 2) = *((_QWORD *)v95 + 2);
      *((_QWORD *)v94 + 3) = v97;
      v98 = type metadata accessor for FormatCustomItem.Resolved();
      v99 = *(int *)(v98 + 24);
      v314 = &v94[v99];
      v317 = (int *)v98;
      v100 = &v95[v99];
      v101 = type metadata accessor for FormatCustomItem.Action();
      v311 = *(_QWORD *)(v101 - 8);
      v322 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v311 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v322(v100, 1, v101))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v314, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        v192 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v314, v100, v192);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v311 + 56))(v314, 0, 1, v101);
      }
      v5 = v328;
      *(_QWORD *)&v94[v317[7]] = *(_QWORD *)&v95[v317[7]];
      swift_bridgeObjectRetain();
      goto LABEL_145;
    case 9u:
      v34 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v34;
      v35 = *((_QWORD *)v11 + 3);
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = v35;
      v36 = *((_QWORD *)v11 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v36)
      {
        v37 = *((_QWORD *)v11 + 8);
        *((_QWORD *)v10 + 7) = v36;
        *((_QWORD *)v10 + 8) = v37;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v36 - 8))((uint64_t)(v10 + 32), (uint64_t)(v11 + 32), v36);
      }
      else
      {
        v153 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v153;
        *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
      }
      v154 = v10 + 72;
      v155 = v11 + 72;
      v156 = *((_QWORD *)v11 + 12);
      if (v156)
      {
        v157 = *((_QWORD *)v11 + 13);
        *((_QWORD *)v10 + 12) = v156;
        *((_QWORD *)v10 + 13) = v157;
        (**(void (***)(_OWORD *, _OWORD *))(v156 - 8))(v154, v155);
      }
      else
      {
        v164 = *(_OWORD *)(v11 + 88);
        *v154 = *v155;
        *(_OWORD *)(v10 + 88) = v164;
        *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
      }
      v165 = v10 + 112;
      v166 = v11 + 112;
      v167 = *((_QWORD *)v11 + 17);
      if (v167)
      {
        v168 = *((_QWORD *)v11 + 18);
        *((_QWORD *)v10 + 17) = v167;
        *((_QWORD *)v10 + 18) = v168;
        (**(void (***)(_OWORD *, _OWORD *))(v167 - 8))(v165, v166);
      }
      else
      {
        v180 = *((_OWORD *)v11 + 8);
        *v165 = *v166;
        *((_OWORD *)v10 + 8) = v180;
        *((_QWORD *)v10 + 18) = *((_QWORD *)v11 + 18);
      }
      goto LABEL_145;
    case 0xAu:
      v329 = v5;
      v103 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v103;
      v104 = (int *)type metadata accessor for FeedEngagementBanner();
      v105 = v104[5];
      v106 = &v10[v105];
      v107 = &v11[v105];
      v108 = sub_1BB86EDAC();
      v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
      swift_bridgeObjectRetain();
      v109(v106, v107, v108);
      *(_QWORD *)&v10[v104[6]] = *(_QWORD *)&v11[v104[6]];
      v110 = v104[7];
      v111 = &v10[v110];
      v112 = &v11[v110];
      *(_QWORD *)v111 = *(_QWORD *)v112;
      v111[8] = v112[8];
      v113 = v104[8];
      v114 = &v10[v113];
      v115 = &v11[v113];
      v116 = *((_QWORD *)v115 + 1);
      if (v116 >= 0x11)
      {
        *(_QWORD *)v114 = *(_QWORD *)v115;
        *((_QWORD *)v114 + 1) = v116;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v114 = *(_OWORD *)v115;
      }
      v5 = v329;
      goto LABEL_145;
    case 0xBu:
      *(_QWORD *)v10 = *(_QWORD *)v11;
      swift_retain();
      goto LABEL_145;
    case 0xCu:
      v38 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v38;
      v39 = *((_QWORD *)v11 + 3);
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = v39;
      v10[32] = v11[32];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_145;
    case 0xDu:
      v117 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v117;
      v10[16] = v11[16];
      v118 = v11 + 24;
      v119 = *((_QWORD *)v11 + 4);
      if (v119 >= 0x11)
      {
        *((_QWORD *)v10 + 3) = *v118;
        *((_QWORD *)v10 + 4) = v119;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 24) = *(_OWORD *)v118;
      }
      v145 = *((_QWORD *)v11 + 6);
      *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 6) = v145;
      v146 = (void *)*((_QWORD *)v11 + 8);
      *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
      *((_QWORD *)v10 + 8) = v146;
      v10[72] = v11[72];
      *((_QWORD *)v10 + 10) = *((_QWORD *)v11 + 10);
      v147 = *((_QWORD *)v11 + 14);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v148 = v146;
      swift_bridgeObjectRetain();
      if (v147)
      {
        v149 = *((_QWORD *)v11 + 15);
        *((_QWORD *)v10 + 14) = v147;
        *((_QWORD *)v10 + 15) = v149;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v147 - 8))((uint64_t)(v10 + 88), (uint64_t)(v11 + 88), v147);
      }
      else
      {
        v193 = *(_OWORD *)(v11 + 104);
        *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
        *(_OWORD *)(v10 + 104) = v193;
        *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
      }
      v194 = v10 + 128;
      v195 = v11 + 128;
      v196 = *((_QWORD *)v11 + 19);
      if (v196)
      {
        v197 = *((_QWORD *)v11 + 20);
        *((_QWORD *)v10 + 19) = v196;
        *((_QWORD *)v10 + 20) = v197;
        (**(void (***)(_OWORD *, _OWORD *))(v196 - 8))(v194, v195);
      }
      else
      {
        v204 = *((_OWORD *)v11 + 9);
        *v194 = *v195;
        *((_OWORD *)v10 + 9) = v204;
        *((_QWORD *)v10 + 20) = *((_QWORD *)v11 + 20);
      }
      goto LABEL_145;
    case 0xEu:
      v40 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v40;
      v10[16] = v11[16];
      v41 = v11 + 24;
      v42 = *((_QWORD *)v11 + 4);
      if (v42 >= 0x11)
      {
        *((_QWORD *)v10 + 3) = *v41;
        *((_QWORD *)v10 + 4) = v42;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 24) = *(_OWORD *)v41;
      }
      v135 = *((_QWORD *)v11 + 6);
      *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 6) = v135;
      *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_145;
    case 0xFu:
      v120 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v120;
      v10[16] = v11[16];
      v121 = v11 + 24;
      v122 = *((_QWORD *)v11 + 4);
      if (v122 >= 0x11)
      {
        *((_QWORD *)v10 + 3) = *v121;
        *((_QWORD *)v10 + 4) = v122;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 24) = *(_OWORD *)v121;
      }
      v150 = *((_QWORD *)v11 + 6);
      *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 6) = v150;
      v151 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)&v10[v151] = *(_QWORD *)&v11[v151];
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v152 = (char *)&loc_1BB113718 + 4 * word_1BB8ED6A2[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x10u:
      v326 = v5;
      v43 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v43;
      v44 = *((_QWORD *)v11 + 3);
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = v44;
      v45 = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      *((_QWORD *)v10 + 5) = v45;
      *((_WORD *)v10 + 24) = *((_WORD *)v11 + 24);
      *(_OWORD *)(v10 + 56) = *(_OWORD *)(v11 + 56);
      v46 = *((_QWORD *)v11 + 10);
      *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
      *((_QWORD *)v10 + 10) = v46;
      v47 = *((_QWORD *)v11 + 12);
      *((_QWORD *)v10 + 11) = *((_QWORD *)v11 + 11);
      *((_QWORD *)v10 + 12) = v47;
      *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
      v10[112] = v11[112];
      v48 = *((_QWORD *)v11 + 16);
      *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
      *((_QWORD *)v10 + 16) = v48;
      v10[136] = v11[136];
      v49 = *((_QWORD *)v11 + 19);
      *((_QWORD *)v10 + 18) = *((_QWORD *)v11 + 18);
      *((_QWORD *)v10 + 19) = v49;
      v50 = *((_QWORD *)v11 + 21);
      *((_QWORD *)v10 + 20) = *((_QWORD *)v11 + 20);
      *((_QWORD *)v10 + 21) = v50;
      v10[184] = v11[184];
      *((_QWORD *)v10 + 22) = *((_QWORD *)v11 + 22);
      v51 = *((_QWORD *)v11 + 25);
      *((_QWORD *)v10 + 24) = *((_QWORD *)v11 + 24);
      *((_QWORD *)v10 + 25) = v51;
      v10[224] = v11[224];
      v52 = *((_QWORD *)v11 + 27);
      *((_QWORD *)v10 + 26) = *((_QWORD *)v11 + 26);
      *((_QWORD *)v10 + 27) = v52;
      __dst = v11 + 232;
      v53 = *((_QWORD *)v11 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53 >= 0x11)
      {
        *((_QWORD *)v10 + 29) = *__dst;
        *((_QWORD *)v10 + 30) = v53;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 232) = *(_OWORD *)__dst;
      }
      v5 = v326;
      goto LABEL_145;
    default:
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      goto LABEL_146;
  }
}

_QWORD *assignWithCopy for FormatItemNodeLayoutContext(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  int *v40;
  unsigned int (*v41)(char *, uint64_t, int *);
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  __int128 v49;
  __int128 v50;
  int v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  id v56;
  id v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  char v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, char *, void *);
  void *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void *v97;
  id v98;
  uint64_t v99;
  char v100;
  void *v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  char *v105;
  __int128 v106;
  __int128 v107;
  _OWORD *v108;
  __int128 *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  _OWORD *v119;
  __int128 *v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  int *v127;
  uint64_t v128;
  char *v129;
  int *v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, char *, uint64_t);
  id v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  _OWORD *v149;
  __int128 *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  unint64_t v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  void *v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  id v168;
  id v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  void *v173;
  id v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  void *v178;
  id v179;
  uint64_t v180;
  char v181;
  void *v182;
  id v183;
  void *v184;
  uint64_t v185;
  void *v186;
  uint64_t v187;
  id v188;
  id v189;
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  uint64_t v195;
  char *v196;
  id v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  _QWORD *v206;
  uint64_t v207;
  unint64_t v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  void *v215;
  id v216;
  uint64_t v217;
  void *v218;
  void (*v219)(_QWORD *, _QWORD, uint64_t, int *);
  id v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  int EnumCaseMultiPayload;
  uint64_t v228;
  uint64_t v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  uint64_t v233;
  _QWORD *v234;
  _QWORD *v235;
  uint64_t v236;
  _QWORD *v237;
  _QWORD *v238;
  _QWORD *result;
  uint64_t v240;
  unsigned int (*v241)(char *, uint64_t, int *);
  char *v242;
  _QWORD *v243;
  char *v244;
  void *v245;
  uint64_t v246;
  uint64_t v247;
  char *__dst;
  int *__dsta;
  char *__dstb;
  unint64_t v251;
  int *v252;
  uint64_t v253;
  void (*v254)(char *, char *, void *);
  char *v255;
  void *v256;
  char *v257;
  int *v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  int *v264;
  unsigned int (*v265)(char *, uint64_t, uint64_t);
  char *v266;
  int *v267;
  int *v268;
  int *v269;
  int *v270;
  int *v271;
  int *v272;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[7];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BA4A2E80((uint64_t)a1 + v6, type metadata accessor for FeedItem);
    v9 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        v10 = *((_QWORD *)v8 + 3);
        v7[32] = v8[32];
        *((_QWORD *)v7 + 3) = v10;
        v11 = *((_QWORD *)v8 + 6);
        swift_bridgeObjectRetain();
        if (v11 >= 0x11)
        {
          *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
          *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
        }
        goto LABEL_140;
      case 1u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        v31 = *((_QWORD *)v8 + 3);
        v7[32] = v8[32];
        *((_QWORD *)v7 + 3) = v31;
        *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
        *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
        v32 = *((_QWORD *)v8 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v32 >= 0x11)
        {
          *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
          *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
        }
        goto LABEL_140;
      case 2u:
        v268 = a3;
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        v12 = (int *)type metadata accessor for FeedBannerAd();
        v13 = v12[5];
        v14 = &v7[v13];
        v15 = &v8[v13];
        v16 = sub_1BB8721C0();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        *(_QWORD *)&v7[v12[6]] = *(_QWORD *)&v8[v12[6]];
        v18 = v12[7];
        v19 = &v7[v18];
        v20 = &v8[v18];
        v21 = v20[8];
        *(_QWORD *)v19 = *(_QWORD *)v20;
        v19[8] = v21;
        v22 = v12[8];
        v23 = &v7[v22];
        v24 = &v8[v22];
        if (*((_QWORD *)v24 + 1) >= 0x11uLL)
        {
          *(_QWORD *)v23 = *(_QWORD *)v24;
          *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v23 = *(_OWORD *)v24;
        }
        a3 = v268;
        goto LABEL_140;
      case 3u:
        v269 = a3;
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        v33 = *((_QWORD *)v8 + 2);
        v7[24] = v8[24];
        *((_QWORD *)v7 + 2) = v33;
        *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
        *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        v7[56] = v8[56];
        v264 = (int *)type metadata accessor for FeedHeadline(0);
        v34 = v264[10];
        v35 = &v7[v34];
        v36 = &v8[v34];
        *v35 = v8[v34];
        v35[1] = v8[v34 + 1];
        v37 = type metadata accessor for FeedHeadline.State(0);
        v38 = *(int *)(v37 + 24);
        __dst = &v35[v38];
        v252 = (int *)v37;
        v39 = &v36[v38];
        v40 = (int *)type metadata accessor for SharedItem();
        v246 = *((_QWORD *)v40 - 1);
        v41 = *(unsigned int (**)(char *, uint64_t, int *))(v246 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v41(v39, 1, v40))
        {
          v42 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          v134 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(__dst, v39, v134);
          __dst[v40[5]] = v39[v40[5]];
          v135 = v40[6];
          v245 = *(void **)&v39[v135];
          *(_QWORD *)&__dst[v135] = v245;
          v136 = v40[7];
          v257 = &v39[v136];
          v262 = &__dst[v136];
          v137 = sub_1BB86C67C();
          v138 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16);
          v139 = v245;
          v138(v262, v257, v137);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v246 + 56))(__dst, 0, 1, v40);
        }
        a3 = v269;
        v35[v252[7]] = v36[v252[7]];
        v35[v252[8]] = v36[v252[8]];
        v35[v252[9]] = v36[v252[9]];
        v35[v252[10]] = v36[v252[10]];
        v140 = v264[11];
        v141 = &v7[v140];
        v142 = &v8[v140];
        v143 = sub_1BB871B24();
        v144 = *(_QWORD *)(v143 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v141, v142, v143);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
        }
        v152 = v264[12];
        v153 = &v7[v152];
        v154 = &v8[v152];
        if (*((_QWORD *)v154 + 1) >= 0x11uLL)
        {
          *(_QWORD *)v153 = *(_QWORD *)v154;
          *((_QWORD *)v153 + 1) = *((_QWORD *)v154 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v153 = *(_OWORD *)v154;
        }
        v155 = v264[13];
        v156 = *(_QWORD *)&v8[v155];
        if (v156 >= 2)
        {
          if (v156 == 2)
          {
            *(_QWORD *)&v7[v155] = 2;
          }
          else
          {
            *(_QWORD *)&v7[v155] = v156;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&v7[v155] = v156;
        }
        v172 = v264[14];
        v173 = *(void **)&v8[v172];
        *(_QWORD *)&v7[v172] = v173;
        v174 = v173;
        goto LABEL_140;
      case 4u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v25 = *((_QWORD *)v8 + 1);
        v7[16] = v8[16];
        *((_QWORD *)v7 + 1) = v25;
        if (*((_QWORD *)v8 + 4) >= 0x11uLL)
        {
          *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
        }
        *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        v88 = type metadata accessor for FeedWebEmbed();
        v89 = *(int *)(v88 + 32);
        v259 = &v8[v89];
        v266 = &v7[v89];
        v90 = sub_1BB86C67C();
        v91 = *(_QWORD *)(v90 - 8);
        v92 = *(void (**)(char *, char *, void *))(v91 + 16);
        v93 = (void *)v90;
        swift_bridgeObjectRetain();
        v92(v266, v259, v93);
        v94 = *(int *)(v88 + 36);
        v260 = &v7[v94];
        v267 = (int *)v88;
        v95 = &v8[v94];
        v272 = a3;
        v254 = v92;
        v256 = v93;
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v91 + 48))(&v8[v94], 1, v93))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v260, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        }
        else
        {
          v92(v260, v95, v93);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v91 + 56))(v260, 0, 1, v93);
        }
        *(_QWORD *)&v7[v267[10]] = *(_QWORD *)&v8[v267[10]];
        *(_QWORD *)&v7[v267[11]] = *(_QWORD *)&v8[v267[11]];
        v111 = v267[12];
        v261 = &v7[v111];
        v112 = &v8[v111];
        v113 = type metadata accessor for FeedHeadline(0);
        v114 = *(_QWORD *)(v113 - 8);
        v115 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48);
        swift_retain();
        swift_retain();
        if (v115(v112, 1, v113))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v261, v112, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        }
        else
        {
          v247 = v114;
          v122 = v261;
          *(_QWORD *)v261 = *(_QWORD *)v112;
          v243 = v112;
          *((_QWORD *)v261 + 1) = *((_QWORD *)v112 + 1);
          v123 = *((_QWORD *)v112 + 2);
          v261[24] = v112[24];
          *((_QWORD *)v261 + 2) = v123;
          *((_QWORD *)v261 + 4) = *((_QWORD *)v112 + 4);
          *((_QWORD *)v261 + 5) = *((_QWORD *)v112 + 5);
          *((_QWORD *)v261 + 6) = *((_QWORD *)v112 + 6);
          v261[56] = v112[56];
          __dsta = (int *)v113;
          v124 = *(int *)(v113 + 40);
          v125 = &v261[v124];
          v126 = &v112[v124];
          *v125 = v112[v124];
          v125[1] = v112[v124 + 1];
          v127 = (int *)type metadata accessor for FeedHeadline.State(0);
          v128 = v127[6];
          v244 = &v125[v128];
          v129 = &v126[v128];
          v130 = (int *)type metadata accessor for SharedItem();
          v240 = *((_QWORD *)v130 - 1);
          v241 = *(unsigned int (**)(char *, uint64_t, int *))(v240 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v241(v129, 1, v130))
          {
            v131 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v244, v129, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
          }
          else
          {
            v192 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v244, v129, v192);
            v244[v130[5]] = v129[v130[5]];
            v193 = v130[6];
            v194 = *(void **)&v129[v193];
            *(_QWORD *)&v244[v193] = v194;
            v195 = v130[7];
            v242 = &v244[v195];
            v196 = &v129[v195];
            v197 = v194;
            v254(v242, v196, v256);
            v122 = v261;
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v240 + 56))(v244, 0, 1, v130);
          }
          v125[v127[7]] = v126[v127[7]];
          v125[v127[8]] = v126[v127[8]];
          v125[v127[9]] = v126[v127[9]];
          v125[v127[10]] = v126[v127[10]];
          v198 = __dsta[11];
          v199 = (char *)v122 + v198;
          v200 = (char *)v243 + v198;
          v201 = sub_1BB871B24();
          v202 = *(_QWORD *)(v201 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v202 + 48))(v200, 1, v201))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v202 + 16))(v199, v200, v201);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v202 + 56))(v199, 0, 1, v201);
          }
          v204 = __dsta[12];
          v205 = (_QWORD *)((char *)v122 + v204);
          v206 = (_QWORD *)((char *)v243 + v204);
          if (v206[1] >= 0x11uLL)
          {
            *v205 = *v206;
            v205[1] = v206[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v205 = *(_OWORD *)v206;
          }
          v207 = __dsta[13];
          v208 = *(_QWORD *)((char *)v243 + v207);
          if (v208 >= 2)
          {
            if (v208 == 2)
            {
              *(_QWORD *)((char *)v122 + v207) = 2;
            }
            else
            {
              *(_QWORD *)((char *)v122 + v207) = v208;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)((char *)v122 + v207) = v208;
          }
          v217 = __dsta[14];
          v218 = *(void **)((char *)v243 + v217);
          *(_QWORD *)((char *)v122 + v217) = v218;
          v219 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v247 + 56);
          v220 = v218;
          v219(v122, 0, 1, __dsta);
        }
        v221 = v267[13];
        v222 = &v7[v221];
        v223 = &v8[v221];
        v224 = type metadata accessor for WebEmbedDataVisualization();
        v225 = *(_QWORD *)(v224 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v225 + 48))(v223, 1, v224))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v222, v223, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v222 = *(_QWORD *)v223;
          if (EnumCaseMultiPayload == 1)
          {
            *((_QWORD *)v222 + 1) = *((_QWORD *)v223 + 1);
            v228 = type metadata accessor for GenericDataVisualization();
            v229 = *(int *)(v228 + 20);
            v263 = &v222[v229];
            __dstb = &v223[v229];
            swift_bridgeObjectRetain();
            v254(v263, __dstb, v256);
            *(_QWORD *)&v222[*(int *)(v228 + 24)] = *(_QWORD *)&v223[*(int *)(v228 + 24)];
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v225 + 56))(v222, 0, 1, v224);
        }
        v7[v267[14]] = v8[v267[14]];
        swift_storeEnumTagMultiPayload();
        a3 = v272;
        break;
      case 5u:
        v43 = *(void **)v8;
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        v7[24] = v8[24];
        v7[25] = v8[25];
        v44 = *((_QWORD *)v8 + 4);
        v7[40] = v8[40];
        *((_QWORD *)v7 + 4) = v44;
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        v45 = (void *)*((_QWORD *)v8 + 7);
        *((_QWORD *)v7 + 7) = v45;
        v7[64] = v8[64];
        v46 = *((_QWORD *)v8 + 10);
        v47 = v43;
        swift_bridgeObjectRetain();
        v48 = v45;
        if (v46 == 1)
        {
          v49 = *(_OWORD *)(v8 + 72);
          v50 = *(_OWORD *)(v8 + 104);
          *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
          *(_OWORD *)(v7 + 104) = v50;
          *(_OWORD *)(v7 + 72) = v49;
        }
        else
        {
          *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
          *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
          *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
          *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
          v97 = (void *)*((_QWORD *)v8 + 13);
          *((_QWORD *)v7 + 13) = v97;
          *((_QWORD *)v7 + 14) = *((_QWORD *)v8 + 14);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v98 = v97;
        }
        if (*((_QWORD *)v8 + 16) >= 0x11uLL)
        {
          *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
          *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
        }
        v7[136] = v8[136];
        goto LABEL_140;
      case 6u:
        v51 = v8[281];
        if (v51 == 2)
        {
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
          *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
          v7[24] = v8[24];
          v159 = *((_QWORD *)v8 + 4);
          v7[40] = v8[40];
          *((_QWORD *)v7 + 4) = v159;
          *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
          *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
          *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
          *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
          v160 = *((_QWORD *)v8 + 11);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v160 == 1)
          {
            *((_OWORD *)v7 + 5) = *((_OWORD *)v8 + 5);
            v161 = *((_OWORD *)v8 + 6);
            v162 = *((_OWORD *)v8 + 7);
            v163 = *((_OWORD *)v8 + 8);
            v7[144] = v8[144];
            *((_OWORD *)v7 + 7) = v162;
            *((_OWORD *)v7 + 8) = v163;
            *((_OWORD *)v7 + 6) = v161;
          }
          else
          {
            *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
            *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
            v180 = *((_QWORD *)v8 + 15);
            swift_bridgeObjectRetain();
            if (v180)
            {
              *((_QWORD *)v7 + 15) = v180;
              *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v180 - 8))((uint64_t)(v7 + 96), (uint64_t)(v8 + 96), v180);
              v181 = v8[144];
              *((_QWORD *)v7 + 17) = *((_QWORD *)v8 + 17);
              v7[144] = v181;
            }
            else
            {
              v230 = *((_OWORD *)v8 + 6);
              v231 = *((_OWORD *)v8 + 7);
              v232 = *((_OWORD *)v8 + 8);
              v7[144] = v8[144];
              *((_OWORD *)v7 + 7) = v231;
              *((_OWORD *)v7 + 8) = v232;
              *((_OWORD *)v7 + 6) = v230;
            }
          }
        }
        else if (v51 == 1)
        {
          v52 = *(void **)v8;
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
          *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
          v7[24] = v8[24];
          v7[25] = v8[25];
          v53 = *((_QWORD *)v8 + 4);
          v7[40] = v8[40];
          *((_QWORD *)v7 + 4) = v53;
          *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
          v54 = (void *)*((_QWORD *)v8 + 7);
          *((_QWORD *)v7 + 7) = v54;
          v7[64] = v8[64];
          v55 = *((_QWORD *)v8 + 10);
          v56 = v52;
          swift_bridgeObjectRetain();
          v57 = v54;
          if (v55 == 1)
          {
            v58 = *(_OWORD *)(v8 + 72);
            v59 = *(_OWORD *)(v8 + 104);
            *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
            *(_OWORD *)(v7 + 104) = v59;
            *(_OWORD *)(v7 + 72) = v58;
          }
          else
          {
            *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
            *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
            *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
            *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
            v178 = (void *)*((_QWORD *)v8 + 13);
            *((_QWORD *)v7 + 13) = v178;
            *((_QWORD *)v7 + 14) = *((_QWORD *)v8 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v179 = v178;
          }
          if (*((_QWORD *)v8 + 16) >= 0x11uLL)
          {
            *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
            *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
          }
          v7[136] = v8[136];
          v184 = (void *)*((_QWORD *)v8 + 18);
          if (v184)
          {
            *((_QWORD *)v7 + 18) = v184;
            *((_QWORD *)v7 + 19) = *((_QWORD *)v8 + 19);
            *((_QWORD *)v7 + 20) = *((_QWORD *)v8 + 20);
            v7[168] = v8[168];
            v7[169] = v8[169];
            v185 = *((_QWORD *)v8 + 22);
            v7[184] = v8[184];
            *((_QWORD *)v7 + 22) = v185;
            *((_QWORD *)v7 + 24) = *((_QWORD *)v8 + 24);
            v186 = (void *)*((_QWORD *)v8 + 25);
            *((_QWORD *)v7 + 25) = v186;
            v7[208] = v8[208];
            v187 = *((_QWORD *)v8 + 28);
            v188 = v184;
            swift_bridgeObjectRetain();
            v189 = v186;
            if (v187 == 1)
            {
              v190 = *(_OWORD *)(v8 + 216);
              v191 = *(_OWORD *)(v8 + 248);
              *(_OWORD *)(v7 + 232) = *(_OWORD *)(v8 + 232);
              *(_OWORD *)(v7 + 248) = v191;
              *(_OWORD *)(v7 + 216) = v190;
            }
            else
            {
              *((_QWORD *)v7 + 27) = *((_QWORD *)v8 + 27);
              *((_QWORD *)v7 + 28) = *((_QWORD *)v8 + 28);
              *((_QWORD *)v7 + 29) = *((_QWORD *)v8 + 29);
              *((_QWORD *)v7 + 30) = *((_QWORD *)v8 + 30);
              v215 = (void *)*((_QWORD *)v8 + 31);
              *((_QWORD *)v7 + 31) = v215;
              *((_QWORD *)v7 + 32) = *((_QWORD *)v8 + 32);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v216 = v215;
            }
            if (*((_QWORD *)v8 + 34) >= 0x11uLL)
            {
              *((_QWORD *)v7 + 33) = *((_QWORD *)v8 + 33);
              *((_QWORD *)v7 + 34) = *((_QWORD *)v8 + 34);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v7 + 264) = *(_OWORD *)(v8 + 264);
            }
            v7[280] = v8[280];
          }
          else
          {
            *((_OWORD *)v7 + 9) = *((_OWORD *)v8 + 9);
            v209 = *((_OWORD *)v8 + 10);
            v210 = *((_OWORD *)v8 + 11);
            v211 = *((_OWORD *)v8 + 13);
            *((_OWORD *)v7 + 12) = *((_OWORD *)v8 + 12);
            *((_OWORD *)v7 + 13) = v211;
            *((_OWORD *)v7 + 10) = v209;
            *((_OWORD *)v7 + 11) = v210;
            v212 = *((_OWORD *)v8 + 14);
            v213 = *((_OWORD *)v8 + 15);
            v214 = *((_OWORD *)v8 + 16);
            *(_OWORD *)(v7 + 265) = *(_OWORD *)(v8 + 265);
            *((_OWORD *)v7 + 15) = v213;
            *((_OWORD *)v7 + 16) = v214;
            *((_OWORD *)v7 + 14) = v212;
          }
        }
        else
        {
          v164 = *(void **)v8;
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
          *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
          v7[24] = v8[24];
          v7[25] = v8[25];
          v165 = *((_QWORD *)v8 + 4);
          v7[40] = v8[40];
          *((_QWORD *)v7 + 4) = v165;
          *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
          v166 = (void *)*((_QWORD *)v8 + 7);
          *((_QWORD *)v7 + 7) = v166;
          v7[64] = v8[64];
          v167 = *((_QWORD *)v8 + 10);
          v168 = v164;
          swift_bridgeObjectRetain();
          v169 = v166;
          if (v167 == 1)
          {
            v170 = *(_OWORD *)(v8 + 72);
            v171 = *(_OWORD *)(v8 + 104);
            *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
            *(_OWORD *)(v7 + 104) = v171;
            *(_OWORD *)(v7 + 72) = v170;
          }
          else
          {
            *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
            *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
            *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
            *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
            v182 = (void *)*((_QWORD *)v8 + 13);
            *((_QWORD *)v7 + 13) = v182;
            *((_QWORD *)v7 + 14) = *((_QWORD *)v8 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v183 = v182;
          }
          if (*((_QWORD *)v8 + 16) >= 0x11uLL)
          {
            *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
            *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
          }
          v7[136] = v8[136];
        }
        v7[281] = v51;
        goto LABEL_140;
      case 7u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        v7[24] = v8[24];
        v60 = *((_QWORD *)v8 + 4);
        v7[40] = v8[40];
        *((_QWORD *)v7 + 4) = v60;
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
        *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
        *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
        v61 = *((_QWORD *)v8 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v61 == 1)
        {
          *((_OWORD *)v7 + 5) = *((_OWORD *)v8 + 5);
          v62 = *((_OWORD *)v8 + 6);
          v63 = *((_OWORD *)v8 + 7);
          v64 = *((_OWORD *)v8 + 8);
          v7[144] = v8[144];
          *((_OWORD *)v7 + 7) = v63;
          *((_OWORD *)v7 + 8) = v64;
          *((_OWORD *)v7 + 6) = v62;
        }
        else
        {
          *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
          *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
          v99 = *((_QWORD *)v8 + 15);
          swift_bridgeObjectRetain();
          if (v99)
          {
            *((_QWORD *)v7 + 15) = v99;
            *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v99 - 8))((uint64_t)(v7 + 96), (uint64_t)(v8 + 96), v99);
            v100 = v8[144];
            *((_QWORD *)v7 + 17) = *((_QWORD *)v8 + 17);
            v7[144] = v100;
          }
          else
          {
            v175 = *((_OWORD *)v8 + 6);
            v176 = *((_OWORD *)v8 + 7);
            v177 = *((_OWORD *)v8 + 8);
            v7[144] = v8[144];
            *((_OWORD *)v7 + 7) = v176;
            *((_OWORD *)v7 + 8) = v177;
            *((_OWORD *)v7 + 6) = v175;
          }
        }
        goto LABEL_140;
      case 8u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        v65 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v66 = &v7[v65];
        v67 = &v8[v65];
        *(_QWORD *)v66 = *(_QWORD *)v67;
        *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
        *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
        *((_QWORD *)v66 + 3) = *((_QWORD *)v67 + 3);
        v68 = type metadata accessor for FormatCustomItem.Resolved();
        v69 = *(int *)(v68 + 24);
        v255 = &v66[v69];
        v258 = (int *)v68;
        v70 = &v67[v69];
        v71 = type metadata accessor for FormatCustomItem.Action();
        v253 = *(_QWORD *)(v71 - 8);
        v265 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v253 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v265(v70, 1, v71))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v255, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          v146 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v255, v70, v146);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v253 + 56))(v255, 0, 1, v71);
        }
        *(_QWORD *)&v66[v258[7]] = *(_QWORD *)&v67[v258[7]];
        swift_bridgeObjectRetain();
        goto LABEL_140;
      case 9u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
        v26 = *((_QWORD *)v8 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v26)
        {
          *((_QWORD *)v7 + 7) = v26;
          *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v26 - 8))((uint64_t)(v7 + 32), (uint64_t)(v8 + 32), v26);
        }
        else
        {
          v106 = *((_OWORD *)v8 + 2);
          v107 = *((_OWORD *)v8 + 3);
          *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
          *((_OWORD *)v7 + 2) = v106;
          *((_OWORD *)v7 + 3) = v107;
        }
        v108 = v7 + 72;
        v109 = (__int128 *)(v8 + 72);
        v110 = *((_QWORD *)v8 + 12);
        if (v110)
        {
          *((_QWORD *)v7 + 12) = v110;
          *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
          (**(void (***)(_OWORD *, __int128 *))(v110 - 8))(v108, v109);
        }
        else
        {
          v117 = *v109;
          v118 = *(_OWORD *)(v8 + 88);
          *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
          *v108 = v117;
          *(_OWORD *)(v7 + 88) = v118;
        }
        v119 = v7 + 112;
        v120 = (__int128 *)(v8 + 112);
        v121 = *((_QWORD *)v8 + 17);
        if (v121)
        {
          *((_QWORD *)v7 + 17) = v121;
          *((_QWORD *)v7 + 18) = *((_QWORD *)v8 + 18);
          (**(void (***)(_OWORD *, __int128 *))(v121 - 8))(v119, v120);
        }
        else
        {
          v132 = *v120;
          v133 = *((_OWORD *)v8 + 8);
          *((_QWORD *)v7 + 18) = *((_QWORD *)v8 + 18);
          *v119 = v132;
          *((_OWORD *)v7 + 8) = v133;
        }
        goto LABEL_140;
      case 0xAu:
        v270 = a3;
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        v73 = (int *)type metadata accessor for FeedEngagementBanner();
        v74 = v73[5];
        v75 = &v7[v74];
        v76 = &v8[v74];
        v77 = sub_1BB86EDAC();
        v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
        swift_bridgeObjectRetain();
        v78(v75, v76, v77);
        *(_QWORD *)&v7[v73[6]] = *(_QWORD *)&v8[v73[6]];
        v79 = v73[7];
        v80 = &v7[v79];
        v81 = &v8[v79];
        v82 = v81[8];
        *(_QWORD *)v80 = *(_QWORD *)v81;
        v80[8] = v82;
        v83 = v73[8];
        v84 = &v7[v83];
        v85 = &v8[v83];
        if (*((_QWORD *)v85 + 1) >= 0x11uLL)
        {
          *(_QWORD *)v84 = *(_QWORD *)v85;
          *((_QWORD *)v84 + 1) = *((_QWORD *)v85 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v84 = *(_OWORD *)v85;
        }
        a3 = v270;
        goto LABEL_140;
      case 0xBu:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        swift_retain();
        goto LABEL_140;
      case 0xCu:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        v27 = *((_QWORD *)v8 + 3);
        v7[32] = v8[32];
        *((_QWORD *)v7 + 3) = v27;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_140;
      case 0xDu:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v86 = *((_QWORD *)v8 + 1);
        v7[16] = v8[16];
        *((_QWORD *)v7 + 1) = v86;
        v271 = a3;
        if (*((_QWORD *)v8 + 4) >= 0x11uLL)
        {
          *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
        }
        *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
        v101 = (void *)*((_QWORD *)v8 + 8);
        *((_QWORD *)v7 + 8) = v101;
        v7[72] = v8[72];
        *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
        v102 = *((_QWORD *)v8 + 14);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v103 = v101;
        swift_bridgeObjectRetain();
        if (v102)
        {
          *((_QWORD *)v7 + 14) = v102;
          *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v102 - 8))((uint64_t)(v7 + 88), (uint64_t)(v8 + 88), v102);
        }
        else
        {
          v147 = *(_OWORD *)(v8 + 88);
          v148 = *(_OWORD *)(v8 + 104);
          *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
          *(_OWORD *)(v7 + 88) = v147;
          *(_OWORD *)(v7 + 104) = v148;
        }
        a3 = v271;
        v149 = v7 + 128;
        v150 = (__int128 *)(v8 + 128);
        v151 = *((_QWORD *)v8 + 19);
        if (v151)
        {
          *((_QWORD *)v7 + 19) = v151;
          *((_QWORD *)v7 + 20) = *((_QWORD *)v8 + 20);
          (**(void (***)(_OWORD *, __int128 *))(v151 - 8))(v149, v150);
        }
        else
        {
          v157 = *v150;
          v158 = *((_OWORD *)v8 + 9);
          *((_QWORD *)v7 + 20) = *((_QWORD *)v8 + 20);
          *v149 = v157;
          *((_OWORD *)v7 + 9) = v158;
        }
        goto LABEL_140;
      case 0xEu:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v28 = *((_QWORD *)v8 + 1);
        v7[16] = v8[16];
        *((_QWORD *)v7 + 1) = v28;
        if (*((_QWORD *)v8 + 4) >= 0x11uLL)
        {
          *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
        }
        *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_140;
      case 0xFu:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v87 = *((_QWORD *)v8 + 1);
        v7[16] = v8[16];
        *((_QWORD *)v7 + 1) = v87;
        if (*((_QWORD *)v8 + 4) >= 0x11uLL)
        {
          *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
        }
        *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        v104 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&v7[v104] = *(_QWORD *)&v8[v104];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v105 = (char *)&loc_1BB1159E0 + 4 * word_1BB8ED71C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x10u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
        *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
        *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
        v7[48] = v8[48];
        v7[49] = v8[49];
        *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
        *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
        *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
        *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
        *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
        *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
        *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
        v7[112] = v8[112];
        *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
        *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
        v7[136] = v8[136];
        *((_QWORD *)v7 + 18) = *((_QWORD *)v8 + 18);
        *((_QWORD *)v7 + 19) = *((_QWORD *)v8 + 19);
        *((_QWORD *)v7 + 20) = *((_QWORD *)v8 + 20);
        *((_QWORD *)v7 + 21) = *((_QWORD *)v8 + 21);
        v29 = *((_QWORD *)v8 + 22);
        v7[184] = v8[184];
        *((_QWORD *)v7 + 22) = v29;
        *((_QWORD *)v7 + 24) = *((_QWORD *)v8 + 24);
        *((_QWORD *)v7 + 25) = *((_QWORD *)v8 + 25);
        *((_QWORD *)v7 + 26) = *((_QWORD *)v8 + 26);
        v30 = *((_QWORD *)v8 + 27);
        v7[224] = v8[224];
        *((_QWORD *)v7 + 27) = v30;
        v251 = *((_QWORD *)v8 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v251 >= 0x11)
        {
          *((_QWORD *)v7 + 29) = *((_QWORD *)v8 + 29);
          *((_QWORD *)v7 + 30) = *((_QWORD *)v8 + 30);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 232) = *(_OWORD *)(v8 + 232);
        }
LABEL_140:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  v233 = a3[8];
  v234 = (_QWORD *)((char *)a1 + v233);
  v235 = (_QWORD *)((char *)a2 + v233);
  *v234 = *v235;
  v234[1] = v235[1];
  v234[2] = v235[2];
  v234[3] = v235[3];
  v236 = a3[9];
  v237 = (_QWORD *)((char *)a1 + v236);
  v238 = (_QWORD *)((char *)a2 + v236);
  *v237 = *v238;
  v237[1] = v238[1];
  v237[2] = v238[2];
  v237[3] = v238[3];
  return a1;
}

_OWORD *initializeWithTake for FormatItemNodeLayoutContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int *v86;
  uint64_t v87;
  char *v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _OWORD *v110;
  _OWORD *v111;
  __int128 v112;
  _OWORD *v113;
  _OWORD *v114;
  __int128 v115;
  _OWORD *result;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  char *__dst;
  int *v122;
  char *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v11 = (int *)type metadata accessor for FeedBannerAd();
      v12 = v11[5];
      v13 = &v8[v12];
      v14 = &v9[v12];
      v15 = sub_1BB8721C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
      v16 = v11[7];
      v17 = &v8[v16];
      v18 = &v9[v16];
      v17[8] = v18[8];
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_OWORD *)&v8[v11[8]] = *(_OWORD *)&v9[v11[8]];
      goto LABEL_40;
    case 3u:
      v128 = v3;
      v124 = v5;
      v126 = v4;
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
      v8[24] = v9[24];
      *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      v8[56] = v9[56];
      v19 = (int *)type metadata accessor for FeedHeadline(0);
      v20 = v19[10];
      v21 = &v8[v20];
      v22 = &v9[v20];
      *v21 = v9[v20];
      v21[1] = v9[v20 + 1];
      v23 = (int *)type metadata accessor for FeedHeadline.State(0);
      v24 = v23[6];
      v25 = &v21[v24];
      v26 = &v22[v24];
      v27 = (int *)type metadata accessor for SharedItem();
      v28 = *((_QWORD *)v27 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
      {
        v29 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v63 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v25, v26, v63);
        v25[v27[5]] = v26[v27[5]];
        *(_QWORD *)&v25[v27[6]] = *(_QWORD *)&v26[v27[6]];
        v64 = v27[7];
        v123 = &v25[v64];
        v65 = &v26[v64];
        v66 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v123, v65, v66);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
      }
      v4 = v126;
      v21[v23[7]] = v22[v23[7]];
      v21[v23[8]] = v22[v23[8]];
      v21[v23[9]] = v22[v23[9]];
      v21[v23[10]] = v22[v23[10]];
      v67 = v19[11];
      v68 = &v8[v67];
      v69 = &v9[v67];
      v70 = sub_1BB871B24();
      v71 = *(_QWORD *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      }
      v5 = v124;
      v3 = v128;
      *(_OWORD *)&v8[v19[12]] = *(_OWORD *)&v9[v19[12]];
      v81 = v19[13];
      v82 = *(_QWORD *)&v9[v81];
      if (v82 == 2)
        v82 = 2;
      *(_QWORD *)&v8[v81] = v82;
      *(_QWORD *)&v8[v19[14]] = *(_QWORD *)&v9[v19[14]];
      goto LABEL_40;
    case 4u:
      v129 = v3;
      v30 = *((_QWORD *)v9 + 1);
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *((_QWORD *)v8 + 1) = v30;
      v8[16] = v9[16];
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      v31 = (int *)type metadata accessor for FeedWebEmbed();
      v32 = v31[8];
      v33 = &v8[v32];
      v34 = &v9[v32];
      v35 = sub_1BB86C67C();
      v36 = *(_QWORD *)(v35 - 8);
      v120 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v120(v33, v34, v35);
      v122 = v31;
      v37 = v31[9];
      v38 = &v8[v37];
      v39 = &v9[v37];
      v125 = v5;
      v127 = v4;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(&v9[v37], 1, v35))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v120(v38, v39, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v38, 0, 1, v35);
      }
      v73 = v35;
      *(_QWORD *)&v8[v31[10]] = *(_QWORD *)&v9[v31[10]];
      *(_QWORD *)&v8[v31[11]] = *(_QWORD *)&v9[v31[11]];
      v74 = v31[12];
      v75 = &v8[v74];
      v76 = &v9[v74];
      v77 = (int *)type metadata accessor for FeedHeadline(0);
      v78 = *((_QWORD *)v77 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v78 + 48))(v76, 1, v77))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        v118 = v78;
        v119 = v73;
        *(_OWORD *)v75 = *(_OWORD *)v76;
        *((_QWORD *)v75 + 2) = *((_QWORD *)v76 + 2);
        v75[24] = v76[24];
        *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
        *(_OWORD *)(v75 + 40) = *(_OWORD *)(v76 + 40);
        v75[56] = v76[56];
        v83 = v77[10];
        v84 = &v75[v83];
        v85 = &v76[v83];
        *v84 = v76[v83];
        v84[1] = v76[v83 + 1];
        v86 = (int *)type metadata accessor for FeedHeadline.State(0);
        v87 = v86[6];
        __dst = &v84[v87];
        v88 = &v85[v87];
        v89 = (int *)type metadata accessor for SharedItem();
        v117 = *((_QWORD *)v89 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v117 + 48))(v88, 1, v89))
        {
          v90 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v88, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        }
        else
        {
          v91 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(__dst, v88, v91);
          __dst[v89[5]] = v88[v89[5]];
          *(_QWORD *)&__dst[v89[6]] = *(_QWORD *)&v88[v89[6]];
          v120(&__dst[v89[7]], &v88[v89[7]], v119);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v117 + 56))(__dst, 0, 1, v89);
        }
        v84[v86[7]] = v85[v86[7]];
        v84[v86[8]] = v85[v86[8]];
        v84[v86[9]] = v85[v86[9]];
        v84[v86[10]] = v85[v86[10]];
        v92 = v77[11];
        v93 = &v75[v92];
        v94 = &v76[v92];
        v95 = sub_1BB871B24();
        v96 = *(_QWORD *)(v95 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v93, v94, v95);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
        }
        v31 = v122;
        v73 = v119;
        *(_OWORD *)&v75[v77[12]] = *(_OWORD *)&v76[v77[12]];
        v98 = v77[13];
        v99 = *(_QWORD *)&v76[v98];
        if (v99 == 2)
          v99 = 2;
        *(_QWORD *)&v75[v98] = v99;
        *(_QWORD *)&v75[v77[14]] = *(_QWORD *)&v76[v77[14]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v118 + 56))(v75, 0, 1, v77);
      }
      v5 = v125;
      v100 = v31;
      v101 = v31[13];
      v102 = &v8[v101];
      v103 = &v9[v101];
      v104 = type metadata accessor for WebEmbedDataVisualization();
      v105 = *(_QWORD *)(v104 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        v4 = v127;
        v3 = v129;
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)v102 = *(_OWORD *)v103;
          v107 = type metadata accessor for GenericDataVisualization();
          v120(&v102[*(int *)(v107 + 20)], &v103[*(int *)(v107 + 20)], v73);
          *(_QWORD *)&v102[*(int *)(v107 + 24)] = *(_QWORD *)&v103[*(int *)(v107 + 24)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v102, v103, *(_QWORD *)(v105 + 64));
        }
        v3 = v129;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
        v4 = v127;
      }
      v8[v100[14]] = v9[v100[14]];
      goto LABEL_40;
    case 8u:
      v130 = v3;
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v41 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v42 = &v8[v41];
      v43 = &v9[v41];
      v44 = *(_OWORD *)&v9[v41 + 16];
      *(_OWORD *)v42 = *(_OWORD *)&v9[v41];
      *((_OWORD *)v42 + 1) = v44;
      v45 = type metadata accessor for FormatCustomItem.Resolved();
      v46 = *(int *)(v45 + 24);
      v47 = &v42[v46];
      v48 = &v43[v46];
      v49 = type metadata accessor for FormatCustomItem.Action();
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        v80 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v47, v48, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      }
      *(_QWORD *)&v42[*(int *)(v45 + 28)] = *(_QWORD *)&v43[*(int *)(v45 + 28)];
      swift_storeEnumTagMultiPayload();
      v3 = v130;
      break;
    case 0xAu:
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v52 = (int *)type metadata accessor for FeedEngagementBanner();
      v53 = v52[5];
      v54 = &v8[v53];
      v55 = &v9[v53];
      v56 = sub_1BB86EDAC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
      *(_QWORD *)&v8[v52[6]] = *(_QWORD *)&v9[v52[6]];
      v57 = v52[7];
      v58 = &v8[v57];
      v59 = &v9[v57];
      v58[8] = v59[8];
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *(_OWORD *)&v8[v52[8]] = *(_OWORD *)&v9[v52[8]];
LABEL_40:
      swift_storeEnumTagMultiPayload();
      break;
    case 0xFu:
      v60 = *((_QWORD *)v9 + 1);
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *((_QWORD *)v8 + 1) = v60;
      v8[16] = v9[16];
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      v61 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)&v8[v61] = *(_QWORD *)&v9[v61];
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      v62 = (char *)&loc_1BB1174A4 + 4 * word_1BB8ED732[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    default:
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      break;
  }
  v108 = *(int *)(v3 + 32);
  v109 = *(int *)(v3 + 36);
  v110 = (_OWORD *)((char *)v5 + v108);
  v111 = (_OWORD *)((char *)v4 + v108);
  v112 = v111[1];
  *v110 = *v111;
  v110[1] = v112;
  v113 = (_OWORD *)((char *)v5 + v109);
  v114 = (_OWORD *)((char *)v4 + v109);
  v115 = v114[1];
  *v113 = *v114;
  v113[1] = v115;
  return v5;
}

_QWORD *assignWithTake for FormatItemNodeLayoutContext(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _OWORD *v109;
  _OWORD *v110;
  __int128 v111;
  _OWORD *v112;
  _OWORD *v113;
  __int128 v114;
  _QWORD *result;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  char *__dst;
  int *v120;
  int *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  int *v126;
  char *v127;
  char *v128;
  int *v129;
  int *v130;
  int *v131;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = a3[7];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_1BA4A2E80((uint64_t)a1 + v7, type metadata accessor for FeedItem);
    v10 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v11 = (int *)type metadata accessor for FeedBannerAd();
        v12 = v11[5];
        v13 = &v8[v12];
        v14 = &v9[v12];
        v15 = sub_1BB8721C0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
        v16 = v11[7];
        v17 = &v8[v16];
        v18 = &v9[v16];
        v17[8] = v18[8];
        *(_QWORD *)v17 = *(_QWORD *)v18;
        *(_OWORD *)&v8[v11[8]] = *(_OWORD *)&v9[v11[8]];
        goto LABEL_41;
      case 3u:
        v129 = a3;
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
        v8[24] = v9[24];
        *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
        v8[56] = v9[56];
        v126 = (int *)type metadata accessor for FeedHeadline(0);
        v19 = v126[10];
        v20 = &v8[v19];
        v21 = &v9[v19];
        *v20 = v9[v19];
        v20[1] = v9[v19 + 1];
        v22 = (int *)type metadata accessor for FeedHeadline.State(0);
        v23 = v22[6];
        v24 = &v20[v23];
        v25 = &v21[v23];
        v26 = (int *)type metadata accessor for SharedItem();
        v124 = *((_QWORD *)v26 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v124 + 48))(v25, 1, v26))
        {
          v27 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          v63 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v24, v25, v63);
          v24[v26[5]] = v25[v26[5]];
          *(_QWORD *)&v24[v26[6]] = *(_QWORD *)&v25[v26[6]];
          v64 = v26[7];
          v122 = &v24[v64];
          v65 = &v25[v64];
          v66 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v122, v65, v66);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v124 + 56))(v24, 0, 1, v26);
        }
        v20[v22[7]] = v21[v22[7]];
        v20[v22[8]] = v21[v22[8]];
        v20[v22[9]] = v21[v22[9]];
        v20[v22[10]] = v21[v22[10]];
        a3 = v129;
        v67 = v126[11];
        v68 = &v8[v67];
        v69 = &v9[v67];
        v70 = sub_1BB871B24();
        v71 = *(_QWORD *)(v70 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
        }
        *(_OWORD *)&v8[v126[12]] = *(_OWORD *)&v9[v126[12]];
        v82 = v126[13];
        v83 = *(_QWORD *)&v9[v82];
        if (v83 == 2)
          v83 = 2;
        *(_QWORD *)&v8[v82] = v83;
        *(_QWORD *)&v8[v126[14]] = *(_QWORD *)&v9[v126[14]];
        goto LABEL_41;
      case 4u:
        v130 = a3;
        v28 = *((_QWORD *)v9 + 1);
        *(_QWORD *)v8 = *(_QWORD *)v9;
        *((_QWORD *)v8 + 1) = v28;
        v8[16] = v9[16];
        *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
        v29 = type metadata accessor for FeedWebEmbed();
        v30 = *(int *)(v29 + 32);
        v31 = &v8[v30];
        v32 = &v9[v30];
        v33 = sub_1BB86C67C();
        v34 = *(_QWORD *)(v33 - 8);
        v35 = v31;
        v36 = (int *)v29;
        v125 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
        v125(v35, v32, v33);
        v37 = *(int *)(v29 + 36);
        v127 = v8;
        v38 = &v8[v37];
        v39 = &v9[v37];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(&v9[v37], 1, v33))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v125(v38, v39, v33);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v38, 0, 1, v33);
        }
        v73 = v33;
        *(_QWORD *)&v127[v36[10]] = *(_QWORD *)&v9[v36[10]];
        *(_QWORD *)&v127[v36[11]] = *(_QWORD *)&v9[v36[11]];
        v74 = v36[12];
        v75 = &v127[v74];
        v76 = &v9[v74];
        v77 = (int *)type metadata accessor for FeedHeadline(0);
        v78 = *((_QWORD *)v77 - 1);
        v123 = v73;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v78 + 48))(v76, 1, v77))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
          v80 = v127;
          a3 = v130;
        }
        else
        {
          v118 = v78;
          v120 = v36;
          *(_OWORD *)v75 = *(_OWORD *)v76;
          *((_QWORD *)v75 + 2) = *((_QWORD *)v76 + 2);
          v75[24] = v76[24];
          *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
          *(_OWORD *)(v75 + 40) = *(_OWORD *)(v76 + 40);
          v75[56] = v76[56];
          v84 = v77[10];
          v85 = &v75[v84];
          v86 = &v76[v84];
          *v85 = v76[v84];
          v85[1] = v76[v84 + 1];
          v117 = (int *)type metadata accessor for FeedHeadline.State(0);
          v87 = v117[6];
          __dst = &v85[v87];
          v88 = &v86[v87];
          v89 = (int *)type metadata accessor for SharedItem();
          v116 = *((_QWORD *)v89 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v116 + 48))(v88, 1, v89))
          {
            v90 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v88, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
          }
          else
          {
            v91 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(__dst, v88, v91);
            __dst[v89[5]] = v88[v89[5]];
            *(_QWORD *)&__dst[v89[6]] = *(_QWORD *)&v88[v89[6]];
            v125(&__dst[v89[7]], &v88[v89[7]], v123);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v116 + 56))(__dst, 0, 1, v89);
          }
          v80 = v127;
          v85[v117[7]] = v86[v117[7]];
          v85[v117[8]] = v86[v117[8]];
          v85[v117[9]] = v86[v117[9]];
          v85[v117[10]] = v86[v117[10]];
          v92 = v77[11];
          v128 = &v75[v92];
          v93 = &v76[v92];
          v94 = sub_1BB871B24();
          v95 = *(_QWORD *)(v94 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v128, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v128, v93, v94);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v128, 0, 1, v94);
          }
          v36 = v120;
          *(_OWORD *)&v75[v77[12]] = *(_OWORD *)&v76[v77[12]];
          v97 = v77[13];
          v98 = *(_QWORD *)&v76[v97];
          if (v98 == 2)
            v98 = 2;
          *(_QWORD *)&v75[v97] = v98;
          *(_QWORD *)&v75[v77[14]] = *(_QWORD *)&v76[v77[14]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v118 + 56))(v75, 0, 1, v77);
          a3 = v130;
        }
        v99 = v36[13];
        v100 = &v80[v99];
        v101 = &v9[v99];
        v102 = type metadata accessor for WebEmbedDataVisualization();
        v103 = *(_QWORD *)(v102 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)v100 = *(_OWORD *)v101;
            v121 = v36;
            v105 = type metadata accessor for GenericDataVisualization();
            v125(&v100[*(int *)(v105 + 20)], &v101[*(int *)(v105 + 20)], v123);
            v106 = *(int *)(v105 + 24);
            v36 = v121;
            *(_QWORD *)&v100[v106] = *(_QWORD *)&v101[v106];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v100, v101, *(_QWORD *)(v103 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
        }
        v80[v36[14]] = v9[v36[14]];
        goto LABEL_41;
      case 8u:
        v131 = a3;
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v41 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v42 = &v8[v41];
        v43 = &v9[v41];
        v44 = *(_OWORD *)&v9[v41 + 16];
        *(_OWORD *)v42 = *(_OWORD *)&v9[v41];
        *((_OWORD *)v42 + 1) = v44;
        v45 = type metadata accessor for FormatCustomItem.Resolved();
        v46 = *(int *)(v45 + 24);
        v47 = &v42[v46];
        v48 = &v43[v46];
        v49 = type metadata accessor for FormatCustomItem.Action();
        v50 = *(_QWORD *)(v49 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          v81 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v47, v48, v81);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
        }
        a3 = v131;
        *(_QWORD *)&v42[*(int *)(v45 + 28)] = *(_QWORD *)&v43[*(int *)(v45 + 28)];
        goto LABEL_41;
      case 0xAu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v52 = (int *)type metadata accessor for FeedEngagementBanner();
        v53 = v52[5];
        v54 = &v8[v53];
        v55 = &v9[v53];
        v56 = sub_1BB86EDAC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
        *(_QWORD *)&v8[v52[6]] = *(_QWORD *)&v9[v52[6]];
        v57 = v52[7];
        v58 = &v8[v57];
        v59 = &v9[v57];
        v58[8] = v59[8];
        *(_QWORD *)v58 = *(_QWORD *)v59;
        *(_OWORD *)&v8[v52[8]] = *(_OWORD *)&v9[v52[8]];
LABEL_41:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        v60 = *((_QWORD *)v9 + 1);
        *(_QWORD *)v8 = *(_QWORD *)v9;
        *((_QWORD *)v8 + 1) = v60;
        v8[16] = v9[16];
        *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
        v61 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&v8[v61] = *(_QWORD *)&v9[v61];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v62 = (char *)&loc_1BB11887C + 4 * word_1BB8ED748[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
  }
  v107 = a3[8];
  v108 = a3[9];
  v109 = (_OWORD *)((char *)a1 + v107);
  v110 = (_OWORD *)((char *)a2 + v107);
  v111 = v110[1];
  *v109 = *v110;
  v109[1] = v111;
  v112 = (_OWORD *)((char *)a1 + v108);
  v113 = (_OWORD *)((char *)a2 + v108);
  v114 = v113[1];
  *v112 = *v113;
  v112[1] = v114;
  return a1;
}

uint64_t sub_1BB1197D4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FeedItem(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

char *sub_1BB119850(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FeedItem(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_1BB1198C8(char *a1)
{
  sub_1BB7FA48C(*a1);
}

void sub_1BB1198D4()
{
  char *v0;

  sub_1BA8D3F3C(*v0);
}

void sub_1BB1198DC()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB119920()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB119998(uint64_t a1)
{
  char *v1;

  sub_1BAB0982C(a1, *v1);
}

uint64_t sub_1BB1199A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB11B978();
  *a1 = result;
  return result;
}

uint64_t sub_1BB1199CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB119A04 + 4 * byte_1BB8ED7E4[*v0]))();
}

void sub_1BB119A04(_QWORD *a1@<X8>)
{
  *a1 = 0x706D655468676968;
  a1[1] = 0xEF65727574617265;
}

void sub_1BB119A2C(char *a1@<X8>)
{
  strcpy(a1, "lowTemperature");
  a1[15] = -18;
}

void sub_1BB119A54(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x80000001BB95D000;
}

uint64_t sub_1BB119A74()
{
  sub_1BB11B7BC();
  return sub_1BB872D60();
}

uint64_t sub_1BB119AD0()
{
  sub_1BB11B7BC();
  return sub_1BB872D0C();
}

void sub_1BB119B1C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72520C0;
}

uint64_t sub_1BB119B2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatWeatherBinding.Temperature.init(from:)(a1, a2);
}

void sub_1BB119B40(_QWORD *a1)
{
  FormatWeatherBinding.Temperature.encode(to:)(a1);
}

void sub_1BB119B58(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[10];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v38[9] = a3;
  v41 = a2;
  v39 = a1;
  v40 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v38[7] = (char *)v38 - v7;
  MEMORY[0x1E0C80A78](v8);
  v38[6] = (char *)v38 - v9;
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78]((char *)v38 - v13);
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v38[0] = (char *)v38 - v16;
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  v38[1] = (char *)v38 - v23;
  MEMORY[0x1E0C80A78](v24);
  v38[4] = (char *)v38 - v25;
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  v38[3] = (char *)v38 - v29;
  MEMORY[0x1E0C80A78](v30);
  MEMORY[0x1E0C80A78](v31);
  v38[2] = (char *)v38 - v32;
  MEMORY[0x1E0C80A78](v33);
  v38[5] = (char *)v38 - v34;
  MEMORY[0x1E0C80A78](v35);
  MEMORY[0x1E0C80A78](v36);
  MEMORY[0x1E0C80A78](v37);
  __asm { BR              X10 }
}

uint64_t sub_1BB119EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t result;

  sub_1BAC86C64(0);
  v12 = *(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB8832C0;
  v16 = (_QWORD *)(v15 + v14);
  sub_1BAA63AB8(*(_QWORD *)(v10 - 72), v9);
  v17 = v9 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v6);
  v18 = *(void **)(v10 - 112);
  v19 = sub_1BB017998(v17, v6, 1, 0, 0);
  *(_QWORD *)(v10 - 96) = v15;
  if (v18)
  {

    v21 = 0;
    v22 = 0;
  }
  else
  {
    v21 = (uint64_t)v19;
    v22 = v20;
  }
  sub_1BAAF7494(0xD000000000000014, 0x80000001BB975DD0, v21, v22, v16);
  sub_1BA8DAD20(v6);
  sub_1BAA63AFC(v9);
  sub_1BAA63AB8(*(_QWORD *)(v10 - 72), v7);
  v23 = v7 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v6);
  v24 = sub_1BB017998(v23, v6, 1, 0, 64);
  sub_1BAAF7494(0xD00000000000001FLL, 0x80000001BB975DF0, (uint64_t)v24, v25, (_QWORD *)((char *)v16 + v13));
  sub_1BA8DAD20(v6);
  sub_1BAA63AFC(v7);
  sub_1BAA63AB8(*(_QWORD *)(v10 - 72), v8);
  v26 = v8 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v6);
  v27 = sub_1BB017998(v26, v6, 0, 0, 64);
  v28 = *(_QWORD *)(v10 - 152);
  sub_1BAAF7494(0xD00000000000001FLL, 0x80000001BB975E10, (uint64_t)v27, v29, (_QWORD *)((char *)v16 + 2 * v13));
  sub_1BA8DAD20(v6);
  sub_1BAA63AFC(v8);
  v30 = *(_QWORD *)(v10 - 136);
  sub_1BAA63AB8(*(_QWORD *)(v10 - 72), v30);
  v31 = v30 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v6);
  v32 = sub_1BB017998(v31, v6, 1, 0, 128);
  v33 = *(_QWORD *)(v10 - 160);
  sub_1BAAF7494(0xD000000000000022, 0x80000001BB975E30, (uint64_t)v32, v34, (_QWORD *)((char *)v16 + 3 * v13));
  sub_1BA8DAD20(v6);
  sub_1BAA63AFC(*(_QWORD *)(v10 - 136));
  sub_1BAA63AB8(*(_QWORD *)(v10 - 72), v33);
  v35 = v33 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v6);
  v36 = sub_1BB017998(v35, v6, 0, 0, 128);
  sub_1BAAF7494(0xD000000000000022, 0x80000001BB975E60, (uint64_t)v36, v37, (_QWORD *)((char *)v16 + 4 * v13));
  sub_1BA8DAD20(v6);
  sub_1BAA63AFC(v33);
  sub_1BAA63AB8(*(_QWORD *)(v10 - 72), a6);
  v38 = a6 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v6);
  v39 = sub_1BB017998(v38, v6, 1, 0, 192);
  sub_1BAAF7494(0xD00000000000001ELL, 0x80000001BB975E90, (uint64_t)v39, v40, (_QWORD *)((char *)v16 + 5 * v13));
  sub_1BA8DAD20(v6);
  sub_1BAA63AFC(a6);
  sub_1BAA63AB8(*(_QWORD *)(v10 - 72), v28);
  v41 = v28 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v6);
  v42 = sub_1BB017998(v41, v6, 0, 0, 192);
  v43 = *(_QWORD *)(v10 - 96);
  sub_1BAAF7494(0xD00000000000001ELL, 0x80000001BB975EB0, (uint64_t)v42, v44, (_QWORD *)((char *)v16 + 6 * v13));
  v45 = *(_QWORD **)(v10 - 104);
  sub_1BA8DAD20(v6);
  result = sub_1BAA63AFC(v28);
  *v45 = v43;
  return result;
}

void _s8NewsFeed20FormatWeatherBindingV11TemperatureO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB11B1F0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  _QWORD v9[2];
  char v10;

  if ((v3 & 0x30) != 0)
  {
    sub_1BB11B4A0(v2, v1, v0);
    sub_1BB11B4A0(v5, v4, v3);
    sub_1BB11B4A0(v2, v1, v0);
    sub_1BB11B4A0(v5, v4, v3);
    v7 = 0;
  }
  else
  {
    v9[0] = v2;
    v9[1] = v1;
    v10 = v0;
    sub_1BB11B4A0(v5, v4, v3);
    sub_1BB11B4A0(v2, v1, v0);
    sub_1BB11B4A0(v2, v1, v0);
    sub_1BB11B4A0(v5, v4, v3);
    _s8NewsFeed17FormatTemperatureO2eeoiySbAC_ACtFZ_0((uint64_t)v9);
    v7 = v6;
    sub_1BB11B4A0(v2, v1, v0);
    sub_1BB11B4A0(v5, v4, v3);
    sub_1BB11B4A0(v5, v4, v3);
    sub_1BB11B4A0(v2, v1, v0);
  }
  return v7 & 1;
}

unint64_t sub_1BB11B394(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB11B3B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB11B3B8()
{
  unint64_t result;

  result = qword_1EF2BBB50;
  if (!qword_1EF2BBB50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Temperature, &type metadata for FormatWeatherBinding.Temperature);
    atomic_store(result, (unint64_t *)&qword_1EF2BBB50);
  }
  return result;
}

unint64_t sub_1BB11B3FC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE95524();
  a1[2] = sub_1BAEF29F8();
  result = sub_1BB11B430();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB11B430()
{
  unint64_t result;

  result = qword_1EF2BBB58;
  if (!qword_1EF2BBB58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Temperature, &type metadata for FormatWeatherBinding.Temperature);
    atomic_store(result, (unint64_t *)&qword_1EF2BBB58);
  }
  return result;
}

uint64_t _s11TemperatureOwxx(uint64_t a1)
{
  return sub_1BB11B4A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t sub_1BB11B4A0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return ((uint64_t (*)(void))((char *)sub_1BB11B4BC + 4 * byte_1BB8ED7F0[(a3 >> 4) & 3]))();
}

uint64_t sub_1BB11B4BC(uint64_t a1, uint64_t a2, int a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD))
{
  return a4(a1, a2, a3 & 0xFFFFFFCF);
}

uint64_t _s11TemperatureOwCP_1(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1BB11B4A0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11TemperatureOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1BB11B4A0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BB11B4A0(v6, v7, v8);
  return a1;
}

uint64_t _s11TemperatureOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BB11B4A0(v4, v5, v6);
  return a1;
}

uint64_t sub_1BB11B5C4(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 16) >> 4) & 3;
}

uint64_t sub_1BB11B5D0(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0xCFu;
  return result;
}

uint64_t sub_1BB11B5E0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 0xC1 | (16 * (a2 & 3));
  return result;
}

ValueMetadata *type metadata accessor for FormatWeatherBinding.Temperature()
{
  return &type metadata for FormatWeatherBinding.Temperature;
}

uint64_t _s11TemperatureO10CodingTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB11B654 + 4 * byte_1BB8ED7F9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB11B688 + 4 * byte_1BB8ED7F4[v4]))();
}

uint64_t sub_1BB11B688(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB11B690(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB11B698);
  return result;
}

uint64_t sub_1BB11B6A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB11B6ACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB11B6B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB11B6B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11TemperatureO10CodingTypeOMa()
{
  return &_s11TemperatureO10CodingTypeON;
}

unint64_t sub_1BB11B6D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BBB60;
  if (!qword_1EF2BBB60)
  {
    sub_1BB11B720();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BBB60);
  }
  return result;
}

void sub_1BB11B720()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BBB68)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BBB68);
  }
}

unint64_t sub_1BB11B778()
{
  unint64_t result;

  result = qword_1EF2BBB70;
  if (!qword_1EF2BBB70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ED9C0, &_s11TemperatureO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2BBB70);
  }
  return result;
}

unint64_t sub_1BB11B7BC()
{
  unint64_t result;

  result = qword_1EF2BBB78;
  if (!qword_1EF2BBB78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ED948, &_s11TemperatureO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2BBB78);
  }
  return result;
}

double sub_1BB11B800@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;
  char v8;
  _OWORD v9[2];
  uint64_t v10;

  *(_QWORD *)&v9[0] = MEMORY[0x1E0DEE9D8];
  v8 = 0;
  sub_1BB119B58((uint64_t)&v8, a1, (uint64_t)&v7);
  sub_1BB383BA8(v7);
  v8 = 1;
  sub_1BB119B58((uint64_t)&v8, a1, (uint64_t)&v7);
  sub_1BB383BA8(v7);
  v8 = 2;
  sub_1BB119B58((uint64_t)&v8, a1, (uint64_t)&v7);
  sub_1BB383BA8(v7);
  v8 = 3;
  sub_1BB119B58((uint64_t)&v8, a1, (uint64_t)&v7);
  sub_1BB383BA8(v7);
  v4 = sub_1BA97461C(*(uint64_t *)&v9[0]);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x74617265706D6554, 0xEB00000000657275, 0, 0, v4, v9);
  swift_bridgeObjectRelease();
  result = *(double *)v9;
  v6 = v9[1];
  *(_OWORD *)a2 = v9[0];
  *(_OWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 32) = v10;
  return result;
}

uint64_t sub_1BB11B978()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v36[2];
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v39 = a8;
  v42 = a7;
  v43 = a3;
  v37 = a6;
  v38 = a10;
  v15 = type metadata accessor for WebEmbedDataVisualization();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v36[0] = (uint64_t)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v36 - v20;
  *(_QWORD *)a9 = 2048;
  *(_QWORD *)(a9 + 8) = 0;
  *(_BYTE *)(a9 + 16) = 1;
  *(_OWORD *)(a9 + 24) = xmmword_1BB8E2880;
  *(_QWORD *)(a9 + 40) = a1;
  *(_QWORD *)(a9 + 48) = a2;
  v22 = (int *)type metadata accessor for FeedWebEmbed();
  v23 = a9 + v22[8];
  v24 = sub_1BB86C67C();
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v40 = *(_QWORD *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v23, v43, v24);
  v26 = a9 + v22[9];
  v41 = a4;
  v27 = a4;
  v28 = v37;
  sub_1BA5E01A4(v27, v26, (unint64_t *)&qword_1ED3D2E70, v25);
  v29 = v22[10];
  v36[1] = a5;
  *(_QWORD *)(a9 + v29) = a5;
  *(_QWORD *)(a9 + v22[11]) = v28;
  sub_1BA5E01A4(v42, a9 + v22[12], (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  v30 = v39;
  sub_1BA5E01A4(v39, a9 + v22[13], &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  v31 = v22[14];
  v32 = v30;
  *(_BYTE *)(a9 + v31) = v38 & 1;
  sub_1BA5E01A4(v30, (uint64_t)v21, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15) == 1)
  {
    sub_1BA5C699C((uint64_t)v21, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    v33 = (uint64_t *)v36[0];
    sub_1BA4C2DD8((uint64_t)v21, v36[0], (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v34 = *v33;
      swift_retain();
      swift_retain();
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      __asm { BR              X10 }
    }
    swift_retain();
    swift_retain();
    sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    swift_release();
    swift_release();
  }
  sub_1BA5C699C(v32, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  sub_1BA5C699C(v42, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  sub_1BA5C699C(v41, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v43, v24);
}

uint64_t sub_1BB11BDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for WebEmbedDataVisualization();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - v6;
  v8 = type metadata accessor for FeedWebEmbed();
  sub_1BA5E01A4(v0 + *(int *)(v8 + 52), (uint64_t)v7, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1BA5C699C((uint64_t)v7, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v9 = *v4;
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      __asm { BR              X10 }
    }
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB11C124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for WebEmbedDataVisualization();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - v6;
  v8 = type metadata accessor for FeedWebEmbed();
  sub_1BA5E01A4(v0 + *(int *)(v8 + 52), (uint64_t)v7, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1BA5C699C((uint64_t)v7, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v9 = *v4;
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      __asm { BR              X10 }
    }
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t FeedWebEmbed.debugIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (id *)((char *)&v13 - v5);
  sub_1BA5E01A4(v0 + *(int *)(v1 + 48), (uint64_t)&v13 - v5, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  v7 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7) == 1)
  {
    sub_1BA5C699C((uint64_t)v6, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    sub_1BA4C2DD8(v0, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
LABEL_4:
    v9 = sub_1BB86C538();
    goto LABEL_5;
  }
  v8 = objc_msgSend(v6[5], sel_identifier);
  v9 = sub_1BB8729A0();
  v11 = v10;

  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedHeadline);
  sub_1BA4C2DD8(v0, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  if (!v11)
    goto LABEL_4;
LABEL_5:
  sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  return v9;
}

uint64_t FeedWebEmbed.debugSourceName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v10;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (id *)((char *)&v10 - v2);
  v4 = type metadata accessor for FeedWebEmbed();
  sub_1BA5E01A4(v0 + *(int *)(v4 + 48), (uint64_t)v3, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  v5 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1BA5C699C((uint64_t)v3, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    v7 = objc_msgSend(v3[5], sel_sourceChannel);
    v6 = (uint64_t)v7;
    if (v7)
    {
      v8 = objc_msgSend(v7, sel_name);
      swift_unknownObjectRelease();
      v6 = sub_1BB8729A0();

    }
    sub_1BA4A2E80((uint64_t)v3, type metadata accessor for FeedHeadline);
  }
  return v6;
}

uint64_t FeedWebEmbed.debugTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (id *)((char *)&v15 - v6);
  sub_1BA5E01A4(v1 + *(int *)(v2 + 48), (uint64_t)&v15 - v6, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  v8 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_1BA5C699C((uint64_t)v7, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
LABEL_7:
    sub_1BA4C2DD8(v1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
LABEL_8:
    v11 = sub_1BB86C538();
    goto LABEL_9;
  }
  v9 = objc_msgSend(v7[5], sel_title);
  if (!v9)
  {
    sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FeedHeadline);
    goto LABEL_7;
  }
  v10 = v9;
  v11 = sub_1BB8729A0();
  v13 = v12;

  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FeedHeadline);
  sub_1BA4C2DD8(v1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  if (!v13)
    goto LABEL_8;
LABEL_9:
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  return v11;
}

id FeedWebEmbed.debugAssetHandle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v9;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (id *)((char *)&v9 - v2);
  v4 = type metadata accessor for FeedWebEmbed();
  sub_1BA5E01A4(v0 + *(int *)(v4 + 48), (uint64_t)v3, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  v5 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1BA5C699C((uint64_t)v3, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    v7 = objc_msgSend(v3[5], sel_thumbnail);
    v6 = objc_msgSend(v7, sel_thumbnailAssetHandle);

    sub_1BA4A2E80((uint64_t)v3, type metadata accessor for FeedHeadline);
  }
  return v6;
}

id FeedWebEmbed.debugScoreProfile.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v8;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (id *)((char *)&v8 - v2);
  v4 = type metadata accessor for FeedWebEmbed();
  sub_1BA5E01A4(v0 + *(int *)(v4 + 48), (uint64_t)v3, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  v5 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1BA5C699C((uint64_t)v3, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    v6 = objc_msgSend(v3[5], sel_scoreProfile);
    sub_1BA4A2E80((uint64_t)v3, type metadata accessor for FeedHeadline);
  }
  return v6;
}

_QWORD *FeedWebEmbed.additionalFormatFeedItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v65;
  uint64_t *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  __int128 v75;
  ValueMetadata *v76;
  unint64_t v77;
  __int128 v78;
  uint64_t v79;
  ValueMetadata *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  char v91;
  _QWORD *v92;

  v1 = v0;
  v69 = type metadata accessor for WebEmbedDataVisualization();
  v72 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v66 = (uint64_t *)((char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v3);
  v68 = (char *)&v65 - v4;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v73 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v67 = (char *)&v65 - v10;
  v11 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], v5);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v65 - v15;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v5);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v65 - v18;
  v20 = type metadata accessor for FeedHeadline(0);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v65 - v25;
  v92 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v70 = type metadata accessor for FeedWebEmbed();
  v27 = *(int *)(v70 + 48);
  v71 = v1;
  sub_1BA5E01A4(v1 + v27, (uint64_t)v19, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1BA5C699C((uint64_t)v19, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    v28 = v69;
    v29 = (uint64_t *)v68;
    v30 = (uint64_t)v67;
  }
  else
  {
    sub_1BA5193C4((uint64_t)v19, (uint64_t)v26, type metadata accessor for FeedHeadline);
    v31 = (void *)*((_QWORD *)v26 + 5);
    v32 = sub_1BB871B24();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v16, 1, 1, v32);
    sub_1BA4C2DD8((uint64_t)&v26[*(int *)(v20 + 40)], (uint64_t)v13, type metadata accessor for FeedHeadline.State);
    *(_QWORD *)&v75 = 0;
    *(_QWORD *)&v78 = 0;
    BYTE8(v78) = 1;
    v74 = 0;
    swift_unknownObjectRetain();
    FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v31, 0, &v74, (uint64_t)v16, (uint64_t)v13, (void **)&v75, (uint64_t)v23, (uint64_t)&v78);
    v33 = sub_1BA6A94A8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v92 = v33;
    v35 = v33[2];
    v34 = v33[3];
    if (v35 >= v34 >> 1)
    {
      v33 = sub_1BA6A94A8((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v92 = v33;
    }
    v28 = v69;
    v29 = (uint64_t *)v68;
    v30 = (uint64_t)v67;
    v80 = (ValueMetadata *)v20;
    v81 = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v78);
    sub_1BA4C2DD8((uint64_t)v23, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
    v33[2] = v35 + 1;
    sub_1BA4CECCC(&v78, (uint64_t)&v33[5 * v35 + 4]);
    sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FeedHeadline);
    v37 = FeedHeadline.additionalFormatFeedItems.getter();
    sub_1BA6B017C((uint64_t)v37);
    sub_1BA4A2E80((uint64_t)v26, type metadata accessor for FeedHeadline);
  }
  v38 = v71 + *(int *)(v70 + 52);
  sub_1BA5E01A4(v38, v30, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  if (v39(v30, 1, v28) == 1)
  {
    sub_1BA5C699C(v30, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    sub_1BA4C2DD8(v30, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    }
    else
    {
      v40 = *v29;
      sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      *(_QWORD *)&v78 = v40;
      SportsDataVisualization.event.getter();
      v42 = v41;
      swift_release();
      if (v42)
      {
        v43 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
        v44 = sub_1BB8729A0();
        v46 = v45;

        v47 = v92;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v47 = sub_1BA6A94A8(0, v47[2] + 1, 1, v47);
        v49 = v47[2];
        v48 = v47[3];
        if (v49 >= v48 >> 1)
          v47 = sub_1BA6A94A8((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
        v80 = &type metadata for FeedSportsEvent;
        v81 = sub_1BACB5A60();
        v50 = swift_allocObject();
        *(_QWORD *)&v78 = v50;
        *(_QWORD *)(v50 + 16) = v44;
        *(_QWORD *)(v50 + 24) = v46;
        *(_QWORD *)(v50 + 32) = v42;
        *(_QWORD *)(v50 + 40) = 0;
        *(_BYTE *)(v50 + 48) = 0;
        v47[2] = v49 + 1;
        sub_1BA4CECCC(&v78, (uint64_t)&v47[5 * v49 + 4]);
        swift_unknownObjectRelease();
        v92 = v47;
      }
    }
  }
  v51 = v73;
  sub_1BA5E01A4(v38, v73, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if (v39(v51, 1, v28) == 1)
  {
    sub_1BA5C699C(v51, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    v52 = v66;
    sub_1BA4C2DD8(v51, (uint64_t)v66, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BA4A2E80((uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    }
    else
    {
      v53 = *v52;
      sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      *(_QWORD *)&v75 = v53;
      SportsDataVisualization.config.getter();
      swift_release();
      v54 = *((_QWORD *)&v78 + 1);
      if (*((_QWORD *)&v78 + 1))
      {
        v55 = v79;
        v56 = v78;
        swift_unknownObjectRetain();
        sub_1BA993900(v56, v54);
        if (v55)
        {
          v57 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
          v58 = sub_1BB8729A0();
          v60 = v59;

          v87 = xmmword_1BB87FC90;
          v88 = 0u;
          v89 = 0u;
          v90 = 0u;
          v91 = 0;
          *(_QWORD *)&v78 = v58;
          *((_QWORD *)&v78 + 1) = v60;
          v79 = v55;
          LOBYTE(v80) = 0;
          v83 = 0;
          v84 = 0xE000000000000000;
          v81 = 0;
          LOBYTE(v82) = 0;
          v85 = 0;
          v86 = MEMORY[0x1E0DEE9E8];
          v61 = v92;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v61 = sub_1BA6A94A8(0, v61[2] + 1, 1, v61);
            v92 = v61;
          }
          v63 = v61[2];
          v62 = v61[3];
          if (v63 >= v62 >> 1)
          {
            v61 = sub_1BA6A94A8((_QWORD *)(v62 > 1), v63 + 1, 1, v61);
            v92 = v61;
          }
          v76 = &type metadata for FeedTag;
          v77 = sub_1BA6A96BC();
          *(_QWORD *)&v75 = swift_allocObject();
          sub_1BA6A955C((uint64_t)&v78, v75 + 16);
          v61[2] = v63 + 1;
          sub_1BA4CECCC(&v75, (uint64_t)&v61[5 * v63 + 4]);
          sub_1BA6A94C4((uint64_t)&v78);
          swift_unknownObjectRelease();
        }
      }
    }
  }
  return v92;
}

uint64_t FeedWebEmbed.sportsDataVisualization.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;

  v3 = type metadata accessor for WebEmbedDataVisualization();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (unint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - v8;
  v10 = type metadata accessor for FeedWebEmbed();
  sub_1BA5E01A4(v1 + *(int *)(v10 + 52), (uint64_t)v9, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    result = sub_1BA5C699C((uint64_t)v9, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    *a1 = 0xF000000000000007;
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v12 = 0xF000000000000007;
    }
    else
    {
      v12 = *v6;
    }
    *a1 = v12;
    return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  }
  return result;
}

void FeedWebEmbed.traits.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void FeedWebEmbed.layoutDirection.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FeedWebEmbed.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

uint64_t FeedWebEmbed.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedWebEmbed.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*FeedWebEmbed.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FeedWebEmbed.URL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedWebEmbed() + 32);
  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedWebEmbed.actionURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedWebEmbed();
  return sub_1BA5E01A4(v1 + *(int *)(v3 + 36), a1, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t FeedWebEmbed.indexFileURLPromise.getter()
{
  type metadata accessor for FeedWebEmbed();
  return swift_retain();
}

uint64_t FeedWebEmbed.dataURLPromise.getter()
{
  type metadata accessor for FeedWebEmbed();
  return swift_retain();
}

uint64_t FeedWebEmbed.headline.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedWebEmbed();
  return sub_1BA5E01A4(v1 + *(int *)(v3 + 48), a1, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
}

uint64_t FeedWebEmbed.dataVisualization.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedWebEmbed();
  return sub_1BA5E01A4(v1 + *(int *)(v3 + 52), a1, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
}

uint64_t FeedWebEmbed.isLiveUpdating.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedWebEmbed() + 56));
}

uint64_t FeedWebEmbed.copy(headline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v24 = a1;
  v25 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - v5;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v3);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v3);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - v11;
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v2 + 40);
  v18 = *(_QWORD *)(v2 + 48);
  v19 = (int *)type metadata accessor for FeedWebEmbed();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v2 + v19[8], v13);
  sub_1BA5E01A4(v2 + v19[9], (uint64_t)v12, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v20 = *(_QWORD *)(v2 + v19[10]);
  v21 = *(_QWORD *)(v2 + v19[11]);
  sub_1BA4C2DD8(v24, (uint64_t)v9, type metadata accessor for FeedHeadline);
  v22 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 0, 1, v22);
  sub_1BA5E01A4(v2 + v19[13], (uint64_t)v6, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  LOBYTE(v19) = *(_BYTE *)(v2 + v19[14]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v17, v18, (uint64_t)v16, (uint64_t)v12, v20, v21, (uint64_t)v9, (uint64_t)v6, v25, v19);
}

void sub_1BB11D9E0(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1BB11D9F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1BB11DA30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v10;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (id *)((char *)&v10 - v4);
  sub_1BA5E01A4(v1 + *(int *)(a1 + 48), (uint64_t)&v10 - v4, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  v6 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_1BA5C699C((uint64_t)v5, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    v8 = objc_msgSend(v5[5], sel_thumbnail);
    v7 = objc_msgSend(v8, sel_thumbnailAssetHandle);

    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FeedHeadline);
  }
  return v7;
}

id sub_1BB11DB5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (id *)((char *)&v9 - v4);
  sub_1BA5E01A4(v1 + *(int *)(a1 + 48), (uint64_t)&v9 - v4, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  v6 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_1BA5C699C((uint64_t)v5, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    v7 = objc_msgSend(v5[5], sel_scoreProfile);
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FeedHeadline);
  }
  return v7;
}

uint64_t FeedWebEmbed.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA4C2DD8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB11DCB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA4C2DD8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t FeedWebEmbed.hashValue.getter()
{
  sub_1BB8745CC();
  type metadata accessor for FeedWebEmbed();
  sub_1BA4A2870(&qword_1EF2BBB80, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB11DD64()
{
  sub_1BB8745CC();
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB11DDB8()
{
  sub_1BA4A2870(&qword_1EF2BBB88, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
  return sub_1BB86EC50();
}

uint64_t sub_1BB11DE08()
{
  sub_1BB8745CC();
  sub_1BB872868();
  return sub_1BB874608();
}

void FeedWebEmbed.dragItem.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v29 = type metadata accessor for WebEmbedDataVisualization();
  v2 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v28 = (unint64_t *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v4);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - v10;
  v12 = type metadata accessor for FeedHeadline(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FeedWebEmbed();
  sub_1BA5E01A4(v1 + *(int *)(v16 + 48), (uint64_t)v11, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    sub_1BA5193C4((uint64_t)v11, (uint64_t)v15, type metadata accessor for FeedHeadline);
    FeedHeadline.dragItem.getter(v30);
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FeedHeadline);
    return;
  }
  v17 = v30;
  sub_1BA5C699C((uint64_t)v11, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  sub_1BA5E01A4(v1 + *(int *)(v16 + 52), (uint64_t)v8, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v29) == 1)
  {
    sub_1BA5C699C((uint64_t)v8, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    v18 = v28;
    sub_1BA4C2DD8((uint64_t)v8, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    }
    else
    {
      v19 = *v18;
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (!(v19 >> 61))
      {
        v20 = *(void **)(*(_QWORD *)(v19 + 16) + 56);
        if (v20)
        {
          swift_retain();
          v21 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
          if (!v21)
          {
            sub_1BB8729A0();
            v21 = (id)sub_1BB872970();
            swift_bridgeObjectRelease();
          }
          v22 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_feedConfiguration_, v21, 8);

          if (!v22)
          {
            __break(1u);
            return;
          }
          v23 = objc_msgSend(v20, sel_name);
          sub_1BB8729A0();

          sub_1BB8714AC();
          swift_unknownObjectRelease();
          swift_release();
          v24 = sub_1BB8714B8();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v17, 0, 1, v24);
        }
        else
        {
          v26 = sub_1BB8714B8();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v17, 1, 1, v26);
        }
        swift_release();
        return;
      }
      swift_release();
    }
  }
  v25 = sub_1BB8714B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v17, 1, 1, v25);
}

_QWORD *sub_1BB11E25C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  v1 = v0;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - v4;
  v36 = type metadata accessor for FeedHeadline(0);
  v6 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WebEmbedDataVisualization();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v2);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - v13;
  v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v15 = type metadata accessor for FeedWebEmbed();
  v16 = *(int *)(v15 + 52);
  v37 = v1;
  sub_1BA5E01A4((uint64_t)v1 + v16, (uint64_t)v14, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_1BA5C699C((uint64_t)v14, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v17 = *v11;
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v38 = 0;
      v39 = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v38 = 0xD000000000000015;
      v39 = 0x80000001BB97A7D0;
      __asm { BR              X10 }
    }
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  }
  v18 = v36;
  sub_1BA5E01A4((uint64_t)v37 + *(int *)(v15 + 48), (uint64_t)v5, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v18) == 1)
  {
    sub_1BA5C699C((uint64_t)v5, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  }
  else
  {
    v19 = v35;
    sub_1BA5193C4((uint64_t)v5, v35, type metadata accessor for FeedHeadline);
    v20 = v41;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v20 = sub_1BA6EA0D0(0, v20[2] + 1, 1, v20);
    v22 = v20[2];
    v21 = v20[3];
    if (v22 >= v21 >> 1)
      v20 = sub_1BA6EA0D0((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
    v20[2] = v22 + 1;
    v23 = &v20[2 * v22];
    v23[4] = 0xD000000000000016;
    v23[5] = 0x80000001BB97A790;
    v41 = v20;
    v24 = sub_1BA6AF268();
    v25 = v24[2];
    if (v25)
    {
      v40 = MEMORY[0x1E0DEE9D8];
      sub_1BA7447E8(0, v25, 0);
      v26 = v40;
      v37 = v24;
      v27 = v24 + 5;
      do
      {
        v38 = 0;
        v39 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1BB873CB4();
        swift_bridgeObjectRelease();
        v38 = 0xD000000000000013;
        v39 = 0x80000001BB97A7B0;
        sub_1BB872AFC((_QWORD *)0xD000000000000013);
        swift_bridgeObjectRelease();
        v28 = v38;
        v29 = v39;
        v40 = v26;
        v31 = *(_QWORD *)(v26 + 16);
        v30 = *(_QWORD *)(v26 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1BA7447E8(v30 > 1, v31 + 1, 1);
          v26 = v40;
        }
        v27 += 2;
        *(_QWORD *)(v26 + 16) = v31 + 1;
        v32 = v26 + 16 * v31;
        *(_QWORD *)(v32 + 32) = v28;
        *(_QWORD *)(v32 + 40) = v29;
        --v25;
      }
      while (v25);
      swift_bridgeObjectRelease();
      v19 = v35;
    }
    else
    {
      swift_bridgeObjectRelease();
      v26 = MEMORY[0x1E0DEE9D8];
    }
    sub_1BA6E9BD8(v26);
    sub_1BA4A2E80(v19, type metadata accessor for FeedHeadline);
  }
  return v41;
}

uint64_t sub_1BB11E9C0()
{
  _QWORD *v0;
  int64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_1BB11E25C();
  v1 = v0[2];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v9;
    v3 = v0 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v4);
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(v9 + 16);
      v5 = *(_QWORD *)(v9 + 24);
      if (v6 >= v5 >> 1)
        sub_1BA7447E8(v5 > 1, v6 + 1, 1);
      v3 += 2;
      *(_QWORD *)(v9 + 16) = v6 + 1;
      v7 = v9 + 16 * v6;
      *(_QWORD *)(v7 + 32) = 0x2D70756F7267;
      *(_QWORD *)(v7 + 40) = 0xE600000000000000;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

uint64_t FeedWebEmbed.score.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for WebEmbedDataVisualization();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (unint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - v6;
  v8 = type metadata accessor for FeedWebEmbed();
  sub_1BA5E01A4(v0 + *(int *)(v8 + 52), (uint64_t)v7, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1BA5C699C((uint64_t)v7, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    return 0;
  }
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    return 0;
  }
  v9 = *v4;
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (v9 >> 61)
  {
    swift_release();
    return 0;
  }
  v10 = *(_QWORD *)(v9 + 16);
  swift_retain();
  swift_release();
  return v10;
}

uint64_t sub_1BB11EC94()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

uint64_t sub_1BB11ECF0()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t _s8NewsFeed0B8WebEmbedV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v73;
  uint64_t (*v74)(uint64_t);
  uint64_t v75;
  char v76;
  void (*v77)(char *, uint64_t);
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t);
  int v85;
  _QWORD *v86;
  _QWORD *v87;
  char v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v4 = type metadata accessor for WebEmbedDataVisualization();
  v111 = *(_QWORD *)(v4 - 8);
  v112 = v4;
  MEMORY[0x1E0C80A78](v4);
  v108 = (uint64_t)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v109 = (uint64_t)&v105 - v8;
  sub_1BAEE7C2C(0, &qword_1ED3A7A70, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  v110 = v9;
  MEMORY[0x1E0C80A78](v9);
  v113 = (uint64_t)&v105 - v10;
  v11 = type metadata accessor for FeedHeadline(0);
  v118 = *(_QWORD *)(v11 - 8);
  v119 = v11;
  MEMORY[0x1E0C80A78](v11);
  v114 = (uint64_t *)((char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v6);
  MEMORY[0x1E0C80A78](v13);
  v115 = (uint64_t *)((char *)&v105 - v14);
  sub_1BAEE7C2C(0, &qword_1ED3A5290, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  v117 = v15;
  MEMORY[0x1E0C80A78](v15);
  v120 = (uint64_t)&v105 - v16;
  v17 = sub_1BB86C67C();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v121 = *(_QWORD *)(v17 - 8);
  v122 = v17;
  MEMORY[0x1E0C80A78](v17);
  v116 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v18, v6);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v105 - v21;
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3B04F0, (unint64_t *)&qword_1ED3D2E70, v18);
  v24 = v23;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v105 - v25;
  v27 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v27);
  v127 = (char *)&v105 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v128 = (char *)&v105 - v30;
  MEMORY[0x1E0C80A78](v31);
  v123 = (uint64_t)&v105 - v32;
  MEMORY[0x1E0C80A78](v33);
  v126 = (char *)&v105 - v34;
  MEMORY[0x1E0C80A78](v35);
  v131 = (uint64_t)&v105 - v36;
  MEMORY[0x1E0C80A78](v37);
  v130 = (uint64_t)&v105 - v38;
  MEMORY[0x1E0C80A78](v39);
  v125 = (uint64_t)&v105 - v40;
  MEMORY[0x1E0C80A78](v41);
  v124 = (uint64_t)&v105 - v42;
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)&v105 - v44;
  v47 = MEMORY[0x1E0C80A78](v46);
  v49 = (char *)&v105 - v48;
  LOBYTE(v18) = MEMORY[0x1BCCDCEFC](a1 + *(int *)(v50 + 32), a2 + *(int *)(v50 + 32), v47);
  v129 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v51 = a2;
  sub_1BA4C2DD8(a2, (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  if ((v18 & 1) == 0)
  {
    sub_1BA4A2E80((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v60 = (uint64_t)v128;
    v63 = v129;
    v61 = (uint64_t)v126;
    v66 = (uint64_t)v127;
    v64 = v51;
    v67 = v130;
    v62 = v124;
    v65 = v125;
LABEL_9:
    sub_1BA4C2DD8(v63, v62, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4C2DD8(v64, v65, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    goto LABEL_10;
  }
  v106 = v22;
  v107 = a2;
  v52 = *(int *)(v27 + 36);
  v53 = (uint64_t)&v45[v52];
  v54 = (uint64_t)&v26[*(int *)(v24 + 48)];
  v55 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BA5E01A4((uint64_t)&v49[v52], (uint64_t)v26, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1BA5E01A4(v53, v54, (unint64_t *)&qword_1ED3D2E70, v55);
  v57 = v121;
  v56 = v122;
  v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48);
  if (v58((uint64_t)v26, 1, v122) != 1)
  {
    v68 = (uint64_t)v106;
    sub_1BA5E01A4((uint64_t)v26, (uint64_t)v106, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v58(v54, 1, v56) != 1)
    {
      v105 = v27;
      v73 = v116;
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v116, v54, v56);
      v74 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v75 = v68;
      v76 = sub_1BB872958();
      v77 = *(void (**)(char *, uint64_t))(v57 + 8);
      v77(v73, v56);
      sub_1BA4A2E80((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      sub_1BA4A2E80((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      v77((char *)v75, v56);
      sub_1BA5C699C((uint64_t)v26, (unint64_t *)&qword_1ED3D2E70, v74);
      v63 = v129;
      v62 = v124;
      sub_1BA4C2DD8(v129, v124, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      v64 = v107;
      v65 = v125;
      sub_1BA4C2DD8(v107, v125, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      v66 = (uint64_t)v127;
      v60 = (uint64_t)v128;
      v61 = (uint64_t)v126;
      v67 = v130;
      if ((v76 & 1) != 0)
        goto LABEL_18;
LABEL_10:
      sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      sub_1BA4C2DD8(v63, v67, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      v69 = v131;
      sub_1BA4C2DD8(v64, v131, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      goto LABEL_11;
    }
    sub_1BA4A2E80((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v68, v56);
    v60 = (uint64_t)v128;
    v61 = (uint64_t)v126;
    v62 = v124;
    goto LABEL_8;
  }
  v105 = v27;
  sub_1BA4A2E80((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA4A2E80((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v59 = v58(v54, 1, v56);
  v60 = (uint64_t)v128;
  v61 = (uint64_t)v126;
  v62 = v124;
  if (v59 != 1)
  {
LABEL_8:
    sub_1BAEE7BF0((uint64_t)v26, (unint64_t *)&qword_1ED3B04F0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v64 = v107;
    v63 = v129;
    v67 = v130;
    v66 = (uint64_t)v127;
    v65 = v125;
    goto LABEL_9;
  }
  sub_1BA5C699C((uint64_t)v26, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v63 = v129;
  sub_1BA4C2DD8(v129, v62, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v64 = v107;
  v65 = v125;
  sub_1BA4C2DD8(v107, v125, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v66 = (uint64_t)v127;
  v67 = v130;
LABEL_18:
  if (*(_QWORD *)(v62 + 40) == *(_QWORD *)(v65 + 40) && *(_QWORD *)(v62 + 48) == *(_QWORD *)(v65 + 48))
  {
    sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4C2DD8(v63, v67, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v69 = v131;
    sub_1BA4C2DD8(v64, v131, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    goto LABEL_22;
  }
  v78 = sub_1BB874398();
  sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA4C2DD8(v63, v67, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v69 = v131;
  sub_1BA4C2DD8(v64, v131, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  if ((v78 & 1) == 0)
  {
LABEL_11:
    sub_1BA4A2E80(v69, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80(v67, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v70 = v123;
LABEL_12:
    sub_1BA4C2DD8(v63, v61, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4C2DD8(v64, v70, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
LABEL_13:
    sub_1BA4A2E80(v70, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80(v61, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4C2DD8(v63, v60, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4C2DD8(v64, v66, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
LABEL_14:
    sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
LABEL_15:
    v71 = 0;
    return v71 & 1;
  }
LABEL_22:
  v79 = *(int *)(v105 + 48);
  v80 = v69 + v79;
  v81 = v120;
  v82 = v120 + *(int *)(v117 + 48);
  sub_1BA5E01A4(v67 + v79, v120, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  sub_1BA5E01A4(v80, v82, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  v83 = v119;
  v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
  if (v84(v81, 1, v119) == 1)
  {
    sub_1BA4A2E80(v131, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80(v130, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v85 = v84(v82, 1, v83);
    v70 = v123;
    if (v85 == 1)
    {
      sub_1BA5C699C(v81, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
      sub_1BA4C2DD8(v63, v61, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      sub_1BA4C2DD8(v64, v70, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  v86 = v115;
  sub_1BA5E01A4(v81, (uint64_t)v115, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  if (v84(v82, 1, v83) == 1)
  {
    sub_1BA4A2E80(v131, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80(v130, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80((uint64_t)v86, type metadata accessor for FeedHeadline);
    v70 = v123;
LABEL_27:
    sub_1BAEE7BF0(v81, &qword_1ED3A5290, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    goto LABEL_12;
  }
  v87 = v114;
  sub_1BA5193C4(v82, (uint64_t)v114, type metadata accessor for FeedHeadline);
  v88 = static FeedHeadline.== infix(_:_:)(v86, v87);
  sub_1BA4A2E80((uint64_t)v87, type metadata accessor for FeedHeadline);
  sub_1BA4A2E80(v131, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA4A2E80(v130, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA4A2E80((uint64_t)v86, type metadata accessor for FeedHeadline);
  sub_1BA5C699C(v81, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  sub_1BA4C2DD8(v63, v61, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v70 = v123;
  sub_1BA4C2DD8(v64, v123, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  if ((v88 & 1) == 0)
    goto LABEL_13;
LABEL_29:
  v89 = *(unsigned __int8 *)(v61 + *(int *)(v105 + 56));
  v90 = v61;
  v91 = v105;
  sub_1BA4A2E80(v90, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v92 = *(unsigned __int8 *)(v70 + *(int *)(v91 + 56));
  sub_1BA4A2E80(v70, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA4C2DD8(v63, v60, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA4C2DD8(v64, v66, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  if (v89 != v92)
    goto LABEL_14;
  v93 = *(int *)(v91 + 52);
  v94 = v66 + v93;
  v95 = v113;
  v96 = v113 + *(int *)(v110 + 48);
  sub_1BA5E01A4(v60 + v93, v113, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  sub_1BA5E01A4(v94, v96, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  v97 = v112;
  v98 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
  if (v98(v95, 1, v112) == 1)
  {
    sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    if (v98(v96, 1, v97) == 1)
    {
      sub_1BA5C699C(v95, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      v71 = 1;
      return v71 & 1;
    }
    goto LABEL_35;
  }
  v99 = v109;
  sub_1BA5E01A4(v95, v109, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if (v98(v96, 1, v97) == 1)
  {
    sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
LABEL_35:
    sub_1BAEE7BF0(v95, &qword_1ED3A7A70, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_15;
  }
  v100 = v108;
  sub_1BA5193C4(v96, v108, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v101 = WebEmbedDataVisualization.identifier.getter();
  v103 = v102;
  if (v101 == WebEmbedDataVisualization.identifier.getter() && v103 == v104)
    v71 = 1;
  else
    v71 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v100, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  sub_1BA5C699C(v95, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  return v71 & 1;
}

uint64_t sub_1BB11FB10(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1ED39AF50, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BB11FB4C()
{
  return sub_1BA4A2870(&qword_1EF2BBB80, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
}

uint64_t sub_1BB11FB78()
{
  return sub_1BA4A2870(&qword_1ED39AF50, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
}

uint64_t sub_1BB11FBA4()
{
  return sub_1BA4A2870(&qword_1ED3A5298, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedWebEmbed(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(_QWORD *, uint64_t, uint64_t);
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int *v39;
  unsigned int (*v40)(char *, uint64_t, int *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  id v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void *v63;
  void (*v64)(_QWORD *, _QWORD, uint64_t, int *);
  id v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int EnumCaseMultiPayload;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v79;
  uint64_t v80;
  char *__dst;
  int *v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  int *v87;
  char *v88;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a2 + 3;
    v9 = a2[4];
    if (v9 >= 0x11)
    {
      v4[3] = *v8;
      v4[4] = v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v4 + 3) = *(_OWORD *)v8;
    }
    v11 = a2[6];
    v4[5] = a2[5];
    v4[6] = v11;
    v12 = a3[8];
    v13 = (char *)v4 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_1BB86C67C();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    swift_bridgeObjectRetain();
    v17(v13, v14, v15);
    v18 = a3[9];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v86 = (void (*)(char *, char *, uint64_t))v17;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))((uint64_t)a2 + v18, 1, v15))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v17(v19, (uint64_t)v20, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    }
    v22 = a3[11];
    *(_QWORD *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(_QWORD *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    v87 = a3;
    v23 = a3[12];
    v24 = (_QWORD *)((char *)v4 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = type metadata accessor for FeedHeadline(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48);
    swift_retain();
    swift_retain();
    if (v28(v25, 1, v26))
    {
      sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v30 = v87;
    }
    else
    {
      v80 = v27;
      v83 = (int *)v26;
      v84 = v15;
      v31 = v25[1];
      *v24 = *v25;
      v24[1] = v31;
      v24[2] = v25[2];
      *((_BYTE *)v24 + 24) = *((_BYTE *)v25 + 24);
      v32 = v25[5];
      v24[4] = v25[4];
      v24[5] = v32;
      v24[6] = v25[6];
      *((_BYTE *)v24 + 56) = *((_BYTE *)v25 + 56);
      v33 = *(int *)(v26 + 40);
      v34 = (char *)v24 + v33;
      v35 = (char *)v25 + v33;
      *v34 = *((_BYTE *)v25 + v33);
      v34[1] = *((_BYTE *)v25 + v33 + 1);
      v36 = type metadata accessor for FeedHeadline.State(0);
      v37 = *(int *)(v36 + 24);
      __dst = &v34[v37];
      v82 = (int *)v36;
      v38 = &v35[v37];
      v39 = (int *)type metadata accessor for SharedItem();
      v79 = *((_QWORD *)v39 - 1);
      v40 = *(unsigned int (**)(char *, uint64_t, int *))(v79 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v40(v38, 1, v39))
      {
        v41 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v42 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(__dst, v38, v42);
        __dst[v39[5]] = v38[v39[5]];
        v43 = v39[6];
        v44 = *(void **)&v38[v43];
        *(_QWORD *)&__dst[v43] = v44;
        v45 = v39[7];
        v46 = v38;
        v47 = &__dst[v45];
        v48 = &v46[v45];
        v49 = v44;
        v86(v47, v48, v84);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v79 + 56))(__dst, 0, 1, v39);
      }
      v30 = v87;
      v34[v82[7]] = v35[v82[7]];
      v34[v82[8]] = v35[v82[8]];
      v34[v82[9]] = v35[v82[9]];
      v34[v82[10]] = v35[v82[10]];
      v50 = v83[11];
      v51 = (char *)v24 + v50;
      v52 = (char *)v25 + v50;
      v53 = sub_1BB871B24();
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v15 = v84;
      v56 = v83[12];
      v57 = (_QWORD *)((char *)v24 + v56);
      v58 = (_QWORD *)((char *)v25 + v56);
      v59 = v58[1];
      if (v59 >= 0x11)
      {
        *v57 = *v58;
        v57[1] = v59;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v57 = *(_OWORD *)v58;
      }
      v60 = v83[13];
      v61 = *(_QWORD *)((char *)v25 + v60);
      if (v61 >= 2)
      {
        if (v61 == 2)
        {
          *(_QWORD *)((char *)v24 + v60) = 2;
        }
        else
        {
          *(_QWORD *)((char *)v24 + v60) = v61;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(_QWORD *)((char *)v24 + v60) = v61;
      }
      v62 = v83[14];
      v63 = *(void **)((char *)v25 + v62);
      *(_QWORD *)((char *)v24 + v62) = v63;
      v64 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v80 + 56);
      v65 = v63;
      v64(v24, 0, 1, v83);
    }
    v66 = v30[13];
    v67 = (_QWORD *)((char *)v4 + v66);
    v68 = (uint64_t *)((char *)a2 + v66);
    v69 = type metadata accessor for WebEmbedDataVisualization();
    v70 = *(_QWORD *)(v69 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
    {
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v73 = *v68;
      if (EnumCaseMultiPayload == 1)
      {
        v74 = v68[1];
        *v67 = v73;
        v67[1] = v74;
        v75 = type metadata accessor for GenericDataVisualization();
        v76 = *(int *)(v75 + 20);
        v88 = (char *)v67 + v76;
        v85 = v15;
        v77 = (char *)v68 + v76;
        swift_bridgeObjectRetain();
        v86(v88, v77, v85);
        *(_QWORD *)((char *)v67 + *(int *)(v75 + 24)) = *(uint64_t *)((char *)v68 + *(int *)(v75 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        *v67 = v73;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
    *((_BYTE *)v4 + v30[14]) = *((_BYTE *)a2 + v30[14]);
  }
  return v4;
}

uint64_t destroy for FeedWebEmbed(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[8];
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = a1 + a2[9];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  swift_release();
  swift_release();
  v9 = a1 + a2[12];
  v10 = (int *)type metadata accessor for FeedHeadline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v11 = v9 + v10[10];
    v12 = v11 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
    v13 = type metadata accessor for SharedItem();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
    {
      v14 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);

      v7(v12 + *(int *)(v13 + 28), v5);
    }
    v15 = v9 + v10[11];
    v16 = sub_1BB871B24();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    if (*(_QWORD *)(v9 + v10[12] + 8) >= 0x11uLL)
      swift_bridgeObjectRelease();
    if (*(_QWORD *)(v9 + v10[13]) >= 3uLL)
      swift_unknownObjectRelease();

  }
  v18 = a1 + a2[13];
  v19 = type metadata accessor for WebEmbedDataVisualization();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19);
  if (!(_DWORD)result)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      v21 = type metadata accessor for GenericDataVisualization();
      v7(v18 + *(int *)(v21 + 20), v5);
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t initializeWithCopy for FeedWebEmbed(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  unsigned int (*v42)(char *, uint64_t, int *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  void (*v65)(_QWORD *, _QWORD, uint64_t, int *);
  id v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int EnumCaseMultiPayload;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  int *v85;
  _QWORD *v86;
  int *v87;
  int *v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  uint64_t v91;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  if (v8 >= 0x11)
  {
    *(_QWORD *)(a1 + 24) = *v7;
    *(_QWORD *)(a1 + 32) = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
  }
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain();
  v15(v11, v12, v13);
  v16 = a3[9];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v89 = (void (*)(char *, char *, uint64_t))v15;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a2 + v16, 1, v13))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v15((uint64_t)v17, (uint64_t)v18, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
  }
  v20 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  v21 = a3[12];
  v22 = (_QWORD *)(a1 + v21);
  v23 = a2;
  v24 = a3;
  v91 = v23;
  v25 = (_QWORD *)(v23 + v21);
  v26 = type metadata accessor for FeedHeadline(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48);
  swift_retain();
  v29 = v25;
  swift_retain();
  v90 = v13;
  if (v28(v25, 1, v26))
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v22, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    v31 = v24;
    v32 = v91;
  }
  else
  {
    v84 = v27;
    v85 = (int *)v26;
    v86 = v25;
    v87 = v24;
    v33 = v25[1];
    *v22 = *v25;
    v22[1] = v33;
    v22[2] = v25[2];
    *((_BYTE *)v22 + 24) = *((_BYTE *)v25 + 24);
    v34 = v25[5];
    v22[4] = v25[4];
    v22[5] = v34;
    v22[6] = v25[6];
    *((_BYTE *)v22 + 56) = *((_BYTE *)v25 + 56);
    v35 = *(int *)(v26 + 40);
    v36 = (char *)v22 + v35;
    v37 = (char *)v29 + v35;
    *v36 = *((_BYTE *)v29 + v35);
    v36[1] = *((_BYTE *)v29 + v35 + 1);
    v83 = (int *)type metadata accessor for FeedHeadline.State(0);
    v38 = v83[6];
    v39 = &v36[v38];
    v40 = &v37[v38];
    v41 = (int *)type metadata accessor for SharedItem();
    v82 = *((_QWORD *)v41 - 1);
    v42 = *(unsigned int (**)(char *, uint64_t, int *))(v82 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    if (v42(v40, 1, v41))
    {
      v43 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v44 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v39, v40, v44);
      v39[v41[5]] = v40[v41[5]];
      v45 = v41[6];
      v46 = *(void **)&v40[v45];
      *(_QWORD *)&v39[v45] = v46;
      v47 = v41[7];
      v48 = &v39[v47];
      v49 = &v40[v47];
      v50 = v46;
      v89(v48, v49, v90);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v82 + 56))(v39, 0, 1, v41);
    }
    v32 = v91;
    v36[v83[7]] = v37[v83[7]];
    v36[v83[8]] = v37[v83[8]];
    v36[v83[9]] = v37[v83[9]];
    v36[v83[10]] = v37[v83[10]];
    v51 = v85[11];
    v52 = (char *)v22 + v51;
    v53 = (char *)v86 + v51;
    v54 = sub_1BB871B24();
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    v31 = v87;
    v57 = v85[12];
    v58 = (_QWORD *)((char *)v22 + v57);
    v59 = (_QWORD *)((char *)v86 + v57);
    v60 = v59[1];
    if (v60 >= 0x11)
    {
      *v58 = *v59;
      v58[1] = v60;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v58 = *(_OWORD *)v59;
    }
    v61 = v85[13];
    v62 = *(_QWORD *)((char *)v86 + v61);
    if (v62 >= 2)
    {
      if (v62 == 2)
      {
        *(_QWORD *)((char *)v22 + v61) = 2;
      }
      else
      {
        *(_QWORD *)((char *)v22 + v61) = v62;
        swift_unknownObjectRetain();
      }
    }
    else
    {
      *(_QWORD *)((char *)v22 + v61) = v62;
    }
    v63 = v85[14];
    v64 = *(void **)((char *)v86 + v63);
    *(_QWORD *)((char *)v22 + v63) = v64;
    v65 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v84 + 56);
    v66 = v64;
    v65(v22, 0, 1, v85);
  }
  v67 = v31[13];
  v68 = (_QWORD *)(a1 + v67);
  v69 = (uint64_t *)(v32 + v67);
  v70 = type metadata accessor for WebEmbedDataVisualization();
  v71 = *(_QWORD *)(v70 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v74 = *v69;
    if (EnumCaseMultiPayload == 1)
    {
      v75 = v69[1];
      *v68 = v74;
      v68[1] = v75;
      v76 = type metadata accessor for GenericDataVisualization();
      v77 = *(int *)(v76 + 20);
      v78 = (char *)v68 + v77;
      v88 = v31;
      v79 = (char *)v69 + v77;
      swift_bridgeObjectRetain();
      v80 = v79;
      v31 = v88;
      v89(v78, v80, v90);
      *(_QWORD *)((char *)v68 + *(int *)(v76 + 24)) = *(uint64_t *)((char *)v69 + *(int *)(v76 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *v68 = v74;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  *(_BYTE *)(a1 + v31[14]) = *(_BYTE *)(v32 + v31[14]);
  return a1;
}

uint64_t assignWithCopy for FeedWebEmbed(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  int *v38;
  unsigned int (*v39)(char *, uint64_t, int *);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  int *v50;
  uint64_t (*v51)(_BYTE *, uint64_t, int *);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  _BYTE *v60;
  void (*v61)(char *, char *, uint64_t);
  id v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  id v70;
  uint64_t v71;
  void *v72;
  const void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void *v83;
  void (*v84)(uint64_t, _QWORD, uint64_t, int *);
  id v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(void *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t *v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void *v108;
  id v109;
  uint64_t v110;
  void *v111;
  void *v112;
  id v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(_QWORD *, uint64_t, uint64_t);
  int v120;
  int v121;
  uint64_t (*v122)(uint64_t, uint64_t);
  uint64_t v123;
  int EnumCaseMultiPayload;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  int *v134;
  char *v135;
  char *v136;
  uint64_t v138;
  char *__dst;
  _QWORD *__dsta;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  int *v146;
  int *v147;
  void (*v148)(uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *__src;
  uint64_t v154;
  int *v155;
  void (*v156)(char *, char *, uint64_t);
  void (*v157)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  v7 = (_OWORD *)(a1 + 24);
  v8 = (_OWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) < 0x11uLL)
  {
    if (v9 >= 0x11)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 < 0x11)
  {
    sub_1BA905D68(a1 + 24);
LABEL_6:
    *v7 = *v8;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v16 = a3[9];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v11) = v19(a1 + v16, 1, v13);
  v20 = v19((uint64_t)v18, 1, v13);
  v148 = v15;
  if ((_DWORD)v11)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v17, v18, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
LABEL_13:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_14;
  }
  v15((uint64_t)v17, (uint64_t)v18, v13);
LABEL_14:
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  v22 = a3[12];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for FeedHeadline(0);
  __src = *(_QWORD **)(v25 - 8);
  v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__src[6];
  v27 = v26(v23, 1, v25);
  v155 = (int *)v25;
  v28 = v26(v24, 1, v25);
  v154 = v14;
  if (!v27)
  {
    if (v28)
    {
      sub_1BA4A2E80(v23, type metadata accessor for FeedHeadline);
      v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_19;
    }
    v150 = v13;
    v146 = a3;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v41 = *(_QWORD *)(v24 + 16);
    *(_BYTE *)(v23 + 24) = *(_BYTE *)(v24 + 24);
    *(_QWORD *)(v23 + 16) = v41;
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
    *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 40);
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(_BYTE *)(v23 + 56) = *(_BYTE *)(v24 + 56);
    v42 = *(int *)(v25 + 40);
    v43 = v24;
    v44 = (_BYTE *)(v23 + v42);
    v142 = v23;
    v144 = v43;
    v45 = v43 + v42;
    *v44 = *(_BYTE *)(v43 + v42);
    v44[1] = *(_BYTE *)(v43 + v42 + 1);
    v46 = (int *)type metadata accessor for FeedHeadline.State(0);
    v47 = v46[6];
    v48 = &v44[v47];
    v49 = (_BYTE *)(v45 + v47);
    v50 = (int *)type metadata accessor for SharedItem();
    __dsta = (_QWORD *)*((_QWORD *)v50 - 1);
    v51 = (uint64_t (*)(_BYTE *, uint64_t, int *))__dsta[6];
    v52 = v51(v48, 1, v50);
    v53 = v51(v49, 1, v50);
    if (v52)
    {
      if (!v53)
      {
        v54 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v48, v49, v54);
        v48[v50[5]] = v49[v50[5]];
        v55 = v50[6];
        v56 = *(void **)&v49[v55];
        *(_QWORD *)&v48[v55] = v56;
        v57 = v50[7];
        v58 = &v48[v57];
        v59 = &v49[v57];
        v60 = v48;
        v61 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
        v62 = v56;
        v61(v58, v59, v150);
        ((void (*)(_BYTE *, _QWORD, uint64_t, int *))__dsta[7])(v60, 0, 1, v50);
        goto LABEL_42;
      }
    }
    else
    {
      if (!v53)
      {
        v105 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v105 - 8) + 24))(v48, v49, v105);
        v48[v50[5]] = v49[v50[5]];
        v106 = v50[6];
        v107 = *(void **)&v49[v106];
        v108 = *(void **)&v48[v106];
        *(_QWORD *)&v48[v106] = v107;
        v109 = v107;

        v148((uint64_t)&v48[v50[7]], (uint64_t)&v49[v50[7]], v150);
LABEL_42:
        v44[v46[7]] = *(_BYTE *)(v45 + v46[7]);
        v44[v46[8]] = *(_BYTE *)(v45 + v46[8]);
        v44[v46[9]] = *(_BYTE *)(v45 + v46[9]);
        v44[v46[10]] = *(_BYTE *)(v45 + v46[10]);
        v87 = v155[11];
        v88 = (void *)(v142 + v87);
        v89 = (void *)(v144 + v87);
        v90 = sub_1BB871B24();
        v91 = *(_QWORD *)(v90 - 8);
        v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
        v93 = v92(v88, 1, v90);
        v94 = v92(v89, 1, v90);
        if (v93)
        {
          if (!v94)
          {
            (*(void (**)(void *, void *, uint64_t))(v91 + 16))(v88, v89, v90);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
            goto LABEL_48;
          }
        }
        else
        {
          if (!v94)
          {
            (*(void (**)(void *, void *, uint64_t))(v91 + 24))(v88, v89, v90);
LABEL_48:
            a3 = v146;
            v96 = v155[12];
            v97 = (_QWORD *)(v142 + v96);
            v98 = (_QWORD *)(v144 + v96);
            v99 = *(_QWORD *)(v142 + v96 + 8);
            v100 = *(_QWORD *)(v144 + v96 + 8);
            if (v99 >= 0x11)
            {
              if (v100 >= 0x11)
              {
                *v97 = *v98;
                v97[1] = v98[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
LABEL_55:
                v101 = v155[13];
                v102 = (unint64_t *)(v142 + v101);
                v103 = *(_QWORD *)(v142 + v101);
                v104 = *(_QWORD *)(v144 + v101);
                if (v103 == 2)
                {
                  v13 = v150;
                  if (v104 < 2)
                  {
LABEL_57:
                    *v102 = v104;
LABEL_71:
                    v110 = v155[14];
                    v111 = *(void **)(v142 + v110);
                    v112 = *(void **)(v144 + v110);
                    *(_QWORD *)(v142 + v110) = v112;
                    v113 = v112;

                    goto LABEL_72;
                  }
                  if (v104 == 2)
                  {
                    *v102 = 2;
                    goto LABEL_71;
                  }
LABEL_64:
                  *v102 = v104;
                  swift_unknownObjectRetain();
                  goto LABEL_71;
                }
                if (v104 == 2)
                {
                  sub_1BA905D9C(v142 + v101);
                }
                else
                {
                  if (v103 < 2)
                  {
                    v13 = v150;
                    if (v104 < 2)
                      goto LABEL_57;
                    goto LABEL_64;
                  }
                  if (v104 >= 2)
                  {
                    *v102 = v104;
                    swift_unknownObjectRetain();
                    swift_unknownObjectRelease();
                    goto LABEL_70;
                  }
                  swift_unknownObjectRelease();
                }
                *v102 = *(_QWORD *)(v144 + v101);
LABEL_70:
                v13 = v150;
                goto LABEL_71;
              }
              sub_1BA905D68((uint64_t)v97);
            }
            else if (v100 >= 0x11)
            {
              *v97 = *v98;
              v97[1] = v98[1];
              swift_bridgeObjectRetain();
              goto LABEL_55;
            }
            *(_OWORD *)v97 = *(_OWORD *)v98;
            goto LABEL_55;
          }
          (*(void (**)(void *, uint64_t))(v91 + 8))(v88, v90);
        }
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        goto LABEL_48;
      }
      sub_1BA4A2E80((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    }
    v86 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_42;
  }
  if (v28)
  {
    v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_19:
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v29);
    memcpy((void *)v23, (const void *)v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_72;
  }
  v145 = a3;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v149 = v13;
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  v31 = *(_QWORD *)(v24 + 16);
  *(_BYTE *)(v23 + 24) = *(_BYTE *)(v24 + 24);
  *(_QWORD *)(v23 + 16) = v31;
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 40);
  *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
  *(_BYTE *)(v23 + 56) = *(_BYTE *)(v24 + 56);
  v32 = *(int *)(v25 + 40);
  v141 = v23;
  v143 = v24;
  v33 = (_BYTE *)(v23 + v32);
  v34 = v24 + v32;
  *v33 = *(_BYTE *)(v24 + v32);
  v33[1] = *(_BYTE *)(v24 + v32 + 1);
  v35 = (int *)type metadata accessor for FeedHeadline.State(0);
  v36 = v35[6];
  __dst = &v33[v36];
  v37 = (char *)(v34 + v36);
  v38 = (int *)type metadata accessor for SharedItem();
  v138 = *((_QWORD *)v38 - 1);
  v39 = *(unsigned int (**)(char *, uint64_t, int *))(v138 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v39(v37, 1, v38))
  {
    v40 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v63 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(__dst, v37, v63);
    __dst[v38[5]] = v37[v38[5]];
    v64 = v38[6];
    v65 = *(void **)&v37[v64];
    *(_QWORD *)&__dst[v64] = v65;
    v66 = v38[7];
    v67 = &__dst[v66];
    v68 = &v37[v66];
    v69 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
    v70 = v65;
    v69(v67, v68, v149);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v138 + 56))(__dst, 0, 1, v38);
  }
  v33[v35[7]] = *(_BYTE *)(v34 + v35[7]);
  v33[v35[8]] = *(_BYTE *)(v34 + v35[8]);
  v33[v35[9]] = *(_BYTE *)(v34 + v35[9]);
  v33[v35[10]] = *(_BYTE *)(v34 + v35[10]);
  v71 = v155[11];
  v72 = (void *)(v141 + v71);
  v73 = (const void *)(v143 + v71);
  v74 = sub_1BB871B24();
  v75 = *(_QWORD *)(v74 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v75 + 16))(v72, v73, v74);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  }
  a3 = v145;
  v13 = v149;
  v77 = v155[12];
  v78 = (_QWORD *)(v141 + v77);
  v79 = (_QWORD *)(v143 + v77);
  if (v79[1] >= 0x11uLL)
  {
    *v78 = *v79;
    v78[1] = v79[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v78 = *(_OWORD *)v79;
  }
  v80 = v155[13];
  v81 = *(_QWORD *)(v143 + v80);
  if (v81 >= 2)
  {
    if (v81 == 2)
    {
      *(_QWORD *)(v141 + v80) = 2;
    }
    else
    {
      *(_QWORD *)(v141 + v80) = v81;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    *(_QWORD *)(v141 + v80) = v81;
  }
  v82 = v155[14];
  v83 = *(void **)(v143 + v82);
  *(_QWORD *)(v141 + v82) = v83;
  v84 = (void (*)(uint64_t, _QWORD, uint64_t, int *))__src[7];
  v85 = v83;
  v84(v141, 0, 1, v155);
LABEL_72:
  v114 = a3[13];
  v115 = (_QWORD *)(a1 + v114);
  v116 = (_QWORD *)(a2 + v114);
  v117 = type metadata accessor for WebEmbedDataVisualization();
  v118 = *(_QWORD *)(v117 - 8);
  v119 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v118 + 48);
  v120 = v119(v115, 1, v117);
  v121 = v119(v116, 1, v117);
  if (v120)
  {
    if (v121)
    {
      v122 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_77:
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v122);
      memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
      goto LABEL_86;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v115 = *v116;
    if (EnumCaseMultiPayload == 1)
    {
      v115[1] = v116[1];
      v125 = type metadata accessor for GenericDataVisualization();
      v126 = *(int *)(v125 + 20);
      v151 = v13;
      v127 = (char *)v115 + v126;
      v147 = a3;
      v128 = (char *)v116 + v126;
      v156 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
      swift_bridgeObjectRetain();
      v129 = v128;
      a3 = v147;
      v156(v127, v129, v151);
      *(_QWORD *)((char *)v115 + *(int *)(v125 + 24)) = *(_QWORD *)((char *)v116 + *(int *)(v125 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
  }
  else
  {
    if (v121)
    {
      sub_1BA4A2E80((uint64_t)v115, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v122 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_77;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v115, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v130 = swift_getEnumCaseMultiPayload();
      *v115 = *v116;
      if (v130 == 1)
      {
        v115[1] = v116[1];
        v131 = type metadata accessor for GenericDataVisualization();
        v132 = *(int *)(v131 + 20);
        v152 = v13;
        v133 = (char *)v115 + v132;
        v134 = a3;
        v135 = (char *)v116 + v132;
        v157 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
        swift_bridgeObjectRetain();
        v136 = v135;
        a3 = v134;
        v157(v133, v136, v152);
        *(_QWORD *)((char *)v115 + *(int *)(v131 + 24)) = *(_QWORD *)((char *)v116 + *(int *)(v131 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_86:
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t initializeWithTake for FeedWebEmbed(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  void (*v55)(char *, char *, uint64_t);
  char *__dst;

  v3 = a3;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = a3[8];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = v3[9];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12((uint64_t)v14, (uint64_t)v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v17 = v3[11];
  *(_QWORD *)(a1 + v3[10]) = *(_QWORD *)(a2 + v3[10]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = v3[12];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  v21 = (int *)type metadata accessor for FeedHeadline(0);
  v22 = *((_QWORD *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v52 = v22;
    v53 = v10;
    v54 = v3;
    v55 = (void (*)(char *, char *, uint64_t))v12;
    *v19 = *v20;
    *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
    *((_BYTE *)v19 + 24) = *((_BYTE *)v20 + 24);
    *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
    *(_OWORD *)((char *)v19 + 40) = *(_OWORD *)((char *)v20 + 40);
    *((_BYTE *)v19 + 56) = *((_BYTE *)v20 + 56);
    v24 = v21[10];
    v25 = (char *)v19 + v24;
    v26 = (char *)v20 + v24;
    *v25 = *((_BYTE *)v20 + v24);
    v25[1] = *((_BYTE *)v20 + v24 + 1);
    v27 = (int *)type metadata accessor for FeedHeadline.State(0);
    v28 = v27[6];
    __dst = &v25[v28];
    v29 = &v26[v28];
    v30 = (int *)type metadata accessor for SharedItem();
    v51 = *((_QWORD *)v30 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v51 + 48))(v29, 1, v30))
    {
      v31 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      v10 = v53;
    }
    else
    {
      v32 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(__dst, v29, v32);
      __dst[v30[5]] = v29[v30[5]];
      *(_QWORD *)&__dst[v30[6]] = *(_QWORD *)&v29[v30[6]];
      v33 = v30[7];
      v34 = &v29[v33];
      v10 = v53;
      v55(&__dst[v33], v34, v53);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v51 + 56))(__dst, 0, 1, v30);
    }
    v25[v27[7]] = v26[v27[7]];
    v25[v27[8]] = v26[v27[8]];
    v25[v27[9]] = v26[v27[9]];
    v25[v27[10]] = v26[v27[10]];
    v35 = v21[11];
    v36 = (char *)v19 + v35;
    v37 = (char *)v20 + v35;
    v38 = sub_1BB871B24();
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v3 = v54;
    v12 = (void (*)(uint64_t, uint64_t, uint64_t))v55;
    *(_OWORD *)((char *)v19 + v21[12]) = *(_OWORD *)((char *)v20 + v21[12]);
    v41 = v21[13];
    v42 = *(_QWORD *)((char *)v20 + v41);
    if (v42 == 2)
      v42 = 2;
    *(_QWORD *)((char *)v19 + v41) = v42;
    *(_QWORD *)((char *)v19 + v21[14]) = *(_QWORD *)((char *)v20 + v21[14]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v52 + 56))(v19, 0, 1, v21);
  }
  v43 = v3[13];
  v44 = (_OWORD *)(a1 + v43);
  v45 = (_OWORD *)(a2 + v43);
  v46 = type metadata accessor for WebEmbedDataVisualization();
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v44 = *v45;
      v49 = type metadata accessor for GenericDataVisualization();
      v12((uint64_t)v44 + *(int *)(v49 + 20), (uint64_t)v45 + *(int *)(v49 + 20), v10);
      *(_QWORD *)((char *)v44 + *(int *)(v49 + 24)) = *(_QWORD *)((char *)v45 + *(int *)(v49 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v44, v45, *(_QWORD *)(v47 + 64));
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  *(_BYTE *)(a1 + v3[14]) = *(_BYTE *)(a2 + v3[14]);
  return a1;
}

uint64_t assignWithTake for FeedWebEmbed(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int *v49;
  uint64_t (*v50)(char *, uint64_t, int *);
  int v51;
  size_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void *, uint64_t, uint64_t);
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(char *, uint64_t, uint64_t);
  int v92;
  int v93;
  uint64_t (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  size_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  int *v101;
  int *v102;
  int *v103;
  void (*v104)(uint64_t, char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int *v110;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (_OWORD *)(a1 + 24);
  v8 = (_OWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 32) < 0x11uLL)
    goto LABEL_4;
  v9 = *(_QWORD *)(a2 + 32);
  if (v9 < 0x11)
  {
    sub_1BA905D68((uint64_t)v7);
LABEL_4:
    *v7 = *v8;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
  *(_QWORD *)(a1 + 32) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  swift_bridgeObjectRelease();
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1BB86C67C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40);
  v16(v12, v13, v14);
  v17 = a3[9];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v12) = v20(a1 + v17, 1, v14);
  v21 = v20((uint64_t)v19, 1, v14);
  v104 = (void (*)(uint64_t, char *, uint64_t))v16;
  if ((_DWORD)v12)
  {
    if (!v21)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v18, v19, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
LABEL_11:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_12;
  }
  v16((uint64_t)v18, (uint64_t)v19, v14);
LABEL_12:
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_release();
  v23 = a3[12];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = type metadata accessor for FeedHeadline(0);
  v106 = *(_QWORD *)(v26 - 8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
  v28 = v27(v24, 1, v26);
  v110 = (int *)v26;
  v29 = v27(v25, 1, v26);
  v108 = v15;
  v109 = v14;
  if (!v28)
  {
    if (v29)
    {
      sub_1BA4A2E80(v24, type metadata accessor for FeedHeadline);
      v30 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_17;
    }
    v103 = a3;
    v41 = *(_QWORD *)(v25 + 8);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *(_QWORD *)(v24 + 8) = v41;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
    *(_BYTE *)(v24 + 24) = *(_BYTE *)(v25 + 24);
    v42 = *(_QWORD *)(v25 + 40);
    *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
    *(_QWORD *)(v24 + 40) = v42;
    swift_unknownObjectRelease();
    *(_QWORD *)(v24 + 48) = *(_QWORD *)(v25 + 48);
    swift_unknownObjectRelease();
    *(_BYTE *)(v24 + 56) = *(_BYTE *)(v25 + 56);
    v43 = *(int *)(v26 + 40);
    v44 = (_BYTE *)(v24 + v43);
    v45 = v25 + v43;
    *v44 = *(_BYTE *)(v25 + v43);
    v44[1] = *(_BYTE *)(v25 + v43 + 1);
    v101 = (int *)type metadata accessor for FeedHeadline.State(0);
    v46 = v101[6];
    v47 = &v44[v46];
    v48 = (char *)(v45 + v46);
    v49 = (int *)type metadata accessor for SharedItem();
    v100 = *((_QWORD *)v49 - 1);
    v50 = *(uint64_t (**)(char *, uint64_t, int *))(v100 + 48);
    v107 = (uint64_t)v47;
    LODWORD(v47) = v50(v47, 1, v49);
    v51 = v50(v48, 1, v49);
    if ((_DWORD)v47)
    {
      if (v51)
      {
        v52 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for FeedItem.SharedState(0) - 8) + 64);
        v53 = (void *)v107;
LABEL_33:
        memcpy(v53, v48, v52);
        goto LABEL_36;
      }
      v63 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v107, v48, v63);
      *(_BYTE *)(v107 + v49[5]) = v48[v49[5]];
      *(_QWORD *)(v107 + v49[6]) = *(_QWORD *)&v48[v49[6]];
      (*(void (**)(uint64_t, char *, uint64_t))(v108 + 32))(v107 + v49[7], &v48[v49[7]], v109);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v100 + 56))(v107, 0, 1, v49);
    }
    else
    {
      if (v51)
      {
        sub_1BA4A2E80(v107, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
        v52 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for FeedItem.SharedState(0) - 8) + 64);
        v53 = (void *)v107;
        goto LABEL_33;
      }
      v64 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v107, v48, v64);
      *(_BYTE *)(v107 + v49[5]) = v48[v49[5]];
      v65 = v49[6];
      v66 = *(void **)(v107 + v65);
      *(_QWORD *)(v107 + v65) = *(_QWORD *)&v48[v65];

      v104(v107 + v49[7], &v48[v49[7]], v109);
    }
LABEL_36:
    v44[v101[7]] = *(_BYTE *)(v45 + v101[7]);
    v44[v101[8]] = *(_BYTE *)(v45 + v101[8]);
    v44[v101[9]] = *(_BYTE *)(v45 + v101[9]);
    v44[v101[10]] = *(_BYTE *)(v45 + v101[10]);
    v67 = v110[11];
    v68 = (void *)(v24 + v67);
    v69 = (void *)(v25 + v67);
    v70 = sub_1BB871B24();
    v71 = *(_QWORD *)(v70 - 8);
    v72 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v71 + 48);
    v73 = v72(v68, 1, v70);
    v74 = v72(v69, 1, v70);
    if (v73)
    {
      if (!v74)
      {
        (*(void (**)(void *, void *, uint64_t))(v71 + 32))(v68, v69, v70);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
        goto LABEL_42;
      }
    }
    else
    {
      if (!v74)
      {
        (*(void (**)(void *, void *, uint64_t))(v71 + 40))(v68, v69, v70);
LABEL_42:
        a3 = v103;
        v76 = v110[12];
        v77 = (_QWORD *)(v24 + v76);
        v78 = (_QWORD *)(v25 + v76);
        if (*(_QWORD *)(v24 + v76 + 8) >= 0x11uLL)
        {
          v79 = v78[1];
          if (v79 >= 0x11)
          {
            *v77 = *v78;
            v77[1] = v79;
            swift_bridgeObjectRelease();
LABEL_47:
            v80 = v110[13];
            v81 = (unint64_t *)(v24 + v80);
            v82 = *(_QWORD *)(v24 + v80);
            v83 = *(_QWORD *)(v25 + v80);
            if (v82 == 2)
            {
              if (v83 == 2)
                v83 = 2;
              goto LABEL_58;
            }
            if (v83 == 2)
            {
              sub_1BA905D9C(v24 + v80);
            }
            else
            {
              if (v82 < 2)
                goto LABEL_58;
              if (v83 >= 2)
              {
                *v81 = v83;
                swift_unknownObjectRelease();
                goto LABEL_59;
              }
              swift_unknownObjectRelease();
            }
            v83 = *(_QWORD *)(v25 + v80);
LABEL_58:
            *v81 = v83;
LABEL_59:
            v84 = v110[14];
            v85 = *(void **)(v24 + v84);
            *(_QWORD *)(v24 + v84) = *(_QWORD *)(v25 + v84);

            goto LABEL_60;
          }
          sub_1BA905D68((uint64_t)v77);
        }
        *(_OWORD *)v77 = *(_OWORD *)v78;
        goto LABEL_47;
      }
      (*(void (**)(void *, uint64_t))(v71 + 8))(v68, v70);
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_42;
  }
  if (v29)
  {
    v30 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_17:
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v30);
    memcpy((void *)v24, (const void *)v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_60;
  }
  v102 = a3;
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  *(_BYTE *)(v24 + 24) = *(_BYTE *)(v25 + 24);
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v25 + 40);
  *(_BYTE *)(v24 + 56) = *(_BYTE *)(v25 + 56);
  v32 = *(int *)(v26 + 40);
  v33 = (_BYTE *)(v24 + v32);
  v34 = v25 + v32;
  *v33 = *(_BYTE *)(v25 + v32);
  v33[1] = *(_BYTE *)(v25 + v32 + 1);
  v35 = (int *)type metadata accessor for FeedHeadline.State(0);
  v36 = v35[6];
  v37 = &v33[v36];
  v38 = (char *)(v34 + v36);
  v39 = (int *)type metadata accessor for SharedItem();
  v105 = *((_QWORD *)v39 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v105 + 48))(v38, 1, v39))
  {
    v40 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v54 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v37, v38, v54);
    v37[v39[5]] = v38[v39[5]];
    *(_QWORD *)&v37[v39[6]] = *(_QWORD *)&v38[v39[6]];
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(&v37[v39[7]], &v38[v39[7]], v109);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v105 + 56))(v37, 0, 1, v39);
  }
  a3 = v102;
  v33[v35[7]] = *(_BYTE *)(v34 + v35[7]);
  v33[v35[8]] = *(_BYTE *)(v34 + v35[8]);
  v33[v35[9]] = *(_BYTE *)(v34 + v35[9]);
  v33[v35[10]] = *(_BYTE *)(v34 + v35[10]);
  v55 = v110[11];
  v56 = (void *)(v24 + v55);
  v57 = (const void *)(v25 + v55);
  v58 = sub_1BB871B24();
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v59 + 32))(v56, v57, v58);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  *(_OWORD *)(v24 + v110[12]) = *(_OWORD *)(v25 + v110[12]);
  v61 = v110[13];
  v62 = *(_QWORD *)(v25 + v61);
  if (v62 == 2)
    v62 = 2;
  *(_QWORD *)(v24 + v61) = v62;
  *(_QWORD *)(v24 + v110[14]) = *(_QWORD *)(v25 + v110[14]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v106 + 56))(v24, 0, 1, v110);
LABEL_60:
  v86 = a3[13];
  v87 = (char *)(a1 + v86);
  v88 = (char *)(a2 + v86);
  v89 = type metadata accessor for WebEmbedDataVisualization();
  v90 = *(_QWORD *)(v89 - 8);
  v91 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48);
  v92 = v91(v87, 1, v89);
  v93 = v91(v88, 1, v89);
  if (!v92)
  {
    if (!v93)
    {
      if (a1 == a2)
        goto LABEL_74;
      sub_1BA4A2E80((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)v87 = *(_OWORD *)v88;
        v98 = type metadata accessor for GenericDataVisualization();
        (*(void (**)(char *, char *, uint64_t))(v108 + 32))(&v87[*(int *)(v98 + 20)], &v88[*(int *)(v98 + 20)], v109);
        *(_QWORD *)&v87[*(int *)(v98 + 24)] = *(_QWORD *)&v88[*(int *)(v98 + 24)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_74;
      }
      v96 = *(_QWORD *)(v90 + 64);
      goto LABEL_66;
    }
    sub_1BA4A2E80((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v94 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_65:
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v94);
    v96 = *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64);
LABEL_66:
    memcpy(v87, v88, v96);
    goto LABEL_74;
  }
  if (v93)
  {
    v94 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_65;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)v87 = *(_OWORD *)v88;
    v97 = type metadata accessor for GenericDataVisualization();
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(&v87[*(int *)(v97 + 20)], &v88[*(int *)(v97 + 20)], v109);
    *(_QWORD *)&v87[*(int *)(v97 + 24)] = *(_QWORD *)&v88[*(int *)(v97 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v87, v88, *(_QWORD *)(v90 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
LABEL_74:
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1BB12262C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[8];
    }
    else
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[9];
      }
      else
      {
        sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[12];
        }
        else
        {
          sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a3[13];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BB12275C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 48) = (a2 - 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[8];
    }
    else
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[9];
      }
      else
      {
        sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[12];
        }
        else
        {
          sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a4[13];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1BB12288C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSplitBackgroundSide.init(from:)(a1, a2);
}

uint64_t sub_1BB1228A0(_QWORD *a1)
{
  return FormatSplitBackgroundSide.encode(to:)(a1);
}

BOOL _s8NewsFeed25FormatSplitBackgroundSideO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[8];
  _QWORD v58[8];
  _QWORD v59[8];
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 *)(a1 + 64);
  v12 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v14 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 32);
  v15 = *(_QWORD *)(a2 + 40);
  v18 = *(_QWORD *)(a2 + 48);
  v17 = *(_QWORD *)(a2 + 56);
  v19 = *(_BYTE *)(a2 + 64);
  v59[0] = *(_QWORD *)a1;
  v59[1] = v2;
  v59[2] = v4;
  v59[3] = v5;
  v59[4] = v6;
  v59[5] = v7;
  v59[6] = v8;
  v59[7] = v9;
  v60 = v10;
  v61 = v12;
  v62 = v11;
  v63 = v14;
  v64 = v13;
  v65 = v16;
  v66 = v15;
  v67 = v18;
  v68 = v17;
  v69 = v19;
  if (v10 != 1)
  {
    if ((v19 & 1) == 0)
    {
      v58[0] = v3;
      v57[0] = v12;
      v30 = v12;
      v44 = v12;
      v45 = v16;
      v31 = v4;
      v32 = v14;
      v48 = v14;
      v33 = v5;
      v51 = v6;
      v52 = v8;
      v34 = v16;
      v35 = v18;
      v41 = v18;
      v36 = v7;
      v37 = v9;
      v54 = v9;
      v56 = v2;
      v38 = v2;
      sub_1BAA8C5C0(v30, v11, v32, v13, v34, v15, v35, v17, 0);
      sub_1BAA8C5C0(v3, v38, v31, v33, v51, v36, v52, v37, 0);
      sub_1BAA8C5C0(v3, v56, v31, v33, v51, v36, v52, v37, 0);
      sub_1BAA8C5C0(v44, v11, v48, v13, v45, v15, v41, v17, 0);
      static FormatColor.== infix(_:_:)((uint64_t)v58);
      v29 = v39;
      sub_1BB122FDC((uint64_t)v59);
      sub_1BAA4E044(v44, v11, v48, v13, v45, v15, v41, v17, 0);
      sub_1BAA4E044(v3, v56, v31, v33, v51, v36, v52, v54, 0);
      return v29;
    }
    goto LABEL_5;
  }
  if ((v19 & 1) == 0)
  {
LABEL_5:
    sub_1BAA8C5C0(v3, v2, v4, v5, v6, v7, v8, v9, v10);
    sub_1BAA8C5C0(v12, v11, v14, v13, v16, v15, v18, v17, v19);
    sub_1BB122FDC((uint64_t)v59);
    return 0;
  }
  v58[0] = v3;
  v58[1] = v2;
  v58[2] = v4;
  v58[3] = v5;
  v58[4] = v6;
  v58[5] = v7;
  v58[6] = v8;
  v58[7] = v9;
  v57[0] = v12;
  v57[1] = v11;
  v57[2] = v14;
  v57[3] = v13;
  v57[4] = v16;
  v57[5] = v15;
  v57[6] = v18;
  v57[7] = v17;
  v20 = v11;
  v21 = v4;
  v42 = v17;
  v43 = v11;
  v22 = v5;
  v23 = v13;
  v46 = v15;
  v47 = v13;
  v24 = v6;
  v49 = v7;
  v25 = v15;
  v26 = v17;
  v27 = v8;
  v53 = v9;
  v55 = v2;
  v28 = v2;
  sub_1BAA8C5C0(v12, v20, v14, v23, v16, v25, v18, v26, 1);
  v50 = v21;
  sub_1BAA8C5C0(v3, v28, v21, v22, v24, v49, v27, v53, 1);
  sub_1BAA8C5C0(v3, v55, v21, v22, v24, v49, v27, v53, 1);
  sub_1BAA8C5C0(v12, v43, v14, v47, v16, v46, v18, v42, 1);
  v29 = _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0((uint64_t)v58, (uint64_t)v57);
  sub_1BB122FDC((uint64_t)v59);
  sub_1BAA4E044(v12, v43, v14, v47, v16, v46, v18, v42, 1);
  sub_1BAA4E044(v3, v55, v50, v22, v24, v49, v27, v53, 1);
  return v29;
}

unint64_t sub_1BB122C58(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB122C7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB122C7C()
{
  unint64_t result;

  result = qword_1EF2BBB90;
  if (!qword_1EF2BBB90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSplitBackgroundSide, &type metadata for FormatSplitBackgroundSide);
    atomic_store(result, (unint64_t *)&qword_1EF2BBB90);
  }
  return result;
}

unint64_t sub_1BB122CC0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE78630();
  a1[2] = sub_1BAEF93E4();
  result = sub_1BB122CF4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB122CF4()
{
  unint64_t result;

  result = qword_1EF2BBB98;
  if (!qword_1EF2BBB98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSplitBackgroundSide, &type metadata for FormatSplitBackgroundSide);
    atomic_store(result, (unint64_t *)&qword_1EF2BBB98);
  }
  return result;
}

uint64_t destroy for FormatSplitBackgroundSide(uint64_t a1)
{
  return sub_1BAA4E044(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for FormatSplitBackgroundSide(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1BAA8C5C0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for FormatSplitBackgroundSide(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1BAA8C5C0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  sub_1BAA4E044(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for FormatSplitBackgroundSide(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_BYTE *)(a2 + 64);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 64) = v3;
  sub_1BAA4E044(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSplitBackgroundSide(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSplitBackgroundSide(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BB122FC0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 64) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSplitBackgroundSide()
{
  return &type metadata for FormatSplitBackgroundSide;
}

uint64_t sub_1BB122FDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 136);
  sub_1BAA4E044(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  sub_1BAA4E044(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

void sub_1BB123080(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, char *a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double Width;
  uint64_t v16;
  CGRect v17;
  CGRect v18;

  v12 = *(_QWORD *)v6;
  v13 = *(unsigned __int8 *)(v6 + 8);
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v14 = sub_1BA72BED4(v16, v12);
  swift_bridgeObjectRelease();
  swift_release();
  if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) != 0)
  {
    if (v14 > -9.22337204e18)
    {
      if (v14 < 9.22337204e18)
      {
        v17.origin.x = a1;
        v17.origin.y = a2;
        v17.size.width = a3;
        v17.size.height = a4;
        Width = CGRectGetWidth(v17);
        sub_1BB12326C((uint64_t)v14, a6, Width);
        v18.origin.x = a1;
        v18.origin.y = a2;
        v18.size.width = a3;
        v18.size.height = a4;
        CGRectGetHeight(v18);
        __asm { BR              X9 }
      }
LABEL_7:
      __break(1u);
      JUMPOUT(0x1BB123238);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_7;
}

void sub_1BB12326C(int64_t a1, char *a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  int v31;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[8];

  if (a1 >= 1)
  {
    v33 = *(_QWORD *)(v3 + 16);
    v31 = *(unsigned __int8 *)(v3 + 24);
    v34 = MEMORY[0x1E0DEE9D8];
    v7 = sub_1BA7447E8(0, a1, 0);
    v8 = 0;
    v9 = 1;
    v10 = a1;
    while (1)
    {
      if (v8)
        goto LABEL_22;
      v12 = *(_QWORD *)(v34 + 16);
      v11 = *(_QWORD *)(v34 + 24);
      if (v12 >= v11 >> 1)
        v7 = sub_1BA7447E8(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v34 + 16) = v12 + 1;
      v13 = v34 + 16 * v12;
      *(_QWORD *)(v13 + 32) = 87;
      *(_QWORD *)(v13 + 40) = 0xE100000000000000;
      v8 = v9 == a1;
      if (v9 == a1)
      {
        v9 = 0;
      }
      else if (__OFADD__(v9++, 1))
      {
        __break(1u);
LABEL_18:
        v26 = (void *)v7;
        swift_release();
        sub_1BA741B54((uint64_t)v35);
        swift_bridgeObjectRelease();
        objc_msgSend(v26, sel_boundingRectWithSize_options_context_, 33, 0, a3, 100000.0);
        if (v31)
          CGRectIntegral(*(CGRect *)&v27);
        swift_release();

        return;
      }
      if (!--v10)
      {
        sub_1BA6D249C();
        sub_1BA6A0BA4();
        v15 = sub_1BB872904();
        v17 = v16;
        swift_bridgeObjectRelease();
        v18 = (uint64_t *)(*(_QWORD *)&a2[OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory]
                        + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
        swift_beginAccess();
        v19 = *v18;
        v20 = v18[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = v33;
        v22 = swift_retain();
        v23 = sub_1BA748BCC(v22, (uint64_t)a2, v19, v20);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return;
        }
        v24 = v23;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if (v24)
          v21 = v24;
        else
          swift_retain();
        swift_retain();
        swift_retain();
        v25 = sub_1BA742048(v21, a2);
        sub_1BA743168(v25, v21, (uint64_t)a2, 18, v35);
        type metadata accessor for FormatAttributedString();
        swift_allocObject();
        swift_bridgeObjectRetain();
        sub_1BA741FD8((uint64_t)v35);
        sub_1BA741BFC(v15, v17, (uint64_t)v35);
        sub_1BA741B54((uint64_t)v35);
        sub_1BA714CBC((uint64_t)a2);
        goto LABEL_18;
      }
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
}

uint64_t sub_1BB123600@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFrameExpressionLogicTextLines.init(from:)(a1, a2);
}

uint64_t sub_1BB123614(_QWORD *a1)
{
  return FormatFrameExpressionLogicTextLines.encode(to:)(a1);
}

uint64_t _s8NewsFeed35FormatFrameExpressionLogicTextLinesV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char v14;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a1 + 24);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(unsigned __int8 *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1BA881EAC(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
    return 0;
  v9 = FormatOperator.rawValue.getter();
  v11 = v10;
  if (v9 == FormatOperator.rawValue.getter() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v14 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v14 & 1) == 0)
      return result;
  }
  if ((_s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v3, v6) & 1) != 0)
    return v4 ^ v7 ^ 1u;
  else
    return 0;
}

unint64_t sub_1BB12375C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB123780();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB123780()
{
  unint64_t result;

  result = qword_1EF2BBBA0;
  if (!qword_1EF2BBBA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpressionLogicTextLines, &type metadata for FormatFrameExpressionLogicTextLines);
    atomic_store(result, (unint64_t *)&qword_1EF2BBBA0);
  }
  return result;
}

unint64_t sub_1BB1237C4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE775F0();
  a1[2] = sub_1BAEF9C68();
  result = sub_1BB1237F8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1237F8()
{
  unint64_t result;

  result = qword_1EF2BBBA8;
  if (!qword_1EF2BBBA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpressionLogicTextLines, &type metadata for FormatFrameExpressionLogicTextLines);
    atomic_store(result, (unint64_t *)&qword_1EF2BBBA8);
  }
  return result;
}

uint64_t destroy for FormatFrameExpressionLogicTextLines()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for FormatFrameExpressionLogicTextLines(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatFrameExpressionLogicTextLines(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for FormatFrameExpressionLogicTextLines(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatFrameExpressionLogicTextLines(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatFrameExpressionLogicTextLines(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFrameExpressionLogicTextLines()
{
  return &type metadata for FormatFrameExpressionLogicTextLines;
}

uint64_t SportsTaxonomyGraphHeader.title.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  uint64_t v5;

  v1 = *v0;
  v2 = v0[1];
  if (v2)
  {
    if (v2 != 1)
    {
      swift_bridgeObjectRetain();
      return v1;
    }
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  }
  else
  {
    type metadata accessor for Localized();
    v5 = swift_getObjCClassFromMetadata();
    v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v5);
  }
  v1 = sub_1BB86C340();

  return v1;
}

uint64_t SportsTaxonomyGraphHeader.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[1];
  if (!v1)
    return 0x74726F70536C6C61;
  if (v1 == 1)
    return 0x726F705365726F6DLL;
  v2 = *v0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BB123BE8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[1];
  if (!v1)
    return 0x74726F70536C6C61;
  if (v1 == 1)
    return 0x726F705365726F6DLL;
  v2 = *v0;
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t destroy for SportsTaxonomyGraphHeader(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *_s8NewsFeed25SportsTaxonomyGraphHeaderOwCP_0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = a2[1];
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

_QWORD *assignWithCopy for SportsTaxonomyGraphHeader(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = a1[1];
  v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v4 = a2[1];
  v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithTake for SportsTaxonomyGraphHeader(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = a2[1];
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsTaxonomyGraphHeader(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) >= 2)
    return v4;
  else
    return 0;
}

_QWORD *sub_1BB123E40(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphHeader()
{
  return &type metadata for SportsTaxonomyGraphHeader;
}

Swift::Void __swiftcall FormatProgressCircleView.setUpCircleView(options:)(NewsFeed::FormatProgressCircleOptionsResolved *options)
{
  uint64_t v1;
  Swift::Bool clockwise;
  Swift::Double stepPercentage;
  Swift::Double minPercentage;
  Swift::Double maxPercentage;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  clockwise = options->clockwise;
  stepPercentage = options->stepPercentage;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_radius) = options->radius;
  minPercentage = options->minPercentage;
  maxPercentage = options->maxPercentage;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_clockwise) = clockwise;
  v6 = v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_stepPercentage;
  *(Swift::Double *)v6 = stepPercentage;
  *(_BYTE *)(v6 + 8) = 0;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_minPercentage) = minPercentage;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_maxPercentage) = maxPercentage;
  v7 = (void *)**((_QWORD **)&unk_1E72E71F0 + options->lineCap);
  v9 = *(id *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_lineCap);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_lineCap) = v7;
  v8 = v7;

}

Swift::Void __swiftcall FormatProgressCircleView.setProgressColors(backgroundColor:strokeColor:)(UIColor backgroundColor, UIColor strokeColor)
{
  uint64_t v2;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer);
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_clearColor);
  v8 = objc_msgSend(v7, sel_CGColor);

  objc_msgSend(v5, sel_setFillColor_, v8);
  v9 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer);
  v10 = objc_msgSend(v6, sel_clearColor);
  v11 = objc_msgSend(v10, sel_CGColor);

  objc_msgSend(v9, sel_setFillColor_, v11);
  v12 = -[objc_class CGColor](backgroundColor.super.isa, sel_CGColor);
  objc_msgSend(v5, sel_setStrokeColor_, v12);

  v13 = -[objc_class CGColor](strokeColor.super.isa, sel_CGColor);
  objc_msgSend(v9, sel_setStrokeColor_, v13);

}

Swift::Void __swiftcall FormatProgressCircleView.updateCircleProgress(progress:)(Swift::Double progress)
{
  _BYTE *v1;
  double v2;
  double *v3;
  double v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat Height;
  uint64_t v8;
  CGFloat v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  CGFloat v14;
  CGFloat v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v2 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_minPercentage];
  if (v2 < progress)
  {
    v2 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_maxPercentage];
    if (v2 > progress)
    {
      v3 = (double *)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_stepPercentage];
      if ((v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_stepPercentage + 8] & 1) != 0)
      {
        v2 = progress;
      }
      else
      {
        v4 = round(progress / *v3);
        if (*v3 > 0.0)
          v2 = *v3 * v4;
        else
          v2 = progress;
      }
    }
  }
  objc_msgSend(v1, sel_bounds);
  v5 = CGRectGetWidth(v21) * 0.5;
  objc_msgSend(v1, sel_bounds);
  v6 = CGRectGetHeight(v22) * 0.5;
  objc_msgSend(v1, sel_bounds);
  Height = CGRectGetHeight(v23);
  v8 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_radius;
  v9 = Height * 0.5 - *(double *)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_radius] * 0.5;
  v10 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_clockwise;
  v11 = v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_clockwise];
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, v11, v5, v6, v9, 0.0, 6.28318531);
  objc_msgSend(v1, sel_bounds);
  v14 = CGRectGetWidth(v24) * 0.5;
  objc_msgSend(v1, sel_bounds);
  v15 = CGRectGetHeight(v25) * 0.5;
  objc_msgSend(v1, sel_bounds);
  v20 = objc_msgSend(v12, sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, v1[v10], v14, v15, CGRectGetHeight(v26) * 0.5 - *(double *)&v1[v8] * 0.5, -1.57079633, v2 * 360.0 * 3.14159265 / 180.0 + -1.57079633);
  v16 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer];
  v17 = objc_msgSend(v13, sel_CGPath);
  objc_msgSend(v16, sel_setPath_, v17);

  objc_msgSend(v16, sel_setLineWidth_, *(double *)&v1[v8]);
  v18 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer];
  v19 = objc_msgSend(v20, sel_CGPath);
  objc_msgSend(v18, sel_setPath_, v19);

  objc_msgSend(v18, sel_setLineWidth_, *(double *)&v1[v8]);
  objc_msgSend(v18, sel_setLineCap_, *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_lineCap]);

}

uint64_t FormatProgressCircleView.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatProgressCircleView.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressCircleView.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

char *sub_1BB124420(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  char *v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  objc_super v30;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = &v4[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0xE000000000000000;
  v12 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer;
  v13 = objc_allocWithZone(MEMORY[0x1E0CD2840]);
  v14 = v4;
  *(_QWORD *)&v5[v12] = objc_msgSend(v13, sel_init);
  v15 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_radius] = 0;
  v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_clockwise] = 0;
  v16 = &v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_stepPercentage];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_minPercentage] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_maxPercentage] = 0x3FF0000000000000;
  v17 = (void *)*MEMORY[0x1E0CD3008];
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_lineCap] = *MEMORY[0x1E0CD3008];
  v18 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_layerDelegate;
  v19 = objc_allocWithZone((Class)type metadata accessor for FormatProgressCircleView.NonAnimatingLayerDelegate());
  v20 = v17;
  *(_QWORD *)&v14[v18] = objc_msgSend(v19, sel_init);

  v30.receiver = v14;
  v30.super_class = ObjectType;
  v21 = (char *)objc_msgSendSuper2(&v30, sel_initWithFrame_, a1, a2, a3, a4);
  v22 = objc_msgSend(v21, sel_layer);
  v23 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer;
  objc_msgSend(v22, sel_addSublayer_, *(_QWORD *)&v21[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer]);

  v24 = objc_msgSend(v21, sel_layer);
  v25 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer;
  objc_msgSend(v24, sel_addSublayer_, *(_QWORD *)&v21[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer]);

  v26 = *(void **)&v21[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_layerDelegate];
  objc_msgSend(*(id *)&v21[v23], sel_setDelegate_, v26);
  v27 = *(id *)&v21[v25];
  v28 = v26;
  objc_msgSend(v27, sel_setDelegate_, v28);

  return v21;
}

Swift::Void __swiftcall FormatProgressCircleView.layoutSubviews()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_layoutSubviews);
  v1 = objc_msgSend(v0, sel_layer);
  v2 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  v3 = objc_msgSend(v2, sel_CGColor);

  objc_msgSend(v1, sel_setBackgroundColor_, v3);
}

id sub_1BB1248D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FormatProgressCircleView.NonAnimatingLayerDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id FormatProgressCircleView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BB1249A8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for FormatProgressCircleView.NonAnimatingLayerDelegate()
{
  return objc_opt_self();
}

void sub_1BB124A20()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;

  v1 = &v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier];
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  v2 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v3 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_radius] = 0;
  v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_clockwise] = 0;
  v4 = &v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_stepPercentage];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_minPercentage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_maxPercentage] = 0x3FF0000000000000;
  v5 = (void *)*MEMORY[0x1E0CD3008];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_lineCap] = *MEMORY[0x1E0CD3008];
  v6 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_layerDelegate;
  v7 = objc_allocWithZone((Class)type metadata accessor for FormatProgressCircleView.NonAnimatingLayerDelegate());
  v8 = v5;
  *(_QWORD *)&v0[v6] = objc_msgSend(v7, sel_init);

  sub_1BB873EAC();
  __break(1u);
}

void sub_1BB124B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  sub_1BA8E5458();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v7 = sub_1BB86EB84();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED476C08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v3, v8, v7);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v9 = type metadata accessor for FormatVersionRequirement(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 0, 1, v9);
  *(_QWORD *)v6 = 0xD000000000000010;
  *((_QWORD *)v6 + 1) = 0x80000001BB96DF20;
  *((_QWORD *)v6 + 3) = 0;
  *((_QWORD *)v6 + 4) = 0;
  *((_QWORD *)v6 + 2) = 3;
  v6[40] = 0;
  *((_QWORD *)v6 + 6) = MEMORY[0x1E0DEE9D8];
  sub_1BA5193C4((uint64_t)v3, (uint64_t)&v6[*(int *)(v4 + 28)], (uint64_t (*)(_QWORD))sub_1BA8E5458);
  sub_1BB3D7D48((uint64_t)v6);
  sub_1BAA736BC((uint64_t)v6);
  if (!v0)
    sub_1BAC319A0();
}

uint64_t FormatAnimationNodeSpringAnimation.keyPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 64);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_1BA51A92C(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t FormatAnimationNodeSpringAnimation.cumulative.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

uint64_t FormatAnimationNodeSpringAnimation.additive.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 112);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

uint64_t FormatAnimationNodeSpringAnimation.mass.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t FormatAnimationNodeSpringAnimation.stiffness.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 128);
  return swift_bridgeObjectRetain();
}

uint64_t FormatAnimationNodeSpringAnimation.damping.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 136);
  return swift_bridgeObjectRetain();
}

uint64_t FormatAnimationNodeSpringAnimation.initialVelocity.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 144);
  return swift_bridgeObjectRetain();
}

uint64_t FormatAnimationNodeSpringAnimation.mediaTiming.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[144];

  sub_1BA5193C4(v1 + 152, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA89631C);
  sub_1BA5193C4((uint64_t)v4, a1, (uint64_t (*)(_QWORD))sub_1BA89631C);
  return sub_1BA8966F8((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
}

uint64_t FormatAnimationNodeSpringAnimation.__allocating_init(keyPath:cumulative:additive:mass:stiffness:damping:initialVelocity:mediaTiming:)(__int128 *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v16;

  v16 = swift_allocObject();
  FormatAnimationNodeSpringAnimation.init(keyPath:cumulative:additive:mass:stiffness:damping:initialVelocity:mediaTiming:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

uint64_t FormatAnimationNodeSpringAnimation.init(keyPath:cumulative:additive:mass:stiffness:damping:initialVelocity:mediaTiming:)(__int128 *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[152];

  v21 = a1[1];
  v22 = *a1;
  v9 = *((_QWORD *)a1 + 4);
  v10 = *((_QWORD *)a1 + 5);
  v11 = *((_BYTE *)a1 + 48);
  v12 = *a2;
  v13 = a2[1];
  v14 = *((_BYTE *)a2 + 16);
  v15 = *a3;
  v16 = a3[1];
  v17 = *((_BYTE *)a3 + 16);
  v19 = *a5;
  v20 = *a4;
  v23 = *a7;
  v24 = *a6;
  sub_1BA5193C4(a8, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA89631C);
  *(_OWORD *)(v8 + 16) = v22;
  *(_OWORD *)(v8 + 32) = v21;
  *(_QWORD *)(v8 + 48) = v9;
  *(_QWORD *)(v8 + 56) = v10;
  *(_BYTE *)(v8 + 64) = v11;
  *(_QWORD *)(v8 + 72) = v12;
  *(_QWORD *)(v8 + 80) = v13;
  *(_BYTE *)(v8 + 88) = v14;
  *(_QWORD *)(v8 + 96) = v15;
  *(_QWORD *)(v8 + 104) = v16;
  *(_BYTE *)(v8 + 112) = v17;
  *(_QWORD *)(v8 + 120) = v20;
  *(_QWORD *)(v8 + 128) = v19;
  *(_QWORD *)(v8 + 136) = v24;
  *(_QWORD *)(v8 + 144) = v23;
  sub_1BA5193C4((uint64_t)v25, v8 + 152, (uint64_t (*)(_QWORD))sub_1BA89631C);
  return v8;
}

uint64_t FormatAnimationNodeSpringAnimation.deinit()
{
  uint64_t v0;
  _BYTE v2[144];

  sub_1BA51A9E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_1BA796C70(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  sub_1BA796C70(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 112));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5193C4(v0 + 152, (uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BA89631C);
  sub_1BA8966F8((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
  return v0;
}

uint64_t FormatAnimationNodeSpringAnimation.__deallocating_deinit()
{
  FormatAnimationNodeSpringAnimation.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB12502C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2BBC90, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeSpringAnimation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB125068(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED39F0D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeSpringAnimation);
  a1[2] = sub_1BA50AD30(&qword_1ED39F0D0, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeSpringAnimation);
  result = sub_1BA50AD30(&qword_1EF2BBC98, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeSpringAnimation);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB1250E0(_QWORD *a1)
{
  return FormatAnimationNodeSpringAnimation.encode(to:)(a1);
}

uint64_t sub_1BB125100(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed025FormatAnimationNodeSpringD0C2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

void sub_1BB12510C()
{
  sub_1BB124B6C();
}

uint64_t method lookup function for FormatAnimationNodeSpringAnimation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatAnimationNodeSpringAnimation.__allocating_init(keyPath:cumulative:additive:mass:stiffness:damping:initialVelocity:mediaTiming:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1BB125140()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1BB125164(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  void (*v15)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  _QWORD *v34;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t inited;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char v44;
  _BYTE v45[144];
  _OWORD v46[2];
  uint64_t v47;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, v2);
  v3 = type metadata accessor for FormatInspectionItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v2);
  v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87A390;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
  sub_1BA8C88C8(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB898AA0;
  v38 = v10;
  v11 = (_QWORD *)(v10 + v9);
  if (a1)
  {
    v12 = *(_QWORD *)(a1 + 72);
    v13 = *(_QWORD *)(a1 + 80);
    v14 = *(_BYTE *)(a1 + 88);
    sub_1BA796C58(v12, v13, v14);
  }
  else
  {
    v12 = 0;
    v13 = 0;
    v14 = -1;
  }
  sub_1BAAFA830(0x6974616C756D7543, 0xEA00000000006576, v12, v13, v14, v11);
  v15 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v15(v11, 0, 1, v3);
  if (a1)
  {
    v16 = *(_QWORD *)(a1 + 96);
    v17 = *(_QWORD *)(a1 + 104);
    v18 = *(_BYTE *)(a1 + 112);
    sub_1BA796C58(v16, v17, v18);
    sub_1BAAFA830(0x6576697469646441, 0xE800000000000000, v16, v17, v18, (_QWORD *)((char *)v11 + v8));
    v15((_QWORD *)((char *)v11 + v8), 0, 1, v3);
    v19 = *(_QWORD *)(a1 + 120);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BAAFA830(0x6576697469646441, 0xE800000000000000, 0, 0, 0xFFu, (_QWORD *)((char *)v11 + v8));
    v15((_QWORD *)((char *)v11 + v8), 0, 1, v3);
    v19 = 0;
  }
  sub_1BAAF3E48(1936941389, 0xE400000000000000, v19, (_QWORD *)((char *)v11 + 2 * v8));
  v15((_QWORD *)((char *)v11 + 2 * v8), 0, 1, v3);
  if (a1)
  {
    v20 = *(_QWORD *)(a1 + 128);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x73656E6666697453, 0xE900000000000073, v20, (_QWORD *)((char *)v11 + 3 * v8));
    v15((_QWORD *)((char *)v11 + 3 * v8), 0, 1, v3);
    v21 = *(_QWORD *)(a1 + 136);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BAAF3E48(0x73656E6666697453, 0xE900000000000073, 0, (_QWORD *)((char *)v11 + 3 * v8));
    v15((_QWORD *)((char *)v11 + 3 * v8), 0, 1, v3);
    v21 = 0;
  }
  v37 = (_QWORD *)(v40 + v36);
  sub_1BAAF3E48(0x676E69706D6144, 0xE700000000000000, v21, (_QWORD *)((char *)v11 + 4 * v8));
  v15((_QWORD *)((char *)v11 + 4 * v8), 0, 1, v3);
  if (a1)
  {
    v22 = *(_QWORD *)(a1 + 144);
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = 0;
  }
  sub_1BAAF3E48(0xD000000000000010, 0x80000001BB97AAF0, v22, (_QWORD *)((char *)v11 + 5 * v8));
  v15((_QWORD *)((char *)v11 + 5 * v8), 0, 1, v3);
  sub_1BAF89090(0xD000000000000010, 0x80000001BB97AAD0, 0, 0, v38, v46);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v5 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v5 + 64) = &off_1E72D2F60;
  v23 = swift_allocObject();
  *(_QWORD *)(v5 + 32) = v23;
  *(_QWORD *)(v23 + 48) = v47;
  v24 = v46[1];
  *(_OWORD *)(v23 + 16) = v46[0];
  *(_OWORD *)(v23 + 32) = v24;
  if (a1)
  {
    sub_1BA5193C4(a1 + 152, (uint64_t)&v41, (uint64_t (*)(_QWORD))sub_1BA89631C);
    sub_1BA8966F8((uint64_t)&v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
  }
  else
  {
    sub_1BAA2BE10((uint64_t)&v41);
  }
  sub_1BA5193C4((uint64_t)&v41, (uint64_t)v45, (uint64_t (*)(_QWORD))sub_1BA89631C);
  sub_1BA5193C4((uint64_t)v45, (uint64_t)&v41, (uint64_t (*)(_QWORD))sub_1BA89631C);
  v25 = sub_1BB004468((uint64_t)&v41);
  sub_1BA8966F8((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
  *(_QWORD *)(v5 + 96) = &type metadata for FormatInspection;
  *(_QWORD *)(v5 + 104) = &off_1E7335C38;
  *(_QWORD *)(v5 + 72) = v25;
  v26 = sub_1BA9747FC(v5);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v27 = sub_1BB6DF010(v26);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(1701869908, 0xE400000000000000, (uint64_t)v27, 0x676E69727053, 0xE600000000000000, v37);
  if (a1)
  {
    v28 = *(_BYTE *)(a1 + 64);
    v29 = *(_OWORD *)(a1 + 32);
    v41 = *(_OWORD *)(a1 + 16);
    v42 = v29;
    v43 = *(_OWORD *)(a1 + 48);
    v44 = v28;
    sub_1BAFCED48();
  }
  else
  {
    v30 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v41 = v40;
  sub_1BB383BA8(v30);
  v31 = sub_1BA97461C(v41);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x6F6974616D696E41, 0xE90000000000006ELL, 0, 0, v31, &v41);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v32 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v32;
  *(_QWORD *)(v32 + 48) = v43;
  v33 = v42;
  *(_OWORD *)(v32 + 16) = v41;
  *(_OWORD *)(v32 + 32) = v33;
  v34 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v34;
}

uint64_t sub_1BB125818()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t static FormatColorConditionalProcessor.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;

  v2 = a1[1];
  v3 = *(_QWORD *)(a2 + 8);
  v6 = *a1;
  static FormatColorExpression.== infix(_:_:)((uint64_t)&v6);
  if ((v4 & 1) != 0)
    return sub_1BA8884D4(v2, v3);
  else
    return 0;
}

_QWORD *FormatColorConditionalProcessor.init(expression:processors:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1BB1258B0(char *a1, unsigned __int8 *a2)
{
  return sub_1BB7EF720(*a1, *a2);
}

uint64_t sub_1BB1258BC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB125964()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB1259E8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB125A8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB125E9C();
  *a1 = result;
  return result;
}

void sub_1BB125AB8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = 0xEA00000000006E6FLL;
  v3 = *v1;
  v4 = 0xEA00000000007372;
  if (v3 != 1)
    v4 = 0xE900000000000072;
  v5 = v3 == 0;
  if (*v1)
    v6 = 0x6F737365636F7270;
  else
    v6 = 0x6973736572707865;
  if (!v5)
    v2 = v4;
  *a1 = v6;
  a1[1] = v2;
}

uint64_t sub_1BB125B20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB125E9C();
  *a1 = result;
  return result;
}

uint64_t sub_1BB125B44()
{
  sub_1BA582108();
  return sub_1BB874710();
}

uint64_t sub_1BB125B6C()
{
  sub_1BA582108();
  return sub_1BB87471C();
}

uint64_t sub_1BB125B94(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;

  v2 = a1[1];
  v3 = *(_QWORD *)(a2 + 8);
  v6 = *a1;
  static FormatColorExpression.== infix(_:_:)((uint64_t)&v6);
  if ((v4 & 1) != 0)
    return sub_1BA8884D4(v2, v3);
  else
    return 0;
}

unint64_t sub_1BB125BEC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA617400();
  a1[2] = sub_1BA5D96A4();
  result = sub_1BB125C20();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB125C20()
{
  unint64_t result;

  result = qword_1EF2BBCA0;
  if (!qword_1EF2BBCA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorConditionalProcessor, &type metadata for FormatColorConditionalProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2BBCA0);
  }
  return result;
}

uint64_t destroy for FormatColorConditionalProcessor()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8NewsFeed31FormatColorConditionalProcessorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatColorConditionalProcessor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FormatColorConditionalProcessor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatColorConditionalProcessor()
{
  return &type metadata for FormatColorConditionalProcessor;
}

uint64_t storeEnumTagSinglePayload for FormatColorConditionalProcessor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB125DD4 + 4 * byte_1BB8EE06F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB125E08 + 4 * byte_1BB8EE06A[v4]))();
}

uint64_t sub_1BB125E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB125E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB125E18);
  return result;
}

uint64_t sub_1BB125E24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB125E2CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB125E30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB125E38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatColorConditionalProcessor.CodingKeys()
{
  return &type metadata for FormatColorConditionalProcessor.CodingKeys;
}

unint64_t sub_1BB125E58()
{
  unint64_t result;

  result = qword_1EF2BBCA8;
  if (!qword_1EF2BBCA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EE224, &type metadata for FormatColorConditionalProcessor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BBCA8);
  }
  return result;
}

uint64_t sub_1BB125E9C()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

void sub_1BB125EE4()
{
  qword_1EF3D0718 = 0x4064000000000000;
}

id sub_1BB125EF4(uint64_t a1)
{
  char *v1;
  char *v2;
  __int128 v3;

  v2 = &v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame];
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v2 = *(_OWORD *)a1;
  *((_OWORD *)v2 + 1) = v3;
  v2[48] = *(_BYTE *)(a1 + 48);
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  swift_bridgeObjectRelease();
  return objc_msgSend(v1, sel_setNeedsLayout);
}

char *sub_1BB125F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *ObjCClassFromMetadata;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  uint64_t inited;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  uint64_t v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  objc_class *ObjectType;
  id v74;
  uint64_t v75;
  objc_super v76;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = &v4[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v8 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v7 + 4) = 0;
  *((_QWORD *)v7 + 5) = v8;
  v7[48] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v9 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLayer;
  v10 = objc_allocWithZone(MEMORY[0x1E0CD2840]);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_init);
  v12 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLabel;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_zIndexLabel;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_borderLayers] = v8;
  v14 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton;
  sub_1BB870078();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  *(_QWORD *)&v11[v14] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  v16 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_leftBorderButton;
  *(_QWORD *)&v11[v16] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  v17 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_rightBorderButton;
  *(_QWORD *)&v11[v17] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  v18 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_topBorderButton;
  *(_QWORD *)&v11[v18] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  v19 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_bottomBorderButton;
  *(_QWORD *)&v11[v19] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);

  if (a3)
  {
    v20 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  v76.receiver = v11;
  v76.super_class = ObjectType;
  v21 = (char *)objc_msgSendSuper2(&v76, sel_initWithStyle_reuseIdentifier_, a1, v20);

  v22 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLayer;
  v23 = *(void **)&v21[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLayer];
  v24 = v21;
  objc_msgSend(v23, sel_setLineWidth_, 1.0);
  sub_1BA65E330();
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB8856E0;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  v26 = v23;
  *(_QWORD *)(v25 + 32) = sub_1BB8738A0();
  sub_1BB872DCC();
  v27 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setLineDashPattern_, v27);

  v28 = *(void **)&v21[v22];
  v29 = (void *)objc_opt_self();
  v30 = v28;
  v31 = objc_msgSend(v29, sel_lightGrayColor);
  v32 = objc_msgSend(v31, sel_CGColor);

  objc_msgSend(v30, sel_setStrokeColor_, v32);
  v33 = *(id *)&v21[v22];
  v74 = v29;
  v34 = objc_msgSend(v29, sel_clearColor);
  v35 = objc_msgSend(v34, sel_CGColor);

  objc_msgSend(v33, sel_setFillColor_, v35);
  v36 = objc_msgSend(v24, sel_contentView);
  v37 = objc_msgSend(v36, sel_layer);

  objc_msgSend(v37, sel_addSublayer_, *(_QWORD *)&v21[v22]);
  v38 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLabel;
  v39 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLabel];
  v40 = (void *)objc_opt_self();
  v41 = v39;
  v42 = objc_msgSend(v40, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v41, sel_setFont_, v42);

  v43 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v43, sel_addSubview_, *(_QWORD *)&v24[v38]);

  v44 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_zIndexLabel;
  v45 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_zIndexLabel];
  v46 = objc_msgSend(v40, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v45, sel_setFont_, v46);

  v47 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v47, sel_addSubview_, *(_QWORD *)&v24[v44]);

  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB895C60;
  v49 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_leftBorderButton];
  *(_QWORD *)(inited + 32) = v49;
  v50 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_rightBorderButton];
  *(_QWORD *)(inited + 40) = v50;
  v51 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_topBorderButton];
  *(_QWORD *)(inited + 48) = v51;
  v52 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_bottomBorderButton];
  *(_QWORD *)(inited + 56) = v52;
  v75 = inited;
  sub_1BB872DCC();
  if ((v75 & 0xC000000000000001) == 0 && *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_15;
  }
  v53 = v49;
  v54 = v50;
  v55 = v51;
  v56 = v52;
  v57 = (void *)objc_opt_self();
  v58 = 0;
  do
  {
    if ((v75 & 0xC000000000000001) != 0)
      v62 = (id)MEMORY[0x1BCCE4630](v58, v75);
    else
      v62 = *(id *)(v75 + 8 * v58 + 32);
    v63 = v62;
    v64 = objc_msgSend(v74, sel_labelColor);
    objc_msgSend(v63, sel_setTintColor_, v64);

    v65 = (void *)sub_1BB872970();
    v66 = objc_msgSend(v57, sel_systemImageNamed_, v65);

    if (v66)
    {
      v59 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 15.0);
      v60 = objc_msgSend(v66, sel_imageWithConfiguration_, v59);

    }
    else
    {
      v60 = 0;
    }
    ++v58;
    objc_msgSend(v63, sel_setImage_forState_, v60, 0);

    objc_msgSend(v63, sel_setFrame_, 0.0, 0.0, 22.0, 22.0);
    objc_msgSend(v63, sel_addTarget_action_forControlEvents_, v24, sel_didTapBorderButtonWithSender_, 64);
    v61 = objc_msgSend(v24, sel_contentView);
    objc_msgSend(v61, sel_addSubview_, v63);

  }
  while (v58 != 4);
  swift_bridgeObjectRelease();
  v67 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton;
  v68 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton];
  v69 = objc_msgSend(v74, sel_labelColor);
  objc_msgSend(v68, sel_setTintColor_, v69);

  v70 = *(void **)&v24[v67];
  objc_msgSend(v70, sel_setFrame_, 0.0, 0.0, 22.0, 22.0);
  objc_msgSend(v70, sel_addTarget_action_forControlEvents_, v24, sel_didTapHiddenButtonWithSender_, 64);
  v71 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v71, sel_addSubview_, v70);

  if (qword_1EF2A6D90 != -1)
    goto LABEL_17;
LABEL_15:
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BB1292CC(&qword_1EF2BBD30, (uint64_t)&unk_1BB8EE330);
  sub_1BB86D21C();
  swift_release();
  sub_1BB12687C();

  return v24;
}

void sub_1BB126824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1BB12687C();

  }
}

void sub_1BB12687C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton);
  v2 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v2);

  if (v3)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 15.0);
    v5 = objc_msgSend(v3, sel_imageWithConfiguration_, v4);

  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v1, sel_setImage_forState_, v5, 0);

}

void sub_1BB126A04()
{
  char *v0;
  char *v1;
  void *v2;
  double Width;
  double v4;
  double v5;
  double v6;
  double v7;
  char *v8;
  void *v9;
  __int128 v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double Height;
  double v25;
  double v26;
  CGFloat v27;
  void *v28;
  CGFloat v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  id v35;
  void *v36;
  double MinX;
  double v38;
  CGFloat v39;
  CGFloat v40;
  double v41;
  void *v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  double v46;
  void *v47;
  CGFloat v48;
  CGFloat v49;
  double MinY;
  double v51;
  double v52;
  void *v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  double v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t i;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  void *v77;
  uint64_t v78;
  unint64_t v79;
  __int128 *v80;
  uint64_t v81;
  __int128 v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  CGMutablePathRef Mutable;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  int64_t v94;
  unint64_t v95;
  int64_t v96;
  unint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  id v120;
  id v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  int64_t v125;
  char v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  int64_t v130;
  id v131;
  _QWORD v132[2];
  char v133;
  char v134;
  char v135;
  objc_super v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150[3];
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;
  CGRect v161;
  CGRect v162;
  CGRect v163;
  CGRect v164;
  CGRect v165;
  CGRect v166;
  CGRect v167;
  CGRect v168;
  CGRect v169;
  CGRect v170;
  CGRect v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;
  CGRect v175;
  CGRect v176;
  CGRect v177;
  CGRect v178;
  CGRect v179;
  CGRect v180;
  CGRect v181;
  CGRect v182;
  CGRect v183;
  CGRect v184;
  CGRect v185;

  v1 = v0;
  v136.receiver = v0;
  v136.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v136, sel_layoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton];
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v151);
  objc_msgSend(v2, sel_bounds);
  v4 = Width - CGRectGetWidth(v152);
  objc_msgSend(v0, sel_layoutMargins);
  v6 = v4 - v5;
  objc_msgSend(v2, sel_bounds);
  v7 = CGRectGetWidth(v153);
  objc_msgSend(v2, sel_bounds);
  objc_msgSend(v2, sel_setFrame_, v6, 8.0, v7, CGRectGetHeight(v154));
  v8 = &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame];
  objc_msgSend(v2, sel_setHidden_, (v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 48] < 6u) & (0x39u >> v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 48]));
  v9 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLabel];
  v137 = 0;
  v138 = 0xE000000000000000;
  v10 = *((_OWORD *)v8 + 1);
  v143 = *(_OWORD *)v8;
  v144 = v10;
  type metadata accessor for CGRect(0);
  sub_1BB873E34();
  v11 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setText_, v11);

  objc_msgSend(v9, sel_sizeToFit);
  v12 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v12, sel_center);
  v14 = v13;
  v16 = v15;

  objc_msgSend(v9, sel_setCenter_, v14, v16);
  v17 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_zIndexLabel];
  objc_msgSend(v17, sel_setHidden_, v8[48] != 0);
  *(_QWORD *)&v143 = 0x207865646E692D7ALL;
  *((_QWORD *)&v143 + 1) = 0xEA0000000000203DLL;
  v137 = *((_QWORD *)v8 + 4);
  sub_1BB87420C();
  sub_1BB872AFC(v18);
  swift_bridgeObjectRelease();
  v19 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setText_, v19);

  objc_msgSend(v17, sel_sizeToFit);
  objc_msgSend(v1, sel_bounds);
  v20 = CGRectGetWidth(v155);
  objc_msgSend(v17, sel_frame);
  v21 = v20 - CGRectGetWidth(v156);
  objc_msgSend(v1, sel_layoutMargins);
  v23 = v21 - v22;
  objc_msgSend(v1, sel_bounds);
  Height = CGRectGetHeight(v157);
  objc_msgSend(v17, sel_frame);
  v25 = Height - CGRectGetHeight(v158) + -4.0;
  objc_msgSend(v17, sel_frame);
  v26 = CGRectGetWidth(v159);
  objc_msgSend(v17, sel_frame);
  objc_msgSend(v17, sel_setFrame_, v23, v25, v26, CGRectGetHeight(v160));
  objc_msgSend(v1, sel_bounds);
  v27 = CGRectGetWidth(v161) * 0.5;
  v28 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLayer];
  objc_msgSend(v1, sel_bounds);
  v29 = CGRectGetWidth(v162) * 0.5 - v27 * 0.5;
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v28, sel_setFrame_, v29, CGRectGetHeight(v163) * 0.5 + -40.0, v27, 80.0);
  objc_msgSend(v28, sel_bounds);
  v34 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRect_, v30, v31, v32, v33);
  v35 = objc_msgSend(v34, sel_CGPath);

  objc_msgSend(v28, sel_setPath_, v35);
  v36 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_leftBorderButton];
  objc_msgSend(v28, sel_frame);
  MinX = CGRectGetMinX(v164);
  objc_msgSend(v36, sel_frame);
  v38 = MinX - CGRectGetWidth(v165) + -8.0;
  objc_msgSend(v1, sel_bounds);
  v39 = CGRectGetHeight(v166) * 0.5;
  objc_msgSend(v36, sel_frame);
  v40 = v39 - CGRectGetHeight(v167) * 0.5;
  objc_msgSend(v36, sel_frame);
  v41 = CGRectGetWidth(v168);
  objc_msgSend(v36, sel_frame);
  objc_msgSend(v36, sel_setFrame_, v38, v40, v41, CGRectGetHeight(v169));
  v42 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_rightBorderButton];
  objc_msgSend(v28, sel_frame);
  v43 = CGRectGetMaxX(v170) + 8.0;
  objc_msgSend(v1, sel_bounds);
  v44 = CGRectGetHeight(v171) * 0.5;
  objc_msgSend(v42, sel_frame);
  v45 = v44 - CGRectGetHeight(v172) * 0.5;
  objc_msgSend(v42, sel_frame);
  v46 = CGRectGetWidth(v173);
  objc_msgSend(v42, sel_frame);
  objc_msgSend(v42, sel_setFrame_, v43, v45, v46, CGRectGetHeight(v174));
  v47 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_topBorderButton];
  objc_msgSend(v1, sel_bounds);
  v48 = CGRectGetWidth(v175) * 0.5;
  objc_msgSend(v47, sel_frame);
  v49 = v48 - CGRectGetWidth(v176) * 0.5;
  objc_msgSend(v28, sel_frame);
  MinY = CGRectGetMinY(v177);
  objc_msgSend(v47, sel_frame);
  v51 = MinY - CGRectGetHeight(v178) + -8.0;
  objc_msgSend(v47, sel_frame);
  v52 = CGRectGetWidth(v179);
  objc_msgSend(v47, sel_frame);
  objc_msgSend(v47, sel_setFrame_, v49, v51, v52, CGRectGetHeight(v180));
  v53 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_bottomBorderButton];
  objc_msgSend(v1, sel_bounds);
  v54 = CGRectGetWidth(v181) * 0.5;
  objc_msgSend(v53, sel_frame);
  v55 = v54 - CGRectGetWidth(v182) * 0.5;
  v121 = v28;
  objc_msgSend(v28, sel_frame);
  v56 = CGRectGetMaxY(v183) + 8.0;
  objc_msgSend(v53, sel_frame);
  v57 = CGRectGetWidth(v184);
  objc_msgSend(v53, sel_frame);
  objc_msgSend(v53, sel_setFrame_, v55, v56, v57, CGRectGetHeight(v185));
  v120 = v1;
  v58 = &v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_borderLayers];
  swift_beginAccess();
  v122 = v58;
  v59 = *(_QWORD *)v58;
  if (v59 >> 62)
  {
    swift_bridgeObjectRetain();
    v60 = sub_1BB873F30();
    if (v60)
      goto LABEL_3;
  }
  else
  {
    v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v60)
    {
LABEL_3:
      if (v60 < 1)
        goto LABEL_49;
      for (i = 0; i != v60; ++i)
      {
        if ((v59 & 0xC000000000000001) != 0)
          v62 = (id)MEMORY[0x1BCCE4630](i, v59);
        else
          v62 = *(id *)(v59 + 8 * i + 32);
        v63 = v62;
        objc_msgSend(v62, sel_removeFromSuperlayer);

      }
    }
  }
  swift_bridgeObjectRelease();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  v64 = v36;
  v65 = v42;
  v66 = v47;
  v131 = v53;
  objc_msgSend(v64, sel_setEnabled_, 0);
  v67 = v64;
  v68 = (void *)sub_1BB873804();
  objc_msgSend(v67, sel_setTintColor_, v68);

  objc_msgSend(v67, sel_setHidden_, (v8[48] & 0xFD) != 0);
  v69 = v65;
  objc_msgSend(v69, sel_setEnabled_, 0);
  v70 = v69;
  v71 = (void *)sub_1BB873804();
  objc_msgSend(v70, sel_setTintColor_, v71);

  objc_msgSend(v70, sel_setHidden_, (v8[48] & 0xFD) != 0);
  v72 = v66;
  objc_msgSend(v72, sel_setEnabled_, 0);
  v73 = v72;
  v74 = (void *)sub_1BB873804();
  objc_msgSend(v73, sel_setTintColor_, v74);

  objc_msgSend(v73, sel_setHidden_, (v8[48] & 0xFD) != 0);
  v75 = v131;
  objc_msgSend(v75, sel_setEnabled_, 0);
  v76 = v75;
  v77 = (void *)sub_1BB873804();
  objc_msgSend(v76, sel_setTintColor_, v77);

  objc_msgSend(v76, sel_setHidden_, (v8[48] & 0xFD) != 0);
  v119 = v67;

  v117 = v73;
  v118 = v70;

  v116 = v76;
  *(_QWORD *)v122 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v78 = *((_QWORD *)v8 + 5);
  if (!v78)
    return;
  v115 = *(_QWORD *)(v78 + 16);
  if (!v115)
    return;
  v113 = v78 + 32;
  v114 = (id)objc_opt_self();
  swift_bridgeObjectRetain();
  v79 = 0;
  v112 = v78;
LABEL_13:
  if (v79 < *(_QWORD *)(v78 + 16))
  {
    v80 = (__int128 *)(v113 + 40 * v79);
    v81 = *((_QWORD *)v80 + 4);
    v82 = v80[1];
    v147 = *v80;
    v148 = v82;
    v149 = v81;
    v150[0] = v147;
    v123 = v79 + 1;
    v83 = objc_allocWithZone(MEMORY[0x1E0CD2840]);
    sub_1BB129358((uint64_t)&v147);
    v84 = objc_msgSend(v83, sel_init);
    objc_msgSend(v84, sel_setLineWidth_, 2.0);
    v85 = objc_msgSend(v114, sel_labelColor);
    v86 = objc_msgSend(v85, sel_CGColor);

    objc_msgSend(v84, sel_setStrokeColor_, v86);
    v87 = objc_msgSend(v114, sel_clearColor);
    v88 = objc_msgSend(v87, sel_CGColor);

    objc_msgSend(v84, sel_setFillColor_, v88);
    v89 = v84;
    objc_msgSend(v121, sel_frame);
    objc_msgSend(v89, sel_setFrame_);
    v128 = v89;

    Mutable = CGPathCreateMutable();
    v124 = v150[0] + 56;
    v127 = v150[0];
    v91 = 1 << *(_BYTE *)(v150[0] + 32);
    if (v91 < 64)
      v92 = ~(-1 << v91);
    else
      v92 = -1;
    v93 = v92 & *(_QWORD *)(v150[0] + 56);
    v126 = BYTE8(v148);
    sub_1BA781758((uint64_t)v150);
    v94 = 0;
    v125 = (unint64_t)(v91 + 63) >> 6;
    while (1)
    {
      if (v93)
      {
        v129 = (v93 - 1) & v93;
        v130 = v94;
        v95 = __clz(__rbit64(v93)) | (v94 << 6);
      }
      else
      {
        v96 = v94 + 1;
        if (__OFADD__(v94, 1))
        {
          __break(1u);
LABEL_47:
          __break(1u);
          break;
        }
        if (v96 >= v125)
          goto LABEL_41;
        v97 = *(_QWORD *)(v124 + 8 * v96);
        v98 = v94 + 1;
        if (!v97)
        {
          v98 = v94 + 2;
          if (v94 + 2 >= v125)
            goto LABEL_41;
          v97 = *(_QWORD *)(v124 + 8 * v98);
          if (!v97)
          {
            v98 = v94 + 3;
            if (v94 + 3 >= v125)
              goto LABEL_41;
            v97 = *(_QWORD *)(v124 + 8 * v98);
            if (!v97)
            {
              v99 = v94 + 4;
              if (v94 + 4 >= v125)
              {
LABEL_41:
                swift_release();
                objc_msgSend(v128, sel_setPath_, Mutable);
                v110 = objc_msgSend(v120, sel_layer);
                objc_msgSend(v110, sel_addSublayer_, v128);

                swift_beginAccess();
                v111 = v128;
                MEMORY[0x1BCCE36AC]();
                if (*(_QWORD *)((*(_QWORD *)v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v122 & 0xFFFFFFFFFFFFFF8)
                                                                                              + 0x18) >> 1)
                  sub_1BB872E44();
                sub_1BB872E8C();
                sub_1BB872DCC();
                swift_endAccess();
                LOBYTE(v132[0]) = 1;
                sub_1BB127930(v119, (char *)v132, (uint64_t *)&v147);
                LOBYTE(v132[0]) = 2;
                sub_1BB127930(v118, (char *)v132, (uint64_t *)&v147);
                LOBYTE(v132[0]) = 0;
                sub_1BB127930(v117, (char *)v132, (uint64_t *)&v147);
                LOBYTE(v132[0]) = 3;
                sub_1BB127930(v116, (char *)v132, (uint64_t *)&v147);
                sub_1BB1293E0((uint64_t)&v147);

                v79 = v123;
                v78 = v112;
                if (v123 == v115)
                {
                  swift_bridgeObjectRelease();
                  return;
                }
                goto LABEL_13;
              }
              v97 = *(_QWORD *)(v124 + 8 * v99);
              if (!v97)
              {
                while (1)
                {
                  v98 = v99 + 1;
                  if (__OFADD__(v99, 1))
                    goto LABEL_47;
                  if (v98 >= v125)
                    goto LABEL_41;
                  v97 = *(_QWORD *)(v124 + 8 * v98);
                  ++v99;
                  if (v97)
                    goto LABEL_34;
                }
              }
              v98 = v94 + 4;
            }
          }
        }
LABEL_34:
        v129 = (v97 - 1) & v97;
        v130 = v98;
        v95 = __clz(__rbit64(v97)) + (v98 << 6);
      }
      v135 = *(_BYTE *)(*(_QWORD *)(v127 + 48) + v95);
      objc_msgSend(v128, sel_bounds, v112);
      v132[0] = 0;
      v132[1] = 0;
      v133 = 0;
      v134 = v126;
      sub_1BB69570C((uint64_t)v132);
      v101 = *(_QWORD *)(v100 + 16);
      if (v101)
      {
        v102 = (unsigned __int8 *)(v100 + 64);
        do
        {
          v105 = (void *)*((_QWORD *)v102 - 4);
          v104 = *((_QWORD *)v102 - 3);
          v106 = *((_QWORD *)v102 - 2);
          v107 = *((_QWORD *)v102 - 1);
          v108 = *v102;
          if (*v102)
          {
            sub_1BB1293B0(*((id *)v102 - 4), *((_QWORD *)v102 - 3), *((_QWORD *)v102 - 2), *((_QWORD *)v102 - 1), *v102);
            v109 = objc_msgSend(v105, sel_CGPath);
            *(_QWORD *)&v144 = 0;
            v143 = 0x3FF0000000000000uLL;
            *((_QWORD *)&v144 + 1) = 0x3FF0000000000000;
            v145 = 0;
            v146 = 0;
            sub_1BB873330();
            sub_1BB1293C8(v105, v104, v106, v107, v108);

          }
          else
          {
            sub_1BAB6EA48();
            v103 = swift_allocObject();
            *(_OWORD *)(v103 + 16) = xmmword_1BB87A390;
            *(_QWORD *)(v103 + 32) = v105;
            *(_QWORD *)(v103 + 40) = v104;
            *(_QWORD *)(v103 + 48) = v106;
            *(_QWORD *)(v103 + 56) = v107;
            v138 = 0;
            v139 = 0;
            v137 = 0x3FF0000000000000;
            v140 = 0x3FF0000000000000;
            v141 = 0;
            v142 = 0;
            sub_1BB873360();
            swift_bridgeObjectRelease();
          }
          v102 += 40;
          --v101;
        }
        while (v101);
      }
      swift_bridgeObjectRelease();
      v93 = v129;
      v94 = v130;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
}

void sub_1BB127930(void *a1, char *a2, uint64_t *a3)
{
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  id v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a3;
  v9 = v5;
  if (*(_QWORD *)(v5 + 16))
  {
    sub_1BB8745CC();
    sub_1BA781758((uint64_t)&v9);
    sub_1BB872A90();
    v6 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v5 + 32));
    if (((*(_QWORD *)(v5 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
      __asm { BR              X9 }
    sub_1BA4F6CCC((uint64_t)&v9);
  }
  sub_1BA781758((uint64_t)&v9);
  v7 = sub_1BAB0BD38(v4, v5);
  sub_1BA4F6CCC((uint64_t)&v9);
  if ((v7 & 1) != 0)
  {
    objc_msgSend(a1, sel_setEnabled_, 1);
    v8 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(a1, sel_setTintColor_, v8);

  }
}

uint64_t sub_1BB127B6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t ObjectType;
  __int128 v7;
  uint64_t v8;
  _OWORD v9[3];
  char v10;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_delegate;
  result = MEMORY[0x1BCCE5D40](v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_delegate);
  if (result)
  {
    v5 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType();
    v7 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 16);
    v9[0] = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame);
    v9[1] = v7;
    v9[2] = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 32);
    v10 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 48);
    sub_1BB129308((uint64_t)v9);
    v8 = sub_1BB127C3C(a1);
    (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v1, v9, a1, v8, ObjectType, v5);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return sub_1BB129330((uint64_t)v9);
  }
  return result;
}

uint64_t sub_1BB127C3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 40);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 40);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_leftBorderButton) == a1)
  {
    v32 = *(_QWORD *)(v2 + 16);
    if (!v32)
      return MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v10 = 0;
    v4 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if (v10 >= *(_QWORD *)(v35 + 16))
      {
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        JUMPOUT(0x1BB128F24);
      }
      v11 = v2 + 32 + 40 * v10;
      v12 = *(_QWORD *)v11;
      if (*(_QWORD *)(*(_QWORD *)v11 + 16))
      {
        sub_1BB8745CC();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_retain();
        sub_1BB872A90();
        v13 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v12 + 32));
        if (((*(_QWORD *)(v12 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
          __asm { BR              X9 }
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v12 + 16))
        {
LABEL_31:
          sub_1BB8745CC();
          swift_bridgeObjectRetain();
          sub_1BB872A90();
          v14 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v12 + 32));
          if (((*(_QWORD *)(v12 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
            __asm { BR              X9 }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_23;
        }
      }
      else
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (*(_QWORD *)(v12 + 16))
          goto LABEL_31;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      swift_release();
      swift_release();
      if (++v10 == v32)
      {
LABEL_64:
        swift_bridgeObjectRelease();
        return v4;
      }
    }
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_rightBorderButton) == a1)
  {
    v30 = *(_QWORD *)(v2 + 16);
    if (!v30)
      return MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v15 = 0;
    v4 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if (v15 >= *(_QWORD *)(v2 + 16))
        goto LABEL_67;
      v16 = v2 + 32 + 40 * v15;
      v17 = *(_QWORD *)v16;
      if (*(_QWORD *)(*(_QWORD *)v16 + 16))
      {
        v18 = v4;
        sub_1BB8745CC();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_retain();
        sub_1BB872A90();
        v19 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v17 + 32));
        if (((*(_QWORD *)(v17 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
          __asm { BR              X9 }
        swift_bridgeObjectRelease();
        v4 = v18;
        if (*(_QWORD *)(v17 + 16))
        {
LABEL_45:
          v33 = v4;
          sub_1BB8745CC();
          swift_bridgeObjectRetain();
          sub_1BB872A90();
          v20 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v17 + 32));
          if (((*(_QWORD *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
            __asm { BR              X9 }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();
          v4 = v33;
          goto LABEL_37;
        }
      }
      else
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (*(_QWORD *)(v17 + 16))
          goto LABEL_45;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
LABEL_37:
      if (++v15 == v30)
        goto LABEL_64;
    }
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_topBorderButton) == a1)
  {
    v34 = *(_QWORD *)(v2 + 16);
    if (!v34)
      return MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v21 = 0;
    v4 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if (v21 >= *(_QWORD *)(v2 + 16))
        goto LABEL_68;
      v22 = v2 + 32 + 40 * v21;
      v23 = *(_QWORD *)v22;
      if (*(_QWORD *)(*(_QWORD *)v22 + 16))
      {
        v24 = v4;
        sub_1BB8745CC();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_retain();
        sub_1BB872A90();
        v25 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v23 + 32));
        if (((*(_QWORD *)(v23 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) != 0)
          __asm { BR              X9 }
        swift_bridgeObjectRelease();
        v4 = v24;
        if (*(_QWORD *)(v23 + 16))
        {
LABEL_61:
          v26 = v4;
          sub_1BB8745CC();
          swift_bridgeObjectRetain();
          sub_1BB872A90();
          v27 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v23 + 32));
          if (((*(_QWORD *)(v23 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
            __asm { BR              X9 }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();
          v4 = v26;
          goto LABEL_53;
        }
      }
      else
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (*(_QWORD *)(v23 + 16))
          goto LABEL_61;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
LABEL_53:
      if (++v21 == v34)
        goto LABEL_64;
    }
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_bottomBorderButton) == a1)
  {
    v29 = *(_QWORD *)(v2 + 16);
    if (v29)
    {
      swift_bridgeObjectRetain();
      v3 = 0;
      v4 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        if (v3 >= *(_QWORD *)(v2 + 16))
          goto LABEL_69;
        v5 = v2 + 32 + 40 * v3;
        v6 = *(_QWORD *)v5;
        if (*(_QWORD *)(*(_QWORD *)v5 + 16))
        {
          v7 = v4;
          sub_1BB8745CC();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_retain();
          sub_1BB872A90();
          v8 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v6 + 32));
          if (((*(_QWORD *)(v6 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
            __asm { BR              X9 }
          swift_bridgeObjectRelease();
          v4 = v7;
          if (*(_QWORD *)(v6 + 16))
          {
LABEL_17:
            v31 = v4;
            sub_1BB8745CC();
            swift_bridgeObjectRetain();
            sub_1BB872A90();
            v9 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v6 + 32));
            if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
              __asm { BR              X9 }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_release();
            swift_release();
            v4 = v31;
            goto LABEL_9;
          }
        }
        else
        {
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (*(_QWORD *)(v6 + 16))
            goto LABEL_17;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
LABEL_9:
        if (++v3 == v29)
          goto LABEL_64;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t type metadata accessor for DebugFormatInspectorFrameCell()
{
  return objc_opt_self();
}

uint64_t sub_1BB1291EC()
{
  return sub_1BB1292CC(&qword_1EF2BBD30, (uint64_t)&unk_1BB8EE330);
}

uint64_t sub_1BB129210()
{
  swift_getObjectType();
  return sub_1BB86D3F0();
}

uint64_t sub_1BB129254()
{
  swift_getObjectType();
  return sub_1BB86D408();
}

uint64_t sub_1BB129290()
{
  swift_getObjectType();
  return sub_1BB86D3FC();
}

uint64_t sub_1BB1292CC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DebugFormatInspectorFrameCell();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB129308(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB129330(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB129358(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

id sub_1BB1293B0(id result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 <= 1)
    return result;
  return result;
}

void sub_1BB1293C8(id a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 <= 1)

}

uint64_t sub_1BB1293E0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

void sub_1BB129430()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *ObjCClassFromMetadata;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  v2 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v1 + 4) = 0;
  *((_QWORD *)v1 + 5) = v2;
  v1[48] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v4 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_zIndexLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_borderLayers] = v2;
  v6 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton;
  sub_1BB870078();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  *(_QWORD *)&v0[v6] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  v8 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_leftBorderButton;
  *(_QWORD *)&v0[v8] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  v9 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_rightBorderButton;
  *(_QWORD *)&v0[v9] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  v10 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_topBorderButton;
  *(_QWORD *)&v0[v10] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  v11 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_bottomBorderButton;
  *(_QWORD *)&v0[v11] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB129628()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB12964C(uint64_t a1)
{
  uint64_t v1;

  sub_1BB126824(a1, v1);
}

uint64_t FormatSnippetCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = *(_QWORD *)(v3 + 8);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E35A8(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      v11 = *(_QWORD *)(v5 + 56);
      sub_1BA709CA4(0);
      v13 = v12;
      v14 = *(_QWORD *)(v12 - 8);
      sub_1BA709A94(v11 + *(_QWORD *)(v14 + 72) * v10, a3);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
    }
    else
    {
      sub_1BA709CA4(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA709CA4(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
}

uint64_t FormatSnippetCollection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA6226FC(0, (unint64_t *)&unk_1ED3C0378, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA622894(&qword_1ED3A0830, &qword_1ED39F8E0, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatSnippetCollection.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

NewsFeed::FormatSnippetCollection __swiftcall FormatSnippetCollection.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  NewsFeed::FormatSnippetCollection result;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = (void *)sub_1BA5BC530(MEMORY[0x1E0DEE9D8]);
  *v1 = v2;
  v1[1] = v3;
  result.snippetsByIdentifier._rawValue = v4;
  result.snippets._rawValue = v3;
  return result;
}

unint64_t sub_1BB129868@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  unint64_t result;

  v2 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA5BC530(MEMORY[0x1E0DEE9D8]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

void sub_1BB129898(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  __int128 v3;
  __int128 v4;
  _OWORD v5[5];
  uint64_t v6;

  v3 = *(_OWORD *)(a2 + 48);
  v5[2] = *(_OWORD *)(a2 + 32);
  v5[3] = v3;
  v5[4] = *(_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v4;
  sub_1BA6F7C08(a1, (uint64_t)v5, *v2);
}

ValueMetadata *type metadata accessor for FormatSnippetCollection()
{
  return &type metadata for FormatSnippetCollection;
}

uint64_t sub_1BB1298EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA709CA4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB129930(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7B15C(0, v1, 0);
  v2 = v25;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v14 = *(_QWORD *)(v25 + 16);
    v13 = *(_QWORD *)(v25 + 24);
    result = swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1)
      result = sub_1BAC7B15C(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v25 + 16) = v14 + 1;
    v15 = v25 + 16 * v14;
    *(_BYTE *)(v15 + 32) = v24;
    *(_QWORD *)(v15 + 40) = v12;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void FormatPropertyDefinition.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[6];

  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v0);
  v19[4] = (char *)v19 - v1;
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v2);
  v19[3] = (char *)v19 - v3;
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v4);
  v19[2] = (char *)v19 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v6);
  v19[1] = (char *)v19 - v7;
  sub_1BA74E21C(0);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v9);
  sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v12);
  sub_1BA74E2EC(0);
  MEMORY[0x1E0C80A78](v13);
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v14);
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v15);
  v16 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v16);
  sub_1BA74B050(v19[5], (uint64_t)v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (char *)sub_1BB129F2C + 4 * byte_1BB8EE410[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB129F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DEAFA0];
  sub_1BB12A284(v1, v0, (uint64_t)&qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  v3 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BB12A2E0(v0, (uint64_t)&qword_1ED3CE138, v2, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  return v3;
}

uint64_t sub_1BB12A284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5, type metadata accessor for FormatPrimitivePropertyDefinition);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1BB12A2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  uint64_t v6;

  v6 = a5(0, a2, a3, a4, type metadata accessor for FormatPrimitivePropertyDefinition);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1BB12A328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[8];

  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v0);
  v20[6] = (char *)v20 - v1;
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v2);
  v20[5] = (char *)v20 - v3;
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v4);
  v20[4] = (char *)v20 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v6);
  v20[3] = (char *)v20 - v7;
  sub_1BA74E21C(0);
  v20[2] = v8;
  MEMORY[0x1E0C80A78](v8);
  v20[1] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v11);
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v13);
  sub_1BA74E2EC(0);
  MEMORY[0x1E0C80A78](v14);
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v15);
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v16);
  v17 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v17);
  sub_1BA74B050(v20[7], (uint64_t)v20 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = (char *)sub_1BB12A724 + 4 * byte_1BB8EE41C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB12A724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DEAFA0];
  sub_1BB12A284(v0, v1, (uint64_t)&qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  v3 = *(unsigned __int8 *)(v1 + 66);
  sub_1BB12A2E0(v1, (uint64_t)&qword_1ED3CE138, v2, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  return v3;
}

void sub_1BB12AA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[8];

  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v0);
  v20[6] = (char *)v20 - v1;
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v2);
  v20[5] = (char *)v20 - v3;
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v4);
  v20[4] = (char *)v20 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v6);
  v20[3] = (char *)v20 - v7;
  sub_1BA74E21C(0);
  v20[2] = v8;
  MEMORY[0x1E0C80A78](v8);
  v20[1] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v11);
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v13);
  sub_1BA74E2EC(0);
  MEMORY[0x1E0C80A78](v14);
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v15);
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v16);
  v17 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v17);
  sub_1BA74B050(v20[7], (uint64_t)v20 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = (char *)sub_1BB12AE24 + 4 * byte_1BB8EE428[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB12AE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DEAFA0];
  sub_1BB12A284(v0, v1, (uint64_t)&qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  v3 = *(_QWORD *)(v1 + 72);
  swift_bridgeObjectRetain();
  sub_1BB12A2E0(v1, (uint64_t)&qword_1ED3CE138, v2, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  return v3;
}

void sub_1BB12B170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[6];

  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v0);
  v19[4] = (char *)v19 - v1;
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v2);
  v19[3] = (char *)v19 - v3;
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v4);
  v19[2] = (char *)v19 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v6);
  v19[1] = (char *)v19 - v7;
  sub_1BA74E21C(0);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v9);
  sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v12);
  sub_1BA74E2EC(0);
  MEMORY[0x1E0C80A78](v13);
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v14);
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v15);
  v16 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v16);
  sub_1BA74B050(v19[5], (uint64_t)v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (char *)sub_1BB12B560 + 4 * byte_1BB8EE434[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB12B560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DEAFA0];
  sub_1BB12A284(v0, v1, (uint64_t)&qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  v3 = *(unsigned __int8 *)(v1 + 64);
  sub_1BB12A2E0(v1, (uint64_t)&qword_1ED3CE138, v2, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  return v3;
}

uint64_t FormatEnumPropertyDefinition.deprecated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t FormatEnumPropertyDefinition.compilerFlags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB12B878@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (**v10)(_BYTE *, _QWORD);
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[12];
  int v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  void (**v68)(_BYTE *, _QWORD);
  unsigned __int8 v69;
  __int128 v70;
  char v71;
  __int128 v72;
  char v73;
  uint64_t v74;

  v67 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v66 = &v51[-v4];
  sub_1BA7607C8();
  v64 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB13F878();
  v65 = v9;
  v10 = *(void (***)(_BYTE *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE554C();
  sub_1BA4A2870(&qword_1ED3D13C0, (uint64_t (*)(uint64_t))sub_1BAEE554C, (uint64_t)&unk_1BB8FFC6C);
  v13 = v68;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v62 = v6;
  v63 = v8;
  v68 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v65;
  v18 = (uint64_t)v66;
  v19 = v67;
  if ((v16 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = v17;
      v28 = *((_QWORD *)v22 - 2);
      v29 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      sub_1BA4CDF6C(0, &qword_1ED3CE0D8, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
      *(_QWORD *)&v51[-32] = v31;
      *(_QWORD *)&v51[-24] = sub_1BAEE55F0();
      *(_QWORD *)&v51[-16] = sub_1BAEE5658();
      *(_QWORD *)&v51[-8] = sub_1BAEE56C0();
      swift_getKeyPath();
      swift_retain();
      v32 = sub_1BAE71220((uint64_t)&unk_1E726D628);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v33 = v28;
      *(_QWORD *)(v33 + 8) = v29;
      *(_QWORD *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BAEFDBD0(v28, v29, 1);
      v68[1](v12, v27);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v72 = 0uLL;
  v73 = 0;
  v23 = sub_1BB874098();
  v25 = v24;
  v61 = v23;
  v72 = xmmword_1BB8A1A10;
  v73 = 0;
  v26 = sub_1BB874098();
  v35 = v34;
  v60 = v26;
  v72 = xmmword_1BB8D2D60;
  v73 = 0;
  v58 = sub_1BB874098();
  v59 = v36;
  v72 = xmmword_1BB8D2D70;
  v73 = 0;
  v56 = sub_1BB874098();
  v57 = v37;
  v72 = xmmword_1BB8D2D90;
  v73 = 0;
  v55 = sub_1BB8740A4();
  v72 = xmmword_1BB8D2D80;
  v73 = 0;
  sub_1BA62C9A0();
  sub_1BB874068();
  v54 = v35;
  v53 = xmmword_1BB8D2DA0;
  v72 = xmmword_1BB8D2DA0;
  v73 = 0;
  v39 = sub_1BB8740F8();
  if ((v39 & 1) != 0)
  {
    v70 = v53;
    v71 = 0;
    sub_1BB8740D4();
    v52 = v69;
  }
  else
  {
    v52 = 0;
  }
  v53 = xmmword_1BB8D2DB0;
  v72 = xmmword_1BB8D2DB0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v53;
    v71 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v40 = v64;
    sub_1BB8740D4();
    *(_QWORD *)&v53 = v25;
    v41 = v63;
    v42 = sub_1BB86DD08();
    v43 = v40;
    v44 = v42;
    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v41, v43);
  }
  else
  {
    *(_QWORD *)&v53 = v25;
    v44 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v72 = xmmword_1BB8D2DD0;
  v73 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v68[1](v12, v17);
  v45 = v74;
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BA646EFC(v18, v19 + *(int *)(v46 + 64), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  *(_QWORD *)(v19 + 72) = v45;
  v47 = v53;
  *(_QWORD *)v19 = v61;
  *(_QWORD *)(v19 + 8) = v47;
  v48 = v54;
  *(_QWORD *)(v19 + 16) = v60;
  *(_QWORD *)(v19 + 24) = v48;
  v49 = v59;
  *(_QWORD *)(v19 + 32) = v58;
  *(_QWORD *)(v19 + 40) = v49;
  v50 = v57;
  *(_QWORD *)(v19 + 48) = v56;
  *(_QWORD *)(v19 + 56) = v50;
  *(_BYTE *)(v19 + 64) = v55 & 1;
  *(_BYTE *)(v19 + 80) = v52;
  *(_QWORD *)(v19 + 88) = v44;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB12C098@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)(_BYTE *, _QWORD);
  uint64_t v14;
  _BYTE *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[12];
  int v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  void (**v70)(_BYTE *, _QWORD);
  __int128 v71;
  char v72;
  __int128 v73;
  char v74;
  int v75;
  unsigned __int8 v76;

  v69 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v68 = &v53[-v5];
  sub_1BA7607C8();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  MEMORY[0x1E0C80A78](v6);
  v67 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v3);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v53[-v9];
  sub_1BB13F8F0();
  v12 = v11;
  v13 = *(void (***)(_BYTE *, _QWORD))(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = &v53[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE58AC();
  sub_1BA4A2870(&qword_1EF2B58B8, (uint64_t (*)(uint64_t))sub_1BAEE58AC, (uint64_t)&unk_1BB8FFC6C);
  v16 = v70;
  sub_1BB87468C();
  v17 = v16;
  if (v16)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v17);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v64 = v10;
  v70 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v18 = sub_1BB872874();
  v19 = Dictionary<>.errorOnUnknownKeys.getter(v18);
  swift_bridgeObjectRelease();
  v21 = (uint64_t)v68;
  v20 = v69;
  if ((v19 & 1) != 0)
  {
    v22 = sub_1BB8740EC();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = (_BYTE *)(v22 + 48);
      while (*v24 != 1)
      {
        v24 += 24;
        if (!--v23)
          goto LABEL_7;
      }
      v29 = v15;
      v31 = *((_QWORD *)v24 - 2);
      v30 = *((_QWORD *)v24 - 1);
      swift_bridgeObjectRetain_n();
      v32 = swift_bridgeObjectRelease();
      v69 = v12;
      MEMORY[0x1E0C80A78](v32);
      sub_1BAEE597C(0);
      *(_QWORD *)&v53[-32] = v33;
      *(_QWORD *)&v53[-24] = sub_1BA4A2870(&qword_1EF2B58A0, (uint64_t (*)(uint64_t))sub_1BAEE597C, (uint64_t)&unk_1BB8C8120);
      *(_QWORD *)&v53[-16] = sub_1BA4A2870(&qword_1EF2B58A8, (uint64_t (*)(uint64_t))sub_1BAEE597C, (uint64_t)&unk_1BB8C80D0);
      *(_QWORD *)&v53[-8] = sub_1BA4A2870(&qword_1EF2B58B0, (uint64_t (*)(uint64_t))sub_1BAEE597C, (uint64_t)&unk_1BB8C80A8);
      swift_getKeyPath();
      swift_retain();
      v34 = sub_1BAE71220((uint64_t)&unk_1E726D658);
      swift_release_n();
      sub_1BA98D1F0();
      v17 = (void *)swift_allocError();
      *(_QWORD *)v35 = v31;
      *(_QWORD *)(v35 + 8) = v30;
      *(_QWORD *)(v35 + 16) = v34;
      *(_OWORD *)(v35 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BAEFDBD0(v31, v30, 1);
      v70[1](v29, v69);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v73 = 0uLL;
  v74 = 0;
  v25 = sub_1BB874098();
  v27 = v26;
  v63 = v25;
  v73 = xmmword_1BB8A1A10;
  v74 = 0;
  v28 = sub_1BB874098();
  v37 = v36;
  v62 = v28;
  v73 = xmmword_1BB8D2D60;
  v74 = 0;
  v60 = sub_1BB874098();
  v61 = v38;
  v73 = xmmword_1BB8D2D70;
  v74 = 0;
  v58 = sub_1BB874098();
  v59 = v39;
  v73 = xmmword_1BB8D2D90;
  v74 = 0;
  v75 = sub_1BB8740A4();
  v57 = v37;
  sub_1BB86C8B0();
  v73 = xmmword_1BB8D2D80;
  v74 = 0;
  sub_1BA4A2870(&qword_1ED3B0528, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1BB874068();
  v56 = v27;
  v55 = xmmword_1BB8D2DA0;
  v73 = xmmword_1BB8D2DA0;
  v74 = 0;
  v41 = sub_1BB8740F8();
  if ((v41 & 1) != 0)
  {
    v71 = v55;
    v72 = 0;
    sub_1BB8740D4();
    v54 = v76;
  }
  else
  {
    v54 = 0;
  }
  v55 = xmmword_1BB8D2DB0;
  v73 = xmmword_1BB8D2DB0;
  v74 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v71 = v55;
    v72 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v42 = v66;
    sub_1BB8740D4();
    v43 = v67;
    v44 = sub_1BB86DD08();
    v45 = v42;
    v46 = v44;
    (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v43, v45);
  }
  else
  {
    v46 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v73 = xmmword_1BB8D2DD0;
  v74 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v70[1](v15, v12);
  sub_1BA74E2EC(0);
  v48 = v47;
  sub_1BA646EFC((uint64_t)v64, v20 + v47[13], (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BA646EFC(v21, v20 + v48[16], (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  v49 = v56;
  *(_QWORD *)v20 = v63;
  *(_QWORD *)(v20 + 8) = v49;
  v50 = v57;
  *(_QWORD *)(v20 + 16) = v62;
  *(_QWORD *)(v20 + 24) = v50;
  v51 = v61;
  *(_QWORD *)(v20 + 32) = v60;
  *(_QWORD *)(v20 + 40) = v51;
  v52 = v59;
  *(_QWORD *)(v20 + 48) = v58;
  *(_QWORD *)(v20 + 56) = v52;
  *(_BYTE *)(v20 + 64) = v75 & 1;
  *(_BYTE *)(v20 + v48[14]) = v54;
  *(_QWORD *)(v20 + v48[15]) = v46;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB12C988@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (**v10)(_BYTE *, _QWORD);
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[12];
  int v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  void (**v68)(_BYTE *, _QWORD);
  __int128 v69;
  char v70;
  uint64_t v71;
  char v72;
  __int128 v73;
  char v74;
  int v75;
  unsigned __int8 v76;

  v67 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v66 = &v52[-v4];
  sub_1BA7607C8();
  v64 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB13F968();
  v65 = v9;
  v10 = *(void (***)(_BYTE *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE5B78();
  sub_1BA4A2870(&qword_1ED3ABF48, (uint64_t (*)(uint64_t))sub_1BAEE5B78, (uint64_t)&unk_1BB8FFC6C);
  v13 = v68;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v62 = v6;
  v63 = v8;
  v68 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v65;
  v18 = (uint64_t)v66;
  v19 = v67;
  if ((v16 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = v17;
      v28 = *((_QWORD *)v22 - 2);
      v29 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      sub_1BA4CDF6C(0, &qword_1ED3A9948, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
      *(_QWORD *)&v52[-32] = v31;
      *(_QWORD *)&v52[-24] = sub_1BAEE5C1C();
      *(_QWORD *)&v52[-16] = sub_1BAEE5C84();
      *(_QWORD *)&v52[-8] = sub_1BAEE5CEC();
      swift_getKeyPath();
      swift_retain();
      v32 = sub_1BAE71220((uint64_t)&unk_1E726D688);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v33 = v28;
      *(_QWORD *)(v33 + 8) = v29;
      *(_QWORD *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BAEFDBD0(v28, v29, 1);
      v68[1](v12, v27);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v73 = 0uLL;
  v74 = 0;
  v23 = sub_1BB874098();
  v25 = v24;
  v61 = v23;
  v73 = xmmword_1BB8A1A10;
  v74 = 0;
  v26 = sub_1BB874098();
  v35 = v34;
  v60 = v26;
  v73 = xmmword_1BB8D2D60;
  v74 = 0;
  v58 = sub_1BB874098();
  v59 = v36;
  v73 = xmmword_1BB8D2D70;
  v74 = 0;
  v56 = sub_1BB874098();
  v57 = v37;
  v73 = xmmword_1BB8D2D90;
  v74 = 0;
  v75 = sub_1BB8740A4();
  v73 = xmmword_1BB8D2D80;
  v74 = 0;
  sub_1BA689CD8();
  sub_1BB874068();
  v55 = v35;
  v54 = xmmword_1BB8D2DA0;
  v73 = xmmword_1BB8D2DA0;
  v74 = 0;
  v39 = sub_1BB8740F8();
  if ((v39 & 1) != 0)
  {
    v69 = v54;
    v70 = 0;
    sub_1BB8740D4();
    v53 = v76;
  }
  else
  {
    v53 = 0;
  }
  v54 = xmmword_1BB8D2DB0;
  v73 = xmmword_1BB8D2DB0;
  v74 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v69 = v54;
    v70 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v40 = v64;
    sub_1BB8740D4();
    *(_QWORD *)&v54 = v25;
    v41 = v63;
    v42 = sub_1BB86DD08();
    v43 = v40;
    v44 = v42;
    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v41, v43);
  }
  else
  {
    *(_QWORD *)&v54 = v25;
    v44 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v73 = xmmword_1BB8D2DD0;
  v74 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v68[1](v12, v17);
  v45 = v71;
  v46 = v72;
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BA646EFC(v18, v19 + *(int *)(v47 + 64), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  *(_QWORD *)(v19 + 72) = v45;
  *(_BYTE *)(v19 + 80) = v46;
  v48 = v54;
  *(_QWORD *)v19 = v61;
  *(_QWORD *)(v19 + 8) = v48;
  v49 = v55;
  *(_QWORD *)(v19 + 16) = v60;
  *(_QWORD *)(v19 + 24) = v49;
  v50 = v59;
  *(_QWORD *)(v19 + 32) = v58;
  *(_QWORD *)(v19 + 40) = v50;
  v51 = v57;
  *(_QWORD *)(v19 + 48) = v56;
  *(_QWORD *)(v19 + 56) = v51;
  *(_BYTE *)(v19 + 64) = v75 & 1;
  *(_BYTE *)(v19 + 81) = v53;
  *(_QWORD *)(v19 + 88) = v44;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB12D1AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (**v10)(char *, _QWORD);
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  void (**v69)(char *, _QWORD);
  __int128 v70;
  char v71;
  uint64_t v72;
  char v73;
  __int128 v74;
  char v75;
  int v76;
  unsigned __int8 v77;

  v65 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  *(_QWORD *)&v66 = (char *)&v55 - v4;
  sub_1BA7607C8();
  v67 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB13F9E0();
  v68 = v9;
  v10 = *(void (***)(char *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE5ED8();
  sub_1BA4A2870(&qword_1ED3ABF58, (uint64_t (*)(uint64_t))sub_1BAEE5ED8, (uint64_t)&unk_1BB8FFC6C);
  v13 = v69;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v63 = v6;
  v64 = v8;
  v15 = v67;
  v69 = v10;
  v16 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17 = sub_1BB872874();
  v18 = Dictionary<>.errorOnUnknownKeys.getter(v17);
  swift_bridgeObjectRelease();
  v19 = v68;
  if ((v18 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = v19;
      v29 = *((_QWORD *)v22 - 2);
      v28 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      sub_1BA50CAA8(0, &qword_1ED3A9958, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
      *((_QWORD *)&v55 - 4) = v31;
      *((_QWORD *)&v55 - 3) = sub_1BAEE5F7C();
      *((_QWORD *)&v55 - 2) = sub_1BAEE5FE4();
      *((_QWORD *)&v55 - 1) = sub_1BAEE604C();
      swift_getKeyPath();
      swift_retain();
      v32 = sub_1BAE71220((uint64_t)&unk_1E726D6B8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v33 = v29;
      *(_QWORD *)(v33 + 8) = v28;
      *(_QWORD *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BAEFDBD0(v29, v28, 1);
      v69[1](v12, v27);
      a1 = v16;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v74 = 0uLL;
  v75 = 0;
  v23 = sub_1BB874098();
  v25 = v24;
  v62 = v23;
  v74 = xmmword_1BB8A1A10;
  v75 = 0;
  v26 = sub_1BB874098();
  v35 = v34;
  v61 = v26;
  v74 = xmmword_1BB8D2D60;
  v75 = 0;
  v36 = sub_1BB874098();
  v38 = v37;
  v60 = v36;
  v74 = xmmword_1BB8D2D70;
  v75 = 0;
  v58 = sub_1BB874098();
  v59 = v39;
  v74 = xmmword_1BB8D2D90;
  v75 = 0;
  v76 = sub_1BB8740A4();
  v74 = xmmword_1BB8D2D80;
  v75 = 0;
  sub_1BB874068();
  v56 = v35;
  v57 = v25;
  v55 = xmmword_1BB8D2DA0;
  v74 = xmmword_1BB8D2DA0;
  v75 = 0;
  v41 = sub_1BB8740F8();
  if ((v41 & 1) != 0)
  {
    v70 = v55;
    v71 = 0;
    sub_1BB8740D4();
    v42 = v66;
    v43 = v64;
    LODWORD(v55) = v77;
  }
  else
  {
    LODWORD(v55) = 0;
    v42 = v66;
    v43 = v64;
  }
  v66 = xmmword_1BB8D2DB0;
  v74 = xmmword_1BB8D2DB0;
  v75 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v64 = v38;
    v70 = v66;
    v71 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v44 = sub_1BB86DD08();
    v45 = v43;
    v46 = v44;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v15);
    v38 = v64;
  }
  else
  {
    v46 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v74 = xmmword_1BB8D2DD0;
  v75 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v69[1](v12, v19);
  v47 = v72;
  v48 = v73;
  sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v50 = v46;
  v51 = v65;
  sub_1BA646EFC(v42, v65 + *(int *)(v49 + 64), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  *(_QWORD *)(v51 + 72) = v47;
  *(_BYTE *)(v51 + 80) = v48;
  v52 = v57;
  *(_QWORD *)v51 = v62;
  *(_QWORD *)(v51 + 8) = v52;
  v53 = v56;
  *(_QWORD *)(v51 + 16) = v61;
  *(_QWORD *)(v51 + 24) = v53;
  *(_QWORD *)(v51 + 32) = v60;
  *(_QWORD *)(v51 + 40) = v38;
  v54 = v59;
  *(_QWORD *)(v51 + 48) = v58;
  *(_QWORD *)(v51 + 56) = v54;
  *(_BYTE *)(v51 + 64) = v76 & 1;
  *(_BYTE *)(v51 + 81) = v55;
  *(_QWORD *)(v51 + 88) = v50;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB12DA10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (**v10)(_BYTE *, _QWORD);
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[12];
  int v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  void (**v68)(_BYTE *, _QWORD);
  unsigned __int8 v69;
  __int128 v70;
  char v71;
  __int128 v72;
  char v73;
  uint64_t v74;

  v67 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v66 = &v51[-v4];
  sub_1BA7607C8();
  v64 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB13FB48();
  v65 = v9;
  v10 = *(void (***)(_BYTE *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE6784();
  sub_1BA4A2870(&qword_1ED3D13B0, (uint64_t (*)(uint64_t))sub_1BAEE6784, (uint64_t)&unk_1BB8FFC6C);
  v13 = v68;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v62 = v6;
  v63 = v8;
  v68 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v65;
  v18 = (uint64_t)v66;
  v19 = v67;
  if ((v16 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = v17;
      v28 = *((_QWORD *)v22 - 2);
      v29 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      sub_1BA4CDF6C(0, &qword_1ED3CE0C8, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
      *(_QWORD *)&v51[-32] = v31;
      *(_QWORD *)&v51[-24] = sub_1BAEE6828();
      *(_QWORD *)&v51[-16] = sub_1BAEE6890();
      *(_QWORD *)&v51[-8] = sub_1BAEE68F8();
      swift_getKeyPath();
      swift_retain();
      v32 = sub_1BAE71220((uint64_t)&unk_1E726D748);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v33 = v28;
      *(_QWORD *)(v33 + 8) = v29;
      *(_QWORD *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BAEFDBD0(v28, v29, 1);
      v68[1](v12, v27);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v72 = 0uLL;
  v73 = 0;
  v23 = sub_1BB874098();
  v25 = v24;
  v61 = v23;
  v72 = xmmword_1BB8A1A10;
  v73 = 0;
  v26 = sub_1BB874098();
  v35 = v34;
  v60 = v26;
  v72 = xmmword_1BB8D2D60;
  v73 = 0;
  v58 = sub_1BB874098();
  v59 = v36;
  v72 = xmmword_1BB8D2D70;
  v73 = 0;
  v56 = sub_1BB874098();
  v57 = v37;
  v72 = xmmword_1BB8D2D90;
  v73 = 0;
  v55 = sub_1BB8740A4();
  v72 = xmmword_1BB8D2D80;
  v73 = 0;
  sub_1BA650F04();
  sub_1BB874068();
  v54 = v35;
  v53 = xmmword_1BB8D2DA0;
  v72 = xmmword_1BB8D2DA0;
  v73 = 0;
  v39 = sub_1BB8740F8();
  if ((v39 & 1) != 0)
  {
    v70 = v53;
    v71 = 0;
    sub_1BB8740D4();
    v52 = v69;
  }
  else
  {
    v52 = 0;
  }
  v53 = xmmword_1BB8D2DB0;
  v72 = xmmword_1BB8D2DB0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v53;
    v71 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v40 = v64;
    sub_1BB8740D4();
    *(_QWORD *)&v53 = v25;
    v41 = v63;
    v42 = sub_1BB86DD08();
    v43 = v40;
    v44 = v42;
    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v41, v43);
  }
  else
  {
    *(_QWORD *)&v53 = v25;
    v44 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v72 = xmmword_1BB8D2DD0;
  v73 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v68[1](v12, v17);
  v45 = v74;
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BA646EFC(v18, v19 + *(int *)(v46 + 64), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  *(_QWORD *)(v19 + 72) = v45;
  v47 = v53;
  *(_QWORD *)v19 = v61;
  *(_QWORD *)(v19 + 8) = v47;
  v48 = v54;
  *(_QWORD *)(v19 + 16) = v60;
  *(_QWORD *)(v19 + 24) = v48;
  v49 = v59;
  *(_QWORD *)(v19 + 32) = v58;
  *(_QWORD *)(v19 + 40) = v49;
  v50 = v57;
  *(_QWORD *)(v19 + 48) = v56;
  *(_QWORD *)(v19 + 56) = v50;
  *(_BYTE *)(v19 + 64) = v55 & 1;
  *(_BYTE *)(v19 + 80) = v52;
  *(_QWORD *)(v19 + 88) = v44;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB12E230@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (**v10)(_BYTE *, _QWORD);
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[12];
  int v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  void (**v68)(_BYTE *, _QWORD);
  unsigned __int8 v69;
  __int128 v70;
  char v71;
  __int128 v72;
  char v73;
  uint64_t v74;

  v67 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v66 = &v51[-v4];
  sub_1BA7607C8();
  v64 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB13FBC0();
  v65 = v9;
  v10 = *(void (***)(_BYTE *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE6AE4();
  sub_1BA4A2870(&qword_1EF2B5900, (uint64_t (*)(uint64_t))sub_1BAEE6AE4, (uint64_t)&unk_1BB8FFC6C);
  v13 = v68;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v62 = v6;
  v63 = v8;
  v68 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v65;
  v18 = (uint64_t)v66;
  v19 = v67;
  if ((v16 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = v17;
      v28 = *((_QWORD *)v22 - 2);
      v29 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      sub_1BA4CDF6C(0, &qword_1EF2B58E0, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
      *(_QWORD *)&v51[-32] = v31;
      *(_QWORD *)&v51[-24] = sub_1BAEE6B88();
      *(_QWORD *)&v51[-16] = sub_1BAEE6BF0();
      *(_QWORD *)&v51[-8] = sub_1BAEE6C58();
      swift_getKeyPath();
      swift_retain();
      v32 = sub_1BAE71220((uint64_t)&unk_1E726D778);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v33 = v28;
      *(_QWORD *)(v33 + 8) = v29;
      *(_QWORD *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BAEFDBD0(v28, v29, 1);
      v68[1](v12, v27);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v72 = 0uLL;
  v73 = 0;
  v23 = sub_1BB874098();
  v25 = v24;
  v61 = v23;
  v72 = xmmword_1BB8A1A10;
  v73 = 0;
  v26 = sub_1BB874098();
  v35 = v34;
  v60 = v26;
  v72 = xmmword_1BB8D2D60;
  v73 = 0;
  v58 = sub_1BB874098();
  v59 = v36;
  v72 = xmmword_1BB8D2D70;
  v73 = 0;
  v56 = sub_1BB874098();
  v57 = v37;
  v72 = xmmword_1BB8D2D90;
  v73 = 0;
  v55 = sub_1BB8740A4();
  v72 = xmmword_1BB8D2D80;
  v73 = 0;
  sub_1BA829B78();
  sub_1BB874068();
  v54 = v35;
  v53 = xmmword_1BB8D2DA0;
  v72 = xmmword_1BB8D2DA0;
  v73 = 0;
  v39 = sub_1BB8740F8();
  if ((v39 & 1) != 0)
  {
    v70 = v53;
    v71 = 0;
    sub_1BB8740D4();
    v52 = v69;
  }
  else
  {
    v52 = 0;
  }
  v53 = xmmword_1BB8D2DB0;
  v72 = xmmword_1BB8D2DB0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v53;
    v71 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v40 = v64;
    sub_1BB8740D4();
    *(_QWORD *)&v53 = v25;
    v41 = v63;
    v42 = sub_1BB86DD08();
    v43 = v40;
    v44 = v42;
    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v41, v43);
  }
  else
  {
    *(_QWORD *)&v53 = v25;
    v44 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v72 = xmmword_1BB8D2DD0;
  v73 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v68[1](v12, v17);
  v45 = v74;
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BA646EFC(v18, v19 + *(int *)(v46 + 64), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  *(_QWORD *)(v19 + 72) = v45;
  v47 = v53;
  *(_QWORD *)v19 = v61;
  *(_QWORD *)(v19 + 8) = v47;
  v48 = v54;
  *(_QWORD *)(v19 + 16) = v60;
  *(_QWORD *)(v19 + 24) = v48;
  v49 = v59;
  *(_QWORD *)(v19 + 32) = v58;
  *(_QWORD *)(v19 + 40) = v49;
  v50 = v57;
  *(_QWORD *)(v19 + 48) = v56;
  *(_QWORD *)(v19 + 56) = v50;
  *(_BYTE *)(v19 + 64) = v55 & 1;
  *(_BYTE *)(v19 + 80) = v52;
  *(_QWORD *)(v19 + 88) = v44;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB12EA50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (**v10)(_BYTE *, _QWORD);
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[12];
  int v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  void (**v68)(_BYTE *, _QWORD);
  unsigned __int8 v69;
  __int128 v70;
  char v71;
  __int128 v72;
  char v73;
  uint64_t v74;

  v67 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v66 = &v51[-v4];
  sub_1BA7607C8();
  v64 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB13FC38();
  v65 = v9;
  v10 = *(void (***)(_BYTE *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE6E44();
  sub_1BA4A2870(&qword_1EF2B5948, (uint64_t (*)(uint64_t))sub_1BAEE6E44, (uint64_t)&unk_1BB8FFC6C);
  v13 = v68;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v62 = v6;
  v63 = v8;
  v68 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v65;
  v18 = (uint64_t)v66;
  v19 = v67;
  if ((v16 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = v17;
      v28 = *((_QWORD *)v22 - 2);
      v29 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      sub_1BA4CDF6C(0, &qword_1EF2B5928, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
      *(_QWORD *)&v51[-32] = v31;
      *(_QWORD *)&v51[-24] = sub_1BAEE6EE8();
      *(_QWORD *)&v51[-16] = sub_1BAEE6F50();
      *(_QWORD *)&v51[-8] = sub_1BAEE6FB8();
      swift_getKeyPath();
      swift_retain();
      v32 = sub_1BAE71220((uint64_t)&unk_1E726D7A8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v33 = v28;
      *(_QWORD *)(v33 + 8) = v29;
      *(_QWORD *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BAEFDBD0(v28, v29, 1);
      v68[1](v12, v27);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v72 = 0uLL;
  v73 = 0;
  v23 = sub_1BB874098();
  v25 = v24;
  v61 = v23;
  v72 = xmmword_1BB8A1A10;
  v73 = 0;
  v26 = sub_1BB874098();
  v35 = v34;
  v60 = v26;
  v72 = xmmword_1BB8D2D60;
  v73 = 0;
  v58 = sub_1BB874098();
  v59 = v36;
  v72 = xmmword_1BB8D2D70;
  v73 = 0;
  v56 = sub_1BB874098();
  v57 = v37;
  v72 = xmmword_1BB8D2D90;
  v73 = 0;
  v55 = sub_1BB8740A4();
  v72 = xmmword_1BB8D2D80;
  v73 = 0;
  sub_1BA69C280();
  sub_1BB874068();
  v54 = v35;
  v53 = xmmword_1BB8D2DA0;
  v72 = xmmword_1BB8D2DA0;
  v73 = 0;
  v39 = sub_1BB8740F8();
  if ((v39 & 1) != 0)
  {
    v70 = v53;
    v71 = 0;
    sub_1BB8740D4();
    v52 = v69;
  }
  else
  {
    v52 = 0;
  }
  v53 = xmmword_1BB8D2DB0;
  v72 = xmmword_1BB8D2DB0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v53;
    v71 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v40 = v64;
    sub_1BB8740D4();
    *(_QWORD *)&v53 = v25;
    v41 = v63;
    v42 = sub_1BB86DD08();
    v43 = v40;
    v44 = v42;
    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v41, v43);
  }
  else
  {
    *(_QWORD *)&v53 = v25;
    v44 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v72 = xmmword_1BB8D2DD0;
  v73 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v68[1](v12, v17);
  v45 = v74;
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BA646EFC(v18, v19 + *(int *)(v46 + 64), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  *(_QWORD *)(v19 + 72) = v45;
  v47 = v53;
  *(_QWORD *)v19 = v61;
  *(_QWORD *)(v19 + 8) = v47;
  v48 = v54;
  *(_QWORD *)(v19 + 16) = v60;
  *(_QWORD *)(v19 + 24) = v48;
  v49 = v59;
  *(_QWORD *)(v19 + 32) = v58;
  *(_QWORD *)(v19 + 40) = v49;
  v50 = v57;
  *(_QWORD *)(v19 + 48) = v56;
  *(_QWORD *)(v19 + 56) = v50;
  *(_BYTE *)(v19 + 64) = v55 & 1;
  *(_BYTE *)(v19 + 80) = v52;
  *(_QWORD *)(v19 + 88) = v44;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB12F270@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (**v10)(_BYTE *, _QWORD);
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[12];
  int v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  void (**v68)(_BYTE *, _QWORD);
  unsigned __int8 v69;
  __int128 v70;
  char v71;
  __int128 v72;
  char v73;
  uint64_t v74;

  v67 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v66 = &v51[-v4];
  sub_1BA7607C8();
  v64 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB13FCB0();
  v65 = v9;
  v10 = *(void (***)(_BYTE *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE71A4();
  sub_1BA4A2870(&qword_1EF2B5990, (uint64_t (*)(uint64_t))sub_1BAEE71A4, (uint64_t)&unk_1BB8FFC6C);
  v13 = v68;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v62 = v6;
  v63 = v8;
  v68 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v65;
  v18 = (uint64_t)v66;
  v19 = v67;
  if ((v16 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = v17;
      v28 = *((_QWORD *)v22 - 2);
      v29 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      sub_1BA4CDF6C(0, &qword_1EF2B5970, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
      *(_QWORD *)&v51[-32] = v31;
      *(_QWORD *)&v51[-24] = sub_1BAEE7248();
      *(_QWORD *)&v51[-16] = sub_1BAEE72B0();
      *(_QWORD *)&v51[-8] = sub_1BAEE7318();
      swift_getKeyPath();
      swift_retain();
      v32 = sub_1BAE71220((uint64_t)&unk_1E726D7D8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v33 = v28;
      *(_QWORD *)(v33 + 8) = v29;
      *(_QWORD *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BAEFDBD0(v28, v29, 1);
      v68[1](v12, v27);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v72 = 0uLL;
  v73 = 0;
  v23 = sub_1BB874098();
  v25 = v24;
  v61 = v23;
  v72 = xmmword_1BB8A1A10;
  v73 = 0;
  v26 = sub_1BB874098();
  v35 = v34;
  v60 = v26;
  v72 = xmmword_1BB8D2D60;
  v73 = 0;
  v58 = sub_1BB874098();
  v59 = v36;
  v72 = xmmword_1BB8D2D70;
  v73 = 0;
  v56 = sub_1BB874098();
  v57 = v37;
  v72 = xmmword_1BB8D2D90;
  v73 = 0;
  v55 = sub_1BB8740A4();
  v72 = xmmword_1BB8D2D80;
  v73 = 0;
  sub_1BA8266F4();
  sub_1BB874068();
  v54 = v35;
  v53 = xmmword_1BB8D2DA0;
  v72 = xmmword_1BB8D2DA0;
  v73 = 0;
  v39 = sub_1BB8740F8();
  if ((v39 & 1) != 0)
  {
    v70 = v53;
    v71 = 0;
    sub_1BB8740D4();
    v52 = v69;
  }
  else
  {
    v52 = 0;
  }
  v53 = xmmword_1BB8D2DB0;
  v72 = xmmword_1BB8D2DB0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v53;
    v71 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v40 = v64;
    sub_1BB8740D4();
    *(_QWORD *)&v53 = v25;
    v41 = v63;
    v42 = sub_1BB86DD08();
    v43 = v40;
    v44 = v42;
    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v41, v43);
  }
  else
  {
    *(_QWORD *)&v53 = v25;
    v44 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v72 = xmmword_1BB8D2DD0;
  v73 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v68[1](v12, v17);
  v45 = v74;
  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BA646EFC(v18, v19 + *(int *)(v46 + 64), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  *(_QWORD *)(v19 + 72) = v45;
  v47 = v53;
  *(_QWORD *)v19 = v61;
  *(_QWORD *)(v19 + 8) = v47;
  v48 = v54;
  *(_QWORD *)(v19 + 16) = v60;
  *(_QWORD *)(v19 + 24) = v48;
  v49 = v59;
  *(_QWORD *)(v19 + 32) = v58;
  *(_QWORD *)(v19 + 40) = v49;
  v50 = v57;
  *(_QWORD *)(v19 + 48) = v56;
  *(_QWORD *)(v19 + 56) = v50;
  *(_BYTE *)(v19 + 64) = v55 & 1;
  *(_BYTE *)(v19 + 80) = v52;
  *(_QWORD *)(v19 + 88) = v44;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB12FA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = a10;
  v17 = (int *)type metadata accessor for FormatPrimitivePropertyDefinition(0, a15, a16, a4);
  v18 = a9 + v17[13];
  v19 = sub_1BB873A2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a11, v19);
  *(_BYTE *)(a9 + v17[14]) = a12;
  *(_QWORD *)(a9 + v17[15]) = a13;
  return sub_1BA646EFC(a14, a9 + v17[16], (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
}

uint64_t sub_1BB12FB5C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  char v82;
  char v83;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v71 - v7;
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)&v71 - v9;
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v71 - v11;
  MEMORY[0x1E0C80A78](v12);
  v76 = (char *)&v71 - v13;
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v71 - v15;
  MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v71 - v17;
  MEMORY[0x1E0C80A78](v18);
  v79 = (char *)&v71 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  sub_1BAEE545C(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v29 = v28;
  v30 = sub_1BAEE554C();
  v31 = sub_1BA4A2870(&qword_1ED3D13C0, (uint64_t (*)(uint64_t))sub_1BAEE554C, (uint64_t)&unk_1BB8FFC6C);
  v71 = v29;
  sub_1BA6EC1EC(v29, v32, v26, v29, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v31, (uint64_t)&off_1E734BD80);
  v33 = *v2;
  v34 = v2[1];
  v35 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v22, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v80;
  sub_1BAD138CC(v33, v34, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v35[2];
    v43 = v35[3];
    v44 = v38;
    v45 = (uint64_t)v79;
    v80 = v44;
    ((void (*)(char *))v39)(v79);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD138CC(v42, v43, 1, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = v35[4];
    v48 = v35[5];
    v49 = v39;
    v50 = v25;
    v51 = (uint64_t)v78;
    v52 = v49;
    v49(v78, v80, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD138CC(v47, v48, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v35[6];
    v54 = v35[7];
    v55 = (char *)v40;
    v56 = (uint64_t)v77;
    v52(v77, v80, v37);
    v79 = v55;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD138CC(v53, v54, 3, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v25 = v50;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v53) = *((_BYTE *)v35 + 64);
    v57 = (uint64_t)v76;
    v52(v76, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD13A24(v53, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v75;
    v52(v75, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD45838(v35[9], 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v59 = v52;
    v80 = 0;
    v60 = *((unsigned __int8 *)v35 + 80);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
    v62 = (uint64_t)v74;
    v52(v74, v61, v37);
    swift_storeEnumTagMultiPayload();
    if (v60)
    {
      v63 = v80;
      v64 = sub_1BAE47574(v62, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v63)
      {
LABEL_11:
        sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE545C);
      }
      v80 = 0;
      if ((v64 & 1) != 0)
      {
        v81 = xmmword_1BB8D2DA0;
        v82 = 0;
        v83 = 1;
        sub_1BAEE54D4();
        sub_1BA4A2870(&qword_1ED3AF0C8, (uint64_t (*)(uint64_t))sub_1BAEE54D4, MEMORY[0x1E0DED188]);
        v65 = v80;
        sub_1BB874464();
        if (v65)
          goto LABEL_11;
        v80 = 0;
      }
    }
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    v66 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v66 != -1)
      swift_once();
    v67 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476BD8);
    v68 = (uint64_t)v72;
    v59(v72, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v69 = (uint64_t)v35 + *(int *)(v71 + 64);
    v70 = (uint64_t)v73;
    v59(v73, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD45A50(v69, 8, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE545C);
}

uint64_t sub_1BB1303A0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  __int128 v83;
  char v84;
  char v85;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v74 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v73 = (char *)&v73 - v7;
  MEMORY[0x1E0C80A78](v8);
  v75 = (char *)&v73 - v9;
  MEMORY[0x1E0C80A78](v10);
  v76 = (char *)&v73 - v11;
  MEMORY[0x1E0C80A78](v12);
  v78 = (char *)&v73 - v13;
  MEMORY[0x1E0C80A78](v14);
  v79 = (char *)&v73 - v15;
  MEMORY[0x1E0C80A78](v16);
  v80 = (char *)&v73 - v17;
  MEMORY[0x1E0C80A78](v18);
  v81 = (char *)&v73 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v73 - v21;
  sub_1BAEE57BC(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BA74E2EC(0);
  v29 = v28;
  v30 = sub_1BAEE58AC();
  v31 = sub_1BA4A2870(&qword_1EF2B58B8, (uint64_t (*)(uint64_t))sub_1BAEE58AC, (uint64_t)&unk_1BB8FFC6C);
  v77 = v29;
  sub_1BA6EC1EC(v29, v32, v26, v29, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v31, (uint64_t)&off_1E734BD80);
  v33 = *v2;
  v34 = v2[1];
  v35 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v22, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v82;
  sub_1BAD1361C(v33, v34, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v35[2];
    v43 = v35[3];
    v44 = v38;
    v45 = (uint64_t)v81;
    v82 = v44;
    ((void (*)(char *))v39)(v81);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1361C(v42, v43, 1, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = v35[4];
    v48 = v35[5];
    v49 = v39;
    v50 = v25;
    v51 = (uint64_t)v80;
    v52 = v49;
    v49(v80, v82, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1361C(v47, v48, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v35[6];
    v54 = v35[7];
    v55 = (char *)v40;
    v56 = (uint64_t)v79;
    v52(v79, v82, v37);
    v81 = v55;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1361C(v53, v54, 3, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v25 = v50;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v53) = *((_BYTE *)v35 + 64);
    v57 = (uint64_t)v78;
    v52(v78, v82, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD13774(v53, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v76;
    v59 = (uint64_t)v35 + *(int *)(v77 + 52);
    v52(v76, v82, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD45210(v59, 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v60 = v52;
    v82 = 0;
    v61 = v77;
    v62 = *((unsigned __int8 *)v35 + *(int *)(v77 + 56));
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v63 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
    v64 = (uint64_t)v75;
    v52(v75, v63, v37);
    swift_storeEnumTagMultiPayload();
    if (v62)
    {
      v65 = v82;
      v66 = sub_1BAE4738C(v64, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v65)
      {
LABEL_11:
        sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE57BC);
      }
      v82 = 0;
      if ((v66 & 1) != 0)
      {
        v83 = xmmword_1BB8D2DA0;
        v84 = 0;
        v85 = 1;
        sub_1BAEE5834();
        sub_1BA4A2870(&qword_1EF2B58C0, (uint64_t (*)(uint64_t))sub_1BAEE5834, MEMORY[0x1E0DED188]);
        v67 = v82;
        sub_1BB874464();
        if (v67)
          goto LABEL_11;
        v82 = 0;
      }
    }
    sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
    v68 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v68 != -1)
      swift_once();
    v69 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476BD8);
    v70 = (uint64_t)v73;
    v60(v73, v69, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v71 = (uint64_t)v35 + *(int *)(v61 + 64);
    v72 = (uint64_t)v74;
    v60(v74, v69, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD45524(v71, 8, 0, 0, v72, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v72, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE57BC);
}

uint64_t sub_1BB130BE8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  char v82;
  char v83;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v71 - v7;
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)&v71 - v9;
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v71 - v11;
  MEMORY[0x1E0C80A78](v12);
  v76 = (char *)&v71 - v13;
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v71 - v15;
  MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v71 - v17;
  MEMORY[0x1E0C80A78](v18);
  v79 = (char *)&v71 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  sub_1BAEE5A88(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v29 = v28;
  v30 = sub_1BAEE5B78();
  v31 = sub_1BA4A2870(&qword_1ED3ABF48, (uint64_t (*)(uint64_t))sub_1BAEE5B78, (uint64_t)&unk_1BB8FFC6C);
  v71 = v29;
  sub_1BA6EC1EC(v29, v32, v26, v29, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v31, (uint64_t)&off_1E734BD80);
  v33 = *v2;
  v34 = v2[1];
  v35 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v22, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v80;
  sub_1BAD1336C(v33, v34, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v35[2];
    v43 = v35[3];
    v44 = v38;
    v45 = (uint64_t)v79;
    v80 = v44;
    ((void (*)(char *))v39)(v79);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1336C(v42, v43, 1, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = v35[4];
    v48 = v35[5];
    v49 = v39;
    v50 = v25;
    v51 = (uint64_t)v78;
    v52 = v49;
    v49(v78, v80, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1336C(v47, v48, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v35[6];
    v54 = v35[7];
    v55 = (char *)v40;
    v56 = (uint64_t)v77;
    v52(v77, v80, v37);
    v79 = v55;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1336C(v53, v54, 3, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v25 = v50;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v53) = *((_BYTE *)v35 + 64);
    v57 = (uint64_t)v76;
    v52(v76, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD134C4(v53, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v75;
    v52(v75, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD44D1C(v35[9], *((_BYTE *)v35 + 80), 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v59 = v52;
    v80 = 0;
    v60 = *((unsigned __int8 *)v35 + 81);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
    v62 = (uint64_t)v74;
    v52(v74, v61, v37);
    swift_storeEnumTagMultiPayload();
    if (v60)
    {
      v63 = v80;
      v64 = sub_1BAE471A4(v62, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v63)
      {
LABEL_11:
        sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE5A88);
      }
      v80 = 0;
      if ((v64 & 1) != 0)
      {
        v81 = xmmword_1BB8D2DA0;
        v82 = 0;
        v83 = 1;
        sub_1BAEE5B00();
        sub_1BA4A2870(&qword_1ED3AF0A8, (uint64_t (*)(uint64_t))sub_1BAEE5B00, MEMORY[0x1E0DED188]);
        v65 = v80;
        sub_1BB874464();
        if (v65)
          goto LABEL_11;
        v80 = 0;
      }
    }
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    v66 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v66 != -1)
      swift_once();
    v67 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476BD8);
    v68 = (uint64_t)v72;
    v59(v72, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v69 = (uint64_t)v35 + *(int *)(v71 + 64);
    v70 = (uint64_t)v73;
    v59(v73, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD44EFC(v69, 8, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE5A88);
}

uint64_t sub_1BB131428(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  char v82;
  char v83;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v71 - v7;
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)&v71 - v9;
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v71 - v11;
  MEMORY[0x1E0C80A78](v12);
  v76 = (char *)&v71 - v13;
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v71 - v15;
  MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v71 - v17;
  MEMORY[0x1E0C80A78](v18);
  v79 = (char *)&v71 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  sub_1BAEE5DE8(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v29 = v28;
  v30 = sub_1BAEE5ED8();
  v31 = sub_1BA4A2870(&qword_1ED3ABF58, (uint64_t (*)(uint64_t))sub_1BAEE5ED8, (uint64_t)&unk_1BB8FFC6C);
  v71 = v29;
  sub_1BA6EC1EC(v29, v32, v26, v29, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v31, (uint64_t)&off_1E734BD80);
  v33 = *v2;
  v34 = v2[1];
  v35 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v22, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v80;
  sub_1BAD130BC(v33, v34, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v35[2];
    v43 = v35[3];
    v44 = v38;
    v45 = (uint64_t)v79;
    v80 = v44;
    ((void (*)(char *))v39)(v79);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD130BC(v42, v43, 1, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = v35[4];
    v48 = v35[5];
    v49 = v39;
    v50 = v25;
    v51 = (uint64_t)v78;
    v52 = v49;
    v49(v78, v80, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD130BC(v47, v48, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v35[6];
    v54 = v35[7];
    v55 = (char *)v40;
    v56 = (uint64_t)v77;
    v52(v77, v80, v37);
    v79 = v55;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD130BC(v53, v54, 3, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v25 = v50;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v53) = *((_BYTE *)v35 + 64);
    v57 = (uint64_t)v76;
    v52(v76, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD13214(v53, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v75;
    v52(v75, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD44848(v35[9], *((_BYTE *)v35 + 80), 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v59 = v52;
    v80 = 0;
    v60 = *((unsigned __int8 *)v35 + 81);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
    v62 = (uint64_t)v74;
    v52(v74, v61, v37);
    swift_storeEnumTagMultiPayload();
    if (v60)
    {
      v63 = v80;
      v64 = sub_1BAE46FBC(v62, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v63)
      {
LABEL_11:
        sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE5DE8);
      }
      v80 = 0;
      if ((v64 & 1) != 0)
      {
        v81 = xmmword_1BB8D2DA0;
        v82 = 0;
        v83 = 1;
        sub_1BAEE5E60();
        sub_1BA4A2870(&qword_1ED3AF0F8, (uint64_t (*)(uint64_t))sub_1BAEE5E60, MEMORY[0x1E0DED188]);
        v65 = v80;
        sub_1BB874464();
        if (v65)
          goto LABEL_11;
        v80 = 0;
      }
    }
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    v66 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v66 != -1)
      swift_once();
    v67 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476BD8);
    v68 = (uint64_t)v72;
    v59(v72, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v69 = (uint64_t)v35 + *(int *)(v71 + 64);
    v70 = (uint64_t)v73;
    v59(v73, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD44A08(v69, 8, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE5DE8);
}

uint64_t sub_1BB131C68(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  char v82;
  char v83;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v71 - v7;
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)&v71 - v9;
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v71 - v11;
  MEMORY[0x1E0C80A78](v12);
  v76 = (char *)&v71 - v13;
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v71 - v15;
  MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v71 - v17;
  MEMORY[0x1E0C80A78](v18);
  v79 = (char *)&v71 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  sub_1BAEE6694(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v29 = v28;
  v30 = sub_1BAEE6784();
  v31 = sub_1BA4A2870(&qword_1ED3D13B0, (uint64_t (*)(uint64_t))sub_1BAEE6784, (uint64_t)&unk_1BB8FFC6C);
  v71 = v29;
  sub_1BA6EC1EC(v29, v32, v26, v29, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v31, (uint64_t)&off_1E734BD80);
  v33 = *v2;
  v34 = v2[1];
  v35 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v22, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v80;
  sub_1BAD128AC(v33, v34, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v35[2];
    v43 = v35[3];
    v44 = v38;
    v45 = (uint64_t)v79;
    v80 = v44;
    ((void (*)(char *))v39)(v79);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD128AC(v42, v43, 1, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = v35[4];
    v48 = v35[5];
    v49 = v39;
    v50 = v25;
    v51 = (uint64_t)v78;
    v52 = v49;
    v49(v78, v80, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD128AC(v47, v48, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v35[6];
    v54 = v35[7];
    v55 = (char *)v40;
    v56 = (uint64_t)v77;
    v52(v77, v80, v37);
    v79 = v55;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD128AC(v53, v54, 3, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v25 = v50;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v53) = *((_BYTE *)v35 + 64);
    v57 = (uint64_t)v76;
    v52(v76, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD12A04(v53, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v75;
    v52(v75, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD437D8(v35[9], 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v59 = v52;
    v80 = 0;
    v60 = *((unsigned __int8 *)v35 + 80);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
    v62 = (uint64_t)v74;
    v52(v74, v61, v37);
    swift_storeEnumTagMultiPayload();
    if (v60)
    {
      v63 = v80;
      v64 = sub_1BAE46A04(v62, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v63)
      {
LABEL_11:
        sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE6694);
      }
      v80 = 0;
      if ((v64 & 1) != 0)
      {
        v81 = xmmword_1BB8D2DA0;
        v82 = 0;
        v83 = 1;
        sub_1BAEE670C();
        sub_1BA4A2870(&qword_1ED3AF0B8, (uint64_t (*)(uint64_t))sub_1BAEE670C, MEMORY[0x1E0DED188]);
        v65 = v80;
        sub_1BB874464();
        if (v65)
          goto LABEL_11;
        v80 = 0;
      }
    }
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    v66 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v66 != -1)
      swift_once();
    v67 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476BD8);
    v68 = (uint64_t)v72;
    v59(v72, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v69 = (uint64_t)v35 + *(int *)(v71 + 64);
    v70 = (uint64_t)v73;
    v59(v73, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD439F0(v69, 8, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE6694);
}

uint64_t sub_1BB1324AC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  char v82;
  char v83;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v71 - v7;
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)&v71 - v9;
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v71 - v11;
  MEMORY[0x1E0C80A78](v12);
  v76 = (char *)&v71 - v13;
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v71 - v15;
  MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v71 - v17;
  MEMORY[0x1E0C80A78](v18);
  v79 = (char *)&v71 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  sub_1BAEE69F4(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v29 = v28;
  v30 = sub_1BAEE6AE4();
  v31 = sub_1BA4A2870(&qword_1EF2B5900, (uint64_t (*)(uint64_t))sub_1BAEE6AE4, (uint64_t)&unk_1BB8FFC6C);
  v71 = v29;
  sub_1BA6EC1EC(v29, v32, v26, v29, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v31, (uint64_t)&off_1E734BD80);
  v33 = *v2;
  v34 = v2[1];
  v35 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v22, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v80;
  sub_1BAD125FC(v33, v34, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v35[2];
    v43 = v35[3];
    v44 = v38;
    v45 = (uint64_t)v79;
    v80 = v44;
    ((void (*)(char *))v39)(v79);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD125FC(v42, v43, 1, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = v35[4];
    v48 = v35[5];
    v49 = v39;
    v50 = v25;
    v51 = (uint64_t)v78;
    v52 = v49;
    v49(v78, v80, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD125FC(v47, v48, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v35[6];
    v54 = v35[7];
    v55 = (char *)v40;
    v56 = (uint64_t)v77;
    v52(v77, v80, v37);
    v79 = v55;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD125FC(v53, v54, 3, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v25 = v50;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v53) = *((_BYTE *)v35 + 64);
    v57 = (uint64_t)v76;
    v52(v76, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD12754(v53, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v75;
    v52(v75, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD432AC(v35[9], 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v59 = v52;
    v80 = 0;
    v60 = *((unsigned __int8 *)v35 + 80);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
    v62 = (uint64_t)v74;
    v52(v74, v61, v37);
    swift_storeEnumTagMultiPayload();
    if (v60)
    {
      v63 = v80;
      v64 = sub_1BAE4681C(v62, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v63)
      {
LABEL_11:
        sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE69F4);
      }
      v80 = 0;
      if ((v64 & 1) != 0)
      {
        v81 = xmmword_1BB8D2DA0;
        v82 = 0;
        v83 = 1;
        sub_1BAEE6A6C();
        sub_1BA4A2870(&qword_1EF2B5908, (uint64_t (*)(uint64_t))sub_1BAEE6A6C, MEMORY[0x1E0DED188]);
        v65 = v80;
        sub_1BB874464();
        if (v65)
          goto LABEL_11;
        v80 = 0;
      }
    }
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    v66 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v66 != -1)
      swift_once();
    v67 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476BD8);
    v68 = (uint64_t)v72;
    v59(v72, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v69 = (uint64_t)v35 + *(int *)(v71 + 64);
    v70 = (uint64_t)v73;
    v59(v73, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD434C4(v69, 8, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE69F4);
}

uint64_t sub_1BB132CF0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  char v82;
  char v83;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v71 - v7;
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)&v71 - v9;
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v71 - v11;
  MEMORY[0x1E0C80A78](v12);
  v76 = (char *)&v71 - v13;
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v71 - v15;
  MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v71 - v17;
  MEMORY[0x1E0C80A78](v18);
  v79 = (char *)&v71 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  sub_1BAEE6D54(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v29 = v28;
  v30 = sub_1BAEE6E44();
  v31 = sub_1BA4A2870(&qword_1EF2B5948, (uint64_t (*)(uint64_t))sub_1BAEE6E44, (uint64_t)&unk_1BB8FFC6C);
  v71 = v29;
  sub_1BA6EC1EC(v29, v32, v26, v29, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v31, (uint64_t)&off_1E734BD80);
  v33 = *v2;
  v34 = v2[1];
  v35 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v22, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v80;
  sub_1BAD1234C(v33, v34, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v35[2];
    v43 = v35[3];
    v44 = v38;
    v45 = (uint64_t)v79;
    v80 = v44;
    ((void (*)(char *))v39)(v79);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1234C(v42, v43, 1, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = v35[4];
    v48 = v35[5];
    v49 = v39;
    v50 = v25;
    v51 = (uint64_t)v78;
    v52 = v49;
    v49(v78, v80, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1234C(v47, v48, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v35[6];
    v54 = v35[7];
    v55 = (char *)v40;
    v56 = (uint64_t)v77;
    v52(v77, v80, v37);
    v79 = v55;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1234C(v53, v54, 3, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v25 = v50;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v53) = *((_BYTE *)v35 + 64);
    v57 = (uint64_t)v76;
    v52(v76, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD124A4(v53, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v75;
    v52(v75, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD42D80(v35[9], 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v59 = v52;
    v80 = 0;
    v60 = *((unsigned __int8 *)v35 + 80);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
    v62 = (uint64_t)v74;
    v52(v74, v61, v37);
    swift_storeEnumTagMultiPayload();
    if (v60)
    {
      v63 = v80;
      v64 = sub_1BAE46634(v62, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v63)
      {
LABEL_11:
        sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE6D54);
      }
      v80 = 0;
      if ((v64 & 1) != 0)
      {
        v81 = xmmword_1BB8D2DA0;
        v82 = 0;
        v83 = 1;
        sub_1BAEE6DCC();
        sub_1BA4A2870(&qword_1EF2B5950, (uint64_t (*)(uint64_t))sub_1BAEE6DCC, MEMORY[0x1E0DED188]);
        v65 = v80;
        sub_1BB874464();
        if (v65)
          goto LABEL_11;
        v80 = 0;
      }
    }
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    v66 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v66 != -1)
      swift_once();
    v67 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476BD8);
    v68 = (uint64_t)v72;
    v59(v72, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v69 = (uint64_t)v35 + *(int *)(v71 + 64);
    v70 = (uint64_t)v73;
    v59(v73, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD42F98(v69, 8, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE6D54);
}

uint64_t sub_1BB133534(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  char v82;
  char v83;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v71 - v7;
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)&v71 - v9;
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v71 - v11;
  MEMORY[0x1E0C80A78](v12);
  v76 = (char *)&v71 - v13;
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v71 - v15;
  MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v71 - v17;
  MEMORY[0x1E0C80A78](v18);
  v79 = (char *)&v71 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  sub_1BAEE70B4(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v29 = v28;
  v30 = sub_1BAEE71A4();
  v31 = sub_1BA4A2870(&qword_1EF2B5990, (uint64_t (*)(uint64_t))sub_1BAEE71A4, (uint64_t)&unk_1BB8FFC6C);
  v71 = v29;
  sub_1BA6EC1EC(v29, v32, v26, v29, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v31, (uint64_t)&off_1E734BD80);
  v33 = *v2;
  v34 = v2[1];
  v35 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v22, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v80;
  sub_1BAD1209C(v33, v34, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v35[2];
    v43 = v35[3];
    v44 = v38;
    v45 = (uint64_t)v79;
    v80 = v44;
    ((void (*)(char *))v39)(v79);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1209C(v42, v43, 1, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = v35[4];
    v48 = v35[5];
    v49 = v39;
    v50 = v25;
    v51 = (uint64_t)v78;
    v52 = v49;
    v49(v78, v80, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1209C(v47, v48, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v35[6];
    v54 = v35[7];
    v55 = (char *)v40;
    v56 = (uint64_t)v77;
    v52(v77, v80, v37);
    v79 = v55;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1209C(v53, v54, 3, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v25 = v50;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v53) = *((_BYTE *)v35 + 64);
    v57 = (uint64_t)v76;
    v52(v76, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD121F4(v53, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v75;
    v52(v75, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD42854(v35[9], 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v59 = v52;
    v80 = 0;
    v60 = *((unsigned __int8 *)v35 + 80);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
    v62 = (uint64_t)v74;
    v52(v74, v61, v37);
    swift_storeEnumTagMultiPayload();
    if (v60)
    {
      v63 = v80;
      v64 = sub_1BAE4644C(v62, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v63)
      {
LABEL_11:
        sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE70B4);
      }
      v80 = 0;
      if ((v64 & 1) != 0)
      {
        v81 = xmmword_1BB8D2DA0;
        v82 = 0;
        v83 = 1;
        sub_1BAEE712C();
        sub_1BA4A2870(&qword_1EF2B5998, (uint64_t (*)(uint64_t))sub_1BAEE712C, MEMORY[0x1E0DED188]);
        v65 = v80;
        sub_1BB874464();
        if (v65)
          goto LABEL_11;
        v80 = 0;
      }
    }
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    v66 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v66 != -1)
      swift_once();
    v67 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476BD8);
    v68 = (uint64_t)v72;
    v59(v72, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v69 = (uint64_t)v35 + *(int *)(v71 + 64);
    v70 = (uint64_t)v73;
    v59(v73, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD42A6C(v69, 8, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE70B4);
}

uint64_t FormatPrimitivePropertyDefinition.deprecated.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 56));
}

uint64_t FormatPrimitivePropertyDefinition.compilerFlags.getter(uint64_t a1)
{
  sub_1BB13AFF8(a1);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPropertyDefinition.type.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA74B050(v1, (uint64_t)v5);
  *a1 = byte_1BB8EE8CA[(int)swift_getEnumCaseMultiPayload()];
  return sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatPropertyDefinition);
}

void FormatPropertyDefinition.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[6];

  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v0);
  v19[4] = (char *)v19 - v1;
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v2);
  v19[3] = (char *)v19 - v3;
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v4);
  v19[2] = (char *)v19 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v6);
  v19[1] = (char *)v19 - v7;
  sub_1BA74E21C(0);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v9);
  sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v12);
  sub_1BA74E2EC(0);
  MEMORY[0x1E0C80A78](v13);
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v14);
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v15);
  v16 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v16);
  sub_1BA74B050(v19[5], (uint64_t)v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (char *)sub_1BB13422C + 4 * byte_1BB8EE440[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB13422C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DEAFA0];
  sub_1BB12A284(v1, v0, (uint64_t)&qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  v3 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  sub_1BB12A2E0(v0, (uint64_t)&qword_1ED3CE138, v2, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  return v3;
}

uint64_t sub_1BB134584()
{
  _QWORD *v0;

  sub_1BB873CB4();
  sub_1BB872AFC("meCell.swift");
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BB873E34();
  sub_1BB872AFC(v0);
  return 0;
}

uint64_t sub_1BB134640()
{
  _QWORD *v0;

  sub_1BB873CB4();
  sub_1BB872AFC("finition.BOOLean(");
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BB873E34();
  sub_1BB872AFC(v0);
  return 0;
}

uint64_t sub_1BB1346FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  _QWORD *v6;

  sub_1BB873CB4();
  sub_1BB872AFC(0);
  a5(0);
  sub_1BB873E34();
  sub_1BB872AFC(v6);
  return 0;
}

uint64_t sub_1BB1347A4()
{
  _QWORD *v0;

  sub_1BB873CB4();
  sub_1BB872AFC("FormatPropertyDefinition.enum(");
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BB873E34();
  sub_1BB872AFC(v0);
  return 0;
}

uint64_t sub_1BB134860()
{
  _QWORD *v0;

  sub_1BB873CB4();
  sub_1BB872AFC("FormatPropertyDefinition.float(");
  sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BB873E34();
  sub_1BB872AFC(v0);
  return 0;
}

uint64_t sub_1BB13491C()
{
  _QWORD *v0;

  sub_1BB873CB4();
  sub_1BB872AFC("finition.integer(");
  sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BB873E34();
  sub_1BB872AFC(v0);
  return 0;
}

uint64_t sub_1BB1349D8()
{
  _QWORD *v0;

  sub_1BB873CB4();
  sub_1BB872AFC("FormatPropertyDefinition.url(");
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BB873E34();
  sub_1BB872AFC(v0);
  return 0;
}

uint64_t sub_1BB134A94()
{
  _QWORD *v0;

  sub_1BB873CB4();
  sub_1BB872AFC("FormatPropertyDefinition.image(");
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BB873E34();
  sub_1BB872AFC(v0);
  return 0;
}

uint64_t sub_1BB134B50()
{
  _QWORD *v0;

  sub_1BB873CB4();
  sub_1BB872AFC("FormatPropertyDefinition.video(");
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BB873E34();
  sub_1BB872AFC(v0);
  return 0;
}

uint64_t sub_1BB134C0C()
{
  _QWORD *v0;

  sub_1BB873CB4();
  sub_1BB872AFC("FormatPropertyDefinition.font(");
  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BB873E34();
  sub_1BB872AFC(v0);
  return 0;
}

BOOL sub_1BB134CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char v22;
  _BOOL8 result;
  char v24;
  char v25;
  char v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  _BYTE *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v37)(uint64_t);
  uint64_t (*v38)(uint64_t);
  uint64_t (*v39)(uint64_t);
  char v40;
  void (*v41)(_BYTE *, uint64_t);
  _BYTE v42[12];
  int v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = &v42[-v11];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v42[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v42[-v17];
  MEMORY[0x1E0C80A78](v19);
  v21 = &v42[-v20];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v26 = sub_1BB874398(), result = 0, (v26 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v27 = *(unsigned __int8 *)(a1 + 65);
          v28 = *(unsigned __int8 *)(a2 + 65);
          if (v27 == 2)
          {
            if (v28 != 2)
              return 0;
          }
          else if (v28 == 2 || ((v28 & 1) == 0) == (v27 & 1))
          {
            return 0;
          }
          if (*(unsigned __int8 *)(a1 + 66) != *(unsigned __int8 *)(a2 + 66))
            return 0;
          v29 = *(_QWORD *)(a2 + 72);
          v44 = *(_QWORD *)(a1 + 72);
          v45 = v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v43 = sub_1BA857AC0(v44, v45);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v43 & 1) == 0)
            return 0;
          sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          v45 = v30;
          sub_1BA5E01A4(a1 + *(int *)(v30 + 64), (uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          v31 = a2 + *(int *)(v45 + 64);
          v32 = MEMORY[0x1E0DB48B0];
          sub_1BA5E01A4(v31, (uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          v33 = &v12[*(int *)(v10 + 48)];
          v34 = (uint64_t (*)(uint64_t))v32;
          v35 = (uint64_t)v33;
          sub_1BA5E01A4((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v34);
          sub_1BA5E01A4((uint64_t)v18, v35, (unint64_t *)&qword_1ED3C47E8, v34);
          v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
          if (v36((uint64_t)v12, 1, v4) == 1)
          {
            v37 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v37);
            if (v36(v35, 1, v4) == 1)
            {
              sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              return 1;
            }
          }
          else
          {
            sub_1BA5E01A4((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            if (v36(v35, 1, v4) != 1)
            {
              (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v35, v4);
              v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
              v40 = sub_1BB872958();
              v41 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
              v41(v8, v4);
              sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v39);
              sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v39);
              v41(v15, v4);
              sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v39);
              return (v40 & 1) != 0;
            }
            v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v38);
            (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
          }
          sub_1BAEE7BF0((uint64_t)v12, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1BB1351D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  _BYTE *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t (*v42)(uint64_t);
  uint64_t (*v43)(uint64_t);
  char v44;
  void (*v45)(_BYTE *, uint64_t);
  _BYTE v46[12];
  int v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v49 = &v46[-v11];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v46[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v46[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v46[-v19];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v21 = sub_1BB874398(), result = 0, (v21 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v23 = sub_1BB874398(), result = 0, (v23 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v48 = v4;
          v26 = *(_QWORD *)(a1 + 72);
          v27 = *(_QWORD *)(a2 + 72);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            v51 = *(_QWORD *)(a1 + 72);
            if ((~v27 & 0xF000000000000007) != 0)
            {
              v50 = v27;
              swift_retain_n();
              static FormatColor.== infix(_:_:)((uint64_t)&v51);
              v29 = v28;
              swift_release();
              sub_1BA5E800C(v26);
              if ((v29 & 1) == 0)
                return 0;
              goto LABEL_21;
            }
            sub_1BA5E7FF4(v26);
          }
          else if ((~v27 & 0xF000000000000007) == 0)
          {
LABEL_21:
            if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
            {
              v30 = *(_QWORD *)(a1 + 88);
              v31 = *(_QWORD *)(a2 + 88);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v47 = sub_1BA857AC0(v30, v31);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v47 & 1) != 0)
              {
                sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                v33 = v32;
                v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA5E01A4(a1 + *(int *)(v32 + 64), (uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA5E01A4(a2 + *(int *)(v33 + 64), (uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v34);
                v35 = v49;
                v36 = (uint64_t)&v49[*(int *)(v10 + 48)];
                sub_1BA5E01A4((uint64_t)v20, (uint64_t)v49, (unint64_t *)&qword_1ED3C47E8, v34);
                v37 = v34;
                v38 = (uint64_t)v35;
                sub_1BA5E01A4((uint64_t)v17, v36, (unint64_t *)&qword_1ED3C47E8, v37);
                v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
                v40 = v48;
                if (v39((uint64_t)v35, 1, v48) == 1)
                {
                  v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v41);
                  if (v39(v36, 1, v40) == 1)
                  {
                    sub_1BA5C699C((uint64_t)v35, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                    return 1;
                  }
                }
                else
                {
                  sub_1BA5E01A4((uint64_t)v35, (uint64_t)v14, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  if (v39(v36, 1, v40) != 1)
                  {
                    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v36, v40);
                    v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                    sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                    v44 = sub_1BB872958();
                    v45 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
                    v45(v8, v40);
                    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v43);
                    sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v43);
                    v45(v14, v40);
                    sub_1BA5C699C(v38, (unint64_t *)&qword_1ED3C47E8, v43);
                    return (v44 & 1) != 0;
                  }
                  v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v42);
                  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v40);
                }
                sub_1BAEE7BF0((uint64_t)v35, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              }
            }
            return 0;
          }
          sub_1BA5E7FF4(v27);
          sub_1BA5E800C(v26);
          sub_1BA5E800C(v27);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1BB135734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  _BOOL8 result;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t (*v37)(uint64_t);
  uint64_t (*v38)(uint64_t);
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - v11;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v41 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v41 - v20;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v26 = sub_1BB874398(), result = 0, (v26 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v27 = *(_BYTE *)(a2 + 80);
          if ((*(_BYTE *)(a1 + 80) & 1) != 0)
          {
            if (!*(_BYTE *)(a2 + 80))
              return 0;
          }
          else
          {
            if (*(double *)(a1 + 72) != *(double *)(a2 + 72))
              v27 = 1;
            if ((v27 & 1) != 0)
              return 0;
          }
          if (*(unsigned __int8 *)(a1 + 81) != *(unsigned __int8 *)(a2 + 81))
            return 0;
          v42 = v4;
          v44 = *(_QWORD *)(a1 + 88);
          v28 = *(_QWORD *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v43 = sub_1BA857AC0(v44, v28);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v43 & 1) == 0)
            return 0;
          sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          v30 = v29;
          sub_1BA5E01A4(a1 + *(int *)(v29 + 64), (uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          v31 = a2 + *(int *)(v30 + 64);
          v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA5E01A4(v31, (uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          v33 = (uint64_t)&v12[*(int *)(v10 + 48)];
          sub_1BA5E01A4((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v32);
          sub_1BA5E01A4((uint64_t)v18, v33, (unint64_t *)&qword_1ED3C47E8, v32);
          v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
          v35 = v42;
          if (v34((uint64_t)v12, 1, v42) == 1)
          {
            v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v36);
            if (v34(v33, 1, v35) == 1)
            {
              sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              return 1;
            }
          }
          else
          {
            sub_1BA5E01A4((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            if (v34(v33, 1, v35) != 1)
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v33, v35);
              v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
              v39 = sub_1BB872958();
              v40 = *(void (**)(char *, uint64_t))(v6 + 8);
              v40(v8, v35);
              sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v38);
              sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v38);
              v40(v15, v35);
              sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v38);
              return (v39 & 1) != 0;
            }
            v37 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v37);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v35);
          }
          sub_1BAEE7BF0((uint64_t)v12, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1BB135C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  _BOOL8 result;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t (*v37)(uint64_t);
  uint64_t (*v38)(uint64_t);
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - v11;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v41 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v41 - v20;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v26 = sub_1BB874398(), result = 0, (v26 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v27 = *(_BYTE *)(a2 + 80);
          if ((*(_BYTE *)(a1 + 80) & 1) != 0)
          {
            if (!*(_BYTE *)(a2 + 80))
              return 0;
          }
          else
          {
            if (*(_QWORD *)(a1 + 72) != *(_QWORD *)(a2 + 72))
              v27 = 1;
            if ((v27 & 1) != 0)
              return 0;
          }
          if (*(unsigned __int8 *)(a1 + 81) != *(unsigned __int8 *)(a2 + 81))
            return 0;
          v42 = v4;
          v44 = *(_QWORD *)(a1 + 88);
          v28 = *(_QWORD *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v43 = sub_1BA857AC0(v44, v28);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v43 & 1) == 0)
            return 0;
          sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          v30 = v29;
          sub_1BA5E01A4(a1 + *(int *)(v29 + 64), (uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          v31 = a2 + *(int *)(v30 + 64);
          v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA5E01A4(v31, (uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          v33 = (uint64_t)&v12[*(int *)(v10 + 48)];
          sub_1BA5E01A4((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v32);
          sub_1BA5E01A4((uint64_t)v18, v33, (unint64_t *)&qword_1ED3C47E8, v32);
          v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
          v35 = v42;
          if (v34((uint64_t)v12, 1, v42) == 1)
          {
            v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v36);
            if (v34(v33, 1, v35) == 1)
            {
              sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              return 1;
            }
          }
          else
          {
            sub_1BA5E01A4((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            if (v34(v33, 1, v35) != 1)
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v33, v35);
              v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
              v39 = sub_1BB872958();
              v40 = *(void (**)(char *, uint64_t))(v6 + 8);
              v40(v8, v35);
              sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v38);
              sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v38);
              v40(v15, v35);
              sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v38);
              return (v39 & 1) != 0;
            }
            v37 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v37);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v35);
          }
          sub_1BAEE7BF0((uint64_t)v12, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1BB136124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char v22;
  _BOOL8 result;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void);
  _BYTE *v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v38)(uint64_t);
  uint64_t (*v39)(uint64_t);
  uint64_t (*v40)(uint64_t);
  char v41;
  void (*v42)(_BYTE *, uint64_t);
  _BYTE v43[12];
  int v44;
  uint64_t v45;
  uint64_t v46;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = &v43[-v11];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v43[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v43[-v17];
  MEMORY[0x1E0C80A78](v19);
  v21 = &v43[-v20];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v26 = sub_1BB874398(), result = 0, (v26 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v27 = *(_QWORD *)(a1 + 80);
          v28 = *(_QWORD *)(a2 + 80);
          if (!v27)
          {
            if (v28)
              return 0;
            goto LABEL_23;
          }
          if (!v28)
            return 0;
          if (*(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72) && v27 == v28
            || (v29 = sub_1BB874398(), result = 0, (v29 & 1) != 0))
          {
LABEL_23:
            if (*(unsigned __int8 *)(a1 + 88) != *(unsigned __int8 *)(a2 + 88))
              return 0;
            v30 = *(_QWORD *)(a2 + 96);
            v45 = *(_QWORD *)(a1 + 96);
            v46 = v30;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v44 = sub_1BA857AC0(v45, v46);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v44 & 1) == 0)
              return 0;
            sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
            v46 = v31;
            sub_1BA5E01A4(a1 + *(int *)(v31 + 64), (uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            v32 = a2 + *(int *)(v46 + 64);
            v33 = MEMORY[0x1E0DB48B0];
            sub_1BA5E01A4(v32, (uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            v34 = &v12[*(int *)(v10 + 48)];
            v35 = (uint64_t (*)(uint64_t))v33;
            v36 = (uint64_t)v34;
            sub_1BA5E01A4((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v35);
            sub_1BA5E01A4((uint64_t)v18, v36, (unint64_t *)&qword_1ED3C47E8, v35);
            v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
            if (v37((uint64_t)v12, 1, v4) == 1)
            {
              v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v38);
              if (v37(v36, 1, v4) == 1)
              {
                sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                return 1;
              }
            }
            else
            {
              sub_1BA5E01A4((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              if (v37(v36, 1, v4) != 1)
              {
                (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v36, v4);
                v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                v41 = sub_1BB872958();
                v42 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
                v42(v8, v4);
                sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v40);
                sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v40);
                v42(v15, v4);
                sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v40);
                return (v41 & 1) != 0;
              }
              v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v39);
              (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
            }
            sub_1BAEE7BF0((uint64_t)v12, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            return 0;
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_1BB136638(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, unint64_t *a5, uint64_t a6, void (*a7)(uint64_t))
{
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char v40;
  _BOOL8 result;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  unint64_t *v52;
  unint64_t *v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  uint64_t (*v75)(uint64_t);
  char *v76;
  uint64_t (*v77)(uint64_t);
  char v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  void (*v92)(uint64_t);
  unint64_t *v93;
  uint64_t v94;
  uint64_t v95;

  v92 = a7;
  v94 = a6;
  v12 = sub_1BB86E710();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v90 = v12;
  v88 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v83 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v13);
  v85 = v15;
  MEMORY[0x1E0C80A78](v15);
  v89 = (uint64_t)&v80 - v16;
  v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v13, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v18);
  v84 = (uint64_t)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v86 = (uint64_t)&v80 - v21;
  v23 = MEMORY[0x1E0C80A78](v22);
  v87 = (uint64_t)&v80 - v24;
  v25 = ((uint64_t (*)(_QWORD, double))a3)(0, v23);
  v95 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v91 = (char *)&v80 - v26;
  v93 = a4;
  sub_1BAEE7C2C(0, a4, a5, a3);
  v28 = v27;
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v80 - v29;
  sub_1BA4B07F0(0, a5, a3, v17);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v80 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v80 - v35;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v80 - v38;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v40 = sub_1BB874398(), result = 0, (v40 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v42 = sub_1BB874398(), result = 0, (v42 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v43 = sub_1BB874398(), result = 0, (v43 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v44 = sub_1BB874398(), result = 0, (v44 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v82 = v33;
          v45 = v25;
          v46 = ((uint64_t (*)(_QWORD))v94)(0);
          sub_1BA5E01A4(a1 + *(int *)(v46 + 52), (uint64_t)v39, a5, a3);
          v94 = v46;
          v47 = *(int *)(v46 + 52);
          v48 = v45;
          sub_1BA5E01A4(a2 + v47, (uint64_t)v36, a5, a3);
          v49 = (uint64_t)&v30[*(int *)(v28 + 48)];
          sub_1BA5E01A4((uint64_t)v39, (uint64_t)v30, a5, a3);
          sub_1BA5E01A4((uint64_t)v36, v49, a5, a3);
          v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
          if (v50((uint64_t)v30, 1, v48) == 1)
          {
            sub_1BA5C699C((uint64_t)v36, a5, a3);
            sub_1BA5C699C((uint64_t)v39, a5, a3);
            if (v50(v49, 1, v48) == 1)
            {
              sub_1BA5C699C((uint64_t)v30, a5, a3);
LABEL_22:
              v59 = v94;
              if (*(unsigned __int8 *)(a1 + *(int *)(v94 + 56)) != *(unsigned __int8 *)(a2 + *(int *)(v94 + 56)))
                return 0;
              v60 = *(int *)(v94 + 60);
              v61 = *(_QWORD *)(a1 + v60);
              v62 = *(_QWORD *)(a2 + v60);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v63 = sub_1BA857AC0(v61, v62);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v63 & 1) == 0)
                return 0;
              v64 = a1 + *(int *)(v59 + 64);
              v65 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
              v66 = v87;
              sub_1BA5E01A4(v64, v87, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              v67 = v86;
              sub_1BA5E01A4(a2 + *(int *)(v59 + 64), v86, (unint64_t *)&qword_1ED3C47E8, v65);
              v68 = v89;
              v69 = v89 + *(int *)(v85 + 48);
              sub_1BA5E01A4(v66, v89, (unint64_t *)&qword_1ED3C47E8, v65);
              sub_1BA5E01A4(v67, v69, (unint64_t *)&qword_1ED3C47E8, v65);
              v70 = v88;
              v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
              v72 = v90;
              if (v71(v68, 1, v90) == 1)
              {
                v73 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA5C699C(v67, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA5C699C(v66, (unint64_t *)&qword_1ED3C47E8, v73);
                if (v71(v69, 1, v72) == 1)
                {
                  sub_1BA5C699C(v68, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  return 1;
                }
              }
              else
              {
                v74 = v84;
                sub_1BA5E01A4(v68, v84, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                if (v71(v69, 1, v72) != 1)
                {
                  v76 = v83;
                  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v83, v69, v72);
                  v77 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                  v78 = sub_1BB872958();
                  v79 = *(void (**)(char *, uint64_t))(v70 + 8);
                  v79(v76, v72);
                  sub_1BA5C699C(v67, (unint64_t *)&qword_1ED3C47E8, v77);
                  sub_1BA5C699C(v66, (unint64_t *)&qword_1ED3C47E8, v77);
                  v79((char *)v74, v72);
                  sub_1BA5C699C(v68, (unint64_t *)&qword_1ED3C47E8, v77);
                  return (v78 & 1) != 0;
                }
                v75 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA5C699C(v67, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA5C699C(v66, (unint64_t *)&qword_1ED3C47E8, v75);
                (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v74, v72);
              }
              v52 = (unint64_t *)&qword_1ED3C47F0;
              v53 = (unint64_t *)&qword_1ED3C47E8;
              v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
              v51 = v68;
              goto LABEL_20;
            }
          }
          else
          {
            sub_1BA5E01A4((uint64_t)v30, (uint64_t)v82, a5, a3);
            v81 = v49;
            if (v50(v49, 1, v48) != 1)
            {
              v55 = v95;
              v56 = v91;
              v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 32))(v91, v81, v48);
              v92(v57);
              LODWORD(v93) = sub_1BB872958();
              v58 = *(void (**)(char *, uint64_t))(v55 + 8);
              v58(v56, v48);
              sub_1BA5C699C((uint64_t)v36, a5, a3);
              sub_1BA5C699C((uint64_t)v39, a5, a3);
              v58(v82, v48);
              sub_1BA5C699C((uint64_t)v30, a5, a3);
              if ((v93 & 1) == 0)
                return 0;
              goto LABEL_22;
            }
            sub_1BA5C699C((uint64_t)v36, a5, a3);
            sub_1BA5C699C((uint64_t)v39, a5, a3);
            (*(void (**)(char *, uint64_t))(v95 + 8))(v82, v48);
          }
          v51 = (uint64_t)v30;
          v52 = v93;
          v53 = a5;
          v54 = a3;
LABEL_20:
          sub_1BAEE7BF0(v51, v52, v53, v54);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1BB136E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  _BYTE *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t (*v42)(uint64_t);
  uint64_t (*v43)(uint64_t);
  char v44;
  void (*v45)(_BYTE *, uint64_t);
  _BYTE v46[12];
  int v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v49 = &v46[-v11];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v46[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v46[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v46[-v19];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v21 = sub_1BB874398(), result = 0, (v21 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v23 = sub_1BB874398(), result = 0, (v23 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v48 = v4;
          v26 = *(_QWORD *)(a1 + 72);
          v27 = *(_QWORD *)(a2 + 72);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            v51 = *(_QWORD *)(a1 + 72);
            if ((~v27 & 0xF000000000000007) != 0)
            {
              v50 = v27;
              swift_retain_n();
              static FormatAsyncImageContent.== infix(_:_:)((uint64_t)&v51);
              v29 = v28;
              swift_release();
              sub_1BA5E800C(v26);
              if ((v29 & 1) == 0)
                return 0;
              goto LABEL_21;
            }
            sub_1BA5E7FF4(v26);
          }
          else if ((~v27 & 0xF000000000000007) == 0)
          {
LABEL_21:
            if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
            {
              v30 = *(_QWORD *)(a1 + 88);
              v31 = *(_QWORD *)(a2 + 88);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v47 = sub_1BA857AC0(v30, v31);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v47 & 1) != 0)
              {
                sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                v33 = v32;
                v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA5E01A4(a1 + *(int *)(v32 + 64), (uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA5E01A4(a2 + *(int *)(v33 + 64), (uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v34);
                v35 = v49;
                v36 = (uint64_t)&v49[*(int *)(v10 + 48)];
                sub_1BA5E01A4((uint64_t)v20, (uint64_t)v49, (unint64_t *)&qword_1ED3C47E8, v34);
                v37 = v34;
                v38 = (uint64_t)v35;
                sub_1BA5E01A4((uint64_t)v17, v36, (unint64_t *)&qword_1ED3C47E8, v37);
                v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
                v40 = v48;
                if (v39((uint64_t)v35, 1, v48) == 1)
                {
                  v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v41);
                  if (v39(v36, 1, v40) == 1)
                  {
                    sub_1BA5C699C((uint64_t)v35, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                    return 1;
                  }
                }
                else
                {
                  sub_1BA5E01A4((uint64_t)v35, (uint64_t)v14, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  if (v39(v36, 1, v40) != 1)
                  {
                    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v36, v40);
                    v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                    sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                    v44 = sub_1BB872958();
                    v45 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
                    v45(v8, v40);
                    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v43);
                    sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v43);
                    v45(v14, v40);
                    sub_1BA5C699C(v38, (unint64_t *)&qword_1ED3C47E8, v43);
                    return (v44 & 1) != 0;
                  }
                  v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v42);
                  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v40);
                }
                sub_1BAEE7BF0((uint64_t)v35, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              }
            }
            return 0;
          }
          sub_1BA5E7FF4(v27);
          sub_1BA5E800C(v26);
          sub_1BA5E800C(v27);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1BB137370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  _BYTE *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t (*v42)(uint64_t);
  uint64_t (*v43)(uint64_t);
  char v44;
  void (*v45)(_BYTE *, uint64_t);
  _BYTE v46[12];
  int v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v49 = &v46[-v11];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v46[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v46[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v46[-v19];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v21 = sub_1BB874398(), result = 0, (v21 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v23 = sub_1BB874398(), result = 0, (v23 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v48 = v4;
          v26 = *(_QWORD *)(a1 + 72);
          v27 = *(_QWORD *)(a2 + 72);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            v51 = *(_QWORD *)(a1 + 72);
            if ((~v27 & 0xF000000000000007) != 0)
            {
              v50 = v27;
              swift_retain_n();
              static FormatVideoNodeContent.== infix(_:_:)((uint64_t)&v51);
              v29 = v28;
              swift_release();
              sub_1BA6E6CD8(v26);
              if ((v29 & 1) == 0)
                return 0;
              goto LABEL_21;
            }
            sub_1BA6E6C68(v26);
          }
          else if ((~v27 & 0xF000000000000007) == 0)
          {
LABEL_21:
            if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
            {
              v30 = *(_QWORD *)(a1 + 88);
              v31 = *(_QWORD *)(a2 + 88);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v47 = sub_1BA857AC0(v30, v31);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v47 & 1) != 0)
              {
                sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                v33 = v32;
                v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA5E01A4(a1 + *(int *)(v32 + 64), (uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA5E01A4(a2 + *(int *)(v33 + 64), (uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v34);
                v35 = v49;
                v36 = (uint64_t)&v49[*(int *)(v10 + 48)];
                sub_1BA5E01A4((uint64_t)v20, (uint64_t)v49, (unint64_t *)&qword_1ED3C47E8, v34);
                v37 = v34;
                v38 = (uint64_t)v35;
                sub_1BA5E01A4((uint64_t)v17, v36, (unint64_t *)&qword_1ED3C47E8, v37);
                v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
                v40 = v48;
                if (v39((uint64_t)v35, 1, v48) == 1)
                {
                  v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v41);
                  if (v39(v36, 1, v40) == 1)
                  {
                    sub_1BA5C699C((uint64_t)v35, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                    return 1;
                  }
                }
                else
                {
                  sub_1BA5E01A4((uint64_t)v35, (uint64_t)v14, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  if (v39(v36, 1, v40) != 1)
                  {
                    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v36, v40);
                    v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                    sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                    v44 = sub_1BB872958();
                    v45 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
                    v45(v8, v40);
                    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v43);
                    sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v43);
                    v45(v14, v40);
                    sub_1BA5C699C(v38, (unint64_t *)&qword_1ED3C47E8, v43);
                    return (v44 & 1) != 0;
                  }
                  v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v42);
                  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v40);
                }
                sub_1BAEE7BF0((uint64_t)v35, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              }
            }
            return 0;
          }
          sub_1BA6E6C68(v27);
          sub_1BA6E6CD8(v26);
          sub_1BA6E6CD8(v27);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1BB1378D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  _BYTE *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t (*v42)(uint64_t);
  uint64_t (*v43)(uint64_t);
  char v44;
  void (*v45)(_BYTE *, uint64_t);
  _BYTE v46[12];
  int v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v49 = &v46[-v11];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v46[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v46[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v46[-v19];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v21 = sub_1BB874398(), result = 0, (v21 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v23 = sub_1BB874398(), result = 0, (v23 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v48 = v4;
          v26 = *(_QWORD *)(a1 + 72);
          v27 = *(_QWORD *)(a2 + 72);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            v51 = *(_QWORD *)(a1 + 72);
            if ((~v27 & 0xF000000000000007) != 0)
            {
              v50 = v27;
              swift_retain_n();
              static FormatFont.== infix(_:_:)((uint64_t)&v51);
              v29 = v28;
              swift_release();
              sub_1BA6E6CD8(v26);
              if ((v29 & 1) == 0)
                return 0;
              goto LABEL_21;
            }
            sub_1BA6E6C68(v26);
          }
          else if ((~v27 & 0xF000000000000007) == 0)
          {
LABEL_21:
            if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
            {
              v30 = *(_QWORD *)(a1 + 88);
              v31 = *(_QWORD *)(a2 + 88);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v47 = sub_1BA857AC0(v30, v31);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v47 & 1) != 0)
              {
                sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                v33 = v32;
                v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA5E01A4(a1 + *(int *)(v32 + 64), (uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA5E01A4(a2 + *(int *)(v33 + 64), (uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v34);
                v35 = v49;
                v36 = (uint64_t)&v49[*(int *)(v10 + 48)];
                sub_1BA5E01A4((uint64_t)v20, (uint64_t)v49, (unint64_t *)&qword_1ED3C47E8, v34);
                v37 = v34;
                v38 = (uint64_t)v35;
                sub_1BA5E01A4((uint64_t)v17, v36, (unint64_t *)&qword_1ED3C47E8, v37);
                v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
                v40 = v48;
                if (v39((uint64_t)v35, 1, v48) == 1)
                {
                  v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v41);
                  if (v39(v36, 1, v40) == 1)
                  {
                    sub_1BA5C699C((uint64_t)v35, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                    return 1;
                  }
                }
                else
                {
                  sub_1BA5E01A4((uint64_t)v35, (uint64_t)v14, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  if (v39(v36, 1, v40) != 1)
                  {
                    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v36, v40);
                    v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                    sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                    v44 = sub_1BB872958();
                    v45 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
                    v45(v8, v40);
                    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v43);
                    sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v43);
                    v45(v14, v40);
                    sub_1BA5C699C(v38, (unint64_t *)&qword_1ED3C47E8, v43);
                    return (v44 & 1) != 0;
                  }
                  v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v42);
                  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v40);
                }
                sub_1BAEE7BF0((uint64_t)v35, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              }
            }
            return 0;
          }
          sub_1BA6E6C68(v27);
          sub_1BA6E6CD8(v26);
          sub_1BA6E6CD8(v27);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1BB137E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  _BYTE *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t (*v41)(uint64_t);
  uint64_t (*v42)(uint64_t);
  char v43;
  void (*v44)(_BYTE *, uint64_t);
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v48 = &v45[-v11];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v45[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v45[-v19];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v21 = sub_1BB874398(), result = 0, (v21 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v23 = sub_1BB874398(), result = 0, (v23 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v47 = v4;
          v26 = *(_QWORD *)(a1 + 72);
          v27 = *(_QWORD *)(a2 + 72);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            v50 = *(_QWORD *)(a1 + 72);
            if ((~v27 & 0xF000000000000007) != 0)
            {
              v49 = v27;
              swift_retain_n();
              v28 = static FormatVideoPlayerContent.== infix(_:_:)(&v50, &v49);
              swift_release();
              sub_1BA62ECD4(v26);
              if ((v28 & 1) == 0)
                return 0;
              goto LABEL_21;
            }
            sub_1BA7333B4(v26);
          }
          else if ((~v27 & 0xF000000000000007) == 0)
          {
LABEL_21:
            if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
            {
              v29 = *(_QWORD *)(a1 + 88);
              v30 = *(_QWORD *)(a2 + 88);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v46 = sub_1BA857AC0(v29, v30);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v46 & 1) != 0)
              {
                sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                v32 = v31;
                v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA5E01A4(a1 + *(int *)(v31 + 64), (uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA5E01A4(a2 + *(int *)(v32 + 64), (uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v33);
                v34 = v48;
                v35 = (uint64_t)&v48[*(int *)(v10 + 48)];
                sub_1BA5E01A4((uint64_t)v20, (uint64_t)v48, (unint64_t *)&qword_1ED3C47E8, v33);
                v36 = v33;
                v37 = (uint64_t)v34;
                sub_1BA5E01A4((uint64_t)v17, v35, (unint64_t *)&qword_1ED3C47E8, v36);
                v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
                v39 = v47;
                if (v38((uint64_t)v34, 1, v47) == 1)
                {
                  v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v40);
                  if (v38(v35, 1, v39) == 1)
                  {
                    sub_1BA5C699C((uint64_t)v34, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                    return 1;
                  }
                }
                else
                {
                  sub_1BA5E01A4((uint64_t)v34, (uint64_t)v14, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  if (v38(v35, 1, v39) != 1)
                  {
                    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v35, v39);
                    v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                    sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                    v43 = sub_1BB872958();
                    v44 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
                    v44(v8, v39);
                    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v42);
                    sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v42);
                    v44(v14, v39);
                    sub_1BA5C699C(v37, (unint64_t *)&qword_1ED3C47E8, v42);
                    return (v43 & 1) != 0;
                  }
                  v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v41);
                  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v39);
                }
                sub_1BAEE7BF0((uint64_t)v34, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              }
            }
            return 0;
          }
          sub_1BA7333B4(v27);
          sub_1BA62ECD4(v26);
          sub_1BA62ECD4(v27);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL static FormatPrimitivePropertyDefinition.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  _BOOL8 result;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  void (*v42)(char *, uint64_t);
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t (*v62)(uint64_t);
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  char *v65;
  uint64_t (*v66)(uint64_t);
  char v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t TupleTypeMetadata2;

  v84 = a4;
  v7 = sub_1BB86E710();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v80 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v75 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v8);
  v77 = v10;
  MEMORY[0x1E0C80A78](v10);
  v81 = (uint64_t)&v69 - v11;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v76 = (uint64_t)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v78 = (uint64_t)&v69 - v15;
  MEMORY[0x1E0C80A78](v16);
  v79 = (uint64_t)&v69 - v17;
  v85 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v18);
  v82 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BB873A2C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v83 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v22 = (char *)&v69 - v21;
  v23 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v69 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v69 - v31;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v33 = sub_1BB874398(), result = 0, (v33 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v35 = sub_1BB874398(), result = 0, (v35 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v36 = sub_1BB874398(), result = 0, (v36 & 1) != 0))
      {
        if ((v37 = *(_QWORD *)(a2 + 56), *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)) && *(_QWORD *)(a1 + 56) == v37
          || (v38 = sub_1BB874398(), result = 0, (v38 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v74 = v26;
          v71 = v7;
          v39 = type metadata accessor for FormatPrimitivePropertyDefinition(0, a3, v84, v37);
          v40 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
          v40(v32, a1 + *(int *)(v39 + 52), v20);
          v72 = v39;
          v40(v29, a2 + *(int *)(v39 + 52), v20);
          v41 = &v22[*(int *)(TupleTypeMetadata2 + 48)];
          v40(v22, (uint64_t)v32, v20);
          v40(v41, (uint64_t)v29, v20);
          v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
          if (v73(v22, 1, a3) == 1)
          {
            v42 = *(void (**)(char *, uint64_t))(v23 + 8);
            v42(v29, v20);
            v42(v32, v20);
            if (v73(v41, 1, a3) == 1)
            {
              v42(v22, v20);
LABEL_21:
              v48 = v72;
              if (*(unsigned __int8 *)(a1 + *(int *)(v72 + 56)) == *(unsigned __int8 *)(a2 + *(int *)(v72 + 56)))
              {
                v49 = *(int *)(v72 + 60);
                v50 = *(_QWORD *)(a1 + v49);
                v51 = *(_QWORD *)(a2 + v49);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v52 = sub_1BA857AC0(v50, v51);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v52 & 1) != 0)
                {
                  v53 = a1 + *(int *)(v48 + 64);
                  v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  v55 = v79;
                  sub_1BA5E01A4(v53, v79, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  v56 = v78;
                  sub_1BA5E01A4(a2 + *(int *)(v48 + 64), v78, (unint64_t *)&qword_1ED3C47E8, v54);
                  v57 = v81;
                  v58 = v81 + *(int *)(v77 + 48);
                  sub_1BA5E01A4(v55, v81, (unint64_t *)&qword_1ED3C47E8, v54);
                  sub_1BA5E01A4(v56, v58, (unint64_t *)&qword_1ED3C47E8, v54);
                  v59 = v80;
                  v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
                  v61 = v71;
                  if (v60(v57, 1, v71) == 1)
                  {
                    v62 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                    sub_1BA5C699C(v56, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                    sub_1BA5C699C(v55, (unint64_t *)&qword_1ED3C47E8, v62);
                    if (v60(v58, 1, v61) == 1)
                    {
                      sub_1BA5C699C(v57, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                      return 1;
                    }
                  }
                  else
                  {
                    v63 = v76;
                    sub_1BA5E01A4(v57, v76, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                    if (v60(v58, 1, v61) != 1)
                    {
                      v65 = v75;
                      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v75, v58, v61);
                      v66 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                      sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                      v67 = sub_1BB872958();
                      v68 = *(void (**)(char *, uint64_t))(v59 + 8);
                      v68(v65, v61);
                      sub_1BA5C699C(v56, (unint64_t *)&qword_1ED3C47E8, v66);
                      sub_1BA5C699C(v55, (unint64_t *)&qword_1ED3C47E8, v66);
                      v68((char *)v63, v61);
                      sub_1BA5C699C(v57, (unint64_t *)&qword_1ED3C47E8, v66);
                      return (v67 & 1) != 0;
                    }
                    v64 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
                    sub_1BA5C699C(v56, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                    sub_1BA5C699C(v55, (unint64_t *)&qword_1ED3C47E8, v64);
                    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v63, v61);
                  }
                  sub_1BAEE7BF0(v57, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                }
              }
              return 0;
            }
          }
          else
          {
            v40(v74, (uint64_t)v22, v20);
            v70 = v41;
            if (v73(v41, 1, a3) != 1)
            {
              v44 = v85;
              v45 = v82;
              (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v82, v70, a3);
              LODWORD(TupleTypeMetadata2) = sub_1BB872958();
              v46 = *(void (**)(char *, uint64_t))(v44 + 8);
              v46(v45, a3);
              v47 = *(void (**)(char *, uint64_t))(v23 + 8);
              v47(v29, v20);
              v47(v32, v20);
              v46(v74, a3);
              v47(v22, v20);
              if ((TupleTypeMetadata2 & 1) == 0)
                return 0;
              goto LABEL_21;
            }
            v43 = *(void (**)(char *, uint64_t))(v23 + 8);
            v43(v29, v20);
            v43(v32, v20);
            (*(void (**)(char *, uint64_t))(v85 + 8))(v74, a3);
          }
          (*(void (**)(char *, uint64_t))(v83 + 8))(v22, TupleTypeMetadata2);
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t FormatPrimitivePropertyDefinition.type.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPrimitivePropertyDefinition.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPrimitivePropertyDefinition.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPrimitivePropertyDefinition.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPrimitivePropertyDefinition.required.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t FormatPrimitivePropertyDefinition.default.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 52);
  v5 = sub_1BB873A2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t FormatPrimitivePropertyDefinition.deprecated.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 56)) = result;
  return result;
}

uint64_t (*FormatPrimitivePropertyDefinition.deprecated.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB138C64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for FormatPrimitivePropertyDefinition(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  *a4 = sub_1BB13AFF8(v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB138C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for FormatPrimitivePropertyDefinition(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  v5 = swift_bridgeObjectRetain();
  return FormatPrimitivePropertyDefinition.compilerFlags.setter(v5, v4);
}

uint64_t FormatPrimitivePropertyDefinition.compilerFlags.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 60);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FormatPrimitivePropertyDefinition.compilerFlags.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPrimitivePropertyDefinition.editorProperties.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA5E01A4(v2 + *(int *)(a1 + 64), a2, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
}

void sub_1BB138D60(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  FormatPrimitivePropertyDefinition.init(from:)(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

void sub_1BB138D7C(uint64_t a1, uint64_t a2)
{
  FormatPrimitivePropertyDefinition.encode(to:)(a1, a2);
}

BOOL sub_1BB138D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FormatPrimitivePropertyDefinition.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t FormatEnumPropertyDefinition.type.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.enumName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.required.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t FormatEnumPropertyDefinition.default.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.cases.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatEnumPropertyDefinition.deprecated.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 112) = result;
  return result;
}

uint64_t (*FormatEnumPropertyDefinition.deprecated.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatEnumPropertyDefinition.compilerFlags.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 120) = a1;
  return result;
}

uint64_t (*FormatEnumPropertyDefinition.compilerFlags.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatEnumPropertyDefinition.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatEnumPropertyDefinition(0);
  return sub_1BA5E01A4(v1 + *(int *)(v3 + 56), a1, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
}

uint64_t sub_1BB138F48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatEnumPropertyDefinition.init(from:)(a1, a2);
}

uint64_t sub_1BB138F5C(_QWORD *a1)
{
  return FormatEnumPropertyDefinition.encode(to:)(a1);
}

uint64_t sub_1BB138F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - v12;
  *(_QWORD *)a5 = 1836412517;
  *(_QWORD *)(a5 + 8) = 0xE400000000000000;
  v14 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a5 + 16) = *(_QWORD *)a1;
  *(_QWORD *)(a5 + 24) = v14;
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a5 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a5 + 40) = v15;
  *(_QWORD *)(a5 + 48) = a2;
  *(_QWORD *)(a5 + 56) = a3;
  v16 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a5 + 64) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a5 + 72) = v16;
  *(_BYTE *)(a5 + 80) = *(_BYTE *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a5 + 88) = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a5 + 96) = v17;
  *(_QWORD *)(a5 + 104) = a4;
  *(_BYTE *)(a5 + 112) = *(_BYTE *)(a1 + 88);
  *(_QWORD *)(a5 + 120) = *(_QWORD *)(a1 + 96);
  v18 = type metadata accessor for FormatCompilerEnumProperty(0);
  sub_1BA5E01A4(a1 + *(int *)(v18 + 48), (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(a1, type metadata accessor for FormatCompilerEnumProperty);
  v19 = type metadata accessor for FormatEnumPropertyDefinition(0);
  return sub_1BA646EFC((uint64_t)v13, a5 + *(int *)(v19 + 56), (unint64_t *)&qword_1ED3C47E8, v10);
}

uint64_t sub_1BB1390DC(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  _QWORD v30[12];
  __int128 v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B78C0, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for FormatPropertyDefinition(0);
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x1E0C80A78](v7);
  v30[10] = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)v30 - v10;
  v11 = type metadata accessor for FormatInspectionItem(0);
  v42 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v35 = (char *)v30 - v15;
  MEMORY[0x1E0C80A78](v16);
  v30[9] = (char *)v30 - v17;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9750, v18, v2);
  v36 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v40 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v30 - v22;
  MEMORY[0x1E0C80A78](v24);
  v34 = (char *)v30 - v25;
  v43 = a1;
  sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB13F708();
  sub_1BA832824();
  v26 = sub_1BB872BD4();
  sub_1BB129930(v26);
  swift_bridgeObjectRelease();
  sub_1BAC87EC4();
  v27 = sub_1BB872E14();
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(v27 + 16);
  if (v28)
  {
    v33 = v5;
    v43 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AD80(0, v28, 0);
    v30[0] = v27;
    v30[2] = v27 + 32;
    v32 = v13 + 16;
    v31 = xmmword_1BB8D4900;
    v30[11] = v23;
    v30[3] = v28;
    v30[1] = v13;
    v39 = v11;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB139B00@<X0>(_BYTE *a1@<X8>)
{
  return FormatPropertyDefinition.type.getter(a1);
}

uint64_t sub_1BB139B20(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BB139B50 + 4 * byte_1BB8EE488[*a1]))();
}

void sub_1BB139B50(_QWORD *a1@<X8>)
{
  *a1 = 1702125924;
  a1[1] = 0xE400000000000000;
}

void sub_1BB139B64(_QWORD *a1@<X8>)
{
  *a1 = 1836412517;
  a1[1] = 0xE400000000000000;
}

void sub_1BB139B78(_QWORD *a1@<X8>)
{
  *a1 = 0x74616F6C66;
  a1[1] = 0xE500000000000000;
}

void sub_1BB139B90(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x72656765746E69;
  a1[1] = v1;
}

void sub_1BB139BA8(_QWORD *a1@<X8>)
{
  *a1 = 0x676E69727473;
  a1[1] = 0xE600000000000000;
}

void sub_1BB139BC0(_QWORD *a1@<X8>)
{
  *a1 = 7107189;
  a1[1] = 0xE300000000000000;
}

void sub_1BB139BD4(_QWORD *a1@<X8>)
{
  *a1 = 0x726F6C6F63;
  a1[1] = 0xE500000000000000;
}

void sub_1BB139BEC(_QWORD *a1@<X8>)
{
  *a1 = 0x6567616D69;
  a1[1] = 0xE500000000000000;
}

void sub_1BB139C04(_QWORD *a1@<X8>)
{
  *a1 = 0x6F65646976;
  a1[1] = 0xE500000000000000;
}

void sub_1BB139C1C(_QWORD *a1@<X8>)
{
  *a1 = 1953394534;
  a1[1] = 0xE400000000000000;
}

void sub_1BB139C30(_QWORD *a1@<X8>)
{
  *a1 = 0x616C506F65646976;
  a1[1] = 0xEB00000000726579;
}

void sub_1BB139C54(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  FormatPropertyDefinition.identifier.getter();
  *a1 = v2;
  a1[1] = v3;
}

BOOL _s8NewsFeed28FormatEnumPropertyDefinitionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char v22;
  _BOOL8 result;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  _BYTE *v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v40)(uint64_t);
  uint64_t (*v41)(uint64_t);
  uint64_t (*v42)(uint64_t);
  char v43;
  void (*v44)(_BYTE *, uint64_t);
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = &v45[-v11];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v45[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v45[-v17];
  MEMORY[0x1E0C80A78](v19);
  v21 = &v45[-v20];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
      {
        v26 = *(_QWORD *)(a1 + 56);
        v27 = *(_QWORD *)(a2 + 56);
        if (v26)
        {
          if (!v27)
            return 0;
          if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48) || v26 != v27)
          {
            v28 = sub_1BB874398();
            result = 0;
            if ((v28 & 1) == 0)
              return result;
          }
        }
        else if (v27)
        {
          return 0;
        }
        if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64) || *(_QWORD *)(a1 + 72) != *(_QWORD *)(a2 + 72))
        {
          v29 = sub_1BB874398();
          result = 0;
          if ((v29 & 1) == 0)
            return result;
        }
        if (*(unsigned __int8 *)(a1 + 80) != *(unsigned __int8 *)(a2 + 80))
          return 0;
        v30 = *(_QWORD *)(a1 + 96);
        v31 = *(_QWORD *)(a2 + 96);
        if (v30)
        {
          if (!v31)
            return 0;
          if (*(_QWORD *)(a1 + 88) != *(_QWORD *)(a2 + 88) || v30 != v31)
          {
            v32 = sub_1BB874398();
            result = 0;
            if ((v32 & 1) == 0)
              return result;
          }
        }
        else if (v31)
        {
          return 0;
        }
        if ((sub_1BA8822A4(*(_QWORD *)(a1 + 104), *(_QWORD *)(a2 + 104)) & 1) == 0)
          return 0;
        if (*(unsigned __int8 *)(a1 + 112) != *(unsigned __int8 *)(a2 + 112))
          return 0;
        v33 = *(_QWORD *)(a2 + 120);
        v47 = *(_QWORD *)(a1 + 120);
        v48 = v33;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46 = sub_1BA857AC0(v47, v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v46 & 1) == 0)
          return 0;
        v48 = type metadata accessor for FormatEnumPropertyDefinition(0);
        sub_1BA5E01A4(a1 + *(int *)(v48 + 56), (uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v34 = a2 + *(int *)(v48 + 56);
        v35 = MEMORY[0x1E0DB48B0];
        sub_1BA5E01A4(v34, (uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v36 = &v12[*(int *)(v10 + 48)];
        v37 = (uint64_t (*)(uint64_t))v35;
        v38 = (uint64_t)v36;
        sub_1BA5E01A4((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v37);
        sub_1BA5E01A4((uint64_t)v18, v38, (unint64_t *)&qword_1ED3C47E8, v37);
        v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
        if (v39((uint64_t)v12, 1, v4) == 1)
        {
          v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v40);
          if (v39(v38, 1, v4) == 1)
          {
            sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            return 1;
          }
        }
        else
        {
          sub_1BA5E01A4((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          if (v39(v38, 1, v4) != 1)
          {
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v38, v4);
            v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
            v43 = sub_1BB872958();
            v44 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
            v44(v8, v4);
            sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v42);
            sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v42);
            v44(v15, v4);
            sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v42);
            return (v43 & 1) != 0;
          }
          v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v41);
          (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
        }
        sub_1BAEE7BF0((uint64_t)v12, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        return 0;
      }
    }
  }
  return result;
}

void _s8NewsFeed24FormatPropertyDefinitionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  _QWORD v50[18];
  uint64_t v51;

  v51 = a1;
  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v3);
  v50[11] = (char *)v50 - v4;
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v5);
  v50[10] = (char *)v50 - v6;
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v7);
  v50[9] = (char *)v50 - v8;
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v9);
  v50[8] = (char *)v50 - v10;
  sub_1BA74E21C(0);
  MEMORY[0x1E0C80A78](v11);
  v50[7] = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v13);
  v50[6] = (char *)v50 - v14;
  sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v15);
  v50[5] = (char *)v50 - v16;
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v17);
  v50[4] = (char *)v50 - v18;
  v19 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v19);
  v50[3] = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA74E2EC(0);
  MEMORY[0x1E0C80A78](v21);
  v50[2] = (char *)v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v23);
  v50[1] = (char *)v50 - v24;
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v25);
  v50[0] = (char *)v50 - v26;
  v27 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v27);
  v50[17] = (char *)v50 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v50[16] = (char *)v50 - v30;
  MEMORY[0x1E0C80A78](v31);
  v50[15] = (char *)v50 - v32;
  MEMORY[0x1E0C80A78](v33);
  v50[14] = (char *)v50 - v34;
  MEMORY[0x1E0C80A78](v35);
  v50[13] = (char *)v50 - v36;
  MEMORY[0x1E0C80A78](v37);
  v50[12] = (char *)v50 - v38;
  MEMORY[0x1E0C80A78](v39);
  MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v42);
  MEMORY[0x1E0C80A78](v43);
  MEMORY[0x1E0C80A78](v44);
  sub_1BB13F768();
  MEMORY[0x1E0C80A78](v45);
  v48 = (char *)v50 + *(int *)(v47 + 48) - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA74B050(v51, (uint64_t)v50 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA74B050(a2, (uint64_t)v48);
  v49 = (char *)sub_1BB13A774 + 4 * word_1BB8EE494[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_1BB13A774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BA74B050(v1, v0);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BB12A2E0(v0, (uint64_t)&qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
    v4 = 0;
    v5 = (uint64_t (*)(_QWORD))sub_1BB13F768;
  }
  else
  {
    v6 = MEMORY[0x1E0DEAFA0];
    v7 = v2;
    v8 = *(_QWORD *)(v3 - 240);
    sub_1BB12A284(v7, v8, (uint64_t)&qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
    v4 = sub_1BB134CCC(v0, v8);
    sub_1BB12A2E0(v8, (uint64_t)&qword_1ED3CE138, v6, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
    sub_1BB12A2E0(v0, (uint64_t)&qword_1ED3CE138, v6, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
    v5 = type metadata accessor for FormatPropertyDefinition;
  }
  sub_1BA4A2E80(v1, v5);
  return v4;
}

uint64_t sub_1BB13AFF8(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 60));
}

uint64_t sub_1BB13B004()
{
  return sub_1BB134C0C();
}

uint64_t sub_1BB13B00C()
{
  return sub_1BB134B50();
}

uint64_t sub_1BB13B014()
{
  return sub_1BB134A94();
}

uint64_t sub_1BB13B01C()
{
  return sub_1BB1349D8();
}

uint64_t sub_1BB13B024()
{
  uint64_t v0;

  return sub_1BB1346FC(*(_QWORD *)(v0 + 16), 32, 0xD00000000000001DLL, 0x80000001BB97AD90, sub_1BA74E21C);
}

uint64_t sub_1BB13B060()
{
  return sub_1BB13491C();
}

uint64_t sub_1BB13B068()
{
  return sub_1BB134860();
}

uint64_t sub_1BB13B070()
{
  return sub_1BB1347A4();
}

uint64_t sub_1BB13B078()
{
  uint64_t v0;

  return sub_1BB1346FC(*(_QWORD *)(v0 + 16), 33, 0xD00000000000001ELL, 0x80000001BB97ACF0, (void (*)(_QWORD))type metadata accessor for FormatEnumPropertyDefinition);
}

uint64_t sub_1BB13B0B4()
{
  uint64_t v0;

  return sub_1BB1346FC(*(_QWORD *)(v0 + 16), 33, 0xD00000000000001ELL, 0x80000001BB97ACD0, sub_1BA74E2EC);
}

uint64_t sub_1BB13B0F0()
{
  return sub_1BB134640();
}

uint64_t sub_1BB13B0F8()
{
  return sub_1BB134584();
}

uint64_t sub_1BB13B100(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3B7880, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
  a1[2] = sub_1BA4A2870(&qword_1ED3BB1A0, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
  result = sub_1BA4A2870(&qword_1EF2BBD40, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB13B178(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPrimitivePropertyDefinition<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB13B1A4(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPrimitivePropertyDefinition<A>);
  a1[2] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPrimitivePropertyDefinition<A>, a2);
  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPrimitivePropertyDefinition<A>, a2);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB13B1FC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2BBD48, type metadata accessor for FormatEnumPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatEnumPropertyDefinition);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB13B238(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1EF2BBD50, type metadata accessor for FormatEnumPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatEnumPropertyDefinition);
  a1[2] = sub_1BA4A2870(&qword_1EF2BBD58, type metadata accessor for FormatEnumPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatEnumPropertyDefinition);
  result = sub_1BA4A2870(&qword_1EF2BBD60, type metadata accessor for FormatEnumPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatEnumPropertyDefinition);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB13B2B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = type metadata accessor for FormatPrimitivePropertyDefinition(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  result = FormatPrimitivePropertyDefinition.deprecated.getter(v5);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1BB13B2EC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = type metadata accessor for FormatPrimitivePropertyDefinition(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  return FormatPrimitivePropertyDefinition.deprecated.setter(v4, v5);
}

uint64_t sub_1BB13B328()
{
  return 16;
}

__n128 sub_1BB13B334(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BB13B348()
{
  return 16;
}

__n128 sub_1BB13B354(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BB13B360@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 112);
  return result;
}

_BYTE *sub_1BB13B36C(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 112) = *result;
  return result;
}

uint64_t sub_1BB13B378@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB13B384(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 120) = v3;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatPropertyDefinition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BB13B424 + 4 * word_1BB8EE4AC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t assignWithCopy for FormatPropertyDefinition(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, type metadata accessor for FormatPropertyDefinition);
    v2 = (char *)&loc_1BB13C564 + 4 * word_1BB8EE4E8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for FormatPropertyDefinition()
{
  char *v0;

  v0 = (char *)sub_1BB13D238 + 4 * byte_1BB8EE500[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB13D238()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v2;
  v3 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 48) = v3;
  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v1 + 64);
  *(_WORD *)(v0 + 65) = *(_WORD *)(v1 + 65);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + 72);
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v5 = *(int *)(v4 + 64);
  v6 = (void *)(v0 + v5);
  v7 = (const void *)(v1 + v5);
  v8 = sub_1BB86E710();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for FormatPropertyDefinition(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, type metadata accessor for FormatPropertyDefinition);
    v2 = (char *)&loc_1BB13D7C4 + 4 * byte_1BB8EE50C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t *sub_1BB13DCE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  const void *v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  unint64_t v27;
  unint64_t v28;
  void *v29;
  const void *v30;
  unsigned int (*v31)(const void *, uint64_t, uint64_t);
  size_t __n;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  if ((v11 | (unint64_t)v7) > 7
    || ((*(_DWORD *)(v10 + 80) | v7) & 0x100000) != 0
    || ((v11
       + ((((v7 + 65) & ~(unint64_t)v7) + v8) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v11)
     + v12 > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    v16 = v15 + (((v11 | v7) & 0xF8 ^ 0x1F8) & ((v11 | v7) + 16));
    swift_retain();
  }
  else
  {
    v35 = v9;
    v36 = a1;
    __n = v12;
    v34 = ~v11;
    v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    v18 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v19 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v18 = *v19;
    v18[1] = v19[1];
    v20 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v20[1] = v21[1];
    v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
    v23 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
    v24 = (void *)((v22 + v7 + 17) & ~(unint64_t)v7);
    v25 = (const void *)((v23 + v7 + 17) & ~(unint64_t)v7);
    v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v25, 1, v5))
    {
      memcpy(v24, v25, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v24, v25, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v24, 0, 1, v5);
    }
    *((_BYTE *)v24 + v8) = *((_BYTE *)v25 + v8);
    v27 = ((unint64_t)v24 + v8) & 0xFFFFFFFFFFFFFFF8;
    v28 = ((unint64_t)v25 + v8) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
    v29 = (void *)((v27 + v11 + 16) & v34);
    v30 = (const void *)((v28 + v11 + 16) & v34);
    v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v31(v30, 1, v35))
    {
      memcpy(v29, v30, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v29, v30, v35);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v35);
    }
    return v36;
  }
  return (uint64_t *)v16;
}

_QWORD *sub_1BB13DF80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  size_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  size_t v31;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  v7 = (_QWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (char *)((v13 + 17 + v9) & ~v13);
  v15 = (char *)((v13 + 17 + v10) & ~v13);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v15, 1, v11))
  {
    v17 = *(_DWORD *)(v12 + 84);
    v18 = *(_QWORD *)(v12 + 64);
    if (v17)
      v19 = *(_QWORD *)(v12 + 64);
    else
      v19 = v18 + 1;
    memcpy(v14, v15, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v15, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
    v17 = *(_DWORD *)(v12 + 84);
    v18 = *(_QWORD *)(v12 + 64);
  }
  if (v17)
    v20 = v18;
  else
    v20 = v18 + 1;
  v21 = (unint64_t)&v14[v20];
  v22 = (unint64_t)&v15[v20];
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v23 = v21 & 0xFFFFFFFFFFFFFFF8;
  v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
  v25 = sub_1BB86E710();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = (void *)((v27 + 16 + v23) & ~v27);
  v29 = (const void *)((v27 + 16 + v24) & ~v27);
  v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  if (v30(v29, 1, v25))
  {
    if (*(_DWORD *)(v26 + 84))
      v31 = *(_QWORD *)(v26 + 64);
    else
      v31 = *(_QWORD *)(v26 + 64) + 1;
    memcpy(v28, v29, v31);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v28, v29, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v25);
  }
  return a1;
}

_QWORD *sub_1BB13E194(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  size_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t (*v30)(void *, uint64_t, uint64_t);
  int v31;
  size_t v32;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (char *)((v14 + 17 + v10) & ~v14);
  v16 = (char *)((v14 + 17 + v11) & ~v14);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v11) = v17(v15, 1, v12);
  v18 = v17(v16, 1, v12);
  if ((_DWORD)v11)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v16, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v15, v16, v12);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  if (*(_DWORD *)(v13 + 84))
    v19 = *(_QWORD *)(v13 + 64);
  else
    v19 = *(_QWORD *)(v13 + 64) + 1;
  memcpy(v15, v16, v19);
LABEL_10:
  if (*(_DWORD *)(v13 + 84))
    v20 = *(_QWORD *)(v13 + 64);
  else
    v20 = *(_QWORD *)(v13 + 64) + 1;
  v21 = (unint64_t)&v15[v20];
  v22 = (unint64_t)&v16[v20];
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v23 = v21 & 0xFFFFFFFFFFFFFFF8;
  v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = sub_1BB86E710();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = (void *)((v27 + 16 + v23) & ~v27);
  v29 = (void *)((v27 + 16 + v24) & ~v27);
  v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v24) = v30(v28, 1, v25);
  v31 = v30(v29, 1, v25);
  if ((_DWORD)v24)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v28, v29, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v25);
      return a1;
    }
  }
  else
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v28, v29, v25);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v28, v25);
  }
  if (*(_DWORD *)(v26 + 84))
    v32 = *(_QWORD *)(v26 + 64);
  else
    v32 = *(_QWORD *)(v26 + 64) + 1;
  memcpy(v28, v29, v32);
  return a1;
}

_OWORD *sub_1BB13E464(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  _OWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  size_t v16;
  size_t v17;
  size_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  size_t v28;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_OWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (char *)((v12 + 17 + v8) & ~v12);
  v14 = (char *)((v12 + 17 + v9) & ~v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10))
  {
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
    if (v15)
      v17 = v16;
    else
      v17 = v16 + 1;
    memcpy(v13, v14, v17);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v14, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  v19 = (unint64_t)&v13[v18];
  v20 = (unint64_t)&v14[v18];
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v21 = v19 & 0xFFFFFFFFFFFFFFF8;
  v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8);
  v23 = sub_1BB86E710();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (void *)((v25 + 16 + v21) & ~v25);
  v27 = (const void *)((v25 + 16 + v22) & ~v25);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v27, 1, v23))
  {
    if (*(_DWORD *)(v24 + 84))
      v28 = *(_QWORD *)(v24 + 64);
    else
      v28 = *(_QWORD *)(v24 + 64) + 1;
    memcpy(v26, v27, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v26, v27, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
  }
  return a1;
}

_QWORD *sub_1BB13E61C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  size_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  int v33;
  size_t v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (char *)((v15 + 17 + v11) & ~v15);
  v17 = (char *)((v15 + 17 + v12) & ~v15);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v11) = v18(v16, 1, v13);
  v19 = v18(v17, 1, v13);
  if ((_DWORD)v11)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v17, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v16, v17, v13);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v20 = *(_QWORD *)(v14 + 64);
  else
    v20 = *(_QWORD *)(v14 + 64) + 1;
  memcpy(v16, v17, v20);
LABEL_10:
  if (*(_DWORD *)(v14 + 84))
    v21 = *(_QWORD *)(v14 + 64);
  else
    v21 = *(_QWORD *)(v14 + 64) + 1;
  v22 = (unint64_t)&v16[v21];
  v23 = (unint64_t)&v17[v21];
  *(_BYTE *)v22 = *(_BYTE *)v23;
  v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  v25 = v23 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  v26 = sub_1BB86E710();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = (void *)((v28 + 16 + v24) & ~v28);
  v30 = (void *)((v28 + 16 + v25) & ~v28);
  v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v32 = v31(v29, 1, v26);
  v33 = v31(v30, 1, v26);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v29, v30, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
      return a1;
    }
  }
  else
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v29, v30, v26);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v29, v26);
  }
  if (*(_DWORD *)(v27 + 84))
    v34 = *(_QWORD *)(v27 + 64);
  else
    v34 = *(_QWORD *)(v27 + 64) + 1;
  memcpy(v29, v30, v34);
  return a1;
}

uint64_t sub_1BB13E8BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  unsigned int v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  v12 = v11 - 1;
  if (!(_DWORD)v11)
    v12 = 0;
  if (v8 <= v12)
    v13 = v12;
  else
    v13 = v8;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v15 = *(_QWORD *)(v6 + 64);
  if (!(_DWORD)v7)
    ++v15;
  if ((_DWORD)v11)
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = *(_QWORD *)(v10 + 64) + 1;
  if (!a2)
    return 0;
  v17 = v9;
  v18 = *(unsigned __int8 *)(v6 + 80);
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = v19 + 16;
  if (a2 <= v14)
    goto LABEL_36;
  v21 = v16 + ((v20 + ((((v18 + 65) & ~v18) + v15) & 0xFFFFFFFFFFFFFFF8)) & ~v19);
  v22 = 8 * v21;
  if (v21 <= 3)
  {
    v24 = ((a2 - v14 + ~(-1 << v22)) >> v22) + 1;
    if (HIWORD(v24))
    {
      v23 = *(_DWORD *)(a1 + v21);
      if (!v23)
        goto LABEL_36;
      goto LABEL_27;
    }
    if (v24 > 0xFF)
    {
      v23 = *(unsigned __int16 *)(a1 + v21);
      if (!*(_WORD *)(a1 + v21))
        goto LABEL_36;
      goto LABEL_27;
    }
    if (v24 < 2)
    {
LABEL_36:
      if ((v13 & 0x80000000) == 0)
      {
        v27 = *(_QWORD *)(a1 + 8);
        if (v27 >= 0xFFFFFFFF)
          LODWORD(v27) = -1;
        return (v27 + 1);
      }
      v28 = (((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
           + v18
           + 17) & ~v18;
      if (v8 == v14)
      {
        if (v7 >= 2)
        {
          v29 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v28, v7, v5);
          goto LABEL_46;
        }
      }
      else if (v11 >= 2)
      {
        v29 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v20 + ((v28 + v15) & 0xFFFFFFFFFFFFFFF8)) & ~v19, v11, v17);
LABEL_46:
        if (v29 >= 2)
          return v29 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v23 = *(unsigned __int8 *)(a1 + v21);
  if (!*(_BYTE *)(a1 + v21))
    goto LABEL_36;
LABEL_27:
  v25 = (v23 - 1) << v22;
  if (v21 > 3)
    v25 = 0;
  if ((_DWORD)v21)
  {
    if (v21 <= 3)
      v26 = v21;
    else
      v26 = 4;
    __asm { BR              X12 }
  }
  return v14 + v25 + 1;
}

void sub_1BB13EAEC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  unsigned int v19;
  unsigned int v20;
  int v21;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = 0u;
  v11 = *(_QWORD *)(sub_1BB86E710() - 8);
  v12 = *(_DWORD *)(v11 + 84);
  v13 = v12 - 1;
  if (!v12)
    v13 = 0;
  if (v9 <= v13)
    v14 = v13;
  else
    v14 = v9;
  if (v14 <= 0x7FFFFFFF)
    v15 = 0x7FFFFFFF;
  else
    v15 = v14;
  v16 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v16;
  v17 = *(_QWORD *)(v11 + 64);
  if (!v12)
    ++v17;
  v18 = v17
      + ((*(unsigned __int8 *)(v11 + 80)
        + 16
        + ((((*(unsigned __int8 *)(v7 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v16) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  if (a3 > v15)
  {
    if (v18 > 3)
    {
      v10 = 1u;
      if (v15 >= a2)
LABEL_32:
        __asm { BR              X0 }
LABEL_25:
      v20 = ~v15 + a2;
      if (v18 < 4)
      {
        if ((_DWORD)v18)
        {
          v21 = v20 & ~(-1 << (8 * v18));
          bzero(a1, v18);
          if ((_DWORD)v18 == 3)
          {
            *(_WORD *)a1 = v21;
            a1[2] = BYTE2(v21);
          }
          else if ((_DWORD)v18 == 2)
          {
            *(_WORD *)a1 = v21;
          }
          else
          {
            *a1 = v21;
          }
        }
      }
      else
      {
        bzero(a1, v18);
        *(_DWORD *)a1 = v20;
      }
      __asm { BR              X10 }
    }
    v19 = ((a3 - v15 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
    if (HIWORD(v19))
    {
      v10 = 4u;
      if (v15 >= a2)
        goto LABEL_32;
      goto LABEL_25;
    }
    if (v19 >= 0x100)
      v10 = 2;
    else
      v10 = v19 > 1;
  }
  if (v15 >= a2)
    goto LABEL_32;
  goto LABEL_25;
}

void sub_1BB13ED88()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_1BB13ED90()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatEnumPropertyDefinition(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  char *v18;
  void *__dst;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v9;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v10 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v10;
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    v11 = *(int *)(a3 + 56);
    v18 = (char *)a2 + v11;
    __dst = (void *)(a1 + v11);
    *(_QWORD *)(a1 + 120) = a2[15];
    v12 = sub_1BB86E710();
    v16 = *(_QWORD *)(v12 - 8);
    v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v18, 1, v12))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(__dst, v18, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v12);
    }
  }
  return v3;
}

uint64_t initializeWithCopy for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  const void *v16;
  void *__dst;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v10 = *(int *)(a3 + 56);
  v16 = (const void *)(a2 + v10);
  __dst = (void *)(a1 + v10);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v11 = sub_1BB86E710();
  v14 = *(_QWORD *)(v11 - 8);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v16, 1, v11))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dst, v16, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 56);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  const void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v6 = *(int *)(a3 + 56);
  v7 = (const void *)(a2 + v6);
  v8 = (void *)(a1 + v6);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v8, v7, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithTake for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 56);
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = sub_1BB86E710();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatEnumPropertyDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB13F5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 56), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FormatEnumPropertyDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB13F67C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 56), a2, a2, v7);
  }
  return result;
}

unint64_t sub_1BB13F708()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A2F58;
  if (!qword_1ED3A2F58)
  {
    sub_1BA4B07F0(255, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A2F58);
  }
  return result;
}

void sub_1BB13F768()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BBD68)
  {
    type metadata accessor for FormatPropertyDefinition(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2BBD68);
  }
}

uint64_t sub_1BB13F7C8()
{
  return sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
}

void sub_1BB13F7E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D90)
  {
    sub_1BAEE5240();
    sub_1BA4A2870(&qword_1ED3D13E0, (uint64_t (*)(uint64_t))sub_1BAEE5240, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D90);
  }
}

uint64_t sub_1BB13F860()
{
  return 32;
}

__n128 sub_1BB13F86C(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

void sub_1BB13F878()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D80)
  {
    sub_1BAEE554C();
    sub_1BA4A2870(&qword_1ED3D13C0, (uint64_t (*)(uint64_t))sub_1BAEE554C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D80);
  }
}

void sub_1BB13F8F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BBD70)
  {
    sub_1BAEE58AC();
    sub_1BA4A2870(&qword_1EF2B58B8, (uint64_t (*)(uint64_t))sub_1BAEE58AC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BBD70);
  }
}

void sub_1BB13F968()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC0A0)
  {
    sub_1BAEE5B78();
    sub_1BA4A2870(&qword_1ED3ABF48, (uint64_t (*)(uint64_t))sub_1BAEE5B78, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC0A0);
  }
}

void sub_1BB13F9E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC0A8)
  {
    sub_1BAEE5ED8();
    sub_1BA4A2870(&qword_1ED3ABF58, (uint64_t (*)(uint64_t))sub_1BAEE5ED8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC0A8);
  }
}

void sub_1BB13FA58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D88)
  {
    sub_1BAEE6238();
    sub_1BA4A2870(&qword_1ED3D13D0, (uint64_t (*)(uint64_t))sub_1BAEE6238, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D88);
  }
}

void sub_1BB13FAD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D70)
  {
    sub_1BAEE6530();
    sub_1BA4A2870(&qword_1ED3D13A0, (uint64_t (*)(uint64_t))sub_1BAEE6530, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D70);
  }
}

void sub_1BB13FB48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D78)
  {
    sub_1BAEE6784();
    sub_1BA4A2870(&qword_1ED3D13B0, (uint64_t (*)(uint64_t))sub_1BAEE6784, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D78);
  }
}

void sub_1BB13FBC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BBD78)
  {
    sub_1BAEE6AE4();
    sub_1BA4A2870(&qword_1EF2B5900, (uint64_t (*)(uint64_t))sub_1BAEE6AE4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BBD78);
  }
}

void sub_1BB13FC38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BBD80)
  {
    sub_1BAEE6E44();
    sub_1BA4A2870(&qword_1EF2B5948, (uint64_t (*)(uint64_t))sub_1BAEE6E44, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BBD80);
  }
}

void sub_1BB13FCB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BBD88)
  {
    sub_1BAEE71A4();
    sub_1BA4A2870(&qword_1EF2B5990, (uint64_t (*)(uint64_t))sub_1BAEE71A4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BBD88);
  }
}

uint64_t static BlueprintLayoutCollectionPipelineProcessorConfig.feed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_1BB8712B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3D2448 != -1)
    swift_once();
  if (byte_1ED3D2B41 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC128], v2);
    sub_1BB8712C0();
    v6 = sub_1BB8712CC();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
  else
  {
    v8 = sub_1BB8712CC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

ValueMetadata *type metadata accessor for DebugFormatUploadTargetResult()
{
  return &type metadata for DebugFormatUploadTargetResult;
}

uint64_t sub_1BB13FE50(uint64_t a1)
{
  return sub_1BB13FE64(a1);
}

uint64_t sub_1BB13FE64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = swift_bridgeObjectRetain() + 56;
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v16 = v1;
    v4 = *(_QWORD *)(v2 + 32);
    sub_1BA6D78DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v4 + 16);
    v6 = v3[2];
    v7 = v6 + v5;
    if (__OFADD__(v6, v5))
      break;
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v7 <= v3[3] >> 1)
    {
      if (*(_QWORD *)(v4 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v6 <= v7)
        v9 = v6 + v5;
      else
        v9 = v6;
      v3 = sub_1BB38C984(isUniquelyReferenced_nonNull_native, v9, 1, v3);
      if (*(_QWORD *)(v4 + 16))
      {
LABEL_14:
        v10 = v3[2];
        if ((v3[3] >> 1) - v10 < v5)
          goto LABEL_25;
        v11 = (unint64_t)&v3[8 * v10 + 4];
        if (v4 + 32 < v11 + (v5 << 6) && v11 < v4 + 32 + (v5 << 6))
          goto LABEL_27;
        swift_arrayInitWithCopy();
        if (v5)
        {
          v12 = v3[2];
          v13 = __OFADD__(v12, v5);
          v14 = v12 + v5;
          if (v13)
            goto LABEL_26;
          v3[2] = v14;
        }
        goto LABEL_4;
      }
    }
    if (v5)
      goto LABEL_24;
LABEL_4:
    v2 += 80;
    swift_bridgeObjectRelease();
    v1 = v16 - 1;
    if (v16 == 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB140088(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int isUniquelyReferenced_nonNull_native;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v3 = MEMORY[0x1E0DEE9D8];
  for (i = 64; ; i += 64)
  {
    v5 = *(_QWORD *)(a1 + i);
    v6 = *(_QWORD *)(v5 + 16);
    v7 = *(_QWORD *)(v3 + 16);
    v8 = v7 + v6;
    if (__OFADD__(v7, v6))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v8 <= *(_QWORD *)(v3 + 24) >> 1)
    {
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v7 <= v8)
        v10 = v7 + v6;
      else
        v10 = v7;
      v3 = sub_1BB38C970(isUniquelyReferenced_nonNull_native, v10, 1, v3);
      if (*(_QWORD *)(v5 + 16))
      {
LABEL_14:
        v11 = *(_QWORD *)(v3 + 16);
        v12 = (*(_QWORD *)(v3 + 24) >> 1) - v11;
        v13 = type metadata accessor for FormatContentSlotItemObject.Resolved();
        if (v12 < v6)
          goto LABEL_28;
        v14 = *(_QWORD *)(v13 - 8);
        v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        v16 = *(_QWORD *)(v14 + 72);
        v17 = v3 + v15 + v16 * v11;
        v18 = v5 + v15;
        v19 = v16 * v6;
        v20 = v17 + v19;
        v21 = v18 + v19;
        if (v18 < v20 && v17 < v21)
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v6)
        {
          v23 = *(_QWORD *)(v3 + 16);
          v24 = __OFADD__(v23, v6);
          v25 = v23 + v6;
          if (v24)
            goto LABEL_29;
          *(_QWORD *)(v3 + 16) = v25;
        }
        goto LABEL_4;
      }
    }
    if (v6)
      goto LABEL_27;
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB140250(uint64_t a1)
{
  return sub_1BB1406C4(a1, sub_1BB4A4338, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6C1FFC, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
}

uint64_t sub_1BB14027C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t isUniquelyReferenced_nonNull_native;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v25 = *(_QWORD *)(a1 + 16);
  if (!v25)
    return (uint64_t)v3;
  v24 = a1 + 32;
  swift_bridgeObjectRetain();
  v4 = 0;
  while (1)
  {
    v26 = v3;
    v5 = v24 + 80 * v4;
    v6 = *(_QWORD *)(v5 + 64);
    v7 = *(_QWORD *)(v5 + 56);
    sub_1BA6D78DC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v8 = sub_1BB4A4184(v6);
    v27 = v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BA6D74C4(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v10 = *(_QWORD *)(v7 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      v11 = v7 + 48;
      do
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_getAtKeyPath();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA604764(v28);
        v11 += 64;
        --v10;
      }
      while (v10);
      swift_release();
      swift_bridgeObjectRelease_n();
      v12 = v27;
      v3 = v26;
    }
    else
    {
      v12 = v27;
      swift_release();
      swift_bridgeObjectRelease();
      v3 = v26;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v9 + 16);
    v14 = v3[2];
    v15 = v14 + v13;
    if (__OFADD__(v14, v13))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v15 <= v3[3] >> 1)
    {
      if (*(_QWORD *)(v9 + 16))
        goto LABEL_19;
    }
    else
    {
      if (v14 <= v15)
        v17 = v14 + v13;
      else
        v17 = v14;
      v3 = sub_1BB38D1DC((_QWORD *)isUniquelyReferenced_nonNull_native, v17, 1, v3);
      if (*(_QWORD *)(v9 + 16))
      {
LABEL_19:
        v18 = v3[2];
        if ((v3[3] >> 1) - v18 < v13)
          goto LABEL_29;
        v19 = (unint64_t)&v3[2 * v18 + 4];
        if (v9 + 32 < v19 + 16 * v13 && v19 < v9 + 32 + 16 * v13)
          goto LABEL_31;
        swift_arrayInitWithCopy();
        if (v13)
        {
          v20 = v3[2];
          v21 = __OFADD__(v20, v13);
          v22 = v20 + v13;
          if (v21)
            goto LABEL_30;
          v3[2] = v22;
        }
        goto LABEL_4;
      }
    }
    if (v13)
      goto LABEL_28;
LABEL_4:
    ++v4;
    swift_bridgeObjectRelease();
    v2 = v12;
    if (v4 == v25)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB1406C4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t), uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = swift_bridgeObjectRetain() + 56;
    v8 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v34 = v5;
      v32 = v6;
      v9 = *(_QWORD *)(v7 + 40);
      v33 = *(_QWORD *)(v7 + 32);
      sub_1BA6D78DC();
      sub_1BA6D78DC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v10 = sub_1BB4A4184(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BA6D74C4(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = a2(v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7F4208();
      v12 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v8 + 16);
      v14 = v13 + v12;
      if (__OFADD__(v13, v12))
        break;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || v14 > *(_QWORD *)(v8 + 24) >> 1)
      {
        if (v13 <= v14)
          v16 = v13 + v12;
        else
          v16 = v13;
        v8 = a3(isUniquelyReferenced_nonNull_native, v16);
      }
      if (*(_QWORD *)(v11 + 16))
      {
        v17 = *(_QWORD *)(v8 + 16);
        v18 = (*(_QWORD *)(v8 + 24) >> 1) - v17;
        v19 = a4(0);
        if (v18 < v12)
          goto LABEL_24;
        v20 = *(_QWORD *)(v19 - 8);
        v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
        v22 = *(_QWORD *)(v20 + 72);
        v23 = v8 + v21 + v22 * v17;
        v24 = v22 * v12;
        if (v11 + v21 < v23 + v24 && v23 < v11 + v21 + v24)
          goto LABEL_26;
        swift_arrayInitWithCopy();
        if (v12)
        {
          v25 = *(_QWORD *)(v8 + 16);
          v26 = __OFADD__(v25, v12);
          v27 = v25 + v12;
          if (v26)
            goto LABEL_25;
          *(_QWORD *)(v8 + 16) = v27;
        }
      }
      else if (v12)
      {
        goto LABEL_23;
      }
      v7 += 80;
      swift_bridgeObjectRelease();
      --v6;
      v5 = v34;
      if (v32 == 1)
      {
        swift_bridgeObjectRelease();
        return v8;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1BB873F84();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t FormatContent.Resolved.slotItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for FormatContent.Resolved();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BB13FE64(v0);
  swift_bridgeObjectRelease();
  v2 = sub_1BB140088(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t FormatContent.Resolved.convertSection(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v26;
  char v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v8 = (int *)type metadata accessor for FormatContent.Resolved();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = swift_bridgeObjectRetain();
  v29 = sub_1BB14596C(v9, v6, v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = *v3;
  v31 = v3[1];
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v10);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v11);
  swift_bridgeObjectRelease();
  v12 = v8[5];
  v13 = (char *)v3 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v14, v13, v15);
  v16 = *(_QWORD *)((char *)v3 + v8[11]);
  v28 = *(void **)((char *)v3 + v8[12]);
  v17 = *(_QWORD *)((char *)v3 + v8[13]);
  sub_1BA4C2DD8((uint64_t)v3 + v8[14], (uint64_t)a2 + v8[14], (uint64_t (*)(_QWORD))sub_1BA6DB154);
  v18 = *(void **)((char *)v3 + v8[15]);
  v27 = *((_BYTE *)v3 + v8[16]);
  v19 = *(_QWORD *)((char *)v3 + v8[17]);
  v20 = *(_QWORD *)((char *)v3 + v8[6]);
  v21 = *(_QWORD *)((char *)v3 + v8[7]);
  v22 = *(_QWORD *)((char *)v3 + v8[9]);
  v26 = *(_QWORD *)((char *)v3 + v8[10]);
  sub_1BA4C2DD8((uint64_t)v3 + v8[18], (uint64_t)a2 + v8[18], (uint64_t (*)(_QWORD))sub_1BA6D940C);
  *a2 = v30;
  a2[1] = v31;
  *(_QWORD *)((char *)a2 + v8[6]) = v20;
  *(_QWORD *)((char *)a2 + v8[7]) = v21;
  *(_QWORD *)((char *)a2 + v8[8]) = v29;
  *(_QWORD *)((char *)a2 + v8[9]) = v22;
  *(_QWORD *)((char *)a2 + v8[11]) = v16;
  *(_QWORD *)((char *)a2 + v8[12]) = v28;
  *(_QWORD *)((char *)a2 + v8[13]) = v17;
  *(_QWORD *)((char *)a2 + v8[15]) = v18;
  *((_BYTE *)a2 + v8[16]) = v27;
  *(_QWORD *)((char *)a2 + v8[17]) = v19;
  *(_QWORD *)((char *)a2 + v8[10]) = v26;
  v23 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v24 = v28;
  return swift_unknownObjectRetain();
}

uint64_t sub_1BB140D4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v4 = a1 + 56;
    do
    {
      sub_1BA6D78DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v4 += 80;
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_1BB140E74(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  result = MEMORY[0x1E0DEE9D8];
  v20 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    v9 = (uint64_t *)(a3 + 40);
    do
    {
      v10 = v9[4];
      v11 = v9[5];
      v13 = *v9;
      v12 = v9[1];
      v16[0] = *(v9 - 1);
      v16[1] = v13;
      v16[2] = v12;
      v17 = *((_OWORD *)v9 + 1);
      v18 = v10;
      v19 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v15, v16);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = swift_bridgeObjectRelease();
      if (v15)
      {
        MEMORY[0x1BCCE36AC](v14);
        if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v9 += 7;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v20;
  }
  return result;
}

unint64_t sub_1BB141008(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  void (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_1BB1484DC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8C88C8(0);
  v26 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v25 = (uint64_t)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v24 = (uint64_t)&v21 - v13;
  v14 = *(_QWORD *)(a3 + 16);
  if (!v14)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v15 = 0;
  v16 = MEMORY[0x1E0DEE9D8];
  v22 = a1;
  v23 = a3;
  do
  {
    v27 = *(_BYTE *)(a3 + v15 + 32);
    a1(&v27);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v26) == 1)
    {
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BB1484DC);
    }
    else
    {
      v17 = v24;
      sub_1BA5193C4((uint64_t)v8, v24, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      sub_1BA5193C4(v17, v25, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1BB38CBE8(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      if (v19 >= v18 >> 1)
        v16 = sub_1BB38CBE8(v18 > 1, v19 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v19 + 1;
      sub_1BA5193C4(v25, v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v19, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      a1 = v22;
      a3 = v23;
    }
    ++v15;
  }
  while (v14 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BB141254(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9D8];
  if (a3 >> 62)
    goto LABEL_17;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1BB873F30())
  {
    for (i = 4; ; ++i)
    {
      v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCE4630](i - 4, a3) : *(id *)(a3 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v12)
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1BB1413EC(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  _QWORD *v19;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _QWORD v30[7];
  _QWORD *v31;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v5 = (uint64_t *)(a3 + 40);
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v8 = *v5;
    v9 = v5[1];
    v10 = v5[2];
    v11 = v5[3];
    v12 = v5[4];
    v30[0] = *(v5 - 1);
    v30[1] = v8;
    v30[2] = v9;
    v30[3] = v10;
    v30[4] = v11;
    v30[5] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = v31;
    a1(&v25, v30);
    if (v13)
    {
      v6 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    v31 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((_QWORD)v26)
    {
      v24 = v26;
      v14 = v25;
      v22 = v28;
      v23 = v27;
      v15 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1BB38C984(0, v6[2] + 1, 1, v6);
      v17 = v6[2];
      v16 = v6[3];
      v18 = v24;
      if (v17 >= v16 >> 1)
      {
        v19 = sub_1BB38C984((_QWORD *)(v16 > 1), v17 + 1, 1, v6);
        v18 = v24;
        v6 = v19;
      }
      v6[2] = v17 + 1;
      v7 = &v6[8 * v17];
      v7[4] = v14;
      *(_OWORD *)(v7 + 5) = v18;
      *(_OWORD *)(v7 + 7) = v23;
      *(_OWORD *)(v7 + 9) = v22;
      v7[11] = v15;
    }
    v5 += 6;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v6;
}

_QWORD *sub_1BB141600(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  _QWORD *v17;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  _QWORD v22[5];

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v22[4] = a3;
  v8 = (uint64_t *)(a3 + 48);
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v11 = *(v8 - 1);
    v12 = *v8;
    v22[0] = *(v8 - 2);
    v22[1] = v11;
    v22[2] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(&v20, v22);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((_QWORD)v21)
    {
      v19 = v21;
      v13 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_1BB38D2FC(0, v9[2] + 1, 1, v9);
      v15 = v9[2];
      v14 = v9[3];
      v16 = v19;
      if (v15 >= v14 >> 1)
      {
        v17 = sub_1BB38D2FC((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
        v16 = v19;
        v9 = v17;
      }
      v9[2] = v15 + 1;
      v10 = &v9[3 * v15];
      v10[4] = v13;
      *(_OWORD *)(v10 + 5) = v16;
    }
    v8 += 3;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v9;
}

_QWORD *sub_1BB141794(void (*a1)(__int128 *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[9];
  _QWORD *v34;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v7 = (uint64_t *)(a3 + 48);
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v26 = v4;
    v25 = v5;
    v34 = v8;
    v8 = (_QWORD *)*(v7 - 2);
    v9 = *(v7 - 1);
    v11 = *v7;
    v10 = v7[1];
    v12 = v7[2];
    v13 = v7[3];
    v15 = v7[4];
    v14 = v7[5];
    v33[0] = v8;
    v33[1] = v9;
    v33[2] = v11;
    v33[3] = v10;
    v33[4] = v12;
    v33[5] = v13;
    v33[6] = v15;
    v33[7] = v14;
    sub_1BA7CCBB4((uint64_t)v8, v9, v11, v10);
    sub_1BA7CCCA0(v12, v13, v15);
    swift_retain();
    a1(&v28, v33);
    v4 = v26;
    if (v26)
    {
      sub_1BA7CCC14((uint64_t)v8, v9, v11, v10);
      sub_1BA7CCC64(v12, v13, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v8;
    }
    sub_1BA7CCC14((uint64_t)v8, v9, v11, v10);
    sub_1BA7CCC64(v12, v13, v15);
    swift_release();
    v16 = v32;
    if (v32 == 1)
    {
      v8 = v34;
    }
    else
    {
      v27 = v28;
      v18 = v29;
      v17 = v30;
      v19 = v31;
      v8 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1BB38EAB4(0, v8[2] + 1, 1, v8);
      v21 = v8[2];
      v20 = v8[3];
      if (v21 >= v20 >> 1)
        v8 = sub_1BB38EAB4((_QWORD *)(v20 > 1), v21 + 1, 1, v8);
      v8[2] = v21 + 1;
      v22 = &v8[6 * v21];
      *((_OWORD *)v22 + 2) = v27;
      *((_BYTE *)v22 + 48) = v18 & 1;
      v22[7] = v17;
      *((_BYTE *)v22 + 64) = v19 & 1;
      v22[9] = v16;
    }
    v7 += 8;
    v5 = v25 - 1;
  }
  while (v25 != 1);
  swift_bridgeObjectRelease();
  return v8;
}

_QWORD *sub_1BB1419B4(void (*a1)(__int128 *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  _QWORD *v18;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  _QWORD *v24;
  __int128 v25;
  _QWORD v26[9];
  uint64_t v27;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v5 = (uint64_t *)(a3 + 48);
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v21 = v3;
    v24 = v6;
    v7 = *v5;
    v8 = v5[1];
    v9 = v5[2];
    v10 = v5[3];
    v11 = v5[4];
    v6 = (_QWORD *)v5[5];
    v12 = v5[6];
    v13 = *(v5 - 1);
    v26[0] = *(v5 - 2);
    v26[1] = v13;
    v26[2] = v7;
    v26[3] = v8;
    v26[4] = v9;
    v26[5] = v10;
    v26[6] = v11;
    v26[7] = v6;
    v26[8] = v12;
    swift_bridgeObjectRetain();
    v22 = v11;
    sub_1BAF480B4(v7, v8, v9, v10, v11, (unint64_t)v6);
    v14 = v27;
    a1(&v25, v26);
    if (v14)
    {
      swift_bridgeObjectRelease();
      sub_1BA8FD928(v7, v8, v9, v10, v22, (unint64_t)v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    v27 = 0;
    swift_bridgeObjectRelease();
    sub_1BA8FD928(v7, v8, v9, v10, v22, (unint64_t)v6);
    if ((_QWORD)v25)
    {
      v23 = v25;
      v6 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1BB38F208(0, v24[2] + 1, 1, v24);
      v16 = v6[2];
      v15 = v6[3];
      v17 = v23;
      if (v16 >= v15 >> 1)
      {
        v18 = sub_1BB38F208((_QWORD *)(v15 > 1), v16 + 1, 1, v6);
        v17 = v23;
        v6 = v18;
      }
      v6[2] = v16 + 1;
      *(_OWORD *)&v6[2 * v16 + 4] = v17;
    }
    else
    {
      v6 = v24;
    }
    v5 += 9;
    v3 = v21 - 1;
  }
  while (v21 != 1);
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1BB141BC4(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  void (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;

  sub_1BB1484DC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8C88C8(0);
  v24 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v23 = (uint64_t)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v21 - v13;
  v15 = *(_QWORD *)(a3 + 16);
  if (!v15)
    return MEMORY[0x1E0DEE9D8];
  v21[1] = a3;
  v16 = swift_bridgeObjectRetain();
  v17 = MEMORY[0x1E0DEE9D8];
  v22 = a1;
  do
  {
    while (1)
    {
      a1(v16);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v17;
      }
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v24) != 1)
        break;
      v16 = sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BB1484DC);
      if (!--v15)
        goto LABEL_14;
    }
    sub_1BA5193C4((uint64_t)v8, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
    sub_1BA5193C4((uint64_t)v14, v23, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_1BB38CBE8(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
    v19 = *(_QWORD *)(v17 + 16);
    v18 = *(_QWORD *)(v17 + 24);
    if (v19 >= v18 >> 1)
      v17 = sub_1BB38CBE8(v18 > 1, v19 + 1, 1, v17);
    *(_QWORD *)(v17 + 16) = v19 + 1;
    v16 = sub_1BA5193C4(v23, v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v19, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
    a1 = v22;
    --v15;
  }
  while (v15);
LABEL_14:
  swift_bridgeObjectRelease();
  return v17;
}

_QWORD *sub_1BB141E00(void (*a1)(_QWORD *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD v19[3];
  _QWORD v20[3];

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v7 = (uint64_t *)(a3 + 48);
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v10 = *(v7 - 1);
    v11 = *v7;
    v20[0] = *(v7 - 2);
    v20[1] = v10;
    v20[2] = v11;
    swift_bridgeObjectRetain();
    sub_1BA67035C(v10);
    a1(v19, v20);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_1BA5B18CC(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    sub_1BA5B18CC(v10);
    v12 = v19[0];
    if (v19[0])
    {
      v13 = v19[1];
      v14 = v19[2];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1BA670884(0, v8[2] + 1, 1, v8);
      v16 = v8[2];
      v15 = v8[3];
      if (v16 >= v15 >> 1)
        v8 = sub_1BA670884((_QWORD *)(v15 > 1), v16 + 1, 1, v8);
      v8[2] = v16 + 1;
      v9 = &v8[3 * v16];
      v9[4] = v12;
      v9[5] = v13;
      v9[6] = v14;
    }
    v7 += 3;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v8;
}

_QWORD *sub_1BB141F90(void (*a1)(_QWORD *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD v11[49];
  unsigned __int8 v12;
  _BYTE v13[408];
  uint64_t v14;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v6 = a3 + 32;
  v14 = a3;
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    a1(v11, v6);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
    if (v12 == 255)
    {
      sub_1BB148554((uint64_t)v11);
    }
    else
    {
      sub_1BB1485A8(v11, v13);
      sub_1BB1485A8(v13, v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_1BB391DD0(0, v7[2] + 1, 1, v7);
      v9 = v7[2];
      v8 = v7[3];
      if (v9 >= v8 >> 1)
        v7 = sub_1BB391DD0((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
      v7[2] = v9 + 1;
      sub_1BB1485A8(v11, &v7[50 * v9 + 4]);
    }
    v6 += 288;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BB1420F4(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[3];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  result = MEMORY[0x1E0DEE9D8];
  v26 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = a3;
    swift_bridgeObjectRetain();
    v7 = 0;
    v16 = v6;
    do
    {
      v8 = *(_QWORD *)(v6 + v7 + 88);
      v9 = *(_QWORD *)(v6 + v7 + 96);
      v10 = *(_BYTE *)(v6 + v7 + 104);
      v11 = *(_QWORD *)(v6 + v7 + 72);
      v12 = *(_QWORD *)(v6 + v7 + 80);
      v14 = *(_QWORD *)(v6 + v7 + 40);
      v13 = *(_QWORD *)(v6 + v7 + 48);
      v19[0] = *(_QWORD *)(v6 + v7 + 32);
      v19[1] = v14;
      v19[2] = v13;
      v20 = *(_OWORD *)(v6 + v7 + 56);
      v21 = v11;
      v22 = v12;
      v23 = v8;
      v24 = v9;
      v25 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v18, v19);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = swift_bridgeObjectRelease();
      if (v18)
      {
        MEMORY[0x1BCCE36AC](v15);
        if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v7 += 80;
      --v5;
      v3 = 0;
      v6 = v16;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v26;
  }
  return result;
}

_QWORD *sub_1BB1422D0(void (*a1)(_QWORD *__return_ptr, _QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v15)(_QWORD *__return_ptr, _QWORD);
  uint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(type metadata accessor for SportsDataVisualizationResponseItem() - 8);
  v8 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v9 = *(_QWORD *)(v7 + 72);
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v15 = a1;
  do
  {
    a1(&v16, v8);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    v11 = v16;
    if ((~v16 & 0xF000000000000007) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1BB38C57C(0, v10[2] + 1, 1, v10);
      v13 = v10[2];
      v12 = v10[3];
      if (v13 >= v12 >> 1)
        v10 = sub_1BB38C57C((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
      v10[2] = v13 + 1;
      v10[v13 + 4] = v11;
      a1 = v15;
    }
    v8 += v9;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BB142438(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[6];
  uint64_t v18;

  v4 = v3;
  result = MEMORY[0x1E0DEE9D8];
  v18 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    v9 = (uint64_t *)(a3 + 72);
    do
    {
      v10 = *(v9 - 1);
      v11 = *v9;
      v12 = *(v9 - 3);
      v13 = *(v9 - 2);
      v14 = *(v9 - 4);
      v17[0] = *(v9 - 5);
      v17[1] = v14;
      v17[2] = v12;
      v17[3] = v13;
      v17[4] = v10;
      v17[5] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v16, v17);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = swift_bridgeObjectRelease();
      if (v16)
      {
        MEMORY[0x1BCCE36AC](v15);
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v9 += 6;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

uint64_t sub_1BB1425B4(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1BA60A090(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
}

uint64_t sub_1BB1425D0(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[11];
  uint64_t v22;

  result = MEMORY[0x1E0DEE9D8];
  v22 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(a3 + 56);
    do
    {
      v7 = *(v6 - 2);
      v8 = *(v6 - 1);
      v9 = *v6;
      v11 = v6[1];
      v10 = v6[2];
      v13 = v6[3];
      v12 = v6[4];
      v14 = v6[5];
      v15 = v6[6];
      v21[0] = *(v6 - 3);
      v21[1] = v7;
      v21[2] = v8;
      v21[3] = v9;
      v21[4] = v11;
      v21[5] = v10;
      v18 = v4;
      v21[6] = v13;
      v21[7] = v12;
      v21[8] = v14;
      v21[9] = v15;
      sub_1BA6D78DC();
      a1(&v20, v21);
      v16 = sub_1BA7F4208();
      if (v19)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v20)
      {
        MEMORY[0x1BCCE36AC](v16);
        if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v6 += 10;
      --v4;
    }
    while (v18 != 1);
    swift_bridgeObjectRelease();
    return v22;
  }
  return result;
}

uint64_t FormatContent.Resolved.webEmbeds.getter()
{
  return sub_1BB144D44(sub_1BB4A4338, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6C1FFC, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
}

uint64_t FormatContent.Resolved.itemAuxiliaries.getter()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for FormatContent.Resolved();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BB14027C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t FormatContent.Resolved.init(identifier:publishDate:tag:issue:headline:webEmbed:subscription:subscriptionPaidAccess:affinityTagIDs:iAdKeywords:themes:subgroups:options:selectors:sponsoredAdBanner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, char *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int *v21;
  char *v22;
  uint64_t v23;
  char v25;

  v25 = *a10;
  *a9 = a1;
  a9[1] = a2;
  v21 = (int *)type metadata accessor for FormatContent.Resolved();
  v22 = (char *)a9 + v21[5];
  v23 = sub_1BB86C8B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a3, v23);
  *(_QWORD *)((char *)a9 + v21[6]) = a12;
  *(_QWORD *)((char *)a9 + v21[7]) = a13;
  *(_QWORD *)((char *)a9 + v21[8]) = a14;
  *(_QWORD *)((char *)a9 + v21[9]) = a15;
  *(_QWORD *)((char *)a9 + v21[11]) = a4;
  *(_QWORD *)((char *)a9 + v21[12]) = a5;
  *(_QWORD *)((char *)a9 + v21[13]) = a6;
  sub_1BA5193C4(a7, (uint64_t)a9 + v21[14], (uint64_t (*)(_QWORD))sub_1BA6DB154);
  *(_QWORD *)((char *)a9 + v21[15]) = a8;
  *((_BYTE *)a9 + v21[16]) = v25;
  *(_QWORD *)((char *)a9 + v21[17]) = a11;
  *(_QWORD *)((char *)a9 + v21[10]) = a16;
  return sub_1BA5193C4(a17, (uint64_t)a9 + v21[18], (uint64_t (*)(_QWORD))sub_1BA6D940C);
}

uint64_t FormatContent.Resolved.headlines.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;

  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v1);
  v72 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v73);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v68 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  result = MEMORY[0x1E0DEE9D8];
  v76 = MEMORY[0x1E0DEE9D8];
  v44 = *(_QWORD *)(v8 + 16);
  if (v44)
  {
    v71 = v4;
    v43 = v8 + 32;
    v42 = v8;
    swift_bridgeObjectRetain_n();
    v10 = 0;
    v11 = 0;
    v70 = v5;
    do
    {
      v57 = v11;
      v58 = v10;
      v12 = (uint64_t *)(v43 + 80 * v10);
      v13 = *v12;
      v14 = v12[1];
      v15 = v12[2];
      v54 = v12[3];
      v17 = v12[4];
      v16 = v12[5];
      v18 = v12[7];
      v56 = v12[6];
      v19 = v12[8];
      v20 = v12[9];
      v52 = v17 & 0x7FFFFFFFFFFFFFFFLL;
      v51 = v19;
      v55 = v14;
      v53 = v18;
      sub_1BA6D78DC();
      v50 = v13;
      sub_1BA6D78DC();
      v21 = v51;
      v22 = v53;
      sub_1BA6D78DC();
      v48 = v20;
      v49 = v15;
      v46 = v17;
      sub_1BA6D78DC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v23 = v57;
      v24 = sub_1BB4A4184(v21);
      v57 = v23;
      swift_bridgeObjectRelease();
      v75 = v22;
      swift_bridgeObjectRetain();
      sub_1BA6D74C4(v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = v75;
      v75 = MEMORY[0x1E0DEE9D8];
      v60 = *(_QWORD *)(v25 + 16);
      v47 = v16;
      if (v60)
      {
        v59 = v25 + 32;
        v45 = v25;
        swift_bridgeObjectRetain();
        v26 = 0;
        do
        {
          v27 = (_QWORD *)(v59 + (v26 << 6));
          v28 = v27[1];
          v29 = v27[2];
          v31 = v27[3];
          v30 = v27[4];
          v32 = v27[5];
          v33 = v27[6];
          v34 = v27[7];
          v74 = MEMORY[0x1E0DEE9D8];
          if (*(_QWORD *)(v30 + 16))
          {
            v66 = v28;
            v67 = v26;
            v69 = v34;
            v35 = v32;
            v36 = v29;
            v37 = v30 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
            v38 = v33;
            swift_bridgeObjectRetain_n();
            v64 = v36;
            swift_bridgeObjectRetain_n();
            v63 = v31;
            swift_bridgeObjectRetain_n();
            v65 = v30;
            swift_bridgeObjectRetain_n();
            v62 = v35;
            swift_bridgeObjectRetain_n();
            v61 = v38;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            sub_1BA4C2DD8(v37, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
            v39 = (char *)&loc_1BB142FE8 + 4 * byte_1BB8EE900[swift_getEnumCaseMultiPayload()];
            __asm { BR              X9 }
          }
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v40 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          ++v26;
          sub_1BA66293C(v40);
        }
        while (v26 != v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v69 = v75;
      }
      else
      {
        v41 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v69 = v41;
      }
      ++v58;
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA7F4208();
      v10 = v58;
      sub_1BA66293C(v69);
      v11 = v57;
    }
    while (v10 != v44);
    swift_bridgeObjectRelease_n();
    return v76;
  }
  return result;
}

uint64_t FormatContent.Resolved.compilerOptionIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v1);
  v65 = (char *)&v48 - v2;
  sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v3);
  v64 = (char *)&v48 - v4;
  sub_1BA68E3E0(0);
  MEMORY[0x1E0C80A78](v5);
  v63 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v7);
  v62 = (char *)&v48 - v8;
  sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v9);
  v61 = (char *)&v48 - v10;
  sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v11);
  v60 = (char *)&v48 - v12;
  v13 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1E0C80A78](v13);
  v59 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA68E458(0);
  MEMORY[0x1E0C80A78](v15);
  v58 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v17);
  v57 = (char *)&v48 - v18;
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v19);
  v56 = (char *)&v48 - v20;
  v75 = type metadata accessor for FormatCompilerProperty(0);
  v49 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  v24 = MEMORY[0x1E0DEE9D8];
  v79 = MEMORY[0x1E0DEE9D8];
  v51 = *(_QWORD *)(v23 + 16);
  if (v51)
  {
    v50 = v23 + 32;
    v48 = v23;
    swift_bridgeObjectRetain_n();
    v25 = 0;
    v55 = v22;
    do
    {
      v73 = v25;
      v26 = (uint64_t *)(v50 + 80 * v25);
      v27 = v26[1];
      v72 = *v26;
      v28 = v26[2];
      v29 = v26[3];
      v31 = v26[4];
      v30 = v26[5];
      v32 = v26[6];
      v33 = v26[7];
      v35 = v26[8];
      v34 = v26[9];
      v69 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
      sub_1BA6D78DC();
      v70 = v35;
      v67 = v28;
      v68 = v27;
      v66 = v29;
      v74 = v31;
      v36 = v33;
      sub_1BA6D78DC();
      v37 = *(_QWORD *)(v69 + 16);
      v54 = v30;
      v71 = v32;
      v53 = v34;
      if (v37)
      {
        sub_1BA6D78DC();
        v52 = v36;
        sub_1BA6D78DC();
        v77 = MEMORY[0x1E0DEE9D8];
        v38 = v69;
        swift_bridgeObjectRetain();
        sub_1BA7447E8(0, v37, 0);
        v39 = v38 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
        v76 = *(_QWORD *)(v49 + 72);
        sub_1BA4C2DD8(v39, (uint64_t)v22, type metadata accessor for FormatCompilerProperty);
        v40 = (char *)&loc_1BB143980 + 4 * byte_1BB8EE909[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      sub_1BA6D78DC();
      sub_1BA6D78DC();
      v41 = MEMORY[0x1E0DEE9D8];
      v78 = sub_1BB873060();
      v42 = *(_QWORD *)(v41 + 16);
      if (v42)
      {
        v43 = (uint64_t *)(v41 + 40);
        do
        {
          v44 = *(v43 - 1);
          v45 = *v43;
          swift_bridgeObjectRetain();
          sub_1BA6EE5AC(&v77, v44, v45);
          swift_bridgeObjectRelease();
          v43 += 2;
          --v42;
        }
        while (v42);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v73;
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA67FB48(v78);
      v25 = v73;
    }
    while (v73 != v51);
    swift_bridgeObjectRelease_n();
    v24 = v79;
  }
  v46 = sub_1BA6E43EC(v24);
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t FormatContent.Resolved.scrollingTrait.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;

  result = type metadata accessor for FormatContent.Resolved();
  v4 = *(_QWORD *)(v1 + *(int *)(result + 32));
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = (uint64_t *)(v4 + 64);
    while (1)
    {
      v8 = *v6;
      v6 += 10;
      v7 = v8;
      if ((v8 & 0x8000000000000000) == 0)
      {
        v9 = (unsigned __int8 *)(v7 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
        result = swift_beginAccess();
        v10 = *v9;
        if (v10 != 4)
          break;
      }
      if (!--v5)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    LOBYTE(v10) = 4;
  }
  *a1 = v10;
  return result;
}

uint64_t FormatContent.Resolved.createPlugins2<A>(block:)()
{
  uint64_t v0;

  type metadata accessor for FormatContent.Resolved();
  sub_1BA4AD288(0, &qword_1ED3CF790, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB145B60();
  swift_bridgeObjectRetain();
  v0 = sub_1BB872BF8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatContent.Resolved.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.Resolved.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatContent.Resolved() + 20);
  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FormatContent.Resolved.options.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.Resolved.selectors.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

void *FormatContent.Resolved.issue.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 48));
  v2 = v1;
  return v1;
}

uint64_t FormatContent.Resolved.headline.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_unknownObjectRetain();
}

uint64_t FormatContent.Resolved.webEmbed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatContent.Resolved();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 56), a1, (uint64_t (*)(_QWORD))sub_1BA6DB154);
}

void *FormatContent.Resolved.subscription.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 60));
  v2 = v1;
  return v1;
}

uint64_t FormatContent.Resolved.subscriptionPaidAccess.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FormatContent.Resolved();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t FormatContent.Resolved.affinityTagIDs.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.Resolved.sponsoredAdBanner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatContent.Resolved();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 72), a1, (uint64_t (*)(_QWORD))sub_1BA6D940C);
}

unint64_t FormatContent.Resolved.requiresPlugin.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = v2 - 1;
  v4 = (unint64_t *)(v1 + 64);
  do
  {
    v5 = v3;
    v6 = *v4;
    v4 += 10;
    result = v6 >> 63;
    if ((v6 & 0x8000000000000000) != 0)
      break;
    --v3;
  }
  while (v5);
  return result;
}

uint64_t FormatContent.Resolved.copy(identifier:publishDate:tag:issue:headline:webEmbed:subscription:subscriptionPaidAccess:affinityTagIDs:iAdKeywords:themes:subgroups:options:selectors:sponsoredAdBanner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, char *a9@<X8>, unsigned __int8 *a10, uint64_t a11, char *a12, char *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t (*v69)(_QWORD);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  char *v114;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;

  v18 = v17;
  v120 = a8;
  v126 = a6;
  v127 = a7;
  v125 = a5;
  v116 = a4;
  v130 = a2;
  v131 = a3;
  v137 = a1;
  sub_1BA6D940C(0);
  MEMORY[0x1E0C80A78](v20);
  v136 = (uint64_t)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v123 = (uint64_t)&v116 - v23;
  sub_1BA6DB154(0);
  MEMORY[0x1E0C80A78](v24);
  v128 = (char *)&v116 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v139 = (uint64_t)&v116 - v27;
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v116 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1BB86C8B0();
  v140 = *(_QWORD *)(v31 - 8);
  v141 = v31;
  MEMORY[0x1E0C80A78](v31);
  v138 = (char *)&v116 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = (int *)type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v33);
  v135 = (uint64_t)&v116 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v134 = (char *)&v116 - v36;
  MEMORY[0x1E0C80A78](v37);
  v133 = (uint64_t)&v116 - v38;
  MEMORY[0x1E0C80A78](v39);
  v132 = (char *)&v116 - v40;
  MEMORY[0x1E0C80A78](v41);
  v121 = (char *)&v116 - v42;
  MEMORY[0x1E0C80A78](v43);
  v129 = (char *)&v116 - v44;
  MEMORY[0x1E0C80A78](v45);
  v119 = (char *)&v116 - v46;
  MEMORY[0x1E0C80A78](v47);
  v118 = (char *)&v116 - v48;
  MEMORY[0x1E0C80A78](v49);
  v117 = (uint64_t)&v116 - v50;
  MEMORY[0x1E0C80A78](v51);
  v124 = (uint64_t)&v116 - v52;
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)&v116 - v54;
  MEMORY[0x1E0C80A78](v56);
  v58 = (char *)&v116 - v57;
  MEMORY[0x1E0C80A78](v59);
  v61 = (char *)&v116 - v60;
  MEMORY[0x1E0C80A78](v62);
  v64 = (char *)&v116 - v63;
  MEMORY[0x1E0C80A78](v65);
  v67 = (uint64_t *)((char *)&v116 - v66);
  v68 = v130;
  v142 = *a10;
  sub_1BA4C2DD8(v18, (uint64_t)&v116 - v66, v69);
  if (v68)
  {
    v122 = v68;
  }
  else
  {
    v70 = v67[1];
    v137 = *v67;
    v122 = v70;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(v131, (uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  sub_1BA4C2DD8(v18, (uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v72 = v140;
  v71 = v141;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v30, 1, v141) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v138, &v64[v33[5]], v71);
    sub_1BA4A2E80((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v138, v30, v71);
  }
  v73 = v121;
  v74 = v116;
  sub_1BA4C2DD8(v18, (uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v75 = v74;
  if (!v74)
  {
    v75 = *(_QWORD *)&v61[v33[11]];
    swift_unknownObjectRetain();
  }
  swift_unknownObjectRetain();
  sub_1BA4A2E80((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(v18, (uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v76 = v125;
  v77 = v125;
  if (!v125)
  {
    v77 = *(void **)&v58[v33[12]];
    v78 = v77;
  }
  v130 = (uint64_t)v77;
  v79 = v76;
  sub_1BA4A2E80((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(v18, (uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v80 = v126;
  v81 = (uint64_t)v129;
  if (!v126)
    v80 = swift_unknownObjectRetain();
  v125 = (void *)v80;
  swift_unknownObjectRetain();
  sub_1BA4A2E80((uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v82 = (uint64_t)v128;
  sub_1BA4C2DD8(v127, (uint64_t)v128, (uint64_t (*)(_QWORD))sub_1BA6DB154);
  v83 = v124;
  sub_1BA4C2DD8(v18, v124, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v84 = type metadata accessor for FormatWebEmbed.Resolved();
  v85 = *(_QWORD *)(v84 - 8);
  v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v82, 1, v84);
  v131 = v75;
  if (v86 == 1)
  {
    sub_1BA4C2DD8(v83 + v33[14], v139, (uint64_t (*)(_QWORD))sub_1BA6DB154);
    sub_1BA4A2E80(v83, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    sub_1BA4A2E80(v82, (uint64_t (*)(_QWORD))sub_1BA6DB154);
  }
  else
  {
    sub_1BA4A2E80(v83, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    v87 = v139;
    sub_1BA5193C4(v82, v139, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v85 + 56))(v87, 0, 1, v84);
  }
  v88 = v120;
  v89 = (uint64_t)v118;
  v90 = v117;
  v91 = (uint64_t)v73;
  v92 = (uint64_t)v119;
  sub_1BA4C2DD8(v18, v117, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v93 = v88;
  if (!v88)
  {
    v93 = *(char **)(v90 + v33[15]);
    v94 = v93;
  }
  v128 = v93;
  v95 = v88;
  sub_1BA4A2E80(v90, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(v18, v89, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  if (v142 == 3)
    v142 = *(unsigned __int8 *)(v89 + v33[16]);
  sub_1BA4A2E80(v89, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(v18, v92, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  if (a11)
  {
    v127 = a11;
  }
  else
  {
    v127 = *(_QWORD *)(v92 + v33[17]);
    swift_bridgeObjectRetain();
  }
  v96 = (uint64_t)v132;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v92, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(v18, v81, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  if (a12)
  {
    v132 = a12;
  }
  else
  {
    v132 = *(char **)(v81 + v33[6]);
    swift_bridgeObjectRetain();
  }
  v97 = (uint64_t)v134;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v81, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(v18, v91, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  if (a13)
  {
    v134 = a13;
  }
  else
  {
    v134 = *(char **)(v91 + v33[7]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v91, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(v18, v96, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  if (a14)
  {
    v98 = a14;
  }
  else
  {
    v98 = *(_QWORD *)(v96 + v33[8]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v96, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v99 = v133;
  sub_1BA4C2DD8(v18, v133, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  if (a15)
  {
    v100 = a15;
  }
  else
  {
    v100 = *(_QWORD *)(v99 + v33[9]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(v18, v97, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  if (a16)
  {
    v101 = a16;
  }
  else
  {
    v101 = *(_QWORD *)(v97 + v33[10]);
    swift_bridgeObjectRetain();
  }
  v102 = v131;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v97, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v103 = v136;
  sub_1BA4C2DD8(a17, v136, (uint64_t (*)(_QWORD))sub_1BA6D940C);
  v104 = v135;
  sub_1BA4C2DD8(v18, v135, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v105 = sub_1BB871E24();
  v106 = *(_QWORD *)(v105 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v103, 1, v105) == 1)
  {
    v107 = v103;
    v108 = v123;
    sub_1BA4C2DD8(v104 + v33[18], v123, (uint64_t (*)(_QWORD))sub_1BA6D940C);
    sub_1BA4A2E80(v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    sub_1BA4A2E80(v107, (uint64_t (*)(_QWORD))sub_1BA6D940C);
  }
  else
  {
    sub_1BA4A2E80(v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    v109 = v103;
    v108 = v123;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v123, v109, v105);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v106 + 56))(v108, 0, 1, v105);
  }
  v110 = v138;
  v111 = v122;
  v112 = v125;
  v113 = v127;
  v114 = v132;
  *(_QWORD *)a9 = v137;
  *((_QWORD *)a9 + 1) = v111;
  (*(void (**)(char *, char *, uint64_t))(v140 + 32))(&a9[v33[5]], v110, v141);
  *(_QWORD *)&a9[v33[6]] = v114;
  *(_QWORD *)&a9[v33[7]] = v134;
  *(_QWORD *)&a9[v33[8]] = v98;
  *(_QWORD *)&a9[v33[9]] = v100;
  *(_QWORD *)&a9[v33[11]] = v102;
  *(_QWORD *)&a9[v33[12]] = v130;
  *(_QWORD *)&a9[v33[13]] = v112;
  sub_1BA5193C4(v139, (uint64_t)&a9[v33[14]], (uint64_t (*)(_QWORD))sub_1BA6DB154);
  *(_QWORD *)&a9[v33[15]] = v128;
  a9[v33[16]] = v142;
  *(_QWORD *)&a9[v33[17]] = v113;
  *(_QWORD *)&a9[v33[10]] = v101;
  return sub_1BA5193C4(v108, (uint64_t)&a9[v33[18]], (uint64_t (*)(_QWORD))sub_1BA6D940C);
}

uint64_t FormatContent.Resolved.slots.getter()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for FormatContent.Resolved();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BB13FE64(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t FormatContent.Resolved.customItems.getter()
{
  return sub_1BB144D44(sub_1BB4A47D0, (uint64_t (*)(uint64_t, uint64_t))sub_1BB392D88, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
}

uint64_t sub_1BB144D44(uint64_t (*a1)(uint64_t), uint64_t (*a2)(uint64_t, uint64_t), uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for FormatContent.Resolved();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BB1406C4(v6, a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t FormatContent.Resolved.feedItemIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  v2 = MEMORY[0x1E0DEE9D8];
  v35 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(v1 + 16);
  if (v27)
  {
    v26 = v1 + 32;
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    do
    {
      v6 = v26 + 80 * v3;
      v7 = *(_QWORD *)(v6 + 56);
      v8 = *(_QWORD *)(v6 + 64);
      sub_1BA6D78DC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v9 = sub_1BB4A4184(v8);
      swift_bridgeObjectRelease();
      v29 = v7;
      swift_bridgeObjectRetain();
      sub_1BA6D74C4(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v29;
      v11 = MEMORY[0x1E0DEE9D8];
      v34 = MEMORY[0x1E0DEE9D8];
      v12 = *(_QWORD *)(v29 + 16);
      if (v12)
      {
        v13 = v4;
        swift_bridgeObjectRetain();
        v14 = v10 + 56;
        do
        {
          v15 = *(_QWORD *)(v14 + 32);
          v29 = *(_QWORD *)(v14 - 24);
          v30 = *(_OWORD *)(v14 - 16);
          v16 = *(_OWORD *)v14;
          v17 = *(_OWORD *)(v14 + 16);
          v14 += 64;
          v31 = v16;
          v32 = v17;
          v33 = v15;
          v18 = FormatContentSlot.Resolved.feedItemIdentifiers.getter();
          sub_1BA67FB48(v18);
          --v12;
        }
        while (v12);
        swift_bridgeObjectRelease_n();
        v11 = v34;
      }
      else
      {
        v13 = v4;
        swift_bridgeObjectRelease();
      }
      v19 = *(_QWORD *)(v11 + 16);
      v20 = sub_1BB873060();
      v34 = v20;
      if (v19)
      {
        v28 = v13;
        v21 = (uint64_t *)(v11 + 40);
        do
        {
          v22 = *(v21 - 1);
          v23 = *v21;
          swift_bridgeObjectRetain();
          sub_1BA6EE5AC(&v29, v22, v23);
          swift_bridgeObjectRelease();
          v21 += 2;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5 = v34;
        v4 = v28;
      }
      else
      {
        v5 = v20;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v4 = v13;
      }
      ++v3;
      sub_1BA67FB48(v5);
    }
    while (v3 != v27);
    swift_bridgeObjectRelease();
    v2 = v35;
  }
  v24 = sub_1BA6E43EC(v2);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t FormatContent.Resolved.createPlugins(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  v11 = v2;
  v12 = a1;
  v13 = a2;
  swift_bridgeObjectRetain();
  v6 = sub_1BB1425D0((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB145BC0, (uint64_t)&v10, v5);
  swift_bridgeObjectRelease();
  sub_1BA865D48(0);
  v14 = v6;
  v7 = (void *)sub_1BB86E854();
  sub_1BA865D64(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3AAD90, (uint64_t (*)(uint64_t))sub_1BA865D64, MEMORY[0x1E0DEAF50]);
  v8 = sub_1BB86E920();
  swift_bridgeObjectRelease();

  return v8;
}

void sub_1BB145200(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD *)@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD *);
  uint64_t *v30;
  uint64_t v31[12];

  v9 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = 0;
  v13 = a1[4];
  if (v13 < 0)
  {
    v29 = a2;
    v30 = a4;
    v14 = a1[8];
    v15 = a1[9];
    v31[11] = v4;
    v16 = a1[6];
    v22 = a1[7];
    v23 = v16;
    v17 = a1[5];
    v18 = a1[2];
    v19 = a1[3];
    v26 = a3;
    v20 = a1[1];
    v27 = *a1;
    v28 = v18;
    v31[0] = v27;
    v31[1] = v20;
    v31[2] = v18;
    v31[3] = v19;
    v31[4] = v13 & 0x7FFFFFFFFFFFFFFFLL;
    v31[5] = v17;
    v24 = v14;
    v25 = v17;
    v31[6] = v16;
    v31[7] = v22;
    v31[8] = v14;
    v31[9] = v15;
    sub_1BA7FDABC(v31, v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = v29(v11);
    a4 = v30;
    sub_1BA7F4208();
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  }
  *a4 = v12;
}

uint64_t sub_1BB145390@<X0>(uint64_t *a1@<X0>, void (*a2)(char *, uint64_t, uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[11];

  v10 = type metadata accessor for FormatContent.Resolved();
  v12 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[4];
  if ((v14 & 0x8000000000000000) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(a4 - 8) + 56))(a5, 1, 1, a4, v12);
  v17 = a1[8];
  v16 = a1[9];
  v31 = a3;
  v25[1] = v17;
  v18 = a1[6];
  v19 = a1[7];
  v20 = a1[5];
  v27 = a5;
  v28 = a2;
  v21 = a1[3];
  v26 = a1[2];
  v22 = *a1;
  v23 = a1[1];
  v29 = a4;
  v30 = v22;
  v32[0] = v22;
  v32[1] = v23;
  v25[3] = v16;
  v25[4] = v23;
  v32[2] = v26;
  v32[3] = v21;
  v32[4] = v14 & 0x7FFFFFFFFFFFFFFFLL;
  v32[5] = v20;
  v25[2] = v20;
  v32[6] = v18;
  v32[7] = v19;
  v25[0] = v18;
  v32[8] = v17;
  v32[9] = v16;
  sub_1BA7FDABC(v32, (_QWORD *)((char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0)));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v27;
  v28(v13, v26, v21);
  sub_1BA7F4208();
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v24, 0, 1);
}

uint64_t sub_1BB145578(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB1455B0 + 4 * byte_1BB8EE913[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB1455B0()
{
  return 0x446873696C627570;
}

uint64_t sub_1BB1455D0()
{
  return 0x6F7779654B644169;
}

uint64_t sub_1BB1455F0()
{
  return 0x73656D656874;
}

uint64_t sub_1BB145604()
{
  return 0x70756F7267627573;
}

uint64_t sub_1BB14564C()
{
  return 6775156;
}

uint64_t sub_1BB14565C()
{
  return 0x6575737369;
}

uint64_t sub_1BB145670()
{
  return 0x7069726373627573;
}

uint64_t sub_1BB145690()
{
  return 0x7974696E69666661;
}

unint64_t sub_1BB1456B4()
{
  return 0xD000000000000016;
}

uint64_t sub_1BB1456D4()
{
  return 0x656E696C64616568;
}

uint64_t sub_1BB1456EC()
{
  return 0x6465626D45626577;
}

unint64_t sub_1BB145704()
{
  return 0xD000000000000011;
}

uint64_t sub_1BB145720(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB145578(*a1);
  v5 = v4;
  if (v3 == sub_1BB145578(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB1457A8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB145578(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB145808()
{
  unsigned __int8 *v0;

  sub_1BB145578(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB145848()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB145578(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB1458A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB148478();
  *a1 = result;
  return result;
}

uint64_t sub_1BB1458D0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB145578(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB1458F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB148478();
  *a1 = result;
  return result;
}

uint64_t sub_1BB14591C()
{
  sub_1BA6031FC();
  return sub_1BB874710();
}

uint64_t sub_1BB145944()
{
  sub_1BA6031FC();
  return sub_1BB87471C();
}

uint64_t sub_1BB14596C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79ED4(0, v4, 0);
    v5 = v23;
    v7 = (_QWORD *)(a1 + 56);
    do
    {
      v8 = v7[1];
      v10 = v7[4];
      v9 = v7[5];
      v22 = v7[6];
      v21 = *((_OWORD *)v7 - 1);
      v19 = *v7;
      v20 = *(v7 - 3);
      v17 = v7[3];
      v18 = v7[2];
      if (v8 < 0 || !*(_QWORD *)(v9 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10 = a4;
        swift_bridgeObjectRetain();
        v9 = MEMORY[0x1E0DEE9D8];
      }
      v11 = swift_bridgeObjectRetain();
      v13 = *(_QWORD *)(v23 + 16);
      v12 = *(_QWORD *)(v23 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BAC79ED4(v12 > 1, v13 + 1, 1);
        v11 = v22;
      }
      *(_QWORD *)(v23 + 16) = v13 + 1;
      v14 = v23 + 80 * v13;
      *(_QWORD *)(v14 + 32) = v20;
      *(_OWORD *)(v14 + 40) = v21;
      *(_QWORD *)(v14 + 56) = v19;
      *(_QWORD *)(v14 + 64) = v8;
      *(_QWORD *)(v14 + 72) = v18;
      *(_QWORD *)(v14 + 80) = v17;
      *(_QWORD *)(v14 + 88) = v10;
      *(_QWORD *)(v14 + 96) = v9;
      *(_QWORD *)(v14 + 104) = v11;
      v7 += 10;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_1BB145B44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB145390(a1, *(void (**)(char *, uint64_t, uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1BB145B60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CF798;
  if (!qword_1ED3CF798)
  {
    sub_1BA4AD288(255, &qword_1ED3CF790, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CF798);
  }
  return result;
}

void sub_1BB145BC0(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1BB145200(a1, *(uint64_t (**)(_QWORD *))(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

void sub_1BB145BDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39A5D0)
  {
    sub_1BA625DB0(255, &qword_1ED39A5C8, (uint64_t)&qword_1ED39C000, 0x1E0D58F18, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39A5D0);
  }
}

void sub_1BB145C50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39EE28)
  {
    sub_1BA625DB0(255, (unint64_t *)&unk_1ED39DF90, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39EE28);
  }
}

uint64_t sub_1BB145CC4()
{
  return sub_1BA4A2870(&qword_1ED39B880, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, (uint64_t)&protocol conformance descriptor for FormatPackageInventory);
}

unint64_t sub_1BB145CE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39A5F0;
  if (!qword_1ED39A5F0)
  {
    sub_1BA625DB0(255, (unint64_t *)&unk_1ED39A600, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB50A0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39A5F0);
  }
  return result;
}

unint64_t sub_1BB145D48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39EE20;
  if (!qword_1ED39EE20)
  {
    sub_1BA625DB0(255, (unint64_t *)&unk_1ED39DF90, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB50A0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39EE20);
  }
  return result;
}

unint64_t sub_1BB145DB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39A5C0;
  if (!qword_1ED39A5C0)
  {
    sub_1BA625DB0(255, &qword_1ED39A5C8, (uint64_t)&qword_1ED39C000, 0x1E0D58F18, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB50A0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39A5C0);
  }
  return result;
}

uint64_t sub_1BB145E18()
{
  return sub_1BA4A2870((unint64_t *)&unk_1ED39B870, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, (uint64_t)&protocol conformance descriptor for FormatPackageInventory);
}

uint64_t sub_1BB145E34(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1ED3CF790, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB145EB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39A5E0;
  if (!qword_1ED39A5E0)
  {
    sub_1BA625DB0(255, (unint64_t *)&unk_1ED39A600, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5098], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39A5E0);
  }
  return result;
}

unint64_t sub_1BB145F18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39EBD0;
  if (!qword_1ED39EBD0)
  {
    sub_1BA625DB0(255, (unint64_t *)&unk_1ED39DF90, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5098], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39EBD0);
  }
  return result;
}

uint64_t sub_1BB145F80()
{
  return sub_1BA4A2870(&qword_1ED39B270, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t)&protocol conformance descriptor for FormatWebEmbed.Resolved);
}

unint64_t sub_1BB145F9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39A5B0;
  if (!qword_1ED39A5B0)
  {
    sub_1BA625DB0(255, &qword_1ED39A5C8, (uint64_t)&qword_1ED39C000, 0x1E0D58F18, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5098], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39A5B0);
  }
  return result;
}

uint64_t dispatch thunk of FormatContentProviding.formatContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

_QWORD *_s8ResolvedVwCP_1(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  int *v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  int EnumCaseMultiPayload;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  id v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  _QWORD *v84;
  char *v85;
  unsigned int (*v86)(_QWORD *, uint64_t, uint64_t);
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  int *v90;
  unsigned int (*v91)(_QWORD *, uint64_t, int *);
  int *v92;
  _QWORD *__dst;
  _QWORD *v94;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C8B0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *(_QWORD *)((char *)v4 + v13) = *(_QWORD *)((char *)a2 + v13);
    v14 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
    *(_QWORD *)((char *)v4 + v14) = *(_QWORD *)((char *)a2 + v14);
    v15 = a3[11];
    *(_QWORD *)((char *)v4 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    *(_QWORD *)((char *)v4 + v15) = *(_QWORD *)((char *)a2 + v15);
    v16 = a3[12];
    v17 = a3[13];
    v18 = a2;
    v19 = *(void **)((char *)a2 + v16);
    *(_QWORD *)((char *)v4 + v16) = v19;
    *(_QWORD *)((char *)v4 + v17) = *(_QWORD *)((char *)v18 + v17);
    v88 = v18;
    v90 = a3;
    v20 = a3[14];
    __dst = (_QWORD *)((char *)v4 + v20);
    v94 = (_QWORD *)((char *)v18 + v20);
    v21 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
    v87 = *((_QWORD *)v21 - 1);
    v91 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v87 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v22 = v19;
    swift_unknownObjectRetain();
    if (v91(v94, 1, v21))
    {
      sub_1BA6DB154(0);
      memcpy(__dst, v94, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      v24 = v88;
      v25 = v90;
    }
    else
    {
      v27 = v94[1];
      *__dst = *v94;
      __dst[1] = v27;
      v28 = v21[5];
      v29 = (_QWORD *)((char *)__dst + v28);
      v30 = (char *)v94 + v28;
      v31 = *(_QWORD *)((char *)v94 + v28 + 8);
      *v29 = *(_QWORD *)((char *)v94 + v28);
      v29[1] = v31;
      v32 = (int *)type metadata accessor for FormatWebEmbed();
      v33 = v32[5];
      v34 = (char *)v29 + v33;
      v85 = &v30[v33];
      v35 = sub_1BB86C67C();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v83 = v37;
      v37(v34, v85, v35);
      v38 = v32[6];
      v39 = (char *)v29 + v38;
      v40 = &v30[v38];
      v81 = v35;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(&v30[v38], 1, v35))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v83(v39, v40, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
      }
      v24 = v88;
      *(_QWORD *)((char *)v29 + v32[7]) = *(_QWORD *)&v30[v32[7]];
      v42 = v32[8];
      v43 = (_QWORD *)((char *)v29 + v42);
      v44 = &v30[v42];
      v45 = *((_QWORD *)v44 + 1);
      *v43 = *(_QWORD *)v44;
      v43[1] = v45;
      v46 = v32[9];
      v47 = (_QWORD *)((char *)v29 + v46);
      v48 = &v30[v46];
      v49 = *((_QWORD *)v48 + 1);
      *v47 = *(_QWORD *)v48;
      v47[1] = v49;
      *(_QWORD *)((char *)v29 + v32[10]) = *(_QWORD *)&v30[v32[10]];
      *(_QWORD *)((char *)v29 + v32[11]) = *(_QWORD *)&v30[v32[11]];
      *(_QWORD *)((char *)v29 + v32[12]) = *(_QWORD *)&v30[v32[12]];
      *(_QWORD *)((char *)__dst + v21[6]) = *(_QWORD *)((char *)v94 + v21[6]);
      *(_QWORD *)((char *)__dst + v21[7]) = *(_QWORD *)((char *)v94 + v21[7]);
      v92 = v21;
      v50 = v21[8];
      v84 = (_QWORD *)((char *)__dst + v50);
      v51 = (_QWORD *)((char *)v94 + v50);
      v52 = type metadata accessor for WebEmbedDataVisualization();
      v82 = *(_QWORD *)(v52 - 8);
      v86 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      v53 = v51;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v86(v51, 1, v52))
      {
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v84, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        v25 = v90;
        v55 = __dst;
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v57 = *v51;
        v25 = v90;
        v55 = __dst;
        if (EnumCaseMultiPayload == 1)
        {
          v58 = v53[1];
          *v84 = v57;
          v84[1] = v58;
          v59 = type metadata accessor for GenericDataVisualization();
          v60 = *(int *)(v59 + 20);
          v61 = (char *)v84 + v60;
          v89 = (char *)v53 + v60;
          swift_bridgeObjectRetain();
          v83(v61, v89, v81);
          *(_QWORD *)((char *)v84 + *(int *)(v59 + 24)) = *(_QWORD *)((char *)v53 + *(int *)(v59 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          *v84 = v57;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v84, 0, 1, v52);
      }
      v62 = v92[9];
      v63 = (char *)v55 + v62;
      v64 = (char *)v94 + v62;
      sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
      v66 = v65;
      v67 = *(_QWORD *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v64, 1, v65))
      {
        sub_1BA6C5ACC(0);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v63, v64, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v63, 0, 1, v66);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v87 + 56))(v55, 0, 1, v92);
    }
    v69 = v25[15];
    v70 = v25[16];
    v71 = *(void **)((char *)v24 + v69);
    *(_QWORD *)((char *)v4 + v69) = v71;
    *((_BYTE *)v4 + v70) = *((_BYTE *)v24 + v70);
    v72 = v25[18];
    *(_QWORD *)((char *)v4 + v25[17]) = *(_QWORD *)((char *)v24 + v25[17]);
    v73 = (char *)v4 + v72;
    v74 = (char *)v24 + v72;
    v75 = sub_1BB871E24();
    v76 = *(_QWORD *)(v75 - 8);
    v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
    v78 = v71;
    swift_bridgeObjectRetain();
    if (v77(v74, 1, v75))
    {
      sub_1BA6D940C(0);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
    }
  }
  return v4;
}

_QWORD *_s8ResolvedVwca_2(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  size_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t (*v49)(void);
  int v50;
  uint64_t v51;
  size_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  int *v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  id v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(char *, uint64_t, uint64_t);
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(_QWORD *, uint64_t, uint64_t);
  int v107;
  int v108;
  uint64_t (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  int EnumCaseMultiPayload;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  _QWORD *v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(char *, uint64_t, uint64_t);
  int v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*__dst)(char *, char *, uint64_t);
  _QWORD *__dsta;
  char *__dstb;
  char *__dstc;
  uint64_t v136;
  _QWORD *v137;
  int *v138;
  uint64_t v139;
  unsigned int (*v140)(_QWORD *, uint64_t, uint64_t);
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *__srca;
  void *__src;
  int *__srcb;
  int *__srcc;
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  _QWORD *v152;
  int *v153;
  int *v154;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v10 = a3[12];
  v11 = *(void **)((char *)a1 + v10);
  v12 = *(void **)((char *)a2 + v10);
  *(_QWORD *)((char *)a1 + v10) = v12;
  v13 = v12;

  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v14 = a3[14];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = type metadata accessor for FormatWebEmbed.Resolved();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      goto LABEL_7;
    }
    *v15 = *v16;
    v15[1] = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v152 = v16;
    v154 = (int *)v17;
    v38 = *(int *)(v17 + 20);
    v150 = v15;
    v39 = (_QWORD *)((char *)v15 + v38);
    v40 = (char *)v16 + v38;
    *v39 = *(_QWORD *)((char *)v16 + v38);
    v39[1] = *(_QWORD *)((char *)v16 + v38 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v41 = (int *)type metadata accessor for FormatWebEmbed();
    v42 = v41[5];
    v43 = (char *)v39 + v42;
    v44 = &v40[v42];
    v45 = sub_1BB86C67C();
    v46 = *(_QWORD *)(v45 - 8);
    __dst = *(void (**)(char *, char *, uint64_t))(v46 + 24);
    __dst(v43, v44, v45);
    v47 = v41[6];
    v48 = &v40[v47];
    v136 = v46;
    v49 = *(uint64_t (**)(void))(v46 + 48);
    v142 = (char *)v39 + v47;
    LODWORD(v46) = v49();
    v139 = v45;
    v50 = ((uint64_t (*)(char *, uint64_t, uint64_t))v49)(v48, 1, v45);
    if ((_DWORD)v46)
    {
      if (v50)
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v52 = *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64);
        v53 = v142;
LABEL_19:
        memcpy(v53, v48, v52);
        goto LABEL_36;
      }
      (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v142, v48, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v142, 0, 1, v45);
    }
    else
    {
      if (v50)
      {
        (*(void (**)(char *, uint64_t))(v136 + 8))(v142, v45);
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v52 = *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64);
        v53 = v142;
        goto LABEL_19;
      }
      __dst(v142, v48, v45);
    }
LABEL_36:
    *(_QWORD *)((char *)v39 + v41[7]) = *(_QWORD *)&v40[v41[7]];
    swift_retain();
    swift_release();
    v95 = v41[8];
    v96 = (_QWORD *)((char *)v39 + v95);
    v97 = &v40[v95];
    *v96 = *(_QWORD *)v97;
    v96[1] = *((_QWORD *)v97 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v98 = v41[9];
    v99 = (_QWORD *)((char *)v39 + v98);
    v100 = &v40[v98];
    *v99 = *(_QWORD *)v100;
    v99[1] = *((_QWORD *)v100 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v39 + v41[10]) = *(_QWORD *)&v40[v41[10]];
    *(_QWORD *)((char *)v39 + v41[11]) = *(_QWORD *)&v40[v41[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v39 + v41[12]) = *(_QWORD *)&v40[v41[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v150 + v154[6]) = *(_QWORD *)((char *)v152 + v154[6]);
    swift_retain();
    swift_release();
    *(_QWORD *)((char *)v150 + v154[7]) = *(_QWORD *)((char *)v152 + v154[7]);
    swift_retain();
    swift_release();
    v101 = v154[8];
    v102 = (_QWORD *)((char *)v150 + v101);
    v103 = (_QWORD *)((char *)v152 + v101);
    v104 = type metadata accessor for WebEmbedDataVisualization();
    v105 = *(_QWORD *)(v104 - 8);
    v106 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v105 + 48);
    v107 = v106(v102, 1, v104);
    v108 = v106(v103, 1, v104);
    if (v107)
    {
      if (!v108)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *v102 = *v103;
        if (EnumCaseMultiPayload == 1)
        {
          v102[1] = v103[1];
          v112 = type metadata accessor for GenericDataVisualization();
          v113 = *(int *)(v112 + 20);
          v143 = (char *)v102 + v113;
          __srcb = (int *)v112;
          __dstb = (char *)v103 + v113;
          v114 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
          swift_bridgeObjectRetain();
          v114(v143, __dstb, v139);
          *(_QWORD *)((char *)v102 + __srcb[6]) = *(_QWORD *)((char *)v103 + __srcb[6]);
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
        goto LABEL_50;
      }
      v109 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    }
    else
    {
      if (!v108)
      {
        v115 = v150;
        if (a1 != a2)
        {
          sub_1BA4A2E80((uint64_t)v102, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          v116 = swift_getEnumCaseMultiPayload();
          *v102 = *v103;
          if (v116 == 1)
          {
            v102[1] = v103[1];
            v117 = type metadata accessor for GenericDataVisualization();
            v118 = *(int *)(v117 + 20);
            v144 = (char *)v102 + v118;
            __srcc = (int *)v117;
            __dstc = (char *)v103 + v118;
            v119 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
            swift_bridgeObjectRetain();
            v119(v144, __dstc, v139);
            *(_QWORD *)((char *)v102 + __srcc[6]) = *(_QWORD *)((char *)v103 + __srcc[6]);
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_51;
      }
      sub_1BA4A2E80((uint64_t)v102, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v109 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    }
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v109);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
LABEL_50:
    v115 = v150;
LABEL_51:
    v120 = v154[9];
    v121 = (char *)v115 + v120;
    v122 = (char *)v152 + v120;
    sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v124 = v123;
    v125 = *(_QWORD *)(v123 - 8);
    v126 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v125 + 48);
    v127 = v126(v121, 1, v123);
    v128 = v126(v122, 1, v124);
    if (v127)
    {
      if (!v128)
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v121, v122, v124);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v121, 0, 1, v124);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v128)
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 24))(v121, v122, v124);
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v125 + 8))(v121, v124);
    }
    sub_1BA6C5ACC(0);
    v35 = *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64);
    v36 = v121;
    v37 = v122;
LABEL_8:
    memcpy(v36, v37, v35);
    goto LABEL_26;
  }
  if (v21)
  {
LABEL_7:
    sub_1BA6DB154(0);
    v35 = *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64);
    v36 = (char *)v15;
    v37 = (char *)v16;
    goto LABEL_8;
  }
  v138 = a3;
  v131 = v18;
  *v15 = *v16;
  v15[1] = v16[1];
  v151 = v16;
  v153 = (int *)v17;
  v22 = *(int *)(v17 + 20);
  v149 = v15;
  v23 = (_QWORD *)((char *)v15 + v22);
  v24 = (char *)v16 + v22;
  *v23 = *(_QWORD *)((char *)v16 + v22);
  v23[1] = *(_QWORD *)((char *)v16 + v22 + 8);
  v25 = (int *)type metadata accessor for FormatWebEmbed();
  v26 = v25[5];
  v141 = &v24[v26];
  __srca = (char *)v23 + v26;
  v27 = sub_1BB86C67C();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(__srca, v141, v27);
  v30 = v25[6];
  v31 = (char *)v23 + v30;
  v32 = &v24[v30];
  v130 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(&v24[v30], 1, v27))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v29(v31, v32, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
  }
  a3 = v138;
  *(_QWORD *)((char *)v23 + v25[7]) = *(_QWORD *)&v24[v25[7]];
  v54 = v25[8];
  v55 = (_QWORD *)((char *)v23 + v54);
  v56 = &v24[v54];
  *v55 = *(_QWORD *)v56;
  v55[1] = *((_QWORD *)v56 + 1);
  v57 = v25[9];
  v58 = (_QWORD *)((char *)v23 + v57);
  v59 = &v24[v57];
  *v58 = *(_QWORD *)v59;
  v58[1] = *((_QWORD *)v59 + 1);
  *(_QWORD *)((char *)v23 + v25[10]) = *(_QWORD *)&v24[v25[10]];
  *(_QWORD *)((char *)v23 + v25[11]) = *(_QWORD *)&v24[v25[11]];
  *(_QWORD *)((char *)v23 + v25[12]) = *(_QWORD *)&v24[v25[12]];
  *(_QWORD *)((char *)v149 + v153[6]) = *(_QWORD *)((char *)v151 + v153[6]);
  *(_QWORD *)((char *)v149 + v153[7]) = *(_QWORD *)((char *)v151 + v153[7]);
  v60 = v153[8];
  __dsta = (_QWORD *)((char *)v149 + v60);
  v137 = (_QWORD *)((char *)v151 + v60);
  v61 = type metadata accessor for WebEmbedDataVisualization();
  v62 = *(_QWORD **)(v61 - 8);
  v140 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v62[6];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v140(v137, 1, v61))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dsta, v137, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    v65 = v149;
    v64 = v151;
    v66 = v153;
    v67 = v131;
  }
  else
  {
    __src = v62;
    v68 = swift_getEnumCaseMultiPayload();
    *__dsta = *v137;
    if (v68 == 1)
    {
      __dsta[1] = v137[1];
      v69 = type metadata accessor for GenericDataVisualization();
      v70 = *(int *)(v69 + 20);
      v71 = (char *)__dsta + v70;
      v72 = (char *)v137 + v70;
      swift_bridgeObjectRetain();
      v29(v71, v72, v130);
      *(_QWORD *)((char *)__dsta + *(int *)(v69 + 24)) = *(_QWORD *)((char *)v137 + *(int *)(v69 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    v65 = v149;
    v64 = v151;
    v67 = v131;
    swift_storeEnumTagMultiPayload();
    (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__src + 7))(__dsta, 0, 1, v61);
    v66 = v153;
  }
  v74 = v66[9];
  v75 = (char *)v65 + v74;
  v76 = (char *)v64 + v74;
  sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v78 = v77;
  v79 = *(_QWORD *)(v77 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v76, 1, v77))
  {
    sub_1BA6C5ACC(0);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v75, v76, v78);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v75, 0, 1, v78);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v67 + 56))(v65, 0, 1, v153);
LABEL_26:
  v81 = a3[15];
  v82 = *(void **)((char *)a1 + v81);
  v83 = *(void **)((char *)a2 + v81);
  *(_QWORD *)((char *)a1 + v81) = v83;
  v84 = v83;

  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v85 = a3[18];
  v86 = (char *)a1 + v85;
  v87 = (char *)a2 + v85;
  v88 = sub_1BB871E24();
  v89 = *(_QWORD *)(v88 - 8);
  v90 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
  v91 = v90(v86, 1, v88);
  v92 = v90(v87, 1, v88);
  if (!v91)
  {
    if (!v92)
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 24))(v86, v87, v88);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v88);
    goto LABEL_31;
  }
  if (v92)
  {
LABEL_31:
    sub_1BA6D940C(0);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
  return a1;
}

_OWORD *_s8ResolvedVwtk_1(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v54)(char *, char *, uint64_t);
  _OWORD *v55;
  uint64_t v56;
  _OWORD *v57;
  char *__dsta;
  char *__dst;
  int *v60;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  v12 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v13 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  v14 = a3[14];
  v15 = (_OWORD *)((char *)a1 + v14);
  v16 = (_OWORD *)((char *)a2 + v14);
  v17 = type metadata accessor for FormatWebEmbed.Resolved();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1BA6DB154(0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v56 = v18;
    v57 = v15;
    *v15 = *v16;
    v60 = (int *)v17;
    v20 = *(int *)(v17 + 20);
    v21 = (_OWORD *)((char *)v15 + v20);
    v55 = v16;
    v22 = (char *)v16 + v20;
    *v21 = *(_OWORD *)((char *)v16 + v20);
    v23 = (int *)type metadata accessor for FormatWebEmbed();
    v24 = v23[5];
    __dsta = (char *)v21 + v24;
    v25 = &v22[v24];
    v26 = sub_1BB86C67C();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v28(__dsta, v25, v26);
    v29 = v23[6];
    __dst = (char *)v21 + v29;
    v30 = &v22[v29];
    v54 = v28;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(&v22[v29], 1, v26))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v28(__dst, v30, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
    }
    *(_QWORD *)((char *)v21 + v23[7]) = *(_QWORD *)&v22[v23[7]];
    *(_OWORD *)((char *)v21 + v23[8]) = *(_OWORD *)&v22[v23[8]];
    *(_OWORD *)((char *)v21 + v23[9]) = *(_OWORD *)&v22[v23[9]];
    *(_QWORD *)((char *)v21 + v23[10]) = *(_QWORD *)&v22[v23[10]];
    *(_QWORD *)((char *)v21 + v23[11]) = *(_QWORD *)&v22[v23[11]];
    *(_QWORD *)((char *)v21 + v23[12]) = *(_QWORD *)&v22[v23[12]];
    *(_QWORD *)((char *)v57 + v60[6]) = *(_QWORD *)((char *)v55 + v60[6]);
    *(_QWORD *)((char *)v57 + v60[7]) = *(_QWORD *)((char *)v55 + v60[7]);
    v32 = v60[8];
    v33 = (_OWORD *)((char *)v57 + v32);
    v34 = (_OWORD *)((char *)v55 + v32);
    v35 = type metadata accessor for WebEmbedDataVisualization();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v33 = *v34;
        v38 = type metadata accessor for GenericDataVisualization();
        v54((char *)v33 + *(int *)(v38 + 20), (char *)v34 + *(int *)(v38 + 20), v26);
        *(_QWORD *)((char *)v33 + *(int *)(v38 + 24)) = *(_QWORD *)((char *)v34 + *(int *)(v38 + 24));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v33, v34, *(_QWORD *)(v36 + 64));
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v39 = v60[9];
    v40 = (char *)v57 + v39;
    v41 = (char *)v55 + v39;
    sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v43 = v42;
    v44 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v41, 1, v42))
    {
      sub_1BA6C5ACC(0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v40, v41, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v40, 0, 1, v43);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v56 + 56))(v57, 0, 1, v60);
  }
  v46 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *((_BYTE *)a1 + v46) = *((_BYTE *)a2 + v46);
  v47 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = sub_1BB871E24();
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    sub_1BA6D940C(0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  return a1;
}

_QWORD *_s8ResolvedVwta_2(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, int *);
  int v19;
  int v20;
  uint64_t v21;
  _OWORD *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  size_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  size_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(char *, uint64_t, uint64_t);
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(char *, uint64_t, uint64_t);
  int v111;
  int v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  void (*v115)(char *, char *, uint64_t);
  uint64_t v116;
  int *v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  char *__dstb;
  char *__dst;
  char *__dstc;
  char *__dsta;
  _QWORD *v125;
  _QWORD *v126;
  _QWORD *v127;
  _QWORD *v128;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_unknownObjectRelease();
  v11 = a3[12];
  v12 = *(void **)((char *)a1 + v11);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);

  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_unknownObjectRelease();
  v13 = a3[14];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      goto LABEL_7;
    }
    v37 = v15[1];
    *v14 = *v15;
    v14[1] = v37;
    swift_bridgeObjectRelease();
    v38 = v16[5];
    v126 = v14;
    v128 = v15;
    v39 = (char *)v14 + v38;
    v40 = (char *)v15 + v38;
    v41 = *(_QWORD *)((char *)v15 + v38 + 8);
    *(_QWORD *)v39 = *(_QWORD *)((char *)v15 + v38);
    *((_QWORD *)v39 + 1) = v41;
    swift_bridgeObjectRelease();
    v42 = type metadata accessor for FormatWebEmbed();
    v43 = *(int *)(v42 + 20);
    __dstc = &v39[v43];
    v44 = &v40[v43];
    v45 = sub_1BB86C67C();
    v46 = *(_QWORD *)(v45 - 8);
    v114 = *(void (**)(char *, char *, uint64_t))(v46 + 40);
    v114(__dstc, v44, v45);
    v120 = (int *)v42;
    __dsta = v40;
    v47 = *(int *)(v42 + 24);
    v48 = &v39[v47];
    v49 = &v40[v47];
    v116 = v46;
    v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
    LODWORD(v40) = v50(&v39[v47], 1, v45);
    v118 = v45;
    v51 = v50(v49, 1, v45);
    if ((_DWORD)v40)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v48, v49, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v48, 0, 1, v45);
        goto LABEL_20;
      }
    }
    else
    {
      if (!v51)
      {
        v114(v48, v49, v45);
LABEL_20:
        *(_QWORD *)&v39[v120[7]] = *(_QWORD *)&__dsta[v120[7]];
        swift_release();
        v61 = v120[8];
        v62 = &v39[v61];
        v63 = &__dsta[v61];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        *(_QWORD *)v62 = v65;
        *((_QWORD *)v62 + 1) = v64;
        swift_bridgeObjectRelease();
        v66 = v120[9];
        v67 = &v39[v66];
        v68 = &__dsta[v66];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        *(_QWORD *)v67 = v70;
        *((_QWORD *)v67 + 1) = v69;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v39[v120[10]] = *(_QWORD *)&__dsta[v120[10]];
        *(_QWORD *)&v39[v120[11]] = *(_QWORD *)&__dsta[v120[11]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&v39[v120[12]] = *(_QWORD *)&__dsta[v120[12]];
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v126 + v16[6]) = *(_QWORD *)((char *)v128 + v16[6]);
        swift_release();
        *(_QWORD *)((char *)v126 + v16[7]) = *(_QWORD *)((char *)v128 + v16[7]);
        swift_release();
        v71 = v16[8];
        v72 = (char *)v126 + v71;
        v73 = (char *)v128 + v71;
        v74 = type metadata accessor for WebEmbedDataVisualization();
        v75 = *(_QWORD *)(v74 - 8);
        v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
        v77 = v76(v72, 1, v74);
        v78 = v76(v73, 1, v74);
        if (v77)
        {
          if (!v78)
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *(_OWORD *)v72 = *(_OWORD *)v73;
              v102 = type metadata accessor for GenericDataVisualization();
              (*(void (**)(char *, char *, uint64_t))(v116 + 32))(&v72[*(int *)(v102 + 20)], &v73[*(int *)(v102 + 20)], v118);
              *(_QWORD *)&v72[*(int *)(v102 + 24)] = *(_QWORD *)&v73[*(int *)(v102 + 24)];
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v72, v73, *(_QWORD *)(v75 + 64));
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
            goto LABEL_49;
          }
          v79 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
        }
        else
        {
          if (!v78)
          {
            if (a1 == a2)
              goto LABEL_49;
            sub_1BA4A2E80((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *(_OWORD *)v72 = *(_OWORD *)v73;
              v103 = type metadata accessor for GenericDataVisualization();
              (*(void (**)(char *, char *, uint64_t))(v116 + 32))(&v72[*(int *)(v103 + 20)], &v73[*(int *)(v103 + 20)], v118);
              *(_QWORD *)&v72[*(int *)(v103 + 24)] = *(_QWORD *)&v73[*(int *)(v103 + 24)];
              swift_storeEnumTagMultiPayload();
              goto LABEL_49;
            }
            v81 = *(_QWORD *)(v75 + 64);
LABEL_26:
            memcpy(v72, v73, v81);
LABEL_49:
            v104 = v16[9];
            v105 = (char *)v126 + v104;
            v106 = (char *)v128 + v104;
            sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
            v108 = v107;
            v109 = *(_QWORD *)(v107 - 8);
            v110 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 48);
            v111 = v110(v105, 1, v107);
            v112 = v110(v106, 1, v108);
            if (v111)
            {
              if (!v112)
              {
                (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v105, v106, v108);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v105, 0, 1, v108);
                goto LABEL_33;
              }
            }
            else
            {
              if (!v112)
              {
                (*(void (**)(char *, char *, uint64_t))(v109 + 40))(v105, v106, v108);
                goto LABEL_33;
              }
              (*(void (**)(char *, uint64_t))(v109 + 8))(v105, v108);
            }
            sub_1BA6C5ACC(0);
            v34 = *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64);
            v35 = v105;
            v36 = v106;
LABEL_8:
            memcpy(v35, v36, v34);
            goto LABEL_33;
          }
          sub_1BA4A2E80((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          v79 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
        }
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v79);
        v81 = *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64);
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v116 + 8))(v48, v45);
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_20;
  }
  if (v20)
  {
LABEL_7:
    sub_1BA6DB154(0);
    v34 = *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64);
    v35 = (char *)v14;
    v36 = (char *)v15;
    goto LABEL_8;
  }
  v117 = v16;
  v119 = v17;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v21 = v16[5];
  v125 = v14;
  v127 = v15;
  v22 = (_OWORD *)((char *)v14 + v21);
  v23 = (char *)v15 + v21;
  *v22 = *(_OWORD *)((char *)v15 + v21);
  v24 = (int *)type metadata accessor for FormatWebEmbed();
  v25 = v24[5];
  __dstb = (char *)v22 + v25;
  v26 = &v23[v25];
  v27 = sub_1BB86C67C();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v29(__dstb, v26, v27);
  v30 = v24[6];
  __dst = (char *)v22 + v30;
  v31 = &v23[v30];
  v115 = v29;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(&v23[v30], 1, v27))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v29(__dst, v31, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
  }
  *(_QWORD *)((char *)v22 + v24[7]) = *(_QWORD *)&v23[v24[7]];
  *(_OWORD *)((char *)v22 + v24[8]) = *(_OWORD *)&v23[v24[8]];
  *(_OWORD *)((char *)v22 + v24[9]) = *(_OWORD *)&v23[v24[9]];
  *(_QWORD *)((char *)v22 + v24[10]) = *(_QWORD *)&v23[v24[10]];
  *(_QWORD *)((char *)v22 + v24[11]) = *(_QWORD *)&v23[v24[11]];
  *(_QWORD *)((char *)v22 + v24[12]) = *(_QWORD *)&v23[v24[12]];
  *(_QWORD *)((char *)v125 + v117[6]) = *(_QWORD *)((char *)v127 + v117[6]);
  *(_QWORD *)((char *)v125 + v117[7]) = *(_QWORD *)((char *)v127 + v117[7]);
  v52 = v117[8];
  v53 = (_OWORD *)((char *)v125 + v52);
  v54 = (_OWORD *)((char *)v127 + v52);
  v55 = type metadata accessor for WebEmbedDataVisualization();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    v58 = v125;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v53 = *v54;
      v59 = type metadata accessor for GenericDataVisualization();
      v115((char *)v53 + *(int *)(v59 + 20), (char *)v54 + *(int *)(v59 + 20), v27);
      *(_QWORD *)((char *)v53 + *(int *)(v59 + 24)) = *(_QWORD *)((char *)v54 + *(int *)(v59 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v53, v54, *(_QWORD *)(v56 + 64));
    }
    v58 = v125;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  v82 = v117[9];
  v83 = (char *)v58 + v82;
  v84 = (char *)v127 + v82;
  sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v86 = v85;
  v87 = *(_QWORD *)(v85 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v84, 1, v85))
  {
    sub_1BA6C5ACC(0);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v83, v84, v86);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v83, 0, 1, v86);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v119 + 56))(v58, 0, 1, v117);
LABEL_33:
  v89 = a3[15];
  v90 = *(void **)((char *)a1 + v89);
  *(_QWORD *)((char *)a1 + v89) = *(_QWORD *)((char *)a2 + v89);

  v91 = a3[17];
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  *(_QWORD *)((char *)a1 + v91) = *(_QWORD *)((char *)a2 + v91);
  swift_bridgeObjectRelease();
  v92 = a3[18];
  v93 = (char *)a1 + v92;
  v94 = (char *)a2 + v92;
  v95 = sub_1BB871E24();
  v96 = *(_QWORD *)(v95 - 8);
  v97 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v96 + 48);
  v98 = v97(v93, 1, v95);
  v99 = v97(v94, 1, v95);
  if (!v98)
  {
    if (!v99)
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 40))(v93, v94, v95);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v95);
    goto LABEL_38;
  }
  if (v99)
  {
LABEL_38:
    sub_1BA6D940C(0);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v93, v94, v95);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
  return a1;
}

uint64_t sub_1BB1481E0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C8B0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      sub_1BA6DB154(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[14];
      }
      else
      {
        sub_1BA6D940C(0);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a3[18];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BB1482A4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1BB86C8B0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      sub_1BA6DB154(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[14];
      }
      else
      {
        sub_1BA6D940C(0);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[18];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t _s8ResolvedV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1BB1483B0 + 4 * byte_1BB8EE936[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1BB1483E4 + 4 * byte_1BB8EE931[v4]))();
}

uint64_t sub_1BB1483E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1483EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1483F4);
  return result;
}

uint64_t sub_1BB148400(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB148408);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1BB14840C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB148414(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8ResolvedV10CodingKeysOMa()
{
  return &_s8ResolvedV10CodingKeysON;
}

unint64_t sub_1BB148434()
{
  unint64_t result;

  result = qword_1EF2BBD90;
  if (!qword_1EF2BBD90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EEB6C, &_s8ResolvedV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2BBD90);
  }
  return result;
}

uint64_t sub_1BB148478()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xF)
    return 15;
  else
    return v0;
}

void sub_1BB1484C0(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3B0490, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE690], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB1484DC(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2C8DE0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB1484F8(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B2858, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB148518()
{
  return 8;
}

_QWORD *sub_1BB148524(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BB148534()
{
  return 8;
}

uint64_t sub_1BB148540()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t sub_1BB148554(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4AD288(0, &qword_1EF2BBD98, (uint64_t)&type metadata for HGroupLayoutContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1BB1485A8(const void *a1, void *a2)
{
  __swift_memcpy393_8(a2, a1);
  return a2;
}

uint64_t LayeredMediaViewProvider.view(for:filters:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA4C576C(0, &qword_1ED3D4438);
  sub_1BB86EC14();
  swift_retain();
  v4 = (void *)sub_1BB86E854();
  sub_1BA4C576C(0, &qword_1ED39DA08);
  sub_1BB86E974();
  swift_release();
  swift_release();

  v5 = (void *)sub_1BB86DE94();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  type metadata accessor for LayeredMediaView(0);
  swift_retain();
  swift_bridgeObjectRetain();
  v7 = sub_1BB86E974();
  swift_release();

  swift_release();
  return v7;
}

uint64_t sub_1BB14871C()
{
  return LayeredMediaLayerProvider.layers()();
}

uint64_t sub_1BB148744()
{
  return LayeredMediaLayerProvider.layers()();
}

uint64_t sub_1BB148768@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  swift_retain();
  v4 = sub_1BA8FAEA0(v3);
  result = swift_release();
  *a2 = v4;
  return result;
}

char *sub_1BB1487C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, char **a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  char *result;

  v6 = *a1;
  v7 = a2[5];
  v8 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  v11 = v10;
  type metadata accessor for LayeredMediaViewModel();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v9;
  v12[3] = v11;
  v12[4] = v6;
  v12[5] = a3;
  v13 = objc_allocWithZone((Class)type metadata accessor for LayeredMediaView(0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1BB6326D0((uint64_t)v12);
  *a4 = result;
  return result;
}

uint64_t sub_1BB148884()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t LayeredMediaViewProvider.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t LayeredMediaViewProvider.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for LayeredMediaViewProvider()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1BB1489A4()
{
  unint64_t result;

  result = qword_1ED3D05D8;
  if (!qword_1ED3D05D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSystemColor, &type metadata for FormatSystemColor);
    atomic_store(result, (unint64_t *)&qword_1ED3D05D8);
  }
  return result;
}

uint64_t sub_1BB1489E8()
{
  sub_1BB8745CC();
  FormatSystemColor.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB148A4C()
{
  FormatSystemColor.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB148A9C()
{
  sub_1BB8745CC();
  FormatSystemColor.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB148AFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatSystemColor.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1BB148B20(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB148B4C();
  result = sub_1BA58B980();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB148B4C()
{
  unint64_t result;

  result = qword_1EF2BBDA0;
  if (!qword_1EF2BBDA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSystemColor, &type metadata for FormatSystemColor);
    atomic_store(result, (unint64_t *)&qword_1EF2BBDA0);
  }
  return result;
}

uint64_t sub_1BB148B90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7FF950(*a1, *a2);
}

unint64_t sub_1BB148B9C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAE886B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB148BC0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA62045C();
  a1[2] = sub_1BA5ED28C();
  result = sub_1BB1489A4();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatSystemColor()
{
  return &type metadata for FormatSystemColor;
}

void sub_1BB148C04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double v5;
  float v6;
  double v7;
  id v8;
  double v9;
  uint64_t v10;

  v3 = *(_QWORD *)v1;
  if (!*(_BYTE *)(v1 + 8))
  {
    sub_1BB86DD80();
    v5 = sub_1BA72BED4(v10, v3);
    swift_release();
    if (v2)
      return;
    v6 = v5;
    goto LABEL_10;
  }
  if (*(_BYTE *)(v1 + 8) != 1)
  {
    v7 = sub_1BB47FCD8(a1, *(_QWORD *)v1);
    if (v2)
      return;
    v6 = v7;
LABEL_10:
    v8 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    *(float *)&v9 = v6;
    objc_msgSend(v8, sel_initWithFloat_, v9);
    return;
  }
  sub_1BB86DD80();
  v4 = sub_1BA728610(v10, v3);
  swift_release();
  if (!v2)
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v4);
}

uint64_t sub_1BB148D24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatNumber.init(from:)(a1, a2);
}

uint64_t sub_1BB148D38(_QWORD *a1)
{
  return FormatNumber.encode(to:)(a1);
}

uint64_t _s8NewsFeed12FormatNumberO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 v8;
  unsigned int v9;

  v2 = *(_QWORD *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(_QWORD *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    if (!*(_BYTE *)(a2 + 8))
    {
      sub_1BA93DAE4(*(_QWORD *)a2, 0);
      sub_1BA93DAE4(v2, 0);
      sub_1BA93DAE4(v2, 0);
      sub_1BA93DAE4(v4, 0);
      v6 = sub_1BA881EAC(v2, v4);
      sub_1BA93DB08(v2, 0);
      sub_1BA93DB08(v4, 0);
      sub_1BA93DB08(v4, 0);
      v7 = v2;
      v8 = 0;
      goto LABEL_16;
    }
    goto LABEL_6;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      sub_1BA93DAE4(*(_QWORD *)a2, 1u);
      sub_1BA93DAE4(v2, 1u);
      sub_1BA93DAE4(v2, 1u);
      sub_1BA93DAE4(v4, 1u);
      LOBYTE(v6) = sub_1BA882E70(v2, v4);
      sub_1BA93DB08(v2, 1u);
      sub_1BA93DB08(v4, 1u);
      sub_1BA93DB08(v4, 1u);
      v7 = v2;
      v8 = 1;
LABEL_16:
      sub_1BA93DB08(v7, v8);
      return v6 & 1;
    }
LABEL_6:
    swift_bridgeObjectRetain();
LABEL_13:
    sub_1BA93DAE4(v4, v5);
    sub_1BA93DB08(v2, v3);
    sub_1BA93DB08(v4, v5);
    return 0;
  }
  if (v5 != 2)
    goto LABEL_13;
  sub_1BA93DB08(*(_QWORD *)a1, 2u);
  sub_1BA93DB08(v4, 2u);
  v9 = ((char)v2 >> 5) & 3;
  if (v9)
  {
    if (v9 == 1)
    {
      if ((v4 & 0x60) != 0x20 || ((v4 ^ v2) & 0x9FLL) != 0)
        return 0;
    }
    else
    {
      if ((v4 & 0x60) != 0x40)
        return 0;
      if ((char)v2 < 0)
      {
        if ((v4 & 0x80) == 0 || ((v4 ^ v2) & 0x1F) != 0)
          return 0;
      }
      else if ((v4 & 0x80) != 0 || ((v4 ^ v2) & 1) != 0)
      {
        return 0;
      }
    }
  }
  else if ((v4 & 0x60) != 0 || ((v4 ^ v2) & 1) != 0)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1BB148F58(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB148F7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB148F7C()
{
  unint64_t result;

  result = qword_1EF2BBDA8;
  if (!qword_1EF2BBDA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumber, &type metadata for FormatNumber);
    atomic_store(result, (unint64_t *)&qword_1EF2BBDA8);
  }
  return result;
}

unint64_t sub_1BB148FC0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE73108();
  a1[2] = sub_1BAEFB0CC();
  result = sub_1BB148FF4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB148FF4()
{
  unint64_t result;

  result = qword_1EF2BBDB0;
  if (!qword_1EF2BBDB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumber, &type metadata for FormatNumber);
    atomic_store(result, (unint64_t *)&qword_1EF2BBDB0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA93DAE4(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithCopy for FormatNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA93DAE4(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA93DB08(v5, v6);
  return a1;
}

uint64_t assignWithTake for FormatNumber(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BA93DB08(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for FormatNumber()
{
  return &type metadata for FormatNumber;
}

uint64_t FormatVideoGravity.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x7341657A69736572;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x657A69736572;
}

NewsFeed::FormatVideoGravity_optional __swiftcall FormatVideoGravity.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatVideoGravity_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BB1491D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB8019F0(*a1, *a2);
}

uint64_t sub_1BB1491E4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB14928C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB149310()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatVideoGravity_optional sub_1BB1493B4(Swift::String *a1)
{
  return FormatVideoGravity.init(rawValue:)(*a1);
}

void sub_1BB1493C0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xEC00000074636570;
  v5 = 0x7341657A69736572;
  if (v2 != 1)
  {
    v5 = 0xD000000000000010;
    v4 = 0x80000001BB95C730;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x657A69736572;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB149428()
{
  sub_1BB1495B4();
  return sub_1BB872D60();
}

uint64_t sub_1BB149484(_QWORD *a1)
{
  return FormatVideoGravity.encode(to:)(a1);
}

uint64_t FormatVideoGravity.description.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x7341657A69736572;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x657A69736572;
}

unint64_t sub_1BB149500()
{
  unint64_t result;

  result = qword_1EF2BBDB8;
  if (!qword_1EF2BBDB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoGravity, &type metadata for FormatVideoGravity);
    atomic_store(result, (unint64_t *)&qword_1EF2BBDB8);
  }
  return result;
}

unint64_t sub_1BB149544(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB149570();
  result = sub_1BB1495B4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB149570()
{
  unint64_t result;

  result = qword_1EF2BBDC0;
  if (!qword_1EF2BBDC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoGravity, &type metadata for FormatVideoGravity);
    atomic_store(result, (unint64_t *)&qword_1EF2BBDC0);
  }
  return result;
}

unint64_t sub_1BB1495B4()
{
  unint64_t result;

  result = qword_1EF2BBDC8;
  if (!qword_1EF2BBDC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoGravity, &type metadata for FormatVideoGravity);
    atomic_store(result, (unint64_t *)&qword_1EF2BBDC8);
  }
  return result;
}

unint64_t sub_1BB1495F8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB14961C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB14961C()
{
  unint64_t result;

  result = qword_1EF2BBDD0;
  if (!qword_1EF2BBDD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoGravity, &type metadata for FormatVideoGravity);
    atomic_store(result, (unint64_t *)&qword_1EF2BBDD0);
  }
  return result;
}

unint64_t sub_1BB149660(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE7AE1C();
  a1[2] = sub_1BAEF84CC();
  result = sub_1BB149500();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB149694()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x7341657A69736572;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x657A69736572;
}

uint64_t storeEnumTagSinglePayload for FormatVideoGravity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB149744 + 4 * byte_1BB8EF035[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB149778 + 4 * byte_1BB8EF030[v4]))();
}

uint64_t sub_1BB149778(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB149780(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB149788);
  return result;
}

uint64_t sub_1BB149794(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB14979CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB1497A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1497A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoGravity()
{
  return &type metadata for FormatVideoGravity;
}

void sub_1BB1497C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for FormatOption();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BB186044(v7, (uint64_t)v10);
      if (v2)
        break;
      sub_1BB1498F0((uint64_t)v10);
      v2 = 0;
      sub_1BAA736BC((uint64_t)v10);
      v12 += v13;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB1498F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  int v45;
  char v46;

  sub_1BA4A3FB4(0, &qword_1EF2A99E8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - v8;
  v10 = type metadata accessor for FormatDerivedDataOption();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v41 = (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v1 + 56;
  swift_beginAccess();
  v15 = *(_QWORD *)(v1 + 56);
  v16 = *(_QWORD *)(v15 + 16);
  v43 = v2;
  if (!v16)
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
LABEL_7:
    sub_1BA502AD0((uint64_t)v9, &qword_1EF2A99E8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
    swift_endAccess();
    v21 = *(_QWORD *)a1;
    v22 = *(_QWORD *)(a1 + 8);
    sub_1BA4C2DD8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    v19(v6, 0, 1, v10);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BB4A9F64((uint64_t)v6, v21, v22);
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  v40 = v13;
  v17 = sub_1BA6E35A8(v13, v14);
  if ((v18 & 1) != 0)
  {
    sub_1BA4C2DD8(*(_QWORD *)(v15 + 56) + *(_QWORD *)(v11 + 72) * v17, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 0, 1, v10);
  }
  else
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
  }
  v20 = v40;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    goto LABEL_7;
  v24 = v41;
  sub_1BA5193C4((uint64_t)v9, v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
  swift_endAccess();
  if (*(_BYTE *)(v24 + 40) || *(_BYTE *)(a1 + 40))
    goto LABEL_14;
  v25 = *(_QWORD *)(a1 + 16);
  v45 = *(unsigned __int8 *)(v24 + 16);
  v44 = v45;
  v39 = v25;
  v46 = v25;
  v26 = FormatOptionType.rawValue.getter();
  v28 = v27;
  if (v26 == FormatOptionType.rawValue.getter() && v28 == v29)
  {
    swift_bridgeObjectRelease_n();
    v20 = v40;
LABEL_14:
    sub_1BA4C2DD8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    v19(v6, 0, 1, v10);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BB4A9F64((uint64_t)v6, v20, v14);
    swift_endAccess();
    return sub_1BAA736BC(v24);
  }
  v30 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v40;
  if ((v30 & 1) != 0)
    goto LABEL_14;
  type metadata accessor for FormatDerivedDataError();
  sub_1BA87DD80();
  swift_allocError();
  v32 = v31;
  v33 = v24;
  v34 = *(_QWORD *)v24;
  v35 = *(_QWORD *)(v33 + 8);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9E48, (uint64_t)&type metadata for FormatOptionType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_BYTE *)(inited + 32) = v39;
  swift_bridgeObjectRetain();
  v37 = sub_1BA862600(inited);
  swift_setDeallocating();
  *(_QWORD *)v32 = v34;
  *(_QWORD *)(v32 + 8) = v35;
  *(_BYTE *)(v32 + 16) = v45;
  *(_QWORD *)(v32 + 24) = v37;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return sub_1BAA736BC(v33);
}

uint64_t sub_1BB149D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - v6;
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(unsigned __int8 *)(a1 + 16);
  v11 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v11 + 16))
  {
    v17 = type metadata accessor for FormatDerivedDataFile();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
LABEL_7:
    sub_1BA502AD0((uint64_t)v7, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    *(_QWORD *)v18 = v8;
    *(_QWORD *)(v18 + 8) = v9;
    *(_BYTE *)(v18 + 16) = v10;
    swift_storeEnumTagMultiPayload();
    sub_1BA987528(v8, v9, v10);
    return swift_willThrow();
  }
  sub_1BA987528(v8, v9, v10);
  v12 = sub_1BB4AB4B4(v8, v9, v10);
  if ((v13 & 1) != 0)
  {
    v14 = v12;
    v21 = *(_QWORD *)(v11 + 56);
    v15 = type metadata accessor for FormatDerivedDataFile();
    v16 = *(_QWORD *)(v15 - 8);
    sub_1BA4C2DD8(v21 + *(_QWORD *)(v16 + 72) * v14, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v15);
  }
  else
  {
    v15 = type metadata accessor for FormatDerivedDataFile();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
  }
  sub_1BA986FA0(v8, v9, v10);
  type metadata accessor for FormatDerivedDataFile();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v7, 1, v15) == 1)
    goto LABEL_7;
  return sub_1BA5193C4((uint64_t)v7, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
}

uint64_t sub_1BB149F3C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  _OWORD v70[8];
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _QWORD v79[2];
  __int128 v80;
  uint64_t v81;
  int v82;
  __int16 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  __int16 v90;
  _BYTE v91[136];

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 48);
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v7 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  *((_QWORD *)&v66 + 1) = v7;
  v8 = sub_1BA6E35A8(v7, v6);
  if ((v9 & 1) == 0)
  {
LABEL_43:
    swift_bridgeObjectRelease();
LABEL_44:
    swift_endAccess();
    goto LABEL_45;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v8);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = *(_QWORD *)(v10 + 16);
  if (v63)
  {
    *(_QWORD *)&v66 = v6;
    v59 = a2;
    v60 = a1;
    v11 = 0;
    v61 = v10;
    v62 = v10 + 32;
    while (1)
    {
      v69 = v11;
      v12 = (__int128 *)(v62 + (v11 << 7));
      v14 = v12[2];
      v13 = v12[3];
      v15 = v12[1];
      v71 = *v12;
      v72 = v15;
      v73 = v14;
      v74 = v13;
      v16 = v12[4];
      v17 = v12[5];
      v18 = v12[7];
      v77 = v12[6];
      v78 = v18;
      v75 = v16;
      v76 = v17;
      v19 = *((_QWORD *)&v15 + 1);
      v67 = v15;
      v20 = v73;
      v21 = v74;
      a2 = WORD6(v74);
      v22 = DWORD2(v74);
      v64 = *((_QWORD *)&v16 + 1);
      v23 = v16;
      if (__PAIR128__(v71, *((unint64_t *)&v71 + 1)) == v66
        || (v24 = v74,
            v25 = v16,
            v26 = *((_QWORD *)&v72 + 1),
            v27 = sub_1BB874398(),
            v19 = v26,
            v21 = v24,
            v23 = v25,
            (v27 & 1) != 0))
      {
        v28 = v22 | (a2 << 32);
        v30 = v60[2];
        v29 = v60[3];
        v31 = v60[4];
        v32 = v60[5];
        v33 = v60[6];
        v34 = *((unsigned int *)v60 + 14) | ((unint64_t)*((unsigned __int16 *)v60 + 30) << 32);
        v36 = v60[8];
        v35 = v60[9];
        if (((v28 >> 41) & 0x7F) == 0x7F)
        {
          if (((v34 >> 41) & 0x7F) != 0x7F)
            goto LABEL_11;
LABEL_13:
          v40 = *(_QWORD *)(v23 + 16);
          if (v40 != *(_QWORD *)(v36 + 16))
            goto LABEL_40;
          v41 = v35;
          if (!v40 || v23 == v36)
          {
            sub_1BAF020A4((uint64_t)&v71);
          }
          else
          {
            v68 = v23;
            v42 = *(_QWORD *)(v23 + 32);
            sub_1BAF020A4((uint64_t)&v71);
            swift_retain();
            swift_retain();
            sub_1BAA736F8(v42);
            a2 = v43;
            swift_release();
            result = swift_release();
            if ((a2 & 1) == 0)
              goto LABEL_39;
            if (v40 != 1)
            {
              if (*(_QWORD *)(v68 + 16) < 2uLL)
              {
LABEL_51:
                __break(1u);
                return result;
              }
              v45 = *(_QWORD *)(v68 + 40);
              swift_retain();
              swift_retain();
              sub_1BAA736F8(v45);
              a2 = v46;
              swift_release();
              result = swift_release();
              if ((a2 & 1) != 0)
              {
                v47 = 0;
                v48 = v40 - 2;
                v49 = v68;
                while (v48 != v47)
                {
                  if ((unint64_t)(v47 + 2) >= *(_QWORD *)(v49 + 16))
                  {
                    __break(1u);
                    goto LABEL_51;
                  }
                  v50 = *(_QWORD *)(v68 + 48 + 8 * v47);
                  swift_retain();
                  swift_retain();
                  sub_1BAA736F8(v50);
                  a2 = v51;
                  swift_release();
                  result = swift_release();
                  v49 = v68;
                  ++v47;
                  if ((a2 & 1) == 0)
                    goto LABEL_39;
                }
                goto LABEL_26;
              }
LABEL_39:
              sub_1BAF0218C((uint64_t)&v71);
              goto LABEL_40;
            }
          }
LABEL_26:
          a2 = *(_QWORD *)(v64 + 16);
          if (a2 == *(_QWORD *)(v41 + 16))
          {
            v70[4] = v75;
            v70[5] = v76;
            v70[6] = v77;
            v70[7] = v78;
            v70[0] = v71;
            v70[1] = v72;
            v70[2] = v73;
            v70[3] = v74;
            nullsub_1();
            if (!a2 || v64 == v41)
            {
LABEL_49:
              swift_bridgeObjectRelease();
              sub_1BB14A76C((uint64_t)v70, (uint64_t)v91);
              a2 = v59;
              return sub_1BB14A76C((uint64_t)v91, a2);
            }
            v52 = (uint64_t *)(v41 + 56);
            v53 = (uint64_t *)(v64 + 56);
            while (1)
            {
              v55 = *(v53 - 1);
              v54 = *v53;
              v57 = *(v52 - 1);
              v56 = *v52;
              v58 = *(v53 - 3) == *(v52 - 3) && *(v53 - 2) == *(v52 - 2);
              if (!v58 && (sub_1BB874398() & 1) == 0 || v55 != v57 || v54 != v56)
                break;
              v52 += 4;
              v53 += 4;
              if (!--a2)
                goto LABEL_49;
            }
          }
          goto LABEL_39;
        }
        if (((v34 >> 41) & 0x7F) == 0x7F)
        {
LABEL_11:
          a2 = v21;
          v65 = v19;
          sub_1BA8EBBDC(v67, v19, v20, *((uint64_t *)&v20 + 1), v21, v28);
          sub_1BA8EBBDC(v30, v29, v31, v32, v33, v34);
          sub_1BA8EBC64(v67, v65, v20, *((uint64_t *)&v20 + 1), a2, v28);
          sub_1BA8EBC64(v30, v29, v31, v32, v33, v34);
          goto LABEL_40;
        }
        v79[0] = v67;
        v79[1] = v19;
        v80 = v20;
        v81 = v21;
        v82 = v28;
        v83 = WORD2(v28);
        v84 = v30;
        v85 = v29;
        v86 = v31;
        v87 = v32;
        v88 = v33;
        v89 = v34;
        v90 = WORD2(v34);
        a2 = v35;
        v37 = v23;
        v38 = v36;
        sub_1BB82AAB8((uint64_t)v79);
        v36 = v38;
        v23 = v37;
        v35 = a2;
        if ((v39 & 1) != 0)
          goto LABEL_13;
      }
LABEL_40:
      v11 = v69 + 1;
      if (v69 + 1 == v63)
      {
        swift_bridgeObjectRelease();
        a2 = v59;
        goto LABEL_45;
      }
      if (v11 >= *(_QWORD *)(v61 + 16))
      {
        __break(1u);
        goto LABEL_43;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_45:
  sub_1BA8EBB18(&v71);
  sub_1BB14A76C((uint64_t)&v71, (uint64_t)v91);
  return sub_1BB14A76C((uint64_t)v91, a2);
}

uint64_t sub_1BB14A458(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;

  v4 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = (uint64_t *)(v1 + 48);
  swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain();
  if (v7 && (v8 = sub_1BA6E35A8(v4, v3), (v9 & 1) != 0))
  {
    v10 = *(_QWORD **)(*(_QWORD *)(v6 + 56) + 8 * v8);
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1BAF020A4(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_1BB3909A8(0, v10[2] + 1, 1, v10);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_1BB3909A8((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v12 + 1;
  v13 = &v10[16 * v12];
  v14 = *(_OWORD *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v16 = *(_OWORD *)(a1 + 48);
  v13[4] = *(_OWORD *)(a1 + 32);
  v13[5] = v16;
  v13[2] = v14;
  v13[3] = v15;
  v17 = *(_OWORD *)(a1 + 64);
  v18 = *(_OWORD *)(a1 + 80);
  v19 = *(_OWORD *)(a1 + 112);
  v13[8] = *(_OWORD *)(a1 + 96);
  v13[9] = v19;
  v13[6] = v17;
  v13[7] = v18;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v22 = *v5;
  *v5 = 0x8000000000000000;
  sub_1BB4BF1B8((uint64_t)v10, v4, v3, isUniquelyReferenced_nonNull_native);
  *v5 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

